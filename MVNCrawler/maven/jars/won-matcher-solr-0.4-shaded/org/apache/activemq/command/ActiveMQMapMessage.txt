Compiled from "ActiveMQMapMessage.java"
public class org.apache.activemq.command.ActiveMQMapMessage extends org.apache.activemq.command.ActiveMQMessage implements javax.jms.MapMessage {
  public static final byte DATA_STRUCTURE_TYPE;

  protected transient java.util.Map<java.lang.String, java.lang.Object> map;

  public org.apache.activemq.command.ActiveMQMapMessage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/Map;
      15: return

  private java.lang.Object readResolve() throws java.io.ObjectStreamException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/Map;
       4: ifnonnull     18
       7: aload_0
       8: new           #2                  // class java/util/HashMap
      11: dup
      12: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      15: putfield      #4                  // Field map:Ljava/util/Map;
      18: aload_0
      19: areturn

  public org.apache.activemq.command.Message copy();
    Code:
       0: new           #5                  // class org/apache/activemq/command/ActiveMQMapMessage
       3: dup
       4: invokespecial #6                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #7                  // Method copy:(Lorg/apache/activemq/command/ActiveMQMapMessage;)V
      13: aload_1
      14: areturn

  private void copy(org.apache.activemq.command.ActiveMQMapMessage);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method storeContent:()V
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method org/apache/activemq/command/ActiveMQMessage.copy:(Lorg/apache/activemq/command/ActiveMQMessage;)V
       9: return

  public void beforeMarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method org/apache/activemq/command/ActiveMQMessage.beforeMarshall:(Lorg/apache/activemq/wireformat/WireFormat;)V
       5: aload_0
       6: invokevirtual #8                  // Method storeContent:()V
       9: return

  public void clearMarshalledState() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/apache/activemq/command/ActiveMQMessage.clearMarshalledState:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public void storeContentAndClear();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method storeContent:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public void storeContent();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
       4: ifnonnull     91
       7: aload_0
       8: getfield      #4                  // Field map:Ljava/util/Map;
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifne          91
      19: new           #15                 // class org/apache/activemq/util/ByteArrayOutputStream
      22: dup
      23: invokespecial #16                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      26: astore_1
      27: aload_1
      28: astore_2
      29: aload_0
      30: invokevirtual #17                 // Method getConnection:()Lorg/apache/activemq/ActiveMQConnection;
      33: astore_3
      34: aload_3
      35: ifnull        59
      38: aload_3
      39: invokevirtual #18                 // Method org/apache/activemq/ActiveMQConnection.isUseCompression:()Z
      42: ifeq          59
      45: aload_0
      46: iconst_1
      47: putfield      #19                 // Field compressed:Z
      50: new           #20                 // class java/util/zip/DeflaterOutputStream
      53: dup
      54: aload_2
      55: invokespecial #21                 // Method java/util/zip/DeflaterOutputStream."<init>":(Ljava/io/OutputStream;)V
      58: astore_2
      59: new           #22                 // class java/io/DataOutputStream
      62: dup
      63: aload_2
      64: invokespecial #23                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      67: astore        4
      69: aload_0
      70: getfield      #4                  // Field map:Ljava/util/Map;
      73: aload         4
      75: invokestatic  #24                 // Method org/apache/activemq/util/MarshallingSupport.marshalPrimitiveMap:(Ljava/util/Map;Ljava/io/DataOutputStream;)V
      78: aload         4
      80: invokevirtual #25                 // Method java/io/DataOutputStream.close:()V
      83: aload_0
      84: aload_1
      85: invokevirtual #26                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      88: invokevirtual #27                 // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
      91: goto          104
      94: astore_1
      95: new           #29                 // class java/lang/RuntimeException
      98: dup
      99: aload_1
     100: invokespecial #30                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     103: athrow
     104: return
    Exception table:
       from    to  target type
           0    91    94   Class java/io/IOException

  private void loadContent() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
       4: ifnull        70
       7: aload_0
       8: getfield      #4                  // Field map:Ljava/util/Map;
      11: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      16: ifeq          70
      19: aload_0
      20: invokevirtual #13                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
      23: astore_1
      24: new           #31                 // class org/apache/activemq/util/ByteArrayInputStream
      27: dup
      28: aload_1
      29: invokespecial #32                 // Method org/apache/activemq/util/ByteArrayInputStream."<init>":(Lorg/apache/activemq/util/ByteSequence;)V
      32: astore_2
      33: aload_0
      34: invokevirtual #33                 // Method isCompressed:()Z
      37: ifeq          49
      40: new           #34                 // class java/util/zip/InflaterInputStream
      43: dup
      44: aload_2
      45: invokespecial #35                 // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;)V
      48: astore_2
      49: new           #36                 // class java/io/DataInputStream
      52: dup
      53: aload_2
      54: invokespecial #37                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      57: astore_3
      58: aload_0
      59: aload_3
      60: invokestatic  #38                 // Method org/apache/activemq/util/MarshallingSupport.unmarshalPrimitiveMap:(Ljava/io/DataInputStream;)Ljava/util/Map;
      63: putfield      #4                  // Field map:Ljava/util/Map;
      66: aload_3
      67: invokevirtual #39                 // Method java/io/DataInputStream.close:()V
      70: goto          79
      73: astore_1
      74: aload_1
      75: invokestatic  #40                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      78: athrow
      79: return
    Exception table:
       from    to  target type
           0    70    73   Class java/io/IOException

  public byte getDataStructureType();
    Code:
       0: bipush        25
       2: ireturn

  public java.lang.String getJMSXMimeType();
    Code:
       0: ldc           #41                 // String jms/map-message
       2: areturn

  public void clearBody() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/activemq/command/ActiveMQMessage.clearBody:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: invokeinterface #12,  1           // InterfaceMethod java/util/Map.clear:()V
      13: return

  public boolean getBoolean(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_2
      22: instanceof    #45                 // class java/lang/Boolean
      25: ifeq          36
      28: aload_2
      29: checkcast     #45                 // class java/lang/Boolean
      32: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      35: ireturn
      36: aload_2
      37: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      40: ifeq          54
      43: aload_2
      44: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokestatic  #49                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      50: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      53: ireturn
      54: aload_2
      55: instanceof    #50                 // class java/lang/String
      58: ifeq          72
      61: aload_2
      62: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokestatic  #49                 // Method java/lang/Boolean.valueOf:(Ljava/lang/String;)Ljava/lang/Boolean;
      68: invokevirtual #46                 // Method java/lang/Boolean.booleanValue:()Z
      71: ireturn
      72: new           #51                 // class javax/jms/MessageFormatException
      75: dup
      76: new           #52                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #54                 // String  cannot read a boolean from
      85: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     104: athrow

  public byte getByte(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_2
      22: instanceof    #60                 // class java/lang/Byte
      25: ifeq          36
      28: aload_2
      29: checkcast     #60                 // class java/lang/Byte
      32: invokevirtual #61                 // Method java/lang/Byte.byteValue:()B
      35: ireturn
      36: aload_2
      37: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      40: ifeq          54
      43: aload_2
      44: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokestatic  #62                 // Method java/lang/Byte.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;
      50: invokevirtual #61                 // Method java/lang/Byte.byteValue:()B
      53: ireturn
      54: aload_2
      55: instanceof    #50                 // class java/lang/String
      58: ifeq          72
      61: aload_2
      62: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokestatic  #62                 // Method java/lang/Byte.valueOf:(Ljava/lang/String;)Ljava/lang/Byte;
      68: invokevirtual #61                 // Method java/lang/Byte.byteValue:()B
      71: ireturn
      72: new           #51                 // class javax/jms/MessageFormatException
      75: dup
      76: new           #52                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #63                 // String  cannot read a byte from
      85: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     104: athrow

  public short getShort(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_2
      22: instanceof    #64                 // class java/lang/Short
      25: ifeq          36
      28: aload_2
      29: checkcast     #64                 // class java/lang/Short
      32: invokevirtual #65                 // Method java/lang/Short.shortValue:()S
      35: ireturn
      36: aload_2
      37: instanceof    #60                 // class java/lang/Byte
      40: ifeq          51
      43: aload_2
      44: checkcast     #60                 // class java/lang/Byte
      47: invokevirtual #66                 // Method java/lang/Byte.shortValue:()S
      50: ireturn
      51: aload_2
      52: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      55: ifeq          69
      58: aload_2
      59: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      62: invokestatic  #67                 // Method java/lang/Short.valueOf:(Ljava/lang/String;)Ljava/lang/Short;
      65: invokevirtual #65                 // Method java/lang/Short.shortValue:()S
      68: ireturn
      69: aload_2
      70: instanceof    #50                 // class java/lang/String
      73: ifeq          87
      76: aload_2
      77: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      80: invokestatic  #67                 // Method java/lang/Short.valueOf:(Ljava/lang/String;)Ljava/lang/Short;
      83: invokevirtual #65                 // Method java/lang/Short.shortValue:()S
      86: ireturn
      87: new           #51                 // class javax/jms/MessageFormatException
      90: dup
      91: new           #52                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #68                 // String  cannot read a short from
     100: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_2
     104: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     107: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
     110: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     119: athrow

  public char getChar(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     27
      19: new           #69                 // class java/lang/NullPointerException
      22: dup
      23: invokespecial #70                 // Method java/lang/NullPointerException."<init>":()V
      26: athrow
      27: aload_2
      28: instanceof    #71                 // class java/lang/Character
      31: ifeq          42
      34: aload_2
      35: checkcast     #71                 // class java/lang/Character
      38: invokevirtual #72                 // Method java/lang/Character.charValue:()C
      41: ireturn
      42: new           #51                 // class javax/jms/MessageFormatException
      45: dup
      46: new           #52                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #68                 // String  cannot read a short from
      55: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      65: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
      74: athrow

  public int getInt(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: iconst_0
      20: ireturn
      21: aload_2
      22: instanceof    #73                 // class java/lang/Integer
      25: ifeq          36
      28: aload_2
      29: checkcast     #73                 // class java/lang/Integer
      32: invokevirtual #74                 // Method java/lang/Integer.intValue:()I
      35: ireturn
      36: aload_2
      37: instanceof    #64                 // class java/lang/Short
      40: ifeq          51
      43: aload_2
      44: checkcast     #64                 // class java/lang/Short
      47: invokevirtual #75                 // Method java/lang/Short.intValue:()I
      50: ireturn
      51: aload_2
      52: instanceof    #60                 // class java/lang/Byte
      55: ifeq          66
      58: aload_2
      59: checkcast     #60                 // class java/lang/Byte
      62: invokevirtual #76                 // Method java/lang/Byte.intValue:()I
      65: ireturn
      66: aload_2
      67: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      70: ifeq          84
      73: aload_2
      74: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      77: invokestatic  #77                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      80: invokevirtual #74                 // Method java/lang/Integer.intValue:()I
      83: ireturn
      84: aload_2
      85: instanceof    #50                 // class java/lang/String
      88: ifeq          102
      91: aload_2
      92: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      95: invokestatic  #77                 // Method java/lang/Integer.valueOf:(Ljava/lang/String;)Ljava/lang/Integer;
      98: invokevirtual #74                 // Method java/lang/Integer.intValue:()I
     101: ireturn
     102: new           #51                 // class javax/jms/MessageFormatException
     105: dup
     106: new           #52                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #78                 // String  cannot read an int from
     115: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload_2
     119: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     122: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
     125: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     131: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     134: athrow

  public long getLong(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: lconst_0
      20: lreturn
      21: aload_2
      22: instanceof    #79                 // class java/lang/Long
      25: ifeq          36
      28: aload_2
      29: checkcast     #79                 // class java/lang/Long
      32: invokevirtual #80                 // Method java/lang/Long.longValue:()J
      35: lreturn
      36: aload_2
      37: instanceof    #73                 // class java/lang/Integer
      40: ifeq          51
      43: aload_2
      44: checkcast     #73                 // class java/lang/Integer
      47: invokevirtual #81                 // Method java/lang/Integer.longValue:()J
      50: lreturn
      51: aload_2
      52: instanceof    #64                 // class java/lang/Short
      55: ifeq          66
      58: aload_2
      59: checkcast     #64                 // class java/lang/Short
      62: invokevirtual #82                 // Method java/lang/Short.longValue:()J
      65: lreturn
      66: aload_2
      67: instanceof    #60                 // class java/lang/Byte
      70: ifeq          81
      73: aload_2
      74: checkcast     #60                 // class java/lang/Byte
      77: invokevirtual #83                 // Method java/lang/Byte.longValue:()J
      80: lreturn
      81: aload_2
      82: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      85: ifeq          99
      88: aload_2
      89: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      92: invokestatic  #84                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      95: invokevirtual #80                 // Method java/lang/Long.longValue:()J
      98: lreturn
      99: aload_2
     100: instanceof    #50                 // class java/lang/String
     103: ifeq          117
     106: aload_2
     107: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
     110: invokestatic  #84                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
     113: invokevirtual #80                 // Method java/lang/Long.longValue:()J
     116: lreturn
     117: new           #51                 // class javax/jms/MessageFormatException
     120: dup
     121: new           #52                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #85                 // String  cannot read a long from
     130: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_2
     134: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     137: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
     140: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     149: athrow

  public float getFloat(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: fconst_0
      20: freturn
      21: aload_2
      22: instanceof    #86                 // class java/lang/Float
      25: ifeq          36
      28: aload_2
      29: checkcast     #86                 // class java/lang/Float
      32: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      35: freturn
      36: aload_2
      37: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      40: ifeq          54
      43: aload_2
      44: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      47: invokestatic  #88                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      50: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      53: freturn
      54: aload_2
      55: instanceof    #50                 // class java/lang/String
      58: ifeq          72
      61: aload_2
      62: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokestatic  #88                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      68: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      71: freturn
      72: new           #51                 // class javax/jms/MessageFormatException
      75: dup
      76: new           #52                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #89                 // String  cannot read a float from
      85: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_2
      89: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      92: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      95: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     104: athrow

  public double getDouble(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: dconst_0
      20: dreturn
      21: aload_2
      22: instanceof    #90                 // class java/lang/Double
      25: ifeq          36
      28: aload_2
      29: checkcast     #90                 // class java/lang/Double
      32: invokevirtual #91                 // Method java/lang/Double.doubleValue:()D
      35: dreturn
      36: aload_2
      37: instanceof    #86                 // class java/lang/Float
      40: ifeq          52
      43: aload_2
      44: checkcast     #86                 // class java/lang/Float
      47: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      50: f2d
      51: dreturn
      52: aload_2
      53: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      56: ifeq          71
      59: aload_2
      60: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      63: invokestatic  #88                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      66: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      69: f2d
      70: dreturn
      71: aload_2
      72: instanceof    #50                 // class java/lang/String
      75: ifeq          90
      78: aload_2
      79: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      82: invokestatic  #88                 // Method java/lang/Float.valueOf:(Ljava/lang/String;)Ljava/lang/Float;
      85: invokevirtual #87                 // Method java/lang/Float.floatValue:()F
      88: f2d
      89: dreturn
      90: new           #51                 // class javax/jms/MessageFormatException
      93: dup
      94: new           #52                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     101: ldc           #92                 // String  cannot read a double from
     103: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: aload_2
     107: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
     113: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     122: athrow

  public java.lang.String getString(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload_2
      22: instanceof    #93                 // class "[B"
      25: ifeq          38
      28: new           #51                 // class javax/jms/MessageFormatException
      31: dup
      32: ldc           #94                 // String Use getBytes to read a byte array
      34: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_2
      39: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      42: areturn

  public byte[] getBytes(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: instanceof    #93                 // class "[B"
      19: ifeq          30
      22: aload_2
      23: checkcast     #93                 // class "[B"
      26: checkcast     #93                 // class "[B"
      29: areturn
      30: new           #51                 // class javax/jms/MessageFormatException
      33: dup
      34: new           #52                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #95                 // String  cannot read a byte[] from
      43: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_2
      47: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #59                 // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
      62: athrow

  public java.lang.Object getObject(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #44,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: instanceof    #47                 // class org/fusesource/hawtbuf/UTF8Buffer
      19: ifeq          27
      22: aload_2
      23: invokevirtual #48                 // Method java/lang/Object.toString:()Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: areturn

  public java.util.Enumeration<java.lang.String> getMapNames() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: invokeinterface #96,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokestatic  #97                 // Method java/util/Collections.enumeration:(Ljava/util/Collection;)Ljava/util/Enumeration;
      16: areturn

  protected void put(java.lang.String, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #98                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #99                 // String The name of the property cannot be null.
      10: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_1
      15: invokevirtual #101                // Method java/lang/String.length:()I
      18: ifne          31
      21: new           #98                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #102                // String The name of the property cannot be an emprty string.
      27: invokespecial #100                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_0
      32: getfield      #4                  // Field map:Ljava/util/Map;
      35: aload_1
      36: aload_2
      37: invokeinterface #103,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return

  public void setBoolean(java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: ifeq          16
      10: getstatic     #105                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      13: goto          19
      16: getstatic     #106                // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      19: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      22: return

  public void setByte(java.lang.String, byte) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokestatic  #108                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
      10: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setShort(java.lang.String, short) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokestatic  #109                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
      10: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setChar(java.lang.String, char) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokestatic  #110                // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      10: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setInt(java.lang.String, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: invokestatic  #111                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      10: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setLong(java.lang.String, long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: lload_2
       7: invokestatic  #112                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      10: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setFloat(java.lang.String, float) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: new           #86                 // class java/lang/Float
       9: dup
      10: fload_2
      11: invokespecial #113                // Method java/lang/Float."<init>":(F)V
      14: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      17: return

  public void setDouble(java.lang.String, double) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: new           #90                 // class java/lang/Double
       9: dup
      10: dload_2
      11: invokespecial #114                // Method java/lang/Double."<init>":(D)V
      14: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      17: return

  public void setString(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      10: return

  public void setBytes(java.lang.String, byte[]) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_2
       5: ifnull        17
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      14: goto          28
      17: aload_0
      18: getfield      #4                  // Field map:Ljava/util/Map;
      21: aload_1
      22: invokeinterface #115,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setBytes(java.lang.String, byte[], int, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: iload         4
       6: newarray       byte
       8: astore        5
      10: aload_2
      11: iload_3
      12: aload         5
      14: iconst_0
      15: iload         4
      17: invokestatic  #116                // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      20: aload_0
      21: aload_1
      22: aload         5
      24: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      27: return

  public void setObject(java.lang.String, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #104                // Method initializeWriting:()V
       4: aload_2
       5: ifnull        29
       8: aload_2
       9: instanceof    #93                 // class "[B"
      12: ifne          20
      15: aload_0
      16: aload_2
      17: invokevirtual #117                // Method checkValidObject:(Ljava/lang/Object;)V
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      26: goto          35
      29: aload_0
      30: aload_1
      31: aconst_null
      32: invokevirtual #107                // Method put:(Ljava/lang/String;Ljava/lang/Object;)V
      35: return

  public boolean itemExists(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #118,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      14: ireturn

  private void initializeReading() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #119                // Method loadContent:()V
       4: return

  private void initializeWriting() throws javax.jms.MessageNotWriteableException;
    Code:
       0: aload_0
       1: invokevirtual #120                // Method checkReadOnlyBody:()V
       4: aload_0
       5: aconst_null
       6: invokevirtual #27                 // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
       9: return

  public void compress() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method storeContent:()V
       4: aload_0
       5: invokespecial #121                // Method org/apache/activemq/command/ActiveMQMessage.compress:()V
       8: return

  public java.lang.String toString();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #122                // Method org/apache/activemq/command/ActiveMQMessage.toString:()Ljava/lang/String;
      11: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #123                // String  ActiveMQMapMessage{
      16: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #124                // String theTable =
      21: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field map:Ljava/util/Map;
      28: invokevirtual #125                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #126                // String  }
      33: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getContentMap() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #43                 // Method initializeReading:()V
       4: aload_0
       5: getfield      #4                  // Field map:Ljava/util/Map;
       8: areturn
}
