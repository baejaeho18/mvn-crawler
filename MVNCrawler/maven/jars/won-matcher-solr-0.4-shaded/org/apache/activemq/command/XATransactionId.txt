Compiled from "XATransactionId.java"
public class org.apache.activemq.command.XATransactionId extends org.apache.activemq.command.TransactionId implements javax.transaction.xa.Xid,java.lang.Comparable {
  public static final byte DATA_STRUCTURE_TYPE;

  private int formatId;

  private byte[] branchQualifier;

  private byte[] globalTransactionId;

  private transient org.apache.activemq.util.DataByteArrayOutputStream outputStream;

  private transient byte[] encodedXidBytes;

  private transient int hash;

  private transient java.lang.String transactionKey;

  private transient java.util.ArrayList<org.apache.activemq.command.MessageAck> preparedAcks;

  final int XID_PREFIX_SIZE;

  public org.apache.activemq.command.XATransactionId();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/TransactionId."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #2                  // Field XID_PREFIX_SIZE:I
      10: return

  public org.apache.activemq.command.XATransactionId(javax.transaction.xa.Xid);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/TransactionId."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #2                  // Field XID_PREFIX_SIZE:I
      10: aload_0
      11: aload_1
      12: invokeinterface #3,  1            // InterfaceMethod javax/transaction/xa/Xid.getFormatId:()I
      17: putfield      #4                  // Field formatId:I
      20: aload_0
      21: aload_1
      22: invokeinterface #5,  1            // InterfaceMethod javax/transaction/xa/Xid.getGlobalTransactionId:()[B
      27: putfield      #6                  // Field globalTransactionId:[B
      30: aload_0
      31: aload_1
      32: invokeinterface #7,  1            // InterfaceMethod javax/transaction/xa/Xid.getBranchQualifier:()[B
      37: putfield      #8                  // Field branchQualifier:[B
      40: return

  public org.apache.activemq.command.XATransactionId(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/TransactionId."<init>":()V
       4: aload_0
       5: bipush        16
       7: putfield      #2                  // Field XID_PREFIX_SIZE:I
      10: aload_0
      11: aload_1
      12: putfield      #9                  // Field encodedXidBytes:[B
      15: aload_0
      16: invokespecial #10                 // Method initFromEncodedBytes:()V
      19: return

  public byte getDataStructureType();
    Code:
       0: bipush        112
       2: ireturn

  private void initFromEncodedBytes() throws java.io.IOException;
    Code:
       0: new           #11                 // class org/apache/activemq/util/DataByteArrayInputStream
       3: dup
       4: aload_0
       5: getfield      #9                  // Field encodedXidBytes:[B
       8: invokespecial #12                 // Method org/apache/activemq/util/DataByteArrayInputStream."<init>":([B)V
      11: astore_1
      12: aload_1
      13: bipush        10
      15: invokevirtual #13                 // Method org/apache/activemq/util/DataByteArrayInputStream.skipBytes:(I)I
      18: pop
      19: aload_0
      20: aload_1
      21: invokevirtual #14                 // Method org/apache/activemq/util/DataByteArrayInputStream.readInt:()I
      24: putfield      #4                  // Field formatId:I
      27: aload_1
      28: invokevirtual #15                 // Method org/apache/activemq/util/DataByteArrayInputStream.readShort:()S
      31: istore_2
      32: aload_0
      33: iload_2
      34: newarray       byte
      36: putfield      #6                  // Field globalTransactionId:[B
      39: aload_1
      40: aload_0
      41: getfield      #6                  // Field globalTransactionId:[B
      44: invokevirtual #16                 // Method org/apache/activemq/util/DataByteArrayInputStream.read:([B)I
      47: pop
      48: aload_0
      49: aload_1
      50: invokevirtual #17                 // Method org/apache/activemq/util/DataByteArrayInputStream.available:()I
      53: newarray       byte
      55: putfield      #8                  // Field branchQualifier:[B
      58: aload_1
      59: aload_0
      60: getfield      #8                  // Field branchQualifier:[B
      63: invokevirtual #16                 // Method org/apache/activemq/util/DataByteArrayInputStream.read:([B)I
      66: pop
      67: goto          99
      70: astore_3
      71: new           #19                 // class java/lang/RuntimeException
      74: dup
      75: new           #20                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      82: aload_0
      83: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #23                 // String , failed to decode:
      88: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: aload_3
      95: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      98: athrow
      99: return
    Exception table:
       from    to  target type
          39    67    70   Class java/io/IOException

  public synchronized byte[] getEncodedXidBytes();
    Code:
       0: aload_0
       1: getfield      #9                  // Field encodedXidBytes:[B
       4: ifnonnull     129
       7: aload_0
       8: new           #27                 // class org/apache/activemq/util/DataByteArrayOutputStream
      11: dup
      12: bipush        16
      14: aload_0
      15: getfield      #6                  // Field globalTransactionId:[B
      18: arraylength
      19: iadd
      20: aload_0
      21: getfield      #8                  // Field branchQualifier:[B
      24: arraylength
      25: iadd
      26: invokespecial #28                 // Method org/apache/activemq/util/DataByteArrayOutputStream."<init>":(I)V
      29: putfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      32: aload_0
      33: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      36: bipush        10
      38: invokevirtual #30                 // Method org/apache/activemq/util/DataByteArrayOutputStream.position:(I)V
      41: aload_0
      42: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      45: aload_0
      46: getfield      #4                  // Field formatId:I
      49: invokevirtual #31                 // Method org/apache/activemq/util/DataByteArrayOutputStream.writeInt:(I)V
      52: aload_0
      53: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      56: aload_0
      57: getfield      #6                  // Field globalTransactionId:[B
      60: arraylength
      61: invokevirtual #32                 // Method org/apache/activemq/util/DataByteArrayOutputStream.writeShort:(I)V
      64: aload_0
      65: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      68: aload_0
      69: getfield      #6                  // Field globalTransactionId:[B
      72: invokevirtual #33                 // Method org/apache/activemq/util/DataByteArrayOutputStream.write:([B)V
      75: aload_0
      76: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
      79: aload_0
      80: getfield      #8                  // Field branchQualifier:[B
      83: invokevirtual #33                 // Method org/apache/activemq/util/DataByteArrayOutputStream.write:([B)V
      86: goto          118
      89: astore_1
      90: new           #19                 // class java/lang/RuntimeException
      93: dup
      94: new           #20                 // class java/lang/StringBuilder
      97: dup
      98: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
     101: aload_0
     102: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #34                 // String , failed to encode:
     107: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: aload_1
     114: invokespecial #26                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     117: athrow
     118: aload_0
     119: aload_0
     120: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
     123: invokevirtual #35                 // Method org/apache/activemq/util/DataByteArrayOutputStream.getData:()[B
     126: putfield      #9                  // Field encodedXidBytes:[B
     129: aload_0
     130: getfield      #9                  // Field encodedXidBytes:[B
     133: areturn
    Exception table:
       from    to  target type
          64    86    89   Class java/io/IOException

  public org.apache.activemq.util.DataByteArrayOutputStream internalOutputStream();
    Code:
       0: aload_0
       1: getfield      #29                 // Field outputStream:Lorg/apache/activemq/util/DataByteArrayOutputStream;
       4: areturn

  public synchronized java.lang.String getTransactionKey();
    Code:
       0: aload_0
       1: getfield      #36                 // Field transactionKey:Ljava/lang/String;
       4: ifnonnull     103
       7: new           #37                 // class java/lang/StringBuffer
      10: dup
      11: invokespecial #38                 // Method java/lang/StringBuffer."<init>":()V
      14: astore_1
      15: aload_1
      16: new           #20                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #39                 // String XID:[
      25: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #4                  // Field formatId:I
      32: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: ldc           #41                 // String ,globalId=
      37: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      46: pop
      47: aload_1
      48: aload_0
      49: aload_0
      50: getfield      #4                  // Field formatId:I
      53: aload_0
      54: getfield      #6                  // Field globalTransactionId:[B
      57: invokespecial #43                 // Method stringForm:(I[B)Ljava/lang/String;
      60: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      63: pop
      64: aload_1
      65: ldc           #44                 // String ,branchId=
      67: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      70: pop
      71: aload_1
      72: aload_0
      73: aload_0
      74: getfield      #4                  // Field formatId:I
      77: aload_0
      78: getfield      #8                  // Field branchQualifier:[B
      81: invokespecial #43                 // Method stringForm:(I[B)Ljava/lang/String;
      84: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      87: pop
      88: aload_1
      89: ldc           #45                 // String ]
      91: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      94: pop
      95: aload_0
      96: aload_1
      97: invokevirtual #46                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     100: putfield      #36                 // Field transactionKey:Ljava/lang/String;
     103: aload_0
     104: getfield      #36                 // Field transactionKey:Ljava/lang/String;
     107: areturn

  private java.lang.String stringForm(int, byte[]);
    Code:
       0: new           #37                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuffer."<init>":()V
       7: astore_3
       8: iload_1
       9: lookupswitch  { // 1
                131077: 28
               default: 37
          }
      28: aload_0
      29: aload_3
      30: aload_2
      31: invokespecial #47                 // Method stringFormArj:(Ljava/lang/StringBuffer;[B)V
      34: goto          43
      37: aload_0
      38: aload_3
      39: aload_2
      40: invokespecial #48                 // Method stringFormDefault:(Ljava/lang/StringBuffer;[B)V
      43: aload_3
      44: invokevirtual #46                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      47: areturn

  private void stringFormDefault(java.lang.StringBuffer, byte[]);
    Code:
       0: iconst_0
       1: istore_3
       2: iload_3
       3: aload_2
       4: arraylength
       5: if_icmpge     25
       8: aload_1
       9: aload_2
      10: iload_3
      11: baload
      12: invokestatic  #49                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      15: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      18: pop
      19: iinc          3, 1
      22: goto          2
      25: return

  private void stringFormArj(java.lang.StringBuffer, byte[]);
    Code:
       0: new           #11                 // class org/apache/activemq/util/DataByteArrayInputStream
       3: dup
       4: aload_2
       5: invokespecial #12                 // Method org/apache/activemq/util/DataByteArrayInputStream."<init>":([B)V
       8: astore_3
       9: aload_1
      10: aload_3
      11: invokevirtual #50                 // Method org/apache/activemq/util/DataByteArrayInputStream.readLong:()J
      14: bipush        16
      16: invokestatic  #51                 // Method java/lang/Long.toString:(JI)Ljava/lang/String;
      19: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      22: pop
      23: aload_1
      24: bipush        58
      26: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      29: pop
      30: aload_1
      31: aload_3
      32: invokevirtual #50                 // Method org/apache/activemq/util/DataByteArrayInputStream.readLong:()J
      35: bipush        16
      37: invokestatic  #51                 // Method java/lang/Long.toString:(JI)Ljava/lang/String;
      40: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      43: pop
      44: aload_1
      45: bipush        58
      47: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      50: pop
      51: aload_1
      52: aload_3
      53: invokevirtual #14                 // Method org/apache/activemq/util/DataByteArrayInputStream.readInt:()I
      56: bipush        16
      58: invokestatic  #53                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      61: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      64: pop
      65: aload_1
      66: bipush        58
      68: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      71: pop
      72: aload_1
      73: aload_3
      74: invokevirtual #14                 // Method org/apache/activemq/util/DataByteArrayInputStream.readInt:()I
      77: bipush        16
      79: invokestatic  #53                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;
      82: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: pop
      86: aload_1
      87: bipush        58
      89: invokevirtual #52                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
      92: pop
      93: aload_1
      94: aload_3
      95: invokevirtual #14                 // Method org/apache/activemq/util/DataByteArrayInputStream.readInt:()I
      98: bipush        16
     100: invokestatic  #53                 // Method java/lang/Integer.toString:(II)Ljava/lang/String;
     103: invokevirtual #42                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     106: pop
     107: goto          117
     110: astore_3
     111: aload_0
     112: aload_1
     113: aload_2
     114: invokespecial #48                 // Method stringFormDefault:(Ljava/lang/StringBuffer;[B)V
     117: return
    Exception table:
       from    to  target type
           0   107   110   Class java/lang/Exception

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method getTransactionKey:()Ljava/lang/String;
       4: areturn

  public boolean isXATransaction();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isLocalTransaction();
    Code:
       0: iconst_0
       1: ireturn

  public int getFormatId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field formatId:I
       4: ireturn

  public byte[] getGlobalTransactionId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field globalTransactionId:[B
       4: areturn

  public byte[] getBranchQualifier();
    Code:
       0: aload_0
       1: getfield      #8                  // Field branchQualifier:[B
       4: areturn

  public void setBranchQualifier(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field branchQualifier:[B
       5: aload_0
       6: iconst_0
       7: putfield      #56                 // Field hash:I
      10: return

  public void setFormatId(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field formatId:I
       5: aload_0
       6: iconst_0
       7: putfield      #56                 // Field hash:I
      10: return

  public void setGlobalTransactionId(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field globalTransactionId:[B
       5: aload_0
       6: iconst_0
       7: putfield      #56                 // Field hash:I
      10: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #56                 // Field hash:I
       4: ifne          58
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field formatId:I
      12: putfield      #56                 // Field hash:I
      15: aload_0
      16: aload_0
      17: getfield      #6                  // Field globalTransactionId:[B
      20: aload_0
      21: getfield      #56                 // Field hash:I
      24: invokestatic  #57                 // Method hash:([BI)I
      27: putfield      #56                 // Field hash:I
      30: aload_0
      31: aload_0
      32: getfield      #8                  // Field branchQualifier:[B
      35: aload_0
      36: getfield      #56                 // Field hash:I
      39: invokestatic  #57                 // Method hash:([BI)I
      42: putfield      #56                 // Field hash:I
      45: aload_0
      46: getfield      #56                 // Field hash:I
      49: ifne          58
      52: aload_0
      53: ldc           #58                 // int 11332302
      55: putfield      #56                 // Field hash:I
      58: aload_0
      59: getfield      #56                 // Field hash:I
      62: ireturn

  private static int hash(byte[], int);
    Code:
       0: aload_0
       1: arraylength
       2: istore_2
       3: iconst_0
       4: istore_3
       5: iload_3
       6: iload_2
       7: if_icmpge     29
      10: iload_1
      11: aload_0
      12: iload_3
      13: baload
      14: iload_3
      15: iconst_4
      16: irem
      17: bipush        8
      19: imul
      20: ishl
      21: ixor
      22: istore_1
      23: iinc          3, 1
      26: goto          5
      29: iload_1
      30: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #60                 // class org/apache/activemq/command/XATransactionId
      11: if_acmpeq     16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #60                 // class org/apache/activemq/command/XATransactionId
      20: astore_2
      21: aload_2
      22: getfield      #4                  // Field formatId:I
      25: aload_0
      26: getfield      #4                  // Field formatId:I
      29: if_icmpne     64
      32: aload_2
      33: getfield      #6                  // Field globalTransactionId:[B
      36: aload_0
      37: getfield      #6                  // Field globalTransactionId:[B
      40: invokestatic  #61                 // Method java/util/Arrays.equals:([B[B)Z
      43: ifeq          64
      46: aload_2
      47: getfield      #8                  // Field branchQualifier:[B
      50: aload_0
      51: getfield      #8                  // Field branchQualifier:[B
      54: invokestatic  #61                 // Method java/util/Arrays.equals:([B[B)Z
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        14
       4: aload_1
       5: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #60                 // class org/apache/activemq/command/XATransactionId
      11: if_acmpeq     16
      14: iconst_m1
      15: ireturn
      16: aload_1
      17: checkcast     #60                 // class org/apache/activemq/command/XATransactionId
      20: astore_2
      21: aload_0
      22: invokevirtual #55                 // Method getTransactionKey:()Ljava/lang/String;
      25: aload_2
      26: invokevirtual #55                 // Method getTransactionKey:()Ljava/lang/String;
      29: invokevirtual #62                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      32: ireturn

  public void setPreparedAcks(java.util.ArrayList<org.apache.activemq.command.MessageAck>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #63                 // Field preparedAcks:Ljava/util/ArrayList;
       5: return

  public java.util.ArrayList<org.apache.activemq.command.MessageAck> getPreparedAcks();
    Code:
       0: aload_0
       1: getfield      #63                 // Field preparedAcks:Ljava/util/ArrayList;
       4: areturn
}
