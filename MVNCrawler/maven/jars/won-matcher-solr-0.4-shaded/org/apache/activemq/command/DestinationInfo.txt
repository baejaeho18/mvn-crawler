Compiled from "DestinationInfo.java"
public class org.apache.activemq.command.DestinationInfo extends org.apache.activemq.command.BaseCommand {
  public static final byte DATA_STRUCTURE_TYPE;

  public static final byte ADD_OPERATION_TYPE;

  public static final byte REMOVE_OPERATION_TYPE;

  protected org.apache.activemq.command.ConnectionId connectionId;

  protected org.apache.activemq.command.ActiveMQDestination destination;

  protected byte operationType;

  protected long timeout;

  protected org.apache.activemq.command.BrokerId[] brokerPath;

  public org.apache.activemq.command.DestinationInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: return

  public org.apache.activemq.command.DestinationInfo(org.apache.activemq.command.ConnectionId, byte, org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field operationType:B
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      19: return

  public byte getDataStructureType();
    Code:
       0: bipush        8
       2: ireturn

  public boolean isAddOperation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field operationType:B
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isRemoveOperation();
    Code:
       0: aload_0
       1: getfield      #3                  // Field operationType:B
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public org.apache.activemq.command.ConnectionId getConnectionId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       4: areturn

  public void setConnectionId(org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       5: return

  public org.apache.activemq.command.ActiveMQDestination getDestination();
    Code:
       0: aload_0
       1: getfield      #4                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public byte getOperationType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field operationType:B
       4: ireturn

  public void setOperationType(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field operationType:B
       5: return

  public long getTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeout:J
       4: lreturn

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field timeout:J
       5: return

  public org.apache.activemq.command.BrokerId[] getBrokerPath();
    Code:
       0: aload_0
       1: getfield      #6                  // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       4: areturn

  public void setBrokerPath(org.apache.activemq.command.BrokerId[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isAddOperation:()Z
       4: ifeq          15
       7: aload_1
       8: aload_0
       9: invokeinterface #8,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processAddDestination:(Lorg/apache/activemq/command/DestinationInfo;)Lorg/apache/activemq/command/Response;
      14: areturn
      15: aload_0
      16: invokevirtual #9                  // Method isRemoveOperation:()Z
      19: ifeq          30
      22: aload_1
      23: aload_0
      24: invokeinterface #10,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processRemoveDestination:(Lorg/apache/activemq/command/DestinationInfo;)Lorg/apache/activemq/command/Response;
      29: areturn
      30: new           #11                 // class java/io/IOException
      33: dup
      34: new           #12                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #14                 // String Unknown operation type:
      43: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #16                 // Method getOperationType:()B
      50: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      53: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokespecial #19                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      59: athrow

  public org.apache.activemq.command.DestinationInfo copy();
    Code:
       0: new           #20                 // class org/apache/activemq/command/DestinationInfo
       3: dup
       4: invokespecial #21                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #22                 // Method org/apache/activemq/command/BaseCommand.copy:(Lorg/apache/activemq/command/BaseCommand;)V
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
      18: putfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
      21: aload_1
      22: aload_0
      23: getfield      #4                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      26: putfield      #4                  // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      29: aload_1
      30: aload_0
      31: getfield      #3                  // Field operationType:B
      34: putfield      #3                  // Field operationType:B
      37: aload_1
      38: aload_0
      39: getfield      #6                  // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
      42: putfield      #6                  // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
      45: aload_1
      46: areturn
}
