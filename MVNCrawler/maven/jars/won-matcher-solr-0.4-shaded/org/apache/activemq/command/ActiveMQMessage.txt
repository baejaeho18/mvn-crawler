Compiled from "ActiveMQMessage.java"
public class org.apache.activemq.command.ActiveMQMessage extends org.apache.activemq.command.Message implements org.apache.activemq.Message,org.apache.activemq.ScheduledMessage {
  public static final byte DATA_STRUCTURE_TYPE;

  public static final java.lang.String DLQ_DELIVERY_FAILURE_CAUSE_PROPERTY;

  public static final java.lang.String BROKER_PATH_PROPERTY;

  private static final java.util.Map<java.lang.String, org.apache.activemq.command.ActiveMQMessage$PropertySetter> JMS_PROPERTY_SETERS;

  protected transient org.apache.activemq.util.Callback acknowledgeCallback;

  public org.apache.activemq.command.ActiveMQMessage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/Message."<init>":()V
       4: return

  public byte getDataStructureType();
    Code:
       0: bipush        23
       2: ireturn

  public org.apache.activemq.command.Message copy();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ActiveMQMessage
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #4                  // Method copy:(Lorg/apache/activemq/command/ActiveMQMessage;)V
      13: aload_1
      14: areturn

  protected void copy(org.apache.activemq.command.ActiveMQMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/activemq/command/Message.copy:(Lorg/apache/activemq/command/Message;)V
       5: aload_1
       6: aload_0
       7: getfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
      10: putfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
      13: return

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMessageId:()Lorg/apache/activemq/command/MessageId;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #8                  // Method org/apache/activemq/command/MessageId.hashCode:()I
      13: ireturn
      14: aload_0
      15: invokespecial #9                  // Method java/lang/Object.hashCode:()I
      18: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_1
      12: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_0
      16: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #2                  // class org/apache/activemq/command/ActiveMQMessage
      28: astore_2
      29: aload_2
      30: invokevirtual #7                  // Method getMessageId:()Lorg/apache/activemq/command/MessageId;
      33: astore_3
      34: aload_0
      35: invokevirtual #7                  // Method getMessageId:()Lorg/apache/activemq/command/MessageId;
      38: astore        4
      40: aload         4
      42: ifnull        62
      45: aload_3
      46: ifnull        62
      49: aload_3
      50: aload         4
      52: invokevirtual #11                 // Method org/apache/activemq/command/MessageId.equals:(Ljava/lang/Object;)Z
      55: ifeq          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn

  public void acknowledge() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
       4: ifnull        28
       7: aload_0
       8: getfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
      11: invokeinterface #12,  1           // InterfaceMethod org/apache/activemq/util/Callback.execute:()V
      16: goto          28
      19: astore_1
      20: aload_1
      21: athrow
      22: astore_1
      23: aload_1
      24: invokestatic  #15                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Throwable;)Ljavax/jms/JMSException;
      27: athrow
      28: return
    Exception table:
       from    to  target type
           7    16    19   Class javax/jms/JMSException
           7    16    22   Class java/lang/Throwable

  public void clearBody() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #16                 // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
       5: aload_0
       6: iconst_0
       7: putfield      #17                 // Field readOnlyBody:Z
      10: return

  public java.lang.String getJMSMessageID();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getMessageId:()Lorg/apache/activemq/command/MessageId;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokevirtual #18                 // Method org/apache/activemq/command/MessageId.toString:()Ljava/lang/String;
      15: areturn

  public void setJMSMessageID(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: ifnull        43
       4: new           #19                 // class org/apache/activemq/command/MessageId
       7: dup
       8: aload_1
       9: invokespecial #20                 // Method org/apache/activemq/command/MessageId."<init>":(Ljava/lang/String;)V
      12: astore_2
      13: aload_0
      14: aload_2
      15: invokevirtual #21                 // Method setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      18: goto          48
      21: astore_2
      22: new           #19                 // class org/apache/activemq/command/MessageId
      25: dup
      26: invokespecial #23                 // Method org/apache/activemq/command/MessageId."<init>":()V
      29: astore_3
      30: aload_3
      31: aload_1
      32: invokevirtual #24                 // Method org/apache/activemq/command/MessageId.setTextView:(Ljava/lang/String;)V
      35: aload_0
      36: aload_3
      37: invokevirtual #21                 // Method setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      40: goto          48
      43: aload_0
      44: aconst_null
      45: invokevirtual #21                 // Method setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      48: return
    Exception table:
       from    to  target type
           4    18    21   Class java/lang/NumberFormatException

  public void setJMSMessageID(org.apache.activemq.command.ProducerId, long) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: astore        4
       3: new           #19                 // class org/apache/activemq/command/MessageId
       6: dup
       7: aload_1
       8: lload_2
       9: invokespecial #25                 // Method org/apache/activemq/command/MessageId."<init>":(Lorg/apache/activemq/command/ProducerId;J)V
      12: astore        4
      14: aload_0
      15: aload         4
      17: invokevirtual #21                 // Method setMessageId:(Lorg/apache/activemq/command/MessageId;)V
      20: goto          64
      23: astore        5
      25: new           #26                 // class java/lang/StringBuilder
      28: dup
      29: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      32: ldc           #28                 // String Invalid message id \'
      34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload         4
      39: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #31                 // String \', reason:
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         5
      49: invokevirtual #32                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      52: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: aload         5
      60: invokestatic  #34                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/String;Ljava/lang/Throwable;)Ljavax/jms/JMSException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           3    20    23   Class java/lang/Throwable

  public long getJMSTimestamp();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getTimestamp:()J
       4: lreturn

  public void setJMSTimestamp(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #36                 // Method setTimestamp:(J)V
       5: return

  public java.lang.String getJMSCorrelationID();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getCorrelationId:()Ljava/lang/String;
       4: areturn

  public void setJMSCorrelationID(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #38                 // Method setCorrelationId:(Ljava/lang/String;)V
       5: return

  public byte[] getJMSCorrelationIDAsBytes() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getCorrelationId:()Ljava/lang/String;
       4: invokestatic  #39                 // Method encodeString:(Ljava/lang/String;)[B
       7: areturn

  public void setJMSCorrelationIDAsBytes(byte[]) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method decodeString:([B)Ljava/lang/String;
       5: invokevirtual #38                 // Method setCorrelationId:(Ljava/lang/String;)V
       8: return

  public java.lang.String getJMSXMimeType();
    Code:
       0: ldc           #41                 // String jms/message
       2: areturn

  protected static java.lang.String decodeString(byte[]) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #42                 // class java/lang/String
       9: dup
      10: aload_0
      11: ldc           #43                 // String UTF-8
      13: invokespecial #44                 // Method java/lang/String."<init>":([BLjava/lang/String;)V
      16: areturn
      17: astore_1
      18: new           #13                 // class javax/jms/JMSException
      21: dup
      22: new           #26                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #46                 // String Invalid UTF-8 encoding:
      31: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #47                 // Method java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;
      38: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokespecial #48                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      47: athrow
    Exception table:
       from    to  target type
           0     5    17   Class java/io/UnsupportedEncodingException
           6    16    17   Class java/io/UnsupportedEncodingException

  protected static byte[] encodeString(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: ldc           #43                 // String UTF-8
       9: invokevirtual #49                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      12: areturn
      13: astore_1
      14: new           #13                 // class javax/jms/JMSException
      17: dup
      18: new           #26                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #46                 // String Invalid UTF-8 encoding:
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #47                 // Method java/io/UnsupportedEncodingException.getMessage:()Ljava/lang/String;
      34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokespecial #48                 // Method javax/jms/JMSException."<init>":(Ljava/lang/String;)V
      43: athrow
    Exception table:
       from    to  target type
           0     5    13   Class java/io/UnsupportedEncodingException
           6    12    13   Class java/io/UnsupportedEncodingException

  public javax.jms.Destination getJMSReplyTo();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getReplyTo:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setJMSReplyTo(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // Method org/apache/activemq/command/ActiveMQDestination.transform:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
       5: invokevirtual #52                 // Method setReplyTo:(Lorg/apache/activemq/command/ActiveMQDestination;)V
       8: return

  public javax.jms.Destination getJMSDestination();
    Code:
       0: aload_0
       1: invokevirtual #53                 // Method getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setJMSDestination(javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #51                 // Method org/apache/activemq/command/ActiveMQDestination.transform:(Ljavax/jms/Destination;)Lorg/apache/activemq/command/ActiveMQDestination;
       5: invokevirtual #54                 // Method setDestination:(Lorg/apache/activemq/command/ActiveMQDestination;)V
       8: return

  public int getJMSDeliveryMode();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method isPersistent:()Z
       4: ifeq          11
       7: iconst_2
       8: goto          12
      11: iconst_1
      12: ireturn

  public void setJMSDeliveryMode(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: invokevirtual #56                 // Method setPersistent:(Z)V
      14: return

  public boolean getJMSRedelivered();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method isRedelivered:()Z
       4: ireturn

  public void setJMSRedelivered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #58                 // Method setRedelivered:(Z)V
       5: return

  public java.lang.String getJMSType();
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getType:()Ljava/lang/String;
       4: areturn

  public void setJMSType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method setType:(Ljava/lang/String;)V
       5: return

  public long getJMSExpiration();
    Code:
       0: aload_0
       1: invokevirtual #61                 // Method getExpiration:()J
       4: lreturn

  public void setJMSExpiration(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #62                 // Method setExpiration:(J)V
       5: return

  public int getJMSPriority();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getPriority:()B
       4: ireturn

  public void setJMSPriority(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2b
       3: invokevirtual #64                 // Method setPriority:(B)V
       6: return

  public void clearProperties();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/apache/activemq/command/Message.clearProperties:()V
       4: aload_0
       5: iconst_0
       6: putfield      #66                 // Field readOnlyProperties:Z
       9: return

  public boolean propertyExists(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method getProperties:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          21
      13: aload_0
      14: aload_1
      15: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
      18: ifnull        25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: astore_2
      28: aload_2
      29: invokestatic  #71                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      32: athrow
    Exception table:
       from    to  target type
           0    26    27   Class java/io/IOException

  public java.util.Enumeration getPropertyNames() throws javax.jms.JMSException;
    Code:
       0: new           #72                 // class java/util/Vector
       3: dup
       4: aload_0
       5: invokevirtual #67                 // Method getProperties:()Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #74                 // Method java/util/Vector."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_0
      18: invokevirtual #75                 // Method getRedeliveryCounter:()I
      21: ifeq          31
      24: aload_1
      25: ldc           #76                 // String JMSXDeliveryCount
      27: invokevirtual #77                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: invokevirtual #78                 // Method getGroupID:()Ljava/lang/String;
      35: ifnull        45
      38: aload_1
      39: ldc           #79                 // String JMSXGroupID
      41: invokevirtual #77                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload_0
      46: invokevirtual #78                 // Method getGroupID:()Ljava/lang/String;
      49: ifnull        59
      52: aload_1
      53: ldc           #80                 // String JMSXGroupSeq
      55: invokevirtual #77                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: invokevirtual #81                 // Method getUserID:()Ljava/lang/String;
      63: ifnull        73
      66: aload_1
      67: ldc           #82                 // String JMSXUserID
      69: invokevirtual #77                 // Method java/util/Vector.add:(Ljava/lang/Object;)Z
      72: pop
      73: aload_1
      74: invokevirtual #83                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      77: areturn
      78: astore_1
      79: aload_1
      80: invokestatic  #71                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      83: athrow
    Exception table:
       from    to  target type
           0    77    78   Class java/io/IOException

  public java.util.Enumeration getAllPropertyNames() throws javax.jms.JMSException;
    Code:
       0: new           #72                 // class java/util/Vector
       3: dup
       4: aload_0
       5: invokevirtual #67                 // Method getProperties:()Ljava/util/Map;
       8: invokeinterface #73,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      13: invokespecial #74                 // Method java/util/Vector."<init>":(Ljava/util/Collection;)V
      16: astore_1
      17: aload_1
      18: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      21: invokeinterface #73,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      26: invokevirtual #85                 // Method java/util/Vector.addAll:(Ljava/util/Collection;)Z
      29: pop
      30: aload_1
      31: invokevirtual #83                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      34: areturn
      35: astore_1
      36: aload_1
      37: invokestatic  #71                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      40: athrow
    Exception table:
       from    to  target type
           0    34    35   Class java/io/IOException

  public void setObjectProperty(java.lang.String, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #86                 // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;Z)V
       7: return

  public void setObjectProperty(java.lang.String, java.lang.Object, boolean) throws javax.jms.JMSException;
    Code:
       0: iload_3
       1: ifeq          8
       4: aload_0
       5: invokespecial #87                 // Method checkReadOnlyProperties:()V
       8: aload_1
       9: ifnull        21
      12: aload_1
      13: ldc           #88                 // String
      15: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      18: ifeq          31
      21: new           #90                 // class java/lang/IllegalArgumentException
      24: dup
      25: ldc           #91                 // String Property name cannot be empty or null
      27: invokespecial #92                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: aload_2
      32: instanceof    #93                 // class org/fusesource/hawtbuf/UTF8Buffer
      35: ifeq          43
      38: aload_2
      39: invokevirtual #94                 // Method java/lang/Object.toString:()Ljava/lang/String;
      42: astore_2
      43: aload_0
      44: aload_2
      45: invokevirtual #95                 // Method checkValidObject:(Ljava/lang/Object;)V
      48: aload_0
      49: aload_1
      50: aload_2
      51: invokevirtual #96                 // Method convertScheduled:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      54: astore_2
      55: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      58: aload_1
      59: invokeinterface #97,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #98                 // class org/apache/activemq/command/ActiveMQMessage$PropertySetter
      67: astore        4
      69: aload         4
      71: ifnull        90
      74: aload_2
      75: ifnull        90
      78: aload         4
      80: aload_0
      81: aload_2
      82: invokeinterface #99,  3           // InterfaceMethod org/apache/activemq/command/ActiveMQMessage$PropertySetter.set:(Lorg/apache/activemq/command/Message;Ljava/lang/Object;)V
      87: goto          107
      90: aload_0
      91: aload_1
      92: aload_2
      93: invokevirtual #100                // Method setProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      96: goto          107
      99: astore        5
     101: aload         5
     103: invokestatic  #71                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
     106: athrow
     107: return
    Exception table:
       from    to  target type
          90    96    99   Class java/io/IOException

  public void setProperties(java.util.Map<java.lang.String, ?>) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #101,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #102,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #103,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          53
      21: aload_2
      22: invokeinterface #104,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #105                // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #106,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #42                 // class java/lang/String
      41: aload_3
      42: invokeinterface #107,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      50: goto          12
      53: return

  protected void checkValidObject(java.lang.Object) throws javax.jms.MessageFormatException;
    Code:
       0: aload_1
       1: instanceof    #109                // class java/lang/Boolean
       4: ifne          35
       7: aload_1
       8: instanceof    #110                // class java/lang/Byte
      11: ifne          35
      14: aload_1
      15: instanceof    #111                // class java/lang/Short
      18: ifne          35
      21: aload_1
      22: instanceof    #112                // class java/lang/Integer
      25: ifne          35
      28: aload_1
      29: instanceof    #113                // class java/lang/Long
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: istore_2
      41: iload_2
      42: ifne          77
      45: aload_1
      46: instanceof    #114                // class java/lang/Float
      49: ifne          77
      52: aload_1
      53: instanceof    #115                // class java/lang/Double
      56: ifne          77
      59: aload_1
      60: instanceof    #116                // class java/lang/Character
      63: ifne          77
      66: aload_1
      67: instanceof    #42                 // class java/lang/String
      70: ifne          77
      73: aload_1
      74: ifnonnull     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore_2
      83: iload_2
      84: ifne          195
      87: aload_0
      88: invokevirtual #117                // Method getConnection:()Lorg/apache/activemq/ActiveMQConnection;
      91: astore_3
      92: aload_3
      93: ifnull        103
      96: aload_3
      97: invokevirtual #118                // Method org/apache/activemq/ActiveMQConnection.isNestedMapAndListEnabled:()Z
     100: ifeq          156
     103: aload_1
     104: instanceof    #119                // class java/util/Map
     107: ifne          195
     110: aload_1
     111: instanceof    #120                // class java/util/List
     114: ifne          195
     117: new           #121                // class javax/jms/MessageFormatException
     120: dup
     121: new           #26                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #122                // String Only objectified primitive objects, String, Map and List types are allowed but was:
     130: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload_1
     134: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     137: ldc           #123                // String  type:
     139: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_1
     143: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     146: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     149: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     155: athrow
     156: new           #121                // class javax/jms/MessageFormatException
     159: dup
     160: new           #26                 // class java/lang/StringBuilder
     163: dup
     164: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     167: ldc           #125                // String Only objectified primitive objects and String types are allowed but was:
     169: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: aload_1
     173: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     176: ldc           #123                // String  type:
     178: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_1
     182: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     185: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     188: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     191: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     194: athrow
     195: return

  protected void checkValidScheduled(java.lang.String, java.lang.Object) throws javax.jms.MessageFormatException;
    Code:
       0: ldc           #126                // String AMQ_SCHEDULED_DELAY
       2: aload_1
       3: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          27
       9: ldc           #127                // String AMQ_SCHEDULED_PERIOD
      11: aload_1
      12: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifne          27
      18: ldc           #128                // String AMQ_SCHEDULED_REPEAT
      20: aload_1
      21: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          68
      27: aload_2
      28: instanceof    #113                // class java/lang/Long
      31: ifne          68
      34: aload_2
      35: instanceof    #112                // class java/lang/Integer
      38: ifne          68
      41: new           #121                // class javax/jms/MessageFormatException
      44: dup
      45: new           #26                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_1
      53: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: ldc           #129                // String  should be long or int value
      58: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: ldc           #130                // String AMQ_SCHEDULED_CRON
      70: aload_1
      71: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          84
      77: aload_2
      78: invokevirtual #94                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: invokestatic  #131                // Method org/apache/activemq/broker/scheduler/CronParser.validate:(Ljava/lang/String;)V
      84: return

  protected java.lang.Object convertScheduled(java.lang.String, java.lang.Object) throws javax.jms.MessageFormatException;
    Code:
       0: aload_2
       1: astore_3
       2: ldc           #126                // String AMQ_SCHEDULED_DELAY
       4: aload_1
       5: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          22
      11: aload_2
      12: ldc_w         #113                // class java/lang/Long
      15: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      18: astore_3
      19: goto          59
      22: ldc           #127                // String AMQ_SCHEDULED_PERIOD
      24: aload_1
      25: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          42
      31: aload_2
      32: ldc_w         #113                // class java/lang/Long
      35: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      38: astore_3
      39: goto          59
      42: ldc           #128                // String AMQ_SCHEDULED_REPEAT
      44: aload_1
      45: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      48: ifeq          59
      51: aload_2
      52: ldc_w         #112                // class java/lang/Integer
      55: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      58: astore_3
      59: aload_3
      60: areturn

  public java.lang.Object getObjectProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #133                // class java/lang/NullPointerException
       7: dup
       8: ldc           #134                // String Property name cannot be null
      10: invokespecial #135                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: new           #136                // class org/apache/activemq/filter/PropertyExpression
      17: dup
      18: aload_1
      19: invokespecial #137                // Method org/apache/activemq/filter/PropertyExpression."<init>":(Ljava/lang/String;)V
      22: astore_2
      23: aload_2
      24: aload_0
      25: invokevirtual #138                // Method org/apache/activemq/filter/PropertyExpression.evaluate:(Lorg/apache/activemq/command/Message;)Ljava/lang/Object;
      28: areturn

  public boolean getBooleanProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: iconst_0
      11: ireturn
      12: aload_2
      13: ldc_w         #109                // class java/lang/Boolean
      16: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      19: checkcast     #109                // class java/lang/Boolean
      22: astore_3
      23: aload_3
      24: ifnonnull     74
      27: new           #121                // class javax/jms/MessageFormatException
      30: dup
      31: new           #26                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #139                // String Property
      40: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_1
      44: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #140                // String  was a
      49: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_2
      53: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      59: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #142                // String  and cannot be read as a boolean
      64: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: aload_3
      75: invokevirtual #143                // Method java/lang/Boolean.booleanValue:()Z
      78: ireturn

  public byte getByteProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #22                 // class java/lang/NumberFormatException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #146                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #110                // class java/lang/Byte
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #110                // class java/lang/Byte
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #147                // String  and cannot be read as a byte
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #148                // Method java/lang/Byte.byteValue:()B
     108: ireturn

  public short getShortProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #22                 // class java/lang/NumberFormatException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #146                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #111                // class java/lang/Short
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #111                // class java/lang/Short
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #149                // String  and cannot be read as a short
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #150                // Method java/lang/Short.shortValue:()S
     108: ireturn

  public int getIntProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #22                 // class java/lang/NumberFormatException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #146                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #112                // class java/lang/Integer
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #112                // class java/lang/Integer
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #151                // String  and cannot be read as an integer
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #152                // Method java/lang/Integer.intValue:()I
     108: ireturn

  public long getLongProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #22                 // class java/lang/NumberFormatException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #146                // Method java/lang/NumberFormatException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #113                // class java/lang/Long
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #113                // class java/lang/Long
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #153                // String  and cannot be read as a long
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #154                // Method java/lang/Long.longValue:()J
     108: lreturn

  public float getFloatProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #133                // class java/lang/NullPointerException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #135                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #114                // class java/lang/Float
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #114                // class java/lang/Float
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #155                // String  and cannot be read as a float
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #156                // Method java/lang/Float.floatValue:()F
     108: freturn

  public double getDoubleProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_2
       7: ifnonnull     42
      10: new           #133                // class java/lang/NullPointerException
      13: dup
      14: new           #26                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #144                // String property
      23: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #145                // String  was null
      32: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #135                // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_2
      43: ldc_w         #115                // class java/lang/Double
      46: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      49: checkcast     #115                // class java/lang/Double
      52: astore_3
      53: aload_3
      54: ifnonnull     104
      57: new           #121                // class javax/jms/MessageFormatException
      60: dup
      61: new           #26                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #139                // String Property
      70: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_1
      74: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: ldc           #140                // String  was a
      79: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      86: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #157                // String  and cannot be read as a double
      94: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: aload_3
     105: invokevirtual #158                // Method java/lang/Double.doubleValue:()D
     108: dreturn

  public java.lang.String getStringProperty(java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ldc           #82                 // String JMSXUserID
       5: invokevirtual #89                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       8: ifeq          29
      11: aload_0
      12: invokevirtual #81                 // Method getUserID:()Ljava/lang/String;
      15: astore_2
      16: aload_2
      17: ifnonnull     35
      20: aload_0
      21: aload_1
      22: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
      25: astore_2
      26: goto          35
      29: aload_0
      30: aload_1
      31: invokevirtual #69                 // Method getObjectProperty:(Ljava/lang/String;)Ljava/lang/Object;
      34: astore_2
      35: aload_2
      36: ifnonnull     41
      39: aconst_null
      40: areturn
      41: aload_2
      42: ldc_w         #42                 // class java/lang/String
      45: invokestatic  #132                // Method org/apache/activemq/util/TypeConversionSupport.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      48: checkcast     #42                 // class java/lang/String
      51: astore_3
      52: aload_3
      53: ifnonnull     103
      56: new           #121                // class javax/jms/MessageFormatException
      59: dup
      60: new           #26                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #139                // String Property
      69: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #140                // String  was a
      78: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_2
      82: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      85: invokevirtual #141                // Method java/lang/Class.getName:()Ljava/lang/String;
      88: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #159                // String  and cannot be read as a String
      93: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokespecial #124                // Method javax/jms/MessageFormatException."<init>":(Ljava/lang/String;)V
     102: athrow
     103: aload_3
     104: areturn

  public void setBooleanProperty(java.lang.String, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_1
       4: invokevirtual #160                // Method setBooleanProperty:(Ljava/lang/String;ZZ)V
       7: return

  public void setBooleanProperty(java.lang.String, boolean, boolean) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #161                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: iload_3
       7: invokevirtual #86                 // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;Z)V
      10: return

  public void setByteProperty(java.lang.String, byte) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #162                // Method java/lang/Byte.valueOf:(B)Ljava/lang/Byte;
       6: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void setShortProperty(java.lang.String, short) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #163                // Method java/lang/Short.valueOf:(S)Ljava/lang/Short;
       6: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void setIntProperty(java.lang.String, int) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #164                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       6: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void setLongProperty(java.lang.String, long) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokestatic  #165                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       6: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       9: return

  public void setFloatProperty(java.lang.String, float) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #114                // class java/lang/Float
       5: dup
       6: fload_2
       7: invokespecial #166                // Method java/lang/Float."<init>":(F)V
      10: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setDoubleProperty(java.lang.String, double) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: new           #115                // class java/lang/Double
       5: dup
       6: dload_2
       7: invokespecial #167                // Method java/lang/Double."<init>":(D)V
      10: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
      13: return

  public void setStringProperty(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #108                // Method setObjectProperty:(Ljava/lang/String;Ljava/lang/Object;)V
       6: return

  private void checkReadOnlyProperties() throws javax.jms.MessageNotWriteableException;
    Code:
       0: aload_0
       1: getfield      #66                 // Field readOnlyProperties:Z
       4: ifeq          17
       7: new           #168                // class javax/jms/MessageNotWriteableException
      10: dup
      11: ldc           #169                // String Message properties are read-only
      13: invokespecial #170                // Method javax/jms/MessageNotWriteableException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected void checkReadOnlyBody() throws javax.jms.MessageNotWriteableException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field readOnlyBody:Z
       4: ifeq          17
       7: new           #168                // class javax/jms/MessageNotWriteableException
      10: dup
      11: ldc           #171                // String Message body is read-only
      13: invokespecial #170                // Method javax/jms/MessageNotWriteableException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public org.apache.activemq.util.Callback getAcknowledgeCallback();
    Code:
       0: aload_0
       1: getfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
       4: areturn

  public void setAcknowledgeCallback(org.apache.activemq.util.Callback);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field acknowledgeCallback:Lorg/apache/activemq/util/Callback;
       5: return

  public void onSend() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #172                // Method setReadOnlyBody:(Z)V
       5: aload_0
       6: iconst_1
       7: invokevirtual #173                // Method setReadOnlyProperties:(Z)V
      10: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #174,  2          // InterfaceMethod org/apache/activemq/state/CommandVisitor.processMessage:(Lorg/apache/activemq/command/Message;)Lorg/apache/activemq/command/Response;
       7: areturn

  public void storeContent();
    Code:
       0: return

  public void storeContentAndClear();
    Code:
       0: aload_0
       1: invokevirtual #175                // Method storeContent:()V
       4: return

  static {};
    Code:
       0: new           #176                // class java/util/HashMap
       3: dup
       4: invokespecial #177                // Method java/util/HashMap."<init>":()V
       7: putstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      10: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      13: ldc           #76                 // String JMSXDeliveryCount
      15: new           #178                // class org/apache/activemq/command/ActiveMQMessage$1
      18: dup
      19: invokespecial #179                // Method org/apache/activemq/command/ActiveMQMessage$1."<init>":()V
      22: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      31: ldc           #79                 // String JMSXGroupID
      33: new           #181                // class org/apache/activemq/command/ActiveMQMessage$2
      36: dup
      37: invokespecial #182                // Method org/apache/activemq/command/ActiveMQMessage$2."<init>":()V
      40: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      49: ldc           #80                 // String JMSXGroupSeq
      51: new           #183                // class org/apache/activemq/command/ActiveMQMessage$3
      54: dup
      55: invokespecial #184                // Method org/apache/activemq/command/ActiveMQMessage$3."<init>":()V
      58: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      67: ldc           #185                // String JMSCorrelationID
      69: new           #186                // class org/apache/activemq/command/ActiveMQMessage$4
      72: dup
      73: invokespecial #187                // Method org/apache/activemq/command/ActiveMQMessage$4."<init>":()V
      76: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
      85: ldc           #188                // String JMSDeliveryMode
      87: new           #189                // class org/apache/activemq/command/ActiveMQMessage$5
      90: dup
      91: invokespecial #190                // Method org/apache/activemq/command/ActiveMQMessage$5."<init>":()V
      94: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     103: ldc           #191                // String JMSExpiration
     105: new           #192                // class org/apache/activemq/command/ActiveMQMessage$6
     108: dup
     109: invokespecial #193                // Method org/apache/activemq/command/ActiveMQMessage$6."<init>":()V
     112: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     121: ldc           #194                // String JMSPriority
     123: new           #195                // class org/apache/activemq/command/ActiveMQMessage$7
     126: dup
     127: invokespecial #196                // Method org/apache/activemq/command/ActiveMQMessage$7."<init>":()V
     130: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     135: pop
     136: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     139: ldc           #197                // String JMSRedelivered
     141: new           #198                // class org/apache/activemq/command/ActiveMQMessage$8
     144: dup
     145: invokespecial #199                // Method org/apache/activemq/command/ActiveMQMessage$8."<init>":()V
     148: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     153: pop
     154: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     157: ldc           #200                // String JMSReplyTo
     159: new           #201                // class org/apache/activemq/command/ActiveMQMessage$9
     162: dup
     163: invokespecial #202                // Method org/apache/activemq/command/ActiveMQMessage$9."<init>":()V
     166: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     171: pop
     172: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     175: ldc           #203                // String JMSTimestamp
     177: new           #204                // class org/apache/activemq/command/ActiveMQMessage$10
     180: dup
     181: invokespecial #205                // Method org/apache/activemq/command/ActiveMQMessage$10."<init>":()V
     184: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: getstatic     #84                 // Field JMS_PROPERTY_SETERS:Ljava/util/Map;
     193: ldc           #206                // String JMSType
     195: new           #207                // class org/apache/activemq/command/ActiveMQMessage$11
     198: dup
     199: invokespecial #208                // Method org/apache/activemq/command/ActiveMQMessage$11."<init>":()V
     202: invokeinterface #180,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     207: pop
     208: return
}
