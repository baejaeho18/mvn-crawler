Compiled from "ActiveMQTextMessage.java"
public class org.apache.activemq.command.ActiveMQTextMessage extends org.apache.activemq.command.ActiveMQMessage implements javax.jms.TextMessage {
  public static final byte DATA_STRUCTURE_TYPE;

  protected java.lang.String text;

  public org.apache.activemq.command.ActiveMQTextMessage();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/ActiveMQMessage."<init>":()V
       4: return

  public org.apache.activemq.command.Message copy();
    Code:
       0: new           #2                  // class org/apache/activemq/command/ActiveMQTextMessage
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #4                  // Method copy:(Lorg/apache/activemq/command/ActiveMQTextMessage;)V
      13: aload_1
      14: areturn

  private void copy(org.apache.activemq.command.ActiveMQTextMessage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #5                  // Method org/apache/activemq/command/ActiveMQMessage.copy:(Lorg/apache/activemq/command/ActiveMQMessage;)V
       5: aload_1
       6: aload_0
       7: getfield      #6                  // Field text:Ljava/lang/String;
      10: putfield      #6                  // Field text:Ljava/lang/String;
      13: return

  public byte getDataStructureType();
    Code:
       0: bipush        28
       2: ireturn

  public java.lang.String getJMSXMimeType();
    Code:
       0: ldc           #7                  // String jms/text-message
       2: areturn

  public void setText(java.lang.String) throws javax.jms.MessageNotWriteableException;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method checkReadOnlyBody:()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field text:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: invokevirtual #9                  // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
      14: return

  public java.lang.String getText() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field text:Ljava/lang/String;
       4: ifnonnull     32
       7: aload_0
       8: invokevirtual #10                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
      11: ifnull        32
      14: aload_0
      15: aload_0
      16: invokespecial #11                 // Method decodeContent:()Ljava/lang/String;
      19: putfield      #6                  // Field text:Ljava/lang/String;
      22: aload_0
      23: aconst_null
      24: invokevirtual #9                  // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
      27: aload_0
      28: iconst_0
      29: invokevirtual #12                 // Method setCompressed:(Z)V
      32: aload_0
      33: getfield      #6                  // Field text:Ljava/lang/String;
      36: areturn

  private java.lang.String decodeContent() throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: invokevirtual #10                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
       6: ifnull        105
       9: aconst_null
      10: astore_2
      11: aload_0
      12: invokevirtual #10                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
      15: astore_3
      16: aload_3
      17: ifnull        66
      20: new           #13                 // class org/apache/activemq/util/ByteArrayInputStream
      23: dup
      24: aload_3
      25: invokespecial #14                 // Method org/apache/activemq/util/ByteArrayInputStream."<init>":(Lorg/apache/activemq/util/ByteSequence;)V
      28: astore_2
      29: aload_0
      30: invokevirtual #15                 // Method isCompressed:()Z
      33: ifeq          45
      36: new           #16                 // class java/util/zip/InflaterInputStream
      39: dup
      40: aload_2
      41: invokespecial #17                 // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;)V
      44: astore_2
      45: new           #18                 // class java/io/DataInputStream
      48: dup
      49: aload_2
      50: invokespecial #19                 // Method java/io/DataInputStream."<init>":(Ljava/io/InputStream;)V
      53: astore        4
      55: aload         4
      57: invokestatic  #20                 // Method org/apache/activemq/util/MarshallingSupport.readUTF8:(Ljava/io/DataInput;)Ljava/lang/String;
      60: astore_1
      61: aload         4
      63: invokevirtual #21                 // Method java/io/DataInputStream.close:()V
      66: aload_2
      67: ifnull        105
      70: aload_2
      71: invokevirtual #22                 // Method java/io/InputStream.close:()V
      74: goto          105
      77: astore_3
      78: goto          105
      81: astore_3
      82: aload_3
      83: invokestatic  #24                 // Method org/apache/activemq/util/JMSExceptionSupport.create:(Ljava/lang/Exception;)Ljavax/jms/JMSException;
      86: athrow
      87: astore        5
      89: aload_2
      90: ifnull        102
      93: aload_2
      94: invokevirtual #22                 // Method java/io/InputStream.close:()V
      97: goto          102
     100: astore        6
     102: aload         5
     104: athrow
     105: aload_1
     106: areturn
    Exception table:
       from    to  target type
          70    74    77   Class java/io/IOException
          11    66    81   Class java/io/IOException
          11    66    87   any
          93    97   100   Class java/io/IOException
          81    89    87   any

  public void beforeMarshall(org.apache.activemq.wireformat.WireFormat) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/apache/activemq/command/ActiveMQMessage.beforeMarshall:(Lorg/apache/activemq/wireformat/WireFormat;)V
       5: aload_0
       6: invokevirtual #26                 // Method storeContent:()V
       9: return

  public void storeContentAndClear();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method storeContent:()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field text:Ljava/lang/String;
       9: return

  public void storeContent();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getContent:()Lorg/apache/activemq/util/ByteSequence;
       4: astore_1
       5: aload_1
       6: ifnonnull     91
       9: aload_0
      10: getfield      #6                  // Field text:Ljava/lang/String;
      13: ifnull        91
      16: new           #27                 // class org/apache/activemq/util/ByteArrayOutputStream
      19: dup
      20: invokespecial #28                 // Method org/apache/activemq/util/ByteArrayOutputStream."<init>":()V
      23: astore_2
      24: aload_2
      25: astore_3
      26: aload_0
      27: invokevirtual #29                 // Method getConnection:()Lorg/apache/activemq/ActiveMQConnection;
      30: astore        4
      32: aload         4
      34: ifnull        59
      37: aload         4
      39: invokevirtual #30                 // Method org/apache/activemq/ActiveMQConnection.isUseCompression:()Z
      42: ifeq          59
      45: aload_0
      46: iconst_1
      47: putfield      #31                 // Field compressed:Z
      50: new           #32                 // class java/util/zip/DeflaterOutputStream
      53: dup
      54: aload_3
      55: invokespecial #33                 // Method java/util/zip/DeflaterOutputStream."<init>":(Ljava/io/OutputStream;)V
      58: astore_3
      59: new           #34                 // class java/io/DataOutputStream
      62: dup
      63: aload_3
      64: invokespecial #35                 // Method java/io/DataOutputStream."<init>":(Ljava/io/OutputStream;)V
      67: astore        5
      69: aload         5
      71: aload_0
      72: getfield      #6                  // Field text:Ljava/lang/String;
      75: invokestatic  #36                 // Method org/apache/activemq/util/MarshallingSupport.writeUTF8:(Ljava/io/DataOutput;Ljava/lang/String;)V
      78: aload         5
      80: invokevirtual #37                 // Method java/io/DataOutputStream.close:()V
      83: aload_0
      84: aload_2
      85: invokevirtual #38                 // Method org/apache/activemq/util/ByteArrayOutputStream.toByteSequence:()Lorg/apache/activemq/util/ByteSequence;
      88: invokevirtual #9                  // Method setContent:(Lorg/apache/activemq/util/ByteSequence;)V
      91: goto          104
      94: astore_1
      95: new           #39                 // class java/lang/RuntimeException
      98: dup
      99: aload_1
     100: invokespecial #40                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     103: athrow
     104: return
    Exception table:
       from    to  target type
           0    91    94   Class java/io/IOException

  public void clearMarshalledState() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/apache/activemq/command/ActiveMQMessage.clearMarshalledState:()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field text:Ljava/lang/String;
       9: return

  public void clearBody() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/activemq/command/ActiveMQMessage.clearBody:()V
       4: aload_0
       5: aconst_null
       6: putfield      #6                  // Field text:Ljava/lang/String;
       9: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #43                 // Field size:I
       4: ifne          70
       7: aload_0
       8: getfield      #44                 // Field content:Lorg/apache/activemq/util/ByteSequence;
      11: ifnonnull     70
      14: aload_0
      15: getfield      #6                  // Field text:Ljava/lang/String;
      18: ifnull        70
      21: aload_0
      22: aload_0
      23: invokevirtual #45                 // Method getMinimumMessageSize:()I
      26: putfield      #43                 // Field size:I
      29: aload_0
      30: getfield      #46                 // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      33: ifnull        52
      36: aload_0
      37: dup
      38: getfield      #43                 // Field size:I
      41: aload_0
      42: getfield      #46                 // Field marshalledProperties:Lorg/apache/activemq/util/ByteSequence;
      45: invokevirtual #47                 // Method org/apache/activemq/util/ByteSequence.getLength:()I
      48: iadd
      49: putfield      #43                 // Field size:I
      52: aload_0
      53: dup
      54: getfield      #43                 // Field size:I
      57: aload_0
      58: getfield      #6                  // Field text:Ljava/lang/String;
      61: invokevirtual #48                 // Method java/lang/String.length:()I
      64: iconst_2
      65: imul
      66: iadd
      67: putfield      #43                 // Field size:I
      70: aload_0
      71: invokespecial #49                 // Method org/apache/activemq/command/ActiveMQMessage.getSize:()I
      74: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field text:Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokespecial #11                 // Method decodeContent:()Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: ifnull        45
      18: aload_1
      19: invokestatic  #50                 // Method org/apache/activemq/util/MarshallingSupport.truncate64:(Ljava/lang/String;)Ljava/lang/String;
      22: astore_1
      23: new           #51                 // class java/util/HashMap
      26: dup
      27: invokespecial #52                 // Method java/util/HashMap."<init>":()V
      30: astore_2
      31: aload_2
      32: ldc           #53                 // String text
      34: aload_1
      35: invokevirtual #54                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_0
      40: aload_2
      41: invokespecial #55                 // Method org/apache/activemq/command/ActiveMQMessage.toString:(Ljava/util/Map;)Ljava/lang/String;
      44: areturn
      45: goto          49
      48: astore_1
      49: aload_0
      50: invokespecial #57                 // Method org/apache/activemq/command/ActiveMQMessage.toString:()Ljava/lang/String;
      53: areturn
    Exception table:
       from    to  target type
           0    44    48   Class javax/jms/JMSException
}
