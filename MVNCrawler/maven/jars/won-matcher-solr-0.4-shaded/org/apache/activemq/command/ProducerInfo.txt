Compiled from "ProducerInfo.java"
public class org.apache.activemq.command.ProducerInfo extends org.apache.activemq.command.BaseCommand {
  public static final byte DATA_STRUCTURE_TYPE;

  protected org.apache.activemq.command.ProducerId producerId;

  protected org.apache.activemq.command.ActiveMQDestination destination;

  protected org.apache.activemq.command.BrokerId[] brokerPath;

  protected boolean dispatchAsync;

  protected int windowSize;

  protected java.util.concurrent.atomic.AtomicLong sentCount;

  public org.apache.activemq.command.ProducerInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: return

  public org.apache.activemq.command.ProducerInfo(org.apache.activemq.command.ProducerId);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      20: return

  public org.apache.activemq.command.ProducerInfo(org.apache.activemq.command.SessionInfo, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #6                  // class org/apache/activemq/command/ProducerId
      19: dup
      20: aload_1
      21: invokevirtual #7                  // Method org/apache/activemq/command/SessionInfo.getSessionId:()Lorg/apache/activemq/command/SessionId;
      24: lload_2
      25: invokespecial #8                  // Method org/apache/activemq/command/ProducerId."<init>":(Lorg/apache/activemq/command/SessionId;J)V
      28: putfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      31: return

  public org.apache.activemq.command.ProducerInfo copy();
    Code:
       0: new           #9                  // class org/apache/activemq/command/ProducerInfo
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #11                 // Method copy:(Lorg/apache/activemq/command/ProducerInfo;)V
      13: aload_1
      14: areturn

  public void copy(org.apache.activemq.command.ProducerInfo);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #12                 // Method org/apache/activemq/command/BaseCommand.copy:(Lorg/apache/activemq/command/BaseCommand;)V
       5: aload_1
       6: aload_0
       7: getfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      10: putfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
      13: aload_1
      14: aload_0
      15: getfield      #13                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      18: putfield      #13                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
      21: return

  public byte getDataStructureType();
    Code:
       0: bipush        6
       2: ireturn

  public org.apache.activemq.command.ProducerId getProducerId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
       4: areturn

  public void setProducerId(org.apache.activemq.command.ProducerId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field producerId:Lorg/apache/activemq/command/ProducerId;
       5: return

  public org.apache.activemq.command.ActiveMQDestination getDestination();
    Code:
       0: aload_0
       1: getfield      #13                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       4: areturn

  public void setDestination(org.apache.activemq.command.ActiveMQDestination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field destination:Lorg/apache/activemq/command/ActiveMQDestination;
       5: return

  public org.apache.activemq.command.RemoveInfo createRemoveCommand();
    Code:
       0: new           #14                 // class org/apache/activemq/command/RemoveInfo
       3: dup
       4: aload_0
       5: invokevirtual #15                 // Method getProducerId:()Lorg/apache/activemq/command/ProducerId;
       8: invokespecial #16                 // Method org/apache/activemq/command/RemoveInfo."<init>":(Lorg/apache/activemq/command/DataStructure;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #17                 // Method isResponseRequired:()Z
      17: invokevirtual #18                 // Method org/apache/activemq/command/RemoveInfo.setResponseRequired:(Z)V
      20: aload_1
      21: areturn

  public org.apache.activemq.command.BrokerId[] getBrokerPath();
    Code:
       0: aload_0
       1: getfield      #19                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       4: areturn

  public void setBrokerPath(org.apache.activemq.command.BrokerId[]);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field brokerPath:[Lorg/apache/activemq/command/BrokerId;
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #20,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processAddProducer:(Lorg/apache/activemq/command/ProducerInfo;)Lorg/apache/activemq/command/Response;
       7: areturn

  public boolean isDispatchAsync();
    Code:
       0: aload_0
       1: getfield      #21                 // Field dispatchAsync:Z
       4: ireturn

  public void setDispatchAsync(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #21                 // Field dispatchAsync:Z
       5: return

  public int getWindowSize();
    Code:
       0: aload_0
       1: getfield      #22                 // Field windowSize:I
       4: ireturn

  public void setWindowSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #22                 // Field windowSize:I
       5: return

  public long getSentCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void incrementSentCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void resetSentCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sentCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return
}
