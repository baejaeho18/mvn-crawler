Compiled from "TransactionInfo.java"
public class org.apache.activemq.command.TransactionInfo extends org.apache.activemq.command.BaseCommand {
  public static final byte DATA_STRUCTURE_TYPE;

  public static final byte BEGIN;

  public static final byte PREPARE;

  public static final byte COMMIT_ONE_PHASE;

  public static final byte COMMIT_TWO_PHASE;

  public static final byte ROLLBACK;

  public static final byte RECOVER;

  public static final byte FORGET;

  public static final byte END;

  protected byte type;

  protected org.apache.activemq.command.ConnectionId connectionId;

  protected org.apache.activemq.command.TransactionId transactionId;

  public org.apache.activemq.command.TransactionInfo();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: return

  public org.apache.activemq.command.TransactionInfo(org.apache.activemq.command.ConnectionId, org.apache.activemq.command.TransactionId, byte);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/activemq/command/BaseCommand."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field transactionId:Lorg/apache/activemq/command/TransactionId;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field type:B
      19: return

  public byte getDataStructureType();
    Code:
       0: bipush        7
       2: ireturn

  public org.apache.activemq.command.ConnectionId getConnectionId();
    Code:
       0: aload_0
       1: getfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       4: areturn

  public void setConnectionId(org.apache.activemq.command.ConnectionId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field connectionId:Lorg/apache/activemq/command/ConnectionId;
       5: return

  public org.apache.activemq.command.TransactionId getTransactionId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field transactionId:Lorg/apache/activemq/command/TransactionId;
       4: areturn

  public void setTransactionId(org.apache.activemq.command.TransactionId);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field transactionId:Lorg/apache/activemq/command/TransactionId;
       5: return

  public byte getType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:B
       4: ireturn

  public void setType(byte);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field type:B
       5: return

  public org.apache.activemq.command.Response visit(org.apache.activemq.state.CommandVisitor) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field type:B
       4: tableswitch   { // 0 to 7
                     0: 52
                     1: 68
                     2: 76
                     3: 84
                     4: 92
                     5: 100
                     6: 108
                     7: 60
               default: 116
          }
      52: aload_1
      53: aload_0
      54: invokeinterface #5,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processBeginTransaction:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      59: areturn
      60: aload_1
      61: aload_0
      62: invokeinterface #6,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processEndTransaction:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      67: areturn
      68: aload_1
      69: aload_0
      70: invokeinterface #7,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processPrepareTransaction:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      75: areturn
      76: aload_1
      77: aload_0
      78: invokeinterface #8,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processCommitTransactionOnePhase:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      83: areturn
      84: aload_1
      85: aload_0
      86: invokeinterface #9,  2            // InterfaceMethod org/apache/activemq/state/CommandVisitor.processCommitTransactionTwoPhase:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      91: areturn
      92: aload_1
      93: aload_0
      94: invokeinterface #10,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processRollbackTransaction:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
      99: areturn
     100: aload_1
     101: aload_0
     102: invokeinterface #11,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processRecoverTransactions:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
     107: areturn
     108: aload_1
     109: aload_0
     110: invokeinterface #12,  2           // InterfaceMethod org/apache/activemq/state/CommandVisitor.processForgetTransaction:(Lorg/apache/activemq/command/TransactionInfo;)Lorg/apache/activemq/command/Response;
     115: areturn
     116: new           #13                 // class java/io/IOException
     119: dup
     120: new           #14                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #16                 // String Transaction info type unknown:
     129: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload_0
     133: getfield      #4                  // Field type:B
     136: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     139: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: invokespecial #20                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
     145: athrow
}
