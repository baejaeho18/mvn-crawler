Compiled from "SQLQueryParser.java"
public class org.apache.xalan.lib.sql.SQLQueryParser {
  private boolean m_InlineVariables;

  private boolean m_IsCallable;

  private java.lang.String m_OrigQuery;

  private java.lang.StringBuffer m_ParsedQuery;

  private java.util.Vector m_Parameters;

  private boolean m_hasOutput;

  private boolean m_HasParameters;

  public static final int NO_OVERRIDE;

  public static final int NO_INLINE_PARSER;

  public static final int INLINE_PARSER;

  public org.apache.xalan.lib.sql.SQLQueryParser();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_InlineVariables:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_IsCallable:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field m_hasOutput:Z
      34: aload_0
      35: invokespecial #8                  // Method init:()V
      38: return

  private org.apache.xalan.lib.sql.SQLQueryParser(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field m_InlineVariables:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_IsCallable:Z
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      24: aload_0
      25: aconst_null
      26: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      29: aload_0
      30: iconst_0
      31: putfield      #7                  // Field m_hasOutput:Z
      34: aload_0
      35: aload_1
      36: putfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      39: return

  private void init();
    Code:
       0: return

  public org.apache.xalan.lib.sql.SQLQueryParser parse(org.apache.xalan.lib.sql.XConnection, java.lang.String, int);
    Code:
       0: new           #9                  // class org/apache/xalan/lib/sql/SQLQueryParser
       3: dup
       4: aload_2
       5: invokespecial #10                 // Method "<init>":(Ljava/lang/String;)V
       8: astore        4
      10: aload         4
      12: aload_1
      13: iload_3
      14: invokespecial #11                 // Method parse:(Lorg/apache/xalan/lib/sql/XConnection;I)V
      17: aload         4
      19: areturn

  private void parse(org.apache.xalan.lib.sql.XConnection, int);
    Code:
       0: aload_0
       1: ldc           #12                 // String true
       3: aload_1
       4: ldc           #13                 // String inline-variables
       6: invokevirtual #14                 // Method org/apache/xalan/lib/sql/XConnection.getFeature:(Ljava/lang/String;)Ljava/lang/String;
       9: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: putfield      #2                  // Field m_InlineVariables:Z
      15: iload_2
      16: iconst_1
      17: if_icmpne     28
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field m_InlineVariables:Z
      25: goto          38
      28: iload_2
      29: iconst_2
      30: if_icmpne     38
      33: aload_0
      34: iconst_1
      35: putfield      #2                  // Field m_InlineVariables:Z
      38: aload_0
      39: getfield      #2                  // Field m_InlineVariables:Z
      42: ifeq          49
      45: aload_0
      46: invokevirtual #16                 // Method inlineParser:()V
      49: return

  public boolean hasParameters();
    Code:
       0: aload_0
       1: getfield      #17                 // Field m_HasParameters:Z
       4: ireturn

  public boolean isCallable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_IsCallable:Z
       4: ireturn

  public java.util.Vector getParameters();
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
       4: areturn

  public void setParameters(java.util.Vector);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field m_HasParameters:Z
       5: aload_0
       6: aload_1
       7: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      10: return

  public java.lang.String getSQLQuery();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_InlineVariables:Z
       4: ifeq          15
       7: aload_0
       8: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      11: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      14: areturn
      15: aload_0
      16: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      19: areturn

  public void populateStatement(java.sql.PreparedStatement, org.apache.xalan.extensions.ExpressionContext);
    Code:
       0: iconst_0
       1: istore_3
       2: goto          144
       5: aload_0
       6: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
       9: iload_3
      10: invokevirtual #19                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      13: checkcast     #20                 // class org/apache/xalan/lib/sql/QueryParameter
      16: astore        4
      18: aload_0
      19: getfield      #2                  // Field m_InlineVariables:Z
      22: ifeq          90
      25: aload_2
      26: new           #21                 // class org/apache/xml/utils/QName
      29: dup
      30: aload         4
      32: invokevirtual #22                 // Method org/apache/xalan/lib/sql/QueryParameter.getName:()Ljava/lang/String;
      35: invokespecial #23                 // Method org/apache/xml/utils/QName."<init>":(Ljava/lang/String;)V
      38: invokeinterface #24,  2           // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getVariableOrParam:(Lorg/apache/xml/utils/QName;)Lorg/apache/xpath/objects/XObject;
      43: astore        5
      45: aload         5
      47: ifnull        73
      50: aload_1
      51: iload_3
      52: iconst_1
      53: iadd
      54: aload         5
      56: invokevirtual #25                 // Method org/apache/xpath/objects/XObject.object:()Ljava/lang/Object;
      59: aload         4
      61: invokevirtual #26                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      64: iconst_4
      65: invokeinterface #27,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
      70: goto          87
      73: aload_1
      74: iload_3
      75: iconst_1
      76: iadd
      77: aload         4
      79: invokevirtual #26                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      82: invokeinterface #28,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
      87: goto          136
      90: aload         4
      92: invokevirtual #29                 // Method org/apache/xalan/lib/sql/QueryParameter.getValue:()Ljava/lang/String;
      95: astore        5
      97: aload         5
      99: ifnull        122
     102: aload_1
     103: iload_3
     104: iconst_1
     105: iadd
     106: aload         5
     108: aload         4
     110: invokevirtual #26                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
     113: iconst_4
     114: invokeinterface #27,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
     119: goto          136
     122: aload_1
     123: iload_3
     124: iconst_1
     125: iadd
     126: aload         4
     128: invokevirtual #26                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
     131: invokeinterface #28,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
     136: goto          141
     139: astore        5
     141: iinc          3, 1
     144: iload_3
     145: aload_0
     146: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
     149: invokevirtual #31                 // Method java/util/Vector.size:()I
     152: if_icmplt     5
     155: return
    Exception table:
       from    to  target type
          18   136   139   Class java/lang/Exception

  public void registerOutputParameters(java.sql.CallableStatement) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_IsCallable:Z
       4: ifeq          65
       7: aload_0
       8: getfield      #7                  // Field m_hasOutput:Z
      11: ifeq          65
      14: iconst_0
      15: istore_2
      16: goto          54
      19: aload_0
      20: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      23: iload_2
      24: invokevirtual #19                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      27: checkcast     #20                 // class org/apache/xalan/lib/sql/QueryParameter
      30: astore_3
      31: aload_3
      32: invokevirtual #32                 // Method org/apache/xalan/lib/sql/QueryParameter.isOutput:()Z
      35: ifeq          51
      38: aload_1
      39: iload_2
      40: iconst_1
      41: iadd
      42: aload_3
      43: invokevirtual #26                 // Method org/apache/xalan/lib/sql/QueryParameter.getType:()I
      46: invokeinterface #33,  3           // InterfaceMethod java/sql/CallableStatement.registerOutParameter:(II)V
      51: iinc          2, 1
      54: iload_2
      55: aload_0
      56: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      59: invokevirtual #31                 // Method java/util/Vector.size:()I
      62: if_icmplt     19
      65: return

  protected void inlineParser();
    Code:
       0: aconst_null
       1: astore_1
       2: iconst_0
       3: istore_2
       4: new           #34                 // class java/lang/StringBuffer
       7: dup
       8: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
      11: astore_3
      12: iconst_1
      13: istore        4
      15: aload_0
      16: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      19: ifnonnull     33
      22: aload_0
      23: new           #36                 // class java/util/Vector
      26: dup
      27: invokespecial #37                 // Method java/util/Vector."<init>":()V
      30: putfield      #6                  // Field m_Parameters:Ljava/util/Vector;
      33: aload_0
      34: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      37: ifnonnull     51
      40: aload_0
      41: new           #34                 // class java/lang/StringBuffer
      44: dup
      45: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
      48: putfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
      51: iconst_0
      52: istore        5
      54: goto          604
      57: aload_0
      58: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
      61: iload         5
      63: invokevirtual #38                 // Method java/lang/String.charAt:(I)C
      66: istore        6
      68: iload_2
      69: tableswitch   { // 0 to 8
                     0: 120
                     1: 186
                     2: 220
                     3: 235
                     4: 343
                     5: 355
                     6: 446
                     7: 459
                     8: 525
               default: 601
          }
     120: iload         6
     122: bipush        39
     124: if_icmpne     132
     127: iconst_1
     128: istore_2
     129: goto          173
     132: iload         6
     134: bipush        63
     136: if_icmpne     144
     139: iconst_4
     140: istore_2
     141: goto          173
     144: iload         4
     146: ifeq          173
     149: iload         6
     151: invokestatic  #39                 // Method java/lang/Character.isLetterOrDigit:(C)Z
     154: ifne          164
     157: iload         6
     159: bipush        35
     161: if_icmpne     173
     164: aload_3
     165: iload         6
     167: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     170: pop
     171: iconst_3
     172: istore_2
     173: aload_0
     174: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     177: iload         6
     179: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     182: pop
     183: goto          601
     186: iload         6
     188: bipush        39
     190: if_icmpne     198
     193: iconst_0
     194: istore_2
     195: goto          207
     198: iload         6
     200: bipush        92
     202: if_icmpne     207
     205: iconst_2
     206: istore_2
     207: aload_0
     208: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     211: iload         6
     213: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     216: pop
     217: goto          601
     220: iconst_1
     221: istore_2
     222: aload_0
     223: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     226: iload         6
     228: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     231: pop
     232: goto          601
     235: iload         6
     237: invokestatic  #39                 // Method java/lang/Character.isLetterOrDigit:(C)Z
     240: ifne          257
     243: iload         6
     245: bipush        35
     247: if_icmpeq     257
     250: iload         6
     252: bipush        95
     254: if_icmpne     267
     257: aload_3
     258: iload         6
     260: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     263: pop
     264: goto          330
     267: aload_3
     268: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     271: ldc           #41                 // String call
     273: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     276: ifeq          293
     279: aload_0
     280: iconst_1
     281: putfield      #3                  // Field m_IsCallable:Z
     284: aload_1
     285: ifnull        293
     288: aload_1
     289: iconst_1
     290: invokevirtual #43                 // Method org/apache/xalan/lib/sql/QueryParameter.setIsOutput:(Z)V
     293: iconst_0
     294: istore        4
     296: new           #34                 // class java/lang/StringBuffer
     299: dup
     300: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     303: astore_3
     304: iload         6
     306: bipush        39
     308: if_icmpne     316
     311: iconst_1
     312: istore_2
     313: goto          330
     316: iload         6
     318: bipush        63
     320: if_icmpne     328
     323: iconst_4
     324: istore_2
     325: goto          330
     328: iconst_0
     329: istore_2
     330: aload_0
     331: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     334: iload         6
     336: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     339: pop
     340: goto          601
     343: iload         6
     345: bipush        91
     347: if_icmpne     601
     350: iconst_5
     351: istore_2
     352: goto          601
     355: iload         6
     357: invokestatic  #44                 // Method java/lang/Character.isWhitespace:(C)Z
     360: ifne          383
     363: iload         6
     365: bipush        61
     367: if_icmpeq     383
     370: aload_3
     371: iload         6
     373: invokestatic  #45                 // Method java/lang/Character.toUpperCase:(C)C
     376: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     379: pop
     380: goto          601
     383: aload_3
     384: invokevirtual #46                 // Method java/lang/StringBuffer.length:()I
     387: ifle          601
     390: aload_0
     391: iconst_1
     392: putfield      #17                 // Field m_HasParameters:Z
     395: new           #20                 // class org/apache/xalan/lib/sql/QueryParameter
     398: dup
     399: invokespecial #47                 // Method org/apache/xalan/lib/sql/QueryParameter."<init>":()V
     402: astore_1
     403: aload_1
     404: aload_3
     405: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     408: invokevirtual #48                 // Method org/apache/xalan/lib/sql/QueryParameter.setTypeName:(Ljava/lang/String;)V
     411: aload_0
     412: getfield      #6                  // Field m_Parameters:Ljava/util/Vector;
     415: aload_1
     416: invokevirtual #49                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     419: new           #34                 // class java/lang/StringBuffer
     422: dup
     423: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     426: astore_3
     427: iload         6
     429: bipush        61
     431: if_icmpne     440
     434: bipush        7
     436: istore_2
     437: goto          601
     440: bipush        6
     442: istore_2
     443: goto          601
     446: iload         6
     448: bipush        61
     450: if_icmpne     601
     453: bipush        7
     455: istore_2
     456: goto          601
     459: iload         6
     461: invokestatic  #44                 // Method java/lang/Character.isWhitespace:(C)Z
     464: ifne          484
     467: iload         6
     469: bipush        93
     471: if_icmpeq     484
     474: aload_3
     475: iload         6
     477: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     480: pop
     481: goto          601
     484: aload_3
     485: invokevirtual #46                 // Method java/lang/StringBuffer.length:()I
     488: ifle          601
     491: aload_1
     492: aload_3
     493: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     496: invokevirtual #50                 // Method org/apache/xalan/lib/sql/QueryParameter.setName:(Ljava/lang/String;)V
     499: new           #34                 // class java/lang/StringBuffer
     502: dup
     503: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     506: astore_3
     507: iload         6
     509: bipush        93
     511: if_icmpne     519
     514: iconst_0
     515: istore_2
     516: goto          601
     519: bipush        8
     521: istore_2
     522: goto          601
     525: iload         6
     527: invokestatic  #44                 // Method java/lang/Character.isWhitespace:(C)Z
     530: ifne          550
     533: iload         6
     535: bipush        93
     537: if_icmpeq     550
     540: aload_3
     541: iload         6
     543: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     546: pop
     547: goto          601
     550: aload_3
     551: invokevirtual #46                 // Method java/lang/StringBuffer.length:()I
     554: ifle          601
     557: aload_3
     558: iconst_3
     559: invokevirtual #51                 // Method java/lang/StringBuffer.setLength:(I)V
     562: aload_3
     563: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     566: ldc           #52                 // String OUT
     568: invokevirtual #42                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     571: ifeq          584
     574: aload_1
     575: iconst_1
     576: invokevirtual #43                 // Method org/apache/xalan/lib/sql/QueryParameter.setIsOutput:(Z)V
     579: aload_0
     580: iconst_1
     581: putfield      #7                  // Field m_hasOutput:Z
     584: new           #34                 // class java/lang/StringBuffer
     587: dup
     588: invokespecial #35                 // Method java/lang/StringBuffer."<init>":()V
     591: astore_3
     592: iload         6
     594: bipush        93
     596: if_icmpne     601
     599: iconst_0
     600: istore_2
     601: iinc          5, 1
     604: iload         5
     606: aload_0
     607: getfield      #4                  // Field m_OrigQuery:Ljava/lang/String;
     610: invokevirtual #53                 // Method java/lang/String.length:()I
     613: if_icmplt     57
     616: aload_0
     617: getfield      #3                  // Field m_IsCallable:Z
     620: ifeq          644
     623: aload_0
     624: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     627: iconst_0
     628: bipush        123
     630: invokevirtual #54                 // Method java/lang/StringBuffer.insert:(IC)Ljava/lang/StringBuffer;
     633: pop
     634: aload_0
     635: getfield      #5                  // Field m_ParsedQuery:Ljava/lang/StringBuffer;
     638: bipush        125
     640: invokevirtual #40                 // Method java/lang/StringBuffer.append:(C)Ljava/lang/StringBuffer;
     643: pop
     644: return
}
