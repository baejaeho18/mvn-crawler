Compiled from "XConnection.java"
public class org.apache.xalan.lib.sql.XConnection {
  private static final boolean DEBUG;

  private org.apache.xalan.lib.sql.ConnectionPool m_ConnectionPool;

  private java.sql.Connection m_Connection;

  private boolean m_DefaultPoolingEnabled;

  private java.util.Vector m_OpenSQLDocuments;

  private org.apache.xalan.lib.sql.ConnectionPoolManager m_PoolMgr;

  private java.util.Vector m_ParameterList;

  private java.lang.Exception m_Error;

  private org.apache.xalan.lib.sql.SQLDocument m_LastSQLDocumentWithError;

  private boolean m_FullErrors;

  private org.apache.xalan.lib.sql.SQLQueryParser m_QueryParser;

  private boolean m_IsDefaultPool;

  private boolean m_IsStreamingEnabled;

  private boolean m_InlineVariables;

  private boolean m_IsMultipleResultsEnabled;

  private boolean m_IsStatementCachingEnabled;

  public org.apache.xalan.lib.sql.XConnection();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: return

  public org.apache.xalan.lib.sql.XConnection(org.apache.xalan.extensions.ExpressionContext, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: aload_0
     104: aload_1
     105: aload_2
     106: invokevirtual #23                 // Method connect:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/String;)Lorg/apache/xpath/objects/XBooleanStatic;
     109: pop
     110: return

  public org.apache.xalan.lib.sql.XConnection(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: aload_0
     104: aload_1
     105: aload_2
     106: aload_3
     107: invokevirtual #24                 // Method connect:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/xpath/objects/XBooleanStatic;
     110: pop
     111: return

  public org.apache.xalan.lib.sql.XConnection(org.apache.xalan.extensions.ExpressionContext, org.w3c.dom.NodeList);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: aload_0
     104: aload_1
     105: aload_2
     106: invokevirtual #25                 // Method connect:(Lorg/apache/xalan/extensions/ExpressionContext;Lorg/w3c/dom/NodeList;)Lorg/apache/xpath/objects/XBooleanStatic;
     109: pop
     110: return

  public org.apache.xalan.lib.sql.XConnection(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: aload_0
     104: aload_1
     105: aload_2
     106: aload_3
     107: aload         4
     109: aload         5
     111: invokevirtual #26                 // Method connect:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/xpath/objects/XBooleanStatic;
     114: pop
     115: return

  public org.apache.xalan.lib.sql.XConnection(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String, org.w3c.dom.Element);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      19: aload_0
      20: new           #5                  // class java/util/Vector
      23: dup
      24: invokespecial #6                  // Method java/util/Vector."<init>":()V
      27: putfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      30: aload_0
      31: new           #8                  // class org/apache/xalan/lib/sql/ConnectionPoolManager
      34: dup
      35: invokespecial #9                  // Method org/apache/xalan/lib/sql/ConnectionPoolManager."<init>":()V
      38: putfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_0
      42: new           #5                  // class java/util/Vector
      45: dup
      46: invokespecial #6                  // Method java/util/Vector."<init>":()V
      49: putfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: aload_0
      53: aconst_null
      54: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      57: aload_0
      58: aconst_null
      59: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      62: aload_0
      63: iconst_0
      64: putfield      #14                 // Field m_FullErrors:Z
      67: aload_0
      68: new           #15                 // class org/apache/xalan/lib/sql/SQLQueryParser
      71: dup
      72: invokespecial #16                 // Method org/apache/xalan/lib/sql/SQLQueryParser."<init>":()V
      75: putfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      78: aload_0
      79: iconst_0
      80: putfield      #18                 // Field m_IsDefaultPool:Z
      83: aload_0
      84: iconst_1
      85: putfield      #19                 // Field m_IsStreamingEnabled:Z
      88: aload_0
      89: iconst_0
      90: putfield      #20                 // Field m_InlineVariables:Z
      93: aload_0
      94: iconst_0
      95: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      98: aload_0
      99: iconst_0
     100: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
     103: aload_0
     104: aload_1
     105: aload_2
     106: aload_3
     107: aload         4
     109: invokevirtual #27                 // Method connect:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/String;Ljava/lang/String;Lorg/w3c/dom/Element;)Lorg/apache/xpath/objects/XBooleanStatic;
     112: pop
     113: return

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
       5: aload_2
       6: invokevirtual #28                 // Method org/apache/xalan/lib/sql/ConnectionPoolManager.getPool:(Ljava/lang/String;)Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      12: aload_0
      13: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      16: ifnonnull     92
      19: new           #29                 // class org/apache/xalan/lib/sql/JNDIConnectionPool
      22: dup
      23: aload_2
      24: invokespecial #30                 // Method org/apache/xalan/lib/sql/JNDIConnectionPool."<init>":(Ljava/lang/String;)V
      27: astore_3
      28: aload_3
      29: invokeinterface #31,  1           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.testConnection:()Z
      34: ifeq          65
      37: aload_0
      38: getfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      41: aload_2
      42: aload_3
      43: invokevirtual #32                 // Method org/apache/xalan/lib/sql/ConnectionPoolManager.registerPool:(Ljava/lang/String;Lorg/apache/xalan/lib/sql/ConnectionPool;)V
      46: aload_0
      47: aload_3
      48: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      51: aload_0
      52: iconst_0
      53: putfield      #18                 // Field m_IsDefaultPool:Z
      56: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      59: dup
      60: iconst_1
      61: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      64: areturn
      65: new           #35                 // class java/lang/IllegalArgumentException
      68: dup
      69: new           #36                 // class java/lang/StringBuffer
      72: dup
      73: invokespecial #37                 // Method java/lang/StringBuffer."<init>":()V
      76: ldc           #38                 // String Invalid ConnectionPool name or JNDI Datasource path:
      78: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      81: aload_2
      82: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      85: invokevirtual #40                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      88: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload_0
      93: iconst_0
      94: putfield      #18                 // Field m_IsDefaultPool:Z
      97: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
     100: dup
     101: iconst_1
     102: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
     105: areturn
     106: astore_3
     107: aload_0
     108: aload_3
     109: aload_1
     110: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
     113: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
     116: dup
     117: iconst_0
     118: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
     121: areturn
    Exception table:
       from    to  target type
           0   106   106   Class java/lang/Exception

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: new           #44                 // class java/util/Properties
       6: dup
       7: invokespecial #45                 // Method java/util/Properties."<init>":()V
      10: invokespecial #46                 // Method init:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
      13: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      16: dup
      17: iconst_1
      18: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      21: areturn
      22: astore        4
      24: aload_0
      25: aload         4
      27: aload_1
      28: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      31: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      34: dup
      35: iconst_0
      36: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      39: areturn
      40: astore        5
      42: aload_0
      43: aload         5
      45: aload_1
      46: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      49: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      52: dup
      53: iconst_0
      54: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      57: areturn
    Exception table:
       from    to  target type
           0    22    22   Class java/sql/SQLException
           0    22    40   Class java/lang/Exception

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, org.w3c.dom.Element);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #48                 // Method initFromElement:(Lorg/w3c/dom/Element;)V
       5: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
       8: dup
       9: iconst_1
      10: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      13: areturn
      14: astore_3
      15: aload_0
      16: aload_3
      17: aload_1
      18: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      21: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      24: dup
      25: iconst_0
      26: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      29: areturn
      30: astore        4
      32: aload_0
      33: aload         4
      35: aload_1
      36: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      39: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      42: dup
      43: iconst_0
      44: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      47: areturn
    Exception table:
       from    to  target type
           0    14    14   Class java/sql/SQLException
           0    14    30   Class java/lang/Exception

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, org.w3c.dom.NodeList);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_0
       3: invokeinterface #49,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
       8: checkcast     #50                 // class org/w3c/dom/Element
      11: invokespecial #48                 // Method initFromElement:(Lorg/w3c/dom/Element;)V
      14: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      17: dup
      18: iconst_1
      19: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      22: areturn
      23: astore_3
      24: aload_0
      25: aload_3
      26: aload_1
      27: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      30: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      33: dup
      34: iconst_0
      35: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      38: areturn
      39: astore        4
      41: aload_0
      42: aload         4
      44: aload_1
      45: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      48: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      51: dup
      52: iconst_0
      53: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      56: areturn
    Exception table:
       from    to  target type
           0    23    23   Class java/sql/SQLException
           0    23    39   Class java/lang/Exception

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: new           #44                 // class java/util/Properties
       3: dup
       4: invokespecial #45                 // Method java/util/Properties."<init>":()V
       7: astore        6
       9: aload         6
      11: ldc           #51                 // String user
      13: aload         4
      15: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload         6
      21: ldc           #53                 // String password
      23: aload         5
      25: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_0
      30: aload_2
      31: aload_3
      32: aload         6
      34: invokespecial #46                 // Method init:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
      37: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      40: dup
      41: iconst_1
      42: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      45: areturn
      46: astore        6
      48: aload_0
      49: aload         6
      51: aload_1
      52: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      55: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      58: dup
      59: iconst_0
      60: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      63: areturn
      64: astore        7
      66: aload_0
      67: aload         7
      69: aload_1
      70: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      73: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      76: dup
      77: iconst_0
      78: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      81: areturn
    Exception table:
       from    to  target type
           0    46    46   Class java/sql/SQLException
           0    46    64   Class java/lang/Exception

  public org.apache.xpath.objects.XBooleanStatic connect(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String, org.w3c.dom.Element);
    Code:
       0: new           #44                 // class java/util/Properties
       3: dup
       4: invokespecial #45                 // Method java/util/Properties."<init>":()V
       7: astore        5
       9: aload         4
      11: invokeinterface #54,  1           // InterfaceMethod org/w3c/dom/Node.getAttributes:()Lorg/w3c/dom/NamedNodeMap;
      16: astore        6
      18: iconst_0
      19: istore        7
      21: goto          61
      24: aload         5
      26: aload         6
      28: iload         7
      30: invokeinterface #55,  2           // InterfaceMethod org/w3c/dom/NamedNodeMap.item:(I)Lorg/w3c/dom/Node;
      35: invokeinterface #56,  1           // InterfaceMethod org/w3c/dom/Node.getNodeName:()Ljava/lang/String;
      40: aload         6
      42: iload         7
      44: invokeinterface #55,  2           // InterfaceMethod org/w3c/dom/NamedNodeMap.item:(I)Lorg/w3c/dom/Node;
      49: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      54: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: iinc          7, 1
      61: iload         7
      63: aload         6
      65: invokeinterface #58,  1           // InterfaceMethod org/w3c/dom/NamedNodeMap.getLength:()I
      70: if_icmplt     24
      73: aload_0
      74: aload_2
      75: aload_3
      76: aload         5
      78: invokespecial #46                 // Method init:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
      81: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
      84: dup
      85: iconst_1
      86: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
      89: areturn
      90: astore        5
      92: aload_0
      93: aload         5
      95: aload_1
      96: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      99: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
     102: dup
     103: iconst_0
     104: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
     107: areturn
     108: astore        6
     110: aload_0
     111: aload         6
     113: aload_1
     114: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
     117: new           #33                 // class org/apache/xpath/objects/XBooleanStatic
     120: dup
     121: iconst_0
     122: invokespecial #34                 // Method org/apache/xpath/objects/XBooleanStatic."<init>":(Z)V
     125: areturn
    Exception table:
       from    to  target type
           0    90    90   Class java/sql/SQLException
           0    90   108   Class java/lang/Exception

  private void initFromElement(org.w3c.dom.Element) throws java.sql.SQLException;
    Code:
       0: new           #44                 // class java/util/Properties
       3: dup
       4: invokespecial #45                 // Method java/util/Properties."<init>":()V
       7: astore_2
       8: ldc           #59                 // String
      10: astore_3
      11: ldc           #59                 // String
      13: astore        4
      15: aload_1
      16: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      21: astore        5
      23: aconst_null
      24: aload         5
      26: if_acmpne     30
      29: return
      30: aload         5
      32: invokeinterface #56,  1           // InterfaceMethod org/w3c/dom/Node.getNodeName:()Ljava/lang/String;
      37: astore        6
      39: aload         6
      41: ldc           #61                 // String dbdriver
      43: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      46: ifeq          75
      49: ldc           #59                 // String
      51: astore_3
      52: aload         5
      54: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      59: astore        7
      61: aconst_null
      62: aload         7
      64: if_acmpeq     75
      67: aload         7
      69: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      74: astore_3
      75: aload         6
      77: ldc           #63                 // String dburl
      79: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      82: ifeq          113
      85: ldc           #59                 // String
      87: astore        4
      89: aload         5
      91: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      96: astore        7
      98: aconst_null
      99: aload         7
     101: if_acmpeq     113
     104: aload         7
     106: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
     111: astore        4
     113: aload         6
     115: ldc           #53                 // String password
     117: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     120: ifeq          160
     123: ldc           #59                 // String
     125: astore        7
     127: aload         5
     129: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
     134: astore        8
     136: aconst_null
     137: aload         8
     139: if_acmpeq     151
     142: aload         8
     144: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
     149: astore        7
     151: aload_2
     152: ldc           #53                 // String password
     154: aload         7
     156: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     159: pop
     160: aload         6
     162: ldc           #51                 // String user
     164: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     167: ifeq          207
     170: ldc           #59                 // String
     172: astore        7
     174: aload         5
     176: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
     181: astore        8
     183: aconst_null
     184: aload         8
     186: if_acmpeq     198
     189: aload         8
     191: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
     196: astore        7
     198: aload_2
     199: ldc           #51                 // String user
     201: aload         7
     203: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     206: pop
     207: aload         6
     209: ldc           #64                 // String protocol
     211: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     214: ifeq          293
     217: ldc           #59                 // String
     219: astore        7
     221: aload         5
     223: invokeinterface #54,  1           // InterfaceMethod org/w3c/dom/Node.getAttributes:()Lorg/w3c/dom/NamedNodeMap;
     228: astore        8
     230: aload         8
     232: ldc           #65                 // String name
     234: invokeinterface #66,  2           // InterfaceMethod org/w3c/dom/NamedNodeMap.getNamedItem:(Ljava/lang/String;)Lorg/w3c/dom/Node;
     239: astore        9
     241: aconst_null
     242: aload         9
     244: if_acmpeq     293
     247: ldc           #59                 // String
     249: astore        10
     251: aload         9
     253: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
     258: astore        7
     260: aload         5
     262: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
     267: astore        11
     269: aconst_null
     270: aload         11
     272: if_acmpeq     284
     275: aload         11
     277: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
     282: astore        10
     284: aload_2
     285: aload         7
     287: aload         10
     289: invokevirtual #52                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     292: pop
     293: aload         5
     295: invokeinterface #67,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     300: dup
     301: astore        5
     303: ifnonnull     30
     306: aload_0
     307: aload_3
     308: aload         4
     310: aload_2
     311: invokespecial #46                 // Method init:(Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)V
     314: return

  private void init(java.lang.String, java.lang.String, java.util.Properties) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_3
       4: ldc           #51                 // String user
       6: invokevirtual #68                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       9: astore        5
      11: aload         5
      13: ifnonnull     20
      16: ldc           #59                 // String
      18: astore        5
      20: aload_3
      21: ldc           #53                 // String password
      23: invokevirtual #68                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      26: astore        6
      28: aload         6
      30: ifnonnull     37
      33: ldc           #59                 // String
      35: astore        6
      37: new           #36                 // class java/lang/StringBuffer
      40: dup
      41: invokespecial #37                 // Method java/lang/StringBuffer."<init>":()V
      44: aload_1
      45: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      48: aload_2
      49: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      52: aload         5
      54: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      57: aload         6
      59: invokevirtual #39                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      62: invokevirtual #40                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      65: astore        7
      67: aload_0
      68: getfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
      71: aload         7
      73: invokevirtual #28                 // Method org/apache/xalan/lib/sql/ConnectionPoolManager.getPool:(Ljava/lang/String;)Lorg/apache/xalan/lib/sql/ConnectionPool;
      76: astore        8
      78: aload         8
      80: ifnonnull     143
      83: new           #69                 // class org/apache/xalan/lib/sql/DefaultConnectionPool
      86: dup
      87: invokespecial #70                 // Method org/apache/xalan/lib/sql/DefaultConnectionPool."<init>":()V
      90: astore        9
      92: aload         9
      94: aload_1
      95: invokevirtual #71                 // Method org/apache/xalan/lib/sql/DefaultConnectionPool.setDriver:(Ljava/lang/String;)V
      98: aload         9
     100: aload_2
     101: invokevirtual #72                 // Method org/apache/xalan/lib/sql/DefaultConnectionPool.setURL:(Ljava/lang/String;)V
     104: aload         9
     106: aload_3
     107: invokevirtual #73                 // Method org/apache/xalan/lib/sql/DefaultConnectionPool.setProtocol:(Ljava/util/Properties;)V
     110: aload_0
     111: getfield      #4                  // Field m_DefaultPoolingEnabled:Z
     114: ifeq          123
     117: aload         9
     119: iconst_1
     120: invokevirtual #74                 // Method org/apache/xalan/lib/sql/DefaultConnectionPool.setPoolEnabled:(Z)V
     123: aload_0
     124: getfield      #10                 // Field m_PoolMgr:Lorg/apache/xalan/lib/sql/ConnectionPoolManager;
     127: aload         7
     129: aload         9
     131: invokevirtual #32                 // Method org/apache/xalan/lib/sql/ConnectionPoolManager.registerPool:(Ljava/lang/String;Lorg/apache/xalan/lib/sql/ConnectionPool;)V
     134: aload_0
     135: aload         9
     137: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     140: goto          149
     143: aload_0
     144: aload         8
     146: putfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     149: aload_0
     150: iconst_1
     151: putfield      #18                 // Field m_IsDefaultPool:Z
     154: aload_0
     155: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     158: invokeinterface #75,  1           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.getConnection:()Ljava/sql/Connection;
     163: astore        4
     165: jsr           203
     168: goto          223
     171: astore        9
     173: aload         4
     175: ifnull        192
     178: aload_0
     179: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     182: aload         4
     184: invokeinterface #76,  2           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.releaseConnectionOnError:(Ljava/sql/Connection;)V
     189: aconst_null
     190: astore        4
     192: aload         9
     194: athrow
     195: astore        10
     197: jsr           203
     200: aload         10
     202: athrow
     203: astore        11
     205: aload         4
     207: ifnull        221
     210: aload_0
     211: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     214: aload         4
     216: invokeinterface #77,  2           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.releaseConnection:(Ljava/sql/Connection;)V
     221: ret           11
     223: return
    Exception table:
       from    to  target type
         154   165   171   Class java/sql/SQLException
         154   195   195   any

  public org.apache.xalan.lib.sql.ConnectionPool getConnectionPool();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       4: areturn

  public org.apache.xml.dtm.DTM query(org.apache.xalan.extensions.ExpressionContext, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: aload_0
       4: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       7: if_acmpne     19
      10: aconst_null
      11: astore        4
      13: jsr           105
      16: aload         4
      18: areturn
      19: aload_0
      20: getfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      23: aload_0
      24: aload_2
      25: iconst_1
      26: invokevirtual #78                 // Method org/apache/xalan/lib/sql/SQLQueryParser.parse:(Lorg/apache/xalan/lib/sql/XConnection;Ljava/lang/String;I)Lorg/apache/xalan/lib/sql/SQLQueryParser;
      29: astore        5
      31: aload_1
      32: invokestatic  #79                 // Method org/apache/xalan/lib/sql/SQLDocument.getNewDocument:(Lorg/apache/xalan/extensions/ExpressionContext;)Lorg/apache/xalan/lib/sql/SQLDocument;
      35: astore_3
      36: aload_3
      37: aload_0
      38: aload         5
      40: invokevirtual #80                 // Method org/apache/xalan/lib/sql/SQLDocument.execute:(Lorg/apache/xalan/lib/sql/XConnection;Lorg/apache/xalan/lib/sql/SQLQueryParser;)V
      43: aload_0
      44: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      47: aload_3
      48: invokevirtual #81                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      51: jsr           105
      54: goto          109
      57: astore        4
      59: aload_3
      60: ifnull        91
      63: aload_3
      64: invokevirtual #82                 // Method org/apache/xalan/lib/sql/SQLDocument.hasErrors:()Z
      67: ifeq          81
      70: aload_0
      71: aload         4
      73: aload_3
      74: aload_3
      75: invokevirtual #83                 // Method org/apache/xalan/lib/sql/SQLDocument.checkWarnings:()Ljava/sql/SQLWarning;
      78: invokevirtual #84                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      81: aload_3
      82: aload_0
      83: getfield      #18                 // Field m_IsDefaultPool:Z
      86: invokevirtual #85                 // Method org/apache/xalan/lib/sql/SQLDocument.close:(Z)V
      89: aconst_null
      90: astore_3
      91: jsr           105
      94: goto          109
      97: astore        6
      99: jsr           105
     102: aload         6
     104: athrow
     105: astore        7
     107: ret           7
     109: aload_3
     110: areturn
    Exception table:
       from    to  target type
           2    51    57   Class java/lang/Exception
           2    97    97   any

  public org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #86                 // Method pquery:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/String;Ljava/lang/String;)Lorg/apache/xml/dtm/DTM;
       7: areturn

  public org.apache.xml.dtm.DTM pquery(org.apache.xalan.extensions.ExpressionContext, java.lang.String, java.lang.String);
    Code:
       0: aconst_null
       1: astore        4
       3: aconst_null
       4: aload_0
       5: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       8: if_acmpne     20
      11: aconst_null
      12: astore        5
      14: jsr           136
      17: aload         5
      19: areturn
      20: aload_0
      21: getfield      #17                 // Field m_QueryParser:Lorg/apache/xalan/lib/sql/SQLQueryParser;
      24: aload_0
      25: aload_2
      26: iconst_0
      27: invokevirtual #78                 // Method org/apache/xalan/lib/sql/SQLQueryParser.parse:(Lorg/apache/xalan/lib/sql/XConnection;Ljava/lang/String;I)Lorg/apache/xalan/lib/sql/SQLQueryParser;
      30: astore        6
      32: aload_0
      33: getfield      #20                 // Field m_InlineVariables:Z
      36: ifne          53
      39: aload_0
      40: aload_3
      41: invokespecial #87                 // Method addTypeToData:(Ljava/lang/String;)V
      44: aload         6
      46: aload_0
      47: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      50: invokevirtual #88                 // Method org/apache/xalan/lib/sql/SQLQueryParser.setParameters:(Ljava/util/Vector;)V
      53: aload_1
      54: invokestatic  #79                 // Method org/apache/xalan/lib/sql/SQLDocument.getNewDocument:(Lorg/apache/xalan/extensions/ExpressionContext;)Lorg/apache/xalan/lib/sql/SQLDocument;
      57: astore        4
      59: aload         4
      61: aload_0
      62: aload         6
      64: invokevirtual #80                 // Method org/apache/xalan/lib/sql/SQLDocument.execute:(Lorg/apache/xalan/lib/sql/XConnection;Lorg/apache/xalan/lib/sql/SQLQueryParser;)V
      67: aload_0
      68: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      71: aload         4
      73: invokevirtual #81                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      76: jsr           136
      79: goto          140
      82: astore        5
      84: aload         4
      86: ifnull        122
      89: aload         4
      91: invokevirtual #82                 // Method org/apache/xalan/lib/sql/SQLDocument.hasErrors:()Z
      94: ifeq          110
      97: aload_0
      98: aload         5
     100: aload         4
     102: aload         4
     104: invokevirtual #83                 // Method org/apache/xalan/lib/sql/SQLDocument.checkWarnings:()Ljava/sql/SQLWarning;
     107: invokevirtual #84                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
     110: aload         4
     112: aload_0
     113: getfield      #18                 // Field m_IsDefaultPool:Z
     116: invokevirtual #85                 // Method org/apache/xalan/lib/sql/SQLDocument.close:(Z)V
     119: aconst_null
     120: astore        4
     122: jsr           136
     125: goto          140
     128: astore        7
     130: jsr           136
     133: aload         7
     135: athrow
     136: astore        8
     138: ret           8
     140: aload         4
     142: areturn
    Exception table:
       from    to  target type
           3    76    82   Class java/lang/Exception
           3   128   128   any

  public void skipRec(org.apache.xalan.extensions.ExpressionContext, java.lang.Object, int);
    Code:
       0: aconst_null
       1: astore        4
       3: aconst_null
       4: astore        5
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokespecial #89                 // Method locateSQLDocument:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/Object;)Lorg/apache/xalan/lib/sql/SQLDocument;
      12: astore        4
      14: aload         4
      16: ifnull        25
      19: aload         4
      21: iload_3
      22: invokevirtual #90                 // Method org/apache/xalan/lib/sql/SQLDocument.skip:(I)V
      25: return

  private void addTypeToData(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        67
       4: aload_0
       5: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
       8: ifnull        67
      11: new           #91                 // class java/util/StringTokenizer
      14: dup
      15: aload_1
      16: invokespecial #92                 // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;)V
      19: astore_3
      20: iconst_0
      21: istore_2
      22: goto          60
      25: aload_3
      26: invokevirtual #93                 // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      29: astore        4
      31: aload_0
      32: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      35: iload_2
      36: invokevirtual #94                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      39: checkcast     #95                 // class org/apache/xalan/lib/sql/QueryParameter
      42: astore        5
      44: aconst_null
      45: aload         5
      47: if_acmpeq     57
      50: aload         5
      52: aload         4
      54: invokevirtual #96                 // Method org/apache/xalan/lib/sql/QueryParameter.setTypeName:(Ljava/lang/String;)V
      57: iinc          2, 1
      60: aload_3
      61: invokevirtual #97                 // Method java/util/StringTokenizer.hasMoreTokens:()Z
      64: ifne          25
      67: return

  public void addParameter(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #98                 // Method addParameterWithType:(Ljava/lang/String;Ljava/lang/String;)V
       6: return

  public void addParameterWithType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
       4: new           #95                 // class org/apache/xalan/lib/sql/QueryParameter
       7: dup
       8: aload_1
       9: aload_2
      10: invokespecial #99                 // Method org/apache/xalan/lib/sql/QueryParameter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      13: invokevirtual #81                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      16: return

  public void addParameterFromElement(org.w3c.dom.Element);
    Code:
       0: aload_1
       1: invokeinterface #54,  1           // InterfaceMethod org/w3c/dom/Node.getAttributes:()Lorg/w3c/dom/NamedNodeMap;
       6: astore_2
       7: aload_2
       8: ldc           #100                // String type
      10: invokeinterface #66,  2           // InterfaceMethod org/w3c/dom/NamedNodeMap.getNamedItem:(Ljava/lang/String;)Lorg/w3c/dom/Node;
      15: astore_3
      16: aload_1
      17: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      22: astore        4
      24: aconst_null
      25: aload         4
      27: if_acmpeq     70
      30: aload         4
      32: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      37: astore        5
      39: aload         5
      41: ifnonnull     48
      44: ldc           #59                 // String
      46: astore        5
      48: aload_0
      49: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      52: new           #95                 // class org/apache/xalan/lib/sql/QueryParameter
      55: dup
      56: aload         5
      58: aload_3
      59: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      64: invokespecial #99                 // Method org/apache/xalan/lib/sql/QueryParameter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      67: invokevirtual #81                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      70: return

  public void addParameterFromElement(org.w3c.dom.NodeList);
    Code:
       0: aload_1
       1: invokeinterface #101,  1          // InterfaceMethod org/w3c/dom/NodeList.getLength:()I
       6: istore_2
       7: iconst_0
       8: istore_3
       9: goto          29
      12: aload_0
      13: aload_1
      14: iload_3
      15: invokeinterface #49,  2           // InterfaceMethod org/w3c/dom/NodeList.item:(I)Lorg/w3c/dom/Node;
      20: checkcast     #50                 // class org/w3c/dom/Element
      23: invokespecial #102                // Method addParameters:(Lorg/w3c/dom/Element;)V
      26: iinc          3, 1
      29: iload_3
      30: iload_2
      31: if_icmplt     12
      34: return

  private void addParameters(org.w3c.dom.Element);
    Code:
       0: aload_1
       1: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
       6: astore_2
       7: aconst_null
       8: aload_2
       9: if_acmpne     13
      12: return
      13: aload_2
      14: invokeinterface #103,  1          // InterfaceMethod org/w3c/dom/Node.getNodeType:()S
      19: iconst_1
      20: if_icmpne     111
      23: aload_2
      24: invokeinterface #54,  1           // InterfaceMethod org/w3c/dom/Node.getAttributes:()Lorg/w3c/dom/NamedNodeMap;
      29: astore_3
      30: aload_3
      31: ldc           #100                // String type
      33: invokeinterface #66,  2           // InterfaceMethod org/w3c/dom/NamedNodeMap.getNamedItem:(Ljava/lang/String;)Lorg/w3c/dom/Node;
      38: astore        4
      40: aload         4
      42: ifnonnull     52
      45: ldc           #104                // String string
      47: astore        5
      49: goto          61
      52: aload         4
      54: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      59: astore        5
      61: aload_2
      62: invokeinterface #60,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      67: astore        6
      69: aconst_null
      70: aload         6
      72: if_acmpeq     111
      75: aload         6
      77: invokeinterface #57,  1           // InterfaceMethod org/w3c/dom/Node.getNodeValue:()Ljava/lang/String;
      82: astore        7
      84: aload         7
      86: ifnonnull     93
      89: ldc           #59                 // String
      91: astore        7
      93: aload_0
      94: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
      97: new           #95                 // class org/apache/xalan/lib/sql/QueryParameter
     100: dup
     101: aload         7
     103: aload         5
     105: invokespecial #99                 // Method org/apache/xalan/lib/sql/QueryParameter."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     108: invokevirtual #81                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     111: aload_2
     112: invokeinterface #67,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     117: dup
     118: astore_2
     119: ifnonnull     13
     122: return

  public void clearParameters();
    Code:
       0: aload_0
       1: getfield      #11                 // Field m_ParameterList:Ljava/util/Vector;
       4: invokevirtual #105                // Method java/util/Vector.removeAllElements:()V
       7: return

  public void enableDefaultConnectionPool();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
       5: aload_0
       6: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: getfield      #18                 // Field m_IsDefaultPool:Z
      17: ifeq          21
      20: return
      21: aload_0
      22: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      25: iconst_1
      26: invokeinterface #106,  2          // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.setPoolEnabled:(Z)V
      31: return

  public void disableDefaultConnectionPool();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
       5: aload_0
       6: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
       9: ifnonnull     13
      12: return
      13: aload_0
      14: getfield      #18                 // Field m_IsDefaultPool:Z
      17: ifne          21
      20: return
      21: aload_0
      22: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      25: iconst_0
      26: invokeinterface #106,  2          // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.setPoolEnabled:(Z)V
      31: return

  public void enableStreamingMode();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #19                 // Field m_IsStreamingEnabled:Z
       5: return

  public void disableStreamingMode();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #19                 // Field m_IsStreamingEnabled:Z
       5: return

  public org.apache.xml.dtm.DTM getError();
    Code:
       0: aload_0
       1: getfield      #14                 // Field m_FullErrors:Z
       4: ifeq          54
       7: iconst_0
       8: istore_1
       9: goto          43
      12: aload_0
      13: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      16: iload_1
      17: invokevirtual #94                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      20: checkcast     #107                // class org/apache/xalan/lib/sql/SQLDocument
      23: astore_2
      24: aload_2
      25: invokevirtual #83                 // Method org/apache/xalan/lib/sql/SQLDocument.checkWarnings:()Ljava/sql/SQLWarning;
      28: astore_3
      29: aload_3
      30: ifnull        40
      33: aload_0
      34: aconst_null
      35: aload_2
      36: aload_3
      37: invokevirtual #84                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/lib/sql/SQLDocument;Ljava/sql/SQLWarning;)V
      40: iinc          1, 1
      43: iload_1
      44: aload_0
      45: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      48: invokevirtual #108                // Method java/util/Vector.size:()I
      51: if_icmplt     12
      54: aload_0
      55: invokespecial #109                // Method buildErrorDocument:()Lorg/apache/xalan/lib/sql/SQLErrorDocument;
      58: areturn

  public void close() throws java.sql.SQLException;
    Code:
       0: goto          35
       3: aload_0
       4: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
       7: iconst_0
       8: invokevirtual #94                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      11: checkcast     #107                // class org/apache/xalan/lib/sql/SQLDocument
      14: astore_1
      15: aload_1
      16: aload_0
      17: getfield      #18                 // Field m_IsDefaultPool:Z
      20: invokevirtual #85                 // Method org/apache/xalan/lib/sql/SQLDocument.close:(Z)V
      23: goto          27
      26: astore_2
      27: aload_0
      28: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      31: iconst_0
      32: invokevirtual #110                // Method java/util/Vector.removeElementAt:(I)V
      35: aload_0
      36: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      39: invokevirtual #108                // Method java/util/Vector.size:()I
      42: ifne          3
      45: aconst_null
      46: aload_0
      47: getfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      50: if_acmpeq     71
      53: aload_0
      54: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      57: aload_0
      58: getfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      61: invokeinterface #77,  2           // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.releaseConnection:(Ljava/sql/Connection;)V
      66: aload_0
      67: aconst_null
      68: putfield      #3                  // Field m_Connection:Ljava/sql/Connection;
      71: return
    Exception table:
       from    to  target type
          15    23    26   Class java/lang/Exception

  public void close(org.apache.xalan.extensions.ExpressionContext, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #89                 // Method locateSQLDocument:(Lorg/apache/xalan/extensions/ExpressionContext;Ljava/lang/Object;)Lorg/apache/xalan/lib/sql/SQLDocument;
       6: astore_3
       7: aload_3
       8: ifnull        28
      11: aload_3
      12: aload_0
      13: getfield      #18                 // Field m_IsDefaultPool:Z
      16: invokevirtual #85                 // Method org/apache/xalan/lib/sql/SQLDocument.close:(Z)V
      19: aload_0
      20: getfield      #7                  // Field m_OpenSQLDocuments:Ljava/util/Vector;
      23: aload_3
      24: invokevirtual #111                // Method java/util/Vector.remove:(Ljava/lang/Object;)Z
      27: pop
      28: return

  private org.apache.xalan.lib.sql.SQLDocument locateSQLDocument(org.apache.xalan.extensions.ExpressionContext, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #112                // class org/apache/xml/dtm/ref/DTMNodeIterator
       4: ifeq          68
       7: aload_2
       8: checkcast     #112                // class org/apache/xml/dtm/ref/DTMNodeIterator
      11: astore_3
      12: aload_3
      13: invokevirtual #113                // Method org/apache/xml/dtm/ref/DTMNodeIterator.getRoot:()Lorg/w3c/dom/Node;
      16: checkcast     #114                // class org/apache/xml/dtm/ref/DTMNodeProxy
      19: astore        4
      21: aload         4
      23: invokevirtual #115                // Method org/apache/xml/dtm/ref/DTMNodeProxy.getDTM:()Lorg/apache/xml/dtm/DTM;
      26: checkcast     #107                // class org/apache/xalan/lib/sql/SQLDocument
      29: areturn
      30: astore        4
      32: aload_3
      33: invokevirtual #116                // Method org/apache/xml/dtm/ref/DTMNodeIterator.getDTMIterator:()Lorg/apache/xml/dtm/DTMIterator;
      36: checkcast     #117                // class org/apache/xpath/objects/XNodeSet
      39: astore        5
      41: aload         5
      43: invokevirtual #118                // Method org/apache/xpath/axes/NodeSequence.getContainedIter:()Lorg/apache/xml/dtm/DTMIterator;
      46: astore        6
      48: aload         6
      50: aload         5
      52: invokevirtual #119                // Method org/apache/xpath/axes/NodeSequence.nextNode:()I
      55: invokeinterface #120,  2          // InterfaceMethod org/apache/xml/dtm/DTMIterator.getDTM:(I)Lorg/apache/xml/dtm/DTM;
      60: astore        7
      62: aload         7
      64: checkcast     #107                // class org/apache/xalan/lib/sql/SQLDocument
      67: areturn
      68: aload_0
      69: new           #42                 // class java/lang/Exception
      72: dup
      73: ldc           #121                // String SQL Extension:close - Can Not Identify SQLDocument
      75: invokespecial #122                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      78: aload_1
      79: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      82: aconst_null
      83: areturn
      84: astore_3
      85: aload_0
      86: aload_3
      87: aload_1
      88: invokevirtual #43                 // Method setError:(Ljava/lang/Exception;Lorg/apache/xalan/extensions/ExpressionContext;)V
      91: aconst_null
      92: areturn
    Exception table:
       from    to  target type
          12    30    30   Class java/lang/Exception
           0    84    84   Class java/lang/Exception

  private org.apache.xalan.lib.sql.SQLErrorDocument buildErrorDocument();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
       6: ifnull        97
       9: aload_0
      10: getfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      13: invokevirtual #123                // Method org/apache/xalan/lib/sql/SQLDocument.getExpressionContext:()Lorg/apache/xalan/extensions/ExpressionContext;
      16: astore_2
      17: aload_0
      18: getfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      21: invokevirtual #83                 // Method org/apache/xalan/lib/sql/SQLDocument.checkWarnings:()Ljava/sql/SQLWarning;
      24: astore_3
      25: aload_2
      26: checkcast     #124                // class org/apache/xpath/XPathContext$XPathExpressionContext
      29: invokevirtual #125                // Method org/apache/xpath/XPathContext$XPathExpressionContext.getDTMManager:()Lorg/apache/xml/dtm/DTMManager;
      32: astore        4
      34: aload         4
      36: checkcast     #126                // class org/apache/xml/dtm/ref/DTMManagerDefault
      39: astore        5
      41: aload         5
      43: invokevirtual #127                // Method org/apache/xml/dtm/ref/DTMManagerDefault.getFirstFreeDTMID:()I
      46: istore        6
      48: new           #128                // class org/apache/xalan/lib/sql/SQLErrorDocument
      51: dup
      52: aload         4
      54: iload         6
      56: bipush        16
      58: ishl
      59: aload_0
      60: getfield      #12                 // Field m_Error:Ljava/lang/Exception;
      63: aload_3
      64: aload_0
      65: getfield      #14                 // Field m_FullErrors:Z
      68: invokespecial #129                // Method org/apache/xalan/lib/sql/SQLErrorDocument."<init>":(Lorg/apache/xml/dtm/DTMManager;ILjava/lang/Exception;Ljava/sql/SQLWarning;Z)V
      71: astore_1
      72: aload         5
      74: aload_1
      75: iload         6
      77: invokevirtual #130                // Method org/apache/xml/dtm/ref/DTMManagerDefault.addDTM:(Lorg/apache/xml/dtm/DTM;I)V
      80: aload_0
      81: aconst_null
      82: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
      85: aload_0
      86: aconst_null
      87: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      90: goto          97
      93: astore        4
      95: aconst_null
      96: astore_1
      97: aload_1
      98: areturn
    Exception table:
       from    to  target type
          25    90    93   Class java/lang/Exception

  public void setError(java.lang.Exception, org.apache.xalan.extensions.ExpressionContext);
    Code:
       0: aload_2
       1: invokeinterface #131,  1          // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getErrorListener:()Ljavax/xml/transform/ErrorListener;
       6: astore_3
       7: aload_3
       8: ifnull        42
      11: aload_1
      12: ifnull        42
      15: aload_3
      16: new           #132                // class javax/xml/transform/TransformerException
      19: dup
      20: aload_1
      21: invokevirtual #133                // Method java/lang/Throwable.toString:()Ljava/lang/String;
      24: aload_2
      25: invokeinterface #134,  1          // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getXPathContext:()Lorg/apache/xpath/XPathContext;
      30: invokevirtual #135                // Method org/apache/xpath/XPathContext.getSAXLocator:()Ljavax/xml/transform/SourceLocator;
      33: aload_1
      34: invokespecial #136                // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V
      37: invokeinterface #137,  2          // InterfaceMethod javax/xml/transform/ErrorListener.warning:(Ljavax/xml/transform/TransformerException;)V
      42: goto          46
      45: astore_3
      46: return
    Exception table:
       from    to  target type
           0    42    45   Class java/lang/Exception

  public void setError(java.lang.Exception, org.apache.xalan.lib.sql.SQLDocument, java.sql.SQLWarning);
    Code:
       0: aload_2
       1: invokevirtual #123                // Method org/apache/xalan/lib/sql/SQLDocument.getExpressionContext:()Lorg/apache/xalan/extensions/ExpressionContext;
       4: astore        4
       6: aload_0
       7: aload_2
       8: putfield      #13                 // Field m_LastSQLDocumentWithError:Lorg/apache/xalan/lib/sql/SQLDocument;
      11: aload         4
      13: invokeinterface #131,  1          // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getErrorListener:()Ljavax/xml/transform/ErrorListener;
      18: astore        5
      20: aload         5
      22: ifnull        58
      25: aload_1
      26: ifnull        58
      29: aload         5
      31: new           #132                // class javax/xml/transform/TransformerException
      34: dup
      35: aload_1
      36: invokevirtual #133                // Method java/lang/Throwable.toString:()Ljava/lang/String;
      39: aload         4
      41: invokeinterface #134,  1          // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getXPathContext:()Lorg/apache/xpath/XPathContext;
      46: invokevirtual #135                // Method org/apache/xpath/XPathContext.getSAXLocator:()Ljavax/xml/transform/SourceLocator;
      49: aload_1
      50: invokespecial #136                // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V
      53: invokeinterface #137,  2          // InterfaceMethod javax/xml/transform/ErrorListener.warning:(Ljavax/xml/transform/TransformerException;)V
      58: aload         5
      60: ifnull        96
      63: aload_3
      64: ifnull        96
      67: aload         5
      69: new           #132                // class javax/xml/transform/TransformerException
      72: dup
      73: aload_3
      74: invokevirtual #133                // Method java/lang/Throwable.toString:()Ljava/lang/String;
      77: aload         4
      79: invokeinterface #134,  1          // InterfaceMethod org/apache/xalan/extensions/ExpressionContext.getXPathContext:()Lorg/apache/xpath/XPathContext;
      84: invokevirtual #135                // Method org/apache/xpath/XPathContext.getSAXLocator:()Ljavax/xml/transform/SourceLocator;
      87: aload_3
      88: invokespecial #136                // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/String;Ljavax/xml/transform/SourceLocator;Ljava/lang/Throwable;)V
      91: invokeinterface #137,  2          // InterfaceMethod javax/xml/transform/ErrorListener.warning:(Ljavax/xml/transform/TransformerException;)V
      96: aload_1
      97: ifnull        105
     100: aload_0
     101: aload_1
     102: putfield      #12                 // Field m_Error:Ljava/lang/Exception;
     105: aload_3
     106: ifnull        202
     109: new           #138                // class java/sql/SQLWarning
     112: dup
     113: aload_3
     114: invokevirtual #139                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     117: aload_3
     118: invokevirtual #140                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     121: aload_3
     122: invokevirtual #141                // Method java/sql/SQLException.getErrorCode:()I
     125: invokespecial #142                // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
     128: astore        6
     130: aload_3
     131: invokevirtual #143                // Method java/sql/SQLWarning.getNextWarning:()Ljava/sql/SQLWarning;
     134: astore        7
     136: goto          173
     139: aload         6
     141: new           #138                // class java/sql/SQLWarning
     144: dup
     145: aload         7
     147: invokevirtual #139                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     150: aload         7
     152: invokevirtual #140                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     155: aload         7
     157: invokevirtual #141                // Method java/sql/SQLException.getErrorCode:()I
     160: invokespecial #142                // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
     163: invokevirtual #144                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
     166: aload         7
     168: invokevirtual #143                // Method java/sql/SQLWarning.getNextWarning:()Ljava/sql/SQLWarning;
     171: astore        7
     173: aload         7
     175: ifnonnull     139
     178: aload         6
     180: new           #138                // class java/sql/SQLWarning
     183: dup
     184: aload_3
     185: invokevirtual #139                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     188: aload_3
     189: invokevirtual #140                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     192: aload_3
     193: invokevirtual #141                // Method java/sql/SQLException.getErrorCode:()I
     196: invokespecial #142                // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;I)V
     199: invokevirtual #144                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
     202: goto          207
     205: astore        5
     207: return
    Exception table:
       from    to  target type
          11   202   205   Class java/lang/Exception

  public void setFeature(java.lang.String, java.lang.String);
    Code:
       0: iconst_0
       1: istore_3
       2: ldc           #145                // String true
       4: aload_2
       5: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       8: ifeq          13
      11: iconst_1
      12: istore_3
      13: ldc           #146                // String streaming
      15: aload_1
      16: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      19: ifeq          30
      22: aload_0
      23: iload_3
      24: putfield      #19                 // Field m_IsStreamingEnabled:Z
      27: goto          138
      30: ldc           #147                // String inline-variables
      32: aload_1
      33: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      36: ifeq          47
      39: aload_0
      40: iload_3
      41: putfield      #20                 // Field m_InlineVariables:Z
      44: goto          138
      47: ldc           #148                // String multiple-results
      49: aload_1
      50: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      53: ifeq          64
      56: aload_0
      57: iload_3
      58: putfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      61: goto          138
      64: ldc           #149                // String cache-statements
      66: aload_1
      67: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      70: ifeq          81
      73: aload_0
      74: iload_3
      75: putfield      #22                 // Field m_IsStatementCachingEnabled:Z
      78: goto          138
      81: ldc           #150                // String default-pool-enabled
      83: aload_1
      84: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      87: ifeq          124
      90: aload_0
      91: iload_3
      92: putfield      #4                  // Field m_DefaultPoolingEnabled:Z
      95: aload_0
      96: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
      99: ifnonnull     103
     102: return
     103: aload_0
     104: getfield      #18                 // Field m_IsDefaultPool:Z
     107: ifeq          111
     110: return
     111: aload_0
     112: getfield      #2                  // Field m_ConnectionPool:Lorg/apache/xalan/lib/sql/ConnectionPool;
     115: iload_3
     116: invokeinterface #106,  2          // InterfaceMethod org/apache/xalan/lib/sql/ConnectionPool.setPoolEnabled:(Z)V
     121: goto          138
     124: ldc           #151                // String full-errors
     126: aload_1
     127: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     130: ifeq          138
     133: aload_0
     134: iload_3
     135: putfield      #14                 // Field m_FullErrors:Z
     138: return

  public java.lang.String getFeature(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: ldc           #146                // String streaming
       4: aload_1
       5: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
       8: ifeq          29
      11: aload_0
      12: getfield      #19                 // Field m_IsStreamingEnabled:Z
      15: ifeq          23
      18: ldc           #145                // String true
      20: goto          25
      23: ldc           #152                // String false
      25: astore_2
      26: goto          161
      29: ldc           #147                // String inline-variables
      31: aload_1
      32: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      35: ifeq          56
      38: aload_0
      39: getfield      #20                 // Field m_InlineVariables:Z
      42: ifeq          50
      45: ldc           #145                // String true
      47: goto          52
      50: ldc           #152                // String false
      52: astore_2
      53: goto          161
      56: ldc           #148                // String multiple-results
      58: aload_1
      59: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      62: ifeq          83
      65: aload_0
      66: getfield      #21                 // Field m_IsMultipleResultsEnabled:Z
      69: ifeq          77
      72: ldc           #145                // String true
      74: goto          79
      77: ldc           #152                // String false
      79: astore_2
      80: goto          161
      83: ldc           #149                // String cache-statements
      85: aload_1
      86: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      89: ifeq          110
      92: aload_0
      93: getfield      #22                 // Field m_IsStatementCachingEnabled:Z
      96: ifeq          104
      99: ldc           #145                // String true
     101: goto          106
     104: ldc           #152                // String false
     106: astore_2
     107: goto          161
     110: ldc           #150                // String default-pool-enabled
     112: aload_1
     113: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     116: ifeq          137
     119: aload_0
     120: getfield      #4                  // Field m_DefaultPoolingEnabled:Z
     123: ifeq          131
     126: ldc           #145                // String true
     128: goto          133
     131: ldc           #152                // String false
     133: astore_2
     134: goto          161
     137: ldc           #151                // String full-errors
     139: aload_1
     140: invokevirtual #62                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     143: ifeq          161
     146: aload_0
     147: getfield      #14                 // Field m_FullErrors:Z
     150: ifeq          158
     153: ldc           #145                // String true
     155: goto          160
     158: ldc           #152                // String false
     160: astore_2
     161: aload_2
     162: areturn

  protected void finalize();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method close:()V
       4: goto          8
       7: astore_1
       8: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception
}
