Compiled from "SQLErrorDocument.java"
public class org.apache.xalan.lib.sql.SQLErrorDocument extends org.apache.xalan.lib.sql.DTMDocument {
  private static final java.lang.String S_EXT_ERROR;

  private static final java.lang.String S_SQL_ERROR;

  private static final java.lang.String S_MESSAGE;

  private static final java.lang.String S_CODE;

  private static final java.lang.String S_STATE;

  private static final java.lang.String S_SQL_WARNING;

  private int m_ErrorExt_TypeID;

  private int m_Message_TypeID;

  private int m_Code_TypeID;

  private int m_State_TypeID;

  private int m_SQLWarning_TypeID;

  private int m_SQLError_TypeID;

  private int m_rootID;

  private int m_extErrorID;

  private int m_MainMessageID;

  public org.apache.xalan.lib.sql.SQLErrorDocument(org.apache.xml.dtm.DTMManager, int, java.sql.SQLException);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/xalan/lib/sql/DTMDocument."<init>":(Lorg/apache/xml/dtm/DTMManager;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field m_ErrorExt_TypeID:I
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field m_Message_TypeID:I
      16: aload_0
      17: iconst_m1
      18: putfield      #4                  // Field m_Code_TypeID:I
      21: aload_0
      22: iconst_m1
      23: putfield      #5                  // Field m_State_TypeID:I
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field m_SQLWarning_TypeID:I
      31: aload_0
      32: iconst_m1
      33: putfield      #7                  // Field m_SQLError_TypeID:I
      36: aload_0
      37: iconst_m1
      38: putfield      #8                  // Field m_rootID:I
      41: aload_0
      42: iconst_m1
      43: putfield      #9                  // Field m_extErrorID:I
      46: aload_0
      47: iconst_m1
      48: putfield      #10                 // Field m_MainMessageID:I
      51: aload_0
      52: invokevirtual #11                 // Method createExpandedNameTable:()V
      55: aload_0
      56: aload_3
      57: invokespecial #12                 // Method buildBasicStructure:(Ljava/lang/Exception;)V
      60: aload_0
      61: iconst_2
      62: aload_0
      63: getfield      #7                  // Field m_SQLError_TypeID:I
      66: aload_0
      67: getfield      #9                  // Field m_extErrorID:I
      70: aload_0
      71: getfield      #10                 // Field m_MainMessageID:I
      74: invokevirtual #13                 // Method org/apache/xalan/lib/sql/DTMDocument.addElement:(IIII)I
      77: istore        4
      79: iconst_m1
      80: istore        5
      82: aload_0
      83: new           #14                 // class java/lang/Integer
      86: dup
      87: aload_3
      88: invokevirtual #15                 // Method java/sql/SQLException.getErrorCode:()I
      91: invokespecial #16                 // Method java/lang/Integer."<init>":(I)V
      94: iconst_3
      95: aload_0
      96: getfield      #4                  // Field m_Code_TypeID:I
      99: iload         4
     101: iload         5
     103: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
     106: istore        5
     108: aload_0
     109: aload_3
     110: invokevirtual #18                 // Method java/lang/Throwable.getLocalizedMessage:()Ljava/lang/String;
     113: iconst_3
     114: aload_0
     115: getfield      #3                  // Field m_Message_TypeID:I
     118: iload         4
     120: iload         5
     122: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
     125: istore        5
     127: return

  public org.apache.xalan.lib.sql.SQLErrorDocument(org.apache.xml.dtm.DTMManager, int, java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/xalan/lib/sql/DTMDocument."<init>":(Lorg/apache/xml/dtm/DTMManager;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field m_ErrorExt_TypeID:I
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field m_Message_TypeID:I
      16: aload_0
      17: iconst_m1
      18: putfield      #4                  // Field m_Code_TypeID:I
      21: aload_0
      22: iconst_m1
      23: putfield      #5                  // Field m_State_TypeID:I
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field m_SQLWarning_TypeID:I
      31: aload_0
      32: iconst_m1
      33: putfield      #7                  // Field m_SQLError_TypeID:I
      36: aload_0
      37: iconst_m1
      38: putfield      #8                  // Field m_rootID:I
      41: aload_0
      42: iconst_m1
      43: putfield      #9                  // Field m_extErrorID:I
      46: aload_0
      47: iconst_m1
      48: putfield      #10                 // Field m_MainMessageID:I
      51: aload_0
      52: invokevirtual #11                 // Method createExpandedNameTable:()V
      55: aload_0
      56: aload_3
      57: invokespecial #12                 // Method buildBasicStructure:(Ljava/lang/Exception;)V
      60: return

  public org.apache.xalan.lib.sql.SQLErrorDocument(org.apache.xml.dtm.DTMManager, int, java.lang.Exception, java.sql.SQLWarning, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/xalan/lib/sql/DTMDocument."<init>":(Lorg/apache/xml/dtm/DTMManager;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field m_ErrorExt_TypeID:I
      11: aload_0
      12: iconst_m1
      13: putfield      #3                  // Field m_Message_TypeID:I
      16: aload_0
      17: iconst_m1
      18: putfield      #4                  // Field m_Code_TypeID:I
      21: aload_0
      22: iconst_m1
      23: putfield      #5                  // Field m_State_TypeID:I
      26: aload_0
      27: iconst_m1
      28: putfield      #6                  // Field m_SQLWarning_TypeID:I
      31: aload_0
      32: iconst_m1
      33: putfield      #7                  // Field m_SQLError_TypeID:I
      36: aload_0
      37: iconst_m1
      38: putfield      #8                  // Field m_rootID:I
      41: aload_0
      42: iconst_m1
      43: putfield      #9                  // Field m_extErrorID:I
      46: aload_0
      47: iconst_m1
      48: putfield      #10                 // Field m_MainMessageID:I
      51: aload_0
      52: invokevirtual #11                 // Method createExpandedNameTable:()V
      55: aload_0
      56: aload_3
      57: invokespecial #12                 // Method buildBasicStructure:(Ljava/lang/Exception;)V
      60: aconst_null
      61: astore        6
      63: aload_0
      64: getfield      #10                 // Field m_MainMessageID:I
      67: istore        7
      69: iconst_0
      70: istore        8
      72: aload_3
      73: ifnull        92
      76: aload_3
      77: instanceof    #19                 // class java/sql/SQLException
      80: ifeq          92
      83: aload_3
      84: checkcast     #19                 // class java/sql/SQLException
      87: astore        6
      89: goto          268
      92: iload         5
      94: ifeq          268
      97: aload         4
      99: ifnull        268
     102: aload         4
     104: astore        6
     106: iconst_1
     107: istore        8
     109: goto          268
     112: aload_0
     113: iconst_2
     114: iload         8
     116: ifeq          126
     119: aload_0
     120: getfield      #6                  // Field m_SQLWarning_TypeID:I
     123: goto          130
     126: aload_0
     127: getfield      #7                  // Field m_SQLError_TypeID:I
     130: aload_0
     131: getfield      #9                  // Field m_extErrorID:I
     134: iload         7
     136: invokevirtual #13                 // Method org/apache/xalan/lib/sql/DTMDocument.addElement:(IIII)I
     139: istore        9
     141: iload         9
     143: istore        7
     145: iconst_m1
     146: istore        10
     148: aload_0
     149: new           #14                 // class java/lang/Integer
     152: dup
     153: aload         6
     155: invokevirtual #15                 // Method java/sql/SQLException.getErrorCode:()I
     158: invokespecial #16                 // Method java/lang/Integer."<init>":(I)V
     161: iconst_3
     162: aload_0
     163: getfield      #4                  // Field m_Code_TypeID:I
     166: iload         9
     168: iload         10
     170: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
     173: istore        10
     175: aload_0
     176: aload         6
     178: invokevirtual #18                 // Method java/lang/Throwable.getLocalizedMessage:()Ljava/lang/String;
     181: iconst_3
     182: aload_0
     183: getfield      #3                  // Field m_Message_TypeID:I
     186: iload         9
     188: iload         10
     190: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
     193: istore        10
     195: iload         5
     197: ifeq          265
     200: aload         6
     202: invokevirtual #20                 // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     205: astore        11
     207: aload         11
     209: ifnull        237
     212: aload         11
     214: invokevirtual #21                 // Method java/lang/String.length:()I
     217: ifle          237
     220: aload_0
     221: aload         11
     223: iconst_3
     224: aload_0
     225: getfield      #5                  // Field m_State_TypeID:I
     228: iload         9
     230: iload         10
     232: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
     235: istore        10
     237: iload         8
     239: ifeq          255
     242: aload         6
     244: checkcast     #22                 // class java/sql/SQLWarning
     247: invokevirtual #23                 // Method java/sql/SQLWarning.getNextWarning:()Ljava/sql/SQLWarning;
     250: astore        6
     252: goto          262
     255: aload         6
     257: invokevirtual #24                 // Method java/sql/SQLException.getNextException:()Ljava/sql/SQLException;
     260: astore        6
     262: goto          268
     265: aconst_null
     266: astore        6
     268: aload         6
     270: ifnonnull     112
     273: return

  private void buildBasicStructure(java.lang.Exception);
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: aload_0
       4: getfield      #25                 // Field org/apache/xalan/lib/sql/DTMDocument.m_Document_TypeID:I
       7: iconst_m1
       8: iconst_m1
       9: invokevirtual #13                 // Method org/apache/xalan/lib/sql/DTMDocument.addElement:(IIII)I
      12: putfield      #8                  // Field m_rootID:I
      15: aload_0
      16: aload_0
      17: iconst_1
      18: aload_0
      19: getfield      #2                  // Field m_ErrorExt_TypeID:I
      22: aload_0
      23: getfield      #8                  // Field m_rootID:I
      26: iconst_m1
      27: invokevirtual #13                 // Method org/apache/xalan/lib/sql/DTMDocument.addElement:(IIII)I
      30: putfield      #9                  // Field m_extErrorID:I
      33: aload_0
      34: aload_0
      35: aload_1
      36: ifnull        46
      39: aload_1
      40: invokevirtual #18                 // Method java/lang/Throwable.getLocalizedMessage:()Ljava/lang/String;
      43: goto          48
      46: ldc           #26                 // String SQLWarning
      48: iconst_2
      49: aload_0
      50: getfield      #3                  // Field m_Message_TypeID:I
      53: aload_0
      54: getfield      #9                  // Field m_extErrorID:I
      57: iconst_m1
      58: invokevirtual #17                 // Method org/apache/xalan/lib/sql/DTMDocument.addElementWithData:(Ljava/lang/Object;IIII)I
      61: putfield      #10                 // Field m_MainMessageID:I
      64: return

  protected void createExpandedNameTable();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/apache/xalan/lib/sql/DTMDocument.createExpandedNameTable:()V
       4: aload_0
       5: aload_0
       6: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
       9: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      11: ldc           #30                 // String ext-error
      13: iconst_1
      14: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      17: putfield      #2                  // Field m_ErrorExt_TypeID:I
      20: aload_0
      21: aload_0
      22: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      25: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      27: ldc           #32                 // String sql-error
      29: iconst_1
      30: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      33: putfield      #7                  // Field m_SQLError_TypeID:I
      36: aload_0
      37: aload_0
      38: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      41: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      43: ldc           #33                 // String message
      45: iconst_1
      46: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      49: putfield      #3                  // Field m_Message_TypeID:I
      52: aload_0
      53: aload_0
      54: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      57: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      59: ldc           #34                 // String code
      61: iconst_1
      62: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      65: putfield      #4                  // Field m_Code_TypeID:I
      68: aload_0
      69: aload_0
      70: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      73: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      75: ldc           #35                 // String state
      77: iconst_1
      78: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      81: putfield      #5                  // Field m_State_TypeID:I
      84: aload_0
      85: aload_0
      86: getfield      #28                 // Field org/apache/xml/dtm/ref/DTMDefaultBase.m_expandedNameTable:Lorg/apache/xml/dtm/ref/ExpandedNameTable;
      89: ldc           #29                 // String http://xml.apache.org/xalan/SQLExtension
      91: ldc           #36                 // String sql-warning
      93: iconst_1
      94: invokevirtual #31                 // Method org/apache/xml/dtm/ref/ExpandedNameTable.getExpandedTypeID:(Ljava/lang/String;Ljava/lang/String;I)I
      97: putfield      #6                  // Field m_SQLWarning_TypeID:I
     100: return
}
