Compiled from "ExtensionHandler.java"
public abstract class org.apache.xalan.extensions.ExtensionHandler {
  protected java.lang.String m_namespaceUri;

  protected java.lang.String m_scriptLang;

  static java.lang.Class getClassForName(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: ldc           #1                  // String org.apache.xalan.xslt.extensions.Redirect
       3: invokevirtual #2                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          12
       9: ldc           #3                  // String org.apache.xalan.lib.Redirect
      11: astore_0
      12: aload_0
      13: invokestatic  #4                  // Method org/apache/xalan/extensions/ObjectFactory.findClassLoader:()Ljava/lang/ClassLoader;
      16: iconst_1
      17: invokestatic  #5                  // Method org/apache/xalan/extensions/ObjectFactory.findProviderClass:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)Ljava/lang/Class;
      20: areturn

  protected org.apache.xalan.extensions.ExtensionHandler(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field m_namespaceUri:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field m_scriptLang:Ljava/lang/String;
      14: return

  public abstract boolean isFunctionAvailable(java.lang.String);

  public abstract boolean isElementAvailable(java.lang.String);

  public abstract java.lang.Object callFunction(java.lang.String, java.util.Vector, java.lang.Object, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException;

  public abstract java.lang.Object callFunction(org.apache.xpath.functions.FuncExtFunction, java.util.Vector, org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException;

  public abstract void processElement(java.lang.String, org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.transformer.TransformerImpl, org.apache.xalan.templates.Stylesheet, java.lang.Object) throws javax.xml.transform.TransformerException, java.io.IOException;
}
