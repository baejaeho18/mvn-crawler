Compiled from "ElemTemplateElement.java"
public class org.apache.xalan.templates.ElemTemplateElement extends org.apache.xml.utils.UnImplNode implements org.apache.xml.utils.PrefixResolver,java.io.Serializable,org.apache.xpath.ExpressionNode,org.apache.xpath.WhitespaceStrippingElementMatcher,org.apache.xalan.templates.XSLTVisitable {
  static final long serialVersionUID;

  private int m_lineNumber;

  private int m_endLineNumber;

  private int m_columnNumber;

  private int m_endColumnNumber;

  private boolean m_defaultSpace;

  private boolean m_hasTextLitOnly;

  protected boolean m_hasVariableDecl;

  private java.util.List m_declaredPrefixes;

  private java.util.List m_prefixTable;

  protected int m_docOrderNumber;

  protected org.apache.xalan.templates.ElemTemplateElement m_parentNode;

  org.apache.xalan.templates.ElemTemplateElement m_nextSibling;

  org.apache.xalan.templates.ElemTemplateElement m_firstChild;

  private transient org.w3c.dom.Node m_DOMBackPointer;

  public org.apache.xalan.templates.ElemTemplateElement();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/apache/xml/utils/UnImplNode."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field m_defaultSpace:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field m_hasTextLitOnly:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field m_hasVariableDecl:Z
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field m_docOrderNumber:I
      24: return

  public boolean isCompiledTemplate();
    Code:
       0: iconst_0
       1: ireturn

  public int getXSLToken();
    Code:
       0: iconst_m1
       1: ireturn

  public java.lang.String getNodeName();
    Code:
       0: ldc           #6                  // String Unknown XSLT Element
       2: areturn

  public java.lang.String getLocalName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getNodeName:()Ljava/lang/String;
       4: areturn

  public void runtimeInit(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public org.apache.xalan.templates.StylesheetComposed getStylesheetComposed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
       7: areturn

  public org.apache.xalan.templates.Stylesheet getStylesheet();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpne     12
       8: aconst_null
       9: goto          19
      12: aload_0
      13: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
      19: areturn

  public org.apache.xalan.templates.StylesheetRoot getStylesheetRoot();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       7: areturn

  public void recompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: return

  public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method resolvePrefixTables:()V
       4: aload_0
       5: invokevirtual #13                 // Method getFirstChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       8: astore_2
       9: aload_0
      10: aload_2
      11: ifnull        34
      14: aload_2
      15: invokevirtual #14                 // Method getXSLToken:()I
      18: bipush        78
      20: if_icmpne     34
      23: aload_2
      24: invokevirtual #15                 // Method getNextSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      27: ifnonnull     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: putfield      #3                  // Field m_hasTextLitOnly:Z
      38: aload_1
      39: invokevirtual #16                 // Method org/apache/xalan/templates/StylesheetRoot.getComposeState:()Lorg/apache/xalan/templates/StylesheetRoot$ComposeState;
      42: astore_3
      43: aload_3
      44: invokevirtual #17                 // Method org/apache/xalan/templates/StylesheetRoot$ComposeState.pushStackMark:()V
      47: return

  public void endCompose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_1
       1: invokevirtual #16                 // Method org/apache/xalan/templates/StylesheetRoot.getComposeState:()Lorg/apache/xalan/templates/StylesheetRoot$ComposeState;
       4: astore_2
       5: aload_2
       6: invokevirtual #18                 // Method org/apache/xalan/templates/StylesheetRoot$ComposeState.popStackMark:()V
       9: return

  public void error(java.lang.String, java.lang.Object[]);
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #19                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
       5: astore_3
       6: new           #20                 // class java/lang/RuntimeException
       9: dup
      10: ldc           #21                 // String ER_ELEMTEMPLATEELEM_ERR
      12: iconst_1
      13: anewarray     #22                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_3
      19: aastore
      20: invokestatic  #19                 // Method org/apache/xalan/res/XSLMessages.createMessage:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokespecial #23                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      26: athrow

  public void error(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
       6: return

  public org.w3c.dom.Node appendChild(org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     12
       5: aload_0
       6: ldc           #25                 // String ER_NULL_CHILD
       8: aconst_null
       9: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
      12: aload_1
      13: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      16: astore_2
      17: aconst_null
      18: aload_0
      19: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      22: if_acmpne     33
      25: aload_0
      26: aload_2
      27: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      30: goto          46
      33: aload_0
      34: invokevirtual #28                 // Method getLastChild:()Lorg/w3c/dom/Node;
      37: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      40: astore_3
      41: aload_3
      42: aload_2
      43: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      46: aload_2
      47: aload_0
      48: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      51: aload_1
      52: areturn

  public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     12
       5: aload_0
       6: ldc           #25                 // String ER_NULL_CHILD
       8: aconst_null
       9: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
      12: aconst_null
      13: aload_0
      14: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: if_acmpne     28
      20: aload_0
      21: aload_1
      22: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      25: goto          38
      28: aload_0
      29: invokevirtual #30                 // Method getLastChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      32: astore_2
      33: aload_2
      34: aload_1
      35: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      38: aload_1
      39: aload_0
      40: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
      43: aload_1
      44: areturn

  public boolean hasChildNodes();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public short getNodeType();
    Code:
       0: iconst_1
       1: ireturn

  public org.w3c.dom.NodeList getChildNodes();
    Code:
       0: aload_0
       1: areturn

  public org.apache.xalan.templates.ElemTemplateElement removeChild(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       8: aload_0
       9: if_acmpeq     14
      12: aconst_null
      13: areturn
      14: aload_1
      15: aload_0
      16: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      19: if_acmpne     33
      22: aload_0
      23: aload_1
      24: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      27: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      30: goto          46
      33: aload_1
      34: invokevirtual #32                 // Method getPreviousSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      37: astore_2
      38: aload_2
      39: aload_1
      40: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      43: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      46: aload_1
      47: aconst_null
      48: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      51: aload_1
      52: aconst_null
      53: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      56: aload_1
      57: areturn

  public org.w3c.dom.Node replaceChild(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: invokeinterface #33,  1           // InterfaceMethod org/w3c/dom/Node.getParentNode:()Lorg/w3c/dom/Node;
      10: aload_0
      11: if_acmpeq     16
      14: aconst_null
      15: areturn
      16: aload_1
      17: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      20: astore_3
      21: aload_2
      22: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      25: astore        4
      27: aload         4
      29: invokevirtual #34                 // Method getPreviousSibling:()Lorg/w3c/dom/Node;
      32: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      35: astore        5
      37: aconst_null
      38: aload         5
      40: if_acmpeq     49
      43: aload         5
      45: aload_3
      46: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      49: aload_0
      50: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      53: aload         4
      55: if_acmpne     63
      58: aload_0
      59: aload_3
      60: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      63: aload_3
      64: aload_0
      65: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      68: aload         4
      70: aconst_null
      71: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      74: aload_3
      75: aload         4
      77: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      80: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      83: aload         4
      85: aconst_null
      86: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      89: aload_3
      90: areturn

  public org.w3c.dom.Node insertBefore(org.w3c.dom.Node, org.w3c.dom.Node) throws org.w3c.dom.DOMException;
    Code:
       0: aconst_null
       1: aload_2
       2: if_acmpne     13
       5: aload_0
       6: aload_1
       7: invokevirtual #35                 // Method appendChild:(Lorg/w3c/dom/Node;)Lorg/w3c/dom/Node;
      10: pop
      11: aload_1
      12: areturn
      13: aload_1
      14: aload_2
      15: if_acmpne     20
      18: aload_1
      19: areturn
      20: aload_0
      21: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      24: astore_3
      25: aconst_null
      26: astore        4
      28: iconst_0
      29: istore        5
      31: goto          167
      34: aload_1
      35: aload_3
      36: if_acmpne     88
      39: aconst_null
      40: aload         4
      42: if_acmpeq     65
      45: aload         4
      47: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      50: aload_3
      51: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      56: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      59: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      62: goto          78
      65: aload_0
      66: aload_3
      67: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      72: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
      75: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      78: aload_3
      79: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      84: astore_3
      85: goto          167
      88: aload_2
      89: aload_3
      90: if_acmpne     157
      93: aconst_null
      94: aload         4
      96: if_acmpeq     114
      99: aload         4
     101: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     104: aload_1
     105: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     108: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
     111: goto          122
     114: aload_0
     115: aload_1
     116: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     119: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
     122: aload_1
     123: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     126: aload_2
     127: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     130: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
     133: aload_1
     134: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
     137: aload_0
     138: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
     141: aload_1
     142: astore        4
     144: aload_3
     145: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     150: astore_3
     151: iconst_1
     152: istore        5
     154: goto          167
     157: aload_3
     158: astore        4
     160: aload_3
     161: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
     166: astore_3
     167: aconst_null
     168: aload_3
     169: if_acmpne     34
     172: iload         5
     174: ifne          189
     177: new           #37                 // class org/w3c/dom/DOMException
     180: dup
     181: bipush        8
     183: ldc           #38                 // String refChild was not found in insertBefore method!
     185: invokespecial #39                 // Method org/w3c/dom/DOMException."<init>":(SLjava/lang/String;)V
     188: athrow
     189: aload_1
     190: areturn

  public org.apache.xalan.templates.ElemTemplateElement replaceChild(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_2
       5: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       8: aload_0
       9: if_acmpeq     14
      12: aconst_null
      13: areturn
      14: aload_2
      15: invokevirtual #32                 // Method getPreviousSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      18: astore_3
      19: aconst_null
      20: aload_3
      21: if_acmpeq     29
      24: aload_3
      25: aload_1
      26: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      29: aload_0
      30: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      33: aload_2
      34: if_acmpne     42
      37: aload_0
      38: aload_1
      39: putfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
      42: aload_1
      43: aload_0
      44: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      47: aload_2
      48: aconst_null
      49: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      52: aload_1
      53: aload_2
      54: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      57: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      60: aload_2
      61: aconst_null
      62: putfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      65: aload_1
      66: areturn

  public int getLength();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          18
      10: iinc          1, 1
      13: aload_2
      14: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: astore_2
      18: aload_2
      19: ifnonnull     10
      22: iload_1
      23: ireturn

  public org.w3c.dom.Node item(int);
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: goto          18
      10: aload_2
      11: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      14: astore_2
      15: iinc          3, 1
      18: iload_3
      19: iload_1
      20: if_icmpge     27
      23: aload_2
      24: ifnonnull     10
      27: aload_2
      28: areturn

  public org.w3c.dom.Document getOwnerDocument();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
       4: areturn

  public org.apache.xalan.templates.ElemTemplate getOwnerXSLTemplate();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #14                 // Method getXSLToken:()I
       6: istore_2
       7: goto          25
      10: aload_1
      11: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      14: astore_1
      15: aconst_null
      16: aload_1
      17: if_acmpeq     25
      20: aload_1
      21: invokevirtual #14                 // Method getXSLToken:()I
      24: istore_2
      25: aconst_null
      26: aload_1
      27: if_acmpeq     36
      30: iload_2
      31: bipush        19
      33: if_icmpne     10
      36: aload_1
      37: checkcast     #41                 // class org/apache/xalan/templates/ElemTemplate
      40: areturn

  public java.lang.String getTagName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getNodeName:()Ljava/lang/String;
       4: areturn

  public boolean hasTextLitOnly();
    Code:
       0: aload_0
       1: getfield      #3                  // Field m_hasTextLitOnly:Z
       4: ireturn

  public java.lang.String getBaseIdentifier();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method getSystemId:()Ljava/lang/String;
       4: areturn

  public int getEndLineNumber();
    Code:
       0: aload_0
       1: getfield      #43                 // Field m_endLineNumber:I
       4: ireturn

  public int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #44                 // Field m_lineNumber:I
       4: ireturn

  public int getEndColumnNumber();
    Code:
       0: aload_0
       1: getfield      #45                 // Field m_endColumnNumber:I
       4: ireturn

  public int getColumnNumber();
    Code:
       0: aload_0
       1: getfield      #46                 // Field m_columnNumber:I
       4: ireturn

  public java.lang.String getPublicId();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: if_acmpeq     18
       8: aload_0
       9: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      12: invokevirtual #47                 // Method getPublicId:()Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  public java.lang.String getSystemId();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: aconst_null
      10: goto          17
      13: aload_1
      14: invokevirtual #48                 // Method org/apache/xalan/templates/Stylesheet.getHref:()Ljava/lang/String;
      17: areturn

  public void setLocaterInfo(javax.xml.transform.SourceLocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getLineNumber:()I
       7: putfield      #44                 // Field m_lineNumber:I
      10: aload_0
      11: aload_1
      12: invokeinterface #50,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getColumnNumber:()I
      17: putfield      #46                 // Field m_columnNumber:I
      20: return

  public void setEndLocaterInfo(javax.xml.transform.SourceLocator);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #49,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getLineNumber:()I
       7: putfield      #43                 // Field m_endLineNumber:I
      10: aload_0
      11: aload_1
      12: invokeinterface #50,  1           // InterfaceMethod javax/xml/transform/SourceLocator.getColumnNumber:()I
      17: putfield      #45                 // Field m_endColumnNumber:I
      20: return

  public boolean hasVariableDecl();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_hasVariableDecl:Z
       4: ireturn

  public void setXmlSpace(int);
    Code:
       0: aload_0
       1: iconst_2
       2: iload_1
       3: if_icmpne     10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: putfield      #2                  // Field m_defaultSpace:Z
      14: return

  public boolean getXmlSpace();
    Code:
       0: aload_0
       1: getfield      #2                  // Field m_defaultSpace:Z
       4: ireturn

  public java.util.List getDeclaredPrefixes();
    Code:
       0: aload_0
       1: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
       4: areturn

  public void setPrefixes(org.xml.sax.helpers.NamespaceSupport) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #52                 // Method setPrefixes:(Lorg/xml/sax/helpers/NamespaceSupport;Z)V
       6: return

  public void setPrefixes(org.xml.sax.helpers.NamespaceSupport, boolean) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_1
       1: invokevirtual #53                 // Method org/xml/sax/helpers/NamespaceSupport.getDeclaredPrefixes:()Ljava/util/Enumeration;
       4: astore_3
       5: goto          89
       8: aload_3
       9: invokeinterface #54,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      14: checkcast     #55                 // class java/lang/String
      17: astore        4
      19: aconst_null
      20: aload_0
      21: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      24: if_acmpne     38
      27: aload_0
      28: new           #56                 // class java/util/ArrayList
      31: dup
      32: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      35: putfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      38: aload_1
      39: aload         4
      41: invokevirtual #58                 // Method org/xml/sax/helpers/NamespaceSupport.getURI:(Ljava/lang/String;)Ljava/lang/String;
      44: astore        5
      46: iload_2
      47: ifeq          63
      50: aload         5
      52: ldc           #59                 // String http://www.w3.org/1999/XSL/Transform
      54: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          63
      60: goto          89
      63: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
      66: dup
      67: aload         4
      69: aload         5
      71: iconst_0
      72: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
      75: astore        6
      77: aload_0
      78: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      81: aload         6
      83: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      88: pop
      89: aload_3
      90: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      95: ifne          8
      98: return

  public java.lang.String getNamespaceForPrefix(java.lang.String, org.w3c.dom.Node);
    Code:
       0: aload_0
       1: ldc           #65                 // String ER_CANT_RESOLVE_NSPREFIX
       3: aconst_null
       4: invokevirtual #24                 // Method error:(Ljava/lang/String;[Ljava/lang/Object;)V
       7: aconst_null
       8: areturn

  public java.lang.String getNamespaceForPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
       4: astore_2
       5: aconst_null
       6: aload_2
       7: if_acmpeq     75
      10: aload_2
      11: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      16: istore_3
      17: aload_1
      18: ldc           #67                 // String #default
      20: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      23: ifeq          29
      26: ldc           #68                 // String
      28: astore_1
      29: iconst_0
      30: istore        4
      32: goto          69
      35: aload_2
      36: iload         4
      38: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      46: astore        5
      48: aload_1
      49: aload         5
      51: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      54: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          66
      60: aload         5
      62: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      65: areturn
      66: iinc          4, 1
      69: iload         4
      71: iload_3
      72: if_icmplt     35
      75: aconst_null
      76: aload_0
      77: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      80: if_acmpeq     92
      83: aload_0
      84: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
      87: aload_1
      88: invokevirtual #72                 // Method getNamespaceForPrefix:(Ljava/lang/String;)Ljava/lang/String;
      91: areturn
      92: ldc           #73                 // String xml
      94: aload_1
      95: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      98: ifeq          104
     101: ldc           #74                 // String http://www.w3.org/XML/1998/namespace
     103: areturn
     104: aconst_null
     105: areturn

  java.util.List getPrefixTable();
    Code:
       0: aload_0
       1: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
       4: areturn

  void setPrefixTable(java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #75                 // Field m_prefixTable:Ljava/util/List;
       5: return

  public boolean containsExcludeResultPrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_3
       5: aconst_null
       6: aload_3
       7: if_acmpeq     17
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokevirtual #76                 // Method containsExcludeResultPrefix:(Ljava/lang/String;Ljava/lang/String;)Z
      16: ireturn
      17: iconst_0
      18: ireturn

  private boolean excludeResultNSDecl(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_2
       1: ifnull        37
       4: aload_2
       5: ldc           #59                 // String http://www.w3.org/1999/XSL/Transform
       7: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          24
      13: aload_0
      14: invokevirtual #10                 // Method getStylesheet:()Lorg/apache/xalan/templates/Stylesheet;
      17: aload_2
      18: invokevirtual #77                 // Method org/apache/xalan/templates/Stylesheet.containsExtensionElementURI:(Ljava/lang/String;)Z
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #76                 // Method containsExcludeResultPrefix:(Ljava/lang/String;Ljava/lang/String;)Z
      32: ifeq          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  public void resolvePrefixTables() throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #78                 // Method setPrefixTable:(Ljava/util/List;)V
       5: aconst_null
       6: aload_0
       7: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      10: if_acmpeq     174
      13: aload_0
      14: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
      17: astore_1
      18: aload_0
      19: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      22: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      27: istore_2
      28: iconst_0
      29: istore_3
      30: goto          169
      33: aload_0
      34: getfield      #51                 // Field m_declaredPrefixes:Ljava/util/List;
      37: iload_3
      38: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      46: astore        4
      48: aload         4
      50: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      53: astore        5
      55: aload         4
      57: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      60: astore        6
      62: aconst_null
      63: aload         6
      65: if_acmpne     72
      68: ldc           #68                 // String
      70: astore        6
      72: aload_0
      73: aload         5
      75: aload         6
      77: invokespecial #79                 // Method excludeResultNSDecl:(Ljava/lang/String;Ljava/lang/String;)Z
      80: istore        7
      82: aconst_null
      83: aload_0
      84: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      87: if_acmpne     101
      90: aload_0
      91: new           #56                 // class java/util/ArrayList
      94: dup
      95: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
      98: invokevirtual #78                 // Method setPrefixTable:(Ljava/util/List;)V
     101: aload_1
     102: aload         6
     104: invokevirtual #80                 // Method org/apache/xalan/templates/StylesheetRoot.getNamespaceAliasComposed:(Ljava/lang/String;)Lorg/apache/xalan/templates/NamespaceAlias;
     107: astore        8
     109: aconst_null
     110: aload         8
     112: if_acmpeq     139
     115: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     118: dup
     119: aload         8
     121: invokevirtual #81                 // Method org/apache/xalan/templates/NamespaceAlias.getStylesheetPrefix:()Ljava/lang/String;
     124: aload         8
     126: invokevirtual #82                 // Method org/apache/xalan/templates/NamespaceAlias.getResultNamespace:()Ljava/lang/String;
     129: iload         7
     131: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     134: astore        4
     136: goto          154
     139: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     142: dup
     143: aload         5
     145: aload         6
     147: iload         7
     149: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     152: astore        4
     154: aload_0
     155: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
     158: aload         4
     160: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     165: pop
     166: iinc          3, 1
     169: iload_3
     170: iload_2
     171: if_icmplt     33
     174: aload_0
     175: invokevirtual #83                 // Method getParentNodeElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
     178: astore_1
     179: aconst_null
     180: aload_1
     181: if_acmpeq     306
     184: aload_1
     185: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
     188: astore_2
     189: aconst_null
     190: aload_0
     191: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
     194: if_acmpne     215
     197: aload_0
     198: invokevirtual #84                 // Method needToCheckExclude:()Z
     201: ifne          215
     204: aload_0
     205: aload_1
     206: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
     209: invokevirtual #78                 // Method setPrefixTable:(Ljava/util/List;)V
     212: goto          303
     215: aload_2
     216: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
     221: istore_3
     222: iconst_0
     223: istore        4
     225: goto          297
     228: aload_2
     229: iload         4
     231: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     236: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
     239: astore        5
     241: aload_0
     242: aload         5
     244: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
     247: aload         5
     249: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
     252: invokespecial #79                 // Method excludeResultNSDecl:(Ljava/lang/String;Ljava/lang/String;)Z
     255: istore        6
     257: iload         6
     259: aload         5
     261: invokevirtual #85                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
     264: if_icmpeq     288
     267: new           #61                 // class org/apache/xalan/templates/XMLNSDecl
     270: dup
     271: aload         5
     273: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
     276: aload         5
     278: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
     281: iload         6
     283: invokespecial #62                 // Method org/apache/xalan/templates/XMLNSDecl."<init>":(Ljava/lang/String;Ljava/lang/String;Z)V
     286: astore        5
     288: aload_0
     289: aload         5
     291: invokevirtual #86                 // Method addOrReplaceDecls:(Lorg/apache/xalan/templates/XMLNSDecl;)V
     294: iinc          4, 1
     297: iload         4
     299: iload_3
     300: if_icmplt     228
     303: goto          325
     306: aconst_null
     307: aload_0
     308: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
     311: if_acmpne     325
     314: aload_0
     315: new           #56                 // class java/util/ArrayList
     318: dup
     319: invokespecial #57                 // Method java/util/ArrayList."<init>":()V
     322: invokevirtual #78                 // Method setPrefixTable:(Ljava/util/List;)V
     325: return

  void addOrReplaceDecls(org.apache.xalan.templates.XMLNSDecl);
    Code:
       0: aload_0
       1: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_2
      10: iload_2
      11: iconst_1
      12: isub
      13: istore_3
      14: goto          51
      17: aload_0
      18: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      21: iload_3
      22: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      27: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      30: astore        4
      32: aload         4
      34: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      37: aload_1
      38: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      41: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      44: ifeq          48
      47: return
      48: iinc          3, -1
      51: iload_3
      52: ifge          17
      55: aload_0
      56: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      59: aload_1
      60: invokeinterface #63,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: return

  boolean needToCheckExclude();
    Code:
       0: iconst_0
       1: ireturn

  void executeNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #87                 // Method executeNSDecls:(Lorg/apache/xalan/transformer/TransformerImpl;Ljava/lang/String;)V
       6: return

  void executeNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
       5: if_acmpeq     100
       8: aload_1
       9: invokevirtual #88                 // Method org/apache/xalan/transformer/TransformerImpl.getResultTreeHandler:()Lorg/apache/xml/serializer/SerializationHandler;
      12: astore_3
      13: aload_0
      14: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      17: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      22: istore        4
      24: iload         4
      26: iconst_1
      27: isub
      28: istore        5
      30: goto          95
      33: aload_0
      34: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      37: iload         5
      39: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      44: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      47: astore        6
      49: aload         6
      51: invokevirtual #85                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
      54: ifne          92
      57: aconst_null
      58: aload_2
      59: if_acmpeq     74
      62: aload         6
      64: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      67: aload_2
      68: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      71: ifne          92
      74: aload_3
      75: aload         6
      77: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      80: aload         6
      82: invokevirtual #71                 // Method org/apache/xalan/templates/XMLNSDecl.getURI:()Ljava/lang/String;
      85: iconst_1
      86: invokeinterface #89,  4           // InterfaceMethod org/apache/xml/serializer/ExtendedContentHandler.startPrefixMapping:(Ljava/lang/String;Ljava/lang/String;Z)Z
      91: pop
      92: iinc          5, -1
      95: iload         5
      97: ifge          33
     100: goto          113
     103: astore_3
     104: new           #91                 // class javax/xml/transform/TransformerException
     107: dup
     108: aload_3
     109: invokespecial #92                 // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/Throwable;)V
     112: athrow
     113: return
    Exception table:
       from    to  target type
           0   100   103   Class org/xml/sax/SAXException

  void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #93                 // Method unexecuteNSDecls:(Lorg/apache/xalan/transformer/TransformerImpl;Ljava/lang/String;)V
       6: return

  void unexecuteNSDecls(org.apache.xalan.transformer.TransformerImpl, java.lang.String) throws javax.xml.transform.TransformerException;
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
       5: if_acmpeq     92
       8: aload_1
       9: invokevirtual #88                 // Method org/apache/xalan/transformer/TransformerImpl.getResultTreeHandler:()Lorg/apache/xml/serializer/SerializationHandler;
      12: astore_3
      13: aload_0
      14: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      17: invokeinterface #66,  1           // InterfaceMethod java/util/List.size:()I
      22: istore        4
      24: iconst_0
      25: istore        5
      27: goto          85
      30: aload_0
      31: getfield      #75                 // Field m_prefixTable:Ljava/util/List;
      34: iload         5
      36: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      41: checkcast     #61                 // class org/apache/xalan/templates/XMLNSDecl
      44: astore        6
      46: aload         6
      48: invokevirtual #85                 // Method org/apache/xalan/templates/XMLNSDecl.getIsExcluded:()Z
      51: ifne          82
      54: aconst_null
      55: aload_2
      56: if_acmpeq     71
      59: aload         6
      61: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      64: aload_2
      65: invokevirtual #60                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifne          82
      71: aload_3
      72: aload         6
      74: invokevirtual #70                 // Method org/apache/xalan/templates/XMLNSDecl.getPrefix:()Ljava/lang/String;
      77: invokeinterface #94,  2           // InterfaceMethod org/xml/sax/ContentHandler.endPrefixMapping:(Ljava/lang/String;)V
      82: iinc          5, 1
      85: iload         5
      87: iload         4
      89: if_icmplt     30
      92: goto          105
      95: astore_3
      96: new           #91                 // class javax/xml/transform/TransformerException
      99: dup
     100: aload_3
     101: invokespecial #92                 // Method javax/xml/transform/TransformerException."<init>":(Ljava/lang/Throwable;)V
     104: athrow
     105: return
    Exception table:
       from    to  target type
           0    92    95   Class org/xml/sax/SAXException

  public void setUid(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field m_docOrderNumber:I
       5: return

  public int getUid();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_docOrderNumber:I
       4: ireturn

  public org.w3c.dom.Node getParentNode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getParentElem();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public void setParentElem(org.apache.xalan.templates.ElemTemplateElement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       5: return

  public org.w3c.dom.Node getNextSibling();
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getPreviousSibling();
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getParentNode:()Lorg/w3c/dom/Node;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: ifnull        41
      11: aload_1
      12: invokeinterface #96,  1           // InterfaceMethod org/w3c/dom/Node.getFirstChild:()Lorg/w3c/dom/Node;
      17: astore_1
      18: goto          37
      21: aload_1
      22: aload_0
      23: if_acmpne     28
      26: aload_2
      27: areturn
      28: aload_1
      29: astore_2
      30: aload_1
      31: invokeinterface #36,  1           // InterfaceMethod org/w3c/dom/Node.getNextSibling:()Lorg/w3c/dom/Node;
      36: astore_1
      37: aload_1
      38: ifnonnull     21
      41: aconst_null
      42: areturn

  public org.apache.xalan.templates.ElemTemplateElement getPreviousSiblingElem();
    Code:
       0: aload_0
       1: invokevirtual #83                 // Method getParentNodeElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: aload_1
       8: ifnull        37
      11: aload_1
      12: invokevirtual #13                 // Method getFirstChildElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      15: astore_1
      16: goto          33
      19: aload_1
      20: aload_0
      21: if_acmpne     26
      24: aload_2
      25: areturn
      26: aload_1
      27: astore_2
      28: aload_1
      29: invokevirtual #15                 // Method getNextSiblingElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
      32: astore_1
      33: aload_1
      34: ifnonnull     19
      37: aconst_null
      38: areturn

  public org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem();
    Code:
       0: aload_0
       1: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getParentNodeElem();
    Code:
       0: aload_0
       1: getfield      #8                  // Field m_parentNode:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getFirstChild();
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.apache.xalan.templates.ElemTemplateElement getFirstChildElem();
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public org.w3c.dom.Node getLastChild();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          17
      10: aload_2
      11: astore_1
      12: aload_2
      13: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: astore_2
      17: aload_2
      18: ifnonnull     10
      21: aload_1
      22: areturn

  public org.apache.xalan.templates.ElemTemplateElement getLastChildElem();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       6: astore_2
       7: goto          17
      10: aload_2
      11: astore_1
      12: aload_2
      13: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      16: astore_2
      17: aload_2
      18: ifnonnull     10
      21: aload_1
      22: areturn

  public org.w3c.dom.Node getDOMBackPointer();
    Code:
       0: aload_0
       1: getfield      #97                 // Field m_DOMBackPointer:Lorg/w3c/dom/Node;
       4: areturn

  public void setDOMBackPointer(org.w3c.dom.Node);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #97                 // Field m_DOMBackPointer:Lorg/w3c/dom/Node;
       5: return

  public int compareTo(java.lang.Object) throws java.lang.ClassCastException;
    Code:
       0: aload_1
       1: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       4: astore_2
       5: aload_2
       6: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
       9: invokevirtual #98                 // Method org/apache/xalan/templates/StylesheetComposed.getImportCountComposed:()I
      12: istore_3
      13: aload_0
      14: invokevirtual #9                  // Method getStylesheetComposed:()Lorg/apache/xalan/templates/StylesheetComposed;
      17: invokevirtual #98                 // Method org/apache/xalan/templates/StylesheetComposed.getImportCountComposed:()I
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     30
      28: iconst_m1
      29: ireturn
      30: iload         4
      32: iload_3
      33: if_icmple     38
      36: iconst_1
      37: ireturn
      38: aload_0
      39: invokevirtual #99                 // Method getUid:()I
      42: aload_2
      43: invokevirtual #99                 // Method getUid:()I
      46: isub
      47: ireturn

  public boolean shouldStripWhiteSpace(org.apache.xpath.XPathContext, org.w3c.dom.Element) throws javax.xml.transform.TransformerException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       4: astore_3
       5: aconst_null
       6: aload_3
       7: if_acmpeq     19
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokevirtual #100                // Method shouldStripWhiteSpace:(Lorg/apache/xpath/XPathContext;Lorg/w3c/dom/Element;)Z
      16: goto          20
      19: iconst_0
      20: ireturn

  public boolean canStripWhiteSpace();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method getStylesheetRoot:()Lorg/apache/xalan/templates/StylesheetRoot;
       4: astore_1
       5: aconst_null
       6: aload_1
       7: if_acmpeq     17
      10: aload_1
      11: invokevirtual #101                // Method org/apache/xalan/templates/StylesheetRoot.canStripWhiteSpace:()Z
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean canAcceptVariables();
    Code:
       0: iconst_1
       1: ireturn

  public void exprSetParent(org.apache.xpath.ExpressionNode);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       5: invokevirtual #31                 // Method setParentElem:(Lorg/apache/xalan/templates/ElemTemplateElement;)V
       8: return

  public org.apache.xpath.ExpressionNode exprGetParent();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getParentElem:()Lorg/apache/xalan/templates/ElemTemplateElement;
       4: areturn

  public void exprAddChild(org.apache.xpath.ExpressionNode, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #26                 // class org/apache/xalan/templates/ElemTemplateElement
       5: invokevirtual #102                // Method appendChild:(Lorg/apache/xalan/templates/ElemTemplateElement;)Lorg/apache/xalan/templates/ElemTemplateElement;
       8: pop
       9: return

  public org.apache.xpath.ExpressionNode exprGetChild(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #103                // Method item:(I)Lorg/w3c/dom/Node;
       5: checkcast     #104                // class org/apache/xpath/ExpressionNode
       8: areturn

  public int exprGetNumChildren();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getLength:()I
       4: ireturn

  protected boolean accept(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #106                // Method org/apache/xalan/templates/XSLTVisitor.visitInstruction:(Lorg/apache/xalan/templates/ElemTemplateElement;)Z
       5: ireturn

  public void callVisitors(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #107                // Method accept:(Lorg/apache/xalan/templates/XSLTVisitor;)Z
       5: ifeq          13
       8: aload_0
       9: aload_1
      10: invokevirtual #108                // Method callChildVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;)V
      13: return

  protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean);
    Code:
       0: aload_0
       1: getfield      #27                 // Field m_firstChild:Lorg/apache/xalan/templates/ElemTemplateElement;
       4: astore_3
       5: goto          18
       8: aload_3
       9: aload_1
      10: invokevirtual #109                // Method callVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;)V
      13: aload_3
      14: getfield      #29                 // Field m_nextSibling:Lorg/apache/xalan/templates/ElemTemplateElement;
      17: astore_3
      18: aload_3
      19: ifnonnull     8
      22: return

  protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #110                // Method callChildVisitors:(Lorg/apache/xalan/templates/XSLTVisitor;Z)V
       6: return

  public boolean handlesNullPrefixes();
    Code:
       0: iconst_0
       1: ireturn
}
