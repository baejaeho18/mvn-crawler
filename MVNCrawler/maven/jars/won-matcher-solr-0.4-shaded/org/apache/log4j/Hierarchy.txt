Compiled from "Hierarchy.java"
public class org.apache.log4j.Hierarchy implements org.apache.log4j.spi.LoggerRepository,org.apache.log4j.spi.RendererSupport {
  private org.apache.log4j.spi.LoggerFactory defaultFactory;

  private java.util.Vector listeners;

  java.util.Hashtable ht;

  org.apache.log4j.Logger root;

  org.apache.log4j.or.RendererMap rendererMap;

  int thresholdInt;

  org.apache.log4j.Level threshold;

  boolean emittedNoAppenderWarning;

  boolean emittedNoResourceBundleWarning;

  public org.apache.log4j.Hierarchy(org.apache.log4j.Logger);
    Code:
       0: aload_0
       1: invokespecial #33                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #56                 // Field emittedNoAppenderWarning:Z
       9: aload_0
      10: iconst_0
      11: putfield      #57                 // Field emittedNoResourceBundleWarning:Z
      14: aload_0
      15: new           #17                 // class java/util/Hashtable
      18: dup
      19: invokespecial #34                 // Method java/util/Hashtable."<init>":()V
      22: putfield      #65                 // Field ht:Ljava/util/Hashtable;
      25: aload_0
      26: new           #18                 // class java/util/Vector
      29: dup
      30: iconst_1
      31: invokespecial #37                 // Method java/util/Vector."<init>":(I)V
      34: putfield      #69                 // Field listeners:Ljava/util/Vector;
      37: aload_0
      38: aload_1
      39: putfield      #80                 // Field root:Lorg/apache/log4j/Logger;
      42: aload_0
      43: getstatic     #42                 // Field org/apache/log4j/Level.ALL:Lorg/apache/log4j/Level;
      46: invokevirtual #85                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      49: aload_0
      50: getfield      #80                 // Field root:Lorg/apache/log4j/Logger;
      53: aload_0
      54: invokevirtual #82                 // Method org/apache/log4j/Category.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
      57: aload_0
      58: new           #28                 // class org/apache/log4j/or/RendererMap
      61: dup
      62: invokespecial #36                 // Method org/apache/log4j/or/RendererMap."<init>":()V
      65: putfield      #79                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
      68: aload_0
      69: new           #21                 // class org/apache/log4j/DefaultCategoryFactory
      72: dup
      73: invokespecial #35                 // Method org/apache/log4j/DefaultCategoryFactory."<init>":()V
      76: putfield      #52                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
      79: return

  public void addHierarchyEventListener(org.apache.log4j.spi.HierarchyEventListener);
    Code:
       0: aload_0
       1: getfield      #69                 // Field listeners:Ljava/util/Vector;
       4: aload_1
       5: invokevirtual #51                 // Method java/util/Vector.contains:(Ljava/lang/Object;)Z
       8: ifeq          19
      11: ldc           #4                  // String Ignoring attempt to add an existent listener.
      13: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      16: goto          27
      19: aload_0
      20: getfield      #69                 // Field listeners:Ljava/util/Vector;
      23: aload_1
      24: invokevirtual #45                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      27: return

  public void addRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #79                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #75                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #65                 // Field ht:Ljava/util/Hashtable;
       4: invokevirtual #48                 // Method java/util/Hashtable.clear:()V
       7: return

  public void emitNoAppenderWarning(org.apache.log4j.Category);
    Code:
       0: aload_0
       1: getfield      #56                 // Field emittedNoAppenderWarning:Z
       4: ifne          44
       7: new           #14                 // class java/lang/StringBuffer
      10: dup
      11: ldc           #5                  // String No appenders could be found for logger (
      13: invokespecial #39                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      16: aload_1
      17: invokevirtual #62                 // Method org/apache/log4j/Category.getName:()Ljava/lang/String;
      20: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: ldc           #2                  // String ).
      25: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      28: invokevirtual #94                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      31: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      34: ldc           #6                  // String Please initialize the log4j system properly.
      36: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      39: aload_0
      40: iconst_1
      41: putfield      #56                 // Field emittedNoAppenderWarning:Z
      44: return

  public org.apache.log4j.Logger exists(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #65                 // Field ht:Ljava/util/Hashtable;
       4: new           #20                 // class org/apache/log4j/CategoryKey
       7: dup
       8: aload_1
       9: invokespecial #40                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
      12: invokevirtual #58                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: astore_2
      16: aload_2
      17: instanceof    #24                 // class org/apache/log4j/Logger
      20: ifeq          28
      23: aload_2
      24: checkcast     #24                 // class org/apache/log4j/Logger
      27: areturn
      28: aconst_null
      29: areturn

  public void fireAddAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #69                 // Field listeners:Ljava/util/Vector;
       4: ifnull        53
       7: aload_0
       8: getfield      #69                 // Field listeners:Ljava/util/Vector;
      11: invokevirtual #88                 // Method java/util/Vector.size:()I
      14: istore_3
      15: iconst_0
      16: istore        5
      18: goto          47
      21: aload_0
      22: getfield      #69                 // Field listeners:Ljava/util/Vector;
      25: iload         5
      27: invokevirtual #53                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      30: checkcast     #29                 // class org/apache/log4j/spi/HierarchyEventListener
      33: astore        4
      35: aload         4
      37: aload_1
      38: aload_2
      39: invokeinterface #44,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.addAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      44: iinc          5, 1
      47: iload         5
      49: iload_3
      50: if_icmplt     21
      53: return

  void fireRemoveAppenderEvent(org.apache.log4j.Category, org.apache.log4j.Appender);
    Code:
       0: aload_0
       1: getfield      #69                 // Field listeners:Ljava/util/Vector;
       4: ifnull        53
       7: aload_0
       8: getfield      #69                 // Field listeners:Ljava/util/Vector;
      11: invokevirtual #88                 // Method java/util/Vector.size:()I
      14: istore_3
      15: iconst_0
      16: istore        5
      18: goto          47
      21: aload_0
      22: getfield      #69                 // Field listeners:Ljava/util/Vector;
      25: iload         5
      27: invokevirtual #53                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      30: checkcast     #29                 // class org/apache/log4j/spi/HierarchyEventListener
      33: astore        4
      35: aload         4
      37: aload_1
      38: aload_2
      39: invokeinterface #78,  3           // InterfaceMethod org/apache/log4j/spi/HierarchyEventListener.removeAppenderEvent:(Lorg/apache/log4j/Category;Lorg/apache/log4j/Appender;)V
      44: iinc          5, 1
      47: iload         5
      49: iload_3
      50: if_icmplt     21
      53: return

  public java.util.Enumeration getCurrentCategories();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
       4: areturn

  public java.util.Enumeration getCurrentLoggers();
    Code:
       0: new           #18                 // class java/util/Vector
       3: dup
       4: aload_0
       5: getfield      #65                 // Field ht:Ljava/util/Hashtable;
       8: invokevirtual #87                 // Method java/util/Hashtable.size:()I
      11: invokespecial #37                 // Method java/util/Vector."<init>":(I)V
      14: astore_1
      15: aload_0
      16: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      19: invokevirtual #54                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
      22: astore_2
      23: goto          45
      26: aload_2
      27: invokeinterface #72,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: astore_3
      33: aload_3
      34: instanceof    #24                 // class org/apache/log4j/Logger
      37: ifeq          45
      40: aload_1
      41: aload_3
      42: invokevirtual #45                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
      45: aload_2
      46: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      51: ifne          26
      54: aload_1
      55: invokevirtual #55                 // Method java/util/Vector.elements:()Ljava/util/Enumeration;
      58: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #52                 // Field defaultFactory:Lorg/apache/log4j/spi/LoggerFactory;
       6: invokevirtual #61                 // Method getLogger:(Ljava/lang/String;Lorg/apache/log4j/spi/LoggerFactory;)Lorg/apache/log4j/Logger;
       9: areturn

  public org.apache.log4j.Logger getLogger(java.lang.String, org.apache.log4j.spi.LoggerFactory);
    Code:
       0: new           #20                 // class org/apache/log4j/CategoryKey
       3: dup
       4: aload_1
       5: invokespecial #40                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_0
      10: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      13: astore        6
      15: aload         6
      17: monitorenter
      18: aload_0
      19: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      22: aload_3
      23: invokevirtual #58                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: astore        8
      28: aload         8
      30: ifnonnull     75
      33: aload_2
      34: aload_1
      35: invokeinterface #70,  2           // InterfaceMethod org/apache/log4j/spi/LoggerFactory.makeNewLoggerInstance:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
      40: astore        4
      42: aload         4
      44: aload_0
      45: invokevirtual #82                 // Method org/apache/log4j/Category.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
      48: aload_0
      49: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      52: aload_3
      53: aload         4
      55: invokevirtual #76                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload_0
      60: aload         4
      62: invokespecial #96                 // Method updateParents:(Lorg/apache/log4j/Logger;)V
      65: aload         4
      67: astore        5
      69: jsr           170
      72: aload         5
      74: areturn
      75: aload         8
      77: instanceof    #24                 // class org/apache/log4j/Logger
      80: ifeq          96
      83: aload         8
      85: checkcast     #24                 // class org/apache/log4j/Logger
      88: astore        5
      90: jsr           170
      93: aload         5
      95: areturn
      96: aload         8
      98: instanceof    #26                 // class org/apache/log4j/ProvisionNode
     101: ifeq          157
     104: aload_2
     105: aload_1
     106: invokeinterface #70,  2           // InterfaceMethod org/apache/log4j/spi/LoggerFactory.makeNewLoggerInstance:(Ljava/lang/String;)Lorg/apache/log4j/Logger;
     111: astore        4
     113: aload         4
     115: aload_0
     116: invokevirtual #82                 // Method org/apache/log4j/Category.setHierarchy:(Lorg/apache/log4j/spi/LoggerRepository;)V
     119: aload_0
     120: getfield      #65                 // Field ht:Ljava/util/Hashtable;
     123: aload_3
     124: aload         4
     126: invokevirtual #76                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     129: pop
     130: aload_0
     131: aload         8
     133: checkcast     #26                 // class org/apache/log4j/ProvisionNode
     136: aload         4
     138: invokespecial #95                 // Method updateChildren:(Lorg/apache/log4j/ProvisionNode;Lorg/apache/log4j/Logger;)V
     141: aload_0
     142: aload         4
     144: invokespecial #96                 // Method updateParents:(Lorg/apache/log4j/Logger;)V
     147: aload         4
     149: astore        5
     151: jsr           170
     154: aload         5
     156: areturn
     157: aconst_null
     158: astore        5
     160: jsr           170
     163: aload         5
     165: areturn
     166: aload         6
     168: monitorexit
     169: athrow
     170: astore        7
     172: aload         6
     174: monitorexit
     175: ret           7
    Exception table:
       from    to  target type
          18   166   166   any

  public org.apache.log4j.or.RendererMap getRendererMap();
    Code:
       0: aload_0
       1: getfield      #79                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: areturn

  public org.apache.log4j.Logger getRootLogger();
    Code:
       0: aload_0
       1: getfield      #80                 // Field root:Lorg/apache/log4j/Logger;
       4: areturn

  public org.apache.log4j.Level getThreshold();
    Code:
       0: aload_0
       1: getfield      #91                 // Field threshold:Lorg/apache/log4j/Level;
       4: areturn

  public boolean isDisabled(int);
    Code:
       0: aload_0
       1: getfield      #92                 // Field thresholdInt:I
       4: iload_1
       5: if_icmpgt     12
       8: iconst_0
       9: goto          13
      12: iconst_1
      13: ireturn

  public void overrideAsNeeded(java.lang.String);
    Code:
       0: ldc           #7                  // String The Hiearchy.overrideAsNeeded method has been deprecated.
       2: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       5: return

  public void resetConfiguration();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getRootLogger:()Lorg/apache/log4j/Logger;
       4: getstatic     #43                 // Field org/apache/log4j/Level.DEBUG:Lorg/apache/log4j/Level;
       7: invokevirtual #83                 // Method org/apache/log4j/Category.setLevel:(Lorg/apache/log4j/Level;)V
      10: aload_0
      11: getfield      #80                 // Field root:Lorg/apache/log4j/Logger;
      14: aconst_null
      15: invokevirtual #84                 // Method org/apache/log4j/Category.setResourceBundle:(Ljava/util/ResourceBundle;)V
      18: aload_0
      19: getstatic     #42                 // Field org/apache/log4j/Level.ALL:Lorg/apache/log4j/Level;
      22: invokevirtual #85                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      25: aload_0
      26: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      29: astore_1
      30: aload_1
      31: monitorenter
      32: aload_0
      33: invokevirtual #86                 // Method shutdown:()V
      36: aload_0
      37: invokevirtual #60                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      40: astore_3
      41: goto          73
      44: aload_3
      45: invokeinterface #72,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      50: checkcast     #24                 // class org/apache/log4j/Logger
      53: astore        4
      55: aload         4
      57: aconst_null
      58: invokevirtual #83                 // Method org/apache/log4j/Category.setLevel:(Lorg/apache/log4j/Level;)V
      61: aload         4
      63: iconst_1
      64: invokevirtual #81                 // Method org/apache/log4j/Category.setAdditivity:(Z)V
      67: aload         4
      69: aconst_null
      70: invokevirtual #84                 // Method org/apache/log4j/Category.setResourceBundle:(Ljava/util/ResourceBundle;)V
      73: aload_3
      74: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      79: ifne          44
      82: aload_1
      83: monitorexit
      84: goto          90
      87: aload_1
      88: monitorexit
      89: athrow
      90: aload_0
      91: getfield      #79                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
      94: invokevirtual #49                 // Method org/apache/log4j/or/RendererMap.clear:()V
      97: return
    Exception table:
       from    to  target type
          32    82    87   any

  public void setDisableOverride(java.lang.String);
    Code:
       0: ldc           #8                  // String The Hiearchy.setDisableOverride method has been deprecated.
       2: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       5: return

  public void setRenderer(java.lang.Class, org.apache.log4j.or.ObjectRenderer);
    Code:
       0: aload_0
       1: getfield      #79                 // Field rendererMap:Lorg/apache/log4j/or/RendererMap;
       4: aload_1
       5: aload_2
       6: invokevirtual #75                 // Method org/apache/log4j/or/RendererMap.put:(Ljava/lang/Class;Lorg/apache/log4j/or/ObjectRenderer;)V
       9: return

  public void setThreshold(java.lang.String);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #93                 // Method org/apache/log4j/Level.toLevel:(Ljava/lang/String;Lorg/apache/log4j/Level;)Lorg/apache/log4j/Level;
       5: astore_2
       6: aload_2
       7: ifnull        18
      10: aload_0
      11: aload_2
      12: invokevirtual #85                 // Method setThreshold:(Lorg/apache/log4j/Level;)V
      15: goto          42
      18: new           #14                 // class java/lang/StringBuffer
      21: dup
      22: ldc           #3                  // String Could not convert [
      24: invokespecial #39                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      27: aload_1
      28: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: ldc           #9                  // String ] to Level.
      33: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      36: invokevirtual #94                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      39: invokestatic  #97                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
      42: return

  public void setThreshold(org.apache.log4j.Level);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_1
       6: getfield      #68                 // Field org/apache/log4j/Priority.level:I
       9: putfield      #92                 // Field thresholdInt:I
      12: aload_0
      13: aload_1
      14: putfield      #91                 // Field threshold:Lorg/apache/log4j/Level;
      17: return

  public void shutdown();
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getRootLogger:()Lorg/apache/log4j/Logger;
       4: astore_1
       5: aload_1
       6: invokevirtual #50                 // Method org/apache/log4j/Category.closeNestedAppenders:()V
       9: aload_0
      10: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      13: astore_2
      14: aload_2
      15: monitorenter
      16: aload_0
      17: invokevirtual #60                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      20: astore        4
      22: goto          42
      25: aload         4
      27: invokeinterface #72,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      32: checkcast     #24                 // class org/apache/log4j/Logger
      35: astore        5
      37: aload         5
      39: invokevirtual #50                 // Method org/apache/log4j/Category.closeNestedAppenders:()V
      42: aload         4
      44: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      49: ifne          25
      52: aload_1
      53: invokevirtual #77                 // Method org/apache/log4j/Category.removeAllAppenders:()V
      56: aload_0
      57: invokevirtual #60                 // Method getCurrentLoggers:()Ljava/util/Enumeration;
      60: astore        4
      62: goto          82
      65: aload         4
      67: invokeinterface #72,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      72: checkcast     #24                 // class org/apache/log4j/Logger
      75: astore        5
      77: aload         5
      79: invokevirtual #77                 // Method org/apache/log4j/Category.removeAllAppenders:()V
      82: aload         4
      84: invokeinterface #64,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      89: ifne          65
      92: aload_2
      93: monitorexit
      94: goto          100
      97: aload_2
      98: monitorexit
      99: athrow
     100: return
    Exception table:
       from    to  target type
          16    92    97   any

  private final void updateChildren(org.apache.log4j.ProvisionNode, org.apache.log4j.Logger);
    Code:
       0: aload_1
       1: invokevirtual #88                 // Method java/util/Vector.size:()I
       4: istore_3
       5: iconst_0
       6: istore        4
       8: goto          58
      11: aload_1
      12: iload         4
      14: invokevirtual #53                 // Method java/util/Vector.elementAt:(I)Ljava/lang/Object;
      17: checkcast     #24                 // class org/apache/log4j/Logger
      20: astore        5
      22: aload         5
      24: getfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
      27: getfield      #71                 // Field org/apache/log4j/Category.name:Ljava/lang/String;
      30: aload_2
      31: getfield      #71                 // Field org/apache/log4j/Category.name:Ljava/lang/String;
      34: invokevirtual #89                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      37: ifne          55
      40: aload_2
      41: aload         5
      43: getfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
      46: putfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
      49: aload         5
      51: aload_2
      52: putfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
      55: iinc          4, 1
      58: iload         4
      60: iload_3
      61: if_icmplt     11
      64: return

  private final void updateParents(org.apache.log4j.Logger);
    Code:
       0: aload_1
       1: getfield      #71                 // Field org/apache/log4j/Category.name:Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokevirtual #67                 // Method java/lang/String.length:()I
       9: istore_3
      10: iconst_0
      11: istore        4
      13: aload_2
      14: bipush        46
      16: iload_3
      17: iconst_1
      18: isub
      19: invokevirtual #66                 // Method java/lang/String.lastIndexOf:(II)I
      22: istore        5
      24: goto          182
      27: aload_2
      28: iconst_0
      29: iload         5
      31: invokevirtual #90                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      34: astore        6
      36: new           #20                 // class org/apache/log4j/CategoryKey
      39: dup
      40: aload         6
      42: invokespecial #40                 // Method org/apache/log4j/CategoryKey."<init>":(Ljava/lang/String;)V
      45: astore        7
      47: aload_0
      48: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      51: aload         7
      53: invokevirtual #58                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      56: astore        8
      58: aload         8
      60: ifnonnull     88
      63: new           #26                 // class org/apache/log4j/ProvisionNode
      66: dup
      67: aload_1
      68: invokespecial #41                 // Method org/apache/log4j/ProvisionNode."<init>":(Lorg/apache/log4j/Logger;)V
      71: astore        9
      73: aload_0
      74: getfield      #65                 // Field ht:Ljava/util/Hashtable;
      77: aload         7
      79: aload         9
      81: invokevirtual #76                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          170
      88: aload         8
      90: instanceof    #19                 // class org/apache/log4j/Category
      93: ifeq          111
      96: iconst_1
      97: istore        4
      99: aload_1
     100: aload         8
     102: checkcast     #19                 // class org/apache/log4j/Category
     105: putfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
     108: goto          187
     111: aload         8
     113: instanceof    #26                 // class org/apache/log4j/ProvisionNode
     116: ifeq          131
     119: aload         8
     121: checkcast     #26                 // class org/apache/log4j/ProvisionNode
     124: aload_1
     125: invokevirtual #45                 // Method java/util/Vector.addElement:(Ljava/lang/Object;)V
     128: goto          170
     131: new           #11                 // class java/lang/IllegalStateException
     134: dup
     135: new           #14                 // class java/lang/StringBuffer
     138: dup
     139: ldc           #10                 // String unexpected object type
     141: invokespecial #39                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
     144: aload         8
     146: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     149: invokevirtual #46                 // Method java/lang/StringBuffer.append:(Ljava/lang/Object;)Ljava/lang/StringBuffer;
     152: ldc           #1                  // String  in ht.
     154: invokevirtual #47                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     157: invokevirtual #94                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     160: invokespecial #38                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     163: astore        9
     165: aload         9
     167: invokevirtual #74                 // Method java/lang/Throwable.printStackTrace:()V
     170: aload_2
     171: bipush        46
     173: iload         5
     175: iconst_1
     176: isub
     177: invokevirtual #66                 // Method java/lang/String.lastIndexOf:(II)I
     180: istore        5
     182: iload         5
     184: ifge          27
     187: iload         4
     189: ifne          200
     192: aload_1
     193: aload_0
     194: getfield      #80                 // Field root:Lorg/apache/log4j/Logger;
     197: putfield      #73                 // Field org/apache/log4j/Category.parent:Lorg/apache/log4j/Category;
     200: return
}
