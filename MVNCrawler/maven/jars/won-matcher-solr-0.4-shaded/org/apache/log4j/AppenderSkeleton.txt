Compiled from "AppenderSkeleton.java"
public abstract class org.apache.log4j.AppenderSkeleton implements org.apache.log4j.Appender,org.apache.log4j.spi.OptionHandler {
  protected org.apache.log4j.Layout layout;

  protected java.lang.String name;

  protected org.apache.log4j.Priority threshold;

  protected org.apache.log4j.spi.ErrorHandler errorHandler;

  protected org.apache.log4j.spi.Filter headFilter;

  protected org.apache.log4j.spi.Filter tailFilter;

  protected boolean closed;

  public org.apache.log4j.AppenderSkeleton();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/apache/log4j/helpers/OnlyOnceErrorHandler
       8: dup
       9: invokespecial #16                 // Method org/apache/log4j/helpers/OnlyOnceErrorHandler."<init>":()V
      12: putfield      #25                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      15: aload_0
      16: iconst_0
      17: putfield      #21                 // Field closed:Z
      20: return

  public void activateOptions();
    Code:
       0: return

  public void addFilter(org.apache.log4j.spi.Filter);
    Code:
       0: aload_0
       1: getfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: aload_1
      10: dup_x1
      11: putfield      #33                 // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      14: putfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
      17: goto          33
      20: aload_0
      21: getfield      #33                 // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      24: aload_1
      25: putfield      #32                 // Field org/apache/log4j/spi/Filter.next:Lorg/apache/log4j/spi/Filter;
      28: aload_0
      29: aload_1
      30: putfield      #33                 // Field tailFilter:Lorg/apache/log4j/spi/Filter;
      33: return

  protected abstract void append(org.apache.log4j.spi.LoggingEvent);

  public void clearFilters();
    Code:
       0: aload_0
       1: aload_0
       2: aconst_null
       3: dup_x1
       4: putfield      #33                 // Field tailFilter:Lorg/apache/log4j/spi/Filter;
       7: putfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
      10: return

  public abstract void close();

  public synchronized void doAppend(org.apache.log4j.spi.LoggingEvent);
    Code:
       0: aload_0
       1: getfield      #21                 // Field closed:Z
       4: ifeq          35
       7: new           #6                  // class java/lang/StringBuffer
      10: dup
      11: ldc           #1                  // String Attempted to append to closed appender named [
      13: invokespecial #17                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      16: aload_0
      17: getfield      #31                 // Field name:Ljava/lang/String;
      20: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      23: ldc           #4                  // String ].
      25: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      28: invokevirtual #35                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      31: invokestatic  #24                 // Method org/apache/log4j/helpers/LogLog.error:(Ljava/lang/String;)V
      34: return
      35: aload_0
      36: aload_1
      37: invokevirtual #26                 // Method org/apache/log4j/spi/LoggingEvent.getLevel:()Lorg/apache/log4j/Level;
      40: invokevirtual #28                 // Method isAsSevereAsThreshold:(Lorg/apache/log4j/Priority;)Z
      43: ifne          47
      46: return
      47: aload_0
      48: getfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
      51: astore_2
      52: goto          94
      55: aload_2
      56: aload_1
      57: invokevirtual #23                 // Method org/apache/log4j/spi/Filter.decide:(Lorg/apache/log4j/spi/LoggingEvent;)I
      60: tableswitch   { // -1 to 1
                    -1: 88
                     0: 89
                     1: 98
               default: 94
          }
      88: return
      89: aload_2
      90: getfield      #32                 // Field org/apache/log4j/spi/Filter.next:Lorg/apache/log4j/spi/Filter;
      93: astore_2
      94: aload_2
      95: ifnonnull     55
      98: aload_0
      99: aload_1
     100: invokevirtual #19                 // Method append:(Lorg/apache/log4j/spi/LoggingEvent;)V
     103: return

  public void finalize();
    Code:
       0: aload_0
       1: getfield      #21                 // Field closed:Z
       4: ifeq          8
       7: return
       8: new           #6                  // class java/lang/StringBuffer
      11: dup
      12: ldc           #2                  // String Finalizing appender named [
      14: invokespecial #17                 // Method java/lang/StringBuffer."<init>":(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #31                 // Field name:Ljava/lang/String;
      21: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      24: ldc           #4                  // String ].
      26: invokevirtual #18                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      29: invokevirtual #35                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      32: invokestatic  #22                 // Method org/apache/log4j/helpers/LogLog.debug:(Ljava/lang/String;)V
      35: aload_0
      36: invokevirtual #20                 // Method close:()V
      39: return

  public org.apache.log4j.spi.ErrorHandler getErrorHandler();
    Code:
       0: aload_0
       1: getfield      #25                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
       4: areturn

  public org.apache.log4j.spi.Filter getFilter();
    Code:
       0: aload_0
       1: getfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: areturn

  public final org.apache.log4j.spi.Filter getFirstFilter();
    Code:
       0: aload_0
       1: getfield      #27                 // Field headFilter:Lorg/apache/log4j/spi/Filter;
       4: areturn

  public org.apache.log4j.Layout getLayout();
    Code:
       0: aload_0
       1: getfield      #30                 // Field layout:Lorg/apache/log4j/Layout;
       4: areturn

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #31                 // Field name:Ljava/lang/String;
       4: areturn

  public org.apache.log4j.Priority getThreshold();
    Code:
       0: aload_0
       1: getfield      #34                 // Field threshold:Lorg/apache/log4j/Priority;
       4: areturn

  public boolean isAsSevereAsThreshold(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: getfield      #34                 // Field threshold:Lorg/apache/log4j/Priority;
       4: ifnull        22
       7: aload_1
       8: aload_0
       9: getfield      #34                 // Field threshold:Lorg/apache/log4j/Priority;
      12: invokevirtual #29                 // Method org/apache/log4j/Priority.isGreaterOrEqual:(Lorg/apache/log4j/Priority;)Z
      15: ifne          22
      18: iconst_0
      19: goto          23
      22: iconst_1
      23: ireturn

  public abstract boolean requiresLayout();

  public synchronized void setErrorHandler(org.apache.log4j.spi.ErrorHandler);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: ldc           #3                  // String You have tried to set a null error-handler.
       6: invokestatic  #36                 // Method org/apache/log4j/helpers/LogLog.warn:(Ljava/lang/String;)V
       9: goto          17
      12: aload_0
      13: aload_1
      14: putfield      #25                 // Field errorHandler:Lorg/apache/log4j/spi/ErrorHandler;
      17: return

  public void setLayout(org.apache.log4j.Layout);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field layout:Lorg/apache/log4j/Layout;
       5: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #31                 // Field name:Ljava/lang/String;
       5: return

  public void setThreshold(org.apache.log4j.Priority);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field threshold:Lorg/apache/log4j/Priority;
       5: return
}
