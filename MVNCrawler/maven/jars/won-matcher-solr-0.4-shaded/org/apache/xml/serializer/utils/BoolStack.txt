Compiled from "BoolStack.java"
public final class org.apache.xml.serializer.utils.BoolStack {
  private boolean[] m_values;

  private int m_allocatedSize;

  private int m_index;

  public org.apache.xml.serializer.utils.BoolStack();
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public org.apache.xml.serializer.utils.BoolStack(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field m_allocatedSize:I
       9: aload_0
      10: iload_1
      11: newarray       boolean
      13: putfield      #4                  // Field m_values:[Z
      16: aload_0
      17: iconst_m1
      18: putfield      #5                  // Field m_index:I
      21: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index:I
       4: iconst_1
       5: iadd
       6: ireturn

  public final void clear();
    Code:
       0: aload_0
       1: iconst_m1
       2: putfield      #5                  // Field m_index:I
       5: return

  public final boolean push(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index:I
       4: aload_0
       5: getfield      #3                  // Field m_allocatedSize:I
       8: iconst_1
       9: isub
      10: if_icmpne     17
      13: aload_0
      14: invokespecial #6                  // Method grow:()V
      17: aload_0
      18: getfield      #4                  // Field m_values:[Z
      21: aload_0
      22: dup
      23: getfield      #5                  // Field m_index:I
      26: iconst_1
      27: iadd
      28: dup_x1
      29: putfield      #5                  // Field m_index:I
      32: iload_1
      33: dup_x2
      34: bastore
      35: ireturn

  public final boolean pop();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_values:[Z
       4: aload_0
       5: dup
       6: getfield      #5                  // Field m_index:I
       9: dup_x1
      10: iconst_1
      11: isub
      12: putfield      #5                  // Field m_index:I
      15: baload
      16: ireturn

  public final boolean popAndTop();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field m_index:I
       5: iconst_1
       6: isub
       7: putfield      #5                  // Field m_index:I
      10: aload_0
      11: getfield      #5                  // Field m_index:I
      14: iflt          29
      17: aload_0
      18: getfield      #4                  // Field m_values:[Z
      21: aload_0
      22: getfield      #5                  // Field m_index:I
      25: baload
      26: goto          30
      29: iconst_0
      30: ireturn

  public final void setTop(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_values:[Z
       4: aload_0
       5: getfield      #5                  // Field m_index:I
       8: iload_1
       9: bastore
      10: return

  public final boolean peek();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_values:[Z
       4: aload_0
       5: getfield      #5                  // Field m_index:I
       8: baload
       9: ireturn

  public final boolean peekOrFalse();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index:I
       4: iconst_m1
       5: if_icmple     20
       8: aload_0
       9: getfield      #4                  // Field m_values:[Z
      12: aload_0
      13: getfield      #5                  // Field m_index:I
      16: baload
      17: goto          21
      20: iconst_0
      21: ireturn

  public final boolean peekOrTrue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index:I
       4: iconst_m1
       5: if_icmple     20
       8: aload_0
       9: getfield      #4                  // Field m_values:[Z
      12: aload_0
      13: getfield      #5                  // Field m_index:I
      16: baload
      17: goto          21
      20: iconst_1
      21: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_index:I
       4: iconst_m1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private void grow();
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field m_allocatedSize:I
       5: iconst_2
       6: imul
       7: putfield      #3                  // Field m_allocatedSize:I
      10: aload_0
      11: getfield      #3                  // Field m_allocatedSize:I
      14: newarray       boolean
      16: astore_1
      17: aload_0
      18: getfield      #4                  // Field m_values:[Z
      21: iconst_0
      22: aload_1
      23: iconst_0
      24: aload_0
      25: getfield      #5                  // Field m_index:I
      28: iconst_1
      29: iadd
      30: invokestatic  #7                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      33: aload_0
      34: aload_1
      35: putfield      #4                  // Field m_values:[Z
      38: return
}
