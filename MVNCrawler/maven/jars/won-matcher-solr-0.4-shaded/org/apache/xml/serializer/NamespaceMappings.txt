Compiled from "NamespaceMappings.java"
public class org.apache.xml.serializer.NamespaceMappings {
  private int count;

  private java.util.Hashtable m_namespaces;

  private org.apache.xml.serializer.NamespaceMappings$Stack m_nodeStack;

  private static final java.lang.String EMPTYSTRING;

  private static final java.lang.String XML_PREFIX;

  public org.apache.xml.serializer.NamespaceMappings();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field count:I
       9: aload_0
      10: new           #3                  // class java/util/Hashtable
      13: dup
      14: invokespecial #4                  // Method java/util/Hashtable."<init>":()V
      17: putfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      20: aload_0
      21: new           #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      24: dup
      25: aload_0
      26: invokespecial #7                  // Method org/apache/xml/serializer/NamespaceMappings$Stack."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;)V
      29: putfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      32: aload_0
      33: invokespecial #9                  // Method initNamespaces:()V
      36: return

  private void initNamespaces();
    Code:
       0: new           #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
       3: dup
       4: aload_0
       5: ldc           #11                 // String
       7: ldc           #11                 // String
       9: iconst_m1
      10: invokespecial #12                 // Method org/apache/xml/serializer/NamespaceMappings$MappingRecord."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;Ljava/lang/String;Ljava/lang/String;I)V
      13: astore_2
      14: aload_0
      15: ldc           #11                 // String
      17: invokespecial #13                 // Method createPrefixStack:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      20: astore_1
      21: aload_1
      22: aload_2
      23: invokevirtual #14                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: new           #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      30: dup
      31: aload_0
      32: ldc           #15                 // String xml
      34: ldc           #16                 // String http://www.w3.org/XML/1998/namespace
      36: iconst_m1
      37: invokespecial #12                 // Method org/apache/xml/serializer/NamespaceMappings$MappingRecord."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;Ljava/lang/String;Ljava/lang/String;I)V
      40: astore_2
      41: aload_0
      42: ldc           #15                 // String xml
      44: invokespecial #13                 // Method createPrefixStack:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      47: astore_1
      48: aload_1
      49: aload_2
      50: invokevirtual #14                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: return

  public java.lang.String lookupNamespace(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: aload_1
       4: invokespecial #17                 // Method getPrefixStack:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$Stack;
       7: astore_3
       8: aload_3
       9: ifnull        30
      12: aload_3
      13: invokevirtual #18                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.isEmpty:()Z
      16: ifne          30
      19: aload_3
      20: invokevirtual #19                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.peek:()Ljava/lang/Object;
      23: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      26: getfield      #20                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_uri:Ljava/lang/String;
      29: astore_2
      30: aload_2
      31: ifnonnull     37
      34: ldc           #11                 // String
      36: astore_2
      37: aload_2
      38: areturn

  org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #21                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      11: astore_2
      12: aload_2
      13: ifnull        33
      16: aload_2
      17: invokevirtual #18                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.isEmpty:()Z
      20: ifne          33
      23: aload_2
      24: invokevirtual #19                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.peek:()Ljava/lang/Object;
      27: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      30: goto          34
      33: aconst_null
      34: areturn

  public java.lang.String lookupPrefix(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
       6: invokevirtual #22                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       9: astore_3
      10: goto          52
      13: aload_3
      14: invokeinterface #23,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      19: checkcast     #24                 // class java/lang/String
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokevirtual #25                 // Method lookupNamespace:(Ljava/lang/String;)Ljava/lang/String;
      30: astore        5
      32: aload         5
      34: ifnull        52
      37: aload         5
      39: aload_1
      40: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          52
      46: aload         4
      48: astore_2
      49: goto          61
      52: aload_3
      53: invokeinterface #27,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      58: ifne          13
      61: aload_2
      62: areturn

  org.apache.xml.serializer.NamespaceMappings$MappingRecord getMappingFromURI(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
       6: invokevirtual #22                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       9: astore_3
      10: goto          55
      13: aload_3
      14: invokeinterface #23,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      19: checkcast     #24                 // class java/lang/String
      22: astore        4
      24: aload_0
      25: aload         4
      27: invokevirtual #28                 // Method getMappingFromPrefix:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$MappingRecord;
      30: astore        5
      32: aload         5
      34: ifnull        55
      37: aload         5
      39: getfield      #20                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_uri:Ljava/lang/String;
      42: aload_1
      43: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      46: ifeq          55
      49: aload         5
      51: astore_2
      52: goto          64
      55: aload_3
      56: invokeinterface #27,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      61: ifne          13
      64: aload_2
      65: areturn

  boolean popNamespace(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #15                 // String xml
       3: invokevirtual #29                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: aload_1
      13: invokespecial #17                 // Method getPrefixStack:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      16: dup
      17: astore_2
      18: ifnull        28
      21: aload_2
      22: invokevirtual #30                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.pop:()Ljava/lang/Object;
      25: pop
      26: iconst_1
      27: ireturn
      28: iconst_0
      29: ireturn

  public boolean pushNamespace(java.lang.String, java.lang.String, int);
    Code:
       0: aload_1
       1: ldc           #15                 // String xml
       3: invokevirtual #29                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      15: aload_1
      16: invokevirtual #21                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      22: dup
      23: astore        4
      25: ifnonnull     48
      28: aload_0
      29: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      32: aload_1
      33: new           #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      36: dup
      37: aload_0
      38: invokespecial #7                  // Method org/apache/xml/serializer/NamespaceMappings$Stack."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;)V
      41: dup
      42: astore        4
      44: invokevirtual #31                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload         4
      50: invokevirtual #32                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.empty:()Z
      53: ifne          89
      56: aload         4
      58: invokevirtual #19                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.peek:()Ljava/lang/Object;
      61: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      64: astore        5
      66: aload_2
      67: aload         5
      69: getfield      #20                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_uri:Ljava/lang/String;
      72: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      75: ifne          87
      78: iload_3
      79: aload         5
      81: getfield      #33                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_declarationDepth:I
      84: if_icmpne     89
      87: iconst_0
      88: ireturn
      89: new           #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      92: dup
      93: aload_0
      94: aload_1
      95: aload_2
      96: iload_3
      97: invokespecial #12                 // Method org/apache/xml/serializer/NamespaceMappings$MappingRecord."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;Ljava/lang/String;Ljava/lang/String;I)V
     100: astore        5
     102: aload         4
     104: aload         5
     106: invokevirtual #14                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
     114: aload         5
     116: invokevirtual #14                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     119: pop
     120: iconst_1
     121: ireturn

  void popNamespaces(int, org.xml.sax.ContentHandler);
    Code:
       0: goto          3
       3: aload_0
       4: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
       7: invokevirtual #18                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.isEmpty:()Z
      10: ifeq          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      18: invokevirtual #19                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.peek:()Ljava/lang/Object;
      21: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      24: astore_3
      25: aload_3
      26: getfield      #33                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_declarationDepth:I
      29: istore        4
      31: iload_1
      32: iconst_1
      33: if_icmplt     116
      36: aload_3
      37: getfield      #33                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_declarationDepth:I
      40: iload_1
      41: if_icmpge     47
      44: goto          116
      47: aload_0
      48: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      51: invokevirtual #30                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.pop:()Ljava/lang/Object;
      54: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      57: astore        5
      59: aload_3
      60: getfield      #34                 // Field org/apache/xml/serializer/NamespaceMappings$MappingRecord.m_prefix:Ljava/lang/String;
      63: astore        6
      65: aload_0
      66: aload         6
      68: invokespecial #17                 // Method getPrefixStack:(Ljava/lang/String;)Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      71: astore        7
      73: aload         7
      75: invokevirtual #19                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.peek:()Ljava/lang/Object;
      78: checkcast     #10                 // class org/apache/xml/serializer/NamespaceMappings$MappingRecord
      81: astore        8
      83: aload         5
      85: aload         8
      87: if_acmpne     113
      90: aload         7
      92: invokevirtual #30                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.pop:()Ljava/lang/Object;
      95: pop
      96: aload_2
      97: ifnull        113
     100: aload_2
     101: aload         6
     103: invokeinterface #35,  2           // InterfaceMethod org/xml/sax/ContentHandler.endPrefixMapping:(Ljava/lang/String;)V
     108: goto          113
     111: astore        9
     113: goto          3
     116: return
    Exception table:
       from    to  target type
         100   108   111   Class org/xml/sax/SAXException

  public java.lang.String generateNextPrefix();
    Code:
       0: new           #37                 // class java/lang/StringBuffer
       3: dup
       4: invokespecial #38                 // Method java/lang/StringBuffer."<init>":()V
       7: ldc           #39                 // String ns
       9: invokevirtual #40                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      12: aload_0
      13: dup
      14: getfield      #2                  // Field count:I
      17: dup_x1
      18: iconst_1
      19: iadd
      20: putfield      #2                  // Field count:I
      23: invokevirtual #41                 // Method java/lang/StringBuffer.append:(I)Ljava/lang/StringBuffer;
      26: invokevirtual #42                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      29: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: new           #43                 // class org/apache/xml/serializer/NamespaceMappings
       3: dup
       4: invokespecial #44                 // Method "<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      13: invokevirtual #45                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.clone:()Ljava/lang/Object;
      16: checkcast     #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      19: putfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      22: aload_1
      23: aload_0
      24: getfield      #2                  // Field count:I
      27: putfield      #2                  // Field count:I
      30: aload_1
      31: aload_0
      32: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      35: invokevirtual #46                 // Method java/util/Hashtable.clone:()Ljava/lang/Object;
      38: checkcast     #3                  // class java/util/Hashtable
      41: putfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      44: aload_1
      45: aload_0
      46: getfield      #2                  // Field count:I
      49: putfield      #2                  // Field count:I
      52: aload_1
      53: areturn

  final void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #2                  // Field count:I
       5: aload_0
       6: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
       9: invokevirtual #47                 // Method java/util/Hashtable.clear:()V
      12: aload_0
      13: getfield      #8                  // Field m_nodeStack:Lorg/apache/xml/serializer/NamespaceMappings$Stack;
      16: invokevirtual #48                 // Method org/apache/xml/serializer/NamespaceMappings$Stack.clear:()V
      19: aload_0
      20: invokespecial #9                  // Method initNamespaces:()V
      23: return

  private org.apache.xml.serializer.NamespaceMappings$Stack getPrefixStack(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #21                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
      11: astore_2
      12: aload_2
      13: areturn

  private org.apache.xml.serializer.NamespaceMappings$Stack createPrefixStack(java.lang.String);
    Code:
       0: new           #6                  // class org/apache/xml/serializer/NamespaceMappings$Stack
       3: dup
       4: aload_0
       5: invokespecial #7                  // Method org/apache/xml/serializer/NamespaceMappings$Stack."<init>":(Lorg/apache/xml/serializer/NamespaceMappings;)V
       8: astore_2
       9: aload_0
      10: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      13: aload_1
      14: aload_2
      15: invokevirtual #31                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      18: pop
      19: aload_2
      20: areturn

  public java.lang.String[] lookupAllPrefixes(java.lang.String);
    Code:
       0: new           #49                 // class java/util/ArrayList
       3: dup
       4: invokespecial #50                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #5                  // Field m_namespaces:Ljava/util/Hashtable;
      12: invokevirtual #22                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
      15: astore_3
      16: goto          59
      19: aload_3
      20: invokeinterface #23,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      25: checkcast     #24                 // class java/lang/String
      28: astore        4
      30: aload_0
      31: aload         4
      33: invokevirtual #25                 // Method lookupNamespace:(Ljava/lang/String;)Ljava/lang/String;
      36: astore        5
      38: aload         5
      40: ifnull        59
      43: aload         5
      45: aload_1
      46: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      49: ifeq          59
      52: aload_2
      53: aload         4
      55: invokevirtual #51                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_3
      60: invokeinterface #27,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      65: ifne          19
      68: aload_2
      69: invokevirtual #52                 // Method java/util/ArrayList.size:()I
      72: anewarray     #24                 // class java/lang/String
      75: astore        4
      77: aload_2
      78: aload         4
      80: invokevirtual #53                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      83: pop
      84: aload         4
      86: areturn
}
