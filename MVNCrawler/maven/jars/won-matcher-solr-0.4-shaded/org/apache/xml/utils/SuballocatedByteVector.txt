Compiled from "SuballocatedByteVector.java"
public class org.apache.xml.utils.SuballocatedByteVector {
  protected int m_blocksize;

  protected int m_numblocks;

  protected byte[][] m_map;

  protected int m_firstFree;

  protected byte[] m_map0;

  public org.apache.xml.utils.SuballocatedByteVector();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public org.apache.xml.utils.SuballocatedByteVector(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        32
       7: putfield      #3                  // Field m_numblocks:I
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field m_firstFree:I
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field m_blocksize:I
      20: aload_0
      21: iload_1
      22: newarray       byte
      24: putfield      #6                  // Field m_map0:[B
      27: aload_0
      28: aload_0
      29: getfield      #3                  // Field m_numblocks:I
      32: anewarray     #7                  // class "[B"
      35: putfield      #8                  // Field m_map:[[B
      38: aload_0
      39: getfield      #8                  // Field m_map:[[B
      42: iconst_0
      43: aload_0
      44: getfield      #6                  // Field m_map0:[B
      47: aastore
      48: return

  public org.apache.xml.utils.SuballocatedByteVector(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(I)V
       5: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: ireturn

  private void setSize(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: if_icmpge     13
       8: aload_0
       9: iload_1
      10: putfield      #4                  // Field m_firstFree:I
      13: return

  public void addElement(byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #5                  // Field m_blocksize:I
       8: if_icmpge     31
      11: aload_0
      12: getfield      #6                  // Field m_map0:[B
      15: aload_0
      16: dup
      17: getfield      #4                  // Field m_firstFree:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #4                  // Field m_firstFree:I
      26: iload_1
      27: bastore
      28: goto          141
      31: aload_0
      32: getfield      #4                  // Field m_firstFree:I
      35: aload_0
      36: getfield      #5                  // Field m_blocksize:I
      39: idiv
      40: istore_2
      41: aload_0
      42: getfield      #4                  // Field m_firstFree:I
      45: aload_0
      46: getfield      #5                  // Field m_blocksize:I
      49: irem
      50: istore_3
      51: aload_0
      52: dup
      53: getfield      #4                  // Field m_firstFree:I
      56: iconst_1
      57: iadd
      58: putfield      #4                  // Field m_firstFree:I
      61: iload_2
      62: aload_0
      63: getfield      #8                  // Field m_map:[[B
      66: arraylength
      67: if_icmplt     107
      70: iload_2
      71: aload_0
      72: getfield      #3                  // Field m_numblocks:I
      75: iadd
      76: istore        4
      78: iload         4
      80: anewarray     #7                  // class "[B"
      83: astore        5
      85: aload_0
      86: getfield      #8                  // Field m_map:[[B
      89: iconst_0
      90: aload         5
      92: iconst_0
      93: aload_0
      94: getfield      #8                  // Field m_map:[[B
      97: arraylength
      98: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     101: aload_0
     102: aload         5
     104: putfield      #8                  // Field m_map:[[B
     107: aload_0
     108: getfield      #8                  // Field m_map:[[B
     111: iload_2
     112: aaload
     113: astore        4
     115: aconst_null
     116: aload         4
     118: if_acmpne     136
     121: aload_0
     122: getfield      #8                  // Field m_map:[[B
     125: iload_2
     126: aload_0
     127: getfield      #5                  // Field m_blocksize:I
     130: newarray       byte
     132: dup_x2
     133: aastore
     134: astore        4
     136: aload         4
     138: iload_3
     139: iload_1
     140: bastore
     141: return

  private void addElements(byte, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_2
       5: iadd
       6: aload_0
       7: getfield      #5                  // Field m_blocksize:I
      10: if_icmpge     46
      13: iconst_0
      14: istore_3
      15: goto          38
      18: aload_0
      19: getfield      #6                  // Field m_map0:[B
      22: aload_0
      23: dup
      24: getfield      #4                  // Field m_firstFree:I
      27: dup_x1
      28: iconst_1
      29: iadd
      30: putfield      #4                  // Field m_firstFree:I
      33: iload_1
      34: bastore
      35: iinc          3, 1
      38: iload_3
      39: iload_2
      40: if_icmplt     18
      43: goto          219
      46: aload_0
      47: getfield      #4                  // Field m_firstFree:I
      50: aload_0
      51: getfield      #5                  // Field m_blocksize:I
      54: idiv
      55: istore        4
      57: aload_0
      58: getfield      #4                  // Field m_firstFree:I
      61: aload_0
      62: getfield      #5                  // Field m_blocksize:I
      65: irem
      66: istore        5
      68: aload_0
      69: dup
      70: getfield      #4                  // Field m_firstFree:I
      73: iload_2
      74: iadd
      75: putfield      #4                  // Field m_firstFree:I
      78: goto          215
      81: iload         4
      83: aload_0
      84: getfield      #8                  // Field m_map:[[B
      87: arraylength
      88: if_icmplt     129
      91: iload         4
      93: aload_0
      94: getfield      #3                  // Field m_numblocks:I
      97: iadd
      98: istore        6
     100: iload         6
     102: anewarray     #7                  // class "[B"
     105: astore        7
     107: aload_0
     108: getfield      #8                  // Field m_map:[[B
     111: iconst_0
     112: aload         7
     114: iconst_0
     115: aload_0
     116: getfield      #8                  // Field m_map:[[B
     119: arraylength
     120: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     123: aload_0
     124: aload         7
     126: putfield      #8                  // Field m_map:[[B
     129: aload_0
     130: getfield      #8                  // Field m_map:[[B
     133: iload         4
     135: aaload
     136: astore        6
     138: aconst_null
     139: aload         6
     141: if_acmpne     160
     144: aload_0
     145: getfield      #8                  // Field m_map:[[B
     148: iload         4
     150: aload_0
     151: getfield      #5                  // Field m_blocksize:I
     154: newarray       byte
     156: dup_x2
     157: aastore
     158: astore        6
     160: aload_0
     161: getfield      #5                  // Field m_blocksize:I
     164: iload         5
     166: isub
     167: iload_2
     168: if_icmpge     181
     171: aload_0
     172: getfield      #5                  // Field m_blocksize:I
     175: iload         5
     177: isub
     178: goto          182
     181: iload_2
     182: istore        7
     184: iload_2
     185: iload         7
     187: isub
     188: istore_2
     189: goto          201
     192: aload         6
     194: iload         5
     196: iinc          5, 1
     199: iload_1
     200: bastore
     201: iload         7
     203: iinc          7, -1
     206: ifgt          192
     209: iinc          4, 1
     212: iconst_0
     213: istore        5
     215: iload_2
     216: ifgt          81
     219: return

  private void addElements(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: iload_1
       5: iadd
       6: istore_2
       7: iload_2
       8: aload_0
       9: getfield      #5                  // Field m_blocksize:I
      12: if_icmple     69
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_blocksize:I
      23: irem
      24: istore_3
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: iload_1
      30: iadd
      31: aload_0
      32: getfield      #5                  // Field m_blocksize:I
      35: irem
      36: istore        4
      38: iload_3
      39: iconst_1
      40: iadd
      41: istore        5
      43: goto          62
      46: aload_0
      47: getfield      #8                  // Field m_map:[[B
      50: iload         5
      52: aload_0
      53: getfield      #5                  // Field m_blocksize:I
      56: newarray       byte
      58: aastore
      59: iinc          5, 1
      62: iload         5
      64: iload         4
      66: if_icmple     46
      69: aload_0
      70: iload_2
      71: putfield      #4                  // Field m_firstFree:I
      74: return

  private void insertElementAt(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpne     16
       8: aload_0
       9: iload_1
      10: invokevirtual #10                 // Method addElement:(B)V
      13: goto          265
      16: iload_2
      17: aload_0
      18: getfield      #4                  // Field m_firstFree:I
      21: if_icmple     131
      24: iload_2
      25: aload_0
      26: getfield      #5                  // Field m_blocksize:I
      29: idiv
      30: istore_3
      31: iload_3
      32: aload_0
      33: getfield      #8                  // Field m_map:[[B
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        4
      48: iload         4
      50: anewarray     #7                  // class "[B"
      53: astore        5
      55: aload_0
      56: getfield      #8                  // Field m_map:[[B
      59: iconst_0
      60: aload         5
      62: iconst_0
      63: aload_0
      64: getfield      #8                  // Field m_map:[[B
      67: arraylength
      68: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         5
      74: putfield      #8                  // Field m_map:[[B
      77: aload_0
      78: getfield      #8                  // Field m_map:[[B
      81: iload_3
      82: aaload
      83: astore        4
      85: aconst_null
      86: aload         4
      88: if_acmpne     106
      91: aload_0
      92: getfield      #8                  // Field m_map:[[B
      95: iload_3
      96: aload_0
      97: getfield      #5                  // Field m_blocksize:I
     100: newarray       byte
     102: dup_x2
     103: aastore
     104: astore        4
     106: iload_2
     107: aload_0
     108: getfield      #5                  // Field m_blocksize:I
     111: irem
     112: istore        5
     114: aload         4
     116: iload         5
     118: iload_1
     119: bastore
     120: aload_0
     121: iload         5
     123: iconst_1
     124: iadd
     125: putfield      #4                  // Field m_firstFree:I
     128: goto          265
     131: iload_2
     132: aload_0
     133: getfield      #5                  // Field m_blocksize:I
     136: idiv
     137: istore_3
     138: aload_0
     139: getfield      #4                  // Field m_firstFree:I
     142: iconst_1
     143: aload_0
     144: getfield      #5                  // Field m_blocksize:I
     147: idiv
     148: iadd
     149: istore        4
     151: aload_0
     152: dup
     153: getfield      #4                  // Field m_firstFree:I
     156: iconst_1
     157: iadd
     158: putfield      #4                  // Field m_firstFree:I
     161: iload_2
     162: aload_0
     163: getfield      #5                  // Field m_blocksize:I
     166: irem
     167: istore        5
     169: goto          259
     172: aload_0
     173: getfield      #5                  // Field m_blocksize:I
     176: iload         5
     178: isub
     179: iconst_1
     180: isub
     181: istore        7
     183: aload_0
     184: getfield      #8                  // Field m_map:[[B
     187: iload_3
     188: aaload
     189: astore        8
     191: aconst_null
     192: aload         8
     194: if_acmpne     218
     197: iconst_0
     198: istore        6
     200: aload_0
     201: getfield      #8                  // Field m_map:[[B
     204: iload_3
     205: aload_0
     206: getfield      #5                  // Field m_blocksize:I
     209: newarray       byte
     211: dup_x2
     212: aastore
     213: astore        8
     215: goto          244
     218: aload         8
     220: aload_0
     221: getfield      #5                  // Field m_blocksize:I
     224: iconst_1
     225: isub
     226: baload
     227: istore        6
     229: aload         8
     231: iload         5
     233: aload         8
     235: iload         5
     237: iconst_1
     238: iadd
     239: iload         7
     241: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     244: aload         8
     246: iload         5
     248: iload_1
     249: bastore
     250: iload         6
     252: istore_1
     253: iconst_0
     254: istore        5
     256: iinc          3, 1
     259: iload_3
     260: iload         4
     262: if_icmple     172
     265: return

  public void removeAllElements();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field m_firstFree:I
       5: return

  private boolean removeElement(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: istore_2
       7: iload_2
       8: ifge          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: iload_2
      15: invokespecial #12                 // Method removeElementAt:(I)V
      18: iconst_1
      19: ireturn

  private void removeElementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmpge     160
       8: iload_1
       9: aload_0
      10: getfield      #5                  // Field m_blocksize:I
      13: idiv
      14: istore_2
      15: aload_0
      16: getfield      #4                  // Field m_firstFree:I
      19: aload_0
      20: getfield      #5                  // Field m_blocksize:I
      23: idiv
      24: istore_3
      25: iload_1
      26: aload_0
      27: getfield      #5                  // Field m_blocksize:I
      30: irem
      31: istore        4
      33: goto          155
      36: aload_0
      37: getfield      #5                  // Field m_blocksize:I
      40: iload         4
      42: isub
      43: iconst_1
      44: isub
      45: istore        5
      47: aload_0
      48: getfield      #8                  // Field m_map:[[B
      51: iload_2
      52: aaload
      53: astore        6
      55: aconst_null
      56: aload         6
      58: if_acmpne     79
      61: aload_0
      62: getfield      #8                  // Field m_map:[[B
      65: iload_2
      66: aload_0
      67: getfield      #5                  // Field m_blocksize:I
      70: newarray       byte
      72: dup_x2
      73: aastore
      74: astore        6
      76: goto          94
      79: aload         6
      81: iload         4
      83: iconst_1
      84: iadd
      85: aload         6
      87: iload         4
      89: iload         5
      91: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      94: iload_2
      95: iload_3
      96: if_icmpge     139
      99: aload_0
     100: getfield      #8                  // Field m_map:[[B
     103: iload_2
     104: iconst_1
     105: iadd
     106: aaload
     107: astore        7
     109: aload         7
     111: ifnull        136
     114: aload         6
     116: aload_0
     117: getfield      #5                  // Field m_blocksize:I
     120: iconst_1
     121: isub
     122: aload         7
     124: ifnull        134
     127: aload         7
     129: iconst_0
     130: baload
     131: goto          135
     134: iconst_0
     135: bastore
     136: goto          149
     139: aload         6
     141: aload_0
     142: getfield      #5                  // Field m_blocksize:I
     145: iconst_1
     146: isub
     147: iconst_0
     148: bastore
     149: iconst_0
     150: istore        4
     152: iinc          2, 1
     155: iload_2
     156: iload_3
     157: if_icmple     36
     160: aload_0
     161: dup
     162: getfield      #4                  // Field m_firstFree:I
     165: iconst_1
     166: isub
     167: putfield      #4                  // Field m_firstFree:I
     170: return

  public void setElementAt(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #5                  // Field m_blocksize:I
       5: if_icmpge     16
       8: aload_0
       9: getfield      #6                  // Field m_map0:[B
      12: iload_2
      13: iload_1
      14: bastore
      15: return
      16: iload_2
      17: aload_0
      18: getfield      #5                  // Field m_blocksize:I
      21: idiv
      22: istore_3
      23: iload_2
      24: aload_0
      25: getfield      #5                  // Field m_blocksize:I
      28: irem
      29: istore        4
      31: iload_3
      32: aload_0
      33: getfield      #8                  // Field m_map:[[B
      36: arraylength
      37: if_icmplt     77
      40: iload_3
      41: aload_0
      42: getfield      #3                  // Field m_numblocks:I
      45: iadd
      46: istore        5
      48: iload         5
      50: anewarray     #7                  // class "[B"
      53: astore        6
      55: aload_0
      56: getfield      #8                  // Field m_map:[[B
      59: iconst_0
      60: aload         6
      62: iconst_0
      63: aload_0
      64: getfield      #8                  // Field m_map:[[B
      67: arraylength
      68: invokestatic  #9                  // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      71: aload_0
      72: aload         6
      74: putfield      #8                  // Field m_map:[[B
      77: aload_0
      78: getfield      #8                  // Field m_map:[[B
      81: iload_3
      82: aaload
      83: astore        5
      85: aconst_null
      86: aload         5
      88: if_acmpne     106
      91: aload_0
      92: getfield      #8                  // Field m_map:[[B
      95: iload_3
      96: aload_0
      97: getfield      #5                  // Field m_blocksize:I
     100: newarray       byte
     102: dup_x2
     103: aastore
     104: astore        5
     106: aload         5
     108: iload         4
     110: iload_1
     111: bastore
     112: iload_2
     113: aload_0
     114: getfield      #4                  // Field m_firstFree:I
     117: if_icmplt     127
     120: aload_0
     121: iload_2
     122: iconst_1
     123: iadd
     124: putfield      #4                  // Field m_firstFree:I
     127: return

  public byte elementAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field m_blocksize:I
       5: if_icmpge     15
       8: aload_0
       9: getfield      #6                  // Field m_map0:[B
      12: iload_1
      13: baload
      14: ireturn
      15: aload_0
      16: getfield      #8                  // Field m_map:[[B
      19: iload_1
      20: aload_0
      21: getfield      #5                  // Field m_blocksize:I
      24: idiv
      25: aaload
      26: iload_1
      27: aload_0
      28: getfield      #5                  // Field m_blocksize:I
      31: irem
      32: baload
      33: ireturn

  private boolean contains(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int indexOf(byte, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #4                  // Field m_firstFree:I
       5: if_icmplt     10
       8: iconst_m1
       9: ireturn
      10: iload_2
      11: aload_0
      12: getfield      #5                  // Field m_blocksize:I
      15: idiv
      16: istore_3
      17: iload_2
      18: aload_0
      19: getfield      #5                  // Field m_blocksize:I
      22: irem
      23: istore        4
      25: aload_0
      26: getfield      #4                  // Field m_firstFree:I
      29: aload_0
      30: getfield      #5                  // Field m_blocksize:I
      33: idiv
      34: istore        5
      36: goto          96
      39: aload_0
      40: getfield      #8                  // Field m_map:[[B
      43: iload_3
      44: aaload
      45: astore        6
      47: aload         6
      49: ifnull        90
      52: iload         4
      54: istore        7
      56: goto          81
      59: aload         6
      61: iload         7
      63: baload
      64: iload_1
      65: if_icmpne     78
      68: iload         7
      70: iload_3
      71: aload_0
      72: getfield      #5                  // Field m_blocksize:I
      75: imul
      76: iadd
      77: ireturn
      78: iinc          7, 1
      81: iload         7
      83: aload_0
      84: getfield      #5                  // Field m_blocksize:I
      87: if_icmplt     59
      90: iconst_0
      91: istore        4
      93: iinc          3, 1
      96: iload_3
      97: iload         5
      99: if_icmplt     39
     102: aload_0
     103: getfield      #4                  // Field m_firstFree:I
     106: aload_0
     107: getfield      #5                  // Field m_blocksize:I
     110: irem
     111: istore        7
     113: aload_0
     114: getfield      #8                  // Field m_map:[[B
     117: iload         5
     119: aaload
     120: astore        6
     122: iload         4
     124: istore        8
     126: goto          152
     129: aload         6
     131: iload         8
     133: baload
     134: iload_1
     135: if_icmpne     149
     138: iload         8
     140: iload         5
     142: aload_0
     143: getfield      #5                  // Field m_blocksize:I
     146: imul
     147: iadd
     148: ireturn
     149: iinc          8, 1
     152: iload         8
     154: iload         7
     156: if_icmplt     129
     159: iconst_m1
     160: ireturn

  public int indexOf(byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokevirtual #11                 // Method indexOf:(BI)I
       6: ireturn

  private int lastIndexOf(byte);
    Code:
       0: aload_0
       1: getfield      #4                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #5                  // Field m_blocksize:I
       8: irem
       9: istore_2
      10: aload_0
      11: getfield      #4                  // Field m_firstFree:I
      14: aload_0
      15: getfield      #5                  // Field m_blocksize:I
      18: idiv
      19: istore_3
      20: goto          74
      23: aload_0
      24: getfield      #8                  // Field m_map:[[B
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: ifnull        69
      36: iload_2
      37: istore        5
      39: goto          64
      42: aload         4
      44: iload         5
      46: baload
      47: iload_1
      48: if_icmpne     61
      51: iload         5
      53: iload_3
      54: aload_0
      55: getfield      #5                  // Field m_blocksize:I
      58: imul
      59: iadd
      60: ireturn
      61: iinc          5, -1
      64: iload         5
      66: ifge          42
      69: iconst_0
      70: istore_2
      71: iinc          3, -1
      74: iload_3
      75: ifge          23
      78: iconst_m1
      79: ireturn
}
