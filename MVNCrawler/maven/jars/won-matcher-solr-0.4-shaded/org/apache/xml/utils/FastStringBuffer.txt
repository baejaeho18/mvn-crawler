Compiled from "FastStringBuffer.java"
public class org.apache.xml.utils.FastStringBuffer {
  static final int DEBUG_FORCE_INIT_BITS;

  static final boolean DEBUG_FORCE_FIXED_CHUNKSIZE;

  public static final int SUPPRESS_LEADING_WS;

  public static final int SUPPRESS_TRAILING_WS;

  public static final int SUPPRESS_BOTH;

  private static final int CARRY_WS;

  int m_chunkBits;

  int m_maxChunkBits;

  int m_rebundleBits;

  int m_chunkSize;

  int m_chunkMask;

  char[][] m_array;

  int m_lastChunk;

  int m_firstFree;

  org.apache.xml.utils.FastStringBuffer m_innerFSB;

  static final char[] SINGLE_SPACE;

  public org.apache.xml.utils.FastStringBuffer(int, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        15
       7: putfield      #2                  // Field m_chunkBits:I
      10: aload_0
      11: bipush        15
      13: putfield      #3                  // Field m_maxChunkBits:I
      16: aload_0
      17: iconst_2
      18: putfield      #4                  // Field m_rebundleBits:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field m_lastChunk:I
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field m_firstFree:I
      31: aload_0
      32: aconst_null
      33: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      36: iload_1
      37: istore_2
      38: aload_0
      39: bipush        16
      41: anewarray     #8                  // class "[C"
      44: putfield      #9                  // Field m_array:[[C
      47: iload_1
      48: iload_2
      49: if_icmple     54
      52: iload_2
      53: istore_1
      54: aload_0
      55: iload_1
      56: putfield      #2                  // Field m_chunkBits:I
      59: aload_0
      60: iload_2
      61: putfield      #3                  // Field m_maxChunkBits:I
      64: aload_0
      65: iload_3
      66: putfield      #4                  // Field m_rebundleBits:I
      69: aload_0
      70: iconst_1
      71: iload_1
      72: ishl
      73: putfield      #10                 // Field m_chunkSize:I
      76: aload_0
      77: aload_0
      78: getfield      #10                 // Field m_chunkSize:I
      81: iconst_1
      82: isub
      83: putfield      #11                 // Field m_chunkMask:I
      86: aload_0
      87: getfield      #9                  // Field m_array:[[C
      90: iconst_0
      91: aload_0
      92: getfield      #10                 // Field m_chunkSize:I
      95: newarray       char
      97: aastore
      98: return

  public org.apache.xml.utils.FastStringBuffer(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_2
       4: invokespecial #12                 // Method "<init>":(III)V
       7: return

  public org.apache.xml.utils.FastStringBuffer(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        15
       4: iconst_2
       5: invokespecial #12                 // Method "<init>":(III)V
       8: return

  public org.apache.xml.utils.FastStringBuffer();
    Code:
       0: aload_0
       1: bipush        10
       3: bipush        15
       5: iconst_2
       6: invokespecial #12                 // Method "<init>":(III)V
       9: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: ireturn

  public final int length();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: ireturn

  public final void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field m_lastChunk:I
       5: aload_0
       6: iconst_0
       7: putfield      #6                  // Field m_firstFree:I
      10: aload_0
      11: astore_1
      12: goto          20
      15: aload_1
      16: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      19: astore_1
      20: aload_1
      21: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      24: ifnonnull     15
      27: aload_0
      28: aload_1
      29: getfield      #2                  // Field m_chunkBits:I
      32: putfield      #2                  // Field m_chunkBits:I
      35: aload_0
      36: aload_1
      37: getfield      #10                 // Field m_chunkSize:I
      40: putfield      #10                 // Field m_chunkSize:I
      43: aload_0
      44: aload_1
      45: getfield      #11                 // Field m_chunkMask:I
      48: putfield      #11                 // Field m_chunkMask:I
      51: aload_0
      52: aconst_null
      53: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      56: aload_0
      57: bipush        16
      59: iconst_0
      60: multianewarray #13,  2            // class "[[C"
      64: putfield      #9                  // Field m_array:[[C
      67: aload_0
      68: getfield      #9                  // Field m_array:[[C
      71: iconst_0
      72: aload_0
      73: getfield      #10                 // Field m_chunkSize:I
      76: newarray       char
      78: aastore
      79: return

  public final void setLength(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #2                  // Field m_chunkBits:I
       6: iushr
       7: putfield      #5                  // Field m_lastChunk:I
      10: aload_0
      11: getfield      #5                  // Field m_lastChunk:I
      14: ifne          36
      17: aload_0
      18: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      21: ifnull        36
      24: aload_0
      25: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      28: iload_1
      29: aload_0
      30: invokespecial #14                 // Method setLength:(ILorg/apache/xml/utils/FastStringBuffer;)V
      33: goto          78
      36: aload_0
      37: iload_1
      38: aload_0
      39: getfield      #11                 // Field m_chunkMask:I
      42: iand
      43: putfield      #6                  // Field m_firstFree:I
      46: aload_0
      47: getfield      #6                  // Field m_firstFree:I
      50: ifne          78
      53: aload_0
      54: getfield      #5                  // Field m_lastChunk:I
      57: ifle          78
      60: aload_0
      61: dup
      62: getfield      #5                  // Field m_lastChunk:I
      65: iconst_1
      66: isub
      67: putfield      #5                  // Field m_lastChunk:I
      70: aload_0
      71: aload_0
      72: getfield      #10                 // Field m_chunkSize:I
      75: putfield      #6                  // Field m_firstFree:I
      78: return

  private final void setLength(int, org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: getfield      #2                  // Field m_chunkBits:I
       6: iushr
       7: putfield      #5                  // Field m_lastChunk:I
      10: aload_0
      11: getfield      #5                  // Field m_lastChunk:I
      14: ifne          36
      17: aload_0
      18: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      21: ifnull        36
      24: aload_0
      25: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      28: iload_1
      29: aload_2
      30: invokespecial #14                 // Method setLength:(ILorg/apache/xml/utils/FastStringBuffer;)V
      33: goto          110
      36: aload_2
      37: aload_0
      38: getfield      #2                  // Field m_chunkBits:I
      41: putfield      #2                  // Field m_chunkBits:I
      44: aload_2
      45: aload_0
      46: getfield      #3                  // Field m_maxChunkBits:I
      49: putfield      #3                  // Field m_maxChunkBits:I
      52: aload_2
      53: aload_0
      54: getfield      #4                  // Field m_rebundleBits:I
      57: putfield      #4                  // Field m_rebundleBits:I
      60: aload_2
      61: aload_0
      62: getfield      #10                 // Field m_chunkSize:I
      65: putfield      #10                 // Field m_chunkSize:I
      68: aload_2
      69: aload_0
      70: getfield      #11                 // Field m_chunkMask:I
      73: putfield      #11                 // Field m_chunkMask:I
      76: aload_2
      77: aload_0
      78: getfield      #9                  // Field m_array:[[C
      81: putfield      #9                  // Field m_array:[[C
      84: aload_2
      85: aload_0
      86: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      89: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      92: aload_2
      93: aload_0
      94: getfield      #5                  // Field m_lastChunk:I
      97: putfield      #5                  // Field m_lastChunk:I
     100: aload_2
     101: iload_1
     102: aload_0
     103: getfield      #11                 // Field m_chunkMask:I
     106: iand
     107: putfield      #6                  // Field m_firstFree:I
     110: return

  public final java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field m_lastChunk:I
       4: aload_0
       5: getfield      #2                  // Field m_chunkBits:I
       8: ishl
       9: aload_0
      10: getfield      #6                  // Field m_firstFree:I
      13: iadd
      14: istore_1
      15: aload_0
      16: new           #15                 // class java/lang/StringBuffer
      19: dup
      20: iload_1
      21: invokespecial #16                 // Method java/lang/StringBuffer."<init>":(I)V
      24: iconst_0
      25: iconst_0
      26: iload_1
      27: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      30: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      33: areturn

  public final void append(char);
    Code:
       0: aload_0
       1: getfield      #6                  // Field m_firstFree:I
       4: aload_0
       5: getfield      #10                 // Field m_chunkSize:I
       8: if_icmpge     24
      11: aload_0
      12: getfield      #9                  // Field m_array:[[C
      15: aload_0
      16: getfield      #5                  // Field m_lastChunk:I
      19: aaload
      20: astore_2
      21: goto          146
      24: aload_0
      25: getfield      #9                  // Field m_array:[[C
      28: arraylength
      29: istore_3
      30: aload_0
      31: getfield      #5                  // Field m_lastChunk:I
      34: iconst_1
      35: iadd
      36: iload_3
      37: if_icmpne     67
      40: iload_3
      41: bipush        16
      43: iadd
      44: anewarray     #8                  // class "[C"
      47: astore        4
      49: aload_0
      50: getfield      #9                  // Field m_array:[[C
      53: iconst_0
      54: aload         4
      56: iconst_0
      57: iload_3
      58: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      61: aload_0
      62: aload         4
      64: putfield      #9                  // Field m_array:[[C
      67: aload_0
      68: getfield      #9                  // Field m_array:[[C
      71: aload_0
      72: dup
      73: getfield      #5                  // Field m_lastChunk:I
      76: iconst_1
      77: iadd
      78: dup_x1
      79: putfield      #5                  // Field m_lastChunk:I
      82: aaload
      83: astore_2
      84: aload_2
      85: ifnonnull     141
      88: aload_0
      89: getfield      #5                  // Field m_lastChunk:I
      92: iconst_1
      93: aload_0
      94: getfield      #4                  // Field m_rebundleBits:I
      97: ishl
      98: if_icmpne     124
     101: aload_0
     102: getfield      #2                  // Field m_chunkBits:I
     105: aload_0
     106: getfield      #3                  // Field m_maxChunkBits:I
     109: if_icmpge     124
     112: aload_0
     113: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     116: dup
     117: aload_0
     118: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     121: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     124: aload_0
     125: getfield      #9                  // Field m_array:[[C
     128: aload_0
     129: getfield      #5                  // Field m_lastChunk:I
     132: aload_0
     133: getfield      #10                 // Field m_chunkSize:I
     136: newarray       char
     138: dup_x2
     139: aastore
     140: astore_2
     141: aload_0
     142: iconst_0
     143: putfield      #6                  // Field m_firstFree:I
     146: aload_2
     147: aload_0
     148: dup
     149: getfield      #6                  // Field m_firstFree:I
     152: dup_x1
     153: iconst_1
     154: iadd
     155: putfield      #6                  // Field m_firstFree:I
     158: iload_1
     159: castore
     160: return

  public final void append(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #22                 // Method java/lang/String.length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: goto          223
      43: iload         5
      45: iload_2
      46: if_icmple     52
      49: iload_2
      50: istore        5
      52: aload_1
      53: iload_3
      54: iload_3
      55: iload         5
      57: iadd
      58: aload_0
      59: getfield      #9                  // Field m_array:[[C
      62: aload_0
      63: getfield      #5                  // Field m_lastChunk:I
      66: aaload
      67: aload_0
      68: getfield      #6                  // Field m_firstFree:I
      71: invokevirtual #23                 // Method java/lang/String.getChars:(II[CI)V
      74: iload_2
      75: iload         5
      77: isub
      78: istore_2
      79: iload_3
      80: iload         5
      82: iadd
      83: istore_3
      84: iload_2
      85: ifle          223
      88: aload_0
      89: getfield      #9                  // Field m_array:[[C
      92: arraylength
      93: istore        6
      95: aload_0
      96: getfield      #5                  // Field m_lastChunk:I
      99: iconst_1
     100: iadd
     101: iload         6
     103: if_icmpne     135
     106: iload         6
     108: bipush        16
     110: iadd
     111: anewarray     #8                  // class "[C"
     114: astore        7
     116: aload_0
     117: getfield      #9                  // Field m_array:[[C
     120: iconst_0
     121: aload         7
     123: iconst_0
     124: iload         6
     126: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     129: aload_0
     130: aload         7
     132: putfield      #9                  // Field m_array:[[C
     135: aload_0
     136: getfield      #9                  // Field m_array:[[C
     139: aload_0
     140: dup
     141: getfield      #5                  // Field m_lastChunk:I
     144: iconst_1
     145: iadd
     146: dup_x1
     147: putfield      #5                  // Field m_lastChunk:I
     150: aaload
     151: astore        4
     153: aload         4
     155: ifnonnull     212
     158: aload_0
     159: getfield      #5                  // Field m_lastChunk:I
     162: iconst_1
     163: aload_0
     164: getfield      #4                  // Field m_rebundleBits:I
     167: ishl
     168: if_icmpne     194
     171: aload_0
     172: getfield      #2                  // Field m_chunkBits:I
     175: aload_0
     176: getfield      #3                  // Field m_maxChunkBits:I
     179: if_icmpge     194
     182: aload_0
     183: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     186: dup
     187: aload_0
     188: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     191: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     194: aload_0
     195: getfield      #9                  // Field m_array:[[C
     198: aload_0
     199: getfield      #5                  // Field m_lastChunk:I
     202: aload_0
     203: getfield      #10                 // Field m_chunkSize:I
     206: newarray       char
     208: dup_x2
     209: aastore
     210: astore        4
     212: aload_0
     213: getfield      #10                 // Field m_chunkSize:I
     216: istore        5
     218: aload_0
     219: iconst_0
     220: putfield      #6                  // Field m_firstFree:I
     223: iload_2
     224: ifgt          43
     227: aload_0
     228: dup
     229: getfield      #6                  // Field m_firstFree:I
     232: iload         5
     234: iadd
     235: putfield      #6                  // Field m_firstFree:I
     238: return

  public final void append(java.lang.StringBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #24                 // Method java/lang/StringBuffer.length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: goto          223
      43: iload         5
      45: iload_2
      46: if_icmple     52
      49: iload_2
      50: istore        5
      52: aload_1
      53: iload_3
      54: iload_3
      55: iload         5
      57: iadd
      58: aload_0
      59: getfield      #9                  // Field m_array:[[C
      62: aload_0
      63: getfield      #5                  // Field m_lastChunk:I
      66: aaload
      67: aload_0
      68: getfield      #6                  // Field m_firstFree:I
      71: invokevirtual #25                 // Method java/lang/StringBuffer.getChars:(II[CI)V
      74: iload_2
      75: iload         5
      77: isub
      78: istore_2
      79: iload_3
      80: iload         5
      82: iadd
      83: istore_3
      84: iload_2
      85: ifle          223
      88: aload_0
      89: getfield      #9                  // Field m_array:[[C
      92: arraylength
      93: istore        6
      95: aload_0
      96: getfield      #5                  // Field m_lastChunk:I
      99: iconst_1
     100: iadd
     101: iload         6
     103: if_icmpne     135
     106: iload         6
     108: bipush        16
     110: iadd
     111: anewarray     #8                  // class "[C"
     114: astore        7
     116: aload_0
     117: getfield      #9                  // Field m_array:[[C
     120: iconst_0
     121: aload         7
     123: iconst_0
     124: iload         6
     126: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     129: aload_0
     130: aload         7
     132: putfield      #9                  // Field m_array:[[C
     135: aload_0
     136: getfield      #9                  // Field m_array:[[C
     139: aload_0
     140: dup
     141: getfield      #5                  // Field m_lastChunk:I
     144: iconst_1
     145: iadd
     146: dup_x1
     147: putfield      #5                  // Field m_lastChunk:I
     150: aaload
     151: astore        4
     153: aload         4
     155: ifnonnull     212
     158: aload_0
     159: getfield      #5                  // Field m_lastChunk:I
     162: iconst_1
     163: aload_0
     164: getfield      #4                  // Field m_rebundleBits:I
     167: ishl
     168: if_icmpne     194
     171: aload_0
     172: getfield      #2                  // Field m_chunkBits:I
     175: aload_0
     176: getfield      #3                  // Field m_maxChunkBits:I
     179: if_icmpge     194
     182: aload_0
     183: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     186: dup
     187: aload_0
     188: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     191: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     194: aload_0
     195: getfield      #9                  // Field m_array:[[C
     198: aload_0
     199: getfield      #5                  // Field m_lastChunk:I
     202: aload_0
     203: getfield      #10                 // Field m_chunkSize:I
     206: newarray       char
     208: dup_x2
     209: aastore
     210: astore        4
     212: aload_0
     213: getfield      #10                 // Field m_chunkSize:I
     216: istore        5
     218: aload_0
     219: iconst_0
     220: putfield      #6                  // Field m_firstFree:I
     223: iload_2
     224: ifgt          43
     227: aload_0
     228: dup
     229: getfield      #6                  // Field m_firstFree:I
     232: iload         5
     234: iadd
     235: putfield      #6                  // Field m_firstFree:I
     238: return

  public final void append(char[], int, int);
    Code:
       0: iload_3
       1: istore        4
       3: iconst_0
       4: iload         4
       6: if_icmpne     10
       9: return
      10: iload_2
      11: istore        5
      13: aload_0
      14: getfield      #9                  // Field m_array:[[C
      17: aload_0
      18: getfield      #5                  // Field m_lastChunk:I
      21: aaload
      22: astore        6
      24: aload_0
      25: getfield      #10                 // Field m_chunkSize:I
      28: aload_0
      29: getfield      #6                  // Field m_firstFree:I
      32: isub
      33: istore        7
      35: goto          224
      38: iload         7
      40: iload         4
      42: if_icmple     49
      45: iload         4
      47: istore        7
      49: aload_1
      50: iload         5
      52: aload_0
      53: getfield      #9                  // Field m_array:[[C
      56: aload_0
      57: getfield      #5                  // Field m_lastChunk:I
      60: aaload
      61: aload_0
      62: getfield      #6                  // Field m_firstFree:I
      65: iload         7
      67: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      70: iload         4
      72: iload         7
      74: isub
      75: istore        4
      77: iload         5
      79: iload         7
      81: iadd
      82: istore        5
      84: iload         4
      86: ifle          224
      89: aload_0
      90: getfield      #9                  // Field m_array:[[C
      93: arraylength
      94: istore        8
      96: aload_0
      97: getfield      #5                  // Field m_lastChunk:I
     100: iconst_1
     101: iadd
     102: iload         8
     104: if_icmpne     136
     107: iload         8
     109: bipush        16
     111: iadd
     112: anewarray     #8                  // class "[C"
     115: astore        9
     117: aload_0
     118: getfield      #9                  // Field m_array:[[C
     121: iconst_0
     122: aload         9
     124: iconst_0
     125: iload         8
     127: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     130: aload_0
     131: aload         9
     133: putfield      #9                  // Field m_array:[[C
     136: aload_0
     137: getfield      #9                  // Field m_array:[[C
     140: aload_0
     141: dup
     142: getfield      #5                  // Field m_lastChunk:I
     145: iconst_1
     146: iadd
     147: dup_x1
     148: putfield      #5                  // Field m_lastChunk:I
     151: aaload
     152: astore        6
     154: aload         6
     156: ifnonnull     213
     159: aload_0
     160: getfield      #5                  // Field m_lastChunk:I
     163: iconst_1
     164: aload_0
     165: getfield      #4                  // Field m_rebundleBits:I
     168: ishl
     169: if_icmpne     195
     172: aload_0
     173: getfield      #2                  // Field m_chunkBits:I
     176: aload_0
     177: getfield      #3                  // Field m_maxChunkBits:I
     180: if_icmpge     195
     183: aload_0
     184: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     187: dup
     188: aload_0
     189: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     192: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     195: aload_0
     196: getfield      #9                  // Field m_array:[[C
     199: aload_0
     200: getfield      #5                  // Field m_lastChunk:I
     203: aload_0
     204: getfield      #10                 // Field m_chunkSize:I
     207: newarray       char
     209: dup_x2
     210: aastore
     211: astore        6
     213: aload_0
     214: getfield      #10                 // Field m_chunkSize:I
     217: istore        7
     219: aload_0
     220: iconst_0
     221: putfield      #6                  // Field m_firstFree:I
     224: iload         4
     226: ifgt          38
     229: aload_0
     230: dup
     231: getfield      #6                  // Field m_firstFree:I
     234: iload         7
     236: iadd
     237: putfield      #6                  // Field m_firstFree:I
     240: return

  public final void append(org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_1
       6: invokevirtual #26                 // Method length:()I
       9: istore_2
      10: iconst_0
      11: iload_2
      12: if_icmpne     16
      15: return
      16: iconst_0
      17: istore_3
      18: aload_0
      19: getfield      #9                  // Field m_array:[[C
      22: aload_0
      23: getfield      #5                  // Field m_lastChunk:I
      26: aaload
      27: astore        4
      29: aload_0
      30: getfield      #10                 // Field m_chunkSize:I
      33: aload_0
      34: getfield      #6                  // Field m_firstFree:I
      37: isub
      38: istore        5
      40: goto          312
      43: iload         5
      45: iload_2
      46: if_icmple     52
      49: iload_2
      50: istore        5
      52: iload_3
      53: aload_1
      54: getfield      #10                 // Field m_chunkSize:I
      57: iadd
      58: iconst_1
      59: isub
      60: aload_1
      61: getfield      #2                  // Field m_chunkBits:I
      64: iushr
      65: istore        6
      67: iload_3
      68: aload_1
      69: getfield      #11                 // Field m_chunkMask:I
      72: iand
      73: istore        7
      75: aload_1
      76: getfield      #10                 // Field m_chunkSize:I
      79: iload         7
      81: isub
      82: istore        8
      84: iload         8
      86: iload         5
      88: if_icmple     95
      91: iload         5
      93: istore        8
      95: aload_1
      96: getfield      #9                  // Field m_array:[[C
      99: iload         6
     101: aaload
     102: iload         7
     104: aload_0
     105: getfield      #9                  // Field m_array:[[C
     108: aload_0
     109: getfield      #5                  // Field m_lastChunk:I
     112: aaload
     113: aload_0
     114: getfield      #6                  // Field m_firstFree:I
     117: iload         8
     119: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     122: iload         8
     124: iload         5
     126: if_icmpeq     163
     129: aload_1
     130: getfield      #9                  // Field m_array:[[C
     133: iload         6
     135: iconst_1
     136: iadd
     137: aaload
     138: iconst_0
     139: aload_0
     140: getfield      #9                  // Field m_array:[[C
     143: aload_0
     144: getfield      #5                  // Field m_lastChunk:I
     147: aaload
     148: aload_0
     149: getfield      #6                  // Field m_firstFree:I
     152: iload         8
     154: iadd
     155: iload         5
     157: iload         8
     159: isub
     160: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     163: iload_2
     164: iload         5
     166: isub
     167: istore_2
     168: iload_3
     169: iload         5
     171: iadd
     172: istore_3
     173: iload_2
     174: ifle          312
     177: aload_0
     178: getfield      #9                  // Field m_array:[[C
     181: arraylength
     182: istore        9
     184: aload_0
     185: getfield      #5                  // Field m_lastChunk:I
     188: iconst_1
     189: iadd
     190: iload         9
     192: if_icmpne     224
     195: iload         9
     197: bipush        16
     199: iadd
     200: anewarray     #8                  // class "[C"
     203: astore        10
     205: aload_0
     206: getfield      #9                  // Field m_array:[[C
     209: iconst_0
     210: aload         10
     212: iconst_0
     213: iload         9
     215: invokestatic  #19                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     218: aload_0
     219: aload         10
     221: putfield      #9                  // Field m_array:[[C
     224: aload_0
     225: getfield      #9                  // Field m_array:[[C
     228: aload_0
     229: dup
     230: getfield      #5                  // Field m_lastChunk:I
     233: iconst_1
     234: iadd
     235: dup_x1
     236: putfield      #5                  // Field m_lastChunk:I
     239: aaload
     240: astore        4
     242: aload         4
     244: ifnonnull     301
     247: aload_0
     248: getfield      #5                  // Field m_lastChunk:I
     251: iconst_1
     252: aload_0
     253: getfield      #4                  // Field m_rebundleBits:I
     256: ishl
     257: if_icmpne     283
     260: aload_0
     261: getfield      #2                  // Field m_chunkBits:I
     264: aload_0
     265: getfield      #3                  // Field m_maxChunkBits:I
     268: if_icmpge     283
     271: aload_0
     272: new           #20                 // class org/apache/xml/utils/FastStringBuffer
     275: dup
     276: aload_0
     277: invokespecial #21                 // Method "<init>":(Lorg/apache/xml/utils/FastStringBuffer;)V
     280: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     283: aload_0
     284: getfield      #9                  // Field m_array:[[C
     287: aload_0
     288: getfield      #5                  // Field m_lastChunk:I
     291: aload_0
     292: getfield      #10                 // Field m_chunkSize:I
     295: newarray       char
     297: dup_x2
     298: aastore
     299: astore        4
     301: aload_0
     302: getfield      #10                 // Field m_chunkSize:I
     305: istore        5
     307: aload_0
     308: iconst_0
     309: putfield      #6                  // Field m_firstFree:I
     312: iload_2
     313: ifgt          43
     316: aload_0
     317: dup
     318: getfield      #6                  // Field m_firstFree:I
     321: iload         5
     323: iadd
     324: putfield      #6                  // Field m_firstFree:I
     327: return

  public boolean isWhitespace(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore_3
       7: iload_1
       8: aload_0
       9: getfield      #11                 // Field m_chunkMask:I
      12: iand
      13: istore        4
      15: aload_0
      16: getfield      #10                 // Field m_chunkSize:I
      19: iload         4
      21: isub
      22: istore        5
      24: goto          107
      27: iload_2
      28: iload         5
      30: if_icmpgt     37
      33: iload_2
      34: goto          39
      37: iload         5
      39: istore        7
      41: iload_3
      42: ifne          68
      45: aload_0
      46: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      49: ifnull        68
      52: aload_0
      53: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      56: iload         4
      58: iload         7
      60: invokevirtual #27                 // Method isWhitespace:(II)Z
      63: istore        6
      65: goto          83
      68: aload_0
      69: getfield      #9                  // Field m_array:[[C
      72: iload_3
      73: aaload
      74: iload         4
      76: iload         7
      78: invokestatic  #28                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:([CII)Z
      81: istore        6
      83: iload         6
      85: ifne          90
      88: iconst_0
      89: ireturn
      90: iload_2
      91: iload         7
      93: isub
      94: istore_2
      95: iinc          3, 1
      98: iconst_0
      99: istore        4
     101: aload_0
     102: getfield      #10                 // Field m_chunkSize:I
     105: istore        5
     107: iload_2
     108: ifgt          27
     111: iconst_1
     112: ireturn

  public java.lang.String getString(int, int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #11                 // Field m_chunkMask:I
       5: iand
       6: istore_3
       7: iload_1
       8: aload_0
       9: getfield      #2                  // Field m_chunkBits:I
      12: iushr
      13: istore        4
      15: iload_3
      16: iload_2
      17: iadd
      18: aload_0
      19: getfield      #11                 // Field m_chunkMask:I
      22: if_icmpge     41
      25: aload_0
      26: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      29: ifnonnull     41
      32: aload_0
      33: iload         4
      35: iload_3
      36: iload_2
      37: invokevirtual #29                 // Method getOneChunkString:(III)Ljava/lang/String;
      40: areturn
      41: aload_0
      42: new           #15                 // class java/lang/StringBuffer
      45: dup
      46: iload_2
      47: invokespecial #16                 // Method java/lang/StringBuffer."<init>":(I)V
      50: iload         4
      52: iload_3
      53: iload_2
      54: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      57: invokevirtual #18                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      60: areturn

  protected java.lang.String getOneChunkString(int, int, int);
    Code:
       0: new           #30                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #9                  // Field m_array:[[C
       8: iload_1
       9: aaload
      10: iload_2
      11: iload_3
      12: invokespecial #31                 // Method java/lang/String."<init>":([CII)V
      15: areturn

  java.lang.StringBuffer getString(java.lang.StringBuffer, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field m_chunkBits:I
       7: iushr
       8: iload_2
       9: aload_0
      10: getfield      #11                 // Field m_chunkMask:I
      13: iand
      14: iload_3
      15: invokevirtual #17                 // Method getString:(Ljava/lang/StringBuffer;III)Ljava/lang/StringBuffer;
      18: areturn

  java.lang.StringBuffer getString(java.lang.StringBuffer, int, int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: ishl
       6: iload_3
       7: iadd
       8: iload         4
      10: iadd
      11: istore        5
      13: iload         5
      15: aload_0
      16: getfield      #2                  // Field m_chunkBits:I
      19: iushr
      20: istore        6
      22: iload         5
      24: aload_0
      25: getfield      #11                 // Field m_chunkMask:I
      28: iand
      29: istore        7
      31: iload_2
      32: istore        8
      34: goto          92
      37: iload         8
      39: ifne          68
      42: aload_0
      43: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      46: ifnull        68
      49: aload_0
      50: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      53: aload_1
      54: iload_3
      55: aload_0
      56: getfield      #10                 // Field m_chunkSize:I
      59: iload_3
      60: isub
      61: invokevirtual #32                 // Method getString:(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer;
      64: pop
      65: goto          87
      68: aload_1
      69: aload_0
      70: getfield      #9                  // Field m_array:[[C
      73: iload         8
      75: aaload
      76: iload_3
      77: aload_0
      78: getfield      #10                 // Field m_chunkSize:I
      81: iload_3
      82: isub
      83: invokevirtual #33                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;
      86: pop
      87: iconst_0
      88: istore_3
      89: iinc          8, 1
      92: iload         8
      94: iload         6
      96: if_icmplt     37
      99: iload         6
     101: ifne          128
     104: aload_0
     105: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     108: ifnull        128
     111: aload_0
     112: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     115: aload_1
     116: iload_3
     117: iload         7
     119: iload_3
     120: isub
     121: invokevirtual #32                 // Method getString:(Ljava/lang/StringBuffer;II)Ljava/lang/StringBuffer;
     124: pop
     125: goto          151
     128: iload         7
     130: iload_3
     131: if_icmple     151
     134: aload_1
     135: aload_0
     136: getfield      #9                  // Field m_array:[[C
     139: iload         6
     141: aaload
     142: iload_3
     143: iload         7
     145: iload_3
     146: isub
     147: invokevirtual #33                 // Method java/lang/StringBuffer.append:([CII)Ljava/lang/StringBuffer;
     150: pop
     151: aload_1
     152: areturn

  public char charAt(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore_2
       7: iload_2
       8: ifne          32
      11: aload_0
      12: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      15: ifnull        32
      18: aload_0
      19: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      22: iload_1
      23: aload_0
      24: getfield      #11                 // Field m_chunkMask:I
      27: iand
      28: invokevirtual #34                 // Method charAt:(I)C
      31: ireturn
      32: aload_0
      33: getfield      #9                  // Field m_array:[[C
      36: iload_2
      37: aaload
      38: iload_1
      39: aload_0
      40: getfield      #11                 // Field m_chunkMask:I
      43: iand
      44: caload
      45: ireturn

  public void sendSAXcharacters(org.xml.sax.ContentHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #2                  // Field m_chunkBits:I
       5: iushr
       6: istore        4
       8: iload_2
       9: aload_0
      10: getfield      #11                 // Field m_chunkMask:I
      13: iand
      14: istore        5
      16: iload         5
      18: iload_3
      19: iadd
      20: aload_0
      21: getfield      #11                 // Field m_chunkMask:I
      24: if_icmpge     51
      27: aload_0
      28: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      31: ifnonnull     51
      34: aload_1
      35: aload_0
      36: getfield      #9                  // Field m_array:[[C
      39: iload         4
      41: aaload
      42: iload         5
      44: iload_3
      45: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
      50: return
      51: iload_2
      52: iload_3
      53: iadd
      54: istore        6
      56: iload         6
      58: aload_0
      59: getfield      #2                  // Field m_chunkBits:I
      62: iushr
      63: istore        7
      65: iload         6
      67: aload_0
      68: getfield      #11                 // Field m_chunkMask:I
      71: iand
      72: istore        8
      74: iload         4
      76: istore        9
      78: goto          141
      81: iload         9
      83: ifne          113
      86: aload_0
      87: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      90: ifnull        113
      93: aload_0
      94: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      97: aload_1
      98: iload         5
     100: aload_0
     101: getfield      #10                 // Field m_chunkSize:I
     104: iload         5
     106: isub
     107: invokevirtual #36                 // Method sendSAXcharacters:(Lorg/xml/sax/ContentHandler;II)V
     110: goto          135
     113: aload_1
     114: aload_0
     115: getfield      #9                  // Field m_array:[[C
     118: iload         9
     120: aaload
     121: iload         5
     123: aload_0
     124: getfield      #10                 // Field m_chunkSize:I
     127: iload         5
     129: isub
     130: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     135: iconst_0
     136: istore        5
     138: iinc          9, 1
     141: iload         9
     143: iload         7
     145: if_icmplt     81
     148: iload         7
     150: ifne          178
     153: aload_0
     154: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     157: ifnull        178
     160: aload_0
     161: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     164: aload_1
     165: iload         5
     167: iload         8
     169: iload         5
     171: isub
     172: invokevirtual #36                 // Method sendSAXcharacters:(Lorg/xml/sax/ContentHandler;II)V
     175: goto          205
     178: iload         8
     180: iload         5
     182: if_icmple     205
     185: aload_1
     186: aload_0
     187: getfield      #9                  // Field m_array:[[C
     190: iload         7
     192: aaload
     193: iload         5
     195: iload         8
     197: iload         5
     199: isub
     200: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     205: return

  public int sendNormalizedSAXcharacters(org.xml.sax.ContentHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: iconst_1
       1: istore        4
       3: iload_2
       4: iload_3
       5: iadd
       6: istore        5
       8: iload_2
       9: aload_0
      10: getfield      #2                  // Field m_chunkBits:I
      13: iushr
      14: istore        6
      16: iload_2
      17: aload_0
      18: getfield      #11                 // Field m_chunkMask:I
      21: iand
      22: istore        7
      24: iload         5
      26: aload_0
      27: getfield      #2                  // Field m_chunkBits:I
      30: iushr
      31: istore        8
      33: iload         5
      35: aload_0
      36: getfield      #11                 // Field m_chunkMask:I
      39: iand
      40: istore        9
      42: iload         6
      44: istore        10
      46: goto          113
      49: iload         10
      51: ifne          83
      54: aload_0
      55: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      58: ifnull        83
      61: aload_0
      62: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      65: aload_1
      66: iload         7
      68: aload_0
      69: getfield      #10                 // Field m_chunkSize:I
      72: iload         7
      74: isub
      75: invokevirtual #37                 // Method sendNormalizedSAXcharacters:(Lorg/xml/sax/ContentHandler;II)I
      78: istore        4
      80: goto          107
      83: aload_0
      84: getfield      #9                  // Field m_array:[[C
      87: iload         10
      89: aaload
      90: iload         7
      92: aload_0
      93: getfield      #10                 // Field m_chunkSize:I
      96: iload         7
      98: isub
      99: aload_1
     100: iload         4
     102: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
     105: istore        4
     107: iconst_0
     108: istore        7
     110: iinc          10, 1
     113: iload         10
     115: iload         8
     117: if_icmplt     49
     120: iload         8
     122: ifne          152
     125: aload_0
     126: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     129: ifnull        152
     132: aload_0
     133: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     136: aload_1
     137: iload         7
     139: iload         9
     141: iload         7
     143: isub
     144: invokevirtual #37                 // Method sendNormalizedSAXcharacters:(Lorg/xml/sax/ContentHandler;II)I
     147: istore        4
     149: goto          183
     152: iload         9
     154: iload         7
     156: if_icmple     183
     159: aload_0
     160: getfield      #9                  // Field m_array:[[C
     163: iload         8
     165: aaload
     166: iload         7
     168: iload         9
     170: iload         7
     172: isub
     173: aload_1
     174: iload         4
     176: iconst_2
     177: ior
     178: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
     181: istore        4
     183: iload         4
     185: ireturn

  static int sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler, int) throws org.xml.sax.SAXException;
    Code:
       0: iload         4
       2: iconst_1
       3: iand
       4: ifeq          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore        5
      14: iload         4
      16: iconst_4
      17: iand
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore        6
      28: iload_1
      29: istore        7
      31: iload_1
      32: iload_2
      33: iadd
      34: istore        8
      36: iload         5
      38: ifeq          178
      41: goto          47
      44: iinc          7, 1
      47: iload         7
      49: iload         8
      51: if_icmpge     64
      54: aload_0
      55: iload         7
      57: caload
      58: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
      61: ifne          44
      64: iload         7
      66: iload         8
      68: if_icmpne     178
      71: iload         4
      73: ireturn
      74: iload         7
      76: istore        9
      78: goto          84
      81: iinc          7, 1
      84: iload         7
      86: iload         8
      88: if_icmpge     101
      91: aload_0
      92: iload         7
      94: caload
      95: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
      98: ifeq          81
     101: iload         9
     103: iload         7
     105: if_icmpeq     141
     108: iload         6
     110: ifeq          127
     113: aload_3
     114: getstatic     #40                 // Field SINGLE_SPACE:[C
     117: iconst_0
     118: iconst_1
     119: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     124: iconst_0
     125: istore        6
     127: aload_3
     128: aload_0
     129: iload         9
     131: iload         7
     133: iload         9
     135: isub
     136: invokeinterface #35,  4           // InterfaceMethod org/xml/sax/ContentHandler.characters:([CII)V
     141: iload         7
     143: istore        10
     145: goto          151
     148: iinc          7, 1
     151: iload         7
     153: iload         8
     155: if_icmpge     168
     158: aload_0
     159: iload         7
     161: caload
     162: invokestatic  #39                 // Method org/apache/xml/utils/XMLCharacterRecognizer.isWhiteSpace:(C)Z
     165: ifne          148
     168: iload         10
     170: iload         7
     172: if_icmpeq     178
     175: iconst_1
     176: istore        6
     178: iload         7
     180: iload         8
     182: if_icmplt     74
     185: iload         6
     187: ifeq          194
     190: iconst_4
     191: goto          195
     194: iconst_0
     195: iload         4
     197: iconst_2
     198: iand
     199: ior
     200: ireturn

  public static void sendNormalizedSAXcharacters(char[], int, int, org.xml.sax.ContentHandler) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: iconst_3
       5: invokestatic  #38                 // Method sendNormalizedSAXcharacters:([CIILorg/xml/sax/ContentHandler;I)I
       8: pop
       9: return

  public void sendSAXComment(org.xml.sax.ext.LexicalHandler, int, int) throws org.xml.sax.SAXException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #41                 // Method getString:(II)Ljava/lang/String;
       6: astore        4
       8: aload_1
       9: aload         4
      11: invokevirtual #42                 // Method java/lang/String.toCharArray:()[C
      14: iconst_0
      15: iload_3
      16: invokeinterface #43,  4           // InterfaceMethod org/xml/sax/ext/LexicalHandler.comment:([CII)V
      21: return

  private void getChars(int, int, char[], int);
    Code:
       0: return

  private org.apache.xml.utils.FastStringBuffer(org.apache.xml.utils.FastStringBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        15
       7: putfield      #2                  // Field m_chunkBits:I
      10: aload_0
      11: bipush        15
      13: putfield      #3                  // Field m_maxChunkBits:I
      16: aload_0
      17: iconst_2
      18: putfield      #4                  // Field m_rebundleBits:I
      21: aload_0
      22: iconst_0
      23: putfield      #5                  // Field m_lastChunk:I
      26: aload_0
      27: iconst_0
      28: putfield      #6                  // Field m_firstFree:I
      31: aload_0
      32: aconst_null
      33: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      36: aload_0
      37: aload_1
      38: getfield      #2                  // Field m_chunkBits:I
      41: putfield      #2                  // Field m_chunkBits:I
      44: aload_0
      45: aload_1
      46: getfield      #3                  // Field m_maxChunkBits:I
      49: putfield      #3                  // Field m_maxChunkBits:I
      52: aload_0
      53: aload_1
      54: getfield      #4                  // Field m_rebundleBits:I
      57: putfield      #4                  // Field m_rebundleBits:I
      60: aload_0
      61: aload_1
      62: getfield      #10                 // Field m_chunkSize:I
      65: putfield      #10                 // Field m_chunkSize:I
      68: aload_0
      69: aload_1
      70: getfield      #11                 // Field m_chunkMask:I
      73: putfield      #11                 // Field m_chunkMask:I
      76: aload_0
      77: aload_1
      78: getfield      #9                  // Field m_array:[[C
      81: putfield      #9                  // Field m_array:[[C
      84: aload_0
      85: aload_1
      86: getfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      89: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
      92: aload_0
      93: aload_1
      94: getfield      #5                  // Field m_lastChunk:I
      97: iconst_1
      98: isub
      99: putfield      #5                  // Field m_lastChunk:I
     102: aload_0
     103: aload_1
     104: getfield      #10                 // Field m_chunkSize:I
     107: putfield      #6                  // Field m_firstFree:I
     110: aload_1
     111: bipush        16
     113: anewarray     #8                  // class "[C"
     116: putfield      #9                  // Field m_array:[[C
     119: aload_1
     120: aload_0
     121: putfield      #7                  // Field m_innerFSB:Lorg/apache/xml/utils/FastStringBuffer;
     124: aload_1
     125: iconst_1
     126: putfield      #5                  // Field m_lastChunk:I
     129: aload_1
     130: iconst_0
     131: putfield      #6                  // Field m_firstFree:I
     134: aload_1
     135: dup
     136: getfield      #2                  // Field m_chunkBits:I
     139: aload_0
     140: getfield      #4                  // Field m_rebundleBits:I
     143: iadd
     144: putfield      #2                  // Field m_chunkBits:I
     147: aload_1
     148: iconst_1
     149: aload_1
     150: getfield      #2                  // Field m_chunkBits:I
     153: ishl
     154: putfield      #10                 // Field m_chunkSize:I
     157: aload_1
     158: aload_1
     159: getfield      #10                 // Field m_chunkSize:I
     162: iconst_1
     163: isub
     164: putfield      #11                 // Field m_chunkMask:I
     167: return

  static {};
    Code:
       0: iconst_1
       1: newarray       char
       3: dup
       4: iconst_0
       5: bipush        32
       7: castore
       8: putstatic     #40                 // Field SINGLE_SPACE:[C
      11: return
}
