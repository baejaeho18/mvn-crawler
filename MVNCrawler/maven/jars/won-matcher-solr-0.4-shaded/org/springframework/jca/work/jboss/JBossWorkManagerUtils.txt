Compiled from "JBossWorkManagerUtils.java"
public abstract class org.springframework.jca.work.jboss.JBossWorkManagerUtils {
  private static final java.lang.String JBOSS_WORK_MANAGER_MBEAN_CLASS_NAME;

  private static final java.lang.String MBEAN_SERVER_CONNECTION_JNDI_NAME;

  private static final java.lang.String DEFAULT_WORK_MANAGER_MBEAN_NAME;

  public org.springframework.jca.work.jboss.JBossWorkManagerUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static javax.resource.spi.work.WorkManager getWorkManager();
    Code:
       0: ldc           #3                  // String jboss.jca:service=WorkManager
       2: invokestatic  #4                  // Method getWorkManager:(Ljava/lang/String;)Ljavax/resource/spi/work/WorkManager;
       5: areturn

  public static javax.resource.spi.work.WorkManager getWorkManager(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #5                  // String JBossWorkManagerMBean name must not be empty
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: ldc           #2                  // class org/springframework/jca/work/jboss/JBossWorkManagerUtils
       8: invokevirtual #7                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      11: ldc           #8                  // String org.jboss.resource.work.JBossWorkManagerMBean
      13: invokevirtual #9                  // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      16: astore_1
      17: new           #10                 // class javax/naming/InitialContext
      20: dup
      21: invokespecial #11                 // Method javax/naming/InitialContext."<init>":()V
      24: astore_2
      25: aload_2
      26: ldc           #12                 // String jmx/invoker/RMIAdaptor
      28: invokevirtual #13                 // Method javax/naming/InitialContext.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      31: checkcast     #14                 // class javax/management/MBeanServerConnection
      34: astore_3
      35: aload_0
      36: invokestatic  #15                 // Method javax/management/ObjectName.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      39: astore        4
      41: aload_3
      42: aload         4
      44: aload_1
      45: iconst_0
      46: invokestatic  #16                 // Method javax/management/MBeanServerInvocationHandler.newProxyInstance:(Ljavax/management/MBeanServerConnection;Ljavax/management/ObjectName;Ljava/lang/Class;Z)Ljava/lang/Object;
      49: astore        5
      51: aload         5
      53: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: ldc           #18                 // String getInstance
      58: iconst_0
      59: anewarray     #19                 // class java/lang/Class
      62: invokevirtual #20                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      65: astore        6
      67: aload         6
      69: aload         5
      71: iconst_0
      72: anewarray     #21                 // class java/lang/Object
      75: invokevirtual #22                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #23                 // class javax/resource/spi/work/WorkManager
      81: areturn
      82: astore_1
      83: new           #25                 // class java/lang/IllegalStateException
      86: dup
      87: ldc           #26                 // String Could not initialize JBossWorkManagerTaskExecutor because JBoss API is not available
      89: aload_1
      90: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      93: athrow
    Exception table:
       from    to  target type
           6    81    82   Class java/lang/Exception
}
