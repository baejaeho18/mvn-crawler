Compiled from "SpringSessionSynchronization.java"
class org.springframework.orm.hibernate3.SpringSessionSynchronization implements org.springframework.transaction.support.TransactionSynchronization,org.springframework.core.Ordered {
  private final org.springframework.orm.hibernate3.SessionHolder sessionHolder;

  private final org.hibernate.SessionFactory sessionFactory;

  private final org.springframework.jdbc.support.SQLExceptionTranslator jdbcExceptionTranslator;

  private final boolean newSession;

  private boolean hibernateTransactionCompletion;

  private javax.transaction.Transaction jtaTransaction;

  private boolean holderActive;

  public org.springframework.orm.hibernate3.SpringSessionSynchronization(org.springframework.orm.hibernate3.SessionHolder, org.hibernate.SessionFactory, org.springframework.jdbc.support.SQLExceptionTranslator, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field hibernateTransactionCompletion:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field holderActive:Z
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      29: aload_0
      30: iload         4
      32: putfield      #7                  // Field newSession:Z
      35: aload_2
      36: aload_1
      37: invokevirtual #8                  // Method org/springframework/orm/hibernate3/SessionHolder.getAnySession:()Lorg/hibernate/Session;
      40: invokestatic  #9                  // Method org/springframework/orm/hibernate3/SessionFactoryUtils.getJtaTransactionManager:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Session;)Ljavax/transaction/TransactionManager;
      43: astore        5
      45: aload         5
      47: ifnull        83
      50: aload_0
      51: iconst_1
      52: putfield      #2                  // Field hibernateTransactionCompletion:Z
      55: aload_0
      56: aload         5
      58: invokeinterface #10,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      63: putfield      #11                 // Field jtaTransaction:Ljavax/transaction/Transaction;
      66: goto          83
      69: astore        6
      71: new           #13                 // class org/springframework/dao/DataAccessResourceFailureException
      74: dup
      75: ldc           #14                 // String Could not access JTA transaction
      77: aload         6
      79: invokespecial #15                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: athrow
      83: return
    Exception table:
       from    to  target type
          55    66    69   Class javax/transaction/SystemException

  private org.hibernate.Session getCurrentSession();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #11                 // Field jtaTransaction:Ljavax/transaction/Transaction;
       6: ifnull        21
       9: aload_0
      10: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      13: aload_0
      14: getfield      #11                 // Field jtaTransaction:Ljavax/transaction/Transaction;
      17: invokevirtual #16                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:(Ljava/lang/Object;)Lorg/hibernate/Session;
      20: astore_1
      21: aload_1
      22: ifnonnull     33
      25: aload_0
      26: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      29: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      32: astore_1
      33: aload_1
      34: areturn

  public int getOrder();
    Code:
       0: sipush        900
       3: ireturn

  public void suspend();
    Code:
       0: aload_0
       1: getfield      #3                  // Field holderActive:Z
       4: ifeq          25
       7: aload_0
       8: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      11: invokestatic  #19                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: invokespecial #20                 // Method getCurrentSession:()Lorg/hibernate/Session;
      19: invokeinterface #21,  1           // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
      24: pop
      25: return

  public void resume();
    Code:
       0: aload_0
       1: getfield      #3                  // Field holderActive:Z
       4: ifeq          18
       7: aload_0
       8: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      11: aload_0
      12: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      15: invokestatic  #22                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      18: return

  public void flush();
    Code:
       0: getstatic     #23                 // Field org/springframework/orm/hibernate3/SessionFactoryUtils.logger:Lorg/apache/commons/logging/Log;
       3: ldc           #24                 // String Flushing Hibernate Session on explicit request
       5: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      10: aload_0
      11: invokespecial #20                 // Method getCurrentSession:()Lorg/hibernate/Session;
      14: invokeinterface #26,  1           // InterfaceMethod org/hibernate/Session.flush:()V
      19: goto          29
      22: astore_1
      23: aload_0
      24: aload_1
      25: invokespecial #28                 // Method translateException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      28: athrow
      29: return
    Exception table:
       from    to  target type
           0    19    22   Class org/hibernate/HibernateException

  public void beforeCommit(boolean) throws org.springframework.dao.DataAccessException;
    Code:
       0: iload_1
       1: ifne          50
       4: aload_0
       5: invokespecial #20                 // Method getCurrentSession:()Lorg/hibernate/Session;
       8: astore_2
       9: aload_2
      10: invokeinterface #29,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
      15: getstatic     #30                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
      18: invokevirtual #31                 // Method org/hibernate/FlushMode.lessThan:(Lorg/hibernate/FlushMode;)Z
      21: ifne          50
      24: getstatic     #23                 // Field org/springframework/orm/hibernate3/SessionFactoryUtils.logger:Lorg/apache/commons/logging/Log;
      27: ldc           #32                 // String Flushing Hibernate Session on transaction synchronization
      29: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      34: aload_2
      35: invokeinterface #26,  1           // InterfaceMethod org/hibernate/Session.flush:()V
      40: goto          50
      43: astore_3
      44: aload_0
      45: aload_3
      46: invokespecial #28                 // Method translateException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      49: athrow
      50: return
    Exception table:
       from    to  target type
          24    40    43   Class org/hibernate/HibernateException

  private org.springframework.dao.DataAccessException translateException(org.hibernate.HibernateException);
    Code:
       0: aload_0
       1: getfield      #6                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnull        59
       7: aload_1
       8: instanceof    #33                 // class org/hibernate/JDBCException
      11: ifeq          59
      14: aload_1
      15: checkcast     #33                 // class org/hibernate/JDBCException
      18: astore_2
      19: aload_0
      20: getfield      #6                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      23: new           #34                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #36                 // String Hibernate flushing:
      32: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #38                 // Method org/hibernate/JDBCException.getMessage:()Ljava/lang/String;
      39: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_2
      46: invokevirtual #40                 // Method org/hibernate/JDBCException.getSQL:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #41                 // Method org/hibernate/JDBCException.getSQLException:()Ljava/sql/SQLException;
      53: invokeinterface #42,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      58: areturn
      59: aload_1
      60: invokestatic  #43                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      63: areturn

  public void beforeCompletion();
    Code:
       0: aload_0
       1: getfield      #11                 // Field jtaTransaction:Ljavax/transaction/Transaction;
       4: ifnull        99
       7: aload_0
       8: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      11: aload_0
      12: getfield      #11                 // Field jtaTransaction:Ljavax/transaction/Transaction;
      15: invokevirtual #44                 // Method org/springframework/orm/hibernate3/SessionHolder.removeSession:(Ljava/lang/Object;)Lorg/hibernate/Session;
      18: astore_1
      19: aload_1
      20: ifnull        99
      23: aload_0
      24: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      27: invokevirtual #45                 // Method org/springframework/orm/hibernate3/SessionHolder.isEmpty:()Z
      30: ifeq          46
      33: aload_0
      34: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      37: invokestatic  #46                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResourceIfPossible:(Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: iconst_0
      43: putfield      #3                  // Field holderActive:Z
      46: aload_1
      47: aload_0
      48: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      51: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      54: if_acmpeq     68
      57: aload_1
      58: aload_0
      59: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      62: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
      65: goto          98
      68: aload_0
      69: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      72: invokevirtual #48                 // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
      75: ifnull        91
      78: aload_1
      79: aload_0
      80: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      83: invokevirtual #48                 // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
      86: invokeinterface #49,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
      91: aload_1
      92: invokeinterface #21,  1           // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
      97: pop
      98: return
      99: aload_0
     100: getfield      #7                  // Field newSession:Z
     103: ifeq          143
     106: aload_0
     107: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
     110: invokestatic  #19                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     113: pop
     114: aload_0
     115: iconst_0
     116: putfield      #3                  // Field holderActive:Z
     119: aload_0
     120: getfield      #2                  // Field hibernateTransactionCompletion:Z
     123: ifeq          188
     126: aload_0
     127: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     130: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     133: aload_0
     134: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
     137: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     140: goto          188
     143: aload_0
     144: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     147: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     150: astore_1
     151: aload_0
     152: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     155: invokevirtual #48                 // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     158: ifnull        174
     161: aload_1
     162: aload_0
     163: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     166: invokevirtual #48                 // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     169: invokeinterface #49,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     174: aload_0
     175: getfield      #2                  // Field hibernateTransactionCompletion:Z
     178: ifeq          188
     181: aload_1
     182: invokeinterface #21,  1           // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
     187: pop
     188: return

  public void afterCommit();
    Code:
       0: return

  public void afterCompletion(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field hibernateTransactionCompletion:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #7                  // Field newSession:Z
      11: ifne          118
      14: aload_0
      15: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
      18: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      21: astore_2
      22: aload_2
      23: instanceof    #50                 // class org/hibernate/engine/SessionImplementor
      26: ifeq          48
      29: aload_2
      30: checkcast     #50                 // class org/hibernate/engine/SessionImplementor
      33: iload_1
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: aconst_null
      43: invokeinterface #51,  3           // InterfaceMethod org/hibernate/engine/SessionImplementor.afterTransactionCompletion:(ZLorg/hibernate/Transaction;)V
      48: aload_0
      49: getfield      #7                  // Field newSession:Z
      52: ifeq          66
      55: aload_2
      56: aload_0
      57: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      60: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
      63: goto          118
      66: aload_0
      67: getfield      #2                  // Field hibernateTransactionCompletion:Z
      70: ifne          118
      73: aload_2
      74: invokeinterface #21,  1           // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
      79: pop
      80: goto          118
      83: astore_3
      84: aload_0
      85: getfield      #7                  // Field newSession:Z
      88: ifeq          102
      91: aload_2
      92: aload_0
      93: getfield      #5                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      96: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
      99: goto          116
     102: aload_0
     103: getfield      #2                  // Field hibernateTransactionCompletion:Z
     106: ifne          116
     109: aload_2
     110: invokeinterface #21,  1           // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
     115: pop
     116: aload_3
     117: athrow
     118: aload_0
     119: getfield      #7                  // Field newSession:Z
     122: ifne          141
     125: iload_1
     126: ifeq          141
     129: aload_0
     130: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     133: invokevirtual #17                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     136: invokeinterface #52,  1           // InterfaceMethod org/hibernate/Session.clear:()V
     141: aload_0
     142: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     145: invokevirtual #53                 // Method org/springframework/orm/hibernate3/SessionHolder.doesNotHoldNonDefaultSession:()Z
     148: ifeq          185
     151: aload_0
     152: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     155: iconst_0
     156: invokevirtual #54                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     159: goto          185
     162: astore        4
     164: aload_0
     165: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     168: invokevirtual #53                 // Method org/springframework/orm/hibernate3/SessionHolder.doesNotHoldNonDefaultSession:()Z
     171: ifeq          182
     174: aload_0
     175: getfield      #4                  // Field sessionHolder:Lorg/springframework/orm/hibernate3/SessionHolder;
     178: iconst_0
     179: invokevirtual #54                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     182: aload         4
     184: athrow
     185: return
    Exception table:
       from    to  target type
          22    48    83   any
           0   141   162   any
         162   164   162   any
}
