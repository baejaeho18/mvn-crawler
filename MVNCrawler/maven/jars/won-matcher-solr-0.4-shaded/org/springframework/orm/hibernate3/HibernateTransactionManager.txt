Compiled from "HibernateTransactionManager.java"
public class org.springframework.orm.hibernate3.HibernateTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.support.ResourceTransactionManager,org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private org.hibernate.SessionFactory sessionFactory;

  private javax.sql.DataSource dataSource;

  private boolean autodetectDataSource;

  private boolean prepareConnection;

  private boolean hibernateManagedSession;

  private boolean earlyFlushBeforeCommit;

  private java.lang.Object entityInterceptor;

  private org.springframework.jdbc.support.SQLExceptionTranslator jdbcExceptionTranslator;

  private org.springframework.jdbc.support.SQLExceptionTranslator defaultJdbcExceptionTranslator;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.orm.hibernate3.HibernateTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hibernateManagedSession:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field earlyFlushBeforeCommit:Z
      24: return

  public org.springframework.orm.hibernate3.HibernateTransactionManager(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field hibernateManagedSession:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field earlyFlushBeforeCommit:Z
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      29: aload_0
      30: invokevirtual #7                  // Method afterPropertiesSet:()V
      33: return

  public void setSessionFactory(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       5: return

  public org.hibernate.SessionFactory getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: areturn

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: checkcast     #8                  // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
      12: invokevirtual #9                  // Method org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy.getTargetDataSource:()Ljavax/sql/DataSource;
      15: putfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
      18: goto          26
      21: aload_0
      22: aload_1
      23: putfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
      26: return

  public javax.sql.DataSource getDataSource();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public void setAutodetectDataSource(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field autodetectDataSource:Z
       5: return

  public void setPrepareConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field prepareConnection:Z
       5: return

  public void setHibernateManagedSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field hibernateManagedSession:Z
       5: return

  public void setEarlyFlushBeforeCommit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field earlyFlushBeforeCommit:Z
       5: return

  public void setEntityInterceptorBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public void setEntityInterceptor(org.hibernate.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public org.hibernate.Interceptor getEntityInterceptor() throws java.lang.IllegalStateException, org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       4: instanceof    #12                 // class org/hibernate/Interceptor
       7: ifeq          18
      10: aload_0
      11: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      14: checkcast     #12                 // class org/hibernate/Interceptor
      17: areturn
      18: aload_0
      19: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      22: instanceof    #13                 // class java/lang/String
      25: ifeq          69
      28: aload_0
      29: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      32: ifnonnull     45
      35: new           #15                 // class java/lang/IllegalStateException
      38: dup
      39: ldc           #16                 // String Cannot get entity interceptor via bean name if no bean factory set
      41: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      49: checkcast     #13                 // class java/lang/String
      52: astore_1
      53: aload_0
      54: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      57: aload_1
      58: ldc           #12                 // class org/hibernate/Interceptor
      60: invokeinterface #18,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      65: checkcast     #12                 // class org/hibernate/Interceptor
      68: areturn
      69: aconst_null
      70: areturn

  public void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator();
    Code:
       0: aload_0
       1: getfield      #19                 // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: ifnonnull     17
       7: new           #21                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #22                 // String Property \'sessionFactory\' is required
      13: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      21: instanceof    #13                 // class java/lang/String
      24: ifeq          44
      27: aload_0
      28: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      31: ifnonnull     44
      34: new           #21                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #24                 // String Property \'beanFactory\' is required for \'entityInterceptorBeanName\'
      40: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #2                  // Field autodetectDataSource:Z
      48: ifeq          120
      51: aload_0
      52: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      55: ifnonnull     120
      58: aload_0
      59: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      62: invokestatic  #26                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.getDataSource:(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
      65: astore_1
      66: aload_1
      67: ifnull        120
      70: aload_0
      71: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #28,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      79: ifeq          115
      82: aload_0
      83: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #29                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #31                 // String Using DataSource [
      95: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #34                 // String ] of Hibernate SessionFactory for HibernateTransactionManager
     104: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     115: aload_0
     116: aload_1
     117: invokevirtual #37                 // Method setDataSource:(Ljavax/sql/DataSource;)V
     120: return

  public java.lang.Object getResourceFactory();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: areturn

  protected java.lang.Object doGetTransaction();
    Code:
       0: new           #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #39                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject."<init>":(Lorg/springframework/orm/hibernate3/HibernateTransactionManager;Lorg/springframework/orm/hibernate3/HibernateTransactionManager$1;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #40                 // Method isNestedTransactionAllowed:()Z
      15: invokevirtual #41                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSavepointAllowed:(Z)V
      18: aload_0
      19: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      22: invokestatic  #42                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #43                 // class org/springframework/orm/hibernate3/SessionHolder
      28: astore_2
      29: aload_2
      30: ifnull        92
      33: aload_0
      34: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      37: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      42: ifeq          84
      45: aload_0
      46: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      49: new           #29                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #45                 // String Found thread-bound Session [
      58: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      65: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
      68: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #48                 // String ] for Hibernate transaction
      73: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      84: aload_1
      85: aload_2
      86: invokevirtual #50                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate3/SessionHolder;)V
      89: goto          177
      92: aload_0
      93: getfield      #4                  // Field hibernateManagedSession:Z
      96: ifeq          177
      99: aload_0
     100: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     103: invokeinterface #51,  1           // InterfaceMethod org/hibernate/SessionFactory.getCurrentSession:()Lorg/hibernate/classic/Session;
     108: astore_3
     109: aload_0
     110: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     113: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     118: ifeq          157
     121: aload_0
     122: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     125: new           #29                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #52                 // String Found Hibernate-managed Session [
     134: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_3
     138: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     141: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #53                 // String ] for Spring-managed transaction
     146: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     157: aload_1
     158: aload_3
     159: invokevirtual #54                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setExistingSession:(Lorg/hibernate/Session;)V
     162: goto          177
     165: astore_3
     166: new           #56                 // class org/springframework/dao/DataAccessResourceFailureException
     169: dup
     170: ldc           #57                 // String Could not obtain Hibernate-managed Session for Spring-managed transaction
     172: aload_3
     173: invokespecial #58                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     176: athrow
     177: aload_0
     178: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
     181: ifnull        200
     184: aload_0
     185: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
     188: invokestatic  #42                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
     191: checkcast     #59                 // class org/springframework/jdbc/datasource/ConnectionHolder
     194: astore_3
     195: aload_1
     196: aload_3
     197: invokevirtual #60                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     200: aload_1
     201: areturn
    Exception table:
       from    to  target type
          99   162   165   Class org/hibernate/HibernateException

  protected boolean isExistingTransaction(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #61                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.hasSpringManagedTransaction:()Z
       9: ifne          26
      12: aload_0
      13: getfield      #4                  // Field hibernateManagedSession:Z
      16: ifeq          30
      19: aload_2
      20: invokevirtual #62                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.hasHibernateManagedTransaction:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected void doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_1
       1: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       4: astore_3
       5: aload_3
       6: invokevirtual #63                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.hasConnectionHolder:()Z
       9: ifeq          32
      12: aload_3
      13: invokevirtual #64                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      16: invokevirtual #65                 // Method org/springframework/jdbc/datasource/ConnectionHolder.isSynchronizedWithTransaction:()Z
      19: ifne          32
      22: new           #66                 // class org/springframework/transaction/IllegalTransactionStateException
      25: dup
      26: ldc           #67                 // String Pre-bound JDBC Connection found! HibernateTransactionManager does not support running within DataSourceTransactionManager if told to manage the DataSource itself. It is recommended to use a single HibernateTransactionManager for all transactions on a single DataSource, no matter whether Hibernate or JDBC access.
      28: invokespecial #68                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aconst_null
      33: astore        4
      35: aload_3
      36: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      39: ifnull        52
      42: aload_3
      43: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      46: invokevirtual #70                 // Method org/springframework/orm/hibernate3/SessionHolder.isSynchronizedWithTransaction:()Z
      49: ifeq          143
      52: aload_0
      53: invokevirtual #71                 // Method getEntityInterceptor:()Lorg/hibernate/Interceptor;
      56: astore        5
      58: aload         5
      60: ifnull        77
      63: aload_0
      64: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      67: aload         5
      69: invokeinterface #72,  2           // InterfaceMethod org/hibernate/SessionFactory.openSession:(Lorg/hibernate/Interceptor;)Lorg/hibernate/classic/Session;
      74: goto          86
      77: aload_0
      78: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      81: invokeinterface #73,  1           // InterfaceMethod org/hibernate/SessionFactory.openSession:()Lorg/hibernate/classic/Session;
      86: astore        6
      88: aload_0
      89: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      92: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      97: ifeq          137
     100: aload_0
     101: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     104: new           #29                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #74                 // String Opened new Session [
     113: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload         6
     118: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     121: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #48                 // String ] for Hibernate transaction
     126: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     137: aload_3
     138: aload         6
     140: invokevirtual #75                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSession:(Lorg/hibernate/Session;)V
     143: aload_3
     144: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     147: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     150: astore        4
     152: aload_0
     153: getfield      #3                  // Field prepareConnection:Z
     156: ifeq          243
     159: aload_0
     160: aload         4
     162: invokevirtual #76                 // Method isSameConnectionForEntireSession:(Lorg/hibernate/Session;)Z
     165: ifeq          243
     168: aload_0
     169: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     172: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     177: ifeq          217
     180: aload_0
     181: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     184: new           #29                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #77                 // String Preparing JDBC Connection of Hibernate Session [
     193: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload         4
     198: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     201: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     204: ldc           #78                 // String ]
     206: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     217: aload         4
     219: invokeinterface #79,  1           // InterfaceMethod org/hibernate/Session.connection:()Ljava/sql/Connection;
     224: astore        5
     226: aload         5
     228: aload_2
     229: invokestatic  #80                 // Method org/springframework/jdbc/datasource/DataSourceUtils.prepareConnectionForTransaction:(Ljava/sql/Connection;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Integer;
     232: astore        6
     234: aload_3
     235: aload         6
     237: invokevirtual #81                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setPreviousIsolationLevel:(Ljava/lang/Integer;)V
     240: goto          312
     243: aload_2
     244: invokeinterface #82,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     249: iconst_m1
     250: if_icmpeq     263
     253: new           #84                 // class org/springframework/transaction/InvalidIsolationLevelException
     256: dup
     257: ldc           #85                 // String HibernateTransactionManager is not allowed to support custom isolation levels: make sure that its \'prepareConnection\' flag is on (the default) and that the Hibernate connection release mode is set to \'on_close\' (SpringTransactionFactory\'s default). Make sure that your LocalSessionFactoryBean actually uses SpringTransactionFactory: Your Hibernate properties should *not* include a \'hibernate.transaction.factory_class\' property!
     259: invokespecial #86                 // Method org/springframework/transaction/InvalidIsolationLevelException."<init>":(Ljava/lang/String;)V
     262: athrow
     263: aload_0
     264: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     267: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     272: ifeq          312
     275: aload_0
     276: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     279: new           #29                 // class java/lang/StringBuilder
     282: dup
     283: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     286: ldc           #87                 // String Not preparing JDBC Connection of Hibernate Session [
     288: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     291: aload         4
     293: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     296: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: ldc           #78                 // String ]
     301: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     304: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     307: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     312: aload_2
     313: invokeinterface #88,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     318: ifeq          338
     321: aload_3
     322: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     325: ifeq          338
     328: aload         4
     330: getstatic     #90                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     333: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     338: aload_2
     339: invokeinterface #88,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     344: ifne          393
     347: aload_3
     348: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     351: ifne          393
     354: aload         4
     356: invokeinterface #92,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
     361: astore        5
     363: aload         5
     365: getstatic     #93                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
     368: invokevirtual #94                 // Method org/hibernate/FlushMode.lessThan:(Lorg/hibernate/FlushMode;)Z
     371: ifeq          393
     374: aload         4
     376: getstatic     #95                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
     379: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     384: aload_3
     385: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     388: aload         5
     390: invokevirtual #96                 // Method org/springframework/orm/hibernate3/SessionHolder.setPreviousFlushMode:(Lorg/hibernate/FlushMode;)V
     393: aload_0
     394: aload_2
     395: invokevirtual #97                 // Method determineTimeout:(Lorg/springframework/transaction/TransactionDefinition;)I
     398: istore        6
     400: iload         6
     402: iconst_m1
     403: if_icmpeq     434
     406: aload         4
     408: invokeinterface #98,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     413: astore        5
     415: aload         5
     417: iload         6
     419: invokeinterface #99,  2           // InterfaceMethod org/hibernate/Transaction.setTimeout:(I)V
     424: aload         5
     426: invokeinterface #100,  1          // InterfaceMethod org/hibernate/Transaction.begin:()V
     431: goto          443
     434: aload         4
     436: invokeinterface #101,  1          // InterfaceMethod org/hibernate/Session.beginTransaction:()Lorg/hibernate/Transaction;
     441: astore        5
     443: aload_3
     444: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     447: aload         5
     449: invokevirtual #102                // Method org/springframework/orm/hibernate3/SessionHolder.setTransaction:(Lorg/hibernate/Transaction;)V
     452: aload_0
     453: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
     456: ifnull        553
     459: aload         4
     461: invokeinterface #79,  1           // InterfaceMethod org/hibernate/Session.connection:()Ljava/sql/Connection;
     466: astore        7
     468: new           #59                 // class org/springframework/jdbc/datasource/ConnectionHolder
     471: dup
     472: aload         7
     474: invokespecial #103                // Method org/springframework/jdbc/datasource/ConnectionHolder."<init>":(Ljava/sql/Connection;)V
     477: astore        8
     479: iload         6
     481: iconst_m1
     482: if_icmpeq     492
     485: aload         8
     487: iload         6
     489: invokevirtual #104                // Method org/springframework/jdbc/datasource/ConnectionHolder.setTimeoutInSeconds:(I)V
     492: aload_0
     493: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     496: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     501: ifeq          538
     504: aload_0
     505: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     508: new           #29                 // class java/lang/StringBuilder
     511: dup
     512: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     515: ldc           #105                // String Exposing Hibernate transaction as JDBC transaction [
     517: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     520: aload         7
     522: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     525: ldc           #78                 // String ]
     527: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     530: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     533: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     538: aload_0
     539: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
     542: aload         8
     544: invokestatic  #106                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     547: aload_3
     548: aload         8
     550: invokevirtual #60                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     553: aload_3
     554: invokevirtual #107                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
     557: ifeq          571
     560: aload_0
     561: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     564: aload_3
     565: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     568: invokestatic  #106                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     571: aload_3
     572: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     575: iconst_1
     576: invokevirtual #108                // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     579: goto          686
     582: astore        5
     584: aload_3
     585: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     588: ifeq          674
     591: aload         4
     593: invokeinterface #98,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     598: invokeinterface #110,  1          // InterfaceMethod org/hibernate/Transaction.isActive:()Z
     603: ifeq          618
     606: aload         4
     608: invokeinterface #98,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     613: invokeinterface #111,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
     618: aload         4
     620: invokestatic  #112                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     623: aload_3
     624: aconst_null
     625: invokevirtual #50                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate3/SessionHolder;)V
     628: goto          674
     631: astore        6
     633: aload_0
     634: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     637: ldc           #113                // String Could not rollback Session after failed transaction begin
     639: aload         5
     641: invokeinterface #114,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     646: aload         4
     648: invokestatic  #112                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     651: aload_3
     652: aconst_null
     653: invokevirtual #50                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate3/SessionHolder;)V
     656: goto          674
     659: astore        9
     661: aload         4
     663: invokestatic  #112                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     666: aload_3
     667: aconst_null
     668: invokevirtual #50                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate3/SessionHolder;)V
     671: aload         9
     673: athrow
     674: new           #115                // class org/springframework/transaction/CannotCreateTransactionException
     677: dup
     678: ldc           #116                // String Could not open Hibernate Session for transaction
     680: aload         5
     682: invokespecial #117                // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     685: athrow
     686: return
    Exception table:
       from    to  target type
          35   579   582   Class java/lang/Throwable
         591   618   631   Class java/lang/Throwable
         591   618   659   any
         631   646   659   any
         659   661   659   any

  protected java.lang.Object doSuspend(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: aconst_null
       7: invokevirtual #50                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate3/SessionHolder;)V
      10: aload_0
      11: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      14: invokestatic  #118                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #43                 // class org/springframework/orm/hibernate3/SessionHolder
      20: astore_3
      21: aload_2
      22: aconst_null
      23: invokevirtual #60                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
      26: aconst_null
      27: astore        4
      29: aload_0
      30: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      33: ifnull        48
      36: aload_0
      37: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      40: invokestatic  #118                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #59                 // class org/springframework/jdbc/datasource/ConnectionHolder
      46: astore        4
      48: new           #119                // class org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder
      51: dup
      52: aload_3
      53: aload         4
      55: aconst_null
      56: invokespecial #120                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder."<init>":(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/springframework/jdbc/datasource/ConnectionHolder;Lorg/springframework/orm/hibernate3/HibernateTransactionManager$1;)V
      59: areturn

  protected void doResume(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #119                // class org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder
       4: astore_3
       5: aload_0
       6: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       9: invokestatic  #121                // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
      12: ifeq          23
      15: aload_0
      16: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      19: invokestatic  #118                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      27: aload_3
      28: invokestatic  #122                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder.access$200:(Lorg/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/orm/hibernate3/SessionHolder;
      31: invokestatic  #106                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      38: ifnull        52
      41: aload_0
      42: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      45: aload_3
      46: invokestatic  #123                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder.access$300:(Lorg/springframework/orm/hibernate3/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/jdbc/datasource/ConnectionHolder;
      49: invokestatic  #106                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      52: return

  protected void prepareForCommit(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_0
       1: getfield      #5                  // Field earlyFlushBeforeCommit:Z
       4: ifeq          97
       7: aload_1
       8: invokevirtual #124                // Method org/springframework/transaction/support/DefaultTransactionStatus.isNewTransaction:()Z
      11: ifeq          97
      14: aload_1
      15: invokevirtual #125                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
      18: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
      21: astore_2
      22: aload_2
      23: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      26: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      29: astore_3
      30: aload_3
      31: invokeinterface #92,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
      36: getstatic     #93                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
      39: invokevirtual #94                 // Method org/hibernate/FlushMode.lessThan:(Lorg/hibernate/FlushMode;)Z
      42: ifne          97
      45: aload_0
      46: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      49: ldc           #126                // String Performing an early flush for Hibernate transaction
      51: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: aload_3
      57: invokeinterface #127,  1          // InterfaceMethod org/hibernate/Session.flush:()V
      62: aload_3
      63: getstatic     #90                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      66: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
      71: goto          97
      74: astore        4
      76: aload_0
      77: aload         4
      79: invokevirtual #128                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      82: athrow
      83: astore        5
      85: aload_3
      86: getstatic     #90                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      89: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
      94: aload         5
      96: athrow
      97: return
    Exception table:
       from    to  target type
          56    62    74   Class org/hibernate/HibernateException
          56    62    83   any
          74    85    83   any

  protected void doCommit(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #125                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          57
      15: aload_0
      16: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #29                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #130                // String Committing Hibernate transaction on Session [
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      35: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #78                 // String ]
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_2
      58: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      61: invokevirtual #131                // Method org/springframework/orm/hibernate3/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      64: invokeinterface #132,  1          // InterfaceMethod org/hibernate/Transaction.commit:()V
      69: goto          91
      72: astore_3
      73: new           #134                // class org/springframework/transaction/TransactionSystemException
      76: dup
      77: ldc           #135                // String Could not commit Hibernate transaction
      79: aload_3
      80: invokespecial #136                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      83: athrow
      84: astore_3
      85: aload_0
      86: aload_3
      87: invokevirtual #128                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      90: athrow
      91: return
    Exception table:
       from    to  target type
          57    69    72   Class org/hibernate/TransactionException
          57    69    84   Class org/hibernate/HibernateException

  protected void doRollback(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #125                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          57
      15: aload_0
      16: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #29                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #137                // String Rolling back Hibernate transaction on Session [
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      35: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #78                 // String ]
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_2
      58: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      61: invokevirtual #131                // Method org/springframework/orm/hibernate3/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      64: invokeinterface #111,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
      69: aload_2
      70: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
      73: ifne          148
      76: aload_0
      77: getfield      #4                  // Field hibernateManagedSession:Z
      80: ifne          148
      83: aload_2
      84: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      87: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      90: invokeinterface #138,  1          // InterfaceMethod org/hibernate/Session.clear:()V
      95: goto          148
      98: astore_3
      99: new           #134                // class org/springframework/transaction/TransactionSystemException
     102: dup
     103: ldc           #139                // String Could not roll back Hibernate transaction
     105: aload_3
     106: invokespecial #136                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     109: athrow
     110: astore_3
     111: aload_0
     112: aload_3
     113: invokevirtual #128                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     116: athrow
     117: astore        4
     119: aload_2
     120: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     123: ifne          145
     126: aload_0
     127: getfield      #4                  // Field hibernateManagedSession:Z
     130: ifne          145
     133: aload_2
     134: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     137: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     140: invokeinterface #138,  1          // InterfaceMethod org/hibernate/Session.clear:()V
     145: aload         4
     147: athrow
     148: return
    Exception table:
       from    to  target type
          57    69    98   Class org/hibernate/TransactionException
          57    69   110   Class org/hibernate/HibernateException
          57    69   117   any
          98   119   117   any

  protected void doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #125                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          57
      15: aload_0
      16: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #29                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #140                // String Setting Hibernate transaction on Session [
      28: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      35: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
      41: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #141                // String ] rollback-only
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_2
      58: invokevirtual #142                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.setRollbackOnly:()V
      61: return

  protected void doCleanupAfterCompletion(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #38                 // class org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #107                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
       9: ifeq          20
      12: aload_0
      13: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      16: invokestatic  #118                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      24: ifnull        35
      27: aload_0
      28: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      31: invokestatic  #118                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
      39: invokevirtual #46                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
      42: astore_3
      43: aload_0
      44: getfield      #3                  // Field prepareConnection:Z
      47: ifeq          102
      50: aload_3
      51: invokeinterface #143,  1          // InterfaceMethod org/hibernate/Session.isConnected:()Z
      56: ifeq          102
      59: aload_0
      60: aload_3
      61: invokevirtual #76                 // Method isSameConnectionForEntireSession:(Lorg/hibernate/Session;)Z
      64: ifeq          102
      67: aload_3
      68: invokeinterface #79,  1           // InterfaceMethod org/hibernate/Session.connection:()Ljava/sql/Connection;
      73: astore        4
      75: aload         4
      77: aload_2
      78: invokevirtual #144                // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getPreviousIsolationLevel:()Ljava/lang/Integer;
      81: invokestatic  #145                // Method org/springframework/jdbc/datasource/DataSourceUtils.resetConnectionAfterTransaction:(Ljava/sql/Connection;Ljava/lang/Integer;)V
      84: goto          102
      87: astore        4
      89: aload_0
      90: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
      93: ldc           #146                // String Could not access JDBC Connection of Hibernate Session
      95: aload         4
      97: invokeinterface #114,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     102: aload_2
     103: invokevirtual #89                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     106: ifeq          168
     109: aload_0
     110: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     113: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     118: ifeq          157
     121: aload_0
     122: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     125: new           #29                 // class java/lang/StringBuilder
     128: dup
     129: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     132: ldc           #147                // String Closing Hibernate Session [
     134: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload_3
     138: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     141: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     144: ldc           #148                // String ] after transaction
     146: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     157: aload_3
     158: aload_0
     159: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     162: invokestatic  #149                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     165: goto          253
     168: aload_0
     169: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     172: invokeinterface #44,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     177: ifeq          216
     180: aload_0
     181: getfield      #27                 // Field logger:Lorg/apache/commons/logging/Log;
     184: new           #29                 // class java/lang/StringBuilder
     187: dup
     188: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     191: ldc           #150                // String Not closing pre-bound Hibernate Session [
     193: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: aload_3
     197: invokestatic  #47                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.toString:(Lorg/hibernate/Session;)Ljava/lang/String;
     200: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: ldc           #148                // String ] after transaction
     205: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     211: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     216: aload_2
     217: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     220: invokevirtual #151                // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     223: ifnull        239
     226: aload_3
     227: aload_2
     228: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     231: invokevirtual #151                // Method org/springframework/orm/hibernate3/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     234: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     239: aload_0
     240: getfield      #4                  // Field hibernateManagedSession:Z
     243: ifne          253
     246: aload_3
     247: invokeinterface #152,  1          // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
     252: pop
     253: aload_2
     254: invokevirtual #69                 // Method org/springframework/orm/hibernate3/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate3/SessionHolder;
     257: invokevirtual #153                // Method org/springframework/orm/hibernate3/SessionHolder.clear:()V
     260: return
    Exception table:
       from    to  target type
          67    84    87   Class org/hibernate/HibernateException

  protected boolean isSameConnectionForEntireSession(org.hibernate.Session);
    Code:
       0: aload_1
       1: instanceof    #154                // class org/hibernate/impl/SessionImpl
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: checkcast     #154                // class org/hibernate/impl/SessionImpl
      13: invokevirtual #155                // Method org/hibernate/impl/SessionImpl.getConnectionReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      16: astore_2
      17: getstatic     #156                // Field org/hibernate/ConnectionReleaseMode.ON_CLOSE:Lorg/hibernate/ConnectionReleaseMode;
      20: aload_2
      21: invokevirtual #157                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      24: ireturn

  protected org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_0
       1: invokevirtual #158                // Method getJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnull        27
       7: aload_1
       8: instanceof    #159                // class org/hibernate/JDBCException
      11: ifeq          27
      14: aload_0
      15: aload_1
      16: checkcast     #159                // class org/hibernate/JDBCException
      19: aload_0
      20: invokevirtual #158                // Method getJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      23: invokevirtual #160                // Method convertJdbcAccessException:(Lorg/hibernate/JDBCException;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lorg/springframework/dao/DataAccessException;
      26: areturn
      27: ldc           #161                // class org/hibernate/exception/GenericJDBCException
      29: aload_1
      30: invokevirtual #162                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: if_acmpne     49
      36: aload_0
      37: aload_1
      38: checkcast     #161                // class org/hibernate/exception/GenericJDBCException
      41: aload_0
      42: invokevirtual #163                // Method getDefaultJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      45: invokevirtual #160                // Method convertJdbcAccessException:(Lorg/hibernate/JDBCException;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lorg/springframework/dao/DataAccessException;
      48: areturn
      49: aload_1
      50: invokestatic  #164                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      53: areturn

  protected org.springframework.dao.DataAccessException convertJdbcAccessException(org.hibernate.JDBCException, org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_2
       1: new           #29                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       8: ldc           #165                // String Hibernate flushing:
      10: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      13: aload_1
      14: invokevirtual #166                // Method org/hibernate/JDBCException.getMessage:()Ljava/lang/String;
      17: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #167                // Method org/hibernate/JDBCException.getSQL:()Ljava/lang/String;
      27: aload_1
      28: invokevirtual #168                // Method org/hibernate/JDBCException.getSQLException:()Ljava/sql/SQLException;
      31: invokeinterface #169,  4          // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      36: areturn

  protected synchronized org.springframework.jdbc.support.SQLExceptionTranslator getDefaultJdbcExceptionTranslator();
    Code:
       0: aload_0
       1: getfield      #170                // Field defaultJdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnonnull     43
       7: aload_0
       8: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      11: ifnull        32
      14: aload_0
      15: new           #171                // class org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator
      18: dup
      19: aload_0
      20: invokevirtual #25                 // Method getDataSource:()Ljavax/sql/DataSource;
      23: invokespecial #172                // Method org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator."<init>":(Ljavax/sql/DataSource;)V
      26: putfield      #170                // Field defaultJdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      29: goto          43
      32: aload_0
      33: aload_0
      34: invokevirtual #20                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      37: invokestatic  #173                // Method org/springframework/orm/hibernate3/SessionFactoryUtils.newJdbcExceptionTranslator:(Lorg/hibernate/SessionFactory;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      40: putfield      #170                // Field defaultJdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      43: aload_0
      44: getfield      #170                // Field defaultJdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      47: areturn
}
