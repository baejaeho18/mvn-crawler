Compiled from "HibernateInterceptor.java"
public class org.springframework.orm.hibernate3.HibernateInterceptor extends org.springframework.orm.hibernate3.HibernateAccessor implements org.aopalliance.intercept.MethodInterceptor {
  private boolean exceptionConversionEnabled;

  public org.springframework.orm.hibernate3.HibernateInterceptor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/orm/hibernate3/HibernateAccessor."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field exceptionConversionEnabled:Z
       9: return

  public void setExceptionConversionEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field exceptionConversionEnabled:Z
       5: return

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getSession:()Lorg/hibernate/Session;
       4: astore_2
       5: aload_0
       6: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       9: invokestatic  #5                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #6                  // class org/springframework/orm/hibernate3/SessionHolder
      15: astore_3
      16: aload_3
      17: ifnull        32
      20: aload_3
      21: aload_2
      22: invokevirtual #7                  // Method org/springframework/orm/hibernate3/SessionHolder.containsSession:(Lorg/hibernate/Session;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: istore        4
      35: iload         4
      37: ifeq          54
      40: aload_0
      41: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      44: ldc           #9                  // String Found thread-bound Session for HibernateInterceptor
      46: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: goto          81
      54: aload_3
      55: ifnull        66
      58: aload_3
      59: aload_2
      60: invokevirtual #11                 // Method org/springframework/orm/hibernate3/SessionHolder.addSession:(Lorg/hibernate/Session;)V
      63: goto          81
      66: aload_0
      67: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      70: new           #6                  // class org/springframework/orm/hibernate3/SessionHolder
      73: dup
      74: aload_2
      75: invokespecial #12                 // Method org/springframework/orm/hibernate3/SessionHolder."<init>":(Lorg/hibernate/Session;)V
      78: invokestatic  #13                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      81: aconst_null
      82: astore        5
      84: aload_0
      85: aload_2
      86: iload         4
      88: invokevirtual #14                 // Method applyFlushMode:(Lorg/hibernate/Session;Z)Lorg/hibernate/FlushMode;
      91: astore        5
      93: aload_0
      94: aload_2
      95: invokevirtual #15                 // Method enableFilters:(Lorg/hibernate/Session;)V
      98: aload_1
      99: invokeinterface #16,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
     104: astore        6
     106: aload_0
     107: aload_2
     108: iload         4
     110: invokevirtual #17                 // Method flushIfNecessary:(Lorg/hibernate/Session;Z)V
     113: aload         6
     115: astore        7
     117: iload         4
     119: ifeq          154
     122: aload_0
     123: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
     126: ldc           #18                 // String Not closing pre-bound Hibernate Session after HibernateInterceptor
     128: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     133: aload_0
     134: aload_2
     135: invokevirtual #19                 // Method disableFilters:(Lorg/hibernate/Session;)V
     138: aload         5
     140: ifnull        181
     143: aload_2
     144: aload         5
     146: invokeinterface #20,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     151: goto          181
     154: aload_2
     155: aload_0
     156: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     159: invokestatic  #21                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     162: aload_3
     163: ifnull        173
     166: aload_3
     167: invokevirtual #22                 // Method org/springframework/orm/hibernate3/SessionHolder.doesNotHoldNonDefaultSession:()Z
     170: ifeq          181
     173: aload_0
     174: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     177: invokestatic  #23                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload         7
     183: areturn
     184: astore        6
     186: aload_0
     187: getfield      #2                  // Field exceptionConversionEnabled:Z
     190: ifeq          200
     193: aload_0
     194: aload         6
     196: invokevirtual #25                 // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     199: athrow
     200: aload         6
     202: athrow
     203: astore        8
     205: iload         4
     207: ifeq          242
     210: aload_0
     211: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
     214: ldc           #18                 // String Not closing pre-bound Hibernate Session after HibernateInterceptor
     216: invokeinterface #10,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     221: aload_0
     222: aload_2
     223: invokevirtual #19                 // Method disableFilters:(Lorg/hibernate/Session;)V
     226: aload         5
     228: ifnull        269
     231: aload_2
     232: aload         5
     234: invokeinterface #20,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     239: goto          269
     242: aload_2
     243: aload_0
     244: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     247: invokestatic  #21                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     250: aload_3
     251: ifnull        261
     254: aload_3
     255: invokevirtual #22                 // Method org/springframework/orm/hibernate3/SessionHolder.doesNotHoldNonDefaultSession:()Z
     258: ifeq          269
     261: aload_0
     262: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     265: invokestatic  #23                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     268: pop
     269: aload         8
     271: athrow
    Exception table:
       from    to  target type
          84   117   184   Class org/hibernate/HibernateException
          84   117   203   any
         184   205   203   any

  protected org.hibernate.Session getSession();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: aload_0
       5: invokevirtual #26                 // Method getEntityInterceptor:()Lorg/hibernate/Interceptor;
       8: aload_0
       9: invokevirtual #27                 // Method getJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      12: invokestatic  #28                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.getSession:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lorg/hibernate/Session;
      15: areturn
}
