Compiled from "SessionFactoryUtils.java"
public abstract class org.springframework.orm.hibernate3.SessionFactoryUtils {
  public static final int SESSION_SYNCHRONIZATION_ORDER;

  static final org.apache.commons.logging.Log logger;

  private static final java.lang.ThreadLocal<java.util.Map<org.hibernate.SessionFactory, java.util.Set<org.hibernate.Session>>> deferredCloseHolder;

  public org.springframework.orm.hibernate3.SessionFactoryUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public static javax.sql.DataSource getDataSource(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: instanceof    #3                  // class org/hibernate/engine/SessionFactoryImplementor
       4: ifeq          32
       7: aload_0
       8: checkcast     #3                  // class org/hibernate/engine/SessionFactoryImplementor
      11: invokeinterface #4,  1            // InterfaceMethod org/hibernate/engine/SessionFactoryImplementor.getConnectionProvider:()Lorg/hibernate/connection/ConnectionProvider;
      16: astore_1
      17: aload_1
      18: instanceof    #5                  // class org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider
      21: ifeq          32
      24: aload_1
      25: checkcast     #5                  // class org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider
      28: invokevirtual #6                  // Method org/springframework/orm/hibernate3/LocalDataSourceConnectionProvider.getDataSource:()Ljavax/sql/DataSource;
      31: areturn
      32: aconst_null
      33: areturn

  public static org.springframework.jdbc.support.SQLExceptionTranslator newJdbcExceptionTranslator(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method getDataSource:(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
       4: astore_1
       5: aload_1
       6: ifnull        18
       9: new           #8                  // class org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator
      12: dup
      13: aload_1
      14: invokespecial #9                  // Method org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator."<init>":(Ljavax/sql/DataSource;)V
      17: areturn
      18: new           #10                 // class org/springframework/jdbc/support/SQLStateSQLExceptionTranslator
      21: dup
      22: invokespecial #11                 // Method org/springframework/jdbc/support/SQLStateSQLExceptionTranslator."<init>":()V
      25: areturn

  public static javax.transaction.TransactionManager getJtaTransactionManager(org.hibernate.SessionFactory, org.hibernate.Session);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: instanceof    #3                  // class org/hibernate/engine/SessionFactoryImplementor
       6: ifeq          17
       9: aload_0
      10: checkcast     #3                  // class org/hibernate/engine/SessionFactoryImplementor
      13: astore_2
      14: goto          40
      17: aload_1
      18: ifnull        40
      21: aload_1
      22: invokeinterface #12,  1           // InterfaceMethod org/hibernate/Session.getSessionFactory:()Lorg/hibernate/SessionFactory;
      27: astore_3
      28: aload_3
      29: instanceof    #3                  // class org/hibernate/engine/SessionFactoryImplementor
      32: ifeq          40
      35: aload_3
      36: checkcast     #3                  // class org/hibernate/engine/SessionFactoryImplementor
      39: astore_2
      40: aload_2
      41: ifnull        53
      44: aload_2
      45: invokeinterface #13,  1           // InterfaceMethod org/hibernate/engine/SessionFactoryImplementor.getTransactionManager:()Ljavax/transaction/TransactionManager;
      50: goto          54
      53: aconst_null
      54: areturn

  public static org.hibernate.Session getSession(org.hibernate.SessionFactory, boolean) throws org.springframework.dao.DataAccessResourceFailureException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: iload_1
       4: invokestatic  #14                 // Method doGetSession:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)Lorg/hibernate/Session;
       7: areturn
       8: astore_2
       9: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
      12: dup
      13: ldc           #17                 // String Could not open Hibernate Session
      15: aload_2
      16: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class org/hibernate/HibernateException

  public static org.hibernate.Session getSession(org.hibernate.SessionFactory, org.hibernate.Interceptor, org.springframework.jdbc.support.SQLExceptionTranslator) throws org.springframework.dao.DataAccessResourceFailureException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokestatic  #14                 // Method doGetSession:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)Lorg/hibernate/Session;
       7: areturn
       8: astore_3
       9: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
      12: dup
      13: ldc           #17                 // String Could not open Hibernate Session
      15: aload_3
      16: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: athrow
    Exception table:
       from    to  target type
           0     7     8   Class org/hibernate/HibernateException

  public static org.hibernate.Session doGetSession(org.hibernate.SessionFactory, boolean) throws org.hibernate.HibernateException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: iload_1
       4: invokestatic  #14                 // Method doGetSession:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)Lorg/hibernate/Session;
       7: areturn

  private static org.hibernate.Session doGetSession(org.hibernate.SessionFactory, org.hibernate.Interceptor, org.springframework.jdbc.support.SQLExceptionTranslator, boolean) throws org.hibernate.HibernateException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc           #19                 // String No SessionFactory specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload         4
      14: instanceof    #22                 // class org/hibernate/Session
      17: ifeq          26
      20: aload         4
      22: checkcast     #22                 // class org/hibernate/Session
      25: areturn
      26: aload         4
      28: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      31: astore        5
      33: aload         5
      35: ifnull        177
      38: aload         5
      40: invokevirtual #24                 // Method org/springframework/orm/hibernate3/SessionHolder.isEmpty:()Z
      43: ifne          177
      46: aconst_null
      47: astore        6
      49: invokestatic  #25                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      52: ifeq          160
      55: aload         5
      57: invokevirtual #26                 // Method org/springframework/orm/hibernate3/SessionHolder.doesNotHoldNonDefaultSession:()Z
      60: ifeq          160
      63: aload         5
      65: invokevirtual #27                 // Method org/springframework/orm/hibernate3/SessionHolder.getValidatedSession:()Lorg/hibernate/Session;
      68: astore        6
      70: aload         6
      72: ifnull        169
      75: aload         5
      77: invokevirtual #28                 // Method org/springframework/orm/hibernate3/SessionHolder.isSynchronizedWithTransaction:()Z
      80: ifne          169
      83: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      86: ldc           #30                 // String Registering Spring transaction synchronization for existing Hibernate Session
      88: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      93: new           #32                 // class org/springframework/orm/hibernate3/SpringSessionSynchronization
      96: dup
      97: aload         5
      99: aload_0
     100: aload_2
     101: iconst_0
     102: invokespecial #33                 // Method org/springframework/orm/hibernate3/SpringSessionSynchronization."<init>":(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)V
     105: invokestatic  #34                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
     108: aload         5
     110: iconst_1
     111: invokevirtual #35                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     114: aload         6
     116: invokeinterface #36,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
     121: astore        7
     123: aload         7
     125: getstatic     #37                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
     128: invokevirtual #38                 // Method org/hibernate/FlushMode.lessThan:(Lorg/hibernate/FlushMode;)Z
     131: ifeq          157
     134: invokestatic  #39                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isCurrentTransactionReadOnly:()Z
     137: ifne          157
     140: aload         6
     142: getstatic     #40                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
     145: invokeinterface #41,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     150: aload         5
     152: aload         7
     154: invokevirtual #42                 // Method org/springframework/orm/hibernate3/SessionHolder.setPreviousFlushMode:(Lorg/hibernate/FlushMode;)V
     157: goto          169
     160: aload         5
     162: aload_0
     163: aload_2
     164: invokestatic  #43                 // Method getJtaSynchronizedSession:(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;)Lorg/hibernate/Session;
     167: astore        6
     169: aload         6
     171: ifnull        177
     174: aload         6
     176: areturn
     177: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
     180: ldc           #44                 // String Opening Hibernate Session
     182: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     187: aload_1
     188: ifnull        201
     191: aload_0
     192: aload_1
     193: invokeinterface #45,  2           // InterfaceMethod org/hibernate/SessionFactory.openSession:(Lorg/hibernate/Interceptor;)Lorg/hibernate/classic/Session;
     198: goto          207
     201: aload_0
     202: invokeinterface #46,  1           // InterfaceMethod org/hibernate/SessionFactory.openSession:()Lorg/hibernate/classic/Session;
     207: astore        6
     209: invokestatic  #25                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
     212: ifeq          308
     215: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
     218: ldc           #47                 // String Registering Spring transaction synchronization for new Hibernate Session
     220: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     225: aload         5
     227: astore        7
     229: aload         7
     231: ifnonnull     248
     234: new           #23                 // class org/springframework/orm/hibernate3/SessionHolder
     237: dup
     238: aload         6
     240: invokespecial #48                 // Method org/springframework/orm/hibernate3/SessionHolder."<init>":(Lorg/hibernate/Session;)V
     243: astore        7
     245: goto          255
     248: aload         7
     250: aload         6
     252: invokevirtual #49                 // Method org/springframework/orm/hibernate3/SessionHolder.addSession:(Lorg/hibernate/Session;)V
     255: invokestatic  #39                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isCurrentTransactionReadOnly:()Z
     258: ifeq          271
     261: aload         6
     263: getstatic     #50                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     266: invokeinterface #41,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     271: new           #32                 // class org/springframework/orm/hibernate3/SpringSessionSynchronization
     274: dup
     275: aload         7
     277: aload_0
     278: aload_2
     279: iconst_1
     280: invokespecial #33                 // Method org/springframework/orm/hibernate3/SpringSessionSynchronization."<init>":(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)V
     283: invokestatic  #34                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
     286: aload         7
     288: iconst_1
     289: invokevirtual #35                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     292: aload         7
     294: aload         5
     296: if_acmpeq     305
     299: aload_0
     300: aload         7
     302: invokestatic  #51                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     305: goto          317
     308: aload         6
     310: aload_0
     311: aload_2
     312: aload         5
     314: invokestatic  #52                 // Method registerJtaSynchronization:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Lorg/springframework/orm/hibernate3/SessionHolder;)V
     317: iload_3
     318: ifne          345
     321: aload         6
     323: aload_0
     324: invokestatic  #53                 // Method isSessionTransactional:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)Z
     327: ifne          345
     330: aload         6
     332: invokestatic  #54                 // Method closeSession:(Lorg/hibernate/Session;)V
     335: new           #55                 // class java/lang/IllegalStateException
     338: dup
     339: ldc           #56                 // String No Hibernate Session bound to thread, and configuration does not allow creation of non-transactional one here
     341: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     344: athrow
     345: aload         6
     347: areturn

  private static org.hibernate.Session getJtaSynchronizedSession(org.springframework.orm.hibernate3.SessionHolder, org.hibernate.SessionFactory, org.springframework.jdbc.support.SQLExceptionTranslator) throws org.springframework.dao.DataAccessResourceFailureException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #58                 // Method org/springframework/orm/hibernate3/SessionHolder.getAnySession:()Lorg/hibernate/Session;
       5: invokestatic  #59                 // Method getJtaTransactionManager:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Session;)Ljavax/transaction/TransactionManager;
       8: astore_3
       9: aload_3
      10: ifnull        184
      13: aload_3
      14: invokeinterface #60,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      19: astore        4
      21: aload         4
      23: ifnull        165
      26: aload         4
      28: invokeinterface #61,  1           // InterfaceMethod javax/transaction/Transaction.getStatus:()I
      33: istore        5
      35: iload         5
      37: ifeq          46
      40: iload         5
      42: iconst_1
      43: if_icmpne     165
      46: aload_0
      47: aload         4
      49: invokevirtual #63                 // Method org/springframework/orm/hibernate3/SessionHolder.getValidatedSession:(Ljava/lang/Object;)Lorg/hibernate/Session;
      52: astore        6
      54: aload         6
      56: ifnonnull     162
      59: aload_0
      60: invokevirtual #28                 // Method org/springframework/orm/hibernate3/SessionHolder.isSynchronizedWithTransaction:()Z
      63: ifne          162
      66: aload_0
      67: invokevirtual #27                 // Method org/springframework/orm/hibernate3/SessionHolder.getValidatedSession:()Lorg/hibernate/Session;
      70: astore        6
      72: aload         6
      74: ifnull        162
      77: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      80: ldc           #64                 // String Registering JTA transaction synchronization for existing Hibernate Session
      82: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      87: aload_0
      88: aload         4
      90: aload         6
      92: invokevirtual #65                 // Method org/springframework/orm/hibernate3/SessionHolder.addSession:(Ljava/lang/Object;Lorg/hibernate/Session;)V
      95: aload         4
      97: new           #66                 // class org/springframework/transaction/jta/SpringJtaSynchronizationAdapter
     100: dup
     101: new           #32                 // class org/springframework/orm/hibernate3/SpringSessionSynchronization
     104: dup
     105: aload_0
     106: aload_1
     107: aload_2
     108: iconst_0
     109: invokespecial #33                 // Method org/springframework/orm/hibernate3/SpringSessionSynchronization."<init>":(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)V
     112: aload_3
     113: invokespecial #67                 // Method org/springframework/transaction/jta/SpringJtaSynchronizationAdapter."<init>":(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/TransactionManager;)V
     116: invokeinterface #68,  2           // InterfaceMethod javax/transaction/Transaction.registerSynchronization:(Ljavax/transaction/Synchronization;)V
     121: aload_0
     122: iconst_1
     123: invokevirtual #35                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     126: aload         6
     128: invokeinterface #36,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
     133: astore        7
     135: aload         7
     137: getstatic     #37                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
     140: invokevirtual #38                 // Method org/hibernate/FlushMode.lessThan:(Lorg/hibernate/FlushMode;)Z
     143: ifeq          162
     146: aload         6
     148: getstatic     #40                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
     151: invokeinterface #41,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     156: aload_0
     157: aload         7
     159: invokevirtual #42                 // Method org/springframework/orm/hibernate3/SessionHolder.setPreviousFlushMode:(Lorg/hibernate/FlushMode;)V
     162: aload         6
     164: areturn
     165: aload_0
     166: invokevirtual #27                 // Method org/springframework/orm/hibernate3/SessionHolder.getValidatedSession:()Lorg/hibernate/Session;
     169: areturn
     170: astore        4
     172: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
     175: dup
     176: ldc           #70                 // String Could not check JTA transaction
     178: aload         4
     180: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     183: athrow
     184: aload_0
     185: invokevirtual #27                 // Method org/springframework/orm/hibernate3/SessionHolder.getValidatedSession:()Lorg/hibernate/Session;
     188: areturn
    Exception table:
       from    to  target type
          13   164   170   Class java/lang/Throwable
         165   169   170   Class java/lang/Throwable

  private static void registerJtaSynchronization(org.hibernate.Session, org.hibernate.SessionFactory, org.springframework.jdbc.support.SQLExceptionTranslator, org.springframework.orm.hibernate3.SessionHolder);
    Code:
       0: aload_1
       1: aload_0
       2: invokestatic  #59                 // Method getJtaTransactionManager:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Session;)Ljavax/transaction/TransactionManager;
       5: astore        4
       7: aload         4
       9: ifnull        150
      12: aload         4
      14: invokeinterface #60,  1           // InterfaceMethod javax/transaction/TransactionManager.getTransaction:()Ljavax/transaction/Transaction;
      19: astore        5
      21: aload         5
      23: ifnull        133
      26: aload         5
      28: invokeinterface #61,  1           // InterfaceMethod javax/transaction/Transaction.getStatus:()I
      33: istore        6
      35: iload         6
      37: ifeq          46
      40: iload         6
      42: iconst_1
      43: if_icmpne     133
      46: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      49: ldc           #71                 // String Registering JTA transaction synchronization for new Hibernate Session
      51: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: aload_3
      57: astore        7
      59: aload         7
      61: ifnonnull     79
      64: new           #23                 // class org/springframework/orm/hibernate3/SessionHolder
      67: dup
      68: aload         5
      70: aload_0
      71: invokespecial #72                 // Method org/springframework/orm/hibernate3/SessionHolder."<init>":(Ljava/lang/Object;Lorg/hibernate/Session;)V
      74: astore        7
      76: goto          87
      79: aload         7
      81: aload         5
      83: aload_0
      84: invokevirtual #65                 // Method org/springframework/orm/hibernate3/SessionHolder.addSession:(Ljava/lang/Object;Lorg/hibernate/Session;)V
      87: aload         5
      89: new           #66                 // class org/springframework/transaction/jta/SpringJtaSynchronizationAdapter
      92: dup
      93: new           #32                 // class org/springframework/orm/hibernate3/SpringSessionSynchronization
      96: dup
      97: aload         7
      99: aload_1
     100: aload_2
     101: iconst_1
     102: invokespecial #33                 // Method org/springframework/orm/hibernate3/SpringSessionSynchronization."<init>":(Lorg/springframework/orm/hibernate3/SessionHolder;Lorg/hibernate/SessionFactory;Lorg/springframework/jdbc/support/SQLExceptionTranslator;Z)V
     105: aload         4
     107: invokespecial #67                 // Method org/springframework/transaction/jta/SpringJtaSynchronizationAdapter."<init>":(Lorg/springframework/transaction/support/TransactionSynchronization;Ljavax/transaction/TransactionManager;)V
     110: invokeinterface #68,  2           // InterfaceMethod javax/transaction/Transaction.registerSynchronization:(Ljavax/transaction/Synchronization;)V
     115: aload         7
     117: iconst_1
     118: invokevirtual #35                 // Method org/springframework/orm/hibernate3/SessionHolder.setSynchronizedWithTransaction:(Z)V
     121: aload         7
     123: aload_3
     124: if_acmpeq     133
     127: aload_1
     128: aload         7
     130: invokestatic  #51                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     133: goto          150
     136: astore        5
     138: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
     141: dup
     142: ldc           #73                 // String Could not register synchronization with JTA TransactionManager
     144: aload         5
     146: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     149: athrow
     150: return
    Exception table:
       from    to  target type
          12   133   136   Class java/lang/Throwable

  public static org.hibernate.Session getNewSession(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: aconst_null
       2: invokestatic  #74                 // Method getNewSession:(Lorg/hibernate/SessionFactory;Lorg/hibernate/Interceptor;)Lorg/hibernate/Session;
       5: areturn

  public static org.hibernate.Session getNewSession(org.hibernate.SessionFactory, org.hibernate.Interceptor);
    Code:
       0: aload_0
       1: ldc           #19                 // String No SessionFactory specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      13: astore_2
      14: aload_2
      15: ifnull        62
      18: aload_2
      19: invokevirtual #24                 // Method org/springframework/orm/hibernate3/SessionHolder.isEmpty:()Z
      22: ifne          62
      25: aload_1
      26: ifnull        46
      29: aload_0
      30: aload_2
      31: invokevirtual #58                 // Method org/springframework/orm/hibernate3/SessionHolder.getAnySession:()Lorg/hibernate/Session;
      34: invokeinterface #75,  1           // InterfaceMethod org/hibernate/Session.connection:()Ljava/sql/Connection;
      39: aload_1
      40: invokeinterface #76,  3           // InterfaceMethod org/hibernate/SessionFactory.openSession:(Ljava/sql/Connection;Lorg/hibernate/Interceptor;)Lorg/hibernate/classic/Session;
      45: areturn
      46: aload_0
      47: aload_2
      48: invokevirtual #58                 // Method org/springframework/orm/hibernate3/SessionHolder.getAnySession:()Lorg/hibernate/Session;
      51: invokeinterface #75,  1           // InterfaceMethod org/hibernate/Session.connection:()Ljava/sql/Connection;
      56: invokeinterface #77,  2           // InterfaceMethod org/hibernate/SessionFactory.openSession:(Ljava/sql/Connection;)Lorg/hibernate/classic/Session;
      61: areturn
      62: aload_1
      63: ifnull        74
      66: aload_0
      67: aload_1
      68: invokeinterface #45,  2           // InterfaceMethod org/hibernate/SessionFactory.openSession:(Lorg/hibernate/Interceptor;)Lorg/hibernate/classic/Session;
      73: areturn
      74: aload_0
      75: invokeinterface #46,  1           // InterfaceMethod org/hibernate/SessionFactory.openSession:()Lorg/hibernate/classic/Session;
      80: areturn
      81: astore_2
      82: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
      85: dup
      86: ldc           #17                 // String Could not open Hibernate Session
      88: aload_2
      89: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
    Exception table:
       from    to  target type
           6    45    81   Class org/hibernate/HibernateException
          46    61    81   Class org/hibernate/HibernateException
          62    73    81   Class org/hibernate/HibernateException
          74    80    81   Class org/hibernate/HibernateException

  public static java.lang.String toString(org.hibernate.Session);
    Code:
       0: new           #78                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #80                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #81                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #83                 // String @
      19: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokestatic  #84                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
      26: invokestatic  #85                 // Method java/lang/Integer.toHexString:(I)Ljava/lang/String;
      29: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  public static boolean hasTransactionalSession(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      13: astore_1
      14: aload_1
      15: ifnull        29
      18: aload_1
      19: invokevirtual #24                 // Method org/springframework/orm/hibernate3/SessionHolder.isEmpty:()Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public static boolean isSessionTransactional(org.hibernate.Session, org.hibernate.SessionFactory);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      13: astore_2
      14: aload_2
      15: ifnull        30
      18: aload_2
      19: aload_0
      20: invokevirtual #87                 // Method org/springframework/orm/hibernate3/SessionHolder.containsSession:(Lorg/hibernate/Session;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static void applyTransactionTimeout(org.hibernate.Query, org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #88                 // String No Query object specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnull        40
      10: aload_1
      11: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      17: astore_2
      18: aload_2
      19: ifnull        40
      22: aload_2
      23: invokevirtual #89                 // Method org/springframework/orm/hibernate3/SessionHolder.hasTimeout:()Z
      26: ifeq          40
      29: aload_0
      30: aload_2
      31: invokevirtual #90                 // Method org/springframework/orm/hibernate3/SessionHolder.getTimeToLiveInSeconds:()I
      34: invokeinterface #91,  2           // InterfaceMethod org/hibernate/Query.setTimeout:(I)Lorg/hibernate/Query;
      39: pop
      40: return

  public static void applyTransactionTimeout(org.hibernate.Criteria, org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #92                 // String No Criteria object specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnull        40
      10: aload_1
      11: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #23                 // class org/springframework/orm/hibernate3/SessionHolder
      17: astore_2
      18: aload_2
      19: ifnull        40
      22: aload_2
      23: invokevirtual #89                 // Method org/springframework/orm/hibernate3/SessionHolder.hasTimeout:()Z
      26: ifeq          40
      29: aload_0
      30: aload_2
      31: invokevirtual #90                 // Method org/springframework/orm/hibernate3/SessionHolder.getTimeToLiveInSeconds:()I
      34: invokeinterface #93,  2           // InterfaceMethod org/hibernate/Criteria.setTimeout:(I)Lorg/hibernate/Criteria;
      39: pop
      40: return

  public static org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_0
       1: instanceof    #94                 // class org/hibernate/exception/JDBCConnectionException
       4: ifeq          20
       7: new           #16                 // class org/springframework/dao/DataAccessResourceFailureException
      10: dup
      11: aload_0
      12: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
      15: aload_0
      16: invokespecial #18                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      19: areturn
      20: aload_0
      21: instanceof    #96                 // class org/hibernate/exception/SQLGrammarException
      24: ifeq          75
      27: aload_0
      28: checkcast     #96                 // class org/hibernate/exception/SQLGrammarException
      31: astore_1
      32: new           #97                 // class org/springframework/dao/InvalidDataAccessResourceUsageException
      35: dup
      36: new           #78                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_0
      44: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
      47: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #98                 // String ; SQL [
      52: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_1
      56: invokevirtual #99                 // Method org/hibernate/exception/SQLGrammarException.getSQL:()Ljava/lang/String;
      59: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #100                // String ]
      64: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: aload_0
      71: invokespecial #101                // Method org/springframework/dao/InvalidDataAccessResourceUsageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: areturn
      75: aload_0
      76: instanceof    #102                // class org/hibernate/QueryTimeoutException
      79: ifeq          130
      82: aload_0
      83: checkcast     #102                // class org/hibernate/QueryTimeoutException
      86: astore_1
      87: new           #103                // class org/springframework/dao/QueryTimeoutException
      90: dup
      91: new           #78                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      98: aload_0
      99: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     102: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: ldc           #98                 // String ; SQL [
     107: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #104                // Method org/hibernate/QueryTimeoutException.getSQL:()Ljava/lang/String;
     114: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #100                // String ]
     119: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: aload_0
     126: invokespecial #105                // Method org/springframework/dao/QueryTimeoutException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: areturn
     130: aload_0
     131: instanceof    #106                // class org/hibernate/exception/LockAcquisitionException
     134: ifeq          185
     137: aload_0
     138: checkcast     #106                // class org/hibernate/exception/LockAcquisitionException
     141: astore_1
     142: new           #107                // class org/springframework/dao/CannotAcquireLockException
     145: dup
     146: new           #78                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     153: aload_0
     154: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     157: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: ldc           #98                 // String ; SQL [
     162: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_1
     166: invokevirtual #108                // Method org/hibernate/exception/LockAcquisitionException.getSQL:()Ljava/lang/String;
     169: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #100                // String ]
     174: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: aload_0
     181: invokespecial #109                // Method org/springframework/dao/CannotAcquireLockException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     184: areturn
     185: aload_0
     186: instanceof    #110                // class org/hibernate/PessimisticLockException
     189: ifeq          240
     192: aload_0
     193: checkcast     #110                // class org/hibernate/PessimisticLockException
     196: astore_1
     197: new           #111                // class org/springframework/dao/PessimisticLockingFailureException
     200: dup
     201: new           #78                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     208: aload_0
     209: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     212: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     215: ldc           #98                 // String ; SQL [
     217: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_1
     221: invokevirtual #112                // Method org/hibernate/PessimisticLockException.getSQL:()Ljava/lang/String;
     224: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #100                // String ]
     229: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     235: aload_0
     236: invokespecial #113                // Method org/springframework/dao/PessimisticLockingFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     239: areturn
     240: aload_0
     241: instanceof    #114                // class org/hibernate/exception/ConstraintViolationException
     244: ifeq          307
     247: aload_0
     248: checkcast     #114                // class org/hibernate/exception/ConstraintViolationException
     251: astore_1
     252: new           #115                // class org/springframework/dao/DataIntegrityViolationException
     255: dup
     256: new           #78                 // class java/lang/StringBuilder
     259: dup
     260: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     263: aload_0
     264: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     267: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     270: ldc           #98                 // String ; SQL [
     272: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: aload_1
     276: invokevirtual #116                // Method org/hibernate/exception/ConstraintViolationException.getSQL:()Ljava/lang/String;
     279: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     282: ldc           #117                // String ]; constraint [
     284: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: aload_1
     288: invokevirtual #118                // Method org/hibernate/exception/ConstraintViolationException.getConstraintName:()Ljava/lang/String;
     291: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: ldc           #100                // String ]
     296: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: aload_0
     303: invokespecial #119                // Method org/springframework/dao/DataIntegrityViolationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     306: areturn
     307: aload_0
     308: instanceof    #120                // class org/hibernate/exception/DataException
     311: ifeq          362
     314: aload_0
     315: checkcast     #120                // class org/hibernate/exception/DataException
     318: astore_1
     319: new           #115                // class org/springframework/dao/DataIntegrityViolationException
     322: dup
     323: new           #78                 // class java/lang/StringBuilder
     326: dup
     327: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
     330: aload_0
     331: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     334: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     337: ldc           #98                 // String ; SQL [
     339: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     342: aload_1
     343: invokevirtual #121                // Method org/hibernate/exception/DataException.getSQL:()Ljava/lang/String;
     346: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     349: ldc           #100                // String ]
     351: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: aload_0
     358: invokespecial #119                // Method org/springframework/dao/DataIntegrityViolationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     361: areturn
     362: aload_0
     363: instanceof    #122                // class org/hibernate/JDBCException
     366: ifeq          381
     369: new           #123                // class org/springframework/orm/hibernate3/HibernateJdbcException
     372: dup
     373: aload_0
     374: checkcast     #122                // class org/hibernate/JDBCException
     377: invokespecial #124                // Method org/springframework/orm/hibernate3/HibernateJdbcException."<init>":(Lorg/hibernate/JDBCException;)V
     380: areturn
     381: aload_0
     382: instanceof    #125                // class org/hibernate/QueryException
     385: ifeq          400
     388: new           #126                // class org/springframework/orm/hibernate3/HibernateQueryException
     391: dup
     392: aload_0
     393: checkcast     #125                // class org/hibernate/QueryException
     396: invokespecial #127                // Method org/springframework/orm/hibernate3/HibernateQueryException."<init>":(Lorg/hibernate/QueryException;)V
     399: areturn
     400: aload_0
     401: instanceof    #128                // class org/hibernate/NonUniqueResultException
     404: ifeq          421
     407: new           #129                // class org/springframework/dao/IncorrectResultSizeDataAccessException
     410: dup
     411: aload_0
     412: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     415: iconst_1
     416: aload_0
     417: invokespecial #130                // Method org/springframework/dao/IncorrectResultSizeDataAccessException."<init>":(Ljava/lang/String;ILjava/lang/Throwable;)V
     420: areturn
     421: aload_0
     422: instanceof    #131                // class org/hibernate/NonUniqueObjectException
     425: ifeq          441
     428: new           #132                // class org/springframework/dao/DuplicateKeyException
     431: dup
     432: aload_0
     433: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     436: aload_0
     437: invokespecial #133                // Method org/springframework/dao/DuplicateKeyException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     440: areturn
     441: aload_0
     442: instanceof    #134                // class org/hibernate/PropertyValueException
     445: ifeq          461
     448: new           #115                // class org/springframework/dao/DataIntegrityViolationException
     451: dup
     452: aload_0
     453: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     456: aload_0
     457: invokespecial #119                // Method org/springframework/dao/DataIntegrityViolationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     460: areturn
     461: aload_0
     462: instanceof    #135                // class org/hibernate/PersistentObjectException
     465: ifeq          481
     468: new           #136                // class org/springframework/dao/InvalidDataAccessApiUsageException
     471: dup
     472: aload_0
     473: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     476: aload_0
     477: invokespecial #137                // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     480: areturn
     481: aload_0
     482: instanceof    #138                // class org/hibernate/TransientObjectException
     485: ifeq          501
     488: new           #136                // class org/springframework/dao/InvalidDataAccessApiUsageException
     491: dup
     492: aload_0
     493: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     496: aload_0
     497: invokespecial #137                // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     500: areturn
     501: aload_0
     502: instanceof    #139                // class org/hibernate/ObjectDeletedException
     505: ifeq          521
     508: new           #136                // class org/springframework/dao/InvalidDataAccessApiUsageException
     511: dup
     512: aload_0
     513: invokevirtual #95                 // Method org/hibernate/HibernateException.getMessage:()Ljava/lang/String;
     516: aload_0
     517: invokespecial #137                // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     520: areturn
     521: aload_0
     522: instanceof    #140                // class org/hibernate/UnresolvableObjectException
     525: ifeq          540
     528: new           #141                // class org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException
     531: dup
     532: aload_0
     533: checkcast     #140                // class org/hibernate/UnresolvableObjectException
     536: invokespecial #142                // Method org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException."<init>":(Lorg/hibernate/UnresolvableObjectException;)V
     539: areturn
     540: aload_0
     541: instanceof    #143                // class org/hibernate/WrongClassException
     544: ifeq          559
     547: new           #141                // class org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException
     550: dup
     551: aload_0
     552: checkcast     #143                // class org/hibernate/WrongClassException
     555: invokespecial #144                // Method org/springframework/orm/hibernate3/HibernateObjectRetrievalFailureException."<init>":(Lorg/hibernate/WrongClassException;)V
     558: areturn
     559: aload_0
     560: instanceof    #145                // class org/hibernate/StaleObjectStateException
     563: ifeq          578
     566: new           #146                // class org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException
     569: dup
     570: aload_0
     571: checkcast     #145                // class org/hibernate/StaleObjectStateException
     574: invokespecial #147                // Method org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException."<init>":(Lorg/hibernate/StaleObjectStateException;)V
     577: areturn
     578: aload_0
     579: instanceof    #148                // class org/hibernate/StaleStateException
     582: ifeq          597
     585: new           #146                // class org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException
     588: dup
     589: aload_0
     590: checkcast     #148                // class org/hibernate/StaleStateException
     593: invokespecial #149                // Method org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException."<init>":(Lorg/hibernate/StaleStateException;)V
     596: areturn
     597: aload_0
     598: instanceof    #150                // class org/hibernate/OptimisticLockException
     601: ifeq          616
     604: new           #146                // class org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException
     607: dup
     608: aload_0
     609: checkcast     #150                // class org/hibernate/OptimisticLockException
     612: invokespecial #151                // Method org/springframework/orm/hibernate3/HibernateOptimisticLockingFailureException."<init>":(Lorg/hibernate/OptimisticLockException;)V
     615: areturn
     616: new           #152                // class org/springframework/orm/hibernate3/HibernateSystemException
     619: dup
     620: aload_0
     621: invokespecial #153                // Method org/springframework/orm/hibernate3/HibernateSystemException."<init>":(Lorg/hibernate/HibernateException;)V
     624: areturn

  public static boolean isDeferredCloseActive(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #19                 // String No SessionFactory specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
       9: invokevirtual #155                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #156                // class java/util/Map
      15: astore_1
      16: aload_1
      17: ifnull        34
      20: aload_1
      21: aload_0
      22: invokeinterface #157,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public static void initDeferredClose(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #19                 // String No SessionFactory specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
       9: ldc           #158                // String Initializing deferred close of Hibernate Sessions
      11: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      16: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      19: invokevirtual #155                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      22: checkcast     #156                // class java/util/Map
      25: astore_1
      26: aload_1
      27: ifnonnull     45
      30: new           #159                // class java/util/HashMap
      33: dup
      34: invokespecial #160                // Method java/util/HashMap."<init>":()V
      37: astore_1
      38: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      41: aload_1
      42: invokevirtual #161                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      45: aload_1
      46: aload_0
      47: new           #162                // class java/util/LinkedHashSet
      50: dup
      51: iconst_4
      52: invokespecial #163                // Method java/util/LinkedHashSet."<init>":(I)V
      55: invokeinterface #164,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  public static void processDeferredClose(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ldc           #19                 // String No SessionFactory specified
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
       9: invokevirtual #155                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
      12: checkcast     #156                // class java/util/Map
      15: astore_1
      16: aload_1
      17: ifnull        30
      20: aload_1
      21: aload_0
      22: invokeinterface #157,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      27: ifne          62
      30: new           #55                 // class java/lang/IllegalStateException
      33: dup
      34: new           #78                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #79                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #165                // String Deferred close not active for SessionFactory [
      43: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_0
      47: invokevirtual #166                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #100                // String ]
      52: invokevirtual #82                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #86                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      61: athrow
      62: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      65: ldc           #167                // String Processing deferred close of Hibernate Sessions
      67: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: aload_1
      73: aload_0
      74: invokeinterface #168,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #169                // class java/util/Set
      82: astore_2
      83: aload_2
      84: invokeinterface #170,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      89: astore_3
      90: aload_3
      91: invokeinterface #171,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          118
      99: aload_3
     100: invokeinterface #172,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #22                 // class org/hibernate/Session
     108: astore        4
     110: aload         4
     112: invokestatic  #54                 // Method closeSession:(Lorg/hibernate/Session;)V
     115: goto          90
     118: aload_1
     119: invokeinterface #173,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     124: ifeq          133
     127: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
     130: invokevirtual #174                // Method java/lang/ThreadLocal.remove:()V
     133: return

  public static void releaseSession(org.hibernate.Session, org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokestatic  #53                 // Method isSessionTransactional:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)Z
      10: ifne          18
      13: aload_0
      14: aload_1
      15: invokestatic  #175                // Method closeSessionOrRegisterDeferredClose:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
      18: return

  static void closeSessionOrRegisterDeferredClose(org.hibernate.Session, org.hibernate.SessionFactory);
    Code:
       0: getstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #155                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #156                // class java/util/Map
       9: astore_2
      10: aload_2
      11: ifnull        69
      14: aload_1
      15: ifnull        69
      18: aload_2
      19: aload_1
      20: invokeinterface #157,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      25: ifeq          69
      28: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      31: ldc           #176                // String Registering Hibernate Session for deferred close
      33: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      38: aload_0
      39: getstatic     #50                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      42: invokeinterface #41,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
      47: aload_2
      48: aload_1
      49: invokeinterface #177,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #169                // class java/util/Set
      57: astore_3
      58: aload_3
      59: aload_0
      60: invokeinterface #178,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          73
      69: aload_0
      70: invokestatic  #54                 // Method closeSession:(Lorg/hibernate/Session;)V
      73: return

  public static void closeSession(org.hibernate.Session);
    Code:
       0: aload_0
       1: ifnull        51
       4: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
       7: ldc           #179                // String Closing Hibernate Session
       9: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      14: aload_0
      15: invokeinterface #180,  1          // InterfaceMethod org/hibernate/Session.close:()Ljava/sql/Connection;
      20: pop
      21: goto          51
      24: astore_1
      25: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      28: ldc           #181                // String Could not close Hibernate Session
      30: aload_1
      31: invokeinterface #182,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      36: goto          51
      39: astore_1
      40: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      43: ldc           #183                // String Unexpected exception on closing Hibernate Session
      45: aload_1
      46: invokeinterface #182,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      51: return
    Exception table:
       from    to  target type
          14    21    24   Class org/hibernate/HibernateException
          14    21    39   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #184                // class org/springframework/orm/hibernate3/SessionFactoryUtils
       2: invokestatic  #185                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #186                // class org/springframework/core/NamedThreadLocal
      11: dup
      12: ldc           #187                // String Hibernate Sessions registered for deferred close
      14: invokespecial #188                // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      17: putstatic     #154                // Field deferredCloseHolder:Ljava/lang/ThreadLocal;
      20: return
}
