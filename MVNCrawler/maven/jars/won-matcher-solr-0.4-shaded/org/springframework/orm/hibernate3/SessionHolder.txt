Compiled from "SessionHolder.java"
public class org.springframework.orm.hibernate3.SessionHolder extends org.springframework.transaction.support.ResourceHolderSupport {
  private static final java.lang.Object DEFAULT_KEY;

  private final java.util.Map<java.lang.Object, org.hibernate.Session> sessionMap;

  private org.hibernate.Transaction transaction;

  private org.hibernate.FlushMode previousFlushMode;

  public org.springframework.orm.hibernate3.SessionHolder(org.hibernate.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/ResourceHolderSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      13: putfield      #4                  // Field sessionMap:Ljava/util/Map;
      16: aload_0
      17: aload_1
      18: invokevirtual #5                  // Method addSession:(Lorg/hibernate/Session;)V
      21: return

  public org.springframework.orm.hibernate3.SessionHolder(java.lang.Object, org.hibernate.Session);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/ResourceHolderSupport."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: iconst_1
      10: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      13: putfield      #4                  // Field sessionMap:Ljava/util/Map;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #6                  // Method addSession:(Ljava/lang/Object;Lorg/hibernate/Session;)V
      22: return

  public org.hibernate.Session getSession();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field DEFAULT_KEY:Ljava/lang/Object;
       4: invokevirtual #8                  // Method getSession:(Ljava/lang/Object;)Lorg/hibernate/Session;
       7: areturn

  public org.hibernate.Session getSession(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/hibernate/Session
      13: areturn

  public org.hibernate.Session getValidatedSession();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field DEFAULT_KEY:Ljava/lang/Object;
       4: invokevirtual #11                 // Method getValidatedSession:(Ljava/lang/Object;)Lorg/hibernate/Session;
       7: areturn

  public org.hibernate.Session getValidatedSession(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/hibernate/Session
      13: astore_2
      14: aload_2
      15: ifnull        40
      18: aload_2
      19: invokeinterface #12,  1           // InterfaceMethod org/hibernate/Session.isOpen:()Z
      24: ifne          40
      27: aload_0
      28: getfield      #4                  // Field sessionMap:Ljava/util/Map;
      31: aload_1
      32: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aconst_null
      39: astore_2
      40: aload_2
      41: areturn

  public org.hibernate.Session getAnySession();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          35
      12: aload_0
      13: getfield      #4                  // Field sessionMap:Ljava/util/Map;
      16: invokeinterface #15,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      21: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #10                 // class org/hibernate/Session
      34: areturn
      35: aconst_null
      36: areturn

  public void addSession(org.hibernate.Session);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field DEFAULT_KEY:Ljava/lang/Object;
       4: aload_1
       5: invokevirtual #6                  // Method addSession:(Ljava/lang/Object;Lorg/hibernate/Session;)V
       8: return

  public void addSession(java.lang.Object, org.hibernate.Session);
    Code:
       0: aload_1
       1: ldc           #18                 // String Key must not be null
       3: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #20                 // String Session must not be null
       9: invokestatic  #19                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field sessionMap:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #21,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: return

  public org.hibernate.Session removeSession(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/hibernate/Session
      13: areturn

  public boolean containsSession(org.hibernate.Session);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean doesNotHoldNonDefaultSession();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionMap:Ljava/util/Map;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          40
      12: aload_0
      13: getfield      #4                  // Field sessionMap:Ljava/util/Map;
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Map.size:()I
      21: iconst_1
      22: if_icmpne     44
      25: aload_0
      26: getfield      #4                  // Field sessionMap:Ljava/util/Map;
      29: getstatic     #7                  // Field DEFAULT_KEY:Ljava/lang/Object;
      32: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      37: ifeq          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public void setTransaction(org.hibernate.Transaction);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field transaction:Lorg/hibernate/Transaction;
       5: return

  public org.hibernate.Transaction getTransaction();
    Code:
       0: aload_0
       1: getfield      #25                 // Field transaction:Lorg/hibernate/Transaction;
       4: areturn

  public void setPreviousFlushMode(org.hibernate.FlushMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field previousFlushMode:Lorg/hibernate/FlushMode;
       5: return

  public org.hibernate.FlushMode getPreviousFlushMode();
    Code:
       0: aload_0
       1: getfield      #26                 // Field previousFlushMode:Lorg/hibernate/FlushMode;
       4: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method org/springframework/transaction/support/ResourceHolderSupport.clear:()V
       4: aload_0
       5: aconst_null
       6: putfield      #25                 // Field transaction:Lorg/hibernate/Transaction;
       9: aload_0
      10: aconst_null
      11: putfield      #26                 // Field previousFlushMode:Lorg/hibernate/FlushMode;
      14: return

  static {};
    Code:
       0: new           #28                 // class java/lang/Object
       3: dup
       4: invokespecial #29                 // Method java/lang/Object."<init>":()V
       7: putstatic     #7                  // Field DEFAULT_KEY:Ljava/lang/Object;
      10: return
}
