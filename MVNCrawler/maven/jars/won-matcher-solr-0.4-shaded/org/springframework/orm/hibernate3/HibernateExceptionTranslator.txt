Compiled from "HibernateExceptionTranslator.java"
public class org.springframework.orm.hibernate3.HibernateExceptionTranslator implements org.springframework.dao.support.PersistenceExceptionTranslator {
  private org.springframework.jdbc.support.SQLExceptionTranslator jdbcExceptionTranslator;

  public org.springframework.orm.hibernate3.HibernateExceptionTranslator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.dao.DataAccessException translateExceptionIfPossible(java.lang.RuntimeException);
    Code:
       0: aload_1
       1: instanceof    #3                  // class org/hibernate/HibernateException
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #3                  // class org/hibernate/HibernateException
      12: invokevirtual #4                  // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      15: areturn
      16: aconst_null
      17: areturn

  protected org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_0
       1: getfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnull        59
       7: aload_1
       8: instanceof    #5                  // class org/hibernate/JDBCException
      11: ifeq          59
      14: aload_1
      15: checkcast     #5                  // class org/hibernate/JDBCException
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      23: new           #6                  // class java/lang/StringBuilder
      26: dup
      27: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #8                  // String Hibernate operation:
      32: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_2
      36: invokevirtual #10                 // Method org/hibernate/JDBCException.getMessage:()Ljava/lang/String;
      39: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: aload_2
      46: invokevirtual #12                 // Method org/hibernate/JDBCException.getSQL:()Ljava/lang/String;
      49: aload_2
      50: invokevirtual #13                 // Method org/hibernate/JDBCException.getSQLException:()Ljava/sql/SQLException;
      53: invokeinterface #14,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      58: areturn
      59: aload_1
      60: invokestatic  #15                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      63: areturn
}
