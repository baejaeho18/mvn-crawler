Compiled from "FilterDefinitionFactoryBean.java"
public class org.springframework.orm.hibernate3.FilterDefinitionFactoryBean implements org.springframework.beans.factory.FactoryBean<org.hibernate.engine.FilterDefinition>, org.springframework.beans.factory.BeanNameAware, org.springframework.beans.factory.InitializingBean {
  private final org.hibernate.type.TypeResolver typeResolver;

  private java.lang.String filterName;

  private java.util.Map<java.lang.String, org.hibernate.type.Type> parameterTypeMap;

  private java.lang.String defaultFilterCondition;

  private org.hibernate.engine.FilterDefinition filterDefinition;

  public org.springframework.orm.hibernate3.FilterDefinitionFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/hibernate/type/TypeResolver
       8: dup
       9: invokespecial #3                  // Method org/hibernate/type/TypeResolver."<init>":()V
      12: putfield      #4                  // Field typeResolver:Lorg/hibernate/type/TypeResolver;
      15: aload_0
      16: new           #5                  // class java/util/HashMap
      19: dup
      20: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field parameterTypeMap:Ljava/util/Map;
      26: return

  public void setFilterName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field filterName:Ljava/lang/String;
       5: return

  public void setParameterTypes(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        90
       4: aload_0
       5: new           #5                  // class java/util/HashMap
       8: dup
       9: aload_1
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Map.size:()I
      15: invokespecial #10                 // Method java/util/HashMap."<init>":(I)V
      18: putfield      #7                  // Field parameterTypeMap:Ljava/util/Map;
      21: aload_1
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      27: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          87
      42: aload_2
      43: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #15                 // class java/util/Map$Entry
      51: astore_3
      52: aload_0
      53: getfield      #7                  // Field parameterTypeMap:Ljava/util/Map;
      56: aload_3
      57: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: aload_0
      63: getfield      #4                  // Field typeResolver:Lorg/hibernate/type/TypeResolver;
      66: aload_3
      67: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      72: checkcast     #18                 // class java/lang/String
      75: invokevirtual #19                 // Method org/hibernate/type/TypeResolver.heuristicType:(Ljava/lang/String;)Lorg/hibernate/type/Type;
      78: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: goto          33
      87: goto          101
      90: aload_0
      91: new           #5                  // class java/util/HashMap
      94: dup
      95: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      98: putfield      #7                  // Field parameterTypeMap:Ljava/util/Map;
     101: return

  public void setDefaultFilterCondition(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field defaultFilterCondition:Ljava/lang/String;
       5: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field filterName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #8                  // Field filterName:Ljava/lang/String;
      12: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: new           #22                 // class org/hibernate/engine/FilterDefinition
       4: dup
       5: aload_0
       6: getfield      #8                  // Field filterName:Ljava/lang/String;
       9: aload_0
      10: getfield      #21                 // Field defaultFilterCondition:Ljava/lang/String;
      13: aload_0
      14: getfield      #7                  // Field parameterTypeMap:Ljava/util/Map;
      17: invokespecial #23                 // Method org/hibernate/engine/FilterDefinition."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
      20: putfield      #24                 // Field filterDefinition:Lorg/hibernate/engine/FilterDefinition;
      23: return

  public org.hibernate.engine.FilterDefinition getObject();
    Code:
       0: aload_0
       1: getfield      #24                 // Field filterDefinition:Lorg/hibernate/engine/FilterDefinition;
       4: areturn

  public java.lang.Class<org.hibernate.engine.FilterDefinition> getObjectType();
    Code:
       0: ldc           #22                 // class org/hibernate/engine/FilterDefinition
       2: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getObject:()Lorg/hibernate/engine/FilterDefinition;
       4: areturn
}
