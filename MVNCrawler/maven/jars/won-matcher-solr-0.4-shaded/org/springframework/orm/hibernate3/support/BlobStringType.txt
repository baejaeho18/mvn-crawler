Compiled from "BlobStringType.java"
public class org.springframework.orm.hibernate3.support.BlobStringType extends org.springframework.orm.hibernate3.support.AbstractLobType {
  public org.springframework.orm.hibernate3.support.BlobStringType();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/orm/hibernate3/support/AbstractLobType."<init>":()V
       4: return

  protected org.springframework.orm.hibernate3.support.BlobStringType(org.springframework.jdbc.support.lob.LobHandler, javax.transaction.TransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method org/springframework/orm/hibernate3/support/AbstractLobType."<init>":(Lorg/springframework/jdbc/support/lob/LobHandler;Ljavax/transaction/TransactionManager;)V
       6: return

  public int[] sqlTypes();
    Code:
       0: iconst_1
       1: newarray       int
       3: dup
       4: iconst_0
       5: sipush        2004
       8: iastore
       9: areturn

  public java.lang.Class<?> returnedClass();
    Code:
       0: ldc           #4                  // class java/lang/String
       2: areturn

  protected java.lang.Object nullSafeGetInternal(java.sql.ResultSet, java.lang.String[], java.lang.Object, org.springframework.jdbc.support.lob.LobHandler) throws java.sql.SQLException, java.io.UnsupportedEncodingException;
    Code:
       0: aload         4
       2: aload_1
       3: aload_2
       4: iconst_0
       5: aaload
       6: invokeinterface #5,  3            // InterfaceMethod org/springframework/jdbc/support/lob/LobHandler.getBlobAsBytes:(Ljava/sql/ResultSet;Ljava/lang/String;)[B
      11: astore        5
      13: aload         5
      15: ifnull        53
      18: aload_0
      19: invokevirtual #6                  // Method getCharacterEncoding:()Ljava/lang/String;
      22: astore        6
      24: aload         6
      26: ifnull        43
      29: new           #4                  // class java/lang/String
      32: dup
      33: aload         5
      35: aload         6
      37: invokespecial #7                  // Method java/lang/String."<init>":([BLjava/lang/String;)V
      40: goto          52
      43: new           #4                  // class java/lang/String
      46: dup
      47: aload         5
      49: invokespecial #8                  // Method java/lang/String."<init>":([B)V
      52: areturn
      53: aconst_null
      54: areturn

  protected void nullSafeSetInternal(java.sql.PreparedStatement, int, java.lang.Object, org.springframework.jdbc.support.lob.LobCreator) throws java.sql.SQLException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_3
       1: ifnull        52
       4: aload_3
       5: checkcast     #4                  // class java/lang/String
       8: astore        5
      10: aload_0
      11: invokevirtual #6                  // Method getCharacterEncoding:()Ljava/lang/String;
      14: astore        6
      16: aload         6
      18: ifnull        31
      21: aload         5
      23: aload         6
      25: invokevirtual #9                  // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      28: goto          36
      31: aload         5
      33: invokevirtual #10                 // Method java/lang/String.getBytes:()[B
      36: astore        7
      38: aload         4
      40: aload_1
      41: iload_2
      42: aload         7
      44: invokeinterface #11,  4           // InterfaceMethod org/springframework/jdbc/support/lob/LobCreator.setBlobAsBytes:(Ljava/sql/PreparedStatement;I[B)V
      49: goto          62
      52: aload         4
      54: aload_1
      55: iload_2
      56: aconst_null
      57: invokeinterface #11,  4           // InterfaceMethod org/springframework/jdbc/support/lob/LobCreator.setBlobAsBytes:(Ljava/sql/PreparedStatement;I[B)V
      62: return

  protected java.lang.String getCharacterEncoding();
    Code:
       0: aconst_null
       1: areturn
}
