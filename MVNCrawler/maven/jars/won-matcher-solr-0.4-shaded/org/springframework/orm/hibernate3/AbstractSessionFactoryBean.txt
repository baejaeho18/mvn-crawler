Compiled from "AbstractSessionFactoryBean.java"
public abstract class org.springframework.orm.hibernate3.AbstractSessionFactoryBean extends org.springframework.orm.hibernate3.HibernateExceptionTranslator implements org.springframework.beans.factory.FactoryBean<org.hibernate.SessionFactory>, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean {
  protected final org.apache.commons.logging.Log logger;

  private javax.sql.DataSource dataSource;

  private boolean useTransactionAwareDataSource;

  private boolean exposeTransactionAwareSessionFactory;

  private org.hibernate.SessionFactory sessionFactory;

  public org.springframework.orm.hibernate3.AbstractSessionFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/orm/hibernate3/HibernateExceptionTranslator."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field useTransactionAwareDataSource:Z
      20: aload_0
      21: iconst_1
      22: putfield      #6                  // Field exposeTransactionAwareSessionFactory:Z
      25: return

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field dataSource:Ljavax/sql/DataSource;
       5: return

  public javax.sql.DataSource getDataSource();
    Code:
       0: aload_0
       1: getfield      #7                  // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public void setUseTransactionAwareDataSource(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field useTransactionAwareDataSource:Z
       5: return

  protected boolean isUseTransactionAwareDataSource();
    Code:
       0: aload_0
       1: getfield      #5                  // Field useTransactionAwareDataSource:Z
       4: ireturn

  public void setExposeTransactionAwareSessionFactory(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field exposeTransactionAwareSessionFactory:Z
       5: return

  protected boolean isExposeTransactionAwareSessionFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field exposeTransactionAwareSessionFactory:Z
       4: ireturn

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method buildSessionFactory:()Lorg/hibernate/SessionFactory;
       4: astore_1
       5: aload_0
       6: aload_0
       7: aload_1
       8: invokevirtual #9                  // Method wrapSessionFactoryIfNecessary:(Lorg/hibernate/SessionFactory;)Lorg/hibernate/SessionFactory;
      11: putfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
      14: aload_0
      15: invokevirtual #11                 // Method afterSessionFactoryCreation:()V
      18: return

  protected org.hibernate.SessionFactory wrapSessionFactoryIfNecessary(org.hibernate.SessionFactory);
    Code:
       0: aload_1
       1: areturn

  protected final org.hibernate.SessionFactory getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: ifnonnull     17
       7: new           #12                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #13                 // String SessionFactory not initialized yet
      13: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
      21: areturn

  public void destroy() throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #15                 // String Closing Hibernate SessionFactory
       6: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      11: aload_0
      12: invokevirtual #17                 // Method beforeSessionFactoryDestruction:()V
      15: aload_0
      16: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
      19: invokeinterface #18,  1           // InterfaceMethod org/hibernate/SessionFactory.close:()V
      24: goto          39
      27: astore_1
      28: aload_0
      29: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
      32: invokeinterface #18,  1           // InterfaceMethod org/hibernate/SessionFactory.close:()V
      37: aload_1
      38: athrow
      39: return
    Exception table:
       from    to  target type
          11    15    27   any

  public org.hibernate.SessionFactory getObject();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: areturn

  public java.lang.Class<? extends org.hibernate.SessionFactory> getObjectType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field sessionFactory:Lorg/hibernate/SessionFactory;
      11: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #19                 // class org/hibernate/SessionFactory
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  protected abstract org.hibernate.SessionFactory buildSessionFactory() throws java.lang.Exception;

  protected void afterSessionFactoryCreation() throws java.lang.Exception;
    Code:
       0: return

  protected void beforeSessionFactoryDestruction();
    Code:
       0: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method getObject:()Lorg/hibernate/SessionFactory;
       4: areturn
}
