Compiled from "OpenSessionInViewFilter.java"
public class org.springframework.orm.hibernate3.support.OpenSessionInViewFilter extends org.springframework.web.filter.OncePerRequestFilter {
  public static final java.lang.String DEFAULT_SESSION_FACTORY_BEAN_NAME;

  private java.lang.String sessionFactoryBeanName;

  private boolean singleSession;

  private org.hibernate.FlushMode flushMode;

  public org.springframework.orm.hibernate3.support.OpenSessionInViewFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/filter/OncePerRequestFilter."<init>":()V
       4: aload_0
       5: ldc           #3                  // String sessionFactory
       7: putfield      #4                  // Field sessionFactoryBeanName:Ljava/lang/String;
      10: aload_0
      11: iconst_1
      12: putfield      #5                  // Field singleSession:Z
      15: aload_0
      16: getstatic     #6                  // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      19: putfield      #7                  // Field flushMode:Lorg/hibernate/FlushMode;
      22: return

  public void setSessionFactoryBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field sessionFactoryBeanName:Ljava/lang/String;
       5: return

  protected java.lang.String getSessionFactoryBeanName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessionFactoryBeanName:Ljava/lang/String;
       4: areturn

  public void setSingleSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field singleSession:Z
       5: return

  protected boolean isSingleSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field singleSession:Z
       4: ireturn

  public void setFlushMode(org.hibernate.FlushMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field flushMode:Lorg/hibernate/FlushMode;
       5: return

  protected org.hibernate.FlushMode getFlushMode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field flushMode:Lorg/hibernate/FlushMode;
       4: areturn

  protected boolean shouldNotFilterAsyncDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected boolean shouldNotFilterErrorDispatch();
    Code:
       0: iconst_0
       1: ireturn

  protected void doFilterInternal(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse, javax.servlet.FilterChain) throws javax.servlet.ServletException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method lookupSessionFactory:(Ljavax/servlet/http/HttpServletRequest;)Lorg/hibernate/SessionFactory;
       5: astore        4
       7: iconst_0
       8: istore        5
      10: aload_1
      11: invokestatic  #9                  // Method org/springframework/web/context/request/async/WebAsyncUtils.getAsyncManager:(Ljavax/servlet/ServletRequest;)Lorg/springframework/web/context/request/async/WebAsyncManager;
      14: astore        6
      16: aload_0
      17: invokevirtual #10                 // Method getAlreadyFilteredAttributeName:()Ljava/lang/String;
      20: astore        7
      22: aload_0
      23: invokevirtual #11                 // Method isSingleSession:()Z
      26: ifeq          145
      29: aload         4
      31: invokestatic  #12                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
      34: ifeq          43
      37: iconst_1
      38: istore        5
      40: goto          182
      43: aload_0
      44: aload_1
      45: invokevirtual #13                 // Method isAsyncDispatch:(Ljavax/servlet/http/HttpServletRequest;)Z
      48: ifne          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: istore        8
      58: iload         8
      60: ifne          74
      63: aload_0
      64: aload         6
      66: aload         7
      68: invokespecial #14                 // Method applySessionBindingInterceptor:(Lorg/springframework/web/context/request/async/WebAsyncManager;Ljava/lang/String;)Z
      71: ifne          142
      74: aload_0
      75: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
      78: ldc           #16                 // String Opening single Hibernate Session in OpenSessionInViewFilter
      80: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      85: aload_0
      86: aload         4
      88: invokevirtual #18                 // Method getSession:(Lorg/hibernate/SessionFactory;)Lorg/hibernate/Session;
      91: astore        9
      93: new           #19                 // class org/springframework/orm/hibernate3/SessionHolder
      96: dup
      97: aload         9
      99: invokespecial #20                 // Method org/springframework/orm/hibernate3/SessionHolder."<init>":(Lorg/hibernate/Session;)V
     102: astore        10
     104: aload         4
     106: aload         10
     108: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     111: new           #22                 // class org/springframework/orm/hibernate3/support/AsyncRequestInterceptor
     114: dup
     115: aload         4
     117: aload         10
     119: invokespecial #23                 // Method org/springframework/orm/hibernate3/support/AsyncRequestInterceptor."<init>":(Lorg/hibernate/SessionFactory;Lorg/springframework/orm/hibernate3/SessionHolder;)V
     122: astore        11
     124: aload         6
     126: aload         7
     128: aload         11
     130: invokevirtual #24                 // Method org/springframework/web/context/request/async/WebAsyncManager.registerCallableInterceptor:(Ljava/lang/Object;Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;)V
     133: aload         6
     135: aload         7
     137: aload         11
     139: invokevirtual #25                 // Method org/springframework/web/context/request/async/WebAsyncManager.registerDeferredResultInterceptor:(Ljava/lang/Object;Lorg/springframework/web/context/request/async/DeferredResultProcessingInterceptor;)V
     142: goto          182
     145: aload_0
     146: aload_1
     147: invokevirtual #26                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     150: ifne          157
     153: iconst_1
     154: goto          158
     157: iconst_0
     158: ldc           #27                 // String Deferred close mode is not supported on async dispatches
     160: invokestatic  #28                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     163: aload         4
     165: invokestatic  #29                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.isDeferredCloseActive:(Lorg/hibernate/SessionFactory;)Z
     168: ifeq          177
     171: iconst_1
     172: istore        5
     174: goto          182
     177: aload         4
     179: invokestatic  #30                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.initDeferredClose:(Lorg/hibernate/SessionFactory;)V
     182: aload_3
     183: aload_1
     184: aload_2
     185: invokeinterface #31,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     190: iload         5
     192: ifne          318
     195: aload_0
     196: invokevirtual #11                 // Method isSingleSession:()Z
     199: ifeq          245
     202: aload         4
     204: invokestatic  #32                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     207: checkcast     #19                 // class org/springframework/orm/hibernate3/SessionHolder
     210: astore        8
     212: aload_0
     213: aload_1
     214: invokevirtual #26                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     217: ifne          242
     220: aload_0
     221: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
     224: ldc           #33                 // String Closing single Hibernate Session in OpenSessionInViewFilter
     226: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     231: aload_0
     232: aload         8
     234: invokevirtual #34                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     237: aload         4
     239: invokevirtual #35                 // Method closeSession:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     242: goto          318
     245: aload         4
     247: invokestatic  #36                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.processDeferredClose:(Lorg/hibernate/SessionFactory;)V
     250: goto          318
     253: astore        12
     255: iload         5
     257: ifne          315
     260: aload_0
     261: invokevirtual #11                 // Method isSingleSession:()Z
     264: ifeq          310
     267: aload         4
     269: invokestatic  #32                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     272: checkcast     #19                 // class org/springframework/orm/hibernate3/SessionHolder
     275: astore        13
     277: aload_0
     278: aload_1
     279: invokevirtual #26                 // Method isAsyncStarted:(Ljavax/servlet/http/HttpServletRequest;)Z
     282: ifne          307
     285: aload_0
     286: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
     289: ldc           #33                 // String Closing single Hibernate Session in OpenSessionInViewFilter
     291: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     296: aload_0
     297: aload         13
     299: invokevirtual #34                 // Method org/springframework/orm/hibernate3/SessionHolder.getSession:()Lorg/hibernate/Session;
     302: aload         4
     304: invokevirtual #35                 // Method closeSession:(Lorg/hibernate/Session;Lorg/hibernate/SessionFactory;)V
     307: goto          315
     310: aload         4
     312: invokestatic  #36                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.processDeferredClose:(Lorg/hibernate/SessionFactory;)V
     315: aload         12
     317: athrow
     318: return
    Exception table:
       from    to  target type
         182   190   253   any
         253   255   253   any

  protected org.hibernate.SessionFactory lookupSessionFactory(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method lookupSessionFactory:()Lorg/hibernate/SessionFactory;
       4: areturn

  protected org.hibernate.SessionFactory lookupSessionFactory();
    Code:
       0: aload_0
       1: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #38,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          48
      12: aload_0
      13: getfield      #15                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #39                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #40                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #41                 // String Using SessionFactory \'
      25: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #43                 // Method getSessionFactoryBeanName:()Ljava/lang/String;
      32: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #44                 // String \' for OpenSessionInViewFilter
      37: invokevirtual #42                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      48: aload_0
      49: invokevirtual #46                 // Method getServletContext:()Ljavax/servlet/ServletContext;
      52: invokestatic  #47                 // Method org/springframework/web/context/support/WebApplicationContextUtils.getRequiredWebApplicationContext:(Ljavax/servlet/ServletContext;)Lorg/springframework/web/context/WebApplicationContext;
      55: astore_1
      56: aload_1
      57: aload_0
      58: invokevirtual #43                 // Method getSessionFactoryBeanName:()Ljava/lang/String;
      61: ldc           #48                 // class org/hibernate/SessionFactory
      63: invokeinterface #49,  3           // InterfaceMethod org/springframework/web/context/WebApplicationContext.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      68: checkcast     #48                 // class org/hibernate/SessionFactory
      71: areturn

  protected org.hibernate.Session getSession(org.hibernate.SessionFactory) throws org.springframework.dao.DataAccessResourceFailureException;
    Code:
       0: aload_1
       1: iconst_1
       2: invokestatic  #50                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.getSession:(Lorg/hibernate/SessionFactory;Z)Lorg/hibernate/Session;
       5: astore_2
       6: aload_0
       7: invokevirtual #51                 // Method getFlushMode:()Lorg/hibernate/FlushMode;
      10: astore_3
      11: aload_3
      12: ifnull        22
      15: aload_2
      16: aload_3
      17: invokeinterface #52,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
      22: aload_2
      23: areturn

  protected void closeSession(org.hibernate.Session, org.hibernate.SessionFactory);
    Code:
       0: aload_1
       1: invokestatic  #53                 // Method org/springframework/orm/hibernate3/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
       4: return

  private boolean applySessionBindingInterceptor(org.springframework.web.context.request.async.WebAsyncManager, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #54                 // Method org/springframework/web/context/request/async/WebAsyncManager.getCallableInterceptor:(Ljava/lang/Object;)Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_1
      11: aload_2
      12: invokevirtual #54                 // Method org/springframework/web/context/request/async/WebAsyncManager.getCallableInterceptor:(Ljava/lang/Object;)Lorg/springframework/web/context/request/async/CallableProcessingInterceptor;
      15: checkcast     #22                 // class org/springframework/orm/hibernate3/support/AsyncRequestInterceptor
      18: invokevirtual #55                 // Method org/springframework/orm/hibernate3/support/AsyncRequestInterceptor.bindSession:()V
      21: iconst_1
      22: ireturn
}
