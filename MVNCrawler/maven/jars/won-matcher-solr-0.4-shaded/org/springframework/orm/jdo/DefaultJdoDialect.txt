Compiled from "DefaultJdoDialect.java"
public class org.springframework.orm.jdo.DefaultJdoDialect implements org.springframework.orm.jdo.JdoDialect,org.springframework.dao.support.PersistenceExceptionTranslator {
  private org.springframework.jdbc.support.SQLExceptionTranslator jdbcExceptionTranslator;

  public org.springframework.orm.jdo.DefaultJdoDialect();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.orm.jdo.DefaultJdoDialect(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method org/springframework/orm/jdo/PersistenceManagerFactoryUtils.newJdbcExceptionTranslator:(Ljava/lang/Object;)Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       9: putfield      #3                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      12: return

  public void setJdbcExceptionTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.jdbc.support.SQLExceptionTranslator getJdbcExceptionTranslator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field jdbcExceptionTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: areturn

  public java.lang.Object beginTransaction(javax.jdo.Transaction, org.springframework.transaction.TransactionDefinition) throws javax.jdo.JDOException, java.sql.SQLException, org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #4                  // Method getJdoIsolationLevel:(Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ifnull        17
      10: aload_1
      11: aload_3
      12: invokeinterface #5,  2            // InterfaceMethod javax/jdo/Transaction.setIsolationLevel:(Ljava/lang/String;)V
      17: aload_1
      18: invokeinterface #6,  1            // InterfaceMethod javax/jdo/Transaction.begin:()V
      23: aconst_null
      24: areturn

  protected java.lang.String getJdoIsolationLevel(org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
       6: tableswitch   { // 1 to 8
                     1: 61
                     2: 58
                     3: 64
                     4: 55
                     5: 64
                     6: 64
                     7: 64
                     8: 52
               default: 64
          }
      52: ldc           #9                  // String serializable
      54: areturn
      55: ldc           #10                 // String repeatable-read
      57: areturn
      58: ldc           #11                 // String read-committed
      60: areturn
      61: ldc           #12                 // String read-uncommitted
      63: areturn
      64: aconst_null
      65: areturn

  public void cleanupTransaction(java.lang.Object);
    Code:
       0: return

  public org.springframework.jdbc.datasource.ConnectionHandle getJdbcConnection(javax.jdo.PersistenceManager, boolean) throws javax.jdo.JDOException, java.sql.SQLException;
    Code:
       0: new           #13                 // class org/springframework/orm/jdo/DefaultJdoDialect$DataStoreConnectionHandle
       3: dup
       4: aload_1
       5: invokespecial #14                 // Method org/springframework/orm/jdo/DefaultJdoDialect$DataStoreConnectionHandle."<init>":(Ljavax/jdo/PersistenceManager;)V
       8: areturn

  public void releaseJdbcConnection(org.springframework.jdbc.datasource.ConnectionHandle, javax.jdo.PersistenceManager) throws javax.jdo.JDOException, java.sql.SQLException;
    Code:
       0: return

  public org.springframework.dao.DataAccessException translateExceptionIfPossible(java.lang.RuntimeException);
    Code:
       0: aload_1
       1: instanceof    #15                 // class javax/jdo/JDOException
       4: ifeq          16
       7: aload_0
       8: aload_1
       9: checkcast     #15                 // class javax/jdo/JDOException
      12: invokevirtual #16                 // Method translateException:(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
      15: areturn
      16: aconst_null
      17: areturn

  public org.springframework.dao.DataAccessException translateException(javax.jdo.JDOException);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: ifnull        61
       7: aload_1
       8: invokevirtual #18                 // Method javax/jdo/JDOException.getCause:()Ljava/lang/Throwable;
      11: instanceof    #19                 // class java/sql/SQLException
      14: ifeq          61
      17: aload_0
      18: invokevirtual #17                 // Method getJdbcExceptionTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      21: new           #20                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #22                 // String JDO operation:
      30: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #24                 // Method javax/jdo/JDOException.getMessage:()Ljava/lang/String;
      37: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: aload_0
      44: aload_1
      45: invokevirtual #26                 // Method extractSqlStringFromException:(Ljavax/jdo/JDOException;)Ljava/lang/String;
      48: aload_1
      49: invokevirtual #18                 // Method javax/jdo/JDOException.getCause:()Ljava/lang/Throwable;
      52: checkcast     #19                 // class java/sql/SQLException
      55: invokeinterface #27,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      60: areturn
      61: aload_1
      62: invokestatic  #28                 // Method org/springframework/orm/jdo/PersistenceManagerFactoryUtils.convertJdoAccessException:(Ljavax/jdo/JDOException;)Lorg/springframework/dao/DataAccessException;
      65: areturn

  protected java.lang.String extractSqlStringFromException(javax.jdo.JDOException);
    Code:
       0: aconst_null
       1: areturn
}
