Compiled from "PersistenceManagerFactoryUtils.java"
public abstract class org.springframework.orm.jdo.PersistenceManagerFactoryUtils {
  public static final int PERSISTENCE_MANAGER_SYNCHRONIZATION_ORDER;

  private static final org.apache.commons.logging.Log logger;

  public org.springframework.orm.jdo.PersistenceManagerFactoryUtils();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  static org.springframework.jdbc.support.SQLExceptionTranslator newJdbcExceptionTranslator(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #3                  // class javax/sql/DataSource
       4: ifeq          19
       7: new           #4                  // class org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator
      10: dup
      11: aload_0
      12: checkcast     #3                  // class javax/sql/DataSource
      15: invokespecial #5                  // Method org/springframework/jdbc/support/SQLErrorCodeSQLExceptionTranslator."<init>":(Ljavax/sql/DataSource;)V
      18: areturn
      19: new           #6                  // class org/springframework/jdbc/support/SQLStateSQLExceptionTranslator
      22: dup
      23: invokespecial #7                  // Method org/springframework/jdbc/support/SQLStateSQLExceptionTranslator."<init>":()V
      26: areturn

  public static javax.jdo.PersistenceManager getPersistenceManager(javax.jdo.PersistenceManagerFactory, boolean) throws org.springframework.dao.DataAccessResourceFailureException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #8                  // Method doGetPersistenceManager:(Ljavax/jdo/PersistenceManagerFactory;Z)Ljavax/jdo/PersistenceManager;
       5: areturn
       6: astore_2
       7: new           #10                 // class org/springframework/dao/DataAccessResourceFailureException
      10: dup
      11: ldc           #11                 // String Could not obtain JDO PersistenceManager
      13: aload_2
      14: invokespecial #12                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      17: athrow
    Exception table:
       from    to  target type
           0     5     6   Class javax/jdo/JDOException

  public static javax.jdo.PersistenceManager doGetPersistenceManager(javax.jdo.PersistenceManagerFactory, boolean) throws javax.jdo.JDOException, java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: ldc           #13                 // String No PersistenceManagerFactory specified
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokestatic  #15                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/springframework/orm/jdo/PersistenceManagerHolder
      13: astore_2
      14: aload_2
      15: ifnull        54
      18: aload_2
      19: invokevirtual #17                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.isSynchronizedWithTransaction:()Z
      22: ifne          49
      25: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      28: ifeq          49
      31: aload_2
      32: iconst_1
      33: invokevirtual #19                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.setSynchronizedWithTransaction:(Z)V
      36: new           #20                 // class org/springframework/orm/jdo/PersistenceManagerFactoryUtils$PersistenceManagerSynchronization
      39: dup
      40: aload_2
      41: aload_0
      42: iconst_0
      43: invokespecial #21                 // Method org/springframework/orm/jdo/PersistenceManagerFactoryUtils$PersistenceManagerSynchronization."<init>":(Lorg/springframework/orm/jdo/PersistenceManagerHolder;Ljavax/jdo/PersistenceManagerFactory;Z)V
      46: invokestatic  #22                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
      49: aload_2
      50: invokevirtual #23                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.getPersistenceManager:()Ljavax/jdo/PersistenceManager;
      53: areturn
      54: iload_1
      55: ifne          74
      58: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      61: ifne          74
      64: new           #24                 // class java/lang/IllegalStateException
      67: dup
      68: ldc           #25                 // String No JDO PersistenceManager bound to thread, and configuration does not allow creation of non-transactional one here
      70: invokespecial #26                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      73: athrow
      74: getstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
      77: ldc           #28                 // String Opening JDO PersistenceManager
      79: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      84: aload_0
      85: invokeinterface #30,  1           // InterfaceMethod javax/jdo/PersistenceManagerFactory.getPersistenceManager:()Ljavax/jdo/PersistenceManager;
      90: astore_3
      91: invokestatic  #18                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
      94: ifeq          139
      97: getstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
     100: ldc           #31                 // String Registering transaction synchronization for JDO PersistenceManager
     102: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     107: new           #16                 // class org/springframework/orm/jdo/PersistenceManagerHolder
     110: dup
     111: aload_3
     112: invokespecial #32                 // Method org/springframework/orm/jdo/PersistenceManagerHolder."<init>":(Ljavax/jdo/PersistenceManager;)V
     115: astore_2
     116: aload_2
     117: iconst_1
     118: invokevirtual #19                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.setSynchronizedWithTransaction:(Z)V
     121: new           #20                 // class org/springframework/orm/jdo/PersistenceManagerFactoryUtils$PersistenceManagerSynchronization
     124: dup
     125: aload_2
     126: aload_0
     127: iconst_1
     128: invokespecial #21                 // Method org/springframework/orm/jdo/PersistenceManagerFactoryUtils$PersistenceManagerSynchronization."<init>":(Lorg/springframework/orm/jdo/PersistenceManagerHolder;Ljavax/jdo/PersistenceManagerFactory;Z)V
     131: invokestatic  #22                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.registerSynchronization:(Lorg/springframework/transaction/support/TransactionSynchronization;)V
     134: aload_0
     135: aload_2
     136: invokestatic  #33                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     139: aload_3
     140: areturn

  public static boolean isPersistenceManagerTransactional(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_1
       7: invokestatic  #15                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/springframework/orm/jdo/PersistenceManagerHolder
      13: astore_2
      14: aload_2
      15: ifnull        30
      18: aload_0
      19: aload_2
      20: invokevirtual #23                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.getPersistenceManager:()Ljavax/jdo/PersistenceManager;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public static void applyTransactionTimeout(javax.jdo.Query, javax.jdo.PersistenceManagerFactory) throws javax.jdo.JDOException;
    Code:
       0: aload_0
       1: ldc           #34                 // String No Query object specified
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #15                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #16                 // class org/springframework/orm/jdo/PersistenceManagerHolder
      13: astore_2
      14: aload_2
      15: ifnull        67
      18: aload_2
      19: invokevirtual #35                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.hasTimeout:()Z
      22: ifeq          67
      25: aload_1
      26: invokeinterface #36,  1           // InterfaceMethod javax/jdo/PersistenceManagerFactory.supportedOptions:()Ljava/util/Collection;
      31: ldc           #37                 // String javax.jdo.option.DatastoreTimeout
      33: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      38: ifeq          67
      41: aload_2
      42: invokevirtual #39                 // Method org/springframework/orm/jdo/PersistenceManagerHolder.getTimeToLiveInMillis:()J
      45: l2i
      46: istore_3
      47: aload_0
      48: iload_3
      49: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: invokeinterface #41,  2           // InterfaceMethod javax/jdo/Query.setDatastoreReadTimeoutMillis:(Ljava/lang/Integer;)V
      57: aload_0
      58: iload_3
      59: invokestatic  #40                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: invokeinterface #42,  2           // InterfaceMethod javax/jdo/Query.setDatastoreWriteTimeoutMillis:(Ljava/lang/Integer;)V
      67: return

  public static org.springframework.dao.DataAccessException convertJdoAccessException(javax.jdo.JDOException);
    Code:
       0: aload_0
       1: instanceof    #43                 // class javax/jdo/JDOObjectNotFoundException
       4: ifeq          19
       7: new           #44                 // class org/springframework/orm/jdo/JdoObjectRetrievalFailureException
      10: dup
      11: aload_0
      12: checkcast     #43                 // class javax/jdo/JDOObjectNotFoundException
      15: invokespecial #45                 // Method org/springframework/orm/jdo/JdoObjectRetrievalFailureException."<init>":(Ljavax/jdo/JDOObjectNotFoundException;)V
      18: athrow
      19: aload_0
      20: instanceof    #46                 // class javax/jdo/JDOOptimisticVerificationException
      23: ifeq          38
      26: new           #47                 // class org/springframework/orm/jdo/JdoOptimisticLockingFailureException
      29: dup
      30: aload_0
      31: checkcast     #46                 // class javax/jdo/JDOOptimisticVerificationException
      34: invokespecial #48                 // Method org/springframework/orm/jdo/JdoOptimisticLockingFailureException."<init>":(Ljavax/jdo/JDOOptimisticVerificationException;)V
      37: athrow
      38: aload_0
      39: instanceof    #49                 // class javax/jdo/JDODataStoreException
      42: ifeq          57
      45: new           #50                 // class org/springframework/orm/jdo/JdoResourceFailureException
      48: dup
      49: aload_0
      50: checkcast     #49                 // class javax/jdo/JDODataStoreException
      53: invokespecial #51                 // Method org/springframework/orm/jdo/JdoResourceFailureException."<init>":(Ljavax/jdo/JDODataStoreException;)V
      56: areturn
      57: aload_0
      58: instanceof    #52                 // class javax/jdo/JDOFatalDataStoreException
      61: ifeq          76
      64: new           #50                 // class org/springframework/orm/jdo/JdoResourceFailureException
      67: dup
      68: aload_0
      69: checkcast     #52                 // class javax/jdo/JDOFatalDataStoreException
      72: invokespecial #53                 // Method org/springframework/orm/jdo/JdoResourceFailureException."<init>":(Ljavax/jdo/JDOFatalDataStoreException;)V
      75: areturn
      76: aload_0
      77: instanceof    #54                 // class javax/jdo/JDOUserException
      80: ifeq          95
      83: new           #55                 // class org/springframework/orm/jdo/JdoUsageException
      86: dup
      87: aload_0
      88: checkcast     #54                 // class javax/jdo/JDOUserException
      91: invokespecial #56                 // Method org/springframework/orm/jdo/JdoUsageException."<init>":(Ljavax/jdo/JDOUserException;)V
      94: areturn
      95: aload_0
      96: instanceof    #57                 // class javax/jdo/JDOFatalUserException
      99: ifeq          114
     102: new           #55                 // class org/springframework/orm/jdo/JdoUsageException
     105: dup
     106: aload_0
     107: checkcast     #57                 // class javax/jdo/JDOFatalUserException
     110: invokespecial #58                 // Method org/springframework/orm/jdo/JdoUsageException."<init>":(Ljavax/jdo/JDOFatalUserException;)V
     113: areturn
     114: new           #59                 // class org/springframework/orm/jdo/JdoSystemException
     117: dup
     118: aload_0
     119: invokespecial #60                 // Method org/springframework/orm/jdo/JdoSystemException."<init>":(Ljavax/jdo/JDOException;)V
     122: areturn

  public static void releasePersistenceManager(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #61                 // Method doReleasePersistenceManager:(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)V
       5: goto          35
       8: astore_2
       9: getstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
      12: ldc           #62                 // String Could not close JDO PersistenceManager
      14: aload_2
      15: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      20: goto          35
      23: astore_2
      24: getstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
      27: ldc           #65                 // String Unexpected exception on closing JDO PersistenceManager
      29: aload_2
      30: invokeinterface #63,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      35: return
    Exception table:
       from    to  target type
           0     5     8   Class javax/jdo/JDOException
           0     5    23   Class java/lang/Throwable

  public static void doReleasePersistenceManager(javax.jdo.PersistenceManager, javax.jdo.PersistenceManagerFactory) throws javax.jdo.JDOException;
    Code:
       0: aload_0
       1: ifnonnull     5
       4: return
       5: aload_0
       6: aload_1
       7: invokestatic  #66                 // Method isPersistenceManagerTransactional:(Ljavax/jdo/PersistenceManager;Ljavax/jdo/PersistenceManagerFactory;)Z
      10: ifne          29
      13: getstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
      16: ldc           #67                 // String Closing JDO PersistenceManager
      18: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      23: aload_0
      24: invokeinterface #68,  1           // InterfaceMethod javax/jdo/PersistenceManager.close:()V
      29: return

  static {};
    Code:
       0: ldc           #69                 // class org/springframework/orm/jdo/PersistenceManagerFactoryUtils
       2: invokestatic  #70                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #27                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
