Compiled from "HibernateTransactionManager.java"
public class org.springframework.orm.hibernate4.HibernateTransactionManager extends org.springframework.transaction.support.AbstractPlatformTransactionManager implements org.springframework.transaction.support.ResourceTransactionManager,org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private org.hibernate.SessionFactory sessionFactory;

  private javax.sql.DataSource dataSource;

  private boolean autodetectDataSource;

  private boolean prepareConnection;

  private boolean allowResultAccessAfterCompletion;

  private boolean hibernateManagedSession;

  private java.lang.Object entityInterceptor;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.orm.hibernate4.HibernateTransactionManager();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field hibernateManagedSession:Z
      24: return

  public org.springframework.orm.hibernate4.HibernateTransactionManager(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/AbstractPlatformTransactionManager."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autodetectDataSource:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field prepareConnection:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field hibernateManagedSession:Z
      24: aload_0
      25: aload_1
      26: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
      29: aload_0
      30: invokevirtual #7                  // Method afterPropertiesSet:()V
      33: return

  public void setSessionFactory(org.hibernate.SessionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       5: return

  public org.hibernate.SessionFactory getSessionFactory();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: areturn

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_1
       1: instanceof    #8                  // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: checkcast     #8                  // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy
      12: invokevirtual #9                  // Method org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy.getTargetDataSource:()Ljavax/sql/DataSource;
      15: putfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
      18: goto          26
      21: aload_0
      22: aload_1
      23: putfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
      26: return

  public javax.sql.DataSource getDataSource();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataSource:Ljavax/sql/DataSource;
       4: areturn

  public void setAutodetectDataSource(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field autodetectDataSource:Z
       5: return

  public void setPrepareConnection(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field prepareConnection:Z
       5: return

  public void setAllowResultAccessAfterCompletion(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field allowResultAccessAfterCompletion:Z
       5: return

  public void setHibernateManagedSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field hibernateManagedSession:Z
       5: return

  public void setEntityInterceptorBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public void setEntityInterceptor(org.hibernate.Interceptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       5: return

  public org.hibernate.Interceptor getEntityInterceptor() throws java.lang.IllegalStateException, org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
       4: instanceof    #12                 // class org/hibernate/Interceptor
       7: ifeq          18
      10: aload_0
      11: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      14: checkcast     #12                 // class org/hibernate/Interceptor
      17: areturn
      18: aload_0
      19: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      22: instanceof    #13                 // class java/lang/String
      25: ifeq          69
      28: aload_0
      29: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      32: ifnonnull     45
      35: new           #15                 // class java/lang/IllegalStateException
      38: dup
      39: ldc           #16                 // String Cannot get entity interceptor via bean name if no bean factory set
      41: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: aload_0
      46: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      49: checkcast     #13                 // class java/lang/String
      52: astore_1
      53: aload_0
      54: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      57: aload_1
      58: ldc           #12                 // class org/hibernate/Interceptor
      60: invokeinterface #18,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      65: checkcast     #12                 // class org/hibernate/Interceptor
      68: areturn
      69: aconst_null
      70: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: ifnonnull     17
       7: new           #20                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #21                 // String Property \'sessionFactory\' is required
      13: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #11                 // Field entityInterceptor:Ljava/lang/Object;
      21: instanceof    #13                 // class java/lang/String
      24: ifeq          44
      27: aload_0
      28: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      31: ifnonnull     44
      34: new           #20                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #23                 // String Property \'beanFactory\' is required for \'entityInterceptorBeanName\'
      40: invokespecial #22                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_0
      45: getfield      #2                  // Field autodetectDataSource:Z
      48: ifeq          120
      51: aload_0
      52: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      55: ifnonnull     120
      58: aload_0
      59: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      62: invokestatic  #25                 // Method org/springframework/orm/hibernate4/SessionFactoryUtils.getDataSource:(Lorg/hibernate/SessionFactory;)Ljavax/sql/DataSource;
      65: astore_1
      66: aload_1
      67: ifnull        120
      70: aload_0
      71: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      79: ifeq          115
      82: aload_0
      83: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      86: new           #28                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #30                 // String Using DataSource [
      95: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: ldc           #33                 // String ] of Hibernate SessionFactory for HibernateTransactionManager
     104: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     115: aload_0
     116: aload_1
     117: invokevirtual #36                 // Method setDataSource:(Ljavax/sql/DataSource;)V
     120: return

  public java.lang.Object getResourceFactory();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       4: areturn

  protected java.lang.Object doGetTransaction();
    Code:
       0: new           #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #38                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject."<init>":(Lorg/springframework/orm/hibernate4/HibernateTransactionManager;Lorg/springframework/orm/hibernate4/HibernateTransactionManager$1;)V
       9: astore_1
      10: aload_1
      11: aload_0
      12: invokevirtual #39                 // Method isNestedTransactionAllowed:()Z
      15: invokevirtual #40                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSavepointAllowed:(Z)V
      18: aload_0
      19: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      22: invokestatic  #41                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #42                 // class org/springframework/orm/hibernate4/SessionHolder
      28: astore_2
      29: aload_2
      30: ifnull        89
      33: aload_0
      34: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      37: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      42: ifeq          81
      45: aload_0
      46: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      49: new           #28                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #44                 // String Found thread-bound Session [
      58: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_2
      62: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      65: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: ldc           #46                 // String ] for Hibernate transaction
      70: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      81: aload_1
      82: aload_2
      83: invokevirtual #48                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate4/SessionHolder;)V
      86: goto          171
      89: aload_0
      90: getfield      #5                  // Field hibernateManagedSession:Z
      93: ifeq          171
      96: aload_0
      97: getfield      #6                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
     100: invokeinterface #49,  1           // InterfaceMethod org/hibernate/SessionFactory.getCurrentSession:()Lorg/hibernate/Session;
     105: astore_3
     106: aload_0
     107: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     110: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     115: ifeq          151
     118: aload_0
     119: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     122: new           #28                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #50                 // String Found Hibernate-managed Session [
     131: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_3
     135: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #51                 // String ] for Spring-managed transaction
     140: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     151: aload_1
     152: aload_3
     153: invokevirtual #52                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setExistingSession:(Lorg/hibernate/Session;)V
     156: goto          171
     159: astore_3
     160: new           #54                 // class org/springframework/dao/DataAccessResourceFailureException
     163: dup
     164: ldc           #55                 // String Could not obtain Hibernate-managed Session for Spring-managed transaction
     166: aload_3
     167: invokespecial #56                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     170: athrow
     171: aload_0
     172: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
     175: ifnull        194
     178: aload_0
     179: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
     182: invokestatic  #41                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #57                 // class org/springframework/jdbc/datasource/ConnectionHolder
     188: astore_3
     189: aload_1
     190: aload_3
     191: invokevirtual #58                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     194: aload_1
     195: areturn
    Exception table:
       from    to  target type
          96   156   159   Class org/hibernate/HibernateException

  protected boolean isExistingTransaction(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #59                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.hasSpringManagedTransaction:()Z
       9: ifne          26
      12: aload_0
      13: getfield      #5                  // Field hibernateManagedSession:Z
      16: ifeq          30
      19: aload_2
      20: invokevirtual #60                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.hasHibernateManagedTransaction:()Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  protected void doBegin(java.lang.Object, org.springframework.transaction.TransactionDefinition);
    Code:
       0: aload_1
       1: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       4: astore_3
       5: aload_3
       6: invokevirtual #61                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.hasConnectionHolder:()Z
       9: ifeq          32
      12: aload_3
      13: invokevirtual #62                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      16: invokevirtual #63                 // Method org/springframework/jdbc/datasource/ConnectionHolder.isSynchronizedWithTransaction:()Z
      19: ifne          32
      22: new           #64                 // class org/springframework/transaction/IllegalTransactionStateException
      25: dup
      26: ldc           #65                 // String Pre-bound JDBC Connection found! HibernateTransactionManager does not support running within DataSourceTransactionManager if told to manage the DataSource itself. It is recommended to use a single HibernateTransactionManager for all transactions on a single DataSource, no matter whether Hibernate or JDBC access.
      28: invokespecial #66                 // Method org/springframework/transaction/IllegalTransactionStateException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: aconst_null
      33: astore        4
      35: aload_3
      36: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      39: ifnull        52
      42: aload_3
      43: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      46: invokevirtual #68                 // Method org/springframework/orm/hibernate4/SessionHolder.isSynchronizedWithTransaction:()Z
      49: ifeq          150
      52: aload_0
      53: invokevirtual #69                 // Method getEntityInterceptor:()Lorg/hibernate/Interceptor;
      56: astore        5
      58: aload         5
      60: ifnull        87
      63: aload_0
      64: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      67: invokeinterface #70,  1           // InterfaceMethod org/hibernate/SessionFactory.withOptions:()Lorg/hibernate/SessionBuilder;
      72: aload         5
      74: invokeinterface #71,  2           // InterfaceMethod org/hibernate/SessionBuilder.interceptor:(Lorg/hibernate/Interceptor;)Lorg/hibernate/SessionBuilder;
      79: invokeinterface #72,  1           // InterfaceMethod org/hibernate/SessionBuilder.openSession:()Lorg/hibernate/Session;
      84: goto          96
      87: aload_0
      88: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      91: invokeinterface #73,  1           // InterfaceMethod org/hibernate/SessionFactory.openSession:()Lorg/hibernate/Session;
      96: astore        6
      98: aload_0
      99: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     102: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     107: ifeq          144
     110: aload_0
     111: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     114: new           #28                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #74                 // String Opened new Session [
     123: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         6
     128: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #46                 // String ] for Hibernate transaction
     133: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     144: aload_3
     145: aload         6
     147: invokevirtual #75                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSession:(Lorg/hibernate/Session;)V
     150: aload_3
     151: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     154: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
     157: astore        4
     159: aload_0
     160: getfield      #3                  // Field prepareConnection:Z
     163: ifeq          296
     166: aload_0
     167: aload         4
     169: invokevirtual #76                 // Method isSameConnectionForEntireSession:(Lorg/hibernate/Session;)Z
     172: ifeq          296
     175: aload_0
     176: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     179: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     184: ifeq          221
     187: aload_0
     188: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     191: new           #28                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #77                 // String Preparing JDBC Connection of Hibernate Session [
     200: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload         4
     205: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     208: ldc           #78                 // String ]
     210: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     221: aload         4
     223: checkcast     #79                 // class org/hibernate/engine/spi/SessionImplementor
     226: invokeinterface #80,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
     231: astore        5
     233: aload         5
     235: aload_2
     236: invokestatic  #81                 // Method org/springframework/jdbc/datasource/DataSourceUtils.prepareConnectionForTransaction:(Ljava/sql/Connection;Lorg/springframework/transaction/TransactionDefinition;)Ljava/lang/Integer;
     239: astore        6
     241: aload_3
     242: aload         6
     244: invokevirtual #82                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setPreviousIsolationLevel:(Ljava/lang/Integer;)V
     247: aload_0
     248: getfield      #4                  // Field allowResultAccessAfterCompletion:Z
     251: ifeq          293
     254: aload_3
     255: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     258: ifne          293
     261: aload         5
     263: invokeinterface #84,  1           // InterfaceMethod java/sql/Connection.getHoldability:()I
     268: istore        7
     270: iload         7
     272: iconst_1
     273: if_icmpeq     293
     276: aload_3
     277: iload         7
     279: invokestatic  #86                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     282: invokevirtual #87                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setPreviousHoldability:(Ljava/lang/Integer;)V
     285: aload         5
     287: iconst_1
     288: invokeinterface #88,  2           // InterfaceMethod java/sql/Connection.setHoldability:(I)V
     293: goto          362
     296: aload_2
     297: invokeinterface #89,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.getIsolationLevel:()I
     302: iconst_m1
     303: if_icmpeq     316
     306: new           #91                 // class org/springframework/transaction/InvalidIsolationLevelException
     309: dup
     310: ldc           #92                 // String HibernateTransactionManager is not allowed to support custom isolation levels: make sure that its \'prepareConnection\' flag is on (the default) and that the Hibernate connection release mode is set to \'on_close\' (the default for JDBC).
     312: invokespecial #93                 // Method org/springframework/transaction/InvalidIsolationLevelException."<init>":(Ljava/lang/String;)V
     315: athrow
     316: aload_0
     317: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     320: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     325: ifeq          362
     328: aload_0
     329: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     332: new           #28                 // class java/lang/StringBuilder
     335: dup
     336: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     339: ldc           #94                 // String Not preparing JDBC Connection of Hibernate Session [
     341: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     344: aload         4
     346: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     349: ldc           #78                 // String ]
     351: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     354: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     357: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     362: aload_2
     363: invokeinterface #95,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     368: ifeq          388
     371: aload_3
     372: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     375: ifeq          388
     378: aload         4
     380: getstatic     #96                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     383: invokeinterface #97,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     388: aload_2
     389: invokeinterface #95,  1           // InterfaceMethod org/springframework/transaction/TransactionDefinition.isReadOnly:()Z
     394: ifne          443
     397: aload_3
     398: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     401: ifne          443
     404: aload         4
     406: invokeinterface #98,  1           // InterfaceMethod org/hibernate/Session.getFlushMode:()Lorg/hibernate/FlushMode;
     411: astore        5
     413: getstatic     #96                 // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
     416: aload         5
     418: invokevirtual #99                 // Method org/hibernate/FlushMode.equals:(Ljava/lang/Object;)Z
     421: ifeq          443
     424: aload         4
     426: getstatic     #100                // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
     429: invokeinterface #97,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     434: aload_3
     435: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     438: aload         5
     440: invokevirtual #101                // Method org/springframework/orm/hibernate4/SessionHolder.setPreviousFlushMode:(Lorg/hibernate/FlushMode;)V
     443: aload_0
     444: aload_2
     445: invokevirtual #102                // Method determineTimeout:(Lorg/springframework/transaction/TransactionDefinition;)I
     448: istore        6
     450: iload         6
     452: iconst_m1
     453: if_icmpeq     484
     456: aload         4
     458: invokeinterface #103,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     463: astore        5
     465: aload         5
     467: iload         6
     469: invokeinterface #104,  2          // InterfaceMethod org/hibernate/Transaction.setTimeout:(I)V
     474: aload         5
     476: invokeinterface #105,  1          // InterfaceMethod org/hibernate/Transaction.begin:()V
     481: goto          493
     484: aload         4
     486: invokeinterface #106,  1          // InterfaceMethod org/hibernate/Session.beginTransaction:()Lorg/hibernate/Transaction;
     491: astore        5
     493: aload_3
     494: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     497: aload         5
     499: invokevirtual #107                // Method org/springframework/orm/hibernate4/SessionHolder.setTransaction:(Lorg/hibernate/Transaction;)V
     502: aload_0
     503: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
     506: ifnull        606
     509: aload         4
     511: checkcast     #79                 // class org/hibernate/engine/spi/SessionImplementor
     514: invokeinterface #80,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
     519: astore        7
     521: new           #57                 // class org/springframework/jdbc/datasource/ConnectionHolder
     524: dup
     525: aload         7
     527: invokespecial #108                // Method org/springframework/jdbc/datasource/ConnectionHolder."<init>":(Ljava/sql/Connection;)V
     530: astore        8
     532: iload         6
     534: iconst_m1
     535: if_icmpeq     545
     538: aload         8
     540: iload         6
     542: invokevirtual #109                // Method org/springframework/jdbc/datasource/ConnectionHolder.setTimeoutInSeconds:(I)V
     545: aload_0
     546: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     549: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     554: ifeq          591
     557: aload_0
     558: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     561: new           #28                 // class java/lang/StringBuilder
     564: dup
     565: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     568: ldc           #110                // String Exposing Hibernate transaction as JDBC transaction [
     570: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     573: aload         7
     575: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     578: ldc           #78                 // String ]
     580: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     583: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     586: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     591: aload_0
     592: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
     595: aload         8
     597: invokestatic  #111                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     600: aload_3
     601: aload         8
     603: invokevirtual #58                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
     606: aload_3
     607: invokevirtual #112                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
     610: ifeq          624
     613: aload_0
     614: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
     617: aload_3
     618: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     621: invokestatic  #111                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     624: aload_3
     625: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     628: iconst_1
     629: invokevirtual #113                // Method org/springframework/orm/hibernate4/SessionHolder.setSynchronizedWithTransaction:(Z)V
     632: goto          739
     635: astore        5
     637: aload_3
     638: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     641: ifeq          727
     644: aload         4
     646: invokeinterface #103,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     651: invokeinterface #115,  1          // InterfaceMethod org/hibernate/Transaction.isActive:()Z
     656: ifeq          671
     659: aload         4
     661: invokeinterface #103,  1          // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
     666: invokeinterface #116,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
     671: aload         4
     673: invokestatic  #117                // Method org/springframework/orm/hibernate4/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     676: aload_3
     677: aconst_null
     678: invokevirtual #48                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate4/SessionHolder;)V
     681: goto          727
     684: astore        6
     686: aload_0
     687: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     690: ldc           #118                // String Could not rollback Session after failed transaction begin
     692: aload         5
     694: invokeinterface #119,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     699: aload         4
     701: invokestatic  #117                // Method org/springframework/orm/hibernate4/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     704: aload_3
     705: aconst_null
     706: invokevirtual #48                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate4/SessionHolder;)V
     709: goto          727
     712: astore        9
     714: aload         4
     716: invokestatic  #117                // Method org/springframework/orm/hibernate4/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     719: aload_3
     720: aconst_null
     721: invokevirtual #48                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate4/SessionHolder;)V
     724: aload         9
     726: athrow
     727: new           #120                // class org/springframework/transaction/CannotCreateTransactionException
     730: dup
     731: ldc           #121                // String Could not open Hibernate Session for transaction
     733: aload         5
     735: invokespecial #122                // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     738: athrow
     739: return
    Exception table:
       from    to  target type
          35   632   635   Class java/lang/Throwable
         644   671   684   Class java/lang/Throwable
         644   671   712   any
         684   699   712   any
         712   714   712   any

  protected java.lang.Object doSuspend(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: aconst_null
       7: invokevirtual #48                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setSessionHolder:(Lorg/springframework/orm/hibernate4/SessionHolder;)V
      10: aload_0
      11: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      14: invokestatic  #123                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #42                 // class org/springframework/orm/hibernate4/SessionHolder
      20: astore_3
      21: aload_2
      22: aconst_null
      23: invokevirtual #58                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setConnectionHolder:(Lorg/springframework/jdbc/datasource/ConnectionHolder;)V
      26: aconst_null
      27: astore        4
      29: aload_0
      30: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      33: ifnull        48
      36: aload_0
      37: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      40: invokestatic  #123                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #57                 // class org/springframework/jdbc/datasource/ConnectionHolder
      46: astore        4
      48: new           #124                // class org/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder
      51: dup
      52: aload_3
      53: aload         4
      55: aconst_null
      56: invokespecial #125                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder."<init>":(Lorg/springframework/orm/hibernate4/SessionHolder;Lorg/springframework/jdbc/datasource/ConnectionHolder;Lorg/springframework/orm/hibernate4/HibernateTransactionManager$1;)V
      59: areturn

  protected void doResume(java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: checkcast     #124                // class org/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder
       4: astore_3
       5: aload_0
       6: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
       9: invokestatic  #126                // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
      12: ifeq          23
      15: aload_0
      16: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      19: invokestatic  #123                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      27: aload_3
      28: invokestatic  #127                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder.access$200:(Lorg/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/orm/hibernate4/SessionHolder;
      31: invokestatic  #111                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      34: aload_0
      35: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      38: ifnull        52
      41: aload_0
      42: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      45: aload_3
      46: invokestatic  #128                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder.access$300:(Lorg/springframework/orm/hibernate4/HibernateTransactionManager$SuspendedResourcesHolder;)Lorg/springframework/jdbc/datasource/ConnectionHolder;
      49: invokestatic  #111                // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      52: return

  protected void doCommit(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #130                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          54
      15: aload_0
      16: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #28                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #131                // String Committing Hibernate transaction on Session [
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      35: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #78                 // String ]
      43: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: aload_2
      55: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      58: invokevirtual #132                // Method org/springframework/orm/hibernate4/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      61: invokeinterface #133,  1          // InterfaceMethod org/hibernate/Transaction.commit:()V
      66: goto          88
      69: astore_3
      70: new           #135                // class org/springframework/transaction/TransactionSystemException
      73: dup
      74: ldc           #136                // String Could not commit Hibernate transaction
      76: aload_3
      77: invokespecial #137                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
      81: astore_3
      82: aload_0
      83: aload_3
      84: invokevirtual #138                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      87: athrow
      88: return
    Exception table:
       from    to  target type
          54    66    69   Class org/hibernate/TransactionException
          54    66    81   Class org/hibernate/HibernateException

  protected void doRollback(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #130                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          54
      15: aload_0
      16: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #28                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #139                // String Rolling back Hibernate transaction on Session [
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      35: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #78                 // String ]
      43: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: aload_2
      55: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      58: invokevirtual #132                // Method org/springframework/orm/hibernate4/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      61: invokeinterface #116,  1          // InterfaceMethod org/hibernate/Transaction.rollback:()V
      66: aload_2
      67: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
      70: ifne          145
      73: aload_0
      74: getfield      #5                  // Field hibernateManagedSession:Z
      77: ifne          145
      80: aload_2
      81: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      84: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      87: invokeinterface #140,  1          // InterfaceMethod org/hibernate/Session.clear:()V
      92: goto          145
      95: astore_3
      96: new           #135                // class org/springframework/transaction/TransactionSystemException
      99: dup
     100: ldc           #141                // String Could not roll back Hibernate transaction
     102: aload_3
     103: invokespecial #137                // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: athrow
     107: astore_3
     108: aload_0
     109: aload_3
     110: invokevirtual #138                // Method convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
     113: athrow
     114: astore        4
     116: aload_2
     117: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     120: ifne          142
     123: aload_0
     124: getfield      #5                  // Field hibernateManagedSession:Z
     127: ifne          142
     130: aload_2
     131: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     134: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
     137: invokeinterface #140,  1          // InterfaceMethod org/hibernate/Session.clear:()V
     142: aload         4
     144: athrow
     145: return
    Exception table:
       from    to  target type
          54    66    95   Class org/hibernate/TransactionException
          54    66   107   Class org/hibernate/HibernateException
          54    66   114   any
          95   116   114   any

  protected void doSetRollbackOnly(org.springframework.transaction.support.DefaultTransactionStatus);
    Code:
       0: aload_1
       1: invokevirtual #129                // Method org/springframework/transaction/support/DefaultTransactionStatus.getTransaction:()Ljava/lang/Object;
       4: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       7: astore_2
       8: aload_1
       9: invokevirtual #130                // Method org/springframework/transaction/support/DefaultTransactionStatus.isDebug:()Z
      12: ifeq          54
      15: aload_0
      16: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #28                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #142                // String Setting Hibernate transaction on Session [
      28: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_2
      32: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      35: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      38: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: ldc           #143                // String ] rollback-only
      43: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      54: aload_2
      55: invokevirtual #144                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.setRollbackOnly:()V
      58: return

  protected void doCleanupAfterCompletion(java.lang.Object);
    Code:
       0: aload_1
       1: checkcast     #37                 // class org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject
       4: astore_2
       5: aload_2
       6: invokevirtual #112                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSessionHolder:()Z
       9: ifeq          20
      12: aload_0
      13: invokevirtual #19                 // Method getSessionFactory:()Lorg/hibernate/SessionFactory;
      16: invokestatic  #123                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: aload_0
      21: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      24: ifnull        35
      27: aload_0
      28: invokevirtual #24                 // Method getDataSource:()Ljavax/sql/DataSource;
      31: invokestatic  #123                // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      34: pop
      35: aload_2
      36: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
      39: invokevirtual #45                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      42: astore_3
      43: aload_0
      44: getfield      #3                  // Field prepareConnection:Z
      47: ifeq          146
      50: aload_3
      51: invokeinterface #145,  1          // InterfaceMethod org/hibernate/Session.isConnected:()Z
      56: ifeq          146
      59: aload_0
      60: aload_3
      61: invokevirtual #76                 // Method isSameConnectionForEntireSession:(Lorg/hibernate/Session;)Z
      64: ifeq          146
      67: aload_3
      68: checkcast     #79                 // class org/hibernate/engine/spi/SessionImplementor
      71: invokeinterface #80,  1           // InterfaceMethod org/hibernate/engine/spi/SessionImplementor.connection:()Ljava/sql/Connection;
      76: astore        4
      78: aload_2
      79: invokevirtual #146                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getPreviousHoldability:()Ljava/lang/Integer;
      82: astore        5
      84: aload         5
      86: ifnull        101
      89: aload         4
      91: aload         5
      93: invokevirtual #147                // Method java/lang/Integer.intValue:()I
      96: invokeinterface #88,  2           // InterfaceMethod java/sql/Connection.setHoldability:(I)V
     101: aload         4
     103: aload_2
     104: invokevirtual #148                // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getPreviousIsolationLevel:()Ljava/lang/Integer;
     107: invokestatic  #149                // Method org/springframework/jdbc/datasource/DataSourceUtils.resetConnectionAfterTransaction:(Ljava/sql/Connection;Ljava/lang/Integer;)V
     110: goto          146
     113: astore        4
     115: aload_0
     116: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     119: ldc           #150                // String Could not access JDBC Connection of Hibernate Session
     121: aload         4
     123: invokeinterface #119,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     128: goto          146
     131: astore        4
     133: aload_0
     134: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     137: ldc           #151                // String Could not reset JDBC Connection after transaction
     139: aload         4
     141: invokeinterface #119,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     146: aload_2
     147: invokevirtual #83                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.isNewSession:()Z
     150: ifeq          205
     153: aload_0
     154: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     157: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     162: ifeq          198
     165: aload_0
     166: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     169: new           #28                 // class java/lang/StringBuilder
     172: dup
     173: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     176: ldc           #152                // String Closing Hibernate Session [
     178: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     181: aload_3
     182: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     185: ldc           #153                // String ] after transaction
     187: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     190: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     198: aload_3
     199: invokestatic  #117                // Method org/springframework/orm/hibernate4/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
     202: goto          292
     205: aload_0
     206: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     209: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     214: ifeq          250
     217: aload_0
     218: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     221: new           #28                 // class java/lang/StringBuilder
     224: dup
     225: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     228: ldc           #154                // String Not closing pre-bound Hibernate Session [
     230: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     233: aload_3
     234: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     237: ldc           #153                // String ] after transaction
     239: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     245: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     250: aload_2
     251: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     254: invokevirtual #155                // Method org/springframework/orm/hibernate4/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     257: ifnull        273
     260: aload_3
     261: aload_2
     262: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     265: invokevirtual #155                // Method org/springframework/orm/hibernate4/SessionHolder.getPreviousFlushMode:()Lorg/hibernate/FlushMode;
     268: invokeinterface #97,  2           // InterfaceMethod org/hibernate/Session.setFlushMode:(Lorg/hibernate/FlushMode;)V
     273: aload_0
     274: getfield      #4                  // Field allowResultAccessAfterCompletion:Z
     277: ifne          292
     280: aload_0
     281: getfield      #5                  // Field hibernateManagedSession:Z
     284: ifne          292
     287: aload_0
     288: aload_3
     289: invokevirtual #156                // Method disconnectOnCompletion:(Lorg/hibernate/Session;)V
     292: aload_2
     293: invokevirtual #67                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager$HibernateTransactionObject.getSessionHolder:()Lorg/springframework/orm/hibernate4/SessionHolder;
     296: invokevirtual #157                // Method org/springframework/orm/hibernate4/SessionHolder.clear:()V
     299: return
    Exception table:
       from    to  target type
          67   110   113   Class org/hibernate/HibernateException
          67   110   131   Class java/lang/Throwable

  protected void disconnectOnCompletion(org.hibernate.Session);
    Code:
       0: aload_1
       1: invokeinterface #158,  1          // InterfaceMethod org/hibernate/Session.disconnect:()Ljava/sql/Connection;
       6: pop
       7: return

  protected boolean isSameConnectionForEntireSession(org.hibernate.Session);
    Code:
       0: aload_1
       1: instanceof    #159                // class org/hibernate/engine/transaction/spi/TransactionContext
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_1
      10: checkcast     #159                // class org/hibernate/engine/transaction/spi/TransactionContext
      13: invokeinterface #160,  1          // InterfaceMethod org/hibernate/engine/transaction/spi/TransactionContext.getConnectionReleaseMode:()Lorg/hibernate/ConnectionReleaseMode;
      18: astore_2
      19: getstatic     #161                // Field org/hibernate/ConnectionReleaseMode.ON_CLOSE:Lorg/hibernate/ConnectionReleaseMode;
      22: aload_2
      23: invokevirtual #162                // Method org/hibernate/ConnectionReleaseMode.equals:(Ljava/lang/Object;)Z
      26: ireturn

  protected org.springframework.dao.DataAccessException convertHibernateAccessException(org.hibernate.HibernateException);
    Code:
       0: aload_1
       1: invokestatic  #163                // Method org/springframework/orm/hibernate4/SessionFactoryUtils.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
       4: areturn
}
