Compiled from "HibernateTransactionManager.java"
class org.springframework.orm.hibernate4.HibernateTransactionManager$HibernateTransactionObject extends org.springframework.jdbc.datasource.JdbcTransactionObjectSupport {
  private org.springframework.orm.hibernate4.SessionHolder sessionHolder;

  private boolean newSessionHolder;

  private boolean newSession;

  private java.lang.Integer previousHoldability;

  final org.springframework.orm.hibernate4.HibernateTransactionManager this$0;

  private org.springframework.orm.hibernate4.HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate4.HibernateTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/orm/hibernate4/HibernateTransactionManager;
       5: aload_0
       6: invokespecial #3                  // Method org/springframework/jdbc/datasource/JdbcTransactionObjectSupport."<init>":()V
       9: return

  public void setSession(org.hibernate.Session);
    Code:
       0: aload_0
       1: new           #4                  // class org/springframework/orm/hibernate4/SessionHolder
       4: dup
       5: aload_1
       6: invokespecial #5                  // Method org/springframework/orm/hibernate4/SessionHolder."<init>":(Lorg/hibernate/Session;)V
       9: putfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
      12: aload_0
      13: iconst_1
      14: putfield      #7                  // Field newSessionHolder:Z
      17: aload_0
      18: iconst_1
      19: putfield      #8                  // Field newSession:Z
      22: return

  public void setExistingSession(org.hibernate.Session);
    Code:
       0: aload_0
       1: new           #4                  // class org/springframework/orm/hibernate4/SessionHolder
       4: dup
       5: aload_1
       6: invokespecial #5                  // Method org/springframework/orm/hibernate4/SessionHolder."<init>":(Lorg/hibernate/Session;)V
       9: putfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
      12: aload_0
      13: iconst_1
      14: putfield      #7                  // Field newSessionHolder:Z
      17: aload_0
      18: iconst_0
      19: putfield      #8                  // Field newSession:Z
      22: return

  public void setSessionHolder(org.springframework.orm.hibernate4.SessionHolder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       5: aload_0
       6: iconst_0
       7: putfield      #7                  // Field newSessionHolder:Z
      10: aload_0
      11: iconst_0
      12: putfield      #8                  // Field newSession:Z
      15: return

  public org.springframework.orm.hibernate4.SessionHolder getSessionHolder();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: areturn

  public boolean isNewSessionHolder();
    Code:
       0: aload_0
       1: getfield      #7                  // Field newSessionHolder:Z
       4: ireturn

  public boolean isNewSession();
    Code:
       0: aload_0
       1: getfield      #8                  // Field newSession:Z
       4: ireturn

  public void setPreviousHoldability(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field previousHoldability:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getPreviousHoldability();
    Code:
       0: aload_0
       1: getfield      #9                  // Field previousHoldability:Ljava/lang/Integer;
       4: areturn

  public boolean hasSpringManagedTransaction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: ifnull        21
       7: aload_0
       8: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
      11: invokevirtual #10                 // Method org/springframework/orm/hibernate4/SessionHolder.getTransaction:()Lorg/hibernate/Transaction;
      14: ifnull        21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean hasHibernateManagedTransaction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: ifnull        31
       7: aload_0
       8: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
      11: invokevirtual #11                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
      14: invokeinterface #12,  1           // InterfaceMethod org/hibernate/Session.getTransaction:()Lorg/hibernate/Transaction;
      19: invokeinterface #13,  1           // InterfaceMethod org/hibernate/Transaction.isActive:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public void setRollbackOnly();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: invokevirtual #14                 // Method org/springframework/orm/hibernate4/SessionHolder.setRollbackOnly:()V
       7: aload_0
       8: invokevirtual #15                 // Method hasConnectionHolder:()Z
      11: ifeq          21
      14: aload_0
      15: invokevirtual #16                 // Method getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      18: invokevirtual #17                 // Method org/springframework/jdbc/datasource/ConnectionHolder.setRollbackOnly:()V
      21: return

  public boolean isRollbackOnly();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: invokevirtual #18                 // Method org/springframework/orm/hibernate4/SessionHolder.isRollbackOnly:()Z
       7: ifne          27
      10: aload_0
      11: invokevirtual #15                 // Method hasConnectionHolder:()Z
      14: ifeq          31
      17: aload_0
      18: invokevirtual #16                 // Method getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      21: invokevirtual #19                 // Method org/springframework/jdbc/datasource/ConnectionHolder.isRollbackOnly:()Z
      24: ifeq          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public void flush();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sessionHolder:Lorg/springframework/orm/hibernate4/SessionHolder;
       4: invokevirtual #11                 // Method org/springframework/orm/hibernate4/SessionHolder.getSession:()Lorg/hibernate/Session;
       7: invokeinterface #20,  1           // InterfaceMethod org/hibernate/Session.flush:()V
      12: goto          25
      15: astore_1
      16: aload_0
      17: getfield      #2                  // Field this$0:Lorg/springframework/orm/hibernate4/HibernateTransactionManager;
      20: aload_1
      21: invokevirtual #22                 // Method org/springframework/orm/hibernate4/HibernateTransactionManager.convertHibernateAccessException:(Lorg/hibernate/HibernateException;)Lorg/springframework/dao/DataAccessException;
      24: athrow
      25: return
    Exception table:
       from    to  target type
           0    12    15   Class org/hibernate/HibernateException

  org.springframework.orm.hibernate4.HibernateTransactionManager$HibernateTransactionObject(org.springframework.orm.hibernate4.HibernateTransactionManager, org.springframework.orm.hibernate4.HibernateTransactionManager$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/orm/hibernate4/HibernateTransactionManager;)V
       5: return
}
