Compiled from "AsyncRequestInterceptor.java"
class org.springframework.orm.hibernate5.support.AsyncRequestInterceptor extends org.springframework.web.context.request.async.CallableProcessingInterceptorAdapter implements org.springframework.web.context.request.async.DeferredResultProcessingInterceptor {
  private static final org.apache.commons.logging.Log logger;

  private final org.hibernate.SessionFactory sessionFactory;

  private final org.springframework.orm.hibernate5.SessionHolder sessionHolder;

  private volatile boolean timeoutInProgress;

  public org.springframework.orm.hibernate5.support.AsyncRequestInterceptor(org.hibernate.SessionFactory, org.springframework.orm.hibernate5.SessionHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/web/context/request/async/CallableProcessingInterceptorAdapter."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      14: return

  public <T> void preProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method bindSession:()V
       4: return

  public void bindSession();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: aload_0
       6: getfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       9: aload_0
      10: getfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      13: invokestatic  #6                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      16: return

  public <T> void postProcess(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field sessionFactory:Lorg/hibernate/SessionFactory;
       4: invokestatic  #7                  // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
       7: pop
       8: return

  public <T> java.lang.Object handleTimeout(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: getstatic     #8                  // Field RESULT_NONE:Ljava/lang/Object;
       8: areturn

  public <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, java.util.concurrent.Callable<T>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method closeAfterTimeout:()V
       4: return

  private void closeAfterTimeout();
    Code:
       0: aload_0
       1: getfield      #5                  // Field timeoutInProgress:Z
       4: ifeq          27
       7: getstatic     #10                 // Field logger:Lorg/apache/commons/logging/Log;
      10: ldc           #11                 // String Closing Hibernate Session after async request timeout
      12: invokeinterface #12,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #3                  // Field sessionHolder:Lorg/springframework/orm/hibernate5/SessionHolder;
      21: invokevirtual #13                 // Method org/springframework/orm/hibernate5/SessionHolder.getSession:()Lorg/hibernate/Session;
      24: invokestatic  #14                 // Method org/springframework/orm/hibernate5/SessionFactoryUtils.closeSession:(Lorg/hibernate/Session;)V
      27: return

  public <T> void beforeConcurrentHandling(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: return

  public <T> void preProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: return

  public <T> void postProcess(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>, java.lang.Object);
    Code:
       0: return

  public <T> boolean handleTimeout(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #5                  // Field timeoutInProgress:Z
       5: iconst_1
       6: ireturn

  public <T> void afterCompletion(org.springframework.web.context.request.NativeWebRequest, org.springframework.web.context.request.async.DeferredResult<T>);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method closeAfterTimeout:()V
       4: return

  static {};
    Code:
       0: ldc           #15                 // class org/springframework/orm/hibernate5/support/AsyncRequestInterceptor
       2: invokestatic  #16                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #10                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
