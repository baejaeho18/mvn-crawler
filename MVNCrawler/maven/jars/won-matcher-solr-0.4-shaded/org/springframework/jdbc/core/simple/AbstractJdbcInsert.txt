Compiled from "AbstractJdbcInsert.java"
public abstract class org.springframework.jdbc.core.simple.AbstractJdbcInsert {
  protected final org.apache.commons.logging.Log logger;

  private final org.springframework.jdbc.core.JdbcTemplate jdbcTemplate;

  private final org.springframework.jdbc.core.metadata.TableMetaDataContext tableMetaDataContext;

  private final java.util.List<java.lang.String> declaredColumns;

  private java.lang.String[] generatedKeyNames;

  private volatile boolean compiled;

  private java.lang.String insertString;

  private int[] insertTypes;

  protected org.springframework.jdbc.core.simple.AbstractJdbcInsert(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #7                  // class org/springframework/jdbc/core/metadata/TableMetaDataContext
      19: dup
      20: invokespecial #8                  // Method org/springframework/jdbc/core/metadata/TableMetaDataContext."<init>":()V
      23: putfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      26: aload_0
      27: new           #10                 // class java/util/ArrayList
      30: dup
      31: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #12                 // Field declaredColumns:Ljava/util/List;
      37: aload_0
      38: iconst_0
      39: anewarray     #13                 // class java/lang/String
      42: putfield      #14                 // Field generatedKeyNames:[Ljava/lang/String;
      45: aload_0
      46: iconst_0
      47: putfield      #15                 // Field compiled:Z
      50: aload_0
      51: new           #16                 // class org/springframework/jdbc/core/JdbcTemplate
      54: dup
      55: aload_1
      56: invokespecial #17                 // Method org/springframework/jdbc/core/JdbcTemplate."<init>":(Ljavax/sql/DataSource;)V
      59: putfield      #18                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      62: return

  protected org.springframework.jdbc.core.simple.AbstractJdbcInsert(org.springframework.jdbc.core.JdbcTemplate);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #7                  // class org/springframework/jdbc/core/metadata/TableMetaDataContext
      19: dup
      20: invokespecial #8                  // Method org/springframework/jdbc/core/metadata/TableMetaDataContext."<init>":()V
      23: putfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      26: aload_0
      27: new           #10                 // class java/util/ArrayList
      30: dup
      31: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      34: putfield      #12                 // Field declaredColumns:Ljava/util/List;
      37: aload_0
      38: iconst_0
      39: anewarray     #13                 // class java/lang/String
      42: putfield      #14                 // Field generatedKeyNames:[Ljava/lang/String;
      45: aload_0
      46: iconst_0
      47: putfield      #15                 // Field compiled:Z
      50: aload_1
      51: ldc           #19                 // String JdbcTemplate must not be null
      53: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      56: aload_0
      57: aload_1
      58: putfield      #18                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      61: aload_0
      62: aload_1
      63: invokevirtual #21                 // Method org/springframework/jdbc/core/JdbcTemplate.getNativeJdbcExtractor:()Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;
      66: invokevirtual #22                 // Method setNativeJdbcExtractor:(Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;)V
      69: return

  public org.springframework.jdbc.core.JdbcTemplate getJdbcTemplate();
    Code:
       0: aload_0
       1: getfield      #18                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
       4: areturn

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #24                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setTableName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #25                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getTableName:()Ljava/lang/String;
       7: areturn

  public void setSchemaName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #26                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setSchemaName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getSchemaName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #27                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getSchemaName:()Ljava/lang/String;
       7: areturn

  public void setCatalogName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       8: aload_1
       9: invokevirtual #28                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setCatalogName:(Ljava/lang/String;)V
      12: return

  public java.lang.String getCatalogName();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: invokevirtual #29                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getCatalogName:()Ljava/lang/String;
       7: areturn

  public void setColumnNames(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: getfield      #12                 // Field declaredColumns:Ljava/util/List;
       8: invokeinterface #30,  1           // InterfaceMethod java/util/List.clear:()V
      13: aload_0
      14: getfield      #12                 // Field declaredColumns:Ljava/util/List;
      17: aload_1
      18: invokeinterface #31,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      23: pop
      24: return

  public java.util.List<java.lang.String> getColumnNames();
    Code:
       0: aload_0
       1: getfield      #12                 // Field declaredColumns:Ljava/util/List;
       4: invokestatic  #32                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public void setGeneratedKeyName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: iconst_1
       6: anewarray     #13                 // class java/lang/String
       9: dup
      10: iconst_0
      11: aload_1
      12: aastore
      13: putfield      #14                 // Field generatedKeyNames:[Ljava/lang/String;
      16: return

  public void setGeneratedKeyNames(java.lang.String...);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method checkIfConfigurationModificationIsAllowed:()V
       4: aload_0
       5: aload_1
       6: putfield      #14                 // Field generatedKeyNames:[Ljava/lang/String;
       9: return

  public java.lang.String[] getGeneratedKeyNames();
    Code:
       0: aload_0
       1: getfield      #14                 // Field generatedKeyNames:[Ljava/lang/String;
       4: areturn

  public void setAccessTableColumnMetaData(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: iload_1
       5: invokevirtual #33                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setAccessTableColumnMetaData:(Z)V
       8: return

  public void setOverrideIncludeSynonymsDefault(boolean);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: iload_1
       5: invokevirtual #34                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setOverrideIncludeSynonymsDefault:(Z)V
       8: return

  public void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_1
       5: invokevirtual #35                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.setNativeJdbcExtractor:(Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;)V
       8: return

  public java.lang.String getInsertString();
    Code:
       0: aload_0
       1: getfield      #36                 // Field insertString:Ljava/lang/String;
       4: areturn

  public int[] getInsertTypes();
    Code:
       0: aload_0
       1: getfield      #37                 // Field insertTypes:[I
       4: areturn

  public final synchronized void compile() throws org.springframework.dao.InvalidDataAccessApiUsageException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method isCompiled:()Z
       4: ifne          104
       7: aload_0
       8: invokevirtual #39                 // Method getTableName:()Ljava/lang/String;
      11: ifnonnull     24
      14: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      17: dup
      18: ldc           #41                 // String Table name is required
      20: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: getfield      #18                 // Field jdbcTemplate:Lorg/springframework/jdbc/core/JdbcTemplate;
      28: invokevirtual #43                 // Method org/springframework/jdbc/core/JdbcTemplate.afterPropertiesSet:()V
      31: goto          47
      34: astore_1
      35: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      38: dup
      39: aload_1
      40: invokevirtual #45                 // Method java/lang/IllegalArgumentException.getMessage:()Ljava/lang/String;
      43: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_0
      48: invokevirtual #46                 // Method compileInternal:()V
      51: aload_0
      52: iconst_1
      53: putfield      #15                 // Field compiled:Z
      56: aload_0
      57: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      60: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      65: ifeq          104
      68: aload_0
      69: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      72: new           #48                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #50                 // String JdbcInsert for table [
      81: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_0
      85: invokevirtual #39                 // Method getTableName:()Ljava/lang/String;
      88: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #52                 // String ] compiled
      93: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     104: return
    Exception table:
       from    to  target type
          24    31    34   Class java/lang/IllegalArgumentException

  protected void compileInternal();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_0
       5: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
       8: invokevirtual #56                 // Method org/springframework/jdbc/core/JdbcTemplate.getDataSource:()Ljavax/sql/DataSource;
      11: aload_0
      12: invokevirtual #57                 // Method getColumnNames:()Ljava/util/List;
      15: aload_0
      16: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      19: invokevirtual #59                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.processMetaData:(Ljavax/sql/DataSource;Ljava/util/List;[Ljava/lang/String;)V
      22: aload_0
      23: aload_0
      24: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      27: aload_0
      28: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      31: invokevirtual #60                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.createInsertString:([Ljava/lang/String;)Ljava/lang/String;
      34: putfield      #36                 // Field insertString:Ljava/lang/String;
      37: aload_0
      38: aload_0
      39: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      42: invokevirtual #61                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.createInsertTypes:()[I
      45: putfield      #37                 // Field insertTypes:[I
      48: aload_0
      49: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      52: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      57: ifeq          96
      60: aload_0
      61: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      64: new           #48                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #62                 // String Compiled insert object: insert string is [
      73: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      80: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #64                 // String ]
      85: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      96: aload_0
      97: invokevirtual #65                 // Method onCompileInternal:()V
     100: return

  protected void onCompileInternal();
    Code:
       0: return

  public boolean isCompiled();
    Code:
       0: aload_0
       1: getfield      #15                 // Field compiled:Z
       4: ireturn

  protected void checkCompiled();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method isCompiled:()Z
       4: ifne          22
       7: aload_0
       8: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #66                 // String JdbcInsert not compiled before execution - invoking compile
      13: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      18: aload_0
      19: invokevirtual #67                 // Method compile:()V
      22: return

  protected void checkIfConfigurationModificationIsAllowed();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method isCompiled:()Z
       4: ifeq          17
       7: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      10: dup
      11: ldc           #68                 // String Configuration cannot be altered once the class has been compiled or used
      13: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  protected int doExecute(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #71                 // Method executeInsertInternal:(Ljava/util/List;)I
      15: ireturn

  protected int doExecute(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #72                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #71                 // Method executeInsertInternal:(Ljava/util/List;)I
      15: ireturn

  private int executeInsertInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          52
      12: aload_0
      13: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #48                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #73                 // String The following parameters are used for insert
      25: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #74                 // String  with:
      37: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_0
      53: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      56: aload_0
      57: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      60: aload_1
      61: invokeinterface #76,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
      66: aload_0
      67: invokevirtual #77                 // Method getInsertTypes:()[I
      70: invokevirtual #78                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Ljava/lang/String;[Ljava/lang/Object;[I)I
      73: ireturn

  protected java.lang.Number doExecuteAndReturnKey(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #79                 // Method executeInsertAndReturnKeyInternal:(Ljava/util/List;)Ljava/lang/Number;
      15: areturn

  protected java.lang.Number doExecuteAndReturnKey(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #72                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #79                 // Method executeInsertAndReturnKeyInternal:(Ljava/util/List;)Ljava/lang/Number;
      15: areturn

  protected org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #80                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
      15: areturn

  protected org.springframework.jdbc.support.KeyHolder doExecuteAndReturnKeyHolder(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #72                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokespecial #80                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
      15: areturn

  private java.lang.Number executeInsertAndReturnKeyInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method executeInsertAndReturnKeyHolderInternal:(Ljava/util/List;)Lorg/springframework/jdbc/support/KeyHolder;
       5: astore_2
       6: aload_2
       7: ifnull        26
      10: aload_2
      11: invokeinterface #81,  1           // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKey:()Ljava/lang/Number;
      16: ifnull        26
      19: aload_2
      20: invokeinterface #81,  1           // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKey:()Ljava/lang/Number;
      25: areturn
      26: new           #82                 // class org/springframework/dao/DataIntegrityViolationException
      29: dup
      30: new           #48                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #83                 // String Unable to retrieve the generated key for the insert:
      39: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_0
      43: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      46: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #84                 // Method org/springframework/dao/DataIntegrityViolationException."<init>":(Ljava/lang/String;)V
      55: athrow

  private org.springframework.jdbc.support.KeyHolder executeInsertAndReturnKeyHolderInternal(java.util.List<?>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          52
      12: aload_0
      13: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #48                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #85                 // String The following parameters are used for call
      25: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #74                 // String  with:
      37: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: new           #86                 // class org/springframework/jdbc/support/GeneratedKeyHolder
      55: dup
      56: invokespecial #87                 // Method org/springframework/jdbc/support/GeneratedKeyHolder."<init>":()V
      59: astore_2
      60: aload_0
      61: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      64: invokevirtual #88                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGetGeneratedKeysSupported:()Z
      67: ifeq          91
      70: aload_0
      71: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      74: new           #89                 // class org/springframework/jdbc/core/simple/AbstractJdbcInsert$1
      77: dup
      78: aload_0
      79: aload_1
      80: invokespecial #90                 // Method org/springframework/jdbc/core/simple/AbstractJdbcInsert$1."<init>":(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;)V
      83: aload_2
      84: invokevirtual #91                 // Method org/springframework/jdbc/core/JdbcTemplate.update:(Lorg/springframework/jdbc/core/PreparedStatementCreator;Lorg/springframework/jdbc/support/KeyHolder;)I
      87: pop
      88: goto          332
      91: aload_0
      92: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      95: invokevirtual #92                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGetGeneratedKeysSimulated:()Z
      98: ifne          111
     101: new           #93                 // class org/springframework/dao/InvalidDataAccessResourceUsageException
     104: dup
     105: ldc           #94                 // String The getGeneratedKeys feature is not supported by this database
     107: invokespecial #95                 // Method org/springframework/dao/InvalidDataAccessResourceUsageException."<init>":(Ljava/lang/String;)V
     110: athrow
     111: aload_0
     112: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     115: arraylength
     116: iconst_1
     117: if_icmpge     130
     120: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     123: dup
     124: ldc           #96                 // String Generated Key Name(s) not specified. Using the generated keys features requires specifying the name(s) of the generated column(s)
     126: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload_0
     131: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     134: arraylength
     135: iconst_1
     136: if_icmple     185
     139: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     142: dup
     143: new           #48                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     150: ldc           #97                 // String Current database only supports retrieving the key for a single column. There are
     152: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     155: aload_0
     156: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     159: arraylength
     160: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: ldc           #99                 // String  columns specified:
     165: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_0
     169: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     172: invokestatic  #100                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     175: invokevirtual #75                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     178: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
     184: athrow
     185: aload_0
     186: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
     189: aload_0
     190: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
     193: invokevirtual #25                 // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getTableName:()Ljava/lang/String;
     196: aload_0
     197: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     200: iconst_0
     201: aaload
     202: invokevirtual #101                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.getSimpleQueryForGetGeneratedKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     205: astore_3
     206: aload_3
     207: ldc           #102                // String Query for simulating get generated keys can\'t be null
     209: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     212: aload_3
     213: invokevirtual #103                // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     216: ldc           #104                // String RETURNING
     218: invokevirtual #105                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     221: ifeq          313
     224: aload_0
     225: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     228: new           #48                 // class java/lang/StringBuilder
     231: dup
     232: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
     235: aload_0
     236: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
     239: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     242: ldc           #106                // String
     244: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: aload_3
     248: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     251: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     254: aload_1
     255: invokeinterface #76,  1           // InterfaceMethod java/util/List.toArray:()[Ljava/lang/Object;
     260: ldc           #107                // class java/lang/Long
     262: invokevirtual #108                // Method org/springframework/jdbc/core/JdbcTemplate.queryForObject:(Ljava/lang/String;[Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     265: checkcast     #107                // class java/lang/Long
     268: astore        4
     270: new           #109                // class java/util/HashMap
     273: dup
     274: iconst_1
     275: invokespecial #110                // Method java/util/HashMap."<init>":(I)V
     278: astore        5
     280: aload         5
     282: aload_0
     283: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
     286: iconst_0
     287: aaload
     288: aload         4
     290: invokeinterface #111,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     295: pop
     296: aload_2
     297: invokeinterface #112,  1          // InterfaceMethod org/springframework/jdbc/support/KeyHolder.getKeyList:()Ljava/util/List;
     302: aload         5
     304: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     309: pop
     310: goto          332
     313: aload_0
     314: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
     317: new           #114                // class org/springframework/jdbc/core/simple/AbstractJdbcInsert$2
     320: dup
     321: aload_0
     322: aload_1
     323: aload_3
     324: aload_2
     325: invokespecial #115                // Method org/springframework/jdbc/core/simple/AbstractJdbcInsert$2."<init>":(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;Ljava/lang/String;Lorg/springframework/jdbc/support/KeyHolder;)V
     328: invokevirtual #116                // Method org/springframework/jdbc/core/JdbcTemplate.execute:(Lorg/springframework/jdbc/core/ConnectionCallback;)Ljava/lang/Object;
     331: pop
     332: aload_2
     333: areturn

  private java.sql.PreparedStatement prepareStatementForGeneratedKeys(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
       4: arraylength
       5: iconst_1
       6: if_icmpge     19
       9: new           #40                 // class org/springframework/dao/InvalidDataAccessApiUsageException
      12: dup
      13: ldc           #117                // String Generated Key Name(s) not specified. Using the generated keys features requires specifying the name(s) of the generated column(s).
      15: invokespecial #42                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
      23: invokevirtual #118                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.isGeneratedKeysColumnNameArraySupported:()Z
      26: ifeq          70
      29: aload_0
      30: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      33: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      38: ifeq          52
      41: aload_0
      42: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #119                // String Using generated keys support with array of column names.
      47: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      52: aload_1
      53: aload_0
      54: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      57: aload_0
      58: invokevirtual #58                 // Method getGeneratedKeyNames:()[Ljava/lang/String;
      61: invokeinterface #120,  3          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
      66: astore_2
      67: goto          105
      70: aload_0
      71: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      74: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      79: ifeq          93
      82: aload_0
      83: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      86: ldc           #121                // String Using generated keys support with Statement.RETURN_GENERATED_KEYS.
      88: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      93: aload_1
      94: aload_0
      95: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      98: iconst_1
      99: invokeinterface #123,  3          // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;I)Ljava/sql/PreparedStatement;
     104: astore_2
     105: aload_2
     106: areturn

  protected int[] doExecuteBatch(java.util.Map<java.lang.String, ?>...);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: new           #10                 // class java/util/ArrayList
       7: dup
       8: aload_1
       9: arraylength
      10: invokespecial #124                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     55
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: aload_0
      38: aload         6
      40: invokevirtual #70                 // Method matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
      43: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: iinc          5, 1
      52: goto          23
      55: aload_0
      56: aload_2
      57: invokespecial #125                // Method executeBatchInternal:(Ljava/util/List;)[I
      60: areturn

  protected int[] doExecuteBatch(org.springframework.jdbc.core.namedparam.SqlParameterSource...);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method checkCompiled:()V
       4: new           #10                 // class java/util/ArrayList
       7: dup
       8: aload_1
       9: arraylength
      10: invokespecial #124                // Method java/util/ArrayList."<init>":(I)V
      13: astore_2
      14: aload_1
      15: astore_3
      16: aload_3
      17: arraylength
      18: istore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload         4
      27: if_icmpge     55
      30: aload_3
      31: iload         5
      33: aaload
      34: astore        6
      36: aload_2
      37: aload_0
      38: aload         6
      40: invokevirtual #72                 // Method matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
      43: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      48: pop
      49: iinc          5, 1
      52: goto          23
      55: aload_0
      56: aload_2
      57: invokespecial #125                // Method executeBatchInternal:(Ljava/util/List;)[I
      60: areturn

  private int[] executeBatchInternal(java.util.List<java.util.List<java.lang.Object>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          57
      12: aload_0
      13: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #48                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #49                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #126                // String Executing statement
      25: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      32: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #127                // String  with batch of size:
      37: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_1
      41: invokeinterface #128,  1          // InterfaceMethod java/util/List.size:()I
      46: invokevirtual #98                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: invokevirtual #53                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #54,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      57: aload_0
      58: invokevirtual #55                 // Method getJdbcTemplate:()Lorg/springframework/jdbc/core/JdbcTemplate;
      61: aload_0
      62: invokevirtual #63                 // Method getInsertString:()Ljava/lang/String;
      65: new           #129                // class org/springframework/jdbc/core/simple/AbstractJdbcInsert$3
      68: dup
      69: aload_0
      70: aload_1
      71: invokespecial #130                // Method org/springframework/jdbc/core/simple/AbstractJdbcInsert$3."<init>":(Lorg/springframework/jdbc/core/simple/AbstractJdbcInsert;Ljava/util/List;)V
      74: invokevirtual #131                // Method org/springframework/jdbc/core/JdbcTemplate.batchUpdate:(Ljava/lang/String;Lorg/springframework/jdbc/core/BatchPreparedStatementSetter;)[I
      77: areturn

  private void setParameterValues(java.sql.PreparedStatement, java.util.List<?>, int...) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: invokeinterface #132,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #133,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          74
      21: aload         5
      23: invokeinterface #134,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore        6
      30: iinc          4, 1
      33: aload_3
      34: ifnull        44
      37: iload         4
      39: aload_3
      40: arraylength
      41: if_icmple     57
      44: aload_1
      45: iload         4
      47: ldc           #136                // int -2147483648
      49: aload         6
      51: invokestatic  #137                // Method org/springframework/jdbc/core/StatementCreatorUtils.setParameterValue:(Ljava/sql/PreparedStatement;IILjava/lang/Object;)V
      54: goto          71
      57: aload_1
      58: iload         4
      60: aload_3
      61: iload         4
      63: iconst_1
      64: isub
      65: iaload
      66: aload         6
      68: invokestatic  #137                // Method org/springframework/jdbc/core/StatementCreatorUtils.setParameterValue:(Ljava/sql/PreparedStatement;IILjava/lang/Object;)V
      71: goto          11
      74: return

  protected java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_1
       5: invokevirtual #138                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.matchInParameterValuesWithInsertColumns:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/List;
       8: areturn

  protected java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tableMetaDataContext:Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;
       4: aload_1
       5: invokevirtual #139                // Method org/springframework/jdbc/core/metadata/TableMetaDataContext.matchInParameterValuesWithInsertColumns:(Ljava/util/Map;)Ljava/util/List;
       8: areturn

  static java.sql.PreparedStatement access$000(org.springframework.jdbc.core.simple.AbstractJdbcInsert, java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method prepareStatementForGeneratedKeys:(Ljava/sql/Connection;)Ljava/sql/PreparedStatement;
       5: areturn

  static void access$100(org.springframework.jdbc.core.simple.AbstractJdbcInsert, java.sql.PreparedStatement, java.util.List, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method setParameterValues:(Ljava/sql/PreparedStatement;Ljava/util/List;[I)V
       7: return
}
