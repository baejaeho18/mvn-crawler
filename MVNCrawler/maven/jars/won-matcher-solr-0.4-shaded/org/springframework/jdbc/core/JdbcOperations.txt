Compiled from "JdbcOperations.java"
public interface org.springframework.jdbc.core.JdbcOperations {
  public abstract <T> T execute(org.springframework.jdbc.core.ConnectionCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T execute(org.springframework.jdbc.core.StatementCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract void execute(java.lang.String) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(java.lang.String, org.springframework.jdbc.core.ResultSetExtractor<T>) throws org.springframework.dao.DataAccessException;

  public abstract void query(java.lang.String, org.springframework.jdbc.core.RowCallbackHandler) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(java.lang.String, org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract java.util.Map<java.lang.String, java.lang.Object> queryForMap(java.lang.String) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> queryForList(java.lang.String, java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract java.util.List<java.util.Map<java.lang.String, java.lang.Object>> queryForList(java.lang.String) throws org.springframework.dao.DataAccessException;

  public abstract org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String) throws org.springframework.dao.DataAccessException;

  public abstract int update(java.lang.String) throws org.springframework.dao.DataAccessException;

  public abstract int[] batchUpdate(java.lang.String...) throws org.springframework.dao.DataAccessException;

  public abstract <T> T execute(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.PreparedStatementCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T execute(java.lang.String, org.springframework.jdbc.core.PreparedStatementCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.ResultSetExtractor<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.ResultSetExtractor<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(java.lang.String, java.lang.Object[], int[], org.springframework.jdbc.core.ResultSetExtractor<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(java.lang.String, java.lang.Object[], org.springframework.jdbc.core.ResultSetExtractor<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T query(java.lang.String, org.springframework.jdbc.core.ResultSetExtractor<T>, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract void query(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.RowCallbackHandler) throws org.springframework.dao.DataAccessException;

  public abstract void query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.RowCallbackHandler) throws org.springframework.dao.DataAccessException;

  public abstract void query(java.lang.String, java.lang.Object[], int[], org.springframework.jdbc.core.RowCallbackHandler) throws org.springframework.dao.DataAccessException;

  public abstract void query(java.lang.String, java.lang.Object[], org.springframework.jdbc.core.RowCallbackHandler) throws org.springframework.dao.DataAccessException;

  public abstract void query(java.lang.String, org.springframework.jdbc.core.RowCallbackHandler, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter, org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(java.lang.String, java.lang.Object[], int[], org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(java.lang.String, java.lang.Object[], org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> query(java.lang.String, org.springframework.jdbc.core.RowMapper<T>, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Object[], int[], org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Object[], org.springframework.jdbc.core.RowMapper<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, org.springframework.jdbc.core.RowMapper<T>, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Object[], int[], java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Object[], java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T queryForObject(java.lang.String, java.lang.Class<T>, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract java.util.Map<java.lang.String, java.lang.Object> queryForMap(java.lang.String, java.lang.Object[], int[]) throws org.springframework.dao.DataAccessException;

  public abstract java.util.Map<java.lang.String, java.lang.Object> queryForMap(java.lang.String, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> queryForList(java.lang.String, java.lang.Object[], int[], java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> queryForList(java.lang.String, java.lang.Object[], java.lang.Class<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> java.util.List<T> queryForList(java.lang.String, java.lang.Class<T>, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract java.util.List<java.util.Map<java.lang.String, java.lang.Object>> queryForList(java.lang.String, java.lang.Object[], int[]) throws org.springframework.dao.DataAccessException;

  public abstract java.util.List<java.util.Map<java.lang.String, java.lang.Object>> queryForList(java.lang.String, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String, java.lang.Object[], int[]) throws org.springframework.dao.DataAccessException;

  public abstract org.springframework.jdbc.support.rowset.SqlRowSet queryForRowSet(java.lang.String, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract int update(org.springframework.jdbc.core.PreparedStatementCreator) throws org.springframework.dao.DataAccessException;

  public abstract int update(org.springframework.jdbc.core.PreparedStatementCreator, org.springframework.jdbc.support.KeyHolder) throws org.springframework.dao.DataAccessException;

  public abstract int update(java.lang.String, org.springframework.jdbc.core.PreparedStatementSetter) throws org.springframework.dao.DataAccessException;

  public abstract int update(java.lang.String, java.lang.Object[], int[]) throws org.springframework.dao.DataAccessException;

  public abstract int update(java.lang.String, java.lang.Object...) throws org.springframework.dao.DataAccessException;

  public abstract int[] batchUpdate(java.lang.String, org.springframework.jdbc.core.BatchPreparedStatementSetter) throws org.springframework.dao.DataAccessException;

  public abstract int[] batchUpdate(java.lang.String, java.util.List<java.lang.Object[]>) throws org.springframework.dao.DataAccessException;

  public abstract int[] batchUpdate(java.lang.String, java.util.List<java.lang.Object[]>, int[]) throws org.springframework.dao.DataAccessException;

  public abstract <T> int[][] batchUpdate(java.lang.String, java.util.Collection<T>, int, org.springframework.jdbc.core.ParameterizedPreparedStatementSetter<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T execute(org.springframework.jdbc.core.CallableStatementCreator, org.springframework.jdbc.core.CallableStatementCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract <T> T execute(java.lang.String, org.springframework.jdbc.core.CallableStatementCallback<T>) throws org.springframework.dao.DataAccessException;

  public abstract java.util.Map<java.lang.String, java.lang.Object> call(org.springframework.jdbc.core.CallableStatementCreator, java.util.List<org.springframework.jdbc.core.SqlParameter>) throws org.springframework.dao.DataAccessException;
}
