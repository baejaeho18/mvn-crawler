Compiled from "AbstractSqlParameterSource.java"
public abstract class org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource implements org.springframework.jdbc.core.namedparam.SqlParameterSource {
  private final java.util.Map<java.lang.String, java.lang.Integer> sqlTypes;

  private final java.util.Map<java.lang.String, java.lang.String> typeNames;

  public org.springframework.jdbc.core.namedparam.AbstractSqlParameterSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field sqlTypes:Ljava/util/Map;
      15: aload_0
      16: new           #2                  // class java/util/HashMap
      19: dup
      20: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      23: putfield      #5                  // Field typeNames:Ljava/util/Map;
      26: return

  public void registerSqlType(java.lang.String, int);
    Code:
       0: aload_1
       1: ldc           #6                  // String Parameter name must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field sqlTypes:Ljava/util/Map;
      10: aload_1
      11: iload_2
      12: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      20: pop
      21: return

  public void registerTypeName(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #6                  // String Parameter name must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field typeNames:Ljava/util/Map;
      10: aload_1
      11: aload_2
      12: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: pop
      18: return

  public int getSqlType(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #6                  // String Parameter name must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field sqlTypes:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #11                 // class java/lang/Integer
      19: astore_2
      20: aload_2
      21: ifnull        29
      24: aload_2
      25: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      28: ireturn
      29: ldc           #14                 // int -2147483648
      31: ireturn

  public java.lang.String getTypeName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #6                  // String Parameter name must not be null
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field typeNames:Ljava/util/Map;
      10: aload_1
      11: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #15                 // class java/lang/String
      19: areturn
}
