Compiled from "TableMetaDataContext.java"
public class org.springframework.jdbc.core.metadata.TableMetaDataContext {
  protected final org.apache.commons.logging.Log logger;

  private java.lang.String tableName;

  private java.lang.String catalogName;

  private java.lang.String schemaName;

  private java.util.List<java.lang.String> tableColumns;

  private boolean accessTableColumnMetaData;

  private boolean overrideIncludeSynonymsDefault;

  private org.springframework.jdbc.core.metadata.TableMetaDataProvider metaDataProvider;

  private boolean generatedKeyColumnsUsed;

  org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor nativeJdbcExtractor;

  public org.springframework.jdbc.core.metadata.TableMetaDataContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/ArrayList
      19: dup
      20: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #7                  // Field tableColumns:Ljava/util/List;
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field accessTableColumnMetaData:Z
      31: aload_0
      32: iconst_0
      33: putfield      #9                  // Field overrideIncludeSynonymsDefault:Z
      36: aload_0
      37: iconst_0
      38: putfield      #10                 // Field generatedKeyColumnsUsed:Z
      41: return

  public void setTableName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field tableName:Ljava/lang/String;
       5: return

  public java.lang.String getTableName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field tableName:Ljava/lang/String;
       4: areturn

  public void setCatalogName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field catalogName:Ljava/lang/String;
       5: return

  public java.lang.String getCatalogName();
    Code:
       0: aload_0
       1: getfield      #12                 // Field catalogName:Ljava/lang/String;
       4: areturn

  public void setSchemaName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field schemaName:Ljava/lang/String;
       5: return

  public java.lang.String getSchemaName();
    Code:
       0: aload_0
       1: getfield      #13                 // Field schemaName:Ljava/lang/String;
       4: areturn

  public void setAccessTableColumnMetaData(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field accessTableColumnMetaData:Z
       5: return

  public boolean isAccessTableColumnMetaData();
    Code:
       0: aload_0
       1: getfield      #8                  // Field accessTableColumnMetaData:Z
       4: ireturn

  public void setOverrideIncludeSynonymsDefault(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field overrideIncludeSynonymsDefault:Z
       5: return

  public boolean isOverrideIncludeSynonymsDefault();
    Code:
       0: aload_0
       1: getfield      #9                  // Field overrideIncludeSynonymsDefault:Z
       4: ireturn

  public java.util.List<java.lang.String> getTableColumns();
    Code:
       0: aload_0
       1: getfield      #7                  // Field tableColumns:Ljava/util/List;
       4: areturn

  public void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field nativeJdbcExtractor:Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;
       5: return

  public void processMetaData(javax.sql.DataSource, java.util.List<java.lang.String>, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: aload_0
       4: getfield      #14                 // Field nativeJdbcExtractor:Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;
       7: invokestatic  #15                 // Method org/springframework/jdbc/core/metadata/TableMetaDataProviderFactory.createMetaDataProvider:(Ljavax/sql/DataSource;Lorg/springframework/jdbc/core/metadata/TableMetaDataContext;Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;)Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
      10: putfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
      13: aload_0
      14: aload_0
      15: aload_2
      16: aload_3
      17: invokevirtual #17                 // Method reconcileColumnsToUse:(Ljava/util/List;[Ljava/lang/String;)Ljava/util/List;
      20: putfield      #7                  // Field tableColumns:Ljava/util/List;
      23: return

  protected java.util.List<java.lang.String> reconcileColumnsToUse(java.util.List<java.lang.String>, java.lang.String[]);
    Code:
       0: aload_2
       1: arraylength
       2: ifle          10
       5: aload_0
       6: iconst_1
       7: putfield      #10                 // Field generatedKeyColumnsUsed:Z
      10: aload_1
      11: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      16: ifle          28
      19: new           #5                  // class java/util/ArrayList
      22: dup
      23: aload_1
      24: invokespecial #19                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      27: areturn
      28: new           #20                 // class java/util/LinkedHashSet
      31: dup
      32: aload_2
      33: arraylength
      34: invokespecial #21                 // Method java/util/LinkedHashSet."<init>":(I)V
      37: astore_3
      38: aload_2
      39: astore        4
      41: aload         4
      43: arraylength
      44: istore        5
      46: iconst_0
      47: istore        6
      49: iload         6
      51: iload         5
      53: if_icmpge     81
      56: aload         4
      58: iload         6
      60: aaload
      61: astore        7
      63: aload_3
      64: aload         7
      66: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      69: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      74: pop
      75: iinc          6, 1
      78: goto          49
      81: new           #5                  // class java/util/ArrayList
      84: dup
      85: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
      88: astore        4
      90: aload_0
      91: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
      94: invokeinterface #24,  1           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.getTableParameterMetaData:()Ljava/util/List;
      99: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     104: astore        5
     106: aload         5
     108: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     113: ifeq          161
     116: aload         5
     118: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     123: checkcast     #28                 // class org/springframework/jdbc/core/metadata/TableParameterMetaData
     126: astore        6
     128: aload_3
     129: aload         6
     131: invokevirtual #29                 // Method org/springframework/jdbc/core/metadata/TableParameterMetaData.getParameterName:()Ljava/lang/String;
     134: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     137: invokeinterface #30,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     142: ifne          158
     145: aload         4
     147: aload         6
     149: invokevirtual #29                 // Method org/springframework/jdbc/core/metadata/TableParameterMetaData.getParameterName:()Ljava/lang/String;
     152: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     157: pop
     158: goto          106
     161: aload         4
     163: areturn

  public java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(org.springframework.jdbc.core.namedparam.SqlParameterSource);
    Code:
       0: new           #5                  // class java/util/ArrayList
       3: dup
       4: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokestatic  #32                 // Method org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.extractCaseInsensitiveParameterNames:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;)Ljava/util/Map;
      12: astore_3
      13: aload_0
      14: getfield      #7                  // Field tableColumns:Ljava/util/List;
      17: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          188
      34: aload         4
      36: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #33                 // class java/lang/String
      44: astore        5
      46: aload_1
      47: aload         5
      49: invokeinterface #34,  2           // InterfaceMethod org/springframework/jdbc/core/namedparam/SqlParameterSource.hasValue:(Ljava/lang/String;)Z
      54: ifeq          73
      57: aload_2
      58: aload_1
      59: aload         5
      61: invokestatic  #35                 // Method org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.getTypedValue:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Ljava/lang/String;)Ljava/lang/Object;
      64: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      69: pop
      70: goto          185
      73: aload         5
      75: invokevirtual #36                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      78: astore        6
      80: aload_1
      81: aload         6
      83: invokeinterface #34,  2           // InterfaceMethod org/springframework/jdbc/core/namedparam/SqlParameterSource.hasValue:(Ljava/lang/String;)Z
      88: ifeq          107
      91: aload_2
      92: aload_1
      93: aload         6
      95: invokestatic  #35                 // Method org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.getTypedValue:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Ljava/lang/String;)Ljava/lang/Object;
      98: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     103: pop
     104: goto          185
     107: aload         5
     109: invokestatic  #37                 // Method org/springframework/jdbc/support/JdbcUtils.convertUnderscoreNameToPropertyName:(Ljava/lang/String;)Ljava/lang/String;
     112: astore        7
     114: aload_1
     115: aload         7
     117: invokeinterface #34,  2           // InterfaceMethod org/springframework/jdbc/core/namedparam/SqlParameterSource.hasValue:(Ljava/lang/String;)Z
     122: ifeq          141
     125: aload_2
     126: aload_1
     127: aload         7
     129: invokestatic  #35                 // Method org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.getTypedValue:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Ljava/lang/String;)Ljava/lang/Object;
     132: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     137: pop
     138: goto          185
     141: aload_3
     142: aload         6
     144: invokeinterface #38,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
     149: ifeq          177
     152: aload_2
     153: aload_1
     154: aload_3
     155: aload         6
     157: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     162: checkcast     #33                 // class java/lang/String
     165: invokestatic  #35                 // Method org/springframework/jdbc/core/namedparam/SqlParameterSourceUtils.getTypedValue:(Lorg/springframework/jdbc/core/namedparam/SqlParameterSource;Ljava/lang/String;)Ljava/lang/Object;
     168: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     173: pop
     174: goto          185
     177: aload_2
     178: aconst_null
     179: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     184: pop
     185: goto          24
     188: aload_2
     189: areturn

  public java.util.List<java.lang.Object> matchInParameterValuesWithInsertColumns(java.util.Map<java.lang.String, ?>);
    Code:
       0: new           #5                  // class java/util/ArrayList
       3: dup
       4: invokespecial #6                  // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: new           #40                 // class java/util/LinkedHashMap
      11: dup
      12: aload_1
      13: invokeinterface #41,  1           // InterfaceMethod java/util/Map.size:()I
      18: invokespecial #42                 // Method java/util/LinkedHashMap."<init>":(I)V
      21: astore_3
      22: aload_1
      23: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      28: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      33: astore        4
      35: aload         4
      37: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          80
      45: aload         4
      47: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #33                 // class java/lang/String
      55: astore        5
      57: aload_3
      58: aload         5
      60: invokevirtual #36                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      63: aload_1
      64: aload         5
      66: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      71: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      76: pop
      77: goto          35
      80: aload_0
      81: getfield      #7                  // Field tableColumns:Ljava/util/List;
      84: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      89: astore        4
      91: aload         4
      93: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          134
     101: aload         4
     103: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #33                 // class java/lang/String
     111: astore        5
     113: aload_2
     114: aload_3
     115: aload         5
     117: invokevirtual #36                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     120: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     125: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     130: pop
     131: goto          91
     134: aload_2
     135: areturn

  public java.lang.String createInsertString(java.lang.String...);
    Code:
       0: new           #20                 // class java/util/LinkedHashSet
       3: dup
       4: aload_1
       5: arraylength
       6: invokespecial #21                 // Method java/util/LinkedHashSet."<init>":(I)V
       9: astore_2
      10: aload_1
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     50
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_2
      33: aload         6
      35: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      38: invokeinterface #23,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: iinc          5, 1
      47: goto          19
      50: new           #46                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      57: astore_3
      58: aload_3
      59: ldc           #48                 // String INSERT INTO
      61: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: pop
      65: aload_0
      66: invokevirtual #50                 // Method getSchemaName:()Ljava/lang/String;
      69: ifnull        88
      72: aload_3
      73: aload_0
      74: invokevirtual #50                 // Method getSchemaName:()Ljava/lang/String;
      77: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: pop
      81: aload_3
      82: ldc           #51                 // String .
      84: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: pop
      88: aload_3
      89: aload_0
      90: invokevirtual #52                 // Method getTableName:()Ljava/lang/String;
      93: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: pop
      97: aload_3
      98: ldc           #53                 // String  (
     100: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: pop
     104: iconst_0
     105: istore        4
     107: aload_0
     108: invokevirtual #54                 // Method getTableColumns:()Ljava/util/List;
     111: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     116: astore        5
     118: aload         5
     120: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     125: ifeq          180
     128: aload         5
     130: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #33                 // class java/lang/String
     138: astore        6
     140: aload_2
     141: aload         6
     143: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     146: invokeinterface #30,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     151: ifne          177
     154: iinc          4, 1
     157: iload         4
     159: iconst_1
     160: if_icmple     170
     163: aload_3
     164: ldc           #55                 // String ,
     166: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: pop
     170: aload_3
     171: aload         6
     173: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: pop
     177: goto          118
     180: aload_3
     181: ldc           #56                 // String ) VALUES(
     183: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: pop
     187: iload         4
     189: iconst_1
     190: if_icmpge     274
     193: aload_0
     194: getfield      #10                 // Field generatedKeyColumnsUsed:Z
     197: ifeq          239
     200: aload_0
     201: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     204: new           #46                 // class java/lang/StringBuilder
     207: dup
     208: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     211: ldc           #57                 // String Unable to locate non-key columns for table \'
     213: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_0
     217: invokevirtual #52                 // Method getTableName:()Ljava/lang/String;
     220: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     223: ldc           #58                 // String \' so an empty insert statement is generated
     225: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     228: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     231: invokeinterface #60,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     236: goto          274
     239: new           #61                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     242: dup
     243: new           #46                 // class java/lang/StringBuilder
     246: dup
     247: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     250: ldc           #62                 // String Unable to locate columns for table \'
     252: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     255: aload_0
     256: invokevirtual #52                 // Method getTableName:()Ljava/lang/String;
     259: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: ldc           #63                 // String \' so an insert statement can\'t be generated
     264: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     267: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     270: invokespecial #64                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;)V
     273: athrow
     274: iconst_0
     275: istore        5
     277: iload         5
     279: iload         4
     281: if_icmpge     309
     284: iload         5
     286: ifle          296
     289: aload_3
     290: ldc           #55                 // String ,
     292: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: pop
     296: aload_3
     297: ldc           #65                 // String ?
     299: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     302: pop
     303: iinc          5, 1
     306: goto          277
     309: aload_3
     310: ldc           #66                 // String )
     312: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     315: pop
     316: aload_3
     317: invokevirtual #59                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     320: areturn

  public int[] createInsertTypes();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getTableColumns:()Ljava/util/List;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
       9: newarray       int
      11: astore_1
      12: aload_0
      13: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
      16: invokeinterface #24,  1           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.getTableParameterMetaData:()Ljava/util/List;
      21: astore_2
      22: new           #40                 // class java/util/LinkedHashMap
      25: dup
      26: aload_2
      27: invokeinterface #18,  1           // InterfaceMethod java/util/List.size:()I
      32: invokespecial #42                 // Method java/util/LinkedHashMap."<init>":(I)V
      35: astore_3
      36: aload_2
      37: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      42: astore        4
      44: aload         4
      46: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          86
      54: aload         4
      56: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #28                 // class org/springframework/jdbc/core/metadata/TableParameterMetaData
      64: astore        5
      66: aload_3
      67: aload         5
      69: invokevirtual #29                 // Method org/springframework/jdbc/core/metadata/TableParameterMetaData.getParameterName:()Ljava/lang/String;
      72: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      75: aload         5
      77: invokeinterface #45,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: goto          44
      86: iconst_0
      87: istore        4
      89: aload_0
      90: invokevirtual #54                 // Method getTableColumns:()Ljava/util/List;
      93: invokeinterface #25,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      98: astore        5
     100: aload         5
     102: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     107: ifeq          181
     110: aload         5
     112: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: checkcast     #33                 // class java/lang/String
     120: astore        6
     122: aload         6
     124: ifnonnull     136
     127: aload_1
     128: iload         4
     130: ldc           #68                 // int -2147483648
     132: iastore
     133: goto          175
     136: aload_3
     137: aload         6
     139: invokevirtual #22                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
     142: invokeinterface #39,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     147: checkcast     #28                 // class org/springframework/jdbc/core/metadata/TableParameterMetaData
     150: astore        7
     152: aload         7
     154: ifnull        169
     157: aload_1
     158: iload         4
     160: aload         7
     162: invokevirtual #69                 // Method org/springframework/jdbc/core/metadata/TableParameterMetaData.getSqlType:()I
     165: iastore
     166: goto          175
     169: aload_1
     170: iload         4
     172: ldc           #68                 // int -2147483648
     174: iastore
     175: iinc          4, 1
     178: goto          100
     181: aload_1
     182: areturn

  public boolean isGetGeneratedKeysSupported();
    Code:
       0: aload_0
       1: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
       4: invokeinterface #70,  1           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.isGetGeneratedKeysSupported:()Z
       9: ireturn

  public boolean isGetGeneratedKeysSimulated();
    Code:
       0: aload_0
       1: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
       4: invokeinterface #71,  1           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.isGetGeneratedKeysSimulated:()Z
       9: ireturn

  public java.lang.String getSimulationQueryForGetGeneratedKey(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #72                 // Method getSimpleQueryForGetGeneratedKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String getSimpleQueryForGetGeneratedKey(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
       4: aload_1
       5: aload_2
       6: invokeinterface #73,  3           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.getSimpleQueryForGetGeneratedKey:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      11: areturn

  public boolean isGeneratedKeysColumnNameArraySupported();
    Code:
       0: aload_0
       1: getfield      #16                 // Field metaDataProvider:Lorg/springframework/jdbc/core/metadata/TableMetaDataProvider;
       4: invokeinterface #74,  1           // InterfaceMethod org/springframework/jdbc/core/metadata/TableMetaDataProvider.isGeneratedKeysColumnNameArraySupported:()Z
       9: ireturn
}
