Compiled from "AbstractDriverBasedDataSource.java"
public abstract class org.springframework.jdbc.datasource.AbstractDriverBasedDataSource extends org.springframework.jdbc.datasource.AbstractDataSource {
  private java.lang.String url;

  private java.lang.String username;

  private java.lang.String password;

  private java.lang.String catalog;

  private java.lang.String schema;

  private java.util.Properties connectionProperties;

  public org.springframework.jdbc.datasource.AbstractDriverBasedDataSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jdbc/datasource/AbstractDataSource."<init>":()V
       4: return

  public void setUrl(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #2                  // String Property \'url\' must not be empty
       3: invokestatic  #3                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #4                  // Method java/lang/String.trim:()Ljava/lang/String;
      11: putfield      #5                  // Field url:Ljava/lang/String;
      14: return

  public java.lang.String getUrl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field url:Ljava/lang/String;
       4: areturn

  public void setUsername(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field username:Ljava/lang/String;
       5: return

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #6                  // Field username:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field password:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #7                  // Field password:Ljava/lang/String;
       4: areturn

  public void setCatalog(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field catalog:Ljava/lang/String;
       5: return

  public java.lang.String getCatalog();
    Code:
       0: aload_0
       1: getfield      #8                  // Field catalog:Ljava/lang/String;
       4: areturn

  public void setSchema(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field schema:Ljava/lang/String;
       5: return

  public java.lang.String getSchema();
    Code:
       0: aload_0
       1: getfield      #9                  // Field schema:Ljava/lang/String;
       4: areturn

  public void setConnectionProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field connectionProperties:Ljava/util/Properties;
       5: return

  public java.util.Properties getConnectionProperties();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionProperties:Ljava/util/Properties;
       4: areturn

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #11                 // Method getUsername:()Ljava/lang/String;
       5: aload_0
       6: invokevirtual #12                 // Method getPassword:()Ljava/lang/String;
       9: invokevirtual #13                 // Method getConnectionFromDriver:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      12: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method getConnectionFromDriver:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
       6: areturn

  protected java.sql.Connection getConnectionFromDriver(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #14                 // class java/util/Properties
       3: dup
       4: invokespecial #15                 // Method java/util/Properties."<init>":()V
       7: astore_3
       8: aload_0
       9: invokevirtual #16                 // Method getConnectionProperties:()Ljava/util/Properties;
      12: astore        4
      14: aload         4
      16: ifnull        25
      19: aload_3
      20: aload         4
      22: invokevirtual #17                 // Method java/util/Properties.putAll:(Ljava/util/Map;)V
      25: aload_1
      26: ifnull        37
      29: aload_3
      30: ldc           #18                 // String user
      32: aload_1
      33: invokevirtual #19                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      36: pop
      37: aload_2
      38: ifnull        49
      41: aload_3
      42: ldc           #20                 // String password
      44: aload_2
      45: invokevirtual #19                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: aload_3
      51: invokevirtual #21                 // Method getConnectionFromDriver:(Ljava/util/Properties;)Ljava/sql/Connection;
      54: astore        5
      56: aload_0
      57: getfield      #8                  // Field catalog:Ljava/lang/String;
      60: ifnull        74
      63: aload         5
      65: aload_0
      66: getfield      #8                  // Field catalog:Ljava/lang/String;
      69: invokeinterface #22,  2           // InterfaceMethod java/sql/Connection.setCatalog:(Ljava/lang/String;)V
      74: aload_0
      75: getfield      #9                  // Field schema:Ljava/lang/String;
      78: ifnull        92
      81: aload         5
      83: aload_0
      84: getfield      #9                  // Field schema:Ljava/lang/String;
      87: invokeinterface #23,  2           // InterfaceMethod java/sql/Connection.setSchema:(Ljava/lang/String;)V
      92: aload         5
      94: areturn

  protected abstract java.sql.Connection getConnectionFromDriver(java.util.Properties) throws java.sql.SQLException;
}
