Compiled from "ResourceDatabasePopulator.java"
public class org.springframework.jdbc.datasource.init.ResourceDatabasePopulator implements org.springframework.jdbc.datasource.init.DatabasePopulator {
  java.util.List<org.springframework.core.io.Resource> scripts;

  private java.lang.String sqlScriptEncoding;

  private java.lang.String separator;

  private java.lang.String commentPrefix;

  private java.lang.String blockCommentStartDelimiter;

  private java.lang.String blockCommentEndDelimiter;

  private boolean continueOnError;

  private boolean ignoreFailedDrops;

  public org.springframework.jdbc.datasource.init.ResourceDatabasePopulator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field scripts:Ljava/util/List;
      15: aload_0
      16: ldc           #6                  // String ;
      18: putfield      #7                  // Field separator:Ljava/lang/String;
      21: aload_0
      22: ldc           #8                  // String --
      24: putfield      #9                  // Field commentPrefix:Ljava/lang/String;
      27: aload_0
      28: ldc           #10                 // String /*
      30: putfield      #11                 // Field blockCommentStartDelimiter:Ljava/lang/String;
      33: aload_0
      34: ldc           #12                 // String */
      36: putfield      #13                 // Field blockCommentEndDelimiter:Ljava/lang/String;
      39: aload_0
      40: iconst_0
      41: putfield      #14                 // Field continueOnError:Z
      44: aload_0
      45: iconst_0
      46: putfield      #15                 // Field ignoreFailedDrops:Z
      49: return

  public org.springframework.jdbc.datasource.init.ResourceDatabasePopulator(org.springframework.core.io.Resource...);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method setScripts:([Lorg/springframework/core/io/Resource;)V
       9: return

  public org.springframework.jdbc.datasource.init.ResourceDatabasePopulator(boolean, boolean, java.lang.String, org.springframework.core.io.Resource...);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #18                 // Method "<init>":([Lorg/springframework/core/io/Resource;)V
       6: aload_0
       7: iload_1
       8: putfield      #14                 // Field continueOnError:Z
      11: aload_0
      12: iload_2
      13: putfield      #15                 // Field ignoreFailedDrops:Z
      16: aload_0
      17: aload_3
      18: invokevirtual #19                 // Method setSqlScriptEncoding:(Ljava/lang/String;)V
      21: return

  public void addScript(org.springframework.core.io.Resource);
    Code:
       0: aload_1
       1: ldc           #20                 // String Script must not be null
       3: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field scripts:Ljava/util/List;
      10: aload_1
      11: invokeinterface #22,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      16: pop
      17: return

  public void addScripts(org.springframework.core.io.Resource...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method assertContentsOfScriptArray:([Lorg/springframework/core/io/Resource;)V
       5: aload_0
       6: getfield      #4                  // Field scripts:Ljava/util/List;
       9: aload_1
      10: invokestatic  #24                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      13: invokeinterface #25,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      18: pop
      19: return

  public void setScripts(org.springframework.core.io.Resource...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method assertContentsOfScriptArray:([Lorg/springframework/core/io/Resource;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: aload_1
      11: invokestatic  #24                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      14: invokespecial #26                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      17: putfield      #4                  // Field scripts:Ljava/util/List;
      20: return

  private void assertContentsOfScriptArray(org.springframework.core.io.Resource...);
    Code:
       0: aload_1
       1: ldc           #27                 // String Scripts array must not be null
       3: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #28                 // String Scripts array must not contain null elements
       9: invokestatic  #29                 // Method org/springframework/util/Assert.noNullElements:([Ljava/lang/Object;Ljava/lang/String;)V
      12: return

  public void setSqlScriptEncoding(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #30                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       5: ifeq          12
       8: aload_1
       9: goto          13
      12: aconst_null
      13: putfield      #31                 // Field sqlScriptEncoding:Ljava/lang/String;
      16: return

  public void setSeparator(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field separator:Ljava/lang/String;
       5: return

  public void setCommentPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field commentPrefix:Ljava/lang/String;
       5: return

  public void setBlockCommentStartDelimiter(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String BlockCommentStartDelimiter must not be null or empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #11                 // Field blockCommentStartDelimiter:Ljava/lang/String;
      11: return

  public void setBlockCommentEndDelimiter(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #34                 // String BlockCommentEndDelimiter must not be null or empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field blockCommentEndDelimiter:Ljava/lang/String;
      11: return

  public void setContinueOnError(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field continueOnError:Z
       5: return

  public void setIgnoreFailedDrops(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field ignoreFailedDrops:Z
       5: return

  public void populate(java.sql.Connection) throws org.springframework.jdbc.datasource.init.ScriptException;
    Code:
       0: aload_1
       1: ldc           #35                 // String Connection must not be null
       3: invokestatic  #21                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field scripts:Ljava/util/List;
      10: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          82
      25: aload_2
      26: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #39                 // class org/springframework/core/io/Resource
      34: astore_3
      35: new           #40                 // class org/springframework/core/io/support/EncodedResource
      38: dup
      39: aload_3
      40: aload_0
      41: getfield      #31                 // Field sqlScriptEncoding:Ljava/lang/String;
      44: invokespecial #41                 // Method org/springframework/core/io/support/EncodedResource."<init>":(Lorg/springframework/core/io/Resource;Ljava/lang/String;)V
      47: astore        4
      49: aload_1
      50: aload         4
      52: aload_0
      53: getfield      #14                 // Field continueOnError:Z
      56: aload_0
      57: getfield      #15                 // Field ignoreFailedDrops:Z
      60: aload_0
      61: getfield      #9                  // Field commentPrefix:Ljava/lang/String;
      64: aload_0
      65: getfield      #7                  // Field separator:Ljava/lang/String;
      68: aload_0
      69: getfield      #11                 // Field blockCommentStartDelimiter:Ljava/lang/String;
      72: aload_0
      73: getfield      #13                 // Field blockCommentEndDelimiter:Ljava/lang/String;
      76: invokestatic  #42                 // Method org/springframework/jdbc/datasource/init/ScriptUtils.executeSqlScript:(Ljava/sql/Connection;Lorg/springframework/core/io/support/EncodedResource;ZZLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      79: goto          16
      82: return

  public void execute(javax.sql.DataSource) throws org.springframework.jdbc.datasource.init.ScriptException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #43                 // Method org/springframework/jdbc/datasource/init/DatabasePopulatorUtils.execute:(Lorg/springframework/jdbc/datasource/init/DatabasePopulator;Ljavax/sql/DataSource;)V
       5: return
}
