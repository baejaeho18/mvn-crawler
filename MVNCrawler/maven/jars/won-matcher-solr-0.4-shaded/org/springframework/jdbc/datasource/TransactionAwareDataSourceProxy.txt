Compiled from "TransactionAwareDataSourceProxy.java"
public class org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy extends org.springframework.jdbc.datasource.DelegatingDataSource {
  private boolean reobtainTransactionalConnections;

  public org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jdbc/datasource/DelegatingDataSource."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field reobtainTransactionalConnections:Z
       9: return

  public org.springframework.jdbc.datasource.TransactionAwareDataSourceProxy(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/springframework/jdbc/datasource/DelegatingDataSource."<init>":(Ljavax/sql/DataSource;)V
       5: aload_0
       6: iconst_0
       7: putfield      #2                  // Field reobtainTransactionalConnections:Z
      10: return

  public void setReobtainTransactionalConnections(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field reobtainTransactionalConnections:Z
       5: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method getTargetDataSource:()Ljavax/sql/DataSource;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #5                  // String \'targetDataSource\' is required
      16: invokestatic  #6                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokevirtual #7                  // Method getTransactionAwareConnectionProxy:(Ljavax/sql/DataSource;)Ljava/sql/Connection;
      24: areturn

  protected java.sql.Connection getTransactionAwareConnectionProxy(javax.sql.DataSource);
    Code:
       0: ldc           #8                  // class org/springframework/jdbc/datasource/ConnectionProxy
       2: invokevirtual #9                  // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       5: iconst_1
       6: anewarray     #10                 // class java/lang/Class
       9: dup
      10: iconst_0
      11: ldc           #8                  // class org/springframework/jdbc/datasource/ConnectionProxy
      13: aastore
      14: new           #11                 // class org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy$TransactionAwareInvocationHandler
      17: dup
      18: aload_0
      19: aload_1
      20: invokespecial #12                 // Method org/springframework/jdbc/datasource/TransactionAwareDataSourceProxy$TransactionAwareInvocationHandler."<init>":(Lorg/springframework/jdbc/datasource/TransactionAwareDataSourceProxy;Ljavax/sql/DataSource;)V
      23: invokestatic  #13                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      26: checkcast     #14                 // class java/sql/Connection
      29: areturn

  protected boolean shouldObtainFixedConnection(javax.sql.DataSource);
    Code:
       0: invokestatic  #15                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.isSynchronizationActive:()Z
       3: ifeq          13
       6: aload_0
       7: getfield      #2                  // Field reobtainTransactionalConnections:Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn
}
