Compiled from "JdbcTransactionObjectSupport.java"
public abstract class org.springframework.jdbc.datasource.JdbcTransactionObjectSupport implements org.springframework.transaction.SavepointManager,org.springframework.transaction.support.SmartTransactionObject {
  private static final org.apache.commons.logging.Log logger;

  private org.springframework.jdbc.datasource.ConnectionHolder connectionHolder;

  private java.lang.Integer previousIsolationLevel;

  private boolean savepointAllowed;

  public org.springframework.jdbc.datasource.JdbcTransactionObjectSupport();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field savepointAllowed:Z
       9: return

  public void setConnectionHolder(org.springframework.jdbc.datasource.ConnectionHolder);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
       5: return

  public org.springframework.jdbc.datasource.ConnectionHolder getConnectionHolder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: areturn

  public boolean hasConnectionHolder();
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectionHolder:Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void setPreviousIsolationLevel(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field previousIsolationLevel:Ljava/lang/Integer;
       5: return

  public java.lang.Integer getPreviousIsolationLevel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field previousIsolationLevel:Ljava/lang/Integer;
       4: areturn

  public void setSavepointAllowed(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field savepointAllowed:Z
       5: return

  public boolean isSavepointAllowed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field savepointAllowed:Z
       4: ireturn

  public void flush();
    Code:
       0: return

  public java.lang.Object createSavepoint() throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getConnectionHolderForSavepoint:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: astore_1
       5: aload_1
       6: invokevirtual #6                  // Method org/springframework/jdbc/datasource/ConnectionHolder.supportsSavepoints:()Z
       9: ifne          22
      12: new           #7                  // class org/springframework/transaction/NestedTransactionNotSupportedException
      15: dup
      16: ldc           #8                  // String Cannot create a nested transaction because savepoints are not supported by your JDBC driver
      18: invokespecial #9                  // Method org/springframework/transaction/NestedTransactionNotSupportedException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: invokevirtual #10                 // Method org/springframework/jdbc/datasource/ConnectionHolder.createSavepoint:()Ljava/sql/Savepoint;
      26: areturn
      27: astore_2
      28: new           #12                 // class org/springframework/transaction/CannotCreateTransactionException
      31: dup
      32: ldc           #13                 // String Could not create JDBC savepoint
      34: aload_2
      35: invokespecial #14                 // Method org/springframework/transaction/CannotCreateTransactionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           5    26    27   Class java/sql/SQLException

  public void rollbackToSavepoint(java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getConnectionHolderForSavepoint:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: astore_2
       5: aload_2
       6: invokevirtual #15                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
       9: aload_1
      10: checkcast     #16                 // class java/sql/Savepoint
      13: invokeinterface #17,  2           // InterfaceMethod java/sql/Connection.rollback:(Ljava/sql/Savepoint;)V
      18: goto          33
      21: astore_3
      22: new           #19                 // class org/springframework/transaction/TransactionSystemException
      25: dup
      26: ldc           #20                 // String Could not roll back to JDBC savepoint
      28: aload_3
      29: invokespecial #21                 // Method org/springframework/transaction/TransactionSystemException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      32: athrow
      33: return
    Exception table:
       from    to  target type
           5    18    21   Class java/lang/Throwable

  public void releaseSavepoint(java.lang.Object) throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getConnectionHolderForSavepoint:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
       4: astore_2
       5: aload_2
       6: invokevirtual #15                 // Method org/springframework/jdbc/datasource/ConnectionHolder.getConnection:()Ljava/sql/Connection;
       9: aload_1
      10: checkcast     #16                 // class java/sql/Savepoint
      13: invokeinterface #22,  2           // InterfaceMethod java/sql/Connection.releaseSavepoint:(Ljava/sql/Savepoint;)V
      18: goto          33
      21: astore_3
      22: getstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
      25: ldc           #24                 // String Could not explicitly release JDBC savepoint
      27: aload_3
      28: invokeinterface #25,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           5    18    21   Class java/lang/Throwable

  protected org.springframework.jdbc.datasource.ConnectionHolder getConnectionHolderForSavepoint() throws org.springframework.transaction.TransactionException;
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method isSavepointAllowed:()Z
       4: ifne          17
       7: new           #7                  // class org/springframework/transaction/NestedTransactionNotSupportedException
      10: dup
      11: ldc           #27                 // String Transaction manager does not allow nested transactions
      13: invokespecial #9                  // Method org/springframework/transaction/NestedTransactionNotSupportedException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #28                 // Method hasConnectionHolder:()Z
      21: ifne          34
      24: new           #29                 // class org/springframework/transaction/TransactionUsageException
      27: dup
      28: ldc           #30                 // String Cannot create nested transaction when not exposing a JDBC transaction
      30: invokespecial #31                 // Method org/springframework/transaction/TransactionUsageException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: invokevirtual #32                 // Method getConnectionHolder:()Lorg/springframework/jdbc/datasource/ConnectionHolder;
      38: areturn

  static {};
    Code:
       0: ldc           #33                 // class org/springframework/jdbc/datasource/JdbcTransactionObjectSupport
       2: invokestatic  #34                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #23                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
