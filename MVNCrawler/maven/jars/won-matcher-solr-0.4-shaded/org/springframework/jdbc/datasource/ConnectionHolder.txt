Compiled from "ConnectionHolder.java"
public class org.springframework.jdbc.datasource.ConnectionHolder extends org.springframework.transaction.support.ResourceHolderSupport {
  public static final java.lang.String SAVEPOINT_NAME_PREFIX;

  private org.springframework.jdbc.datasource.ConnectionHandle connectionHandle;

  private java.sql.Connection currentConnection;

  private boolean transactionActive;

  private java.lang.Boolean savepointsSupported;

  private int savepointCounter;

  public org.springframework.jdbc.datasource.ConnectionHolder(org.springframework.jdbc.datasource.ConnectionHandle);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/ResourceHolderSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field transactionActive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field savepointCounter:I
      14: aload_1
      15: ldc           #4                  // String ConnectionHandle must not be null
      17: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      25: return

  public org.springframework.jdbc.datasource.ConnectionHolder(java.sql.Connection);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/transaction/support/ResourceHolderSupport."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field transactionActive:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field savepointCounter:I
      14: aload_0
      15: new           #7                  // class org/springframework/jdbc/datasource/SimpleConnectionHandle
      18: dup
      19: aload_1
      20: invokespecial #8                  // Method org/springframework/jdbc/datasource/SimpleConnectionHandle."<init>":(Ljava/sql/Connection;)V
      23: putfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      26: return

  public org.springframework.jdbc.datasource.ConnectionHolder(java.sql.Connection, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #9                  // Method "<init>":(Ljava/sql/Connection;)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field transactionActive:Z
      10: return

  public org.springframework.jdbc.datasource.ConnectionHandle getConnectionHandle();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
       4: areturn

  protected boolean hasConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected void setTransactionActive(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field transactionActive:Z
       5: return

  protected boolean isTransactionActive();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionActive:Z
       4: ireturn

  protected void setConnection(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
       4: ifnull        25
       7: aload_0
       8: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      11: aload_0
      12: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      15: invokeinterface #11,  2           // InterfaceMethod org/springframework/jdbc/datasource/ConnectionHandle.releaseConnection:(Ljava/sql/Connection;)V
      20: aload_0
      21: aconst_null
      22: putfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      25: aload_1
      26: ifnull        44
      29: aload_0
      30: new           #7                  // class org/springframework/jdbc/datasource/SimpleConnectionHandle
      33: dup
      34: aload_1
      35: invokespecial #8                  // Method org/springframework/jdbc/datasource/SimpleConnectionHandle."<init>":(Ljava/sql/Connection;)V
      38: putfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      41: goto          49
      44: aload_0
      45: aconst_null
      46: putfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      49: return

  public java.sql.Connection getConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
       4: ldc           #12                 // String Active Connection is required
       6: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      13: ifnonnull     29
      16: aload_0
      17: aload_0
      18: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      21: invokeinterface #13,  1           // InterfaceMethod org/springframework/jdbc/datasource/ConnectionHandle.getConnection:()Ljava/sql/Connection;
      26: putfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      29: aload_0
      30: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      33: areturn

  public boolean supportsSavepoints() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field savepointsSupported:Ljava/lang/Boolean;
       4: ifnonnull     28
       7: aload_0
       8: aload_0
       9: invokevirtual #15                 // Method getConnection:()Ljava/sql/Connection;
      12: invokeinterface #16,  1           // InterfaceMethod java/sql/Connection.getMetaData:()Ljava/sql/DatabaseMetaData;
      17: invokeinterface #17,  1           // InterfaceMethod java/sql/DatabaseMetaData.supportsSavepoints:()Z
      22: invokestatic  #18                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: putfield      #14                 // Field savepointsSupported:Ljava/lang/Boolean;
      28: aload_0
      29: getfield      #14                 // Field savepointsSupported:Ljava/lang/Boolean;
      32: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      35: ireturn

  public java.sql.Savepoint createSavepoint() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #3                  // Field savepointCounter:I
       5: iconst_1
       6: iadd
       7: putfield      #3                  // Field savepointCounter:I
      10: aload_0
      11: invokevirtual #15                 // Method getConnection:()Ljava/sql/Connection;
      14: new           #20                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #23                 // String SAVEPOINT_
      23: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field savepointCounter:I
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      33: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #27,  2           // InterfaceMethod java/sql/Connection.setSavepoint:(Ljava/lang/String;)Ljava/sql/Savepoint;
      41: areturn

  public void released();
    Code:
       0: aload_0
       1: invokespecial #28                 // Method org/springframework/transaction/support/ResourceHolderSupport.released:()V
       4: aload_0
       5: invokevirtual #29                 // Method isOpen:()Z
       8: ifne          36
      11: aload_0
      12: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      15: ifnull        36
      18: aload_0
      19: getfield      #6                  // Field connectionHandle:Lorg/springframework/jdbc/datasource/ConnectionHandle;
      22: aload_0
      23: getfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      26: invokeinterface #11,  2           // InterfaceMethod org/springframework/jdbc/datasource/ConnectionHandle.releaseConnection:(Ljava/sql/Connection;)V
      31: aload_0
      32: aconst_null
      33: putfield      #10                 // Field currentConnection:Ljava/sql/Connection;
      36: return

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method org/springframework/transaction/support/ResourceHolderSupport.clear:()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field transactionActive:Z
       9: aload_0
      10: aconst_null
      11: putfield      #14                 // Field savepointsSupported:Ljava/lang/Boolean;
      14: aload_0
      15: iconst_0
      16: putfield      #3                  // Field savepointCounter:I
      19: return
}
