Compiled from "PassThroughClob.java"
class org.springframework.jdbc.support.lob.PassThroughClob implements java.sql.Clob {
  private java.lang.String content;

  private java.io.Reader characterStream;

  private java.io.InputStream asciiStream;

  private long contentLength;

  public org.springframework.jdbc.support.lob.PassThroughClob(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field content:Ljava/lang/String;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/String.length:()I
      14: i2l
      15: putfield      #4                  // Field contentLength:J
      18: return

  public org.springframework.jdbc.support.lob.PassThroughClob(java.io.Reader, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #5                  // Field characterStream:Ljava/io/Reader;
       9: aload_0
      10: lload_2
      11: putfield      #4                  // Field contentLength:J
      14: return

  public org.springframework.jdbc.support.lob.PassThroughClob(java.io.InputStream, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field asciiStream:Ljava/io/InputStream;
       9: aload_0
      10: lload_2
      11: putfield      #4                  // Field contentLength:J
      14: return

  public long length() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field contentLength:J
       4: lreturn

  public java.io.Reader getCharacterStream() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field content:Ljava/lang/String;
       4: ifnull        19
       7: new           #7                  // class java/io/StringReader
      10: dup
      11: aload_0
      12: getfield      #2                  // Field content:Ljava/lang/String;
      15: invokespecial #8                  // Method java/io/StringReader."<init>":(Ljava/lang/String;)V
      18: areturn
      19: aload_0
      20: getfield      #5                  // Field characterStream:Ljava/io/Reader;
      23: ifnull        31
      26: aload_0
      27: getfield      #5                  // Field characterStream:Ljava/io/Reader;
      30: areturn
      31: new           #9                  // class java/io/InputStreamReader
      34: dup
      35: aload_0
      36: getfield      #6                  // Field asciiStream:Ljava/io/InputStream;
      39: ldc           #10                 // String US-ASCII
      41: invokespecial #11                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      44: areturn
      45: astore_1
      46: new           #13                 // class java/sql/SQLException
      49: dup
      50: new           #14                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #16                 // String US-ASCII encoding not supported:
      59: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_1
      63: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      66: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      69: invokespecial #20                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      72: athrow
    Exception table:
       from    to  target type
           0    18    45   Class java/io/UnsupportedEncodingException
          19    30    45   Class java/io/UnsupportedEncodingException
          31    44    45   Class java/io/UnsupportedEncodingException

  public java.io.InputStream getAsciiStream() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field content:Ljava/lang/String;
       4: ifnull        24
       7: new           #21                 // class java/io/ByteArrayInputStream
      10: dup
      11: aload_0
      12: getfield      #2                  // Field content:Ljava/lang/String;
      15: ldc           #10                 // String US-ASCII
      17: invokevirtual #22                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      20: invokespecial #23                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field characterStream:Ljava/io/Reader;
      28: ifnull        53
      31: aload_0
      32: getfield      #5                  // Field characterStream:Ljava/io/Reader;
      35: invokestatic  #24                 // Method org/springframework/util/FileCopyUtils.copyToString:(Ljava/io/Reader;)Ljava/lang/String;
      38: astore_1
      39: new           #21                 // class java/io/ByteArrayInputStream
      42: dup
      43: aload_1
      44: ldc           #10                 // String US-ASCII
      46: invokevirtual #22                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      49: invokespecial #23                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      52: areturn
      53: aload_0
      54: getfield      #6                  // Field asciiStream:Ljava/io/InputStream;
      57: areturn
      58: astore_1
      59: new           #13                 // class java/sql/SQLException
      62: dup
      63: new           #14                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #16                 // String US-ASCII encoding not supported:
      72: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokespecial #20                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      85: athrow
      86: astore_1
      87: new           #13                 // class java/sql/SQLException
      90: dup
      91: new           #14                 // class java/lang/StringBuilder
      94: dup
      95: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      98: ldc           #26                 // String Failed to read stream content:
     100: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_1
     104: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokespecial #20                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
     113: athrow
    Exception table:
       from    to  target type
           0    23    58   Class java/io/UnsupportedEncodingException
          24    52    58   Class java/io/UnsupportedEncodingException
          53    57    58   Class java/io/UnsupportedEncodingException
           0    23    86   Class java/io/IOException
          24    52    86   Class java/io/IOException
          53    57    86   Class java/io/IOException

  public java.io.Reader getCharacterStream(long, long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.io.Writer setCharacterStream(long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.io.OutputStream setAsciiStream(long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String getSubString(long, int) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int setString(long, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int setString(long, java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long position(java.lang.String, long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long position(java.sql.Clob, long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void truncate(long) throws java.sql.SQLException;
    Code:
       0: new           #27                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #28                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void free() throws java.sql.SQLException;
    Code:
       0: return
}
