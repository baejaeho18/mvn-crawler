Compiled from "DefaultLobHandler.java"
public class org.springframework.jdbc.support.lob.DefaultLobHandler extends org.springframework.jdbc.support.lob.AbstractLobHandler {
  protected final org.apache.commons.logging.Log logger;

  private boolean wrapAsLob;

  private boolean streamAsLob;

  private boolean createTemporaryLob;

  public org.springframework.jdbc.support.lob.DefaultLobHandler();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/jdbc/support/lob/AbstractLobHandler."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #5                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #1                  // Field wrapAsLob:Z
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field streamAsLob:Z
      25: aload_0
      26: iconst_0
      27: putfield      #7                  // Field createTemporaryLob:Z
      30: return

  public void setWrapAsLob(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field wrapAsLob:Z
       5: return

  public void setStreamAsLob(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field streamAsLob:Z
       5: return

  public void setCreateTemporaryLob(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field createTemporaryLob:Z
       5: return

  public byte[] getBlobAsBytes(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #8                  // String Returning BLOB as bytes
       6: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field wrapAsLob:Z
      15: ifeq          41
      18: aload_1
      19: iload_2
      20: invokeinterface #10,  2           // InterfaceMethod java/sql/ResultSet.getBlob:(I)Ljava/sql/Blob;
      25: astore_3
      26: aload_3
      27: lconst_1
      28: aload_3
      29: invokeinterface #11,  1           // InterfaceMethod java/sql/Blob.length:()J
      34: l2i
      35: invokeinterface #12,  4           // InterfaceMethod java/sql/Blob.getBytes:(JI)[B
      40: areturn
      41: aload_1
      42: iload_2
      43: invokeinterface #13,  2           // InterfaceMethod java/sql/ResultSet.getBytes:(I)[B
      48: areturn

  public java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #14                 // String Returning BLOB as binary stream
       6: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field wrapAsLob:Z
      15: ifeq          33
      18: aload_1
      19: iload_2
      20: invokeinterface #10,  2           // InterfaceMethod java/sql/ResultSet.getBlob:(I)Ljava/sql/Blob;
      25: astore_3
      26: aload_3
      27: invokeinterface #15,  1           // InterfaceMethod java/sql/Blob.getBinaryStream:()Ljava/io/InputStream;
      32: areturn
      33: aload_1
      34: iload_2
      35: invokeinterface #16,  2           // InterfaceMethod java/sql/ResultSet.getBinaryStream:(I)Ljava/io/InputStream;
      40: areturn

  public java.lang.String getClobAsString(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #17                 // String Returning CLOB as string
       6: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field wrapAsLob:Z
      15: ifeq          41
      18: aload_1
      19: iload_2
      20: invokeinterface #18,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      25: astore_3
      26: aload_3
      27: lconst_1
      28: aload_3
      29: invokeinterface #19,  1           // InterfaceMethod java/sql/Clob.length:()J
      34: l2i
      35: invokeinterface #20,  4           // InterfaceMethod java/sql/Clob.getSubString:(JI)Ljava/lang/String;
      40: areturn
      41: aload_1
      42: iload_2
      43: invokeinterface #21,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      48: areturn

  public java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #22                 // String Returning CLOB as ASCII stream
       6: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field wrapAsLob:Z
      15: ifeq          33
      18: aload_1
      19: iload_2
      20: invokeinterface #18,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      25: astore_3
      26: aload_3
      27: invokeinterface #23,  1           // InterfaceMethod java/sql/Clob.getAsciiStream:()Ljava/io/InputStream;
      32: areturn
      33: aload_1
      34: iload_2
      35: invokeinterface #24,  2           // InterfaceMethod java/sql/ResultSet.getAsciiStream:(I)Ljava/io/InputStream;
      40: areturn

  public java.io.Reader getClobAsCharacterStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #25                 // String Returning CLOB as character stream
       6: invokeinterface #9,  2            // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #1                  // Field wrapAsLob:Z
      15: ifeq          33
      18: aload_1
      19: iload_2
      20: invokeinterface #18,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      25: astore_3
      26: aload_3
      27: invokeinterface #26,  1           // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      32: areturn
      33: aload_1
      34: iload_2
      35: invokeinterface #27,  2           // InterfaceMethod java/sql/ResultSet.getCharacterStream:(I)Ljava/io/Reader;
      40: areturn

  public org.springframework.jdbc.support.lob.LobCreator getLobCreator();
    Code:
       0: aload_0
       1: getfield      #7                  // Field createTemporaryLob:Z
       4: ifeq          17
       7: new           #28                 // class org/springframework/jdbc/support/lob/TemporaryLobCreator
      10: dup
      11: invokespecial #29                 // Method org/springframework/jdbc/support/lob/TemporaryLobCreator."<init>":()V
      14: goto          25
      17: new           #30                 // class org/springframework/jdbc/support/lob/DefaultLobHandler$DefaultLobCreator
      20: dup
      21: aload_0
      22: invokespecial #31                 // Method org/springframework/jdbc/support/lob/DefaultLobHandler$DefaultLobCreator."<init>":(Lorg/springframework/jdbc/support/lob/DefaultLobHandler;)V
      25: areturn

  static boolean access$000(org.springframework.jdbc.support.lob.DefaultLobHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field streamAsLob:Z
       4: ireturn

  static boolean access$100(org.springframework.jdbc.support.lob.DefaultLobHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field wrapAsLob:Z
       4: ireturn
}
