Compiled from "OracleLobHandler.java"
public class org.springframework.jdbc.support.lob.OracleLobHandler extends org.springframework.jdbc.support.lob.AbstractLobHandler {
  private static final java.lang.String BLOB_CLASS_NAME;

  private static final java.lang.String CLOB_CLASS_NAME;

  private static final java.lang.String DURATION_SESSION_FIELD_NAME;

  private static final java.lang.String MODE_READWRITE_FIELD_NAME;

  private static final java.lang.String MODE_READONLY_FIELD_NAME;

  protected final org.apache.commons.logging.Log logger;

  private org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor nativeJdbcExtractor;

  private java.lang.Boolean cache;

  private java.lang.Boolean releaseResourcesAfterRead;

  private java.lang.Class<?> blobClass;

  private java.lang.Class<?> clobClass;

  private final java.util.Map<java.lang.Class<?>, java.lang.Integer> durationSessionConstants;

  private final java.util.Map<java.lang.Class<?>, java.lang.Integer> modeReadWriteConstants;

  private final java.util.Map<java.lang.Class<?>, java.lang.Integer> modeReadOnlyConstants;

  public org.springframework.jdbc.support.lob.OracleLobHandler();
    Code:
       0: aload_0
       1: invokespecial #7                  // Method org/springframework/jdbc/support/lob/AbstractLobHandler."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #9                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: getstatic     #11                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      19: putfield      #3                  // Field cache:Ljava/lang/Boolean;
      22: aload_0
      23: getstatic     #12                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      26: putfield      #13                 // Field releaseResourcesAfterRead:Ljava/lang/Boolean;
      29: aload_0
      30: new           #14                 // class java/util/HashMap
      33: dup
      34: iconst_2
      35: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      38: putfield      #2                  // Field durationSessionConstants:Ljava/util/Map;
      41: aload_0
      42: new           #14                 // class java/util/HashMap
      45: dup
      46: iconst_2
      47: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      50: putfield      #1                  // Field modeReadWriteConstants:Ljava/util/Map;
      53: aload_0
      54: new           #14                 // class java/util/HashMap
      57: dup
      58: iconst_2
      59: invokespecial #15                 // Method java/util/HashMap."<init>":(I)V
      62: putfield      #16                 // Field modeReadOnlyConstants:Ljava/util/Map;
      65: return

  public void setNativeJdbcExtractor(org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field nativeJdbcExtractor:Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;
       5: return

  public void setCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #3                  // Field cache:Ljava/lang/Boolean;
       8: return

  public void setReleaseResourcesAfterRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #13                 // Field releaseResourcesAfterRead:Ljava/lang/Boolean;
       8: return

  protected synchronized void initOracleDriverClasses(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #5                  // Field blobClass:Ljava/lang/Class;
       4: ifnonnull     234
       7: aload_0
       8: aload_1
       9: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #18                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      15: ldc           #20                 // String oracle.sql.BLOB
      17: invokevirtual #21                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      20: putfield      #5                  // Field blobClass:Ljava/lang/Class;
      23: aload_0
      24: getfield      #2                  // Field durationSessionConstants:Ljava/util/Map;
      27: aload_0
      28: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      31: aload_0
      32: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      35: ldc           #22                 // String DURATION_SESSION
      37: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      40: aconst_null
      41: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
      44: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      52: pop
      53: aload_0
      54: getfield      #1                  // Field modeReadWriteConstants:Ljava/util/Map;
      57: aload_0
      58: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      61: aload_0
      62: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      65: ldc           #27                 // String MODE_READWRITE
      67: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      70: aconst_null
      71: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
      74: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      77: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      82: pop
      83: aload_0
      84: getfield      #16                 // Field modeReadOnlyConstants:Ljava/util/Map;
      87: aload_0
      88: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      91: aload_0
      92: getfield      #5                  // Field blobClass:Ljava/lang/Class;
      95: ldc           #28                 // String MODE_READONLY
      97: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     100: aconst_null
     101: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
     104: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     112: pop
     113: aload_0
     114: aload_1
     115: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     118: invokevirtual #18                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
     121: ldc           #29                 // String oracle.sql.CLOB
     123: invokevirtual #21                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     126: putfield      #6                  // Field clobClass:Ljava/lang/Class;
     129: aload_0
     130: getfield      #2                  // Field durationSessionConstants:Ljava/util/Map;
     133: aload_0
     134: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     137: aload_0
     138: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     141: ldc           #22                 // String DURATION_SESSION
     143: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     146: aconst_null
     147: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
     150: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     153: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     158: pop
     159: aload_0
     160: getfield      #1                  // Field modeReadWriteConstants:Ljava/util/Map;
     163: aload_0
     164: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     167: aload_0
     168: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     171: ldc           #27                 // String MODE_READWRITE
     173: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     176: aconst_null
     177: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
     180: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     183: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     188: pop
     189: aload_0
     190: getfield      #16                 // Field modeReadOnlyConstants:Ljava/util/Map;
     193: aload_0
     194: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     197: aload_0
     198: getfield      #6                  // Field clobClass:Ljava/lang/Class;
     201: ldc           #28                 // String MODE_READONLY
     203: invokevirtual #23                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
     206: aconst_null
     207: invokevirtual #24                 // Method java/lang/reflect/Field.getInt:(Ljava/lang/Object;)I
     210: invokestatic  #25                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     213: invokeinterface #26,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     218: pop
     219: goto          234
     222: astore_2
     223: new           #31                 // class org/springframework/dao/InvalidDataAccessApiUsageException
     226: dup
     227: ldc           #32                 // String Couldn\'t initialize OracleLobHandler because Oracle driver classes are not available. Note that OracleLobHandler requires Oracle JDBC driver 9i or higher!
     229: aload_2
     230: invokespecial #33                 // Method org/springframework/dao/InvalidDataAccessApiUsageException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     233: athrow
     234: return
    Exception table:
       from    to  target type
           7   219   222   Class java/lang/Exception

  public byte[] getBlobAsBytes(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #34                 // String Returning Oracle BLOB as bytes
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_1
      12: iload_2
      13: invokeinterface #36,  2           // InterfaceMethod java/sql/ResultSet.getBlob:(I)Ljava/sql/Blob;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      26: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      31: aload_3
      32: invokevirtual #39                 // Method initializeResourcesBeforeRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      35: aload_3
      36: ifnull        56
      39: aload_3
      40: lconst_1
      41: aload_3
      42: invokeinterface #40,  1           // InterfaceMethod java/sql/Blob.length:()J
      47: l2i
      48: invokeinterface #41,  4           // InterfaceMethod java/sql/Blob.getBytes:(JI)[B
      53: goto          57
      56: aconst_null
      57: astore        4
      59: aload_0
      60: aload_1
      61: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      66: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      71: aload_3
      72: invokevirtual #42                 // Method releaseResourcesAfterRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      75: aload         4
      77: areturn

  public java.io.InputStream getBlobAsBinaryStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #43                 // String Returning Oracle BLOB as binary stream
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_1
      12: iload_2
      13: invokeinterface #36,  2           // InterfaceMethod java/sql/ResultSet.getBlob:(I)Ljava/sql/Blob;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      26: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      31: aload_3
      32: invokevirtual #39                 // Method initializeResourcesBeforeRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      35: aload_3
      36: ifnull        48
      39: aload_3
      40: invokeinterface #44,  1           // InterfaceMethod java/sql/Blob.getBinaryStream:()Ljava/io/InputStream;
      45: goto          49
      48: aconst_null
      49: astore        4
      51: aload_0
      52: aload_1
      53: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      58: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      63: aload_3
      64: invokevirtual #42                 // Method releaseResourcesAfterRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      67: aload         4
      69: areturn

  public java.lang.String getClobAsString(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #45                 // String Returning Oracle CLOB as string
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_1
      12: iload_2
      13: invokeinterface #46,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      26: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      31: aload_3
      32: invokevirtual #39                 // Method initializeResourcesBeforeRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      35: aload_3
      36: ifnull        56
      39: aload_3
      40: lconst_1
      41: aload_3
      42: invokeinterface #47,  1           // InterfaceMethod java/sql/Clob.length:()J
      47: l2i
      48: invokeinterface #48,  4           // InterfaceMethod java/sql/Clob.getSubString:(JI)Ljava/lang/String;
      53: goto          57
      56: aconst_null
      57: astore        4
      59: aload_0
      60: aload_1
      61: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      66: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      71: aload_3
      72: invokevirtual #42                 // Method releaseResourcesAfterRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      75: aload         4
      77: areturn

  public java.io.InputStream getClobAsAsciiStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #49                 // String Returning Oracle CLOB as ASCII stream
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_1
      12: iload_2
      13: invokeinterface #46,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      26: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      31: aload_3
      32: invokevirtual #39                 // Method initializeResourcesBeforeRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      35: aload_3
      36: ifnull        48
      39: aload_3
      40: invokeinterface #50,  1           // InterfaceMethod java/sql/Clob.getAsciiStream:()Ljava/io/InputStream;
      45: goto          49
      48: aconst_null
      49: astore        4
      51: aload_0
      52: aload_1
      53: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      58: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      63: aload_3
      64: invokevirtual #42                 // Method releaseResourcesAfterRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      67: aload         4
      69: areturn

  public java.io.Reader getClobAsCharacterStream(java.sql.ResultSet, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #51                 // String Returning Oracle CLOB as character stream
       6: invokeinterface #35,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      11: aload_1
      12: iload_2
      13: invokeinterface #46,  2           // InterfaceMethod java/sql/ResultSet.getClob:(I)Ljava/sql/Clob;
      18: astore_3
      19: aload_0
      20: aload_1
      21: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      26: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      31: aload_3
      32: invokevirtual #39                 // Method initializeResourcesBeforeRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      35: aload_3
      36: ifnull        48
      39: aload_3
      40: invokeinterface #52,  1           // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      45: goto          49
      48: aconst_null
      49: astore        4
      51: aload_0
      52: aload_1
      53: invokeinterface #37,  1           // InterfaceMethod java/sql/ResultSet.getStatement:()Ljava/sql/Statement;
      58: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
      63: aload_3
      64: invokevirtual #42                 // Method releaseResourcesAfterRead:(Ljava/sql/Connection;Ljava/lang/Object;)V
      67: aload         4
      69: areturn

  public org.springframework.jdbc.support.lob.LobCreator getLobCreator();
    Code:
       0: new           #53                 // class org/springframework/jdbc/support/lob/OracleLobHandler$OracleLobCreator
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/springframework/jdbc/support/lob/OracleLobHandler$OracleLobCreator."<init>":(Lorg/springframework/jdbc/support/lob/OracleLobHandler;)V
       8: areturn

  protected void initializeResourcesBeforeRead(java.sql.Connection, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field releaseResourcesAfterRead:Ljava/lang/Boolean;
       4: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
       7: ifeq          133
      10: aload_0
      11: aload_1
      12: invokevirtual #56                 // Method initOracleDriverClasses:(Ljava/sql/Connection;)V
      15: aload_2
      16: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: ldc           #57                 // String isTemporary
      21: iconst_0
      22: anewarray     #58                 // class java/lang/Class
      25: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      28: astore_3
      29: aload_3
      30: aload_2
      31: iconst_0
      32: anewarray     #60                 // class java/lang/Object
      35: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #62                 // class java/lang/Boolean
      41: astore        4
      43: aload         4
      45: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
      48: ifne          99
      51: aload_2
      52: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      55: ldc           #63                 // String open
      57: iconst_1
      58: anewarray     #58                 // class java/lang/Class
      61: dup
      62: iconst_0
      63: getstatic     #64                 // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      66: aastore
      67: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      70: astore        5
      72: aload         5
      74: aload_2
      75: iconst_1
      76: anewarray     #60                 // class java/lang/Object
      79: dup
      80: iconst_0
      81: aload_0
      82: getfield      #16                 // Field modeReadOnlyConstants:Ljava/util/Map;
      85: aload_2
      86: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      89: invokeinterface #65,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      94: aastore
      95: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      98: pop
      99: goto          133
     102: astore_3
     103: aload_0
     104: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
     107: ldc           #67                 // String Could not open Oracle LOB
     109: aload_3
     110: invokevirtual #68                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     113: invokeinterface #69,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     118: goto          133
     121: astore_3
     122: new           #70                 // class org/springframework/dao/DataAccessResourceFailureException
     125: dup
     126: ldc           #67                 // String Could not open Oracle LOB
     128: aload_3
     129: invokespecial #71                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     132: athrow
     133: return
    Exception table:
       from    to  target type
          15    99   102   Class java/lang/reflect/InvocationTargetException
          15    99   121   Class java/lang/Exception

  protected void releaseResourcesAfterRead(java.sql.Connection, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field releaseResourcesAfterRead:Ljava/lang/Boolean;
       4: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
       7: ifeq          231
      10: aload_0
      11: aload_1
      12: invokevirtual #56                 // Method initOracleDriverClasses:(Ljava/sql/Connection;)V
      15: getstatic     #12                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      18: astore_3
      19: aload_2
      20: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      23: ldc           #57                 // String isTemporary
      25: iconst_0
      26: anewarray     #58                 // class java/lang/Class
      29: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      32: astore        4
      34: aload         4
      36: aload_2
      37: iconst_0
      38: anewarray     #60                 // class java/lang/Object
      41: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #62                 // class java/lang/Boolean
      47: astore_3
      48: aload_3
      49: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
      52: ifeq          84
      55: aload_2
      56: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      59: ldc           #72                 // String freeTemporary
      61: iconst_0
      62: anewarray     #58                 // class java/lang/Class
      65: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      68: astore        5
      70: aload         5
      72: aload_2
      73: iconst_0
      74: anewarray     #60                 // class java/lang/Object
      77: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          148
      84: aload_2
      85: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: ldc           #73                 // String isOpen
      90: iconst_0
      91: anewarray     #58                 // class java/lang/Class
      94: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      97: astore        5
      99: aload         5
     101: aload_2
     102: iconst_0
     103: anewarray     #60                 // class java/lang/Object
     106: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     109: checkcast     #62                 // class java/lang/Boolean
     112: astore        6
     114: aload         6
     116: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     119: ifeq          148
     122: aload_2
     123: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     126: ldc           #74                 // String close
     128: iconst_0
     129: anewarray     #58                 // class java/lang/Class
     132: invokevirtual #59                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
     135: astore        7
     137: aload         7
     139: aload_2
     140: iconst_0
     141: anewarray     #60                 // class java/lang/Object
     144: invokevirtual #61                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     147: pop
     148: goto          231
     151: astore        4
     153: aload_3
     154: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     157: ifeq          179
     160: aload_0
     161: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
     164: ldc           #75                 // String Could not free Oracle LOB
     166: aload         4
     168: invokevirtual #68                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     171: invokeinterface #69,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     176: goto          195
     179: aload_0
     180: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
     183: ldc           #76                 // String Could not close Oracle LOB
     185: aload         4
     187: invokevirtual #68                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
     190: invokeinterface #69,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     195: goto          231
     198: astore        4
     200: aload_3
     201: invokevirtual #55                 // Method java/lang/Boolean.booleanValue:()Z
     204: ifeq          219
     207: new           #70                 // class org/springframework/dao/DataAccessResourceFailureException
     210: dup
     211: ldc           #75                 // String Could not free Oracle LOB
     213: aload         4
     215: invokespecial #71                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     218: athrow
     219: new           #70                 // class org/springframework/dao/DataAccessResourceFailureException
     222: dup
     223: ldc           #76                 // String Could not close Oracle LOB
     225: aload         4
     227: invokespecial #71                 // Method org/springframework/dao/DataAccessResourceFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     230: athrow
     231: return
    Exception table:
       from    to  target type
          19   148   151   Class java/lang/reflect/InvocationTargetException
          19   148   198   Class java/lang/Exception

  static java.lang.Class access$000(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field clobClass:Ljava/lang/Class;
       4: areturn

  static java.lang.Class access$100(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #5                  // Field blobClass:Ljava/lang/Class;
       4: areturn

  static org.springframework.jdbc.support.nativejdbc.NativeJdbcExtractor access$200(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field nativeJdbcExtractor:Lorg/springframework/jdbc/support/nativejdbc/NativeJdbcExtractor;
       4: areturn

  static java.lang.Boolean access$300(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cache:Ljava/lang/Boolean;
       4: areturn

  static java.util.Map access$400(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field durationSessionConstants:Ljava/util/Map;
       4: areturn

  static java.util.Map access$500(org.springframework.jdbc.support.lob.OracleLobHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field modeReadWriteConstants:Ljava/util/Map;
       4: areturn
}
