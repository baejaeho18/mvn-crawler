Compiled from "OracleLobHandler.java"
class org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator$4 implements org.springframework.jdbc.support.lob.OracleLobHandler$LobCallback {
  final java.io.InputStream val$asciiStream;

  final org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator this$1;

  org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator$4(org.springframework.jdbc.support.lob.OracleLobHandler$OracleLobCreator, java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$1:Lorg/springframework/jdbc/support/lob/OracleLobHandler$OracleLobCreator;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$asciiStream:Ljava/io/InputStream;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void populateLob(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #5                  // String getAsciiOutputStream
       6: aconst_null
       7: checkcast     #6                  // class "[Ljava/lang/Class;"
      10: invokevirtual #7                  // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      13: astore_2
      14: aload_2
      15: aload_1
      16: aconst_null
      17: checkcast     #8                  // class "[Ljava/lang/Object;"
      20: invokevirtual #9                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #10                 // class java/io/OutputStream
      26: astore_3
      27: aload_0
      28: getfield      #2                  // Field val$asciiStream:Ljava/io/InputStream;
      31: aload_3
      32: invokestatic  #11                 // Method org/springframework/util/FileCopyUtils.copy:(Ljava/io/InputStream;Ljava/io/OutputStream;)I
      35: pop
      36: return
}
