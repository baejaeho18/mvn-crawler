Compiled from "AbstractFallbackSQLExceptionTranslator.java"
public abstract class org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator implements org.springframework.jdbc.support.SQLExceptionTranslator {
  protected final org.apache.commons.logging.Log logger;

  private org.springframework.jdbc.support.SQLExceptionTranslator fallbackTranslator;

  public org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public void setFallbackTranslator(org.springframework.jdbc.support.SQLExceptionTranslator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field fallbackTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       5: return

  public org.springframework.jdbc.support.SQLExceptionTranslator getFallbackTranslator();
    Code:
       0: aload_0
       1: getfield      #5                  // Field fallbackTranslator:Lorg/springframework/jdbc/support/SQLExceptionTranslator;
       4: areturn

  public org.springframework.dao.DataAccessException translate(java.lang.String, java.lang.String, java.sql.SQLException);
    Code:
       0: aload_3
       1: ldc           #6                  // String Cannot translate a null SQLException
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnonnull     13
      10: ldc           #8                  // String
      12: astore_1
      13: aload_2
      14: ifnonnull     20
      17: ldc           #8                  // String
      19: astore_2
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokevirtual #9                  // Method doTranslate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      27: astore        4
      29: aload         4
      31: ifnull        37
      34: aload         4
      36: areturn
      37: aload_0
      38: invokevirtual #10                 // Method getFallbackTranslator:()Lorg/springframework/jdbc/support/SQLExceptionTranslator;
      41: astore        5
      43: aload         5
      45: ifnull        68
      48: aload         5
      50: aload_1
      51: aload_2
      52: aload_3
      53: invokeinterface #11,  4           // InterfaceMethod org/springframework/jdbc/support/SQLExceptionTranslator.translate:(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)Lorg/springframework/dao/DataAccessException;
      58: astore        4
      60: aload         4
      62: ifnull        68
      65: aload         4
      67: areturn
      68: new           #12                 // class org/springframework/jdbc/UncategorizedSQLException
      71: dup
      72: aload_1
      73: aload_2
      74: aload_3
      75: invokespecial #13                 // Method org/springframework/jdbc/UncategorizedSQLException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/sql/SQLException;)V
      78: areturn

  protected abstract org.springframework.dao.DataAccessException doTranslate(java.lang.String, java.lang.String, java.sql.SQLException);

  protected java.lang.String buildMessage(java.lang.String, java.lang.String, java.sql.SQLException);
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #17                 // String ; SQL [
      13: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #18                 // String ];
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_3
      26: invokevirtual #19                 // Method java/sql/SQLException.getMessage:()Ljava/lang/String;
      29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn
}
