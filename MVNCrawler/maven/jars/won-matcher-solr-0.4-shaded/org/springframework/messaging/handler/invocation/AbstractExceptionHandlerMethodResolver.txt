Compiled from "AbstractExceptionHandlerMethodResolver.java"
public abstract class org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver {
  private static final java.lang.reflect.Method NO_METHOD_FOUND;

  private final java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method> mappedMethods;

  private final java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method> exceptionLookupCache;

  protected org.springframework.messaging.handler.invocation.AbstractExceptionHandlerMethodResolver(java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.reflect.Method>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: bipush        16
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field mappedMethods:Ljava/util/Map;
      17: aload_0
      18: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: bipush        16
      24: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      27: putfield      #5                  // Field exceptionLookupCache:Ljava/util/Map;
      30: aload_1
      31: ldc           #6                  // String Mapped Methods must not be null
      33: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      36: aload_0
      37: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
      40: aload_1
      41: invokeinterface #8,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      46: return

  protected static java.util.List<java.lang.Class<? extends java.lang.Throwable>> getExceptionsFromMethodSignature(java.lang.reflect.Method);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #11                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     56
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: ldc           #12                 // class java/lang/Throwable
      33: aload         5
      35: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      38: ifeq          50
      41: aload_1
      42: aload         5
      44: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: iinc          4, 1
      53: goto          19
      56: aload_1
      57: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      62: ifeq          92
      65: new           #16                 // class java/lang/IllegalStateException
      68: dup
      69: new           #17                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #19                 // String No exception types mapped to
      78: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: invokespecial #23                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      91: athrow
      92: aload_1
      93: areturn

  public boolean hasExceptionMappings();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
       4: invokeinterface #24,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.reflect.Method resolveMethod(java.lang.Exception);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #26                 // Method resolveMethodByExceptionType:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
       8: astore_2
       9: aload_2
      10: ifnonnull     31
      13: aload_1
      14: invokevirtual #27                 // Method java/lang/Exception.getCause:()Ljava/lang/Throwable;
      17: astore_3
      18: aload_3
      19: ifnull        31
      22: aload_0
      23: aload_3
      24: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #26                 // Method resolveMethodByExceptionType:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      30: astore_2
      31: aload_2
      32: areturn

  public java.lang.reflect.Method resolveMethodByExceptionType(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field exceptionLookupCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/lang/reflect/Method
      13: astore_2
      14: aload_2
      15: ifnonnull     46
      18: aload_0
      19: aload_1
      20: invokespecial #30                 // Method getMappedMethod:(Ljava/lang/Class;)Ljava/lang/reflect/Method;
      23: astore_2
      24: aload_0
      25: getfield      #5                  // Field exceptionLookupCache:Ljava/util/Map;
      28: aload_1
      29: aload_2
      30: ifnull        37
      33: aload_2
      34: goto          40
      37: getstatic     #31                 // Field NO_METHOD_FOUND:Ljava/lang/reflect/Method;
      40: invokeinterface #32,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: pop
      46: aload_2
      47: getstatic     #31                 // Field NO_METHOD_FOUND:Ljava/lang/reflect/Method;
      50: if_acmpeq     57
      53: aload_2
      54: goto          58
      57: aconst_null
      58: areturn

  private java.lang.reflect.Method getMappedMethod(java.lang.Class<? extends java.lang.Throwable>);
    Code:
       0: new           #9                  // class java/util/ArrayList
       3: dup
       4: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
      12: invokeinterface #33,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          64
      32: aload_3
      33: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #37                 // class java/lang/Class
      41: astore        4
      43: aload         4
      45: aload_1
      46: invokevirtual #13                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      49: ifeq          61
      52: aload_2
      53: aload         4
      55: invokeinterface #14,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: goto          23
      64: aload_2
      65: invokeinterface #15,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      70: ifne          105
      73: aload_2
      74: new           #38                 // class org/springframework/core/ExceptionDepthComparator
      77: dup
      78: aload_1
      79: invokespecial #39                 // Method org/springframework/core/ExceptionDepthComparator."<init>":(Ljava/lang/Class;)V
      82: invokestatic  #40                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      85: aload_0
      86: getfield      #4                  // Field mappedMethods:Ljava/util/Map;
      89: aload_2
      90: iconst_0
      91: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      96: invokeinterface #28,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     101: checkcast     #29                 // class java/lang/reflect/Method
     104: areturn
     105: aconst_null
     106: areturn

  static {};
    Code:
       0: ldc           #42                 // class java/lang/System
       2: ldc           #43                 // String currentTimeMillis
       4: iconst_0
       5: anewarray     #37                 // class java/lang/Class
       8: invokestatic  #44                 // Method org/springframework/util/ClassUtils.getMethodIfAvailable:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      11: putstatic     #31                 // Field NO_METHOD_FOUND:Ljava/lang/reflect/Method;
      14: return
}
