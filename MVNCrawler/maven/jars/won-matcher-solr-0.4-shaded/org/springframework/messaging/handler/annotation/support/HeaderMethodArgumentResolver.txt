Compiled from "HeaderMethodArgumentResolver.java"
public class org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver extends org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver {
  private static final org.apache.commons.logging.Log logger;

  public org.springframework.messaging.handler.annotation.support.HeaderMethodArgumentResolver(org.springframework.core.convert.ConversionService, org.springframework.beans.factory.config.ConfigurableBeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/messaging/handler/annotation/support/AbstractNamedValueMethodArgumentResolver."<init>":(Lorg/springframework/core/convert/ConversionService;Lorg/springframework/beans/factory/config/ConfigurableBeanFactory;)V
       6: return

  public boolean supportsParameter(org.springframework.core.MethodParameter);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/springframework/messaging/handler/annotation/Header
       3: invokevirtual #3                  // Method org/springframework/core/MethodParameter.hasParameterAnnotation:(Ljava/lang/Class;)Z
       6: ireturn

  protected org.springframework.messaging.handler.annotation.support.AbstractNamedValueMethodArgumentResolver$NamedValueInfo createNamedValueInfo(org.springframework.core.MethodParameter);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/springframework/messaging/handler/annotation/Header
       3: invokevirtual #4                  // Method org/springframework/core/MethodParameter.getParameterAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #2                  // class org/springframework/messaging/handler/annotation/Header
       9: astore_2
      10: new           #5                  // class org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver$HeaderNamedValueInfo
      13: dup
      14: aload_2
      15: aconst_null
      16: invokespecial #6                  // Method org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver$HeaderNamedValueInfo."<init>":(Lorg/springframework/messaging/handler/annotation/Header;Lorg/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver$1;)V
      19: areturn

  protected java.lang.Object resolveArgumentInternal(org.springframework.core.MethodParameter, org.springframework.messaging.Message<?>, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_2
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: aload_3
       7: invokevirtual #8                  // Method org/springframework/messaging/MessageHeaders.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: astore        4
      12: aload_0
      13: aload_2
      14: aload_3
      15: invokespecial #9                  // Method getNativeHeaderValue:(Lorg/springframework/messaging/Message;Ljava/lang/String;)Ljava/lang/Object;
      18: astore        5
      20: aload         4
      22: ifnull        73
      25: aload         5
      27: ifnull        73
      30: getstatic     #10                 // Field logger:Lorg/apache/commons/logging/Log;
      33: invokeinterface #11,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      38: ifeq          73
      41: getstatic     #10                 // Field logger:Lorg/apache/commons/logging/Log;
      44: new           #12                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #14                 // String Message headers contain two values for the same header \'
      53: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_3
      57: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #16                 // String \', one in the top level header map and a second in the nested map with native headers. Using the value from top level map. Use \'nativeHeader.myHeader\' to resolve to the value from the nested native header map.
      62: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokeinterface #18,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      73: aload         4
      75: ifnull        83
      78: aload         4
      80: goto          85
      83: aload         5
      85: areturn

  private java.lang.Object getNativeHeaderValue(org.springframework.messaging.Message<?>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method getNativeHeaders:(Lorg/springframework/messaging/Message;)Ljava/util/Map;
       5: astore_3
       6: aload_2
       7: ldc           #20                 // String nativeHeaders.
       9: invokevirtual #21                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: ifeq          25
      15: aload_2
      16: ldc           #20                 // String nativeHeaders.
      18: invokevirtual #22                 // Method java/lang/String.length:()I
      21: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      24: astore_2
      25: aload_3
      26: ifnull        39
      29: aload_3
      30: aload_2
      31: invokeinterface #24,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      36: ifne          41
      39: aconst_null
      40: areturn
      41: aload_3
      42: aload_2
      43: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #26                 // class java/util/List
      51: astore        4
      53: aload         4
      55: invokeinterface #27,  1           // InterfaceMethod java/util/List.size:()I
      60: iconst_1
      61: if_icmpne     75
      64: aload         4
      66: iconst_0
      67: invokeinterface #28,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      72: goto          77
      75: aload         4
      77: areturn

  private java.util.Map<java.lang.String, java.util.List<java.lang.String>> getNativeHeaders(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: ldc           #30                 // String nativeHeaders
       8: invokevirtual #8                  // Method org/springframework/messaging/MessageHeaders.get:(Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #31                 // class java/util/Map
      14: areturn

  protected void handleMissingValue(java.lang.String, org.springframework.core.MethodParameter, org.springframework.messaging.Message<?>);
    Code:
       0: new           #32                 // class org/springframework/messaging/MessageHandlingException
       3: dup
       4: aload_3
       5: new           #12                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      12: ldc           #33                 // String Missing header \'
      14: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: aload_1
      18: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #34                 // String \' for method parameter type [
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #35                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      30: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      33: ldc           #37                 // String ]
      35: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #38                 // Method org/springframework/messaging/MessageHandlingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
      44: athrow

  static {};
    Code:
       0: ldc           #39                 // class org/springframework/messaging/handler/annotation/support/HeaderMethodArgumentResolver
       2: invokestatic  #40                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #10                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
