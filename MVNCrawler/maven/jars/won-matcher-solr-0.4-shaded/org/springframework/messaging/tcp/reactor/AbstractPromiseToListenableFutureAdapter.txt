Compiled from "AbstractPromiseToListenableFutureAdapter.java"
abstract class org.springframework.messaging.tcp.reactor.AbstractPromiseToListenableFutureAdapter<S, T> implements org.springframework.util.concurrent.ListenableFuture<T> {
  private final reactor.rx.Promise<S> promise;

  private final org.springframework.util.concurrent.ListenableFutureCallbackRegistry<T> registry;

  protected org.springframework.messaging.tcp.reactor.AbstractPromiseToListenableFutureAdapter(reactor.rx.Promise<S>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/util/concurrent/ListenableFutureCallbackRegistry
       8: dup
       9: invokespecial #4                  // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry."<init>":()V
      12: putfield      #1                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      15: aload_1
      16: ldc           #5                  // String Promise must not be null
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field promise:Lreactor/rx/Promise;
      26: aload_0
      27: getfield      #7                  // Field promise:Lreactor/rx/Promise;
      30: new           #8                  // class org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter$1
      33: dup
      34: aload_0
      35: invokespecial #9                  // Method org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter$1."<init>":(Lorg/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter;)V
      38: invokevirtual #10                 // Method reactor/rx/Promise.onSuccess:(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
      41: pop
      42: aload_0
      43: getfield      #7                  // Field promise:Lreactor/rx/Promise;
      46: new           #11                 // class org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter$2
      49: dup
      50: aload_0
      51: invokespecial #12                 // Method org/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter$2."<init>":(Lorg/springframework/messaging/tcp/reactor/AbstractPromiseToListenableFutureAdapter;)V
      54: invokevirtual #13                 // Method reactor/rx/Promise.onError:(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
      57: pop
      58: return

  public T get() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field promise:Lreactor/rx/Promise;
       4: invokevirtual #14                 // Method reactor/rx/Promise.await:()Ljava/lang/Object;
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #15                 // Method adapt:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public T get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field promise:Lreactor/rx/Promise;
       4: lload_1
       5: aload_3
       6: invokevirtual #16                 // Method reactor/rx/Promise.await:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
       9: astore        4
      11: aload_0
      12: getfield      #7                  // Field promise:Lreactor/rx/Promise;
      15: invokevirtual #17                 // Method reactor/rx/Promise.isComplete:()Z
      18: ifne          29
      21: new           #18                 // class java/util/concurrent/TimeoutException
      24: dup
      25: invokespecial #19                 // Method java/util/concurrent/TimeoutException."<init>":()V
      28: athrow
      29: aload_0
      30: aload         4
      32: invokevirtual #15                 // Method adapt:(Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  public boolean cancel(boolean);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isCancelled();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #7                  // Field promise:Lreactor/rx/Promise;
       4: invokevirtual #17                 // Method reactor/rx/Promise.isComplete:()Z
       7: ireturn

  public void addCallback(org.springframework.util.concurrent.ListenableFutureCallback<? super T>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
       4: aload_1
       5: invokevirtual #20                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addCallback:(Lorg/springframework/util/concurrent/ListenableFutureCallback;)V
       8: return

  public void addCallback(org.springframework.util.concurrent.SuccessCallback<? super T>, org.springframework.util.concurrent.FailureCallback);
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addSuccessCallback:(Lorg/springframework/util/concurrent/SuccessCallback;)V
       8: aload_0
       9: getfield      #1                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
      12: aload_2
      13: invokevirtual #22                 // Method org/springframework/util/concurrent/ListenableFutureCallbackRegistry.addFailureCallback:(Lorg/springframework/util/concurrent/FailureCallback;)V
      16: return

  protected abstract T adapt(S);

  static org.springframework.util.concurrent.ListenableFutureCallbackRegistry access$000(org.springframework.messaging.tcp.reactor.AbstractPromiseToListenableFutureAdapter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field registry:Lorg/springframework/util/concurrent/ListenableFutureCallbackRegistry;
       4: areturn
}
