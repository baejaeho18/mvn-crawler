Compiled from "Reactor2TcpClient.java"
public class org.springframework.messaging.tcp.reactor.Reactor2TcpClient<P> implements org.springframework.messaging.tcp.TcpOperations<P> {
  public static final java.lang.Class<reactor.io.net.impl.netty.tcp.NettyTcpClient> REACTOR_TCP_CLIENT_TYPE;

  private static final java.lang.reflect.Method eventLoopGroupMethod;

  private final io.netty.channel.EventLoopGroup eventLoopGroup;

  private final reactor.Environment environment;

  private final reactor.io.net.NetStreams$TcpClientFactory<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>> tcpClientSpecFactory;

  private final java.util.List<reactor.io.net.tcp.TcpClient<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>> tcpClients;

  private boolean stopping;

  public org.springframework.messaging.tcp.reactor.Reactor2TcpClient(java.lang.String, int, reactor.io.codec.Codec<reactor.io.buffer.Buffer, org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>);
    Code:
       0: aload_0
       1: new           #5                  // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$FixedAddressSupplier
       4: dup
       5: aload_1
       6: iload_2
       7: invokespecial #6                  // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$FixedAddressSupplier."<init>":(Ljava/lang/String;I)V
      10: aload_3
      11: invokespecial #7                  // Method "<init>":(Lreactor/fn/Supplier;Lreactor/io/codec/Codec;)V
      14: return

  public org.springframework.messaging.tcp.reactor.Reactor2TcpClient(reactor.fn.Supplier<java.net.InetSocketAddress>, reactor.io.codec.Codec<reactor.io.buffer.Buffer, org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/ArrayList
       8: dup
       9: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #2                  // Field tcpClients:Ljava/util/List;
      15: invokestatic  #11                 // Method initEventLoopGroup:()Lio/netty/channel/nio/NioEventLoopGroup;
      18: astore_3
      19: aload_0
      20: aload_3
      21: putfield      #1                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      24: aload_0
      25: new           #12                 // class reactor/Environment
      28: dup
      29: new           #13                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$SynchronousDispatcherConfigReader
      32: dup
      33: aconst_null
      34: invokespecial #14                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$SynchronousDispatcherConfigReader."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient$1;)V
      37: invokespecial #15                 // Method reactor/Environment."<init>":(Lreactor/core/config/ConfigurationReader;)V
      40: putfield      #4                  // Field environment:Lreactor/Environment;
      43: aload_0
      44: new           #16                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$1
      47: dup
      48: aload_0
      49: aload_2
      50: aload_1
      51: aload_3
      52: invokespecial #17                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$1."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;Lreactor/io/codec/Codec;Lreactor/fn/Supplier;Lio/netty/channel/nio/NioEventLoopGroup;)V
      55: putfield      #18                 // Field tcpClientSpecFactory:Lreactor/io/net/NetStreams$TcpClientFactory;
      58: return

  public org.springframework.messaging.tcp.reactor.Reactor2TcpClient(reactor.io.net.NetStreams$TcpClientFactory<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #9                  // class java/util/ArrayList
       8: dup
       9: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      12: putfield      #2                  // Field tcpClients:Ljava/util/List;
      15: aload_1
      16: ldc           #19                 // String \'tcpClientClientFactory\' must not be null
      18: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #18                 // Field tcpClientSpecFactory:Lreactor/io/net/NetStreams$TcpClientFactory;
      26: aload_0
      27: aconst_null
      28: putfield      #1                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      31: aload_0
      32: aconst_null
      33: putfield      #4                  // Field environment:Lreactor/Environment;
      36: return

  public static io.netty.channel.nio.NioEventLoopGroup initEventLoopGroup();
    Code:
       0: ldc           #21                 // String reactor.tcp.ioThreadCount
       2: invokestatic  #22                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       5: invokestatic  #23                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       8: istore_0
       9: goto          15
      12: astore_1
      13: iconst_m1
      14: istore_0
      15: iload_0
      16: ifgt          26
      19: invokestatic  #25                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      22: invokevirtual #26                 // Method java/lang/Runtime.availableProcessors:()I
      25: istore_0
      26: new           #27                 // class io/netty/channel/nio/NioEventLoopGroup
      29: dup
      30: iload_0
      31: new           #28                 // class reactor/core/support/NamedDaemonThreadFactory
      34: dup
      35: ldc           #29                 // String reactor-tcp-io
      37: invokespecial #30                 // Method reactor/core/support/NamedDaemonThreadFactory."<init>":(Ljava/lang/String;)V
      40: invokespecial #31                 // Method io/netty/channel/nio/NioEventLoopGroup."<init>":(ILjava/util/concurrent/ThreadFactory;)V
      43: areturn
    Exception table:
       from    to  target type
           0     9    12   Class java/lang/Throwable

  public org.springframework.util.concurrent.ListenableFuture<java.lang.Void> connect(org.springframework.messaging.tcp.TcpConnectionHandler<P>);
    Code:
       0: aload_1
       1: ldc           #32                 // String TcpConnectionHandler must not be null
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #2                  // Field tcpClients:Ljava/util/List;
      10: dup
      11: astore        4
      13: monitorenter
      14: aload_0
      15: getfield      #33                 // Field stopping:Z
      18: ifeq          56
      21: new           #34                 // class java/lang/IllegalStateException
      24: dup
      25: ldc           #35                 // String Shutting down.
      27: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      30: astore        5
      32: aload_1
      33: aload         5
      35: invokeinterface #37,  2           // InterfaceMethod org/springframework/messaging/tcp/TcpConnectionHandler.afterConnectFailure:(Ljava/lang/Throwable;)V
      40: new           #38                 // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
      43: dup
      44: aload         5
      46: invokestatic  #39                 // Method reactor/rx/Promises.error:(Ljava/lang/Throwable;)Lreactor/rx/Promise;
      49: invokespecial #40                 // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
      52: aload         4
      54: monitorexit
      55: areturn
      56: getstatic     #41                 // Field REACTOR_TCP_CLIENT_TYPE:Ljava/lang/Class;
      59: aload_0
      60: getfield      #18                 // Field tcpClientSpecFactory:Lreactor/io/net/NetStreams$TcpClientFactory;
      63: invokestatic  #42                 // Method reactor/io/net/NetStreams.tcpClient:(Ljava/lang/Class;Lreactor/fn/Function;)Lreactor/io/net/tcp/TcpClient;
      66: astore_2
      67: aload_0
      68: getfield      #2                  // Field tcpClients:Ljava/util/List;
      71: aload_2
      72: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      77: pop
      78: new           #44                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$2
      81: dup
      82: aload_0
      83: aload_2
      84: invokespecial #45                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$2."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;Lreactor/io/net/tcp/TcpClient;)V
      87: astore_3
      88: aload         4
      90: monitorexit
      91: goto          102
      94: astore        6
      96: aload         4
      98: monitorexit
      99: aload         6
     101: athrow
     102: aload_2
     103: new           #46                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$MessageChannelStreamHandler
     106: dup
     107: aload_1
     108: aload_3
     109: invokespecial #47                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$MessageChannelStreamHandler."<init>":(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Ljava/lang/Runnable;)V
     112: invokevirtual #48                 // Method reactor/io/net/tcp/TcpClient.start:(Lreactor/io/net/ReactorChannelHandler;)Lreactor/rx/Promise;
     115: astore        4
     117: new           #38                 // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
     120: dup
     121: aload         4
     123: new           #49                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$3
     126: dup
     127: aload_0
     128: aload_3
     129: aload_1
     130: invokespecial #50                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$3."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;Ljava/lang/Runnable;Lorg/springframework/messaging/tcp/TcpConnectionHandler;)V
     133: invokevirtual #51                 // Method reactor/rx/Promise.onError:(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
     136: invokespecial #40                 // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
     139: areturn
    Exception table:
       from    to  target type
          14    55    94   any
          56    91    94   any
          94    99    94   any

  public org.springframework.util.concurrent.ListenableFuture<java.lang.Void> connect(org.springframework.messaging.tcp.TcpConnectionHandler<P>, org.springframework.messaging.tcp.ReconnectStrategy);
    Code:
       0: aload_1
       1: ldc           #32                 // String TcpConnectionHandler must not be null
       3: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #52                 // String ReconnectStrategy must not be null
       9: invokestatic  #20                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #2                  // Field tcpClients:Ljava/util/List;
      16: dup
      17: astore        5
      19: monitorenter
      20: aload_0
      21: getfield      #33                 // Field stopping:Z
      24: ifeq          62
      27: new           #34                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #35                 // String Shutting down.
      33: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: astore        6
      38: aload_1
      39: aload         6
      41: invokeinterface #37,  2           // InterfaceMethod org/springframework/messaging/tcp/TcpConnectionHandler.afterConnectFailure:(Ljava/lang/Throwable;)V
      46: new           #38                 // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
      49: dup
      50: aload         6
      52: invokestatic  #39                 // Method reactor/rx/Promises.error:(Ljava/lang/Throwable;)Lreactor/rx/Promise;
      55: invokespecial #40                 // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
      58: aload         5
      60: monitorexit
      61: areturn
      62: getstatic     #41                 // Field REACTOR_TCP_CLIENT_TYPE:Ljava/lang/Class;
      65: aload_0
      66: getfield      #18                 // Field tcpClientSpecFactory:Lreactor/io/net/NetStreams$TcpClientFactory;
      69: invokestatic  #42                 // Method reactor/io/net/NetStreams.tcpClient:(Ljava/lang/Class;Lreactor/fn/Function;)Lreactor/io/net/tcp/TcpClient;
      72: astore_3
      73: aload_0
      74: getfield      #2                  // Field tcpClients:Ljava/util/List;
      77: aload_3
      78: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      83: pop
      84: new           #53                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$4
      87: dup
      88: aload_0
      89: aload_3
      90: invokespecial #54                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$4."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;Lreactor/io/net/tcp/TcpClient;)V
      93: astore        4
      95: aload         5
      97: monitorexit
      98: goto          109
     101: astore        7
     103: aload         5
     105: monitorexit
     106: aload         7
     108: athrow
     109: aload_3
     110: new           #46                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$MessageChannelStreamHandler
     113: dup
     114: aload_1
     115: aload         4
     117: invokespecial #47                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$MessageChannelStreamHandler."<init>":(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Ljava/lang/Runnable;)V
     120: new           #55                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$ReactorReconnectAdapter
     123: dup
     124: aload_2
     125: invokespecial #56                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$ReactorReconnectAdapter."<init>":(Lorg/springframework/messaging/tcp/ReconnectStrategy;)V
     128: invokevirtual #57                 // Method reactor/io/net/tcp/TcpClient.start:(Lreactor/io/net/ReactorChannelHandler;Lreactor/io/net/Reconnect;)Lreactor/rx/Stream;
     131: astore        5
     133: new           #38                 // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
     136: dup
     137: aload         5
     139: invokevirtual #58                 // Method reactor/rx/Stream.next:()Lreactor/rx/Promise;
     142: invokevirtual #59                 // Method reactor/rx/Promise.after:()Lreactor/rx/Promise;
     145: invokespecial #40                 // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
     148: areturn
    Exception table:
       from    to  target type
          20    61   101   any
          62    98   101   any
         101   106   101   any

  public org.springframework.util.concurrent.ListenableFuture<java.lang.Void> shutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpClients:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_1
       9: putfield      #33                 // Field stopping:Z
      12: aload_1
      13: monitorexit
      14: goto          22
      17: astore_2
      18: aload_1
      19: monitorexit
      20: aload_2
      21: athrow
      22: aload_0
      23: getfield      #2                  // Field tcpClients:Ljava/util/List;
      26: invokestatic  #60                 // Method reactor/rx/Streams.from:(Ljava/lang/Iterable;)Lreactor/rx/Stream;
      29: new           #61                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$5
      32: dup
      33: aload_0
      34: invokespecial #62                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$5."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;)V
      37: invokevirtual #63                 // Method reactor/rx/Stream.flatMap:(Lreactor/fn/Function;)Lreactor/rx/Stream;
      40: invokevirtual #58                 // Method reactor/rx/Stream.next:()Lreactor/rx/Promise;
      43: astore_1
      44: aload_0
      45: getfield      #1                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
      48: ifnull        71
      51: invokestatic  #64                 // Method reactor/rx/Promises.prepare:()Lreactor/rx/Promise;
      54: astore_2
      55: aload_1
      56: new           #65                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$6
      59: dup
      60: aload_0
      61: aload_2
      62: invokespecial #66                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$6."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;Lreactor/rx/Promise;)V
      65: invokevirtual #67                 // Method reactor/rx/Promise.onComplete:(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
      68: pop
      69: aload_2
      70: astore_1
      71: aload_0
      72: getfield      #4                  // Field environment:Lreactor/Environment;
      75: ifnull        91
      78: aload_1
      79: new           #68                 // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$7
      82: dup
      83: aload_0
      84: invokespecial #69                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$7."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;)V
      87: invokevirtual #67                 // Method reactor/rx/Promise.onComplete:(Lreactor/fn/Consumer;)Lreactor/rx/Promise;
      90: pop
      91: new           #38                 // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
      94: dup
      95: aload_1
      96: invokespecial #40                 // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
      99: areturn
    Exception table:
       from    to  target type
           7    14    17   any
          17    20    17   any

  private static java.lang.reflect.Method initEventLoopGroupMethod();
    Code:
       0: ldc           #70                 // class reactor/io/net/impl/netty/NettyClientSocketOptions
       2: invokevirtual #71                 // Method java/lang/Class.getMethods:()[Ljava/lang/reflect/Method;
       5: astore_0
       6: aload_0
       7: arraylength
       8: istore_1
       9: iconst_0
      10: istore_2
      11: iload_2
      12: iload_1
      13: if_icmpge     49
      16: aload_0
      17: iload_2
      18: aaload
      19: astore_3
      20: aload_3
      21: invokevirtual #72                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      24: ldc           #73                 // String eventLoopGroup
      26: invokevirtual #74                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          43
      32: aload_3
      33: invokevirtual #75                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      36: arraylength
      37: iconst_1
      38: if_icmpne     43
      41: aload_3
      42: areturn
      43: iinc          2, 1
      46: goto          11
      49: new           #34                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #76                 // String No compatible Reactor version found
      55: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow

  static reactor.Environment access$100(org.springframework.messaging.tcp.reactor.Reactor2TcpClient);
    Code:
       0: aload_0
       1: getfield      #4                  // Field environment:Lreactor/Environment;
       4: areturn

  static java.lang.reflect.Method access$200();
    Code:
       0: getstatic     #3                  // Field eventLoopGroupMethod:Ljava/lang/reflect/Method;
       3: areturn

  static java.util.List access$300(org.springframework.messaging.tcp.reactor.Reactor2TcpClient);
    Code:
       0: aload_0
       1: getfield      #2                  // Field tcpClients:Ljava/util/List;
       4: areturn

  static io.netty.channel.EventLoopGroup access$400(org.springframework.messaging.tcp.reactor.Reactor2TcpClient);
    Code:
       0: aload_0
       1: getfield      #1                  // Field eventLoopGroup:Lio/netty/channel/EventLoopGroup;
       4: areturn

  static {};
    Code:
       0: ldc           #77                 // class reactor/io/net/impl/netty/tcp/NettyTcpClient
       2: putstatic     #41                 // Field REACTOR_TCP_CLIENT_TYPE:Ljava/lang/Class;
       5: invokestatic  #78                 // Method initEventLoopGroupMethod:()Ljava/lang/reflect/Method;
       8: putstatic     #3                  // Field eventLoopGroupMethod:Ljava/lang/reflect/Method;
      11: return
}
