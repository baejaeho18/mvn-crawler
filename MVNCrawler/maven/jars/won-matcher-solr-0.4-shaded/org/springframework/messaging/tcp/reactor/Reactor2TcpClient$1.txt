Compiled from "Reactor2TcpClient.java"
class org.springframework.messaging.tcp.reactor.Reactor2TcpClient$1 implements reactor.io.net.NetStreams$TcpClientFactory<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>> {
  final reactor.io.codec.Codec val$codec;

  final reactor.fn.Supplier val$addressSupplier;

  final io.netty.channel.nio.NioEventLoopGroup val$nioEventLoopGroup;

  final org.springframework.messaging.tcp.reactor.Reactor2TcpClient this$0;

  org.springframework.messaging.tcp.reactor.Reactor2TcpClient$1(org.springframework.messaging.tcp.reactor.Reactor2TcpClient, reactor.io.codec.Codec, reactor.fn.Supplier, io.netty.channel.nio.NioEventLoopGroup);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$codec:Lreactor/io/codec/Codec;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$addressSupplier:Lreactor/fn/Supplier;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$nioEventLoopGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      21: aload_0
      22: invokespecial #5                  // Method java/lang/Object."<init>":()V
      25: return

  public reactor.io.net.Spec$TcpClientSpec<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>> apply(reactor.io.net.Spec$TcpClientSpec<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;
       5: invokestatic  #6                  // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient.access$100:(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;)Lreactor/Environment;
       8: invokevirtual #7                  // Method reactor/io/net/Spec$TcpClientSpec.env:(Lreactor/Environment;)Lreactor/bus/spec/DispatcherComponentSpec;
      11: checkcast     #8                  // class reactor/io/net/Spec$TcpClientSpec
      14: aload_0
      15: getfield      #2                  // Field val$codec:Lreactor/io/codec/Codec;
      18: invokevirtual #9                  // Method reactor/io/net/Spec$TcpClientSpec.codec:(Lreactor/io/codec/Codec;)Lreactor/io/net/Spec$TcpClientSpec;
      21: aload_0
      22: getfield      #3                  // Field val$addressSupplier:Lreactor/fn/Supplier;
      25: invokevirtual #10                 // Method reactor/io/net/Spec$TcpClientSpec.connect:(Lreactor/fn/Supplier;)Lreactor/io/net/Spec$TcpClientSpec;
      28: aload_0
      29: invokespecial #11                 // Method createClientSocketOptions:()Lreactor/io/net/config/ClientSocketOptions;
      32: invokevirtual #12                 // Method reactor/io/net/Spec$TcpClientSpec.options:(Lreactor/io/net/config/ClientSocketOptions;)Lreactor/io/net/Spec$TcpClientSpec;
      35: areturn

  private reactor.io.net.config.ClientSocketOptions createClientSocketOptions();
    Code:
       0: invokestatic  #13                 // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient.access$200:()Ljava/lang/reflect/Method;
       3: new           #14                 // class reactor/io/net/impl/netty/NettyClientSocketOptions
       6: dup
       7: invokespecial #15                 // Method reactor/io/net/impl/netty/NettyClientSocketOptions."<init>":()V
      10: iconst_1
      11: anewarray     #16                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: aload_0
      17: getfield      #4                  // Field val$nioEventLoopGroup:Lio/netty/channel/nio/NioEventLoopGroup;
      20: aastore
      21: invokestatic  #17                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #18                 // class reactor/io/net/config/ClientSocketOptions
      27: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class reactor/io/net/Spec$TcpClientSpec
       5: invokevirtual #19                 // Method apply:(Lreactor/io/net/Spec$TcpClientSpec;)Lreactor/io/net/Spec$TcpClientSpec;
       8: areturn
}
