Compiled from "Reactor2TcpConnection.java"
public class org.springframework.messaging.tcp.reactor.Reactor2TcpConnection<P> implements org.springframework.messaging.tcp.TcpConnection<P> {
  private final reactor.io.net.ChannelStream<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>> channelStream;

  private final reactor.rx.Promise<java.lang.Void> closePromise;

  public org.springframework.messaging.tcp.reactor.Reactor2TcpConnection(reactor.io.net.ChannelStream<org.springframework.messaging.Message<P>, org.springframework.messaging.Message<P>>, reactor.rx.Promise<java.lang.Void>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channelStream:Lreactor/io/net/ChannelStream;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field closePromise:Lreactor/rx/Promise;
      14: return

  public org.springframework.util.concurrent.ListenableFuture<java.lang.Void> send(org.springframework.messaging.Message<P>);
    Code:
       0: invokestatic  #4                  // Method reactor/rx/Promises.prepare:()Lreactor/rx/Promise;
       3: astore_2
       4: aload_0
       5: getfield      #2                  // Field channelStream:Lreactor/io/net/ChannelStream;
       8: aload_1
       9: invokestatic  #5                  // Method reactor/rx/Streams.just:(Ljava/lang/Object;)Lreactor/rx/Stream;
      12: invokevirtual #6                  // Method reactor/io/net/ChannelStream.writeWith:(Lorg/reactivestreams/Publisher;)Lreactor/rx/Stream;
      15: aload_2
      16: invokevirtual #7                  // Method reactor/rx/Stream.subscribe:(Lorg/reactivestreams/Subscriber;)V
      19: new           #8                  // class org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter
      22: dup
      23: aload_2
      24: invokespecial #9                  // Method org/springframework/messaging/tcp/reactor/PassThroughPromiseToListenableFutureAdapter."<init>":(Lreactor/rx/Promise;)V
      27: areturn

  public void onReadInactivity(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channelStream:Lreactor/io/net/ChannelStream;
       4: invokevirtual #10                 // Method reactor/io/net/ChannelStream.on:()Lreactor/io/net/ReactorChannel$ConsumerSpec;
       7: lload_2
       8: aload_1
       9: invokestatic  #11                 // Method reactor/fn/Functions.consumer:(Ljava/lang/Runnable;)Lreactor/fn/Consumer;
      12: invokeinterface #12,  4           // InterfaceMethod reactor/io/net/ReactorChannel$ConsumerSpec.readIdle:(JLreactor/fn/Consumer;)Lreactor/io/net/ReactorChannel$ConsumerSpec;
      17: pop
      18: return

  public void onWriteInactivity(java.lang.Runnable, long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channelStream:Lreactor/io/net/ChannelStream;
       4: invokevirtual #10                 // Method reactor/io/net/ChannelStream.on:()Lreactor/io/net/ReactorChannel$ConsumerSpec;
       7: lload_2
       8: aload_1
       9: invokestatic  #11                 // Method reactor/fn/Functions.consumer:(Ljava/lang/Runnable;)Lreactor/fn/Consumer;
      12: invokeinterface #13,  4           // InterfaceMethod reactor/io/net/ReactorChannel$ConsumerSpec.writeIdle:(JLreactor/fn/Consumer;)Lreactor/io/net/ReactorChannel$ConsumerSpec;
      17: pop
      18: return

  public void close();
    Code:
       0: aload_0
       1: getfield      #3                  // Field closePromise:Lreactor/rx/Promise;
       4: invokevirtual #14                 // Method reactor/rx/Promise.onComplete:()V
       7: return
}
