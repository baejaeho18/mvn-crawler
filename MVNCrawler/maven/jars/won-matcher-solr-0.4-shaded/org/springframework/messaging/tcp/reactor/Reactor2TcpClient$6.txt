Compiled from "Reactor2TcpClient.java"
class org.springframework.messaging.tcp.reactor.Reactor2TcpClient$6 implements reactor.fn.Consumer<reactor.rx.Promise<java.lang.Void>> {
  final reactor.rx.Promise val$eventLoopPromise;

  final org.springframework.messaging.tcp.reactor.Reactor2TcpClient this$0;

  org.springframework.messaging.tcp.reactor.Reactor2TcpClient$6(org.springframework.messaging.tcp.reactor.Reactor2TcpClient, reactor.rx.Promise);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$eventLoopPromise:Lreactor/rx/Promise;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public void accept(reactor.rx.Promise<java.lang.Void>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;
       4: invokestatic  #4                  // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient.access$400:(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient;)Lio/netty/channel/EventLoopGroup;
       7: invokeinterface #5,  1            // InterfaceMethod io/netty/channel/EventLoopGroup.shutdownGracefully:()Lio/netty/util/concurrent/Future;
      12: new           #6                  // class org/springframework/messaging/tcp/reactor/Reactor2TcpClient$6$1
      15: dup
      16: aload_0
      17: invokespecial #7                  // Method org/springframework/messaging/tcp/reactor/Reactor2TcpClient$6$1."<init>":(Lorg/springframework/messaging/tcp/reactor/Reactor2TcpClient$6;)V
      20: invokeinterface #8,  2            // InterfaceMethod io/netty/util/concurrent/Future.addListener:(Lio/netty/util/concurrent/GenericFutureListener;)Lio/netty/util/concurrent/Future;
      25: pop
      26: return

  public void accept(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class reactor/rx/Promise
       5: invokevirtual #10                 // Method accept:(Lreactor/rx/Promise;)V
       8: return
}
