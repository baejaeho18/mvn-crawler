Compiled from "MessageHeaderAccessor.java"
public class org.springframework.messaging.support.MessageHeaderAccessor {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private static final org.springframework.util.MimeType[] READABLE_MIME_TYPES;

  private final org.springframework.messaging.support.MessageHeaderAccessor$MutableMessageHeaders headers;

  private boolean leaveMutable;

  private boolean modified;

  private boolean enableTimestamp;

  private org.springframework.util.IdGenerator idGenerator;

  public org.springframework.messaging.support.MessageHeaderAccessor();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #3                  // Method "<init>":(Lorg/springframework/messaging/Message;)V
       5: return

  public org.springframework.messaging.support.MessageHeaderAccessor(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field leaveMutable:Z
       9: aload_0
      10: iconst_0
      11: putfield      #6                  // Field modified:Z
      14: aload_0
      15: iconst_0
      16: putfield      #1                  // Field enableTimestamp:Z
      19: aload_0
      20: new           #7                  // class org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders
      23: dup
      24: aload_0
      25: aload_1
      26: ifnull        38
      29: aload_1
      30: invokeinterface #8,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      35: goto          39
      38: aconst_null
      39: invokespecial #9                  // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders."<init>":(Lorg/springframework/messaging/support/MessageHeaderAccessor;Ljava/util/Map;)V
      42: putfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      45: return

  protected org.springframework.messaging.support.MessageHeaderAccessor createAccessor(org.springframework.messaging.Message<?>);
    Code:
       0: new           #11                 // class org/springframework/messaging/support/MessageHeaderAccessor
       3: dup
       4: aload_1
       5: invokespecial #3                  // Method "<init>":(Lorg/springframework/messaging/Message;)V
       8: areturn

  public void setLeaveMutable(boolean);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       4: invokevirtual #12                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.isMutable:()Z
       7: ldc           #13                 // String Already immutable
       9: invokestatic  #14                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      12: aload_0
      13: iload_1
      14: putfield      #5                  // Field leaveMutable:Z
      17: return

  public void setImmutable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       4: invokevirtual #15                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.setImmutable:()V
       7: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       4: invokevirtual #12                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.isMutable:()Z
       7: ireturn

  protected void setModified(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field modified:Z
       5: return

  public boolean isModified();
    Code:
       0: aload_0
       1: getfield      #6                  // Field modified:Z
       4: ireturn

  void setEnableTimestamp(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field enableTimestamp:Z
       5: return

  void setIdGenerator(org.springframework.util.IdGenerator);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field idGenerator:Lorg/springframework/util/IdGenerator;
       5: return

  public org.springframework.messaging.MessageHeaders getMessageHeaders();
    Code:
       0: aload_0
       1: getfield      #5                  // Field leaveMutable:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #16                 // Method setImmutable:()V
      11: aload_0
      12: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      15: areturn

  public org.springframework.messaging.MessageHeaders toMessageHeaders();
    Code:
       0: new           #17                 // class org/springframework/messaging/MessageHeaders
       3: dup
       4: aload_0
       5: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       8: invokespecial #18                 // Method org/springframework/messaging/MessageHeaders."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.util.Map<java.lang.String, java.lang.Object> toMap();
    Code:
       0: new           #19                 // class java/util/HashMap
       3: dup
       4: aload_0
       5: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       8: invokespecial #20                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      11: areturn

  public java.lang.Object getHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: areturn

  public void setHeader(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method isReadOnly:(Ljava/lang/String;)Z
       5: ifeq          40
       8: new           #23                 // class java/lang/IllegalArgumentException
      11: dup
      12: new           #24                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #26                 // String \'
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_1
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #28                 // String \' header is read-only
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokevirtual #31                 // Method verifyType:(Ljava/lang/String;Ljava/lang/Object;)V
      46: aload_2
      47: ifnull        85
      50: aload_2
      51: aload_0
      52: aload_1
      53: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
      56: invokestatic  #33                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      59: ifne          115
      62: aload_0
      63: iconst_1
      64: putfield      #6                  // Field modified:Z
      67: aload_0
      68: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      71: invokevirtual #34                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.getRawHeaders:()Ljava/util/Map;
      74: aload_1
      75: aload_2
      76: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: goto          115
      85: aload_0
      86: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      89: aload_1
      90: invokevirtual #36                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.containsKey:(Ljava/lang/Object;)Z
      93: ifeq          115
      96: aload_0
      97: iconst_1
      98: putfield      #6                  // Field modified:Z
     101: aload_0
     102: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
     105: invokevirtual #34                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.getRawHeaders:()Ljava/util/Map;
     108: aload_1
     109: invokeinterface #37,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     114: pop
     115: return

  protected void verifyType(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        72
       4: aload_2
       5: ifnull        72
       8: ldc           #38                 // String errorChannel
      10: aload_1
      11: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      14: ifne          26
      17: ldc           #40                 // String replyChannel
      19: aload_1
      20: invokevirtual #41                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      23: ifeq          72
      26: aload_2
      27: instanceof    #42                 // class org/springframework/messaging/MessageChannel
      30: ifne          72
      33: aload_2
      34: instanceof    #43                 // class java/lang/String
      37: ifne          72
      40: new           #23                 // class java/lang/IllegalArgumentException
      43: dup
      44: new           #24                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #26                 // String \'
      53: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_1
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #44                 // String \' header value must be a MessageChannel or String
      62: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: return

  public void setHeaderIfAbsent(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       5: ifnonnull     14
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      14: return

  public void removeHeader(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #46                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          21
       7: aload_0
       8: aload_1
       9: invokevirtual #22                 // Method isReadOnly:(Ljava/lang/String;)Z
      12: ifne          21
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public void removeHeaders(java.lang.String...);
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     83
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload         6
      32: invokestatic  #46                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      35: ifeq          77
      38: aload         6
      40: ldc           #49                 // String *
      42: invokevirtual #50                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      45: ifeq          68
      48: aload_2
      49: aload_0
      50: aload         6
      52: aload_0
      53: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      56: invokespecial #51                 // Method getMatchingHeaderNames:(Ljava/lang/String;Ljava/util/Map;)Ljava/util/List;
      59: invokeinterface #52,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      64: pop
      65: goto          77
      68: aload_2
      69: aload         6
      71: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      76: pop
      77: iinc          5, 1
      80: goto          17
      83: aload_2
      84: invokeinterface #54,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      89: astore_3
      90: aload_3
      91: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          119
      99: aload_3
     100: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #43                 // class java/lang/String
     108: astore        4
     110: aload_0
     111: aload         4
     113: invokevirtual #57                 // Method removeHeader:(Ljava/lang/String;)V
     116: goto          90
     119: return

  private java.util.List<java.lang.String> getMatchingHeaderNames(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #47                 // class java/util/ArrayList
       3: dup
       4: invokespecial #48                 // Method java/util/ArrayList."<init>":()V
       7: astore_3
       8: aload_2
       9: ifnull        68
      12: aload_2
      13: invokeinterface #58,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      18: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: astore        4
      25: aload         4
      27: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          68
      35: aload         4
      37: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #43                 // class java/lang/String
      45: astore        5
      47: aload_1
      48: aload         5
      50: invokestatic  #60                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:(Ljava/lang/String;Ljava/lang/String;)Z
      53: ifeq          65
      56: aload_3
      57: aload         5
      59: invokeinterface #53,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          25
      68: aload_3
      69: areturn

  public void copyHeaders(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnull        73
       4: aload_1
       5: invokeinterface #61,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          73
      25: aload_2
      26: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #62                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #43                 // class java/lang/String
      45: invokevirtual #22                 // Method isReadOnly:(Ljava/lang/String;)Z
      48: ifne          70
      51: aload_0
      52: aload_3
      53: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: checkcast     #43                 // class java/lang/String
      61: aload_3
      62: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      70: goto          16
      73: return

  public void copyHeadersIfAbsent(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_1
       1: ifnull        73
       4: aload_1
       5: invokeinterface #61,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          73
      25: aload_2
      26: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #62                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: checkcast     #43                 // class java/lang/String
      45: invokevirtual #22                 // Method isReadOnly:(Ljava/lang/String;)Z
      48: ifne          70
      51: aload_0
      52: aload_3
      53: invokeinterface #63,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      58: checkcast     #43                 // class java/lang/String
      61: aload_3
      62: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      67: invokevirtual #65                 // Method setHeaderIfAbsent:(Ljava/lang/String;Ljava/lang/Object;)V
      70: goto          16
      73: return

  protected boolean isReadOnly(java.lang.String);
    Code:
       0: ldc           #66                 // String id
       2: aload_1
       3: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifne          18
       9: ldc           #67                 // String timestamp
      11: aload_1
      12: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      15: ifeq          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn

  public java.util.UUID getId();
    Code:
       0: aload_0
       1: ldc           #66                 // String id
       3: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: instanceof    #68                 // class java/util/UUID
      17: ifeq          27
      20: aload_1
      21: checkcast     #68                 // class java/util/UUID
      24: goto          34
      27: aload_1
      28: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokestatic  #70                 // Method java/util/UUID.fromString:(Ljava/lang/String;)Ljava/util/UUID;
      34: areturn

  public java.lang.Long getTimestamp();
    Code:
       0: aload_0
       1: ldc           #67                 // String timestamp
       3: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: instanceof    #71                 // class java/lang/Long
      17: ifeq          30
      20: aload_1
      21: checkcast     #71                 // class java/lang/Long
      24: invokevirtual #72                 // Method java/lang/Long.longValue:()J
      27: goto          37
      30: aload_1
      31: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
      34: invokestatic  #73                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      37: invokestatic  #74                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: areturn

  public void setContentType(org.springframework.util.MimeType);
    Code:
       0: aload_0
       1: ldc           #75                 // String contentType
       3: aload_1
       4: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public org.springframework.util.MimeType getContentType();
    Code:
       0: aload_0
       1: ldc           #75                 // String contentType
       3: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: astore_1
       7: aload_1
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_1
      14: instanceof    #76                 // class org/springframework/util/MimeType
      17: ifeq          27
      20: aload_1
      21: checkcast     #76                 // class org/springframework/util/MimeType
      24: goto          34
      27: aload_1
      28: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokestatic  #77                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      34: areturn

  public void setReplyChannelName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #40                 // String replyChannel
       3: aload_1
       4: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public void setReplyChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: ldc           #40                 // String replyChannel
       3: aload_1
       4: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.Object getReplyChannel();
    Code:
       0: aload_0
       1: ldc           #40                 // String replyChannel
       3: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public void setErrorChannelName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #38                 // String errorChannel
       3: aload_1
       4: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public void setErrorChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: ldc           #38                 // String errorChannel
       3: aload_1
       4: invokevirtual #45                 // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       7: return

  public java.lang.Object getErrorChannel();
    Code:
       0: aload_0
       1: ldc           #38                 // String errorChannel
       3: invokevirtual #32                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public java.lang.String getShortLogMessage(java.lang.Object);
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #78                 // String headers=
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      16: invokevirtual #79                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.toString:()Ljava/lang/String;
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: aload_1
      24: invokevirtual #80                 // Method getShortPayloadLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      27: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  public java.lang.String getDetailedLogMessage(java.lang.Object);
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #78                 // String headers=
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      16: invokevirtual #79                 // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.toString:()Ljava/lang/String;
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: aload_1
      24: invokevirtual #81                 // Method getDetailedPayloadLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      27: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: areturn

  protected java.lang.String getShortPayloadLogMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #43                 // class java/lang/String
       4: ifeq          74
       7: aload_1
       8: checkcast     #43                 // class java/lang/String
      11: astore_2
      12: aload_2
      13: invokevirtual #82                 // Method java/lang/String.length:()I
      16: bipush        80
      18: if_icmpge     43
      21: new           #24                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #83                 // String  payload=
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_2
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: goto          73
      43: new           #24                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #83                 // String  payload=
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_2
      56: iconst_0
      57: bipush        80
      59: invokevirtual #84                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      62: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #85                 // String ...(truncated)
      67: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: areturn
      74: aload_1
      75: instanceof    #86                 // class "[B"
      78: ifeq          217
      81: aload_1
      82: checkcast     #86                 // class "[B"
      85: checkcast     #86                 // class "[B"
      88: astore_2
      89: aload_0
      90: invokevirtual #87                 // Method isReadableContentType:()Z
      93: ifeq          191
      96: aload_0
      97: invokevirtual #88                 // Method getContentType:()Lorg/springframework/util/MimeType;
     100: invokevirtual #89                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
     103: astore_3
     104: aload_3
     105: ifnull        112
     108: aload_3
     109: goto          115
     112: getstatic     #90                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
     115: astore_3
     116: aload_2
     117: arraylength
     118: bipush        80
     120: if_icmpge     153
     123: new           #24                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #83                 // String  payload=
     132: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: new           #43                 // class java/lang/String
     138: dup
     139: aload_2
     140: aload_3
     141: invokespecial #91                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     144: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     150: goto          190
     153: new           #24                 // class java/lang/StringBuilder
     156: dup
     157: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     160: ldc           #83                 // String  payload=
     162: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: new           #43                 // class java/lang/String
     168: dup
     169: aload_2
     170: bipush        80
     172: invokestatic  #92                 // Method java/util/Arrays.copyOf:([BI)[B
     175: aload_3
     176: invokespecial #91                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
     179: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: ldc           #85                 // String ...(truncated)
     184: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: areturn
     191: new           #24                 // class java/lang/StringBuilder
     194: dup
     195: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     198: ldc           #93                 // String  payload=byte[
     200: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: aload_2
     204: arraylength
     205: invokevirtual #94                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     208: ldc           #95                 // String ]
     210: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     216: areturn
     217: aload_1
     218: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
     221: astore_2
     222: aload_2
     223: invokevirtual #82                 // Method java/lang/String.length:()I
     226: bipush        80
     228: if_icmpge     253
     231: new           #24                 // class java/lang/StringBuilder
     234: dup
     235: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     238: ldc           #83                 // String  payload=
     240: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     243: aload_2
     244: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     247: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     250: goto          275
     253: new           #24                 // class java/lang/StringBuilder
     256: dup
     257: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     260: ldc           #83                 // String  payload=
     262: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: aload_1
     266: invokestatic  #96                 // Method org/springframework/util/ObjectUtils.identityToString:(Ljava/lang/Object;)Ljava/lang/String;
     269: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     272: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     275: areturn

  protected java.lang.String getDetailedPayloadLogMessage(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #43                 // class java/lang/String
       4: ifeq          27
       7: new           #24                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #83                 // String  payload=
      16: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn
      27: aload_1
      28: instanceof    #86                 // class "[B"
      31: ifeq          123
      34: aload_1
      35: checkcast     #86                 // class "[B"
      38: checkcast     #86                 // class "[B"
      41: astore_2
      42: aload_0
      43: invokevirtual #87                 // Method isReadableContentType:()Z
      46: ifeq          97
      49: aload_0
      50: invokevirtual #88                 // Method getContentType:()Lorg/springframework/util/MimeType;
      53: invokevirtual #89                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      56: astore_3
      57: aload_3
      58: ifnull        65
      61: aload_3
      62: goto          68
      65: getstatic     #90                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      68: astore_3
      69: new           #24                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #83                 // String  payload=
      78: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: new           #43                 // class java/lang/String
      84: dup
      85: aload_2
      86: aload_3
      87: invokespecial #91                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      90: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: areturn
      97: new           #24                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #93                 // String  payload=byte[
     106: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_2
     110: arraylength
     111: invokevirtual #94                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: ldc           #95                 // String ]
     116: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: areturn
     123: new           #24                 // class java/lang/StringBuilder
     126: dup
     127: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     130: ldc           #83                 // String  payload=
     132: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_1
     136: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     139: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     142: areturn

  protected boolean isReadableContentType();
    Code:
       0: aload_0
       1: invokevirtual #88                 // Method getContentType:()Lorg/springframework/util/MimeType;
       4: astore_1
       5: getstatic     #98                 // Field READABLE_MIME_TYPES:[Lorg/springframework/util/MimeType;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     44
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: aload_1
      30: invokevirtual #99                 // Method org/springframework/util/MimeType.includes:(Lorg/springframework/util/MimeType;)Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: iinc          4, 1
      41: goto          15
      44: iconst_0
      45: ireturn

  public java.lang.String toString();
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #100                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #101                // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      14: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #102                // String  [headers=
      19: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #10                 // Field headers:Lorg/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders;
      26: invokevirtual #97                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      29: ldc           #95                 // String ]
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn

  public static <T extends org.springframework.messaging.support.MessageHeaderAccessor> T getAccessor(org.springframework.messaging.Message<?>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: aload_1
       7: invokestatic  #103                // Method getAccessor:(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      10: areturn

  public static <T extends org.springframework.messaging.support.MessageHeaderAccessor> T getAccessor(org.springframework.messaging.MessageHeaders, java.lang.Class<T>);
    Code:
       0: aload_0
       1: instanceof    #7                  // class org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders
       4: ifeq          31
       7: aload_0
       8: checkcast     #7                  // class org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders
      11: astore_2
      12: aload_2
      13: invokevirtual #104                // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.getAccessor:()Lorg/springframework/messaging/support/MessageHeaderAccessor;
      16: astore_3
      17: aload_1
      18: ifnull        29
      21: aload_1
      22: aload_3
      23: invokevirtual #105                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      26: ifeq          31
      29: aload_3
      30: areturn
      31: aconst_null
      32: areturn

  public static org.springframework.messaging.support.MessageHeaderAccessor getMutableAccessor(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: instanceof    #7                  // class org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders
       9: ifeq          48
      12: aload_0
      13: invokeinterface #8,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      18: checkcast     #7                  // class org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders
      21: astore_1
      22: aload_1
      23: invokevirtual #104                // Method org/springframework/messaging/support/MessageHeaderAccessor$MutableMessageHeaders.getAccessor:()Lorg/springframework/messaging/support/MessageHeaderAccessor;
      26: astore_2
      27: aload_2
      28: ifnull        48
      31: aload_2
      32: invokevirtual #106                // Method isMutable:()Z
      35: ifeq          42
      38: aload_2
      39: goto          47
      42: aload_2
      43: aload_0
      44: invokevirtual #107                // Method createAccessor:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      47: areturn
      48: new           #11                 // class org/springframework/messaging/support/MessageHeaderAccessor
      51: dup
      52: aload_0
      53: invokespecial #3                  // Method "<init>":(Lorg/springframework/messaging/Message;)V
      56: areturn

  static org.springframework.util.IdGenerator access$000(org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field idGenerator:Lorg/springframework/util/IdGenerator;
       4: areturn

  static boolean access$100(org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field enableTimestamp:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #108                // String UTF-8
       2: invokestatic  #109                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       5: putstatic     #90                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       8: iconst_5
       9: anewarray     #76                 // class org/springframework/util/MimeType
      12: dup
      13: iconst_0
      14: getstatic     #110                // Field org/springframework/util/MimeTypeUtils.APPLICATION_JSON:Lorg/springframework/util/MimeType;
      17: aastore
      18: dup
      19: iconst_1
      20: getstatic     #111                // Field org/springframework/util/MimeTypeUtils.APPLICATION_XML:Lorg/springframework/util/MimeType;
      23: aastore
      24: dup
      25: iconst_2
      26: new           #76                 // class org/springframework/util/MimeType
      29: dup
      30: ldc           #112                // String text
      32: ldc           #49                 // String *
      34: invokespecial #113                // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      37: aastore
      38: dup
      39: iconst_3
      40: new           #76                 // class org/springframework/util/MimeType
      43: dup
      44: ldc           #114                // String application
      46: ldc           #115                // String *+json
      48: invokespecial #113                // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      51: aastore
      52: dup
      53: iconst_4
      54: new           #76                 // class org/springframework/util/MimeType
      57: dup
      58: ldc           #114                // String application
      60: ldc           #116                // String *+xml
      62: invokespecial #113                // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      65: aastore
      66: putstatic     #98                 // Field READABLE_MIME_TYPES:[Lorg/springframework/util/MimeType;
      69: return
}
