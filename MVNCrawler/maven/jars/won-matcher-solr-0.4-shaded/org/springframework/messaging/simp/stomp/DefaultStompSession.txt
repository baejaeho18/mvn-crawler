Compiled from "DefaultStompSession.java"
public class org.springframework.messaging.simp.stomp.DefaultStompSession implements org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession {
  private static final org.apache.commons.logging.Log logger;

  private static final org.springframework.util.IdGenerator idGenerator;

  public static final byte[] EMPTY_PAYLOAD;

  private static final long HEARTBEAT_MULTIPLIER;

  private static final org.springframework.messaging.Message<byte[]> HEARTBEAT;

  private final java.lang.String sessionId;

  private final org.springframework.messaging.simp.stomp.StompSessionHandler sessionHandler;

  private final org.springframework.messaging.simp.stomp.StompHeaders connectHeaders;

  private final org.springframework.util.concurrent.SettableListenableFuture<org.springframework.messaging.simp.stomp.StompSession> sessionFuture;

  private org.springframework.messaging.converter.MessageConverter converter;

  private org.springframework.scheduling.TaskScheduler taskScheduler;

  private long receiptTimeLimit;

  private volatile boolean autoReceiptEnabled;

  private volatile org.springframework.messaging.tcp.TcpConnection<byte[]> connection;

  private volatile java.lang.String version;

  private final java.util.concurrent.atomic.AtomicInteger subscriptionIndex;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.DefaultStompSession$DefaultSubscription> subscriptions;

  private final java.util.concurrent.atomic.AtomicInteger receiptIndex;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.DefaultStompSession$ReceiptHandler> receiptHandlers;

  private volatile boolean closing;

  public org.springframework.messaging.simp.stomp.DefaultStompSession(org.springframework.messaging.simp.stomp.StompSessionHandler, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/springframework/util/concurrent/SettableListenableFuture
       8: dup
       9: invokespecial #12                 // Method org/springframework/util/concurrent/SettableListenableFuture."<init>":()V
      12: putfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
      15: aload_0
      16: new           #14                 // class org/springframework/messaging/converter/SimpleMessageConverter
      19: dup
      20: invokespecial #15                 // Method org/springframework/messaging/converter/SimpleMessageConverter."<init>":()V
      23: putfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
      26: aload_0
      27: ldc2_w        #17                 // long 15000l
      30: putfield      #19                 // Field receiptTimeLimit:J
      33: aload_0
      34: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
      37: dup
      38: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      41: putfield      #22                 // Field subscriptionIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      44: aload_0
      45: new           #23                 // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: iconst_4
      50: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      53: putfield      #8                  // Field subscriptions:Ljava/util/Map;
      56: aload_0
      57: new           #20                 // class java/util/concurrent/atomic/AtomicInteger
      60: dup
      61: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      64: putfield      #25                 // Field receiptIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      67: aload_0
      68: new           #23                 // class java/util/concurrent/ConcurrentHashMap
      71: dup
      72: iconst_4
      73: invokespecial #24                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      76: putfield      #9                  // Field receiptHandlers:Ljava/util/Map;
      79: aload_0
      80: iconst_0
      81: putfield      #4                  // Field closing:Z
      84: aload_1
      85: ldc           #26                 // String StompSessionHandler must not be null
      87: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      90: aload_2
      91: ldc           #28                 // String StompHeaders must not be null
      93: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      96: aload_0
      97: getstatic     #29                 // Field idGenerator:Lorg/springframework/util/IdGenerator;
     100: invokeinterface #30,  1           // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
     105: invokevirtual #31                 // Method java/util/UUID.toString:()Ljava/lang/String;
     108: putfield      #3                  // Field sessionId:Ljava/lang/String;
     111: aload_0
     112: aload_1
     113: putfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     116: aload_0
     117: aload_2
     118: putfield      #33                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
     121: return

  public java.lang.String getSessionId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionId:Ljava/lang/String;
       4: areturn

  public org.springframework.messaging.simp.stomp.StompSessionHandler getSessionHandler();
    Code:
       0: aload_0
       1: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
       4: areturn

  public org.springframework.util.concurrent.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> getSessionFuture();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
       4: areturn

  public void setMessageConverter(org.springframework.messaging.converter.MessageConverter);
    Code:
       0: aload_1
       1: ldc           #34                 // String MessageConverter must not be null
       3: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
      11: return

  public org.springframework.messaging.converter.MessageConverter getMessageConverter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
       4: areturn

  public void setTaskScheduler(org.springframework.scheduling.TaskScheduler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #35                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       5: return

  public org.springframework.scheduling.TaskScheduler getTaskScheduler();
    Code:
       0: aload_0
       1: getfield      #35                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       4: areturn

  public void setReceiptTimeLimit(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #36                 // String Receipt time limit must be larger than zero
      13: invokestatic  #37                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      16: aload_0
      17: lload_1
      18: putfield      #19                 // Field receiptTimeLimit:J
      21: return

  public long getReceiptTimeLimit();
    Code:
       0: aload_0
       1: getfield      #19                 // Field receiptTimeLimit:J
       4: lreturn

  public void setAutoReceipt(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field autoReceiptEnabled:Z
       5: return

  public boolean isAutoReceiptEnabled();
    Code:
       0: aload_0
       1: getfield      #38                 // Field autoReceiptEnabled:Z
       4: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable send(java.lang.String, java.lang.Object);
    Code:
       0: new           #39                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #40                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #41                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setDestination:(Ljava/lang/String;)V
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokevirtual #42                 // Method send:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
      19: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable send(org.springframework.messaging.simp.stomp.StompHeaders, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getDestination:()Ljava/lang/String;
       4: ldc           #44                 // String Destination header is required
       6: invokestatic  #45                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: invokespecial #46                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
      14: astore_3
      15: new           #47                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
      18: dup
      19: aload_0
      20: aload_3
      21: invokespecial #48                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Ljava/lang/String;)V
      24: astore        4
      26: aload_0
      27: getstatic     #49                 // Field org/springframework/messaging/simp/stomp/StompCommand.SEND:Lorg/springframework/messaging/simp/stomp/StompCommand;
      30: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      33: astore        5
      35: aload         5
      37: aload_1
      38: invokevirtual #51                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      41: aload_0
      42: aload         5
      44: aload_2
      45: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      48: astore        6
      50: aload_0
      51: aload         6
      53: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
      56: aload         4
      58: areturn

  private java.lang.String checkOrAddReceipt(org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_1
       1: invokevirtual #54                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getReceipt:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #55                 // Method isAutoReceiptEnabled:()Z
       9: ifeq          32
      12: aload_2
      13: ifnonnull     32
      16: aload_0
      17: getfield      #25                 // Field receiptIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      20: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      23: invokestatic  #57                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      26: astore_2
      27: aload_1
      28: aload_2
      29: invokevirtual #58                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setReceipt:(Ljava/lang/String;)V
      32: aload_2
      33: areturn

  private org.springframework.messaging.simp.stomp.StompHeaderAccessor createHeaderAccessor(org.springframework.messaging.simp.stomp.StompCommand);
    Code:
       0: aload_1
       1: invokestatic  #59                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
       4: astore_2
       5: aload_2
       6: aload_0
       7: getfield      #3                  // Field sessionId:Ljava/lang/String;
      10: invokevirtual #60                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      13: aload_2
      14: iconst_1
      15: invokevirtual #61                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLeaveMutable:(Z)V
      18: aload_2
      19: areturn

  private org.springframework.messaging.Message<byte[]> createMessage(org.springframework.messaging.simp.stomp.StompHeaderAccessor, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #62                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateSimpMessageHeadersFromStompHeaders:()V
       4: aload_2
       5: ifnonnull     22
       8: getstatic     #63                 // Field EMPTY_PAYLOAD:[B
      11: aload_1
      12: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      15: invokestatic  #65                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      18: astore_3
      19: goto          132
      22: aload_2
      23: instanceof    #66                 // class "[B"
      26: ifeq          47
      29: aload_2
      30: checkcast     #66                 // class "[B"
      33: checkcast     #66                 // class "[B"
      36: aload_1
      37: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      40: invokestatic  #65                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      43: astore_3
      44: goto          132
      47: aload_0
      48: invokevirtual #67                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
      51: aload_2
      52: aload_1
      53: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      56: invokeinterface #68,  3           // InterfaceMethod org/springframework/messaging/converter/MessageConverter.toMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      61: astore_3
      62: aload_1
      63: invokevirtual #69                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateStompHeadersFromSimpMessageHeaders:()V
      66: aload_3
      67: ifnonnull     132
      70: new           #70                 // class org/springframework/messaging/converter/MessageConversionException
      73: dup
      74: new           #71                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #73                 // String Unable to convert payload with type=\'
      83: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_2
      87: invokevirtual #75                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #76                 // Method java/lang/Class.getName:()Ljava/lang/String;
      93: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #77                 // String \', contentType=\'
      98: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_1
     102: invokevirtual #78                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getContentType:()Lorg/springframework/util/MimeType;
     105: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: ldc           #80                 // String \', converter=[
     110: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #67                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
     117: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #81                 // String ]
     122: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #83                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload_3
     133: areturn

  private void execute(org.springframework.messaging.Message<byte[]>);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #84,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          57
      11: aload_1
      12: ldc           #85                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
      14: invokestatic  #86                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      17: checkcast     #85                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
      20: astore_2
      21: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      24: new           #71                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #87                 // String Sending
      33: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_2
      37: aload_1
      38: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      43: invokevirtual #89                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      46: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #90,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      57: aload_0
      58: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      61: astore_2
      62: aload_2
      63: ifnull        70
      66: iconst_1
      67: goto          71
      70: iconst_0
      71: ldc           #91                 // String Connection closed
      73: invokestatic  #92                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      76: aload_2
      77: aload_1
      78: invokeinterface #93,  2           // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.send:(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
      83: invokeinterface #94,  1           // InterfaceMethod org/springframework/util/concurrent/ListenableFuture.get:()Ljava/lang/Object;
      88: pop
      89: goto          117
      92: astore_3
      93: new           #96                 // class org/springframework/messaging/MessageDeliveryException
      96: dup
      97: aload_1
      98: aload_3
      99: invokevirtual #97                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     102: invokespecial #98                 // Method org/springframework/messaging/MessageDeliveryException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
     105: athrow
     106: astore_3
     107: new           #96                 // class org/springframework/messaging/MessageDeliveryException
     110: dup
     111: aload_1
     112: aload_3
     113: invokespecial #98                 // Method org/springframework/messaging/MessageDeliveryException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
     116: athrow
     117: return
    Exception table:
       from    to  target type
          76    89    92   Class java/util/concurrent/ExecutionException
          76    89   106   Class java/lang/Throwable

  public org.springframework.messaging.simp.stomp.StompSession$Subscription subscribe(java.lang.String, org.springframework.messaging.simp.stomp.StompFrameHandler);
    Code:
       0: new           #39                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #40                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #41                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setDestination:(Ljava/lang/String;)V
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokevirtual #100                // Method subscribe:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
      19: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Subscription subscribe(org.springframework.messaging.simp.stomp.StompHeaders, org.springframework.messaging.simp.stomp.StompFrameHandler);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getDestination:()Ljava/lang/String;
       4: astore_3
       5: aload_3
       6: ldc           #44                 // String Destination header is required
       8: invokestatic  #45                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      11: aload_2
      12: ldc           #101                // String StompFrameHandler must not be null
      14: invokestatic  #27                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_1
      18: invokevirtual #102                // Method org/springframework/messaging/simp/stomp/StompHeaders.getId:()Ljava/lang/String;
      21: astore        4
      23: aload         4
      25: invokestatic  #103                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      28: ifne          49
      31: aload_0
      32: getfield      #22                 // Field subscriptionIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      35: invokevirtual #56                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      38: invokestatic  #57                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      41: astore        4
      43: aload_1
      44: aload         4
      46: invokevirtual #104                // Method org/springframework/messaging/simp/stomp/StompHeaders.setId:(Ljava/lang/String;)V
      49: aload_0
      50: aload_1
      51: invokespecial #46                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
      54: astore        5
      56: new           #105                // class org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription
      59: dup
      60: aload_0
      61: aload         4
      63: aload_3
      64: aload         5
      66: aload_2
      67: invokespecial #106                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)V
      70: astore        6
      72: aload_0
      73: getstatic     #107                // Field org/springframework/messaging/simp/stomp/StompCommand.SUBSCRIBE:Lorg/springframework/messaging/simp/stomp/StompCommand;
      76: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      79: astore        7
      81: aload         7
      83: aload_1
      84: invokevirtual #51                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      87: aload_0
      88: aload         7
      90: getstatic     #63                 // Field EMPTY_PAYLOAD:[B
      93: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      96: astore        8
      98: aload_0
      99: aload         8
     101: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
     104: aload         6
     106: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable acknowledge(java.lang.String, boolean);
    Code:
       0: new           #39                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #40                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: ldc           #108                // String 1.1
      10: aload_0
      11: getfield      #109                // Field version:Ljava/lang/String;
      14: invokevirtual #110                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          28
      20: aload_3
      21: aload_1
      22: invokevirtual #111                // Method org/springframework/messaging/simp/stomp/StompHeaders.setMessageId:(Ljava/lang/String;)V
      25: goto          33
      28: aload_3
      29: aload_1
      30: invokevirtual #104                // Method org/springframework/messaging/simp/stomp/StompHeaders.setId:(Ljava/lang/String;)V
      33: aload_0
      34: aload_3
      35: invokespecial #46                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
      38: astore        4
      40: new           #47                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
      43: dup
      44: aload_0
      45: aload         4
      47: invokespecial #48                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Ljava/lang/String;)V
      50: astore        5
      52: iload_2
      53: ifeq          62
      56: getstatic     #112                // Field org/springframework/messaging/simp/stomp/StompCommand.ACK:Lorg/springframework/messaging/simp/stomp/StompCommand;
      59: goto          65
      62: getstatic     #113                // Field org/springframework/messaging/simp/stomp/StompCommand.NACK:Lorg/springframework/messaging/simp/stomp/StompCommand;
      65: astore        6
      67: aload_0
      68: aload         6
      70: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      73: astore        7
      75: aload         7
      77: aload_3
      78: invokevirtual #51                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      81: aload_0
      82: aload         7
      84: aconst_null
      85: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      88: astore        8
      90: aload_0
      91: aload         8
      93: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
      96: aload         5
      98: areturn

  private void unsubscribe(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #114                // Field org/springframework/messaging/simp/stomp/StompCommand.UNSUBSCRIBE:Lorg/springframework/messaging/simp/stomp/StompCommand;
       4: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #115                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSubscriptionId:(Ljava/lang/String;)V
      13: aload_0
      14: aload_2
      15: getstatic     #63                 // Field EMPTY_PAYLOAD:[B
      18: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      21: astore_3
      22: aload_0
      23: aload_3
      24: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
      27: return

  public void disconnect();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field closing:Z
       5: aload_0
       6: getstatic     #116                // Field org/springframework/messaging/simp/stomp/StompCommand.DISCONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
       9: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      12: astore_1
      13: aload_0
      14: aload_1
      15: getstatic     #63                 // Field EMPTY_PAYLOAD:[B
      18: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
      27: aload_0
      28: invokespecial #1                  // Method resetConnection:()V
      31: goto          41
      34: astore_3
      35: aload_0
      36: invokespecial #1                  // Method resetConnection:()V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    27    34   any

  public void afterConnected(org.springframework.messaging.tcp.TcpConnection<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       5: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       8: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      13: ifeq          46
      16: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #71                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #118                // String Connection established in session id=
      28: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #3                  // Field sessionId:Ljava/lang/String;
      35: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokeinterface #119,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      46: aload_0
      47: getstatic     #120                // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
      50: invokespecial #50                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      53: astore_2
      54: aload_2
      55: aload_0
      56: getfield      #33                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
      59: invokevirtual #51                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      62: aload_2
      63: ldc           #121                // String 1.1,1.2
      65: invokevirtual #122                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setAcceptVersion:(Ljava/lang/String;)V
      68: aload_0
      69: aload_2
      70: getstatic     #63                 // Field EMPTY_PAYLOAD:[B
      73: invokespecial #52                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      76: astore_3
      77: aload_0
      78: aload_3
      79: invokespecial #53                 // Method execute:(Lorg/springframework/messaging/Message;)V
      82: return

  public void afterConnectFailure(java.lang.Throwable);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          42
      11: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #71                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #123                // String Failed to connect session id=
      23: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field sessionId:Ljava/lang/String;
      30: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: aload_1
      37: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      42: aload_0
      43: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
      46: aload_1
      47: invokevirtual #125                // Method org/springframework/util/concurrent/SettableListenableFuture.setException:(Ljava/lang/Throwable;)Z
      50: pop
      51: aload_0
      52: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
      55: aload_0
      56: aload_1
      57: invokeinterface #126,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleTransportError:(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V
      62: return

  public void handleMessage(org.springframework.messaging.Message<byte[]>);
    Code:
       0: aload_1
       1: ldc           #85                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
       3: invokestatic  #86                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       6: checkcast     #85                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
       9: astore_2
      10: aload_2
      11: aload_0
      12: getfield      #3                  // Field sessionId:Ljava/lang/String;
      15: invokevirtual #60                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      18: aload_2
      19: invokevirtual #127                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
      22: astore_3
      23: aload_2
      24: invokevirtual #128                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getNativeHeaders:()Ljava/util/Map;
      27: astore        4
      29: aload         4
      31: invokestatic  #129                // Method org/springframework/messaging/simp/stomp/StompHeaders.readOnlyStompHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/simp/stomp/StompHeaders;
      34: astore        5
      36: aload_2
      37: invokevirtual #130                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.isHeartbeat:()Z
      40: istore        6
      42: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      45: invokeinterface #84,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      50: ifeq          89
      53: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      56: new           #71                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #131                // String Received
      65: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: aload_1
      70: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      75: invokevirtual #89                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      78: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: invokeinterface #90,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      89: getstatic     #132                // Field org/springframework/messaging/simp/stomp/StompCommand.MESSAGE:Lorg/springframework/messaging/simp/stomp/StompCommand;
      92: aload_3
      93: invokevirtual #133                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
      96: ifeq          193
      99: aload_0
     100: getfield      #8                  // Field subscriptions:Ljava/util/Map;
     103: aload         5
     105: invokevirtual #134                // Method org/springframework/messaging/simp/stomp/StompHeaders.getSubscription:()Ljava/lang/String;
     108: invokeinterface #135,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     113: checkcast     #105                // class org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription
     116: astore        7
     118: aload         7
     120: ifnull        138
     123: aload_0
     124: aload         7
     126: invokevirtual #136                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription.getHandler:()Lorg/springframework/messaging/simp/stomp/StompFrameHandler;
     129: aload_1
     130: aload         5
     132: invokespecial #137                // Method invokeHandler:(Lorg/springframework/messaging/simp/stomp/StompFrameHandler;Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     135: goto          190
     138: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     141: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     146: ifeq          190
     149: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     152: new           #71                 // class java/lang/StringBuilder
     155: dup
     156: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
     159: ldc           #138                // String No handler for:
     161: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_2
     165: aload_1
     166: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     171: invokevirtual #89                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     174: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: ldc           #139                // String . Perhaps just unsubscribed?
     179: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokeinterface #119,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     190: goto          390
     193: getstatic     #140                // Field org/springframework/messaging/simp/stomp/StompCommand.RECEIPT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     196: aload_3
     197: invokevirtual #133                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     200: ifeq          289
     203: aload         5
     205: invokevirtual #141                // Method org/springframework/messaging/simp/stomp/StompHeaders.getReceiptId:()Ljava/lang/String;
     208: astore        7
     210: aload_0
     211: getfield      #9                  // Field receiptHandlers:Ljava/util/Map;
     214: aload         7
     216: invokeinterface #135,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     221: checkcast     #47                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
     224: astore        8
     226: aload         8
     228: ifnull        239
     231: aload         8
     233: invokevirtual #142                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler.handleReceiptReceived:()V
     236: goto          286
     239: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     242: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     247: ifeq          286
     250: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     253: new           #71                 // class java/lang/StringBuilder
     256: dup
     257: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
     260: ldc           #143                // String No matching receipt:
     262: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     265: aload_2
     266: aload_1
     267: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     272: invokevirtual #89                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     275: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     281: invokeinterface #119,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     286: goto          390
     289: getstatic     #144                // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECTED:Lorg/springframework/messaging/simp/stomp/StompCommand;
     292: aload_3
     293: invokevirtual #133                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     296: ifeq          340
     299: aload_0
     300: aload         5
     302: invokespecial #145                // Method initHeartbeatTasks:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     305: aload_0
     306: aload         5
     308: ldc           #146                // String version
     310: invokevirtual #147                // Method org/springframework/messaging/simp/stomp/StompHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
     313: putfield      #109                // Field version:Ljava/lang/String;
     316: aload_0
     317: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
     320: aload_0
     321: invokevirtual #148                // Method org/springframework/util/concurrent/SettableListenableFuture.set:(Ljava/lang/Object;)Z
     324: pop
     325: aload_0
     326: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     329: aload_0
     330: aload         5
     332: invokeinterface #149,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.afterConnected:(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     337: goto          390
     340: getstatic     #150                // Field org/springframework/messaging/simp/stomp/StompCommand.ERROR:Lorg/springframework/messaging/simp/stomp/StompCommand;
     343: aload_3
     344: invokevirtual #133                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     347: ifeq          364
     350: aload_0
     351: aload_0
     352: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     355: aload_1
     356: aload         5
     358: invokespecial #137                // Method invokeHandler:(Lorg/springframework/messaging/simp/stomp/StompFrameHandler;Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     361: goto          390
     364: iload         6
     366: ifne          390
     369: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     372: invokeinterface #84,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     377: ifeq          390
     380: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     383: ldc           #151                // String Message not handled.
     385: invokeinterface #90,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     390: goto          419
     393: astore        7
     395: aload_0
     396: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     399: aload_0
     400: aload_3
     401: aload         5
     403: aload_1
     404: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     409: checkcast     #66                 // class "[B"
     412: aload         7
     414: invokeinterface #152,  6          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleException:(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompCommand;Lorg/springframework/messaging/simp/stomp/StompHeaders;[BLjava/lang/Throwable;)V
     419: return
    Exception table:
       from    to  target type
          89   390   393   Class java/lang/Throwable

  private void invokeHandler(org.springframework.messaging.simp.stomp.StompFrameHandler, org.springframework.messaging.Message<byte[]>, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_2
       1: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       6: checkcast     #66                 // class "[B"
       9: arraylength
      10: ifne          22
      13: aload_1
      14: aload_3
      15: aconst_null
      16: invokeinterface #153,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.handleFrame:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V
      21: return
      22: aload_1
      23: aload_3
      24: invokeinterface #154,  2          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.getPayloadType:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/reflect/Type;
      29: astore        4
      31: aload         4
      33: invokestatic  #155                // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;
      36: invokevirtual #156                // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      39: astore        5
      41: aload_0
      42: invokevirtual #67                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
      45: aload_2
      46: aload         5
      48: invokeinterface #157,  3          // InterfaceMethod org/springframework/messaging/converter/MessageConverter.fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
      53: astore        6
      55: aload         6
      57: ifnonnull     100
      60: new           #70                 // class org/springframework/messaging/converter/MessageConversionException
      63: dup
      64: new           #71                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #158                // String No suitable converter, payloadType=
      73: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload         5
      78: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #159                // String , handlerType=
      83: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_1
      87: invokevirtual #75                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      93: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #83                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_1
     101: aload_3
     102: aload         6
     104: invokeinterface #153,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.handleFrame:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V
     109: return

  private void initHeartbeatTasks(org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: getfield      #33                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
       4: invokevirtual #160                // Method org/springframework/messaging/simp/stomp/StompHeaders.getHeartbeat:()[J
       7: astore_2
       8: aload_1
       9: invokevirtual #160                // Method org/springframework/messaging/simp/stomp/StompHeaders.getHeartbeat:()[J
      12: astore_3
      13: aload_2
      14: ifnull        21
      17: aload_3
      18: ifnonnull     22
      21: return
      22: aload_2
      23: iconst_0
      24: laload
      25: lconst_0
      26: lcmp
      27: ifle          69
      30: aload_3
      31: iconst_1
      32: laload
      33: lconst_0
      34: lcmp
      35: ifle          69
      38: aload_2
      39: iconst_0
      40: laload
      41: aload_3
      42: iconst_1
      43: laload
      44: invokestatic  #161                // Method java/lang/Math.max:(JJ)J
      47: lstore        4
      49: aload_0
      50: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      53: new           #162                // class org/springframework/messaging/simp/stomp/DefaultStompSession$WriteInactivityTask
      56: dup
      57: aload_0
      58: aconst_null
      59: invokespecial #163                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$WriteInactivityTask."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Lorg/springframework/messaging/simp/stomp/DefaultStompSession$1;)V
      62: lload         4
      64: invokeinterface #164,  4          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.onWriteInactivity:(Ljava/lang/Runnable;J)V
      69: aload_2
      70: iconst_1
      71: laload
      72: lconst_0
      73: lcmp
      74: ifle          120
      77: aload_3
      78: iconst_0
      79: laload
      80: lconst_0
      81: lcmp
      82: ifle          120
      85: aload_2
      86: iconst_1
      87: laload
      88: aload_3
      89: iconst_0
      90: laload
      91: invokestatic  #161                // Method java/lang/Math.max:(JJ)J
      94: ldc2_w        #166                // long 3l
      97: lmul
      98: lstore        4
     100: aload_0
     101: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
     104: new           #168                // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReadInactivityTask
     107: dup
     108: aload_0
     109: aconst_null
     110: invokespecial #169                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReadInactivityTask."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Lorg/springframework/messaging/simp/stomp/DefaultStompSession$1;)V
     113: lload         4
     115: invokeinterface #170,  4          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.onReadInactivity:(Ljava/lang/Runnable;J)V
     120: return

  public void handleFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
       4: aload_1
       5: invokevirtual #125                // Method org/springframework/util/concurrent/SettableListenableFuture.setException:(Ljava/lang/Throwable;)Z
       8: pop
       9: aload_0
      10: getfield      #32                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
      13: aload_0
      14: aload_1
      15: invokeinterface #126,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleTransportError:(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V
      20: goto          46
      23: astore_2
      24: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          46
      35: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      38: ldc           #171                // String Uncaught failure while handling transport failure
      40: aload_2
      41: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      46: return
    Exception table:
       from    to  target type
           0    20    23   Class java/lang/Throwable

  public void afterConnectionClosed();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #117,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          41
      11: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #71                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #172                // String Connection closed in session id=
      23: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field sessionId:Ljava/lang/String;
      30: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #82                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #119,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #4                  // Field closing:Z
      45: ifne          65
      48: aload_0
      49: invokespecial #1                  // Method resetConnection:()V
      52: aload_0
      53: new           #173                // class org/springframework/messaging/simp/stomp/ConnectionLostException
      56: dup
      57: ldc           #91                 // String Connection closed
      59: invokespecial #174                // Method org/springframework/messaging/simp/stomp/ConnectionLostException."<init>":(Ljava/lang/String;)V
      62: invokevirtual #175                // Method handleFailure:(Ljava/lang/Throwable;)V
      65: return

  private void resetConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      10: aload_1
      11: ifnull        24
      14: aload_1
      15: invokeinterface #176,  1          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.close:()V
      20: goto          24
      23: astore_2
      24: return
    Exception table:
       from    to  target type
          14    20    23   Class java/lang/Throwable

  static java.util.Map access$200(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiptHandlers:Ljava/util/Map;
       4: areturn

  static java.util.Map access$300(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscriptions:Ljava/util/Map;
       4: areturn

  static void access$400(org.springframework.messaging.simp.stomp.DefaultStompSession, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method unsubscribe:(Ljava/lang/String;)V
       5: return

  static org.springframework.messaging.tcp.TcpConnection access$500(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: areturn

  static org.springframework.messaging.Message access$600();
    Code:
       0: getstatic     #5                  // Field HEARTBEAT:Lorg/springframework/messaging/Message;
       3: areturn

  static boolean access$702(org.springframework.messaging.simp.stomp.DefaultStompSession, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field closing:Z
       6: ireturn

  static java.lang.String access$800(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionId:Ljava/lang/String;
       4: areturn

  static org.apache.commons.logging.Log access$900();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static void access$1000(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method resetConnection:()V
       4: return

  static {};
    Code:
       0: ldc           #165                // class org/springframework/messaging/simp/stomp/DefaultStompSession
       2: invokestatic  #177                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #178                // class org/springframework/util/AlternativeJdkIdGenerator
      11: dup
      12: invokespecial #179                // Method org/springframework/util/AlternativeJdkIdGenerator."<init>":()V
      15: putstatic     #29                 // Field idGenerator:Lorg/springframework/util/IdGenerator;
      18: iconst_0
      19: newarray       byte
      21: putstatic     #63                 // Field EMPTY_PAYLOAD:[B
      24: invokestatic  #180                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.createForHeartbeat:()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      27: astore_0
      28: getstatic     #181                // Field org/springframework/messaging/simp/stomp/StompDecoder.HEARTBEAT_PAYLOAD:[B
      31: aload_0
      32: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      35: invokestatic  #65                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      38: putstatic     #5                  // Field HEARTBEAT:Lorg/springframework/messaging/Message;
      41: return
}
