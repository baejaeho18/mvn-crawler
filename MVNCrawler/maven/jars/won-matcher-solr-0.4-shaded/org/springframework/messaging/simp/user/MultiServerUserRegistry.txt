Compiled from "MultiServerUserRegistry.java"
public class org.springframework.messaging.simp.user.MultiServerUserRegistry implements org.springframework.messaging.simp.user.SimpUserRegistry,org.springframework.context.event.SmartApplicationListener {
  private final java.lang.String id;

  private final org.springframework.messaging.simp.user.SimpUserRegistry localRegistry;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.user.MultiServerUserRegistry$UserRegistrySnapshot> remoteRegistries;

  private final boolean delegateApplicationEvents;

  private final org.springframework.messaging.simp.user.MultiServerUserRegistry$SessionLookup sessionLookup;

  public org.springframework.messaging.simp.user.MultiServerUserRegistry(org.springframework.messaging.simp.user.SimpUserRegistry);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #1                  // Field remoteRegistries:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class org/springframework/messaging/simp/user/MultiServerUserRegistry$SessionLookup
      19: dup
      20: aload_0
      21: aconst_null
      22: invokespecial #7                  // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$SessionLookup."<init>":(Lorg/springframework/messaging/simp/user/MultiServerUserRegistry;Lorg/springframework/messaging/simp/user/MultiServerUserRegistry$1;)V
      25: putfield      #8                  // Field sessionLookup:Lorg/springframework/messaging/simp/user/MultiServerUserRegistry$SessionLookup;
      28: aload_1
      29: ldc           #9                  // String \'localRegistry\' is required.
      31: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      34: aload_0
      35: invokestatic  #11                 // Method generateId:()Ljava/lang/String;
      38: putfield      #12                 // Field id:Ljava/lang/String;
      41: aload_0
      42: aload_1
      43: putfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      46: aload_0
      47: aload_0
      48: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      51: instanceof    #13                 // class org/springframework/context/event/SmartApplicationListener
      54: putfield      #14                 // Field delegateApplicationEvents:Z
      57: return

  private static java.lang.String generateId();
    Code:
       0: invokestatic  #15                 // Method java/net/InetAddress.getLocalHost:()Ljava/net/InetAddress;
       3: invokevirtual #16                 // Method java/net/InetAddress.getHostAddress:()Ljava/lang/String;
       6: astore_0
       7: goto          14
      10: astore_1
      11: ldc           #18                 // String unknown
      13: astore_0
      14: new           #19                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      21: aload_0
      22: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: bipush        45
      27: invokevirtual #22                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      30: invokestatic  #23                 // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
    Exception table:
       from    to  target type
           0     7    10   Class java/net/UnknownHostException

  public int getOrder();
    Code:
       0: aload_0
       1: getfield      #14                 // Field delegateApplicationEvents:Z
       4: ifeq          22
       7: aload_0
       8: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      11: checkcast     #13                 // class org/springframework/context/event/SmartApplicationListener
      14: invokeinterface #26,  1           // InterfaceMethod org/springframework/context/event/SmartApplicationListener.getOrder:()I
      19: goto          24
      22: ldc           #28                 // int 2147483647
      24: ireturn

  public boolean supportsEventType(java.lang.Class<? extends org.springframework.context.ApplicationEvent>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field delegateApplicationEvents:Z
       4: ifeq          27
       7: aload_0
       8: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      11: checkcast     #13                 // class org/springframework/context/event/SmartApplicationListener
      14: aload_1
      15: invokeinterface #29,  2           // InterfaceMethod org/springframework/context/event/SmartApplicationListener.supportsEventType:(Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean supportsSourceType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field delegateApplicationEvents:Z
       4: ifeq          27
       7: aload_0
       8: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      11: checkcast     #13                 // class org/springframework/context/event/SmartApplicationListener
      14: aload_1
      15: invokeinterface #30,  2           // InterfaceMethod org/springframework/context/event/SmartApplicationListener.supportsSourceType:(Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public void onApplicationEvent(org.springframework.context.ApplicationEvent);
    Code:
       0: aload_0
       1: getfield      #14                 // Field delegateApplicationEvents:Z
       4: ifeq          20
       7: aload_0
       8: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      11: checkcast     #13                 // class org/springframework/context/event/SmartApplicationListener
      14: aload_1
      15: invokeinterface #31,  2           // InterfaceMethod org/springframework/context/event/SmartApplicationListener.onApplicationEvent:(Lorg/springframework/context/ApplicationEvent;)V
      20: return

  public org.springframework.messaging.simp.user.SimpUser getUser(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_2
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      33: astore_3
      34: aload_3
      35: invokevirtual #37                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.getUserMap:()Ljava/util/Map;
      38: aload_1
      39: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #39                 // class org/springframework/messaging/simp/user/SimpUser
      47: astore        4
      49: aload         4
      51: ifnull        57
      54: aload         4
      56: areturn
      57: goto          15
      60: aload_0
      61: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      64: aload_1
      65: invokeinterface #40,  2           // InterfaceMethod org/springframework/messaging/simp/user/SimpUserRegistry.getUser:(Ljava/lang/String;)Lorg/springframework/messaging/simp/user/SimpUser;
      70: areturn

  public java.util.Set<org.springframework.messaging.simp.user.SimpUser> getUsers();
    Code:
       0: new           #41                 // class java/util/HashSet
       3: dup
       4: invokespecial #42                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          61
      32: aload_2
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #37                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.getUserMap:()Ljava/util/Map;
      47: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      52: invokeinterface #43,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      57: pop
      58: goto          23
      61: aload_1
      62: aload_0
      63: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      66: invokeinterface #44,  1           // InterfaceMethod org/springframework/messaging/simp/user/SimpUserRegistry.getUsers:()Ljava/util/Set;
      71: invokeinterface #43,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      76: pop
      77: aload_1
      78: areturn

  public int getUserCount();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
       6: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          51
      26: aload_2
      27: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokevirtual #37                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.getUserMap:()Ljava/util/Map;
      41: invokeinterface #45,  1           // InterfaceMethod java/util/Map.size:()I
      46: iadd
      47: istore_1
      48: goto          17
      51: iload_1
      52: aload_0
      53: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      56: invokeinterface #46,  1           // InterfaceMethod org/springframework/messaging/simp/user/SimpUserRegistry.getUserCount:()I
      61: iadd
      62: istore_1
      63: iload_1
      64: ireturn

  public java.util.Set<org.springframework.messaging.simp.user.SimpSubscription> findSubscriptions(org.springframework.messaging.simp.user.SimpSubscriptionMatcher);
    Code:
       0: new           #41                 // class java/util/HashSet
       3: dup
       4: invokespecial #42                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          59
      32: aload_3
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      41: astore        4
      43: aload_2
      44: aload         4
      46: aload_1
      47: invokevirtual #47                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.findSubscriptions:(Lorg/springframework/messaging/simp/user/SimpSubscriptionMatcher;)Ljava/util/Set;
      50: invokeinterface #43,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      55: pop
      56: goto          23
      59: aload_2
      60: aload_0
      61: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      64: aload_1
      65: invokeinterface #48,  2           // InterfaceMethod org/springframework/messaging/simp/user/SimpUserRegistry.findSubscriptions:(Lorg/springframework/messaging/simp/user/SimpSubscriptionMatcher;)Ljava/util/Set;
      70: invokeinterface #43,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      75: pop
      76: aload_2
      77: areturn

  java.lang.Object getLocalRegistryDto();
    Code:
       0: new           #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
       3: dup
       4: aload_0
       5: getfield      #12                 // Field id:Ljava/lang/String;
       8: aload_0
       9: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      12: invokespecial #49                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot."<init>":(Ljava/lang/String;Lorg/springframework/messaging/simp/user/SimpUserRegistry;)V
      15: areturn

  void addRemoteRegistryDto(org.springframework.messaging.Message<?>, org.springframework.messaging.converter.MessageConverter, long);
    Code:
       0: aload_2
       1: aload_1
       2: ldc           #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
       4: invokeinterface #50,  3           // InterfaceMethod org/springframework/messaging/converter/MessageConverter.fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
       9: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      12: astore        5
      14: aload         5
      16: ifnull        61
      19: aload         5
      21: invokevirtual #51                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.getId:()Ljava/lang/String;
      24: aload_0
      25: getfield      #12                 // Field id:Ljava/lang/String;
      28: invokevirtual #52                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      31: ifne          61
      34: aload         5
      36: lload_3
      37: aload_0
      38: getfield      #8                  // Field sessionLookup:Lorg/springframework/messaging/simp/user/MultiServerUserRegistry$SessionLookup;
      41: invokevirtual #53                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.init:(JLorg/springframework/messaging/simp/user/MultiServerUserRegistry$SessionLookup;)V
      44: aload_0
      45: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
      48: aload         5
      50: invokevirtual #51                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.getId:()Ljava/lang/String;
      53: aload         5
      55: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: return

  void purgeExpiredRegistries();
    Code:
       0: invokestatic  #55                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
       8: invokeinterface #56,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #57,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_3
      19: aload_3
      20: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          65
      28: aload_3
      29: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #58                 // class java/util/Map$Entry
      37: astore        4
      39: aload         4
      41: invokeinterface #59,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: checkcast     #36                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot
      49: lload_1
      50: invokevirtual #60                 // Method org/springframework/messaging/simp/user/MultiServerUserRegistry$UserRegistrySnapshot.isExpired:(J)Z
      53: ifeq          62
      56: aload_3
      57: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.remove:()V
      62: goto          19
      65: return

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #62                 // String local=[
       9: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #63                 // String ], remote=
      21: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
      28: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  static org.springframework.messaging.simp.user.SimpUserRegistry access$500(org.springframework.messaging.simp.user.MultiServerUserRegistry);
    Code:
       0: aload_0
       1: getfield      #2                  // Field localRegistry:Lorg/springframework/messaging/simp/user/SimpUserRegistry;
       4: areturn

  static java.util.Map access$600(org.springframework.messaging.simp.user.MultiServerUserRegistry);
    Code:
       0: aload_0
       1: getfield      #1                  // Field remoteRegistries:Ljava/util/Map;
       4: areturn
}
