Compiled from "TaskExecutorRegistration.java"
public class org.springframework.messaging.simp.config.TaskExecutorRegistration {
  private final org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor taskExecutor;

  private java.lang.Integer corePoolSize;

  private java.lang.Integer maxPoolSize;

  private java.lang.Integer keepAliveSeconds;

  private java.lang.Integer queueCapacity;

  public org.springframework.messaging.simp.config.TaskExecutorRegistration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
       8: dup
       9: invokespecial #3                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor."<init>":()V
      12: putfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      15: aload_0
      16: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      19: invokestatic  #5                  // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      22: invokevirtual #6                  // Method java/lang/Runtime.availableProcessors:()I
      25: iconst_2
      26: imul
      27: invokevirtual #7                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setCorePoolSize:(I)V
      30: aload_0
      31: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      34: iconst_1
      35: invokevirtual #8                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setAllowCoreThreadTimeOut:(Z)V
      38: return

  public org.springframework.messaging.simp.config.TaskExecutorRegistration(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #9                  // String ThreadPoolTaskExecutor must not be null
       7: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      15: return

  public org.springframework.messaging.simp.config.TaskExecutorRegistration corePoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #12                 // Field corePoolSize:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  public org.springframework.messaging.simp.config.TaskExecutorRegistration maxPoolSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #13                 // Field maxPoolSize:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  public org.springframework.messaging.simp.config.TaskExecutorRegistration keepAliveSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #14                 // Field keepAliveSeconds:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  public org.springframework.messaging.simp.config.TaskExecutorRegistration queueCapacity(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #15                 // Field queueCapacity:Ljava/lang/Integer;
       8: aload_0
       9: areturn

  protected org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor getTaskExecutor();
    Code:
       0: aload_0
       1: getfield      #12                 // Field corePoolSize:Ljava/lang/Integer;
       4: ifnull        21
       7: aload_0
       8: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      11: aload_0
      12: getfield      #12                 // Field corePoolSize:Ljava/lang/Integer;
      15: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      18: invokevirtual #7                  // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setCorePoolSize:(I)V
      21: aload_0
      22: getfield      #13                 // Field maxPoolSize:Ljava/lang/Integer;
      25: ifnull        42
      28: aload_0
      29: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      32: aload_0
      33: getfield      #13                 // Field maxPoolSize:Ljava/lang/Integer;
      36: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      39: invokevirtual #17                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setMaxPoolSize:(I)V
      42: aload_0
      43: getfield      #14                 // Field keepAliveSeconds:Ljava/lang/Integer;
      46: ifnull        63
      49: aload_0
      50: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      53: aload_0
      54: getfield      #14                 // Field keepAliveSeconds:Ljava/lang/Integer;
      57: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      60: invokevirtual #18                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setKeepAliveSeconds:(I)V
      63: aload_0
      64: getfield      #15                 // Field queueCapacity:Ljava/lang/Integer;
      67: ifnull        84
      70: aload_0
      71: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      74: aload_0
      75: getfield      #15                 // Field queueCapacity:Ljava/lang/Integer;
      78: invokevirtual #16                 // Method java/lang/Integer.intValue:()I
      81: invokevirtual #19                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setQueueCapacity:(I)V
      84: aload_0
      85: getfield      #4                  // Field taskExecutor:Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      88: areturn
}
