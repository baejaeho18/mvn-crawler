Compiled from "DefaultSubscriptionRegistry.java"
class org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionRegistry {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo> sessions;

  private org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionRegistry();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo getSubscriptions(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      13: areturn

  public java.util.Collection<org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo> getAllSubscriptions();
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: areturn

  public org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo addSubscription(java.lang.String, java.lang.String, java.lang.String, org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      13: astore        5
      15: aload         5
      17: ifnonnull     56
      20: new           #7                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      23: dup
      24: aload_1
      25: invokespecial #9                  // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo."<init>":(Ljava/lang/String;)V
      28: astore        5
      30: aload_0
      31: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      34: aload_1
      35: aload         5
      37: invokeinterface #10,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #7                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      45: astore        6
      47: aload         6
      49: ifnull        56
      52: aload         6
      54: astore        5
      56: aload         5
      58: aload_3
      59: aload_2
      60: aload         4
      62: invokevirtual #11                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo.addSubscription:(Ljava/lang/String;Ljava/lang/String;Lorg/springframework/expression/Expression;)V
      65: aload         5
      67: areturn

  public org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo removeSubscriptions(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #7                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      13: areturn

  public java.lang.String toString();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #15                 // String registry[
       9: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field sessions:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.size:()I
      21: invokevirtual #18                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #19                 // String  sessions]
      26: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionRegistry(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
