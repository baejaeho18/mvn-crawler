Compiled from "UserDestinationMessageHandler.java"
public class org.springframework.messaging.simp.user.UserDestinationMessageHandler implements org.springframework.messaging.MessageHandler,org.springframework.context.SmartLifecycle {
  private static final org.apache.commons.logging.Log logger;

  private final org.springframework.messaging.SubscribableChannel clientInboundChannel;

  private final org.springframework.messaging.SubscribableChannel brokerChannel;

  private final org.springframework.messaging.simp.user.UserDestinationResolver destinationResolver;

  private final org.springframework.messaging.core.MessageSendingOperations<java.lang.String> messagingTemplate;

  private org.springframework.messaging.simp.user.UserDestinationMessageHandler$BroadcastHandler broadcastHandler;

  private org.springframework.messaging.support.MessageHeaderInitializer headerInitializer;

  private volatile boolean running;

  private final java.lang.Object lifecycleMonitor;

  public org.springframework.messaging.simp.user.UserDestinationMessageHandler(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.SubscribableChannel, org.springframework.messaging.simp.user.UserDestinationResolver);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field running:Z
       9: aload_0
      10: new           #4                  // class java/lang/Object
      13: dup
      14: invokespecial #2                  // Method java/lang/Object."<init>":()V
      17: putfield      #5                  // Field lifecycleMonitor:Ljava/lang/Object;
      20: aload_1
      21: ldc           #6                  // String \'clientInChannel\' must not be null
      23: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_2
      27: ldc           #8                  // String \'brokerChannel\' must not be null
      29: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      32: aload_3
      33: ldc           #9                  // String resolver must not be null
      35: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      38: aload_0
      39: aload_1
      40: putfield      #10                 // Field clientInboundChannel:Lorg/springframework/messaging/SubscribableChannel;
      43: aload_0
      44: aload_2
      45: putfield      #11                 // Field brokerChannel:Lorg/springframework/messaging/SubscribableChannel;
      48: aload_0
      49: new           #12                 // class org/springframework/messaging/simp/SimpMessagingTemplate
      52: dup
      53: aload_2
      54: invokespecial #13                 // Method org/springframework/messaging/simp/SimpMessagingTemplate."<init>":(Lorg/springframework/messaging/MessageChannel;)V
      57: putfield      #14                 // Field messagingTemplate:Lorg/springframework/messaging/core/MessageSendingOperations;
      60: aload_0
      61: aload_3
      62: putfield      #15                 // Field destinationResolver:Lorg/springframework/messaging/simp/user/UserDestinationResolver;
      65: return

  public org.springframework.messaging.simp.user.UserDestinationResolver getUserDestinationResolver();
    Code:
       0: aload_0
       1: getfield      #15                 // Field destinationResolver:Lorg/springframework/messaging/simp/user/UserDestinationResolver;
       4: areturn

  public void setBroadcastDestination(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #16                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       5: ifeq          23
       8: new           #17                 // class org/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler
      11: dup
      12: aload_0
      13: getfield      #14                 // Field messagingTemplate:Lorg/springframework/messaging/core/MessageSendingOperations;
      16: aload_1
      17: invokespecial #18                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler."<init>":(Lorg/springframework/messaging/core/MessageSendingOperations;Ljava/lang/String;)V
      20: goto          24
      23: aconst_null
      24: putfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
      27: return

  public java.lang.String getBroadcastDestination();
    Code:
       0: aload_0
       1: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
       4: ifnull        17
       7: aload_0
       8: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
      11: invokevirtual #20                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler.getBroadcastDestination:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public org.springframework.messaging.core.MessageSendingOperations<java.lang.String> getBrokerMessagingTemplate();
    Code:
       0: aload_0
       1: getfield      #14                 // Field messagingTemplate:Lorg/springframework/messaging/core/MessageSendingOperations;
       4: areturn

  public void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       5: return

  public org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer();
    Code:
       0: aload_0
       1: getfield      #21                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: areturn

  public int getPhase();
    Code:
       0: ldc           #23                 // int 2147483647
       2: ireturn

  public boolean isAutoStartup();
    Code:
       0: iconst_1
       1: ireturn

  public final void start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lifecycleMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #10                 // Field clientInboundChannel:Lorg/springframework/messaging/SubscribableChannel;
      11: aload_0
      12: invokeinterface #24,  2           // InterfaceMethod org/springframework/messaging/SubscribableChannel.subscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      17: pop
      18: aload_0
      19: getfield      #11                 // Field brokerChannel:Lorg/springframework/messaging/SubscribableChannel;
      22: aload_0
      23: invokeinterface #24,  2           // InterfaceMethod org/springframework/messaging/SubscribableChannel.subscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      28: pop
      29: aload_0
      30: iconst_1
      31: putfield      #3                  // Field running:Z
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  public final void stop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lifecycleMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: iconst_0
       9: putfield      #3                  // Field running:Z
      12: aload_0
      13: getfield      #10                 // Field clientInboundChannel:Lorg/springframework/messaging/SubscribableChannel;
      16: aload_0
      17: invokeinterface #25,  2           // InterfaceMethod org/springframework/messaging/SubscribableChannel.unsubscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      22: pop
      23: aload_0
      24: getfield      #11                 // Field brokerChannel:Lorg/springframework/messaging/SubscribableChannel;
      27: aload_0
      28: invokeinterface #25,  2           // InterfaceMethod org/springframework/messaging/SubscribableChannel.unsubscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      33: pop
      34: aload_1
      35: monitorexit
      36: goto          44
      39: astore_2
      40: aload_1
      41: monitorexit
      42: aload_2
      43: athrow
      44: return
    Exception table:
       from    to  target type
           7    36    39   any
          39    42    39   any

  public final void stop(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lifecycleMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: invokevirtual #26                 // Method stop:()V
      11: aload_1
      12: invokeinterface #27,  1           // InterfaceMethod java/lang/Runnable.run:()V
      17: aload_2
      18: monitorexit
      19: goto          27
      22: astore_3
      23: aload_2
      24: monitorexit
      25: aload_3
      26: athrow
      27: return
    Exception table:
       from    to  target type
           7    19    22   any
          22    25    22   any

  public final boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #3                  // Field running:Z
       4: ireturn

  public void handleMessage(org.springframework.messaging.Message<?>) throws org.springframework.messaging.MessagingException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
       4: ifnull        21
       7: aload_0
       8: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
      11: aload_1
      12: invokevirtual #28                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler.preHandle:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      15: astore_1
      16: aload_1
      17: ifnonnull     21
      20: return
      21: aload_0
      22: getfield      #15                 // Field destinationResolver:Lorg/springframework/messaging/simp/user/UserDestinationResolver;
      25: aload_1
      26: invokeinterface #29,  2           // InterfaceMethod org/springframework/messaging/simp/user/UserDestinationResolver.resolveDestination:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/user/UserDestinationResult;
      31: astore_2
      32: aload_2
      33: ifnonnull     37
      36: return
      37: aload_2
      38: invokevirtual #30                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getTargetDestinations:()Ljava/util/Set;
      41: invokeinterface #31,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      46: ifeq          106
      49: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      52: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      57: ifeq          90
      60: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
      63: new           #33                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #35                 // String No active sessions for user destination:
      72: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_2
      76: invokevirtual #37                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getSourceDestination:()Ljava/lang/String;
      79: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      90: aload_0
      91: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
      94: ifnull        105
      97: aload_0
      98: getfield      #19                 // Field broadcastHandler:Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler;
     101: aload_1
     102: invokevirtual #40                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler$BroadcastHandler.handleUnresolved:(Lorg/springframework/messaging/Message;)V
     105: return
     106: aload_1
     107: invokestatic  #41                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
     110: astore_3
     111: aload_0
     112: aload_3
     113: invokespecial #42                 // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
     116: aload_3
     117: ldc           #44                 // String simpOrigDestination
     119: aload_2
     120: invokevirtual #45                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getSubscribeDestination:()Ljava/lang/String;
     123: invokevirtual #46                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setNativeHeader:(Ljava/lang/String;Ljava/lang/String;)V
     126: aload_3
     127: iconst_1
     128: invokevirtual #47                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setLeaveMutable:(Z)V
     131: aload_1
     132: invokeinterface #48,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     137: aload_3
     138: invokevirtual #49                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     141: invokestatic  #50                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     144: astore_1
     145: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
     148: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     153: ifeq          198
     156: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
     159: new           #33                 // class java/lang/StringBuilder
     162: dup
     163: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     166: ldc           #51                 // String Translated
     168: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: aload_2
     172: invokevirtual #37                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getSourceDestination:()Ljava/lang/String;
     175: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: ldc           #52                 // String  ->
     180: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     183: aload_2
     184: invokevirtual #30                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getTargetDestinations:()Ljava/util/Set;
     187: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     190: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     193: invokeinterface #39,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     198: aload_2
     199: invokevirtual #30                 // Method org/springframework/messaging/simp/user/UserDestinationResult.getTargetDestinations:()Ljava/util/Set;
     202: invokeinterface #54,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     207: astore        4
     209: aload         4
     211: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     216: ifeq          246
     219: aload         4
     221: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     226: checkcast     #57                 // class java/lang/String
     229: astore        5
     231: aload_0
     232: getfield      #14                 // Field messagingTemplate:Lorg/springframework/messaging/core/MessageSendingOperations;
     235: aload         5
     237: aload_1
     238: invokeinterface #58,  3           // InterfaceMethod org/springframework/messaging/core/MessageSendingOperations.send:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
     243: goto          209
     246: return

  private void initHeaders(org.springframework.messaging.simp.SimpMessageHeaderAccessor);
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #59                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      11: aload_1
      12: invokeinterface #60,  2           // InterfaceMethod org/springframework/messaging/support/MessageHeaderInitializer.initHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      17: return

  public java.lang.String toString();
    Code:
       0: new           #33                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #61                 // String UserDestinationMessageHandler[
       9: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #15                 // Field destinationResolver:Lorg/springframework/messaging/simp/user/UserDestinationResolver;
      16: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #62                 // String ]
      21: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #38                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static org.apache.commons.logging.Log access$000();
    Code:
       0: getstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static {};
    Code:
       0: ldc           #63                 // class org/springframework/messaging/simp/user/UserDestinationMessageHandler
       2: invokestatic  #64                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #1                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
