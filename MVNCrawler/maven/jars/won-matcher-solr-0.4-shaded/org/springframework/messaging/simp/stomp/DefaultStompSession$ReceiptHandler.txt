Compiled from "DefaultStompSession.java"
class org.springframework.messaging.simp.stomp.DefaultStompSession$ReceiptHandler implements org.springframework.messaging.simp.stomp.StompSession$Receiptable {
  private final java.lang.String receiptId;

  private final java.util.List<java.lang.Runnable> receiptCallbacks;

  private final java.util.List<java.lang.Runnable> receiptLostCallbacks;

  private java.util.concurrent.ScheduledFuture<?> future;

  private java.lang.Boolean result;

  final org.springframework.messaging.simp.stomp.DefaultStompSession this$0;

  public org.springframework.messaging.simp.stomp.DefaultStompSession$ReceiptHandler(org.springframework.messaging.simp.stomp.DefaultStompSession, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/ArrayList
      13: dup
      14: iconst_2
      15: invokespecial #4                  // Method java/util/ArrayList."<init>":(I)V
      18: putfield      #5                  // Field receiptCallbacks:Ljava/util/List;
      21: aload_0
      22: new           #3                  // class java/util/ArrayList
      25: dup
      26: iconst_2
      27: invokespecial #4                  // Method java/util/ArrayList."<init>":(I)V
      30: putfield      #6                  // Field receiptLostCallbacks:Ljava/util/List;
      33: aload_0
      34: aload_2
      35: putfield      #7                  // Field receiptId:Ljava/lang/String;
      38: aload_0
      39: getfield      #7                  // Field receiptId:Ljava/lang/String;
      42: ifnull        49
      45: aload_0
      46: invokespecial #8                  // Method initReceiptHandling:()V
      49: return

  private void initReceiptHandling();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
       4: invokevirtual #9                  // Method org/springframework/messaging/simp/stomp/DefaultStompSession.getTaskScheduler:()Lorg/springframework/scheduling/TaskScheduler;
       7: ldc           #10                 // String To track receipts, a TaskScheduler must be configured
       9: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
      16: invokestatic  #12                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession.access$200:(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;)Ljava/util/Map;
      19: aload_0
      20: getfield      #7                  // Field receiptId:Ljava/lang/String;
      23: aload_0
      24: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: new           #14                 // class java/util/Date
      33: dup
      34: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
      37: aload_0
      38: getfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
      41: invokevirtual #16                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession.getReceiptTimeLimit:()J
      44: ladd
      45: invokespecial #17                 // Method java/util/Date."<init>":(J)V
      48: astore_1
      49: aload_0
      50: aload_0
      51: getfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
      54: invokevirtual #9                  // Method org/springframework/messaging/simp/stomp/DefaultStompSession.getTaskScheduler:()Lorg/springframework/scheduling/TaskScheduler;
      57: new           #18                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler$1
      60: dup
      61: aload_0
      62: invokespecial #19                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler$1."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler;)V
      65: aload_1
      66: invokeinterface #20,  3           // InterfaceMethod org/springframework/scheduling/TaskScheduler.schedule:(Ljava/lang/Runnable;Ljava/util/Date;)Ljava/util/concurrent/ScheduledFuture;
      71: putfield      #21                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      74: return

  public java.lang.String getReceiptId();
    Code:
       0: aload_0
       1: getfield      #7                  // Field receiptId:Ljava/lang/String;
       4: areturn

  public void addReceiptTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #22                 // Method addTask:(Ljava/lang/Runnable;Z)V
       6: return

  public void addReceiptLostTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #22                 // Method addTask:(Ljava/lang/Runnable;Z)V
       6: return

  private void addTask(java.lang.Runnable, boolean);
    Code:
       0: aload_0
       1: getfield      #7                  // Field receiptId:Ljava/lang/String;
       4: ldc           #23                 // String To track receipts, set autoReceiptEnabled=true or add \'receiptId\' header
       6: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: dup
      11: astore_3
      12: monitorenter
      13: aload_0
      14: getfield      #24                 // Field result:Ljava/lang/Boolean;
      17: ifnull        42
      20: aload_0
      21: getfield      #24                 // Field result:Ljava/lang/Boolean;
      24: invokevirtual #25                 // Method java/lang/Boolean.booleanValue:()Z
      27: iload_2
      28: if_icmpne     42
      31: aload_0
      32: aload_1
      33: invokestatic  #26                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      36: invokespecial #27                 // Method invoke:(Ljava/util/List;)V
      39: goto          71
      42: iload_2
      43: ifeq          60
      46: aload_0
      47: getfield      #5                  // Field receiptCallbacks:Ljava/util/List;
      50: aload_1
      51: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      56: pop
      57: goto          71
      60: aload_0
      61: getfield      #6                  // Field receiptLostCallbacks:Ljava/util/List;
      64: aload_1
      65: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      70: pop
      71: aload_3
      72: monitorexit
      73: goto          83
      76: astore        4
      78: aload_3
      79: monitorexit
      80: aload         4
      82: athrow
      83: return
    Exception table:
       from    to  target type
          13    73    76   any
          76    80    76   any

  private void invoke(java.util.List<java.lang.Runnable>);
    Code:
       0: aload_1
       1: invokeinterface #29,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          40
      16: aload_2
      17: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #32                 // class java/lang/Runnable
      25: astore_3
      26: aload_3
      27: invokeinterface #33,  1           // InterfaceMethod java/lang/Runnable.run:()V
      32: goto          37
      35: astore        4
      37: goto          7
      40: return
    Exception table:
       from    to  target type
          26    32    35   Class java/lang/Throwable

  public void handleReceiptReceived();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #35                 // Method handleInternal:(Z)V
       5: return

  public void handleReceiptNotReceived();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #35                 // Method handleInternal:(Z)V
       5: return

  private void handleInternal(boolean);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #24                 // Field result:Ljava/lang/Boolean;
       8: ifnull        14
      11: aload_2
      12: monitorexit
      13: return
      14: aload_0
      15: iload_1
      16: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      19: putfield      #24                 // Field result:Ljava/lang/Boolean;
      22: aload_0
      23: iload_1
      24: ifeq          34
      27: aload_0
      28: getfield      #5                  // Field receiptCallbacks:Ljava/util/List;
      31: goto          38
      34: aload_0
      35: getfield      #6                  // Field receiptLostCallbacks:Ljava/util/List;
      38: invokespecial #27                 // Method invoke:(Ljava/util/List;)V
      41: aload_0
      42: getfield      #1                  // Field this$0:Lorg/springframework/messaging/simp/stomp/DefaultStompSession;
      45: invokestatic  #12                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession.access$200:(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;)Ljava/util/Map;
      48: aload_0
      49: getfield      #7                  // Field receiptId:Ljava/lang/String;
      52: invokeinterface #37,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_0
      59: getfield      #21                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      62: ifnull        76
      65: aload_0
      66: getfield      #21                 // Field future:Ljava/util/concurrent/ScheduledFuture;
      69: iconst_1
      70: invokeinterface #38,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      75: pop
      76: aload_2
      77: monitorexit
      78: goto          86
      81: astore_3
      82: aload_2
      83: monitorexit
      84: aload_3
      85: athrow
      86: return
    Exception table:
       from    to  target type
           4    13    81   any
          14    78    81   any
          81    84    81   any
}
