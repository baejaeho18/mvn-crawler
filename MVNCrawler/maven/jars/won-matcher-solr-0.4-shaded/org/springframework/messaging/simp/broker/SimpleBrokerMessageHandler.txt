Compiled from "SimpleBrokerMessageHandler.java"
public class org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler extends org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler {
  private static final byte[] EMPTY_PAYLOAD;

  private org.springframework.util.PathMatcher pathMatcher;

  private java.lang.Integer cacheLimit;

  private java.lang.String selectorHeaderName;

  private org.springframework.scheduling.TaskScheduler taskScheduler;

  private long[] heartbeatValue;

  private org.springframework.messaging.support.MessageHeaderInitializer headerInitializer;

  private org.springframework.messaging.simp.broker.SubscriptionRegistry subscriptionRegistry;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler$SessionInfo> sessions;

  private java.util.concurrent.ScheduledFuture<?> heartbeatFuture;

  public org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.MessageChannel, org.springframework.messaging.SubscribableChannel, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #5                  // Method org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
       9: aload_0
      10: ldc           #6                  // String selector
      12: putfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #4                  // Field sessions:Ljava/util/Map;
      26: aload_0
      27: new           #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      30: dup
      31: invokespecial #11                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry."<init>":()V
      34: putfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      37: return

  public void setSubscriptionRegistry(org.springframework.messaging.simp.broker.SubscriptionRegistry);
    Code:
       0: aload_1
       1: ldc           #13                 // String SubscriptionRegistry must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: aload_0
      12: invokespecial #15                 // Method initPathMatcherToUse:()V
      15: aload_0
      16: invokespecial #16                 // Method initCacheLimitToUse:()V
      19: aload_0
      20: invokespecial #17                 // Method initSelectorHeaderNameToUse:()V
      23: return

  public org.springframework.messaging.simp.broker.SubscriptionRegistry getSubscriptionRegistry();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: areturn

  public void setSelectorHeaderName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
       5: aload_0
       6: invokespecial #17                 // Method initSelectorHeaderNameToUse:()V
       9: return

  private void initSelectorHeaderNameToUse();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
       7: ifeq          24
      10: aload_0
      11: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      14: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      17: aload_0
      18: getfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
      21: invokevirtual #18                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setSelectorHeaderName:(Ljava/lang/String;)V
      24: return

  public void setPathMatcher(org.springframework.util.PathMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
       5: aload_0
       6: invokespecial #15                 // Method initPathMatcherToUse:()V
       9: return

  private void initPathMatcherToUse();
    Code:
       0: aload_0
       1: getfield      #19                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
       4: ifnull        31
       7: aload_0
       8: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      14: ifeq          31
      17: aload_0
      18: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      21: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      24: aload_0
      25: getfield      #19                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
      28: invokevirtual #20                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setPathMatcher:(Lorg/springframework/util/PathMatcher;)V
      31: return

  public void setCacheLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field cacheLimit:Ljava/lang/Integer;
       5: aload_0
       6: invokespecial #16                 // Method initCacheLimitToUse:()V
       9: return

  private void initCacheLimitToUse();
    Code:
       0: aload_0
       1: getfield      #21                 // Field cacheLimit:Ljava/lang/Integer;
       4: ifnull        34
       7: aload_0
       8: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      14: ifeq          34
      17: aload_0
      18: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      21: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      24: aload_0
      25: getfield      #21                 // Field cacheLimit:Ljava/lang/Integer;
      28: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      31: invokevirtual #23                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setCacheLimit:(I)V
      34: return

  public void setTaskScheduler(org.springframework.scheduling.TaskScheduler);
    Code:
       0: aload_1
       1: ldc           #24                 // String TaskScheduler must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #25                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      11: aload_0
      12: getfield      #26                 // Field heartbeatValue:[J
      15: ifnonnull     37
      18: aload_0
      19: iconst_2
      20: newarray       long
      22: dup
      23: iconst_0
      24: ldc2_w        #27                 // long 10000l
      27: lastore
      28: dup
      29: iconst_1
      30: ldc2_w        #27                 // long 10000l
      33: lastore
      34: putfield      #26                 // Field heartbeatValue:[J
      37: return

  public org.springframework.scheduling.TaskScheduler getTaskScheduler();
    Code:
       0: aload_0
       1: getfield      #25                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       4: areturn

  public void setHeartbeatValue(long[]);
    Code:
       0: aload_1
       1: ifnull        26
       4: aload_1
       5: arraylength
       6: iconst_2
       7: if_icmpne     26
      10: aload_1
      11: iconst_0
      12: laload
      13: lconst_0
      14: lcmp
      15: iflt          26
      18: aload_1
      19: iconst_1
      20: laload
      21: lconst_0
      22: lcmp
      23: ifge          56
      26: new           #29                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #30                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #32                 // String Invalid heart-beat:
      39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokestatic  #34                 // Method java/util/Arrays.toString:([J)Ljava/lang/String;
      46: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #36                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: putfield      #26                 // Field heartbeatValue:[J
      61: return

  public long[] getHeartbeatValue();
    Code:
       0: aload_0
       1: getfield      #26                 // Field heartbeatValue:[J
       4: areturn

  public void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       5: return

  public org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer();
    Code:
       0: aload_0
       1: getfield      #37                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: areturn

  public void startInternal();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method publishBrokerAvailableEvent:()V
       4: aload_0
       5: invokevirtual #39                 // Method getTaskScheduler:()Lorg/springframework/scheduling/TaskScheduler;
       8: ifnull        48
      11: aload_0
      12: invokespecial #40                 // Method initHeartbeatTaskDelay:()J
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          45
      22: aload_0
      23: aload_0
      24: getfield      #25                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      27: new           #41                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$HeartbeatTask
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #42                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$HeartbeatTask."<init>":(Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler;Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$1;)V
      36: lload_1
      37: invokeinterface #43,  4           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;
      42: putfield      #44                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
      45: goto          87
      48: aload_0
      49: invokevirtual #45                 // Method getHeartbeatValue:()[J
      52: ifnull        77
      55: aload_0
      56: invokevirtual #45                 // Method getHeartbeatValue:()[J
      59: iconst_0
      60: laload
      61: lconst_0
      62: lcmp
      63: ifne          81
      66: aload_0
      67: invokevirtual #45                 // Method getHeartbeatValue:()[J
      70: iconst_1
      71: laload
      72: lconst_0
      73: lcmp
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #46                 // String Heartbeat values configured but no TaskScheduler provided
      84: invokestatic  #47                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      87: return

  private long initHeartbeatTaskDelay();
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method getHeartbeatValue:()[J
       4: ifnonnull     9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: invokevirtual #45                 // Method getHeartbeatValue:()[J
      13: iconst_0
      14: laload
      15: lconst_0
      16: lcmp
      17: ifle          47
      20: aload_0
      21: invokevirtual #45                 // Method getHeartbeatValue:()[J
      24: iconst_1
      25: laload
      26: lconst_0
      27: lcmp
      28: ifle          47
      31: aload_0
      32: invokevirtual #45                 // Method getHeartbeatValue:()[J
      35: iconst_0
      36: laload
      37: aload_0
      38: invokevirtual #45                 // Method getHeartbeatValue:()[J
      41: iconst_1
      42: laload
      43: invokestatic  #48                 // Method java/lang/Math.min:(JJ)J
      46: lreturn
      47: aload_0
      48: invokevirtual #45                 // Method getHeartbeatValue:()[J
      51: iconst_0
      52: laload
      53: lconst_0
      54: lcmp
      55: ifle          67
      58: aload_0
      59: invokevirtual #45                 // Method getHeartbeatValue:()[J
      62: iconst_0
      63: laload
      64: goto          73
      67: aload_0
      68: invokevirtual #45                 // Method getHeartbeatValue:()[J
      71: iconst_1
      72: laload
      73: lreturn

  public void stopInternal();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method publishBrokerUnavailableEvent:()V
       4: aload_0
       5: getfield      #44                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
       8: ifnull        22
      11: aload_0
      12: getfield      #44                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
      15: iconst_1
      16: invokeinterface #50,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      21: pop
      22: return

  protected void handleMessageInternal(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: astore_2
       7: aload_2
       8: invokestatic  #52                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageType:(Ljava/util/Map;)Lorg/springframework/messaging/simp/SimpMessageType;
      11: astore_3
      12: aload_2
      13: invokestatic  #53                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getDestination:(Ljava/util/Map;)Ljava/lang/String;
      16: astore        4
      18: aload_2
      19: invokestatic  #54                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getSessionId:(Ljava/util/Map;)Ljava/lang/String;
      22: astore        5
      24: aload_0
      25: aload         5
      27: invokespecial #55                 // Method updateSessionReadTime:(Ljava/lang/String;)V
      30: aload_0
      31: aload         4
      33: invokevirtual #56                 // Method checkDestinationPrefix:(Ljava/lang/String;)Z
      36: ifne          40
      39: return
      40: getstatic     #57                 // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
      43: aload_3
      44: invokevirtual #58                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
      47: ifeq          65
      50: aload_0
      51: aload_1
      52: invokespecial #59                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
      55: aload_0
      56: aload         4
      58: aload_1
      59: invokevirtual #60                 // Method sendMessageToSubscribers:(Ljava/lang/String;Lorg/springframework/messaging/Message;)V
      62: goto          286
      65: getstatic     #61                 // Field org/springframework/messaging/simp/SimpMessageType.CONNECT:Lorg/springframework/messaging/simp/SimpMessageType;
      68: aload_3
      69: invokevirtual #58                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
      72: ifeq          200
      75: aload_0
      76: aload_1
      77: invokespecial #59                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
      80: aload_2
      81: invokestatic  #62                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getHeartbeat:(Ljava/util/Map;)[J
      84: astore        6
      86: aload_0
      87: invokevirtual #45                 // Method getHeartbeatValue:()[J
      90: astore        7
      92: aload_2
      93: invokestatic  #63                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
      96: astore        8
      98: aload_0
      99: getfield      #4                  // Field sessions:Ljava/util/Map;
     102: aload         5
     104: new           #64                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     107: dup
     108: aload         5
     110: aload         8
     112: aload         6
     114: aload         7
     116: invokespecial #65                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo."<init>":(Ljava/lang/String;Ljava/security/Principal;[J[J)V
     119: invokeinterface #66,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     124: pop
     125: getstatic     #67                 // Field org/springframework/messaging/simp/SimpMessageType.CONNECT_ACK:Lorg/springframework/messaging/simp/SimpMessageType;
     128: invokestatic  #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
     131: astore        9
     133: aload_0
     134: aload         9
     136: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
     139: aload         9
     141: aload         5
     143: invokevirtual #69                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     146: aload         9
     148: aload_2
     149: invokestatic  #63                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     152: invokevirtual #70                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setUser:(Ljava/security/Principal;)V
     155: aload         9
     157: ldc           #72                 // String simpConnectMessage
     159: aload_1
     160: invokevirtual #73                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
     163: aload         9
     165: ldc           #74                 // String simpHeartbeat
     167: aload         7
     169: invokevirtual #73                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
     172: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
     175: aload         9
     177: invokevirtual #75                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     180: invokestatic  #76                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     183: astore        10
     185: aload_0
     186: invokevirtual #77                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     189: aload         10
     191: invokeinterface #78,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     196: pop
     197: goto          286
     200: getstatic     #79                 // Field org/springframework/messaging/simp/SimpMessageType.DISCONNECT:Lorg/springframework/messaging/simp/SimpMessageType;
     203: aload_3
     204: invokevirtual #58                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     207: ifeq          233
     210: aload_0
     211: aload_1
     212: invokespecial #59                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     215: aload_2
     216: invokestatic  #63                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     219: astore        6
     221: aload_0
     222: aload         5
     224: aload         6
     226: aload_1
     227: invokespecial #3                  // Method handleDisconnect:(Ljava/lang/String;Ljava/security/Principal;Lorg/springframework/messaging/Message;)V
     230: goto          286
     233: getstatic     #80                 // Field org/springframework/messaging/simp/SimpMessageType.SUBSCRIBE:Lorg/springframework/messaging/simp/SimpMessageType;
     236: aload_3
     237: invokevirtual #58                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     240: ifeq          261
     243: aload_0
     244: aload_1
     245: invokespecial #59                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     248: aload_0
     249: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
     252: aload_1
     253: invokeinterface #81,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.registerSubscription:(Lorg/springframework/messaging/Message;)V
     258: goto          286
     261: getstatic     #82                 // Field org/springframework/messaging/simp/SimpMessageType.UNSUBSCRIBE:Lorg/springframework/messaging/simp/SimpMessageType;
     264: aload_3
     265: invokevirtual #58                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     268: ifeq          286
     271: aload_0
     272: aload_1
     273: invokespecial #59                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     276: aload_0
     277: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
     280: aload_1
     281: invokeinterface #83,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.unregisterSubscription:(Lorg/springframework/messaging/Message;)V
     286: return

  private void updateSessionReadTime(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        29
       4: aload_0
       5: getfield      #4                  // Field sessions:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #64                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
      17: astore_2
      18: aload_2
      19: ifnull        29
      22: aload_2
      23: invokestatic  #85                 // Method java/lang/System.currentTimeMillis:()J
      26: invokevirtual #86                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastReadTime:(J)V
      29: return

  private void logMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #88,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          72
      12: aload_1
      13: ldc           #71                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      15: invokestatic  #89                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      18: checkcast     #71                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      21: astore_2
      22: aload_2
      23: ifnull        30
      26: aload_2
      27: goto          34
      30: aload_1
      31: invokestatic  #90                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
      34: astore_2
      35: aload_0
      36: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
      39: new           #30                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #91                 // String Processing
      48: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: aload_1
      53: invokeinterface #92,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      58: invokevirtual #93                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      61: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #94,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: return

  private void initHeaders(org.springframework.messaging.simp.SimpMessageHeaderAccessor);
    Code:
       0: aload_0
       1: invokevirtual #95                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #95                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      11: aload_1
      12: invokeinterface #96,  2           // InterfaceMethod org/springframework/messaging/support/MessageHeaderInitializer.initHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      17: return

  private void handleDisconnect(java.lang.String, java.security.Principal, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #97,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      15: aload_1
      16: invokeinterface #98,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.unregisterAllSubscriptions:(Ljava/lang/String;)V
      21: getstatic     #99                 // Field org/springframework/messaging/simp/SimpMessageType.DISCONNECT_ACK:Lorg/springframework/messaging/simp/SimpMessageType;
      24: invokestatic  #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
      27: astore        4
      29: aload         4
      31: aload_1
      32: invokevirtual #69                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      35: aload         4
      37: aload_2
      38: invokevirtual #70                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setUser:(Ljava/security/Principal;)V
      41: aload_3
      42: ifnull        53
      45: aload         4
      47: ldc           #100                // String simpDisconnectMessage
      49: aload_3
      50: invokevirtual #73                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      53: aload_0
      54: aload         4
      56: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
      59: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
      62: aload         4
      64: invokevirtual #75                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      67: invokestatic  #76                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      70: astore        5
      72: aload_0
      73: invokevirtual #77                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
      76: aload         5
      78: invokeinterface #78,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      83: pop
      84: return

  protected void sendMessageToSubscribers(java.lang.String, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: aload_2
       5: invokeinterface #101,  2          // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.findSubscriptions:(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MultiValueMap;
      10: astore_3
      11: aload_3
      12: invokeinterface #102,  1          // InterfaceMethod org/springframework/util/MultiValueMap.isEmpty:()Z
      17: ifne          70
      20: aload_0
      21: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
      24: invokeinterface #88,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      29: ifeq          70
      32: aload_0
      33: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
      36: new           #30                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #103                // String Broadcasting to
      45: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_3
      49: invokeinterface #104,  1          // InterfaceMethod org/springframework/util/MultiValueMap.size:()I
      54: invokevirtual #105                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #106                // String  sessions.
      59: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #94,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: invokestatic  #85                 // Method java/lang/System.currentTimeMillis:()J
      73: lstore        4
      75: aload_3
      76: invokeinterface #107,  1          // InterfaceMethod org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
      81: invokeinterface #108,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      86: astore        6
      88: aload         6
      90: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          388
      98: aload         6
     100: invokeinterface #110,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     105: checkcast     #111                // class java/util/Map$Entry
     108: astore        7
     110: aload         7
     112: invokeinterface #112,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     117: checkcast     #113                // class java/util/List
     120: invokeinterface #114,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     125: astore        8
     127: aload         8
     129: invokeinterface #109,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
     134: ifeq          385
     137: aload         8
     139: invokeinterface #110,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     144: checkcast     #115                // class java/lang/String
     147: astore        9
     149: getstatic     #57                 // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
     152: invokestatic  #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
     155: astore        10
     157: aload_0
     158: aload         10
     160: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
     163: aload         10
     165: aload         7
     167: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     172: checkcast     #115                // class java/lang/String
     175: invokevirtual #69                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     178: aload         10
     180: aload         9
     182: invokevirtual #117                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSubscriptionId:(Ljava/lang/String;)V
     185: aload         10
     187: aload_2
     188: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     193: invokevirtual #118                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.copyHeadersIfAbsent:(Ljava/util/Map;)V
     196: aload_2
     197: invokeinterface #92,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     202: astore        11
     204: aload         11
     206: aload         10
     208: invokevirtual #75                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     211: invokestatic  #76                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     214: astore        12
     216: aload_0
     217: invokevirtual #77                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     220: aload         12
     222: invokeinterface #78,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     227: pop
     228: aload_0
     229: getfield      #4                  // Field sessions:Ljava/util/Map;
     232: aload         7
     234: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     239: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     244: checkcast     #64                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     247: astore        13
     249: aload         13
     251: ifnull        261
     254: aload         13
     256: lload         4
     258: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     261: goto          382
     264: astore        13
     266: aload_0
     267: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
     270: invokeinterface #121,  1          // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     275: ifeq          308
     278: aload_0
     279: getfield      #87                 // Field logger:Lorg/apache/commons/logging/Log;
     282: new           #30                 // class java/lang/StringBuilder
     285: dup
     286: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     289: ldc           #122                // String Failed to send
     291: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     294: aload_2
     295: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     298: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     301: aload         13
     303: invokeinterface #124,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     308: aload_0
     309: getfield      #4                  // Field sessions:Ljava/util/Map;
     312: aload         7
     314: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     319: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     324: checkcast     #64                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     327: astore        13
     329: aload         13
     331: ifnull        341
     334: aload         13
     336: lload         4
     338: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     341: goto          382
     344: astore        14
     346: aload_0
     347: getfield      #4                  // Field sessions:Ljava/util/Map;
     350: aload         7
     352: invokeinterface #116,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     357: invokeinterface #84,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     362: checkcast     #64                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     365: astore        15
     367: aload         15
     369: ifnull        379
     372: aload         15
     374: lload         4
     376: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     379: aload         14
     381: athrow
     382: goto          127
     385: goto          88
     388: return
    Exception table:
       from    to  target type
         216   228   264   Class java/lang/Throwable
         216   228   344   any
         264   308   344   any
         344   346   344   any

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #125                // String SimpleBrokerMessageHandler [
       9: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      16: invokevirtual #123                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #126                // String ]
      21: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  static java.util.Map access$100(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessions:Ljava/util/Map;
       4: areturn

  static void access$200(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler, java.lang.String, java.security.Principal, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method handleDisconnect:(Ljava/lang/String;Ljava/security/Principal;Lorg/springframework/messaging/Message;)V
       7: return

  static void access$300(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler, org.springframework.messaging.simp.SimpMessageHeaderAccessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
       5: return

  static byte[] access$400();
    Code:
       0: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #1                  // Field EMPTY_PAYLOAD:[B
       6: return
}
