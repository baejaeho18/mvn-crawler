Compiled from "StompBrokerRelayMessageHandler.java"
public class org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler extends org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler {
  public static final java.lang.String SYSTEM_SESSION_ID;

  private static final long HEARTBEAT_MULTIPLIER;

  private static final int MAX_TIME_TO_CONNECTED_FRAME;

  private static final byte[] EMPTY_PAYLOAD;

  private static final org.springframework.util.concurrent.ListenableFutureTask<java.lang.Void> EMPTY_TASK;

  private static final org.springframework.messaging.Message<byte[]> HEARTBEAT_MESSAGE;

  private java.lang.String relayHost;

  private int relayPort;

  private java.lang.String clientLogin;

  private java.lang.String clientPasscode;

  private java.lang.String systemLogin;

  private java.lang.String systemPasscode;

  private long systemHeartbeatSendInterval;

  private long systemHeartbeatReceiveInterval;

  private final java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler> systemSubscriptions;

  private java.lang.String virtualHost;

  private org.springframework.messaging.tcp.TcpOperations<byte[]> tcpClient;

  private org.springframework.messaging.support.MessageHeaderInitializer headerInitializer;

  private final org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats stats;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$StompConnectionHandler> connectionHandlers;

  public org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.MessageChannel, org.springframework.messaging.SubscribableChannel, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #11                 // Method org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
       9: aload_0
      10: ldc           #12                 // String 127.0.0.1
      12: putfield      #2                  // Field relayHost:Ljava/lang/String;
      15: aload_0
      16: ldc           #13                 // int 61613
      18: putfield      #1                  // Field relayPort:I
      21: aload_0
      22: ldc           #14                 // String guest
      24: putfield      #15                 // Field clientLogin:Ljava/lang/String;
      27: aload_0
      28: ldc           #14                 // String guest
      30: putfield      #16                 // Field clientPasscode:Ljava/lang/String;
      33: aload_0
      34: ldc           #14                 // String guest
      36: putfield      #17                 // Field systemLogin:Ljava/lang/String;
      39: aload_0
      40: ldc           #14                 // String guest
      42: putfield      #18                 // Field systemPasscode:Ljava/lang/String;
      45: aload_0
      46: ldc2_w        #19                 // long 10000l
      49: putfield      #21                 // Field systemHeartbeatSendInterval:J
      52: aload_0
      53: ldc2_w        #19                 // long 10000l
      56: putfield      #22                 // Field systemHeartbeatReceiveInterval:J
      59: aload_0
      60: new           #23                 // class java/util/HashMap
      63: dup
      64: iconst_4
      65: invokespecial #24                 // Method java/util/HashMap."<init>":(I)V
      68: putfield      #25                 // Field systemSubscriptions:Ljava/util/Map;
      71: aload_0
      72: new           #26                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats
      75: dup
      76: aload_0
      77: aconst_null
      78: invokespecial #27                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
      81: putfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
      84: aload_0
      85: new           #28                 // class java/util/concurrent/ConcurrentHashMap
      88: dup
      89: invokespecial #29                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      92: putfield      #6                  // Field connectionHandlers:Ljava/util/Map;
      95: return

  public void setRelayHost(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #30                 // String relayHost must not be empty
       3: invokestatic  #31                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #2                  // Field relayHost:Ljava/lang/String;
      11: return

  public java.lang.String getRelayHost();
    Code:
       0: aload_0
       1: getfield      #2                  // Field relayHost:Ljava/lang/String;
       4: areturn

  public void setRelayPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field relayPort:I
       5: return

  public int getRelayPort();
    Code:
       0: aload_0
       1: getfield      #1                  // Field relayPort:I
       4: ireturn

  public void setClientLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String clientLogin must not be empty
       3: invokestatic  #31                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #15                 // Field clientLogin:Ljava/lang/String;
      11: return

  public java.lang.String getClientLogin();
    Code:
       0: aload_0
       1: getfield      #15                 // Field clientLogin:Ljava/lang/String;
       4: areturn

  public void setClientPasscode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #33                 // String clientPasscode must not be empty
       3: invokestatic  #31                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #16                 // Field clientPasscode:Ljava/lang/String;
      11: return

  public java.lang.String getClientPasscode();
    Code:
       0: aload_0
       1: getfield      #16                 // Field clientPasscode:Ljava/lang/String;
       4: areturn

  public void setSystemLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #34                 // String systemLogin must not be empty
       3: invokestatic  #31                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #17                 // Field systemLogin:Ljava/lang/String;
      11: return

  public java.lang.String getSystemLogin();
    Code:
       0: aload_0
       1: getfield      #17                 // Field systemLogin:Ljava/lang/String;
       4: areturn

  public void setSystemPasscode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field systemPasscode:Ljava/lang/String;
       5: return

  public java.lang.String getSystemPasscode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field systemPasscode:Ljava/lang/String;
       4: areturn

  public void setSystemHeartbeatSendInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #21                 // Field systemHeartbeatSendInterval:J
       5: return

  public long getSystemHeartbeatSendInterval();
    Code:
       0: aload_0
       1: getfield      #21                 // Field systemHeartbeatSendInterval:J
       4: lreturn

  public void setSystemHeartbeatReceiveInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #22                 // Field systemHeartbeatReceiveInterval:J
       5: return

  public long getSystemHeartbeatReceiveInterval();
    Code:
       0: aload_0
       1: getfield      #22                 // Field systemHeartbeatReceiveInterval:J
       4: lreturn

  public void setSystemSubscriptions(java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler>);
    Code:
       0: aload_0
       1: getfield      #25                 // Field systemSubscriptions:Ljava/util/Map;
       4: invokeinterface #35,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_1
      10: ifnull        23
      13: aload_0
      14: getfield      #25                 // Field systemSubscriptions:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #36,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      23: return

  public java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler> getSystemSubscriptions();
    Code:
       0: aload_0
       1: getfield      #25                 // Field systemSubscriptions:Ljava/util/Map;
       4: areturn

  public void setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field virtualHost:Ljava/lang/String;
       5: return

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #37                 // Field virtualHost:Ljava/lang/String;
       4: areturn

  public void setTcpClient(org.springframework.messaging.tcp.TcpOperations<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       5: return

  public org.springframework.messaging.tcp.TcpOperations<byte[]> getTcpClient();
    Code:
       0: aload_0
       1: getfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       4: areturn

  public void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       5: return

  public org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer();
    Code:
       0: aload_0
       1: getfield      #39                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: areturn

  public java.lang.String getStatsInfo();
    Code:
       0: aload_0
       1: getfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
       4: invokevirtual #40                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.toString:()Ljava/lang/String;
       7: areturn

  public int getConnectionCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  protected void startInternal();
    Code:
       0: aload_0
       1: getfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       4: ifnonnull     63
       7: new           #42                 // class org/springframework/messaging/simp/stomp/StompDecoder
      10: dup
      11: invokespecial #43                 // Method org/springframework/messaging/simp/stomp/StompDecoder."<init>":()V
      14: astore_1
      15: aload_1
      16: aload_0
      17: invokevirtual #44                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      20: invokevirtual #45                 // Method org/springframework/messaging/simp/stomp/StompDecoder.setHeaderInitializer:(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
      23: new           #46                 // class org/springframework/messaging/simp/stomp/Reactor2StompCodec
      26: dup
      27: new           #47                 // class org/springframework/messaging/simp/stomp/StompEncoder
      30: dup
      31: invokespecial #48                 // Method org/springframework/messaging/simp/stomp/StompEncoder."<init>":()V
      34: aload_1
      35: invokespecial #49                 // Method org/springframework/messaging/simp/stomp/Reactor2StompCodec."<init>":(Lorg/springframework/messaging/simp/stomp/StompEncoder;Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
      38: astore_2
      39: aload_0
      40: new           #50                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompTcpClientFactory
      43: dup
      44: aconst_null
      45: invokespecial #51                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompTcpClientFactory."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
      48: aload_0
      49: getfield      #2                  // Field relayHost:Ljava/lang/String;
      52: aload_0
      53: getfield      #1                  // Field relayPort:I
      56: aload_2
      57: invokevirtual #52                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompTcpClientFactory.create:(Ljava/lang/String;ILorg/springframework/messaging/simp/stomp/Reactor2StompCodec;)Lorg/springframework/messaging/tcp/TcpOperations;
      60: putfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
      63: aload_0
      64: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      67: invokeinterface #53,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      72: ifeq          118
      75: aload_0
      76: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      79: new           #54                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #56                 // String Connecting \"system\" session to
      88: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_0
      92: getfield      #2                  // Field relayHost:Ljava/lang/String;
      95: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: ldc           #58                 // String :
     100: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #1                  // Field relayPort:I
     107: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     110: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokeinterface #61,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     118: getstatic     #62                 // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     121: invokestatic  #63                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
     124: astore_1
     125: aload_1
     126: ldc           #64                 // String 1.1,1.2
     128: invokevirtual #65                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setAcceptVersion:(Ljava/lang/String;)V
     131: aload_1
     132: aload_0
     133: getfield      #17                 // Field systemLogin:Ljava/lang/String;
     136: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLogin:(Ljava/lang/String;)V
     139: aload_1
     140: aload_0
     141: getfield      #18                 // Field systemPasscode:Ljava/lang/String;
     144: invokevirtual #67                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setPasscode:(Ljava/lang/String;)V
     147: aload_1
     148: aload_0
     149: getfield      #21                 // Field systemHeartbeatSendInterval:J
     152: aload_0
     153: getfield      #22                 // Field systemHeartbeatReceiveInterval:J
     156: invokevirtual #68                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHeartbeat:(JJ)V
     159: aload_1
     160: aload_0
     161: invokevirtual #69                 // Method getVirtualHost:()Ljava/lang/String;
     164: invokevirtual #70                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHost:(Ljava/lang/String;)V
     167: aload_1
     168: ldc           #72                 // String _system_
     170: invokevirtual #73                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     173: aload_0
     174: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     177: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     182: ifeq          219
     185: aload_0
     186: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     189: new           #54                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     196: ldc           #75                 // String Forwarding
     198: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_1
     202: getstatic     #10                 // Field EMPTY_PAYLOAD:[B
     205: invokevirtual #76                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     208: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     211: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     214: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     219: new           #78                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler
     222: dup
     223: aload_0
     224: aload_1
     225: invokespecial #79                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)V
     228: astore_2
     229: aload_0
     230: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     233: aload_2
     234: invokevirtual #80                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler.getSessionId:()Ljava/lang/String;
     237: aload_2
     238: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     243: pop
     244: aload_0
     245: getfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     248: invokevirtual #82                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementConnectCount:()V
     251: aload_0
     252: getfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     255: aload_2
     256: new           #83                 // class org/springframework/messaging/tcp/FixedIntervalReconnectStrategy
     259: dup
     260: ldc2_w        #84                 // long 5000l
     263: invokespecial #86                 // Method org/springframework/messaging/tcp/FixedIntervalReconnectStrategy."<init>":(J)V
     266: invokeinterface #87,  3           // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.connect:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
     271: pop
     272: return

  protected void stopInternal();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method publishBrokerUnavailableEvent:()V
       4: aload_0
       5: getfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       8: invokeinterface #88,  1           // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.shutdown:()Lorg/springframework/util/concurrent/ListenableFuture;
      13: ldc2_w        #84                 // long 5000l
      16: getstatic     #89                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      19: invokeinterface #90,  4           // InterfaceMethod org/springframework/util/concurrent/ListenableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      24: pop
      25: goto          41
      28: astore_1
      29: aload_0
      30: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      33: ldc           #92                 // String Error in shutdown of TCP client
      35: aload_1
      36: invokeinterface #93,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: return
    Exception table:
       from    to  target type
           4    25    28   Class java/lang/Throwable

  protected void handleMessageInternal(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #94,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: invokestatic  #95                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getSessionId:(Ljava/util/Map;)Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: invokevirtual #96                 // Method isBrokerAvailable:()Z
      14: ifne          150
      17: aload_2
      18: ifnull        30
      21: ldc           #72                 // String _system_
      23: aload_2
      24: invokevirtual #97                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          40
      30: new           #98                 // class org/springframework/messaging/MessageDeliveryException
      33: dup
      34: ldc           #99                 // String Message broker not active. Consider subscribing to receive BrokerAvailabilityEvent\'s from an ApplicationListener Spring bean.
      36: invokespecial #100                // Method org/springframework/messaging/MessageDeliveryException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
      44: aload_2
      45: invokeinterface #101,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #102                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
      53: astore_3
      54: aload_3
      55: ifnull        71
      58: aload_3
      59: ldc           #103                // String Broker not available.
      61: invokestatic  #104                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.access$300:(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler;Ljava/lang/String;)V
      64: aload_3
      65: invokevirtual #105                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.clearConnection:()V
      68: goto          149
      71: getstatic     #106                // Field org/springframework/messaging/simp/stomp/StompCommand.ERROR:Lorg/springframework/messaging/simp/stomp/StompCommand;
      74: invokestatic  #63                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      77: astore        4
      79: aload_0
      80: invokevirtual #44                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      83: ifnull        97
      86: aload_0
      87: invokevirtual #44                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      90: aload         4
      92: invokeinterface #107,  2          // InterfaceMethod org/springframework/messaging/support/MessageHeaderInitializer.initHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      97: aload         4
      99: aload_2
     100: invokevirtual #73                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     103: aload         4
     105: aload_1
     106: invokeinterface #94,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     111: invokestatic  #108                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     114: invokevirtual #109                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setUser:(Ljava/security/Principal;)V
     117: aload         4
     119: ldc           #103                // String Broker not available.
     121: invokevirtual #110                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setMessage:(Ljava/lang/String;)V
     124: aload         4
     126: invokevirtual #111                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     129: astore        5
     131: aload_0
     132: invokevirtual #112                // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     135: getstatic     #10                 // Field EMPTY_PAYLOAD:[B
     138: aload         5
     140: invokestatic  #113                // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     143: invokeinterface #114,  2          // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     148: pop
     149: return
     150: aload_1
     151: ldc           #115                // class org/springframework/messaging/support/MessageHeaderAccessor
     153: invokestatic  #116                // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
     156: astore        5
     158: aload         5
     160: ifnonnull     190
     163: new           #117                // class java/lang/IllegalStateException
     166: dup
     167: new           #54                 // class java/lang/StringBuilder
     170: dup
     171: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     174: ldc           #118                // String No header accessor (not using the SimpMessagingTemplate?):
     176: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     179: aload_1
     180: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     183: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     186: invokespecial #120                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     189: athrow
     190: aload         5
     192: instanceof    #121                // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
     195: ifeq          213
     198: aload         5
     200: checkcast     #121                // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
     203: astore_3
     204: aload_3
     205: invokevirtual #122                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     208: astore        4
     210: goto          286
     213: aload         5
     215: instanceof    #123                // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
     218: ifeq          246
     221: aload_1
     222: invokestatic  #124                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
     225: astore_3
     226: aload_3
     227: invokevirtual #122                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     230: astore        4
     232: aload         4
     234: ifnonnull     286
     237: aload_3
     238: invokevirtual #125                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateStompCommandAsClientMessage:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     241: astore        4
     243: goto          286
     246: new           #117                // class java/lang/IllegalStateException
     249: dup
     250: new           #54                 // class java/lang/StringBuilder
     253: dup
     254: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     257: ldc           #126                // String Unexpected header accessor type
     259: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: aload         5
     264: invokevirtual #127                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     267: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     270: ldc           #128                // String  in
     272: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     275: aload_1
     276: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     279: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     282: invokespecial #120                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     285: athrow
     286: aload_2
     287: ifnonnull     352
     290: getstatic     #129                // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
     293: aload_3
     294: invokevirtual #130                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageType:()Lorg/springframework/messaging/simp/SimpMessageType;
     297: invokevirtual #131                // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     300: ifne          344
     303: aload_0
     304: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     307: invokeinterface #132,  1          // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     312: ifeq          343
     315: aload_0
     316: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     319: new           #54                 // class java/lang/StringBuilder
     322: dup
     323: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     326: ldc           #133                // String Only STOMP SEND supported from within the server side. Ignoring
     328: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     331: aload_1
     332: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     335: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     338: invokeinterface #134,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     343: return
     344: ldc           #72                 // String _system_
     346: astore_2
     347: aload_3
     348: aload_2
     349: invokevirtual #73                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     352: aload_3
     353: invokevirtual #135                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDestination:()Ljava/lang/String;
     356: astore        6
     358: aload         4
     360: ifnull        381
     363: aload         4
     365: invokevirtual #136                // Method org/springframework/messaging/simp/stomp/StompCommand.requiresDestination:()Z
     368: ifeq          381
     371: aload_0
     372: aload         6
     374: invokevirtual #137                // Method checkDestinationPrefix:(Ljava/lang/String;)Z
     377: ifne          381
     380: return
     381: getstatic     #62                 // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     384: aload         4
     386: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     389: ifeq          515
     392: aload_0
     393: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     396: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     401: ifeq          420
     404: aload_0
     405: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     408: aload_3
     409: getstatic     #10                 // Field EMPTY_PAYLOAD:[B
     412: invokevirtual #76                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     415: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     420: aload_3
     421: invokevirtual #139                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.isMutable:()Z
     424: ifeq          431
     427: aload_3
     428: goto          435
     431: aload_1
     432: invokestatic  #124                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
     435: astore_3
     436: aload_3
     437: aload_0
     438: getfield      #15                 // Field clientLogin:Ljava/lang/String;
     441: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLogin:(Ljava/lang/String;)V
     444: aload_3
     445: aload_0
     446: getfield      #16                 // Field clientPasscode:Ljava/lang/String;
     449: invokevirtual #67                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setPasscode:(Ljava/lang/String;)V
     452: aload_0
     453: invokevirtual #69                 // Method getVirtualHost:()Ljava/lang/String;
     456: ifnull        467
     459: aload_3
     460: aload_0
     461: invokevirtual #69                 // Method getVirtualHost:()Ljava/lang/String;
     464: invokevirtual #70                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHost:(Ljava/lang/String;)V
     467: new           #102                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     470: dup
     471: aload_0
     472: aload_2
     473: aload_3
     474: aconst_null
     475: invokespecial #140                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
     478: astore        7
     480: aload_0
     481: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     484: aload_2
     485: aload         7
     487: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     492: pop
     493: aload_0
     494: getfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     497: invokevirtual #82                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementConnectCount:()V
     500: aload_0
     501: getfield      #38                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     504: aload         7
     506: invokeinterface #141,  2          // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.connect:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
     511: pop
     512: goto          688
     515: getstatic     #142                // Field org/springframework/messaging/simp/stomp/StompCommand.DISCONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     518: aload         4
     520: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     523: ifeq          610
     526: aload_0
     527: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     530: aload_2
     531: invokeinterface #101,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     536: checkcast     #102                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     539: astore        7
     541: aload         7
     543: ifnonnull     592
     546: aload_0
     547: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     550: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     555: ifeq          591
     558: aload_0
     559: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     562: new           #54                 // class java/lang/StringBuilder
     565: dup
     566: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     569: ldc           #143                // String Ignoring DISCONNECT in session
     571: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     574: aload_2
     575: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     578: ldc           #144                // String . Connection already cleaned up.
     580: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     583: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     586: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     591: return
     592: aload_0
     593: getfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     596: invokevirtual #145                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementDisconnectCount:()V
     599: aload         7
     601: aload_1
     602: aload_3
     603: invokevirtual #146                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.forward:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)Lorg/springframework/util/concurrent/ListenableFuture;
     606: pop
     607: goto          688
     610: aload_0
     611: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     614: aload_2
     615: invokeinterface #101,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     620: checkcast     #102                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     623: astore        7
     625: aload         7
     627: ifnonnull     680
     630: aload_0
     631: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     634: invokeinterface #74,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     639: ifeq          679
     642: aload_0
     643: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     646: new           #54                 // class java/lang/StringBuilder
     649: dup
     650: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     653: ldc           #147                // String No TCP connection for session
     655: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     658: aload_2
     659: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     662: ldc           #128                // String  in
     664: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     667: aload_1
     668: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     671: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     674: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     679: return
     680: aload         7
     682: aload_1
     683: aload_3
     684: invokevirtual #146                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.forward:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)Lorg/springframework/util/concurrent/ListenableFuture;
     687: pop
     688: return

  public java.lang.String toString();
    Code:
       0: new           #54                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #148                // String StompBrokerRelay[
       9: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field relayHost:Ljava/lang/String;
      16: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #58                 // String :
      21: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #1                  // Field relayPort:I
      28: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #149                // String ]
      33: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static org.apache.commons.logging.Log access$500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static byte[] access$900();
    Code:
       0: getstatic     #10                 // Field EMPTY_PAYLOAD:[B
       3: areturn

  static org.apache.commons.logging.Log access$1000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats access$2000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #9                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
       4: areturn

  static org.springframework.messaging.Message access$2100();
    Code:
       0: getstatic     #8                  // Field HEARTBEAT_MESSAGE:Lorg/springframework/messaging/Message;
       3: areturn

  static org.apache.commons.logging.Log access$2200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.springframework.util.concurrent.ListenableFutureTask access$2800();
    Code:
       0: getstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
       3: areturn

  static org.apache.commons.logging.Log access$2900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static java.util.Map access$4000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
       4: areturn

  static org.apache.commons.logging.Log access$4100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static void access$4600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method publishBrokerAvailableEvent:()V
       4: return

  static org.apache.commons.logging.Log access$4700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static void access$5500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method publishBrokerUnavailableEvent:()V
       4: return

  static void access$5600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method publishBrokerUnavailableEvent:()V
       4: return

  static java.lang.String access$5700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field relayHost:Ljava/lang/String;
       4: areturn

  static int access$5800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field relayPort:I
       4: ireturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #10                 // Field EMPTY_PAYLOAD:[B
       6: new           #150                // class org/springframework/util/concurrent/ListenableFutureTask
       9: dup
      10: new           #151                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$VoidCallable
      13: dup
      14: aconst_null
      15: invokespecial #152                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$VoidCallable."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
      18: invokespecial #153                // Method org/springframework/util/concurrent/ListenableFutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      21: putstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
      24: getstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
      27: invokevirtual #154                // Method org/springframework/util/concurrent/ListenableFutureTask.run:()V
      30: invokestatic  #155                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.createForHeartbeat:()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      33: astore_0
      34: getstatic     #156                // Field org/springframework/messaging/simp/stomp/StompDecoder.HEARTBEAT_PAYLOAD:[B
      37: aload_0
      38: invokevirtual #111                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      41: invokestatic  #113                // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      44: putstatic     #8                  // Field HEARTBEAT_MESSAGE:Lorg/springframework/messaging/Message;
      47: return
}
