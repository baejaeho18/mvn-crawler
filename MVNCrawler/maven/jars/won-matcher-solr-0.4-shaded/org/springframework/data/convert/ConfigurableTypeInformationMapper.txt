Compiled from "ConfigurableTypeInformationMapper.java"
public class org.springframework.data.convert.ConfigurableTypeInformationMapper implements org.springframework.data.convert.TypeInformationMapper {
  private final java.util.Map<org.springframework.data.util.ClassTypeInformation<?>, java.lang.Object> typeMap;

  public org.springframework.data.convert.ConfigurableTypeInformationMapper(java.util.Map<? extends java.lang.Class<?>, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String SourceTypeMap must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: new           #4                  // class java/util/HashMap
      14: dup
      15: aload_1
      16: invokeinterface #5,  1            // InterfaceMethod java/util/Map.size:()I
      21: invokespecial #6                  // Method java/util/HashMap."<init>":(I)V
      24: putfield      #7                  // Field typeMap:Ljava/util/Map;
      27: aload_1
      28: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      33: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore_2
      39: aload_2
      40: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      45: ifeq          136
      48: aload_2
      49: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #12                 // class java/util/Map$Entry
      57: astore_3
      58: aload_3
      59: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      64: checkcast     #14                 // class java/lang/Class
      67: invokestatic  #15                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      70: astore        4
      72: aload_3
      73: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      78: checkcast     #17                 // class java/lang/String
      81: astore        5
      83: aload_0
      84: getfield      #7                  // Field typeMap:Ljava/util/Map;
      87: aload         5
      89: invokeinterface #18,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      94: ifeq          119
      97: new           #19                 // class java/lang/IllegalArgumentException
     100: dup
     101: ldc           #20                 // String Detected mapping ambiguity! String %s cannot be mapped to more than one type!
     103: iconst_1
     104: anewarray     #21                 // class java/lang/Object
     107: dup
     108: iconst_0
     109: aload         5
     111: aastore
     112: invokestatic  #22                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     115: invokespecial #23                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     118: athrow
     119: aload_0
     120: getfield      #7                  // Field typeMap:Ljava/util/Map;
     123: aload         4
     125: aload         5
     127: invokeinterface #24,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: goto          39
     136: return

  public java.lang.Object createAliasFor(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field typeMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public org.springframework.data.util.ClassTypeInformation<?> resolveTypeFrom(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #7                  // Field typeMap:Ljava/util/Map;
      10: invokeinterface #8,  1            // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          66
      30: aload_2
      31: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #12                 // class java/util/Map$Entry
      39: astore_3
      40: aload_3
      41: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      46: aload_1
      47: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          63
      53: aload_3
      54: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      59: checkcast     #27                 // class org/springframework/data/util/ClassTypeInformation
      62: areturn
      63: goto          21
      66: aconst_null
      67: areturn

  public org.springframework.data.util.TypeInformation resolveTypeFrom(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #28                 // Method resolveTypeFrom:(Ljava/lang/Object;)Lorg/springframework/data/util/ClassTypeInformation;
       5: areturn
}
