Compiled from "AnnotationDetectionFieldCallback.java"
public class org.springframework.data.util.AnnotationDetectionFieldCallback implements org.springframework.util.ReflectionUtils$FieldCallback {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  private java.lang.reflect.Field field;

  public org.springframework.data.util.AnnotationDetectionFieldCallback(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String AnnotationType must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field annotationType:Ljava/lang/Class;
      15: return

  public void doWith(java.lang.reflect.Field) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: ifnull        8
       7: return
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field annotationType:Ljava/lang/Class;
      13: invokestatic  #6                  // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      16: astore_2
      17: aload_2
      18: ifnull        33
      21: aload_0
      22: aload_1
      23: putfield      #5                  // Field field:Ljava/lang/reflect/Field;
      26: aload_0
      27: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
      30: invokestatic  #7                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      33: return

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
       4: ifnonnull     11
       7: aconst_null
       8: goto          18
      11: aload_0
      12: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
      15: invokevirtual #8                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      18: areturn

  public <T> T getValue(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #9                  // String Source object must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
      10: ifnonnull     17
      13: aconst_null
      14: goto          25
      17: aload_0
      18: getfield      #5                  // Field field:Ljava/lang/reflect/Field;
      21: aload_1
      22: invokestatic  #10                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      25: areturn
}
