Compiled from "ParentTypeAwareTypeInformation.java"
public abstract class org.springframework.data.util.ParentTypeAwareTypeInformation<S> extends org.springframework.data.util.TypeDiscoverer<S> {
  private final org.springframework.data.util.TypeDiscoverer<?> parent;

  private int hashCode;

  protected org.springframework.data.util.ParentTypeAwareTypeInformation(java.lang.reflect.Type, org.springframework.data.util.TypeDiscoverer<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_2
       4: invokevirtual #1                  // Method org/springframework/data/util/TypeDiscoverer.getTypeVariableMap:()Ljava/util/Map;
       7: invokespecial #2                  // Method "<init>":(Ljava/lang/reflect/Type;Lorg/springframework/data/util/TypeDiscoverer;Ljava/util/Map;)V
      10: return

  protected org.springframework.data.util.ParentTypeAwareTypeInformation(java.lang.reflect.Type, org.springframework.data.util.TypeDiscoverer<?>, java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_3
       3: invokespecial #3                  // Method org/springframework/data/util/TypeDiscoverer."<init>":(Ljava/lang/reflect/Type;Ljava/util/Map;)V
       6: aload_0
       7: aload_2
       8: putfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      11: return

  protected org.springframework.data.util.TypeInformation<?> createInfo(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
       4: invokevirtual #5                  // Method org/springframework/data/util/TypeDiscoverer.getType:()Ljava/lang/Class;
       7: aload_1
       8: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          19
      14: aload_0
      15: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #7                  // Method org/springframework/data/util/TypeDiscoverer.createInfo:(Ljava/lang/reflect/Type;)Lorg/springframework/data/util/TypeInformation;
      24: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/data/util/TypeDiscoverer.equals:(Ljava/lang/Object;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: aload_1
      15: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #10                 // class org/springframework/data/util/ParentTypeAwareTypeInformation
      30: astore_2
      31: aload_0
      32: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      35: ifnonnull     53
      38: aload_2
      39: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      42: ifnonnull     49
      45: iconst_1
      46: goto          64
      49: iconst_0
      50: goto          64
      53: aload_0
      54: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      57: aload_2
      58: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      61: invokevirtual #8                  // Method org/springframework/data/util/TypeDiscoverer.equals:(Ljava/lang/Object;)Z
      64: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field hashCode:I
       4: ifne          26
       7: aload_0
       8: aload_0
       9: invokespecial #12                 // Method org/springframework/data/util/TypeDiscoverer.hashCode:()I
      12: bipush        31
      14: aload_0
      15: getfield      #4                  // Field parent:Lorg/springframework/data/util/TypeDiscoverer;
      18: invokevirtual #12                 // Method org/springframework/data/util/TypeDiscoverer.hashCode:()I
      21: imul
      22: iadd
      23: putfield      #11                 // Field hashCode:I
      26: aload_0
      27: getfield      #11                 // Field hashCode:I
      30: ireturn

  public org.springframework.data.util.TypeInformation specialize(org.springframework.data.util.ClassTypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method org/springframework/data/util/TypeDiscoverer.specialize:(Lorg/springframework/data/util/ClassTypeInformation;)Lorg/springframework/data/util/TypeInformation;
       5: areturn

  public boolean isAssignableFrom(org.springframework.data.util.TypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/springframework/data/util/TypeDiscoverer.isAssignableFrom:(Lorg/springframework/data/util/TypeInformation;)Z
       5: ireturn

  public java.util.List getTypeArguments();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/springframework/data/util/TypeDiscoverer.getTypeArguments:()Ljava/util/List;
       4: areturn

  public org.springframework.data.util.TypeInformation getSuperTypeInformation(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method org/springframework/data/util/TypeDiscoverer.getSuperTypeInformation:(Ljava/lang/Class;)Lorg/springframework/data/util/TypeInformation;
       5: areturn

  public java.util.List getParameterTypes(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/springframework/data/util/TypeDiscoverer.getParameterTypes:(Ljava/lang/reflect/Method;)Ljava/util/List;
       5: areturn

  public org.springframework.data.util.TypeInformation getReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/springframework/data/util/TypeDiscoverer.getReturnType:(Ljava/lang/reflect/Method;)Lorg/springframework/data/util/TypeInformation;
       5: areturn

  public boolean isCollectionLike();
    Code:
       0: aload_0
       1: invokespecial #19                 // Method org/springframework/data/util/TypeDiscoverer.isCollectionLike:()Z
       4: ireturn

  public org.springframework.data.util.TypeInformation getMapValueType();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method org/springframework/data/util/TypeDiscoverer.getMapValueType:()Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public boolean isMap();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method org/springframework/data/util/TypeDiscoverer.isMap:()Z
       4: ireturn

  public org.springframework.data.util.TypeInformation getActualType();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/springframework/data/util/TypeDiscoverer.getActualType:()Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public org.springframework.data.util.ClassTypeInformation getRawTypeInformation();
    Code:
       0: aload_0
       1: invokespecial #23                 // Method org/springframework/data/util/TypeDiscoverer.getRawTypeInformation:()Lorg/springframework/data/util/ClassTypeInformation;
       4: areturn

  public java.lang.Class getType();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/data/util/TypeDiscoverer.getType:()Ljava/lang/Class;
       4: areturn

  public org.springframework.data.util.TypeInformation getProperty(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/springframework/data/util/TypeDiscoverer.getProperty:(Ljava/lang/String;)Lorg/springframework/data/util/TypeInformation;
       5: areturn

  public java.util.List getParameterTypes(java.lang.reflect.Constructor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/springframework/data/util/TypeDiscoverer.getParameterTypes:(Ljava/lang/reflect/Constructor;)Ljava/util/List;
       5: areturn
}
