Compiled from "ReflectionUtils.java"
public class org.springframework.data.util.ReflectionUtils$AnnotationFieldFilter implements org.springframework.data.util.ReflectionUtils$DescribedFieldFilter {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  public org.springframework.data.util.ReflectionUtils$AnnotationFieldFilter(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Annotation type must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field annotationType:Ljava/lang/Class;
      15: return

  public boolean matches(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field annotationType:Ljava/lang/Class;
       5: invokestatic  #5                  // Method org/springframework/core/annotation/AnnotationUtils.getAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public java.lang.String getDescription();
    Code:
       0: ldc           #6                  // String Annotation filter for %s
       2: iconst_1
       3: anewarray     #7                  // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #4                  // Field annotationType:Ljava/lang/Class;
      12: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      15: aastore
      16: invokestatic  #9                  // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      19: areturn
}
