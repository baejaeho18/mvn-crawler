Compiled from "ReturnedType.java"
final class org.springframework.data.repository.query.ReturnedType$ReturnedClass extends org.springframework.data.repository.query.ReturnedType {
  private static final java.util.Set<java.lang.Class<?>> VOID_TYPES;

  private final java.lang.Class<?> type;

  private final java.util.List<java.lang.String> inputProperties;

  public org.springframework.data.repository.query.ReturnedType$ReturnedClass(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: invokespecial #1                  // Method org/springframework/data/repository/query/ReturnedType."<init>":(Ljava/lang/Class;Lorg/springframework/data/repository/query/ReturnedType$1;)V
       6: aload_1
       7: ldc           #2                  // String Returned type must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #4                  // String Domain type must not be null!
      15: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_1
      19: invokevirtual #5                  // Method java/lang/Class.isInterface:()Z
      22: ifne          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ldc           #6                  // String Returned type must not be an interface!
      32: invokestatic  #7                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      35: aload_0
      36: aload_1
      37: putfield      #8                  // Field type:Ljava/lang/Class;
      40: aload_0
      41: aload_0
      42: aload_1
      43: invokespecial #9                  // Method detectConstructorParameterNames:(Ljava/lang/Class;)Ljava/util/List;
      46: putfield      #10                 // Field inputProperties:Ljava/util/List;
      49: return

  public java.lang.Class<?> getReturnedType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:Ljava/lang/Class;
       4: areturn

  public java.lang.Class<?> getTypeToRead();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:Ljava/lang/Class;
       4: areturn

  public boolean isProjecting();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isDto:()Z
       4: ireturn

  public boolean needsCustomConstruction();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isDto:()Z
       4: ifeq          23
       7: aload_0
       8: getfield      #10                 // Field inputProperties:Ljava/util/List;
      11: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.util.List<java.lang.String> getInputProperties();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputProperties:Ljava/util/List;
       4: areturn

  private java.util.List<java.lang.String> detectConstructorParameterNames(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #11                 // Method isDto:()Z
       4: ifne          11
       7: invokestatic  #13                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      10: areturn
      11: new           #14                 // class org/springframework/data/mapping/model/PreferredConstructorDiscoverer
      14: dup
      15: aload_1
      16: invokespecial #15                 // Method org/springframework/data/mapping/model/PreferredConstructorDiscoverer."<init>":(Ljava/lang/Class;)V
      19: astore_2
      20: aload_2
      21: invokevirtual #16                 // Method org/springframework/data/mapping/model/PreferredConstructorDiscoverer.getConstructor:()Lorg/springframework/data/mapping/PreferredConstructor;
      24: astore_3
      25: aload_3
      26: ifnonnull     33
      29: invokestatic  #13                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      32: areturn
      33: new           #17                 // class java/util/ArrayList
      36: dup
      37: invokespecial #18                 // Method java/util/ArrayList."<init>":()V
      40: astore        4
      42: aload_3
      43: invokevirtual #19                 // Method org/springframework/data/mapping/PreferredConstructor.getParameters:()Ljava/lang/Iterable;
      46: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      51: astore        5
      53: aload         5
      55: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      60: ifeq          91
      63: aload         5
      65: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      70: checkcast     #23                 // class org/springframework/data/mapping/PreferredConstructor$Parameter
      73: astore        6
      75: aload         4
      77: aload         6
      79: invokevirtual #24                 // Method org/springframework/data/mapping/PreferredConstructor$Parameter.getName:()Ljava/lang/String;
      82: invokeinterface #25,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      87: pop
      88: goto          53
      91: aload         4
      93: areturn

  private boolean isDto();
    Code:
       0: ldc           #26                 // class java/lang/Object
       2: aload_0
       3: getfield      #8                  // Field type:Ljava/lang/Class;
       6: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifne          85
      12: aload_0
      13: getfield      #8                  // Field type:Ljava/lang/Class;
      16: invokevirtual #28                 // Method java/lang/Class.isEnum:()Z
      19: ifne          85
      22: aload_0
      23: invokespecial #29                 // Method isDomainSubtype:()Z
      26: ifne          85
      29: aload_0
      30: invokespecial #30                 // Method isPrimitiveOrWrapper:()Z
      33: ifne          85
      36: ldc           #31                 // class java/lang/Number
      38: aload_0
      39: getfield      #8                  // Field type:Ljava/lang/Class;
      42: invokevirtual #32                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      45: ifne          85
      48: getstatic     #33                 // Field VOID_TYPES:Ljava/util/Set;
      51: aload_0
      52: getfield      #8                  // Field type:Ljava/lang/Class;
      55: invokeinterface #34,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      60: ifne          85
      63: aload_0
      64: getfield      #8                  // Field type:Ljava/lang/Class;
      67: invokevirtual #35                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      70: invokevirtual #36                 // Method java/lang/Package.getName:()Ljava/lang/String;
      73: ldc           #37                 // String java.
      75: invokevirtual #38                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      78: ifne          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: ireturn

  private boolean isDomainSubtype();
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method getDomainType:()Ljava/lang/Class;
       4: aload_0
       5: getfield      #8                  // Field type:Ljava/lang/Class;
       8: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      11: ifeq          32
      14: aload_0
      15: invokevirtual #39                 // Method getDomainType:()Ljava/lang/Class;
      18: aload_0
      19: getfield      #8                  // Field type:Ljava/lang/Class;
      22: invokevirtual #32                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private boolean isPrimitiveOrWrapper();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:Ljava/lang/Class;
       4: invokestatic  #40                 // Method org/springframework/util/ClassUtils.isPrimitiveOrWrapper:(Ljava/lang/Class;)Z
       7: ireturn

  static {};
    Code:
       0: new           #41                 // class java/util/HashSet
       3: dup
       4: iconst_2
       5: anewarray     #42                 // class java/lang/Class
       8: dup
       9: iconst_0
      10: ldc           #43                 // class java/lang/Void
      12: aastore
      13: dup
      14: iconst_1
      15: getstatic     #44                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      18: aastore
      19: invokestatic  #45                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: invokespecial #46                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: putstatic     #33                 // Field VOID_TYPES:Ljava/util/Set;
      28: return
}
