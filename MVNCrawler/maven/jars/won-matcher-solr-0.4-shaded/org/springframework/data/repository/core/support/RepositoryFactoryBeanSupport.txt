Compiled from "RepositoryFactoryBeanSupport.java"
public abstract class org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport<T extends org.springframework.data.repository.Repository<S, ID>, S, ID extends java.io.Serializable> implements org.springframework.beans.factory.InitializingBean, org.springframework.data.repository.core.support.RepositoryFactoryInformation<S, ID>, org.springframework.beans.factory.FactoryBean<T>, org.springframework.beans.factory.BeanClassLoaderAware, org.springframework.beans.factory.BeanFactoryAware, org.springframework.context.ApplicationEventPublisherAware {
  private final java.lang.Class<? extends T> repositoryInterface;

  private org.springframework.data.repository.core.support.RepositoryFactorySupport factory;

  private org.springframework.data.repository.query.QueryLookupStrategy$Key queryLookupStrategyKey;

  private java.lang.Class<?> repositoryBaseClass;

  private java.lang.Object customImplementation;

  private org.springframework.data.repository.core.NamedQueries namedQueries;

  private org.springframework.data.mapping.context.MappingContext<?, ?> mappingContext;

  private java.lang.ClassLoader classLoader;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private boolean lazyInit;

  private org.springframework.data.repository.query.EvaluationContextProvider evaluationContextProvider;

  private org.springframework.context.ApplicationEventPublisher publisher;

  private T repository;

  private org.springframework.data.repository.core.RepositoryMetadata repositoryMetadata;

  protected org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport(java.lang.Class<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field lazyInit:Z
       9: aload_0
      10: getstatic     #3                  // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
      13: putfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      16: aload_1
      17: ldc           #5                  // String Repository interface must not be null!
      19: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field repositoryInterface:Ljava/lang/Class;
      27: return

  public void setRepositoryBaseClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field repositoryBaseClass:Ljava/lang/Class;
       5: return

  public void setQueryLookupStrategyKey(org.springframework.data.repository.query.QueryLookupStrategy$Key);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
       5: return

  public void setCustomImplementation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field customImplementation:Ljava/lang/Object;
       5: return

  public void setNamedQueries(org.springframework.data.repository.core.NamedQueries);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
       5: return

  protected void setMappingContext(org.springframework.data.mapping.context.MappingContext<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field mappingContext:Lorg/springframework/data/mapping/context/MappingContext;
       5: return

  public void setEvaluationContextProvider(org.springframework.data.repository.query.EvaluationContextProvider);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     11
       5: getstatic     #3                  // Field org/springframework/data/repository/query/DefaultEvaluationContextProvider.INSTANCE:Lorg/springframework/data/repository/query/DefaultEvaluationContextProvider;
       8: goto          12
      11: aload_1
      12: putfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      15: return

  public void setLazyInit(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field lazyInit:Z
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public org.springframework.data.repository.core.EntityInformation<S, ID> getEntityInformation();
    Code:
       0: aload_0
       1: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #17                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
       8: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      13: invokevirtual #19                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getEntityInformation:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/EntityInformation;
      16: areturn

  public org.springframework.data.repository.core.RepositoryInformation getRepositoryInformation();
    Code:
       0: aload_0
       1: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: aload_0
       5: getfield      #17                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
       8: aload_0
       9: getfield      #10                 // Field customImplementation:Ljava/lang/Object;
      12: ifnonnull     19
      15: aconst_null
      16: goto          26
      19: aload_0
      20: getfield      #10                 // Field customImplementation:Ljava/lang/Object;
      23: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      26: invokevirtual #21                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryInformation:(Lorg/springframework/data/repository/core/RepositoryMetadata;Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryInformation;
      29: areturn

  public org.springframework.data.mapping.PersistentEntity<?, ?> getPersistentEntity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mappingContext:Lorg/springframework/data/mapping/context/MappingContext;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #12                 // Field mappingContext:Lorg/springframework/data/mapping/context/MappingContext;
      13: aload_0
      14: getfield      #17                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
      17: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      22: invokeinterface #22,  2           // InterfaceMethod org/springframework/data/mapping/context/MappingContext.getPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/PersistentEntity;
      27: areturn

  public java.util.List<org.springframework.data.repository.query.QueryMethod> getQueryMethods();
    Code:
       0: aload_0
       1: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: invokevirtual #23                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryMethods:()Ljava/util/List;
       7: areturn

  public T getObject();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method initAndReturn:()Lorg/springframework/data/repository/Repository;
       4: areturn

  public java.lang.Class<? extends T> getObjectType();
    Code:
       0: aload_0
       1: getfield      #7                  // Field repositoryInterface:Ljava/lang/Class;
       4: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #25                 // Method createRepositoryFactory:()Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       5: putfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       8: aload_0
       9: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      12: aload_0
      13: getfield      #9                  // Field queryLookupStrategyKey:Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      16: invokevirtual #26                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setQueryLookupStrategyKey:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;)V
      19: aload_0
      20: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      23: aload_0
      24: getfield      #11                 // Field namedQueries:Lorg/springframework/data/repository/core/NamedQueries;
      27: invokevirtual #27                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setNamedQueries:(Lorg/springframework/data/repository/core/NamedQueries;)V
      30: aload_0
      31: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      34: aload_0
      35: getfield      #4                  // Field evaluationContextProvider:Lorg/springframework/data/repository/query/EvaluationContextProvider;
      38: invokevirtual #28                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setEvaluationContextProvider:(Lorg/springframework/data/repository/query/EvaluationContextProvider;)V
      41: aload_0
      42: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      45: aload_0
      46: getfield      #8                  // Field repositoryBaseClass:Ljava/lang/Class;
      49: invokevirtual #29                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setRepositoryBaseClass:(Ljava/lang/Class;)V
      52: aload_0
      53: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      56: aload_0
      57: getfield      #13                 // Field classLoader:Ljava/lang/ClassLoader;
      60: invokevirtual #30                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanClassLoader:(Ljava/lang/ClassLoader;)V
      63: aload_0
      64: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      67: aload_0
      68: getfield      #14                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      71: invokevirtual #31                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      74: aload_0
      75: getfield      #15                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      78: ifnull        99
      81: aload_0
      82: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      85: new           #32                 // class org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor
      88: dup
      89: aload_0
      90: getfield      #15                 // Field publisher:Lorg/springframework/context/ApplicationEventPublisher;
      93: invokespecial #33                 // Method org/springframework/data/repository/core/support/EventPublishingRepositoryProxyPostProcessor."<init>":(Lorg/springframework/context/ApplicationEventPublisher;)V
      96: invokevirtual #34                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.addRepositoryProxyPostProcessor:(Lorg/springframework/data/repository/core/support/RepositoryProxyPostProcessor;)V
      99: aload_0
     100: aload_0
     101: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
     104: aload_0
     105: getfield      #7                  // Field repositoryInterface:Ljava/lang/Class;
     108: invokevirtual #35                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepositoryMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
     111: putfield      #17                 // Field repositoryMetadata:Lorg/springframework/data/repository/core/RepositoryMetadata;
     114: aload_0
     115: getfield      #2                  // Field lazyInit:Z
     118: ifne          126
     121: aload_0
     122: invokespecial #24                 // Method initAndReturn:()Lorg/springframework/data/repository/Repository;
     125: pop
     126: return

  private T initAndReturn();
    Code:
       0: aload_0
       1: getfield      #7                  // Field repositoryInterface:Ljava/lang/Class;
       4: ldc           #36                 // String Repository interface must not be null on initialization!
       6: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #37                 // Field repository:Lorg/springframework/data/repository/Repository;
      13: ifnonnull     38
      16: aload_0
      17: aload_0
      18: getfield      #16                 // Field factory:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
      21: aload_0
      22: getfield      #7                  // Field repositoryInterface:Ljava/lang/Class;
      25: aload_0
      26: getfield      #10                 // Field customImplementation:Ljava/lang/Object;
      29: invokevirtual #38                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getRepository:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #39                 // class org/springframework/data/repository/Repository
      35: putfield      #37                 // Field repository:Lorg/springframework/data/repository/Repository;
      38: aload_0
      39: getfield      #37                 // Field repository:Lorg/springframework/data/repository/Repository;
      42: areturn

  protected abstract org.springframework.data.repository.core.support.RepositoryFactorySupport createRepositoryFactory();

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method getObject:()Lorg/springframework/data/repository/Repository;
       4: areturn
}
