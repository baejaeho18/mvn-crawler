Compiled from "RepositoryFactorySupport.java"
public class org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor implements org.aopalliance.intercept.MethodInterceptor {
  private final java.util.Map<java.lang.reflect.Method, org.springframework.data.repository.query.RepositoryQuery> queries;

  private final java.lang.Object customImplementation;

  private final org.springframework.data.repository.core.RepositoryInformation repositoryInformation;

  private final org.springframework.data.repository.core.support.QueryExecutionResultHandler resultHandler;

  private final java.lang.Object target;

  final org.springframework.data.repository.core.support.RepositoryFactorySupport this$0;

  public org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor(org.springframework.data.repository.core.support.RepositoryFactorySupport, org.springframework.data.repository.core.RepositoryInformation, java.lang.Object, java.lang.Object, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #5                  // Field queries:Ljava/util/Map;
      20: aload_2
      21: ldc           #6                  // String RepositoryInformation must not be null!
      23: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload         4
      28: ldc           #8                  // String Target must not be null!
      30: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: new           #9                  // class org/springframework/data/repository/core/support/QueryExecutionResultHandler
      37: dup
      38: invokespecial #10                 // Method org/springframework/data/repository/core/support/QueryExecutionResultHandler."<init>":()V
      41: putfield      #11                 // Field resultHandler:Lorg/springframework/data/repository/core/support/QueryExecutionResultHandler;
      44: aload_0
      45: aload_2
      46: putfield      #12                 // Field repositoryInformation:Lorg/springframework/data/repository/core/RepositoryInformation;
      49: aload_0
      50: aload_3
      51: putfield      #13                 // Field customImplementation:Ljava/lang/Object;
      54: aload_0
      55: aload         4
      57: putfield      #14                 // Field target:Ljava/lang/Object;
      60: aload_1
      61: aload_1
      62: invokestatic  #15                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$100:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      65: aload_1
      66: invokestatic  #16                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$200:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/query/EvaluationContextProvider;
      69: invokevirtual #17                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryLookupStrategy:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;Lorg/springframework/data/repository/query/EvaluationContextProvider;)Lorg/springframework/data/repository/query/QueryLookupStrategy;
      72: astore        6
      74: aload         6
      76: ifnonnull     90
      79: aload_1
      80: aload_1
      81: invokestatic  #15                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$100:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;
      84: invokevirtual #18                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.getQueryLookupStrategy:(Lorg/springframework/data/repository/query/QueryLookupStrategy$Key;)Lorg/springframework/data/repository/query/QueryLookupStrategy;
      87: goto          92
      90: aload         6
      92: astore        6
      94: aload_2
      95: invokeinterface #19,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getQueryMethods:()Ljava/lang/Iterable;
     100: astore        7
     102: aload         6
     104: ifnonnull     133
     107: aload         7
     109: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     114: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          132
     122: new           #22                 // class java/lang/IllegalStateException
     125: dup
     126: ldc           #23                 // String You have defined query method in the repository but you don\'t have any query lookup strategy defined. The infrastructure apparently does not support query methods!
     128: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: return
     133: aload         7
     135: invokeinterface #20,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     140: astore        8
     142: aload         8
     144: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     149: ifeq          205
     152: aload         8
     154: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     159: checkcast     #26                 // class java/lang/reflect/Method
     162: astore        9
     164: aload         6
     166: aload         9
     168: aload_2
     169: aload         5
     171: aload_1
     172: invokestatic  #27                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$300:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Lorg/springframework/data/repository/core/NamedQueries;
     175: invokeinterface #28,  5           // InterfaceMethod org/springframework/data/repository/query/QueryLookupStrategy.resolveQuery:(Ljava/lang/reflect/Method;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/repository/core/NamedQueries;)Lorg/springframework/data/repository/query/RepositoryQuery;
     180: astore        10
     182: aload_0
     183: aload         10
     185: invokespecial #29                 // Method invokeListeners:(Lorg/springframework/data/repository/query/RepositoryQuery;)V
     188: aload_0
     189: getfield      #5                  // Field queries:Ljava/util/Map;
     192: aload         9
     194: aload         10
     196: invokeinterface #30,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     201: pop
     202: goto          142
     205: return

  private void invokeListeners(org.springframework.data.repository.query.RepositoryQuery);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;
       4: invokestatic  #31                 // Method org/springframework/data/repository/core/support/RepositoryFactorySupport.access$400:(Lorg/springframework/data/repository/core/support/RepositoryFactorySupport;)Ljava/util/List;
       7: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          70
      22: aload_2
      23: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #33                 // class org/springframework/data/repository/core/support/QueryCreationListener
      31: astore_3
      32: aload_3
      33: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      36: ldc           #33                 // class org/springframework/data/repository/core/support/QueryCreationListener
      38: invokestatic  #35                 // Method org/springframework/core/GenericTypeResolver.resolveTypeArgument:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Class;
      41: astore        4
      43: aload         4
      45: ifnull        67
      48: aload         4
      50: aload_1
      51: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: invokevirtual #36                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      57: ifeq          67
      60: aload_3
      61: aload_1
      62: invokeinterface #37,  2           // InterfaceMethod org/springframework/data/repository/core/support/QueryCreationListener.onCreation:(Lorg/springframework/data/repository/query/RepositoryQuery;)V
      67: goto          13
      70: return

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #38                 // Method doInvoke:(Lorg/aopalliance/intercept/MethodInvocation;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #11                 // Field resultHandler:Lorg/springframework/data/repository/core/support/QueryExecutionResultHandler;
      10: aload_2
      11: aload_1
      12: invokeinterface #39,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      17: invokevirtual #40                 // Method org/springframework/data/repository/core/support/QueryExecutionResultHandler.postProcessInvocationResult:(Ljava/lang/Object;Ljava/lang/reflect/Method;)Ljava/lang/Object;
      20: areturn

  private java.lang.Object doInvoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
       6: astore_2
       7: aload_1
       8: invokeinterface #41,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getArguments:()[Ljava/lang/Object;
      13: astore_3
      14: aload_0
      15: aload_1
      16: invokespecial #42                 // Method isCustomMethodInvocation:(Lorg/aopalliance/intercept/MethodInvocation;)Z
      19: ifeq          46
      22: aload_0
      23: getfield      #12                 // Field repositoryInformation:Lorg/springframework/data/repository/core/RepositoryInformation;
      26: aload_2
      27: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getTargetClassMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      32: astore        4
      34: aload_0
      35: aload_0
      36: getfield      #13                 // Field customImplementation:Ljava/lang/Object;
      39: aload         4
      41: aload_3
      42: invokespecial #44                 // Method executeMethodOn:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn
      46: aload_0
      47: aload_2
      48: invokespecial #45                 // Method hasQueryFor:(Ljava/lang/reflect/Method;)Z
      51: ifeq          74
      54: aload_0
      55: getfield      #5                  // Field queries:Ljava/util/Map;
      58: aload_2
      59: invokeinterface #46,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #47                 // class org/springframework/data/repository/query/RepositoryQuery
      67: aload_3
      68: invokeinterface #48,  2           // InterfaceMethod org/springframework/data/repository/query/RepositoryQuery.execute:([Ljava/lang/Object;)Ljava/lang/Object;
      73: areturn
      74: aload_0
      75: getfield      #12                 // Field repositoryInformation:Lorg/springframework/data/repository/core/RepositoryInformation;
      78: aload_2
      79: invokeinterface #43,  2           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.getTargetClassMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      84: astore        4
      86: aload_0
      87: aload_0
      88: getfield      #14                 // Field target:Ljava/lang/Object;
      91: aload         4
      93: aload_3
      94: invokespecial #44                 // Method executeMethodOn:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;
      97: areturn

  private java.lang.Object executeMethodOn(java.lang.Object, java.lang.reflect.Method, java.lang.Object[]) throws java.lang.Throwable;
    Code:
       0: aload_2
       1: aload_1
       2: aload_3
       3: invokevirtual #49                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn
       7: astore        4
       9: aload         4
      11: invokestatic  #51                 // Method org/springframework/data/repository/util/ClassUtils.unwrapReflectionException:(Ljava/lang/Exception;)V
      14: new           #22                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #52                 // String Should not occur!
      20: invokespecial #24                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Exception

  private boolean hasQueryFor(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queries:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #53,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  private boolean isCustomMethodInvocation(org.aopalliance.intercept.MethodInvocation);
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #13                 // Field customImplementation:Ljava/lang/Object;
       5: if_acmpne     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: getfield      #12                 // Field repositoryInformation:Lorg/springframework/data/repository/core/RepositoryInformation;
      14: aload_1
      15: invokeinterface #39,  1           // InterfaceMethod org/aopalliance/intercept/MethodInvocation.getMethod:()Ljava/lang/reflect/Method;
      20: invokeinterface #54,  2           // InterfaceMethod org/springframework/data/repository/core/RepositoryInformation.isCustomMethod:(Ljava/lang/reflect/Method;)Z
      25: ireturn
}
