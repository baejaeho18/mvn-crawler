Compiled from "Function.java"
public class org.springframework.data.repository.query.spi.Function {
  private final java.lang.reflect.Method method;

  private final java.lang.Object target;

  public org.springframework.data.repository.query.spi.Function(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/reflect/Method;Ljava/lang/Object;)V
       6: aload_1
       7: invokevirtual #2                  // Method java/lang/reflect/Method.getModifiers:()I
      10: invokestatic  #3                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
      13: ldc           #4                  // String Method must be static!
      15: invokestatic  #5                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      18: return

  public org.springframework.data.repository.query.spi.Function(java.lang.reflect.Method, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #7                  // String Method must not be null!
       7: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ifnonnull     24
      14: aload_1
      15: invokevirtual #2                  // Method java/lang/reflect/Method.getModifiers:()I
      18: invokestatic  #3                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #9                  // String Method must either be static or a non-static one with a target object!
      31: invokestatic  #5                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_0
      35: aload_1
      36: putfield      #10                 // Field method:Ljava/lang/reflect/Method;
      39: aload_0
      40: aload_2
      41: putfield      #11                 // Field target:Ljava/lang/Object;
      44: return

  public java.lang.Object invoke(java.lang.Object[]) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: aload_0
       5: getfield      #11                 // Field target:Ljava/lang/Object;
       8: aload_1
       9: invokevirtual #12                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #13                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       7: areturn

  public java.lang.Class<?> getDeclaringClass();
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #14                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       7: areturn

  public boolean supports(java.util.List<org.springframework.core.convert.TypeDescriptor>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #15                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       7: astore_2
       8: aload_2
       9: arraylength
      10: aload_1
      11: invokeinterface #16,  1           // InterfaceMethod java/util/List.size:()I
      16: if_icmpeq     21
      19: iconst_0
      20: ireturn
      21: iconst_0
      22: istore_3
      23: iload_3
      24: aload_2
      25: arraylength
      26: if_icmpge     59
      29: aload_2
      30: iload_3
      31: aaload
      32: aload_1
      33: iload_3
      34: invokeinterface #17,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      39: checkcast     #18                 // class org/springframework/core/convert/TypeDescriptor
      42: invokevirtual #19                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
      45: invokestatic  #20                 // Method org/springframework/util/TypeUtils.isAssignable:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      48: ifne          53
      51: iconst_0
      52: ireturn
      53: iinc          3, 1
      56: goto          23
      59: iconst_1
      60: ireturn
}
