Compiled from "PartTree.java"
class org.springframework.data.repository.query.parser.PartTree$Predicate {
  private static final java.util.regex.Pattern ALL_IGNORE_CASE;

  private static final java.lang.String ORDER_BY;

  private final java.util.List<org.springframework.data.repository.query.parser.PartTree$OrPart> nodes;

  private final org.springframework.data.repository.query.parser.OrderBySource orderBySource;

  private boolean alwaysIgnoreCase;

  public org.springframework.data.repository.query.parser.PartTree$Predicate(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #1                  // Field nodes:Ljava/util/List;
      15: aload_0
      16: aload_1
      17: invokespecial #5                  // Method detectAndSetAllIgnoreCase:(Ljava/lang/String;)Ljava/lang/String;
      20: ldc           #7                  // String OrderBy
      22: invokestatic  #8                  // Method org/springframework/data/repository/query/parser/PartTree.access$100:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      25: astore_3
      26: aload_3
      27: arraylength
      28: iconst_2
      29: if_icmple     42
      32: new           #9                  // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #10                 // String OrderBy must not be used more than once in a method name!
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_3
      44: iconst_0
      45: aaload
      46: aload_2
      47: invokespecial #12                 // Method buildTree:(Ljava/lang/String;Ljava/lang/Class;)V
      50: aload_0
      51: aload_3
      52: arraylength
      53: iconst_2
      54: if_icmpne     71
      57: new           #13                 // class org/springframework/data/repository/query/parser/OrderBySource
      60: dup
      61: aload_3
      62: iconst_1
      63: aaload
      64: aload_2
      65: invokespecial #14                 // Method org/springframework/data/repository/query/parser/OrderBySource."<init>":(Ljava/lang/String;Ljava/lang/Class;)V
      68: goto          72
      71: aconst_null
      72: putfield      #15                 // Field orderBySource:Lorg/springframework/data/repository/query/parser/OrderBySource;
      75: return

  private java.lang.String detectAndSetAllIgnoreCase(java.lang.String);
    Code:
       0: getstatic     #16                 // Field ALL_IGNORE_CASE:Ljava/util/regex/Pattern;
       3: aload_1
       4: invokevirtual #17                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       7: astore_2
       8: aload_2
       9: invokevirtual #18                 // Method java/util/regex/Matcher.find:()Z
      12: ifeq          58
      15: aload_0
      16: iconst_1
      17: putfield      #19                 // Field alwaysIgnoreCase:Z
      20: new           #20                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: iconst_0
      29: aload_2
      30: invokevirtual #22                 // Method java/util/regex/Matcher.start:()I
      33: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      36: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: aload_2
      41: invokevirtual #25                 // Method java/util/regex/Matcher.end:()I
      44: aload_1
      45: invokevirtual #26                 // Method java/lang/String.length:()I
      48: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      51: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: astore_1
      58: aload_1
      59: areturn

  private void buildTree(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #28                 // String Or
       3: invokestatic  #8                  // Method org/springframework/data/repository/query/parser/PartTree.access$100:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: astore        4
      10: aload         4
      12: arraylength
      13: istore        5
      15: iconst_0
      16: istore        6
      18: iload         6
      20: iload         5
      22: if_icmpge     62
      25: aload         4
      27: iload         6
      29: aaload
      30: astore        7
      32: aload_0
      33: getfield      #1                  // Field nodes:Ljava/util/List;
      36: new           #29                 // class org/springframework/data/repository/query/parser/PartTree$OrPart
      39: dup
      40: aload         7
      42: aload_2
      43: aload_0
      44: getfield      #19                 // Field alwaysIgnoreCase:Z
      47: invokespecial #30                 // Method org/springframework/data/repository/query/parser/PartTree$OrPart."<init>":(Ljava/lang/String;Ljava/lang/Class;Z)V
      50: invokeinterface #31,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      55: pop
      56: iinc          6, 1
      59: goto          18
      62: return

  public java.util.Iterator<org.springframework.data.repository.query.parser.PartTree$OrPart> iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/List;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  public org.springframework.data.repository.query.parser.OrderBySource getOrderBySource();
    Code:
       0: aload_0
       1: getfield      #15                 // Field orderBySource:Lorg/springframework/data/repository/query/parser/OrderBySource;
       4: areturn

  static java.util.List access$000(org.springframework.data.repository.query.parser.PartTree$Predicate);
    Code:
       0: aload_0
       1: getfield      #1                  // Field nodes:Ljava/util/List;
       4: areturn

  static {};
    Code:
       0: ldc           #33                 // String AllIgnor(ing|e)Case
       2: invokestatic  #34                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #16                 // Field ALL_IGNORE_CASE:Ljava/util/regex/Pattern;
       8: return
}
