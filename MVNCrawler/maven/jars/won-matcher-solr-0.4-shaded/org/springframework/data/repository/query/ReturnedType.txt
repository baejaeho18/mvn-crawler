Compiled from "ReturnedType.java"
public abstract class org.springframework.data.repository.query.ReturnedType {
  private final java.lang.Class<?> domainType;

  static org.springframework.data.repository.query.ReturnedType of(java.lang.Class<?>, java.lang.Class<?>, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_0
       1: ldc           #2                  // String Returned type must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #4                  // String Domain type must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_2
      13: ldc           #5                  // String ProjectionFactory must not be null!
      15: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      18: aload_0
      19: invokevirtual #6                  // Method java/lang/Class.isInterface:()Z
      22: ifeq          43
      25: new           #7                  // class org/springframework/data/repository/query/ReturnedType$ReturnedInterface
      28: dup
      29: aload_2
      30: aload_0
      31: invokeinterface #8,  2            // InterfaceMethod org/springframework/data/projection/ProjectionFactory.getProjectionInformation:(Ljava/lang/Class;)Lorg/springframework/data/projection/ProjectionInformation;
      36: aload_1
      37: invokespecial #9                  // Method org/springframework/data/repository/query/ReturnedType$ReturnedInterface."<init>":(Lorg/springframework/data/projection/ProjectionInformation;Ljava/lang/Class;)V
      40: goto          52
      43: new           #10                 // class org/springframework/data/repository/query/ReturnedType$ReturnedClass
      46: dup
      47: aload_0
      48: aload_1
      49: invokespecial #11                 // Method org/springframework/data/repository/query/ReturnedType$ReturnedClass."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      52: areturn

  public final java.lang.Class<?> getDomainType();
    Code:
       0: aload_0
       1: getfield      #12                 // Field domainType:Ljava/lang/Class;
       4: areturn

  public final boolean isInstance(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getReturnedType:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #14                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       8: ireturn

  public abstract boolean isProjecting();

  public abstract java.lang.Class<?> getReturnedType();

  public abstract boolean needsCustomConstruction();

  public abstract java.lang.Class<?> getTypeToRead();

  public abstract java.util.List<java.lang.String> getInputProperties();

  private org.springframework.data.repository.query.ReturnedType(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #16                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #17                 // String domainType is marked @NonNull but is null
      14: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #12                 // Field domainType:Ljava/lang/Class;
      23: return

  org.springframework.data.repository.query.ReturnedType(java.lang.Class, org.springframework.data.repository.query.ReturnedType$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/Class;)V
       5: return
}
