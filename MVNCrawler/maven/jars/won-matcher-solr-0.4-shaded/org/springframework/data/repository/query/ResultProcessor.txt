Compiled from "ResultProcessor.java"
public class org.springframework.data.repository.query.ResultProcessor {
  private final org.springframework.data.repository.query.QueryMethod method;

  private final org.springframework.data.repository.query.ResultProcessor$ProjectingConverter converter;

  private final org.springframework.data.projection.ProjectionFactory factory;

  private org.springframework.data.repository.query.ReturnedType type;

  org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.projection.ProjectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_1
       4: invokevirtual #1                  // Method org/springframework/data/repository/query/QueryMethod.getReturnedObjectType:()Ljava/lang/Class;
       7: invokespecial #2                  // Method "<init>":(Lorg/springframework/data/repository/query/QueryMethod;Lorg/springframework/data/projection/ProjectionFactory;Ljava/lang/Class;)V
      10: return

  private org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.projection.ProjectionFactory, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #4                  // String QueryMethod must not be null!
       7: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #6                  // String ProjectionFactory must not be null!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #7                  // String Type must not be null!
      19: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      27: aload_0
      28: aload_3
      29: aload_1
      30: invokevirtual #9                  // Method org/springframework/data/repository/query/QueryMethod.getDomainClass:()Ljava/lang/Class;
      33: aload_2
      34: invokestatic  #10                 // Method org/springframework/data/repository/query/ReturnedType.of:(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/data/projection/ProjectionFactory;)Lorg/springframework/data/repository/query/ReturnedType;
      37: putfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      40: aload_0
      41: new           #12                 // class org/springframework/data/repository/query/ResultProcessor$ProjectingConverter
      44: dup
      45: aload_0
      46: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      49: aload_2
      50: invokespecial #13                 // Method org/springframework/data/repository/query/ResultProcessor$ProjectingConverter."<init>":(Lorg/springframework/data/repository/query/ReturnedType;Lorg/springframework/data/projection/ProjectionFactory;)V
      53: putfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      56: aload_0
      57: aload_2
      58: putfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      61: return

  public org.springframework.data.repository.query.ResultProcessor withDynamicProjection(org.springframework.data.repository.query.ParameterAccessor);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: aload_1
       7: invokeinterface #16,  1           // InterfaceMethod org/springframework/data/repository/query/ParameterAccessor.getDynamicProjection:()Ljava/lang/Class;
      12: astore_2
      13: aload_2
      14: ifnonnull     21
      17: aload_0
      18: goto          26
      21: aload_0
      22: aload_2
      23: invokespecial #17                 // Method withType:(Ljava/lang/Class;)Lorg/springframework/data/repository/query/ResultProcessor;
      26: areturn

  public org.springframework.data.repository.query.ReturnedType getReturnedType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
       4: areturn

  public <T> T processResult(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field org/springframework/data/repository/query/ResultProcessor$NoOpConverter.INSTANCE:Lorg/springframework/data/repository/query/ResultProcessor$NoOpConverter;
       5: invokevirtual #19                 // Method processResult:(Ljava/lang/Object;Lorg/springframework/core/convert/converter/Converter;)Ljava/lang/Object;
       8: areturn

  public <T> T processResult(java.lang.Object, org.springframework.core.convert.converter.Converter<java.lang.Object, java.lang.Object>);
    Code:
       0: aload_1
       1: ifnull        25
       4: aload_0
       5: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
       8: aload_1
       9: invokevirtual #20                 // Method org/springframework/data/repository/query/ReturnedType.isInstance:(Ljava/lang/Object;)Z
      12: ifne          25
      15: aload_0
      16: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      19: invokevirtual #21                 // Method org/springframework/data/repository/query/ReturnedType.isProjecting:()Z
      22: ifne          27
      25: aload_1
      26: areturn
      27: aload_2
      28: ldc           #22                 // String Preparing converter must not be null!
      30: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_0
      34: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      37: invokevirtual #23                 // Method org/springframework/data/repository/query/ReturnedType.getReturnedType:()Ljava/lang/Class;
      40: aload_2
      41: invokestatic  #24                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.of:(Ljava/lang/Class;Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;
      44: aload_0
      45: getfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      48: invokevirtual #25                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.and:(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/repository/query/ResultProcessor$ChainingConverter;
      51: astore_3
      52: aload_1
      53: instanceof    #26                 // class org/springframework/data/domain/Slice
      56: ifeq          69
      59: aload_0
      60: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      63: invokevirtual #27                 // Method org/springframework/data/repository/query/QueryMethod.isPageQuery:()Z
      66: ifne          79
      69: aload_0
      70: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      73: invokevirtual #28                 // Method org/springframework/data/repository/query/QueryMethod.isSliceQuery:()Z
      76: ifeq          90
      79: aload_1
      80: checkcast     #26                 // class org/springframework/data/domain/Slice
      83: aload_3
      84: invokeinterface #29,  2           // InterfaceMethod org/springframework/data/domain/Slice.map:(Lorg/springframework/core/convert/converter/Converter;)Lorg/springframework/data/domain/Slice;
      89: areturn
      90: aload_1
      91: instanceof    #30                 // class java/util/Collection
      94: ifeq          185
      97: aload_0
      98: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
     101: invokevirtual #31                 // Method org/springframework/data/repository/query/QueryMethod.isCollectionQuery:()Z
     104: ifeq          185
     107: aload_1
     108: checkcast     #30                 // class java/util/Collection
     111: astore        4
     113: aload         4
     115: invokestatic  #32                 // Method createCollectionFor:(Ljava/util/Collection;)Ljava/util/Collection;
     118: astore        5
     120: aload         4
     122: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     127: astore        6
     129: aload         6
     131: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     136: ifeq          182
     139: aload         6
     141: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     146: astore        7
     148: aload         5
     150: aload_0
     151: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
     154: aload         7
     156: invokevirtual #20                 // Method org/springframework/data/repository/query/ReturnedType.isInstance:(Ljava/lang/Object;)Z
     159: ifeq          167
     162: aload         7
     164: goto          173
     167: aload_3
     168: aload         7
     170: invokevirtual #36                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
     173: invokeinterface #37,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     178: pop
     179: goto          129
     182: aload         5
     184: areturn
     185: aload_1
     186: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     189: invokestatic  #39                 // Method org/springframework/data/util/ReflectionUtils.isJava8StreamType:(Ljava/lang/Class;)Z
     192: ifeq          222
     195: aload_0
     196: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
     199: invokevirtual #40                 // Method org/springframework/data/repository/query/QueryMethod.isStreamQuery:()Z
     202: ifeq          222
     205: new           #41                 // class org/springframework/data/repository/query/ResultProcessor$StreamQueryResultHandler
     208: dup
     209: aload_0
     210: getfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
     213: aload_3
     214: invokespecial #42                 // Method org/springframework/data/repository/query/ResultProcessor$StreamQueryResultHandler."<init>":(Lorg/springframework/data/repository/query/ReturnedType;Lorg/springframework/core/convert/converter/Converter;)V
     217: aload_1
     218: invokevirtual #43                 // Method org/springframework/data/repository/query/ResultProcessor$StreamQueryResultHandler.handle:(Ljava/lang/Object;)Ljava/lang/Object;
     221: areturn
     222: aload_3
     223: aload_1
     224: invokevirtual #36                 // Method org/springframework/data/repository/query/ResultProcessor$ChainingConverter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
     227: areturn

  private org.springframework.data.repository.query.ResultProcessor withType(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
       5: invokevirtual #9                  // Method org/springframework/data/repository/query/QueryMethod.getDomainClass:()Ljava/lang/Class;
       8: aload_0
       9: getfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      12: invokestatic  #10                 // Method org/springframework/data/repository/query/ReturnedType.of:(Ljava/lang/Class;Ljava/lang/Class;Lorg/springframework/data/projection/ProjectionFactory;)Lorg/springframework/data/repository/query/ReturnedType;
      15: astore_2
      16: new           #44                 // class org/springframework/data/repository/query/ResultProcessor
      19: dup
      20: aload_0
      21: getfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
      24: aload_0
      25: getfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      28: aload_2
      29: invokevirtual #45                 // Method org/springframework/data/repository/query/ResultProcessor$ProjectingConverter.withType:(Lorg/springframework/data/repository/query/ReturnedType;)Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      32: aload_0
      33: getfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      36: aload_2
      37: invokespecial #46                 // Method "<init>":(Lorg/springframework/data/repository/query/QueryMethod;Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;Lorg/springframework/data/projection/ProjectionFactory;Lorg/springframework/data/repository/query/ReturnedType;)V
      40: areturn

  private static java.util.Collection<java.lang.Object> createCollectionFor(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: aload_0
       5: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.size:()I
      10: invokestatic  #48                 // Method org/springframework/core/CollectionFactory.createCollection:(Ljava/lang/Class;I)Ljava/util/Collection;
      13: areturn
      14: astore_1
      15: aload_0
      16: aload_0
      17: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.size:()I
      22: invokestatic  #50                 // Method org/springframework/core/CollectionFactory.createApproximateCollection:(Ljava/lang/Object;I)Ljava/util/Collection;
      25: areturn
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/RuntimeException

  private org.springframework.data.repository.query.ResultProcessor(org.springframework.data.repository.query.QueryMethod, org.springframework.data.repository.query.ResultProcessor$ProjectingConverter, org.springframework.data.projection.ProjectionFactory, org.springframework.data.repository.query.ReturnedType);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field method:Lorg/springframework/data/repository/query/QueryMethod;
       9: aload_0
      10: aload_2
      11: putfield      #14                 // Field converter:Lorg/springframework/data/repository/query/ResultProcessor$ProjectingConverter;
      14: aload_0
      15: aload_3
      16: putfield      #15                 // Field factory:Lorg/springframework/data/projection/ProjectionFactory;
      19: aload_0
      20: aload         4
      22: putfield      #11                 // Field type:Lorg/springframework/data/repository/query/ReturnedType;
      25: return
}
