Compiled from "DomainClassConverter.java"
public class org.springframework.data.repository.support.DomainClassConverter<T extends org.springframework.core.convert.ConversionService & org.springframework.core.convert.converter.ConverterRegistry> implements org.springframework.core.convert.converter.ConditionalGenericConverter, org.springframework.context.ApplicationContextAware {
  private final T conversionService;

  private org.springframework.data.repository.support.Repositories repositories;

  private org.springframework.data.repository.support.DomainClassConverter<T>.ToEntityConverter toEntityConverter;

  private org.springframework.data.repository.support.DomainClassConverter<T>.ToIdConverter toIdConverter;

  public org.springframework.data.repository.support.DomainClassConverter(T);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #4                  // Field org/springframework/data/repository/support/Repositories.NONE:Lorg/springframework/data/repository/support/Repositories;
       8: putfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      11: aload_1
      12: ldc           #5                  // String ConversionService must not be null!
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: putfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      22: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #7                  // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
       3: dup
       4: ldc           #8                  // class java/lang/Object
       6: ldc           #8                  // class java/lang/Object
       8: invokespecial #9                  // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      11: invokestatic  #10                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      14: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: aload_3
       5: invokevirtual #11                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
       8: invokevirtual #12                 // Method org/springframework/data/repository/support/Repositories.hasRepositoryFor:(Ljava/lang/Class;)Z
      11: ifeq          27
      14: aload_0
      15: getfield      #13                 // Field toEntityConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToEntityConverter;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #14                 // Method org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      24: goto          37
      27: aload_0
      28: getfield      #15                 // Field toIdConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToIdConverter;
      31: aload_1
      32: aload_2
      33: aload_3
      34: invokevirtual #16                 // Method org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      37: areturn

  public boolean matches(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: aload_2
       5: invokevirtual #11                 // Method org/springframework/core/convert/TypeDescriptor.getType:()Ljava/lang/Class;
       8: invokevirtual #12                 // Method org/springframework/data/repository/support/Repositories.hasRepositoryFor:(Ljava/lang/Class;)Z
      11: ifeq          26
      14: aload_0
      15: getfield      #13                 // Field toEntityConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToEntityConverter;
      18: aload_1
      19: aload_2
      20: invokevirtual #17                 // Method org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter.matches:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      23: goto          35
      26: aload_0
      27: getfield      #15                 // Field toIdConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToIdConverter;
      30: aload_1
      31: aload_2
      32: invokevirtual #18                 // Method org/springframework/data/repository/support/DomainClassConverter$ToIdConverter.matches:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      35: ireturn

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: new           #19                 // class org/springframework/data/repository/support/Repositories
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method org/springframework/data/repository/support/Repositories."<init>":(Lorg/springframework/beans/factory/ListableBeanFactory;)V
       9: putfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      12: aload_0
      13: new           #21                 // class org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter
      16: dup
      17: aload_0
      18: aload_0
      19: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      22: aload_0
      23: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: invokespecial #22                 // Method org/springframework/data/repository/support/DomainClassConverter$ToEntityConverter."<init>":(Lorg/springframework/data/repository/support/DomainClassConverter;Lorg/springframework/data/repository/support/Repositories;Lorg/springframework/core/convert/ConversionService;)V
      29: putfield      #13                 // Field toEntityConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToEntityConverter;
      32: aload_0
      33: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      36: checkcast     #23                 // class org/springframework/core/convert/converter/ConverterRegistry
      39: aload_0
      40: getfield      #13                 // Field toEntityConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToEntityConverter;
      43: invokeinterface #24,  2           // InterfaceMethod org/springframework/core/convert/converter/ConverterRegistry.addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      48: aload_0
      49: new           #25                 // class org/springframework/data/repository/support/DomainClassConverter$ToIdConverter
      52: dup
      53: aload_0
      54: invokespecial #26                 // Method org/springframework/data/repository/support/DomainClassConverter$ToIdConverter."<init>":(Lorg/springframework/data/repository/support/DomainClassConverter;)V
      57: putfield      #15                 // Field toIdConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToIdConverter;
      60: aload_0
      61: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      64: checkcast     #23                 // class org/springframework/core/convert/converter/ConverterRegistry
      67: aload_0
      68: getfield      #15                 // Field toIdConverter:Lorg/springframework/data/repository/support/DomainClassConverter$ToIdConverter;
      71: invokeinterface #24,  2           // InterfaceMethod org/springframework/core/convert/converter/ConverterRegistry.addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      76: return

  static org.springframework.data.repository.support.Repositories access$000(org.springframework.data.repository.support.DomainClassConverter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: areturn

  static org.springframework.core.convert.ConversionService access$100(org.springframework.data.repository.support.DomainClassConverter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: areturn
}
