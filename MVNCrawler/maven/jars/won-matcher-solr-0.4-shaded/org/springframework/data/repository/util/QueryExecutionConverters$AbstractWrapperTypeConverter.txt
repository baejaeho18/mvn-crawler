Compiled from "QueryExecutionConverters.java"
abstract class org.springframework.data.repository.util.QueryExecutionConverters$AbstractWrapperTypeConverter implements org.springframework.core.convert.converter.GenericConverter {
  private final org.springframework.core.convert.ConversionService conversionService;

  private final java.lang.Class<?>[] wrapperTypes;

  private final java.lang.Object nullValue;

  protected org.springframework.data.repository.util.QueryExecutionConverters$AbstractWrapperTypeConverter(org.springframework.core.convert.ConversionService, java.lang.Object, java.lang.Class<?>...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String ConversionService must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_3
      11: ldc           #4                  // String Wrapper type must not be empty!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #6                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      21: aload_0
      22: aload_3
      23: putfield      #7                  // Field wrapperTypes:[Ljava/lang/Class;
      26: aload_0
      27: aload_2
      28: putfield      #8                  // Field nullValue:Ljava/lang/Object;
      31: return

  public java.util.Set<org.springframework.core.convert.converter.GenericConverter$ConvertiblePair> getConvertibleTypes();
    Code:
       0: new           #9                  // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #7                  // Field wrapperTypes:[Ljava/lang/Class;
       8: arraylength
       9: invokespecial #10                 // Method java/util/HashSet."<init>":(I)V
      12: astore_1
      13: aload_0
      14: getfield      #7                  // Field wrapperTypes:[Ljava/lang/Class;
      17: astore_2
      18: aload_2
      19: arraylength
      20: istore_3
      21: iconst_0
      22: istore        4
      24: iload         4
      26: iload_3
      27: if_icmpge     60
      30: aload_2
      31: iload         4
      33: aaload
      34: astore        5
      36: aload_1
      37: new           #11                 // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
      40: dup
      41: ldc           #12                 // class org/springframework/data/repository/util/NullableWrapper
      43: aload         5
      45: invokespecial #13                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
      48: invokeinterface #14,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      53: pop
      54: iinc          4, 1
      57: goto          24
      60: aload_1
      61: invokestatic  #15                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      64: areturn

  public final java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: checkcast     #12                 // class org/springframework/data/repository/util/NullableWrapper
       4: astore        4
       6: aload         4
       8: invokevirtual #16                 // Method org/springframework/data/repository/util/NullableWrapper.getValue:()Ljava/lang/Object;
      11: astore        5
      13: aload         5
      15: ifnonnull     25
      18: aload_0
      19: getfield      #8                  // Field nullValue:Ljava/lang/Object;
      22: goto          31
      25: aload_0
      26: aload         5
      28: invokevirtual #17                 // Method wrap:(Ljava/lang/Object;)Ljava/lang/Object;
      31: areturn

  protected abstract java.lang.Object wrap(java.lang.Object);
}
