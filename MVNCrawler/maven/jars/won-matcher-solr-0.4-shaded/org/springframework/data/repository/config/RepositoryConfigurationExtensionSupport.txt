Compiled from "RepositoryConfigurationExtensionSupport.java"
public abstract class org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport implements org.springframework.data.repository.config.RepositoryConfigurationExtension {
  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String CLASS_LOADING_ERROR;

  private static final java.lang.String MULTI_STORE_DROPPED;

  public org.springframework.data.repository.config.RepositoryConfigurationExtensionSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getModuleName();
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method getModulePrefix:()Ljava/lang/String;
       4: invokestatic  #4                  // Method org/springframework/util/StringUtils.capitalize:(Ljava/lang/String;)Ljava/lang/String;
       7: areturn

  public <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> java.util.Collection<org.springframework.data.repository.config.RepositoryConfiguration<T>> getRepositoryConfigurations(T, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokevirtual #5                  // Method getRepositoryConfigurations:(Lorg/springframework/data/repository/config/RepositoryConfigurationSource;Lorg/springframework/core/io/ResourceLoader;Z)Ljava/util/Collection;
       7: areturn

  public <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> java.util.Collection<org.springframework.data.repository.config.RepositoryConfiguration<T>> getRepositoryConfigurations(T, org.springframework.core.io.ResourceLoader, boolean);
    Code:
       0: aload_1
       1: ldc           #6                  // String ConfigSource must not be null!
       3: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #8                  // String Loader must not be null!
       9: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #9                  // class java/util/HashSet
      15: dup
      16: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      19: astore        4
      21: aload_1
      22: aload_2
      23: invokeinterface #11,  2           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.getCandidates:(Lorg/springframework/core/io/ResourceLoader;)Ljava/util/Collection;
      28: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: astore        5
      35: aload         5
      37: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          128
      45: aload         5
      47: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #15                 // class org/springframework/beans/factory/config/BeanDefinition
      55: astore        6
      57: aload_0
      58: aload         6
      60: aload_1
      61: invokevirtual #16                 // Method getRepositoryConfiguration:(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/data/repository/config/RepositoryConfigurationSource;)Lorg/springframework/data/repository/config/RepositoryConfiguration;
      64: astore        7
      66: iload_3
      67: ifeq          79
      70: aload_1
      71: invokeinterface #17,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfigurationSource.usesExplicitFilters:()Z
      76: ifeq          92
      79: aload         4
      81: aload         7
      83: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          35
      92: aload_0
      93: aload         7
      95: aload_2
      96: invokespecial #19                 // Method loadRepositoryInterface:(Lorg/springframework/data/repository/config/RepositoryConfiguration;Lorg/springframework/core/io/ResourceLoader;)Ljava/lang/Class;
      99: astore        8
     101: aload         8
     103: ifnull        115
     106: aload_0
     107: aload         8
     109: invokevirtual #20                 // Method isStrictRepositoryCandidate:(Ljava/lang/Class;)Z
     112: ifeq          125
     115: aload         4
     117: aload         7
     119: invokeinterface #18,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: goto          35
     128: aload         4
     130: areturn

  public java.lang.String getDefaultNamedQueryLocation();
    Code:
       0: ldc           #21                 // String classpath*:META-INF/%s-named-queries.properties
       2: iconst_1
       3: anewarray     #22                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #3                  // Method getModulePrefix:()Ljava/lang/String;
      12: aastore
      13: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      16: areturn

  public void registerBeansForRoot(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.data.repository.config.RepositoryConfigurationSource);
    Code:
       0: return

  protected abstract java.lang.String getModulePrefix();

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.RepositoryConfigurationSource);
    Code:
       0: return

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.AnnotationRepositoryConfigurationSource);
    Code:
       0: return

  public void postProcess(org.springframework.beans.factory.support.BeanDefinitionBuilder, org.springframework.data.repository.config.XmlRepositoryConfigurationSource);
    Code:
       0: return

  protected java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> getIdentifyingAnnotations();
    Code:
       0: invokestatic  #24                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  protected java.util.Collection<java.lang.Class<?>> getIdentifyingTypes();
    Code:
       0: invokestatic  #24                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public static java.lang.String registerWithSourceAndGeneratedBeanName(org.springframework.beans.factory.support.BeanDefinitionRegistry, org.springframework.beans.factory.support.AbstractBeanDefinition, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #25                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
       5: aload_1
       6: aload_0
       7: invokestatic  #26                 // Method org/springframework/beans/factory/support/BeanDefinitionReaderUtils.generateBeanName:(Lorg/springframework/beans/factory/config/BeanDefinition;Lorg/springframework/beans/factory/support/BeanDefinitionRegistry;)Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: aload_3
      13: aload_1
      14: invokeinterface #27,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      19: aload_3
      20: areturn

  public static void registerIfNotAlreadyRegistered(org.springframework.beans.factory.support.AbstractBeanDefinition, org.springframework.beans.factory.support.BeanDefinitionRegistry, java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #28,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
       7: ifeq          11
      10: return
      11: aload_0
      12: aload_3
      13: invokevirtual #25                 // Method org/springframework/beans/factory/support/AbstractBeanDefinition.setSource:(Ljava/lang/Object;)V
      16: aload_1
      17: aload_2
      18: aload_0
      19: invokeinterface #27,  3           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.registerBeanDefinition:(Ljava/lang/String;Lorg/springframework/beans/factory/config/BeanDefinition;)V
      24: return

  public static boolean hasBean(java.lang.Class<?>, org.springframework.beans.factory.support.BeanDefinitionRegistry);
    Code:
       0: ldc           #29                 // String %s%s0
       2: iconst_2
       3: anewarray     #22                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: invokevirtual #30                 // Method java/lang/Class.getName:()Ljava/lang/String;
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #31                 // String #
      17: aastore
      18: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: astore_2
      22: aload_1
      23: aload_2
      24: invokeinterface #28,  2           // InterfaceMethod org/springframework/beans/factory/support/BeanDefinitionRegistry.containsBeanDefinition:(Ljava/lang/String;)Z
      29: ireturn

  protected <T extends org.springframework.data.repository.config.RepositoryConfigurationSource> org.springframework.data.repository.config.RepositoryConfiguration<T> getRepositoryConfiguration(org.springframework.beans.factory.config.BeanDefinition, T);
    Code:
       0: new           #32                 // class org/springframework/data/repository/config/DefaultRepositoryConfiguration
       3: dup
       4: aload_2
       5: aload_1
       6: invokespecial #33                 // Method org/springframework/data/repository/config/DefaultRepositoryConfiguration."<init>":(Lorg/springframework/data/repository/config/RepositoryConfigurationSource;Lorg/springframework/beans/factory/config/BeanDefinition;)V
       9: areturn

  protected boolean isStrictRepositoryCandidate(java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #34                 // Method org/springframework/data/repository/core/support/AbstractRepositoryMetadata.getMetadata:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryMetadata;
       4: astore_2
       5: aload_0
       6: invokevirtual #35                 // Method getIdentifyingTypes:()Ljava/util/Collection;
       9: astore_3
      10: aload_3
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore        4
      18: aload         4
      20: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          54
      28: aload         4
      30: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #36                 // class java/lang/Class
      38: astore        5
      40: aload         5
      42: aload_1
      43: invokevirtual #37                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      46: ifeq          51
      49: iconst_1
      50: ireturn
      51: goto          18
      54: aload_2
      55: invokeinterface #38,  1           // InterfaceMethod org/springframework/data/repository/core/RepositoryMetadata.getDomainType:()Ljava/lang/Class;
      60: astore        4
      62: aload_0
      63: invokevirtual #39                 // Method getIdentifyingAnnotations:()Ljava/util/Collection;
      66: astore        5
      68: aload         5
      70: invokeinterface #40,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      75: ifeq          80
      78: iconst_1
      79: ireturn
      80: aload         5
      82: invokeinterface #12,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      87: astore        6
      89: aload         6
      91: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      96: ifeq          126
      99: aload         6
     101: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     106: checkcast     #36                 // class java/lang/Class
     109: astore        7
     111: aload         4
     113: aload         7
     115: invokestatic  #41                 // Method org/springframework/core/annotation/AnnotationUtils.findAnnotation:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     118: ifnull        123
     121: iconst_1
     122: ireturn
     123: goto          89
     126: getstatic     #42                 // Field LOGGER:Lorg/slf4j/Logger;
     129: ldc           #44                 // String Spring Data {} - Could not safely identify store assignment for repository candidate {}.
     131: aload_0
     132: invokevirtual #45                 // Method getModuleName:()Ljava/lang/String;
     135: aload_1
     136: invokeinterface #46,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     141: iconst_0
     142: ireturn

  private java.lang.Class<?> loadRepositoryInterface(org.springframework.data.repository.config.RepositoryConfiguration<?>, org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_1
       1: invokeinterface #47,  1           // InterfaceMethod org/springframework/data/repository/config/RepositoryConfiguration.getRepositoryInterface:()Ljava/lang/String;
       6: astore_3
       7: aload_2
       8: invokeinterface #48,  1           // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
      13: astore        4
      15: aload_3
      16: aload         4
      18: invokestatic  #49                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      21: areturn
      22: astore        5
      24: getstatic     #42                 // Field LOGGER:Lorg/slf4j/Logger;
      27: ldc           #51                 // String %s - Could not load type %s using class loader %s.
      29: iconst_3
      30: anewarray     #22                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: aload_0
      36: invokevirtual #45                 // Method getModuleName:()Ljava/lang/String;
      39: aastore
      40: dup
      41: iconst_1
      42: aload_3
      43: aastore
      44: dup
      45: iconst_2
      46: aload         4
      48: aastore
      49: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: aload         5
      54: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      59: goto          99
      62: astore        5
      64: getstatic     #42                 // Field LOGGER:Lorg/slf4j/Logger;
      67: ldc           #51                 // String %s - Could not load type %s using class loader %s.
      69: iconst_3
      70: anewarray     #22                 // class java/lang/Object
      73: dup
      74: iconst_0
      75: aload_0
      76: invokevirtual #45                 // Method getModuleName:()Ljava/lang/String;
      79: aastore
      80: dup
      81: iconst_1
      82: aload_3
      83: aastore
      84: dup
      85: iconst_2
      86: aload         4
      88: aastore
      89: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      92: aload         5
      94: invokeinterface #52,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      99: aconst_null
     100: areturn
    Exception table:
       from    to  target type
          15    21    22   Class java/lang/ClassNotFoundException
          15    21    62   Class java/lang/LinkageError

  static {};
    Code:
       0: ldc           #43                 // class org/springframework/data/repository/config/RepositoryConfigurationExtensionSupport
       2: invokestatic  #54                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #42                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
