Compiled from "DefaultRepositoryInvokerFactory.java"
public class org.springframework.data.repository.support.DefaultRepositoryInvokerFactory implements org.springframework.data.repository.support.RepositoryInvokerFactory {
  private final org.springframework.data.repository.support.Repositories repositories;

  private final org.springframework.core.convert.ConversionService conversionService;

  private final java.util.Map<java.lang.Class<?>, org.springframework.data.repository.support.RepositoryInvoker> invokers;

  public org.springframework.data.repository.support.DefaultRepositoryInvokerFactory(org.springframework.data.repository.support.Repositories);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/springframework/format/support/DefaultFormattingConversionService
       5: dup
       6: invokespecial #2                  // Method org/springframework/format/support/DefaultFormattingConversionService."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/springframework/data/repository/support/Repositories;Lorg/springframework/core/convert/ConversionService;)V
      12: return

  public org.springframework.data.repository.support.DefaultRepositoryInvokerFactory(org.springframework.data.repository.support.Repositories, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Repositories must not be null!
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String ConversionService must not be null!
      13: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      21: aload_0
      22: aload_2
      23: putfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: aload_0
      27: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: putfield      #12                 // Field invokers:Ljava/util/Map;
      37: return

  public org.springframework.data.repository.support.RepositoryInvoker getInvokerFor(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field invokers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #14                 // class org/springframework/data/repository/support/RepositoryInvoker
      13: astore_2
      14: aload_2
      15: ifnull        20
      18: aload_2
      19: areturn
      20: aload_0
      21: aload_1
      22: invokespecial #15                 // Method prepareInvokers:(Ljava/lang/Class;)Lorg/springframework/data/repository/support/RepositoryInvoker;
      25: astore_2
      26: aload_0
      27: getfield      #12                 // Field invokers:Ljava/util/Map;
      30: aload_1
      31: aload_2
      32: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_2
      39: areturn

  private org.springframework.data.repository.support.RepositoryInvoker prepareInvokers(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
       4: aload_1
       5: invokevirtual #17                 // Method org/springframework/data/repository/support/Repositories.getRepositoryFor:(Ljava/lang/Class;)Ljava/lang/Object;
       8: astore_2
       9: aload_2
      10: ldc           #18                 // String No repository found for domain type: %s
      12: iconst_1
      13: anewarray     #19                 // class java/lang/Object
      16: dup
      17: iconst_0
      18: aload_1
      19: aastore
      20: invokestatic  #20                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: getfield      #8                  // Field repositories:Lorg/springframework/data/repository/support/Repositories;
      30: aload_1
      31: invokevirtual #21                 // Method org/springframework/data/repository/support/Repositories.getRepositoryInformationFor:(Ljava/lang/Class;)Lorg/springframework/data/repository/core/RepositoryInformation;
      34: astore_3
      35: aload_0
      36: aload_3
      37: aload_2
      38: invokevirtual #22                 // Method createInvoker:(Lorg/springframework/data/repository/core/RepositoryInformation;Ljava/lang/Object;)Lorg/springframework/data/repository/support/RepositoryInvoker;
      41: areturn

  protected org.springframework.data.repository.support.RepositoryInvoker createInvoker(org.springframework.data.repository.core.RepositoryInformation, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #23                 // class org/springframework/data/repository/PagingAndSortingRepository
       4: ifeq          24
       7: new           #24                 // class org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker
      10: dup
      11: aload_2
      12: checkcast     #23                 // class org/springframework/data/repository/PagingAndSortingRepository
      15: aload_1
      16: aload_0
      17: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      20: invokespecial #25                 // Method org/springframework/data/repository/support/PagingAndSortingRepositoryInvoker."<init>":(Lorg/springframework/data/repository/PagingAndSortingRepository;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      23: areturn
      24: aload_2
      25: instanceof    #26                 // class org/springframework/data/repository/CrudRepository
      28: ifeq          48
      31: new           #27                 // class org/springframework/data/repository/support/CrudRepositoryInvoker
      34: dup
      35: aload_2
      36: checkcast     #26                 // class org/springframework/data/repository/CrudRepository
      39: aload_1
      40: aload_0
      41: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      44: invokespecial #28                 // Method org/springframework/data/repository/support/CrudRepositoryInvoker."<init>":(Lorg/springframework/data/repository/CrudRepository;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      47: areturn
      48: new           #29                 // class org/springframework/data/repository/support/ReflectionRepositoryInvoker
      51: dup
      52: aload_2
      53: aload_1
      54: aload_0
      55: getfield      #9                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      58: invokespecial #30                 // Method org/springframework/data/repository/support/ReflectionRepositoryInvoker."<init>":(Ljava/lang/Object;Lorg/springframework/data/repository/core/RepositoryMetadata;Lorg/springframework/core/convert/ConversionService;)V
      61: areturn
}
