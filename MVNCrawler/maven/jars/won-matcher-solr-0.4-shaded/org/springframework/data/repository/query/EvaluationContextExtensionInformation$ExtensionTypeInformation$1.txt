Compiled from "EvaluationContextExtensionInformation.java"
final class org.springframework.data.repository.query.EvaluationContextExtensionInformation$ExtensionTypeInformation$1 implements org.springframework.util.ReflectionUtils$MethodCallback {
  final java.util.Map val$map;

  org.springframework.data.repository.query.EvaluationContextExtensionInformation$ExtensionTypeInformation$1(java.util.Map);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$map:Ljava/util/Map;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public void doWith(java.lang.reflect.Method) throws java.lang.IllegalArgumentException, java.lang.IllegalAccessException;
    Code:
       0: aload_1
       1: invokevirtual #3                  // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #4                  // Method java/lang/reflect/Modifier.isPublic:(I)Z
       7: ifeq          43
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/reflect/Method.getModifiers:()I
      14: invokestatic  #5                  // Method java/lang/reflect/Modifier.isStatic:(I)Z
      17: ifeq          43
      20: aload_0
      21: getfield      #1                  // Field val$map:Ljava/util/Map;
      24: aload_1
      25: invokevirtual #6                  // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      28: new           #7                  // class org/springframework/data/repository/query/spi/Function
      31: dup
      32: aload_1
      33: aconst_null
      34: invokespecial #8                  // Method org/springframework/data/repository/query/spi/Function."<init>":(Ljava/lang/reflect/Method;Ljava/lang/Object;)V
      37: invokeinterface #9,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: return
}
