Compiled from "PropertyPath.java"
public class org.springframework.data.mapping.PropertyPath implements java.lang.Iterable<org.springframework.data.mapping.PropertyPath> {
  private static final java.lang.String PARSE_DEPTH_EXCEEDED;

  private static final java.lang.String DELIMITERS;

  private static final java.lang.String ALL_UPPERCASE;

  private static final java.util.regex.Pattern SPLITTER;

  private final org.springframework.data.util.TypeInformation<?> owningType;

  private final java.lang.String name;

  private final org.springframework.data.util.TypeInformation<?> type;

  private final boolean isCollection;

  private org.springframework.data.mapping.PropertyPath next;

  org.springframework.data.mapping.PropertyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       6: invokestatic  #2                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       9: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      12: return

  org.springframework.data.mapping.PropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String Name must not be null or empty!
       7: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #7                  // String Owning type must not be null!
      13: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #9                  // String Perviously found properties must not be null!
      19: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_1
      23: invokestatic  #10                 // Method java/beans/Introspector.decapitalize:(Ljava/lang/String;)Ljava/lang/String;
      26: astore        4
      28: aload_2
      29: aload         4
      31: invokeinterface #11,  2           // InterfaceMethod org/springframework/data/util/TypeInformation.getProperty:(Ljava/lang/String;)Lorg/springframework/data/util/TypeInformation;
      36: astore        5
      38: aload         5
      40: ifnonnull     55
      43: new           #12                 // class org/springframework/data/mapping/PropertyReferenceException
      46: dup
      47: aload         4
      49: aload_2
      50: aload_3
      51: invokespecial #13                 // Method org/springframework/data/mapping/PropertyReferenceException."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      54: athrow
      55: aload_0
      56: aload_2
      57: putfield      #14                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
      60: aload_0
      61: aload         5
      63: invokeinterface #15,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.isCollectionLike:()Z
      68: putfield      #16                 // Field isCollection:Z
      71: aload_0
      72: aload         5
      74: invokeinterface #17,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
      79: putfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
      82: aload_0
      83: aload         4
      85: putfield      #19                 // Field name:Ljava/lang/String;
      88: return

  public org.springframework.data.util.TypeInformation<?> getOwningType();
    Code:
       0: aload_0
       1: getfield      #14                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public java.lang.String getSegment();
    Code:
       0: aload_0
       1: getfield      #19                 // Field name:Ljava/lang/String;
       4: areturn

  public org.springframework.data.mapping.PropertyPath getLeafProperty();
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #20                 // Method hasNext:()Z
       6: ifeq          17
       9: aload_1
      10: invokevirtual #21                 // Method next:()Lorg/springframework/data/mapping/PropertyPath;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public java.lang.Class<?> getType();
    Code:
       0: aload_0
       1: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
       4: invokeinterface #22,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       9: areturn

  public org.springframework.data.mapping.PropertyPath next();
    Code:
       0: aload_0
       1: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
       4: areturn

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String toDotPath();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method hasNext:()Z
       4: ifeq          40
       7: new           #24                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      14: aload_0
      15: invokevirtual #26                 // Method getSegment:()Ljava/lang/String;
      18: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #28                 // String .
      23: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: invokevirtual #21                 // Method next:()Lorg/springframework/data/mapping/PropertyPath;
      30: invokevirtual #29                 // Method toDotPath:()Ljava/lang/String;
      33: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn
      40: aload_0
      41: invokevirtual #26                 // Method getSegment:()Ljava/lang/String;
      44: areturn

  public boolean isCollection();
    Code:
       0: aload_0
       1: getfield      #16                 // Field isCollection:Z
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        25
      11: aload_0
      12: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #31                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      22: ifne          27
      25: iconst_0
      26: ireturn
      27: aload_1
      28: checkcast     #33                 // class org/springframework/data/mapping/PropertyPath
      31: astore_2
      32: aload_0
      33: getfield      #19                 // Field name:Ljava/lang/String;
      36: aload_2
      37: getfield      #19                 // Field name:Ljava/lang/String;
      40: invokevirtual #34                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      43: ifeq          78
      46: aload_0
      47: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
      50: aload_2
      51: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
      54: invokevirtual #32                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifeq          78
      60: aload_0
      61: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      64: aload_2
      65: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      68: invokestatic  #35                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      71: ifeq          78
      74: iconst_1
      75: goto          79
      78: iconst_0
      79: ireturn

  public int hashCode();
    Code:
       0: bipush        17
       2: istore_1
       3: iload_1
       4: bipush        31
       6: aload_0
       7: getfield      #19                 // Field name:Ljava/lang/String;
      10: invokevirtual #36                 // Method java/lang/String.hashCode:()I
      13: imul
      14: iadd
      15: istore_1
      16: iload_1
      17: bipush        31
      19: aload_0
      20: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
      23: invokevirtual #37                 // Method java/lang/Object.hashCode:()I
      26: imul
      27: iadd
      28: istore_1
      29: iload_1
      30: bipush        31
      32: aload_0
      33: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      36: ifnonnull     43
      39: iconst_0
      40: goto          50
      43: aload_0
      44: getfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      47: invokevirtual #38                 // Method hashCode:()I
      50: imul
      51: iadd
      52: istore_1
      53: iload_1
      54: ireturn

  public java.util.Iterator<org.springframework.data.mapping.PropertyPath> iterator();
    Code:
       0: new           #39                 // class org/springframework/data/mapping/PropertyPath$1
       3: dup
       4: aload_0
       5: invokespecial #40                 // Method org/springframework/data/mapping/PropertyPath$1."<init>":(Lorg/springframework/data/mapping/PropertyPath;)V
       8: areturn

  public static org.springframework.data.mapping.PropertyPath from(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokestatic  #41                 // Method from:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/PropertyPath;
       8: areturn

  public static org.springframework.data.mapping.PropertyPath from(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: ldc           #42                 // String Source must not be null or empty!
       3: invokestatic  #6                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #43                 // String TypeInformation must not be null or empty!
       9: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #44                 // class java/util/ArrayList
      15: dup
      16: invokespecial #45                 // Method java/util/ArrayList."<init>":()V
      19: astore_2
      20: getstatic     #46                 // Field SPLITTER:Ljava/util/regex/Pattern;
      23: new           #24                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #47                 // String _
      32: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokevirtual #48                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      45: astore_3
      46: aload_3
      47: invokevirtual #49                 // Method java/util/regex/Matcher.find:()Z
      50: ifeq          68
      53: aload_2
      54: aload_3
      55: iconst_1
      56: invokevirtual #50                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      59: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          46
      68: aload_2
      69: invokeinterface #52,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      74: astore        4
      76: aconst_null
      77: astore        5
      79: new           #53                 // class java/util/Stack
      82: dup
      83: invokespecial #54                 // Method java/util/Stack."<init>":()V
      86: astore        6
      88: aload         4
      90: invokeinterface #55,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      95: ifeq          156
      98: aload         5
     100: ifnonnull     132
     103: aload         4
     105: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     110: checkcast     #57                 // class java/lang/String
     113: aload_1
     114: aload         6
     116: invokestatic  #58                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     119: astore        5
     121: aload         6
     123: aload         5
     125: invokevirtual #59                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: goto          88
     132: aload         6
     134: aload         4
     136: invokeinterface #56,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     141: checkcast     #57                 // class java/lang/String
     144: aload         6
     146: invokestatic  #60                 // Method create:(Ljava/lang/String;Ljava/util/Stack;)Lorg/springframework/data/mapping/PropertyPath;
     149: invokevirtual #59                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
     152: pop
     153: goto          88
     156: aload         5
     158: areturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, java.util.Stack<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_1
       1: invokevirtual #61                 // Method java/util/Stack.peek:()Ljava/lang/Object;
       4: checkcast     #33                 // class org/springframework/data/mapping/PropertyPath
       7: astore_2
       8: aload_0
       9: aload_2
      10: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
      13: aload_1
      14: invokestatic  #58                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
      17: astore_3
      18: aload_2
      19: aload_3
      20: putfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      23: aload_3
      24: areturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #62                 // String
       4: aload_2
       5: invokestatic  #63                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
       8: areturn

  private static org.springframework.data.mapping.PropertyPath create(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.lang.String, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_3
       1: invokeinterface #64,  1           // InterfaceMethod java/util/List.size:()I
       6: sipush        1000
       9: if_icmple     22
      12: new           #65                 // class java/lang/IllegalArgumentException
      15: dup
      16: ldc           #66                 // String Trying to parse a path with depth greater than 1000! This has been disabled for security reasons to prevent parsing overflows.
      18: invokespecial #67                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aconst_null
      23: astore        4
      25: aconst_null
      26: astore        5
      28: new           #33                 // class org/springframework/data/mapping/PropertyPath
      31: dup
      32: aload_0
      33: aload_1
      34: aload_3
      35: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)V
      38: astore        5
      40: aload_3
      41: invokeinterface #68,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      46: ifne          71
      49: aload_3
      50: aload_3
      51: invokeinterface #64,  1           // InterfaceMethod java/util/List.size:()I
      56: iconst_1
      57: isub
      58: invokeinterface #69,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      63: checkcast     #33                 // class org/springframework/data/mapping/PropertyPath
      66: aload         5
      68: putfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
      71: new           #44                 // class java/util/ArrayList
      74: dup
      75: aload_3
      76: invokespecial #70                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      79: astore        6
      81: aload         6
      83: aload         5
      85: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      90: pop
      91: aload_2
      92: invokestatic  #71                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      95: ifeq          114
      98: aload         5
     100: aload_2
     101: aload         5
     103: getfield      #18                 // Field type:Lorg/springframework/data/util/TypeInformation;
     106: aload         6
     108: invokestatic  #58                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     111: putfield      #23                 // Field next:Lorg/springframework/data/mapping/PropertyPath;
     114: aload         5
     116: areturn
     117: astore        6
     119: aload         5
     121: ifnull        127
     124: aload         6
     126: athrow
     127: aload         6
     129: astore        4
     131: ldc           #72                 // String \\p{Lu}\\p{Ll}*$
     133: invokestatic  #73                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
     136: astore        6
     138: aload         6
     140: aload_0
     141: invokevirtual #48                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
     144: astore        7
     146: aload         7
     148: invokevirtual #49                 // Method java/util/regex/Matcher.find:()Z
     151: ifeq          233
     154: aload         7
     156: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I
     159: ifeq          233
     162: aload         7
     164: invokevirtual #74                 // Method java/util/regex/Matcher.start:()I
     167: istore        8
     169: aload_0
     170: iconst_0
     171: iload         8
     173: invokevirtual #75                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     176: astore        9
     178: aload_0
     179: iload         8
     181: invokevirtual #76                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     184: astore        10
     186: aload         9
     188: aload_1
     189: new           #24                 // class java/lang/StringBuilder
     192: dup
     193: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
     196: aload         10
     198: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: aload_2
     202: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: aload_3
     209: invokestatic  #63                 // Method create:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/util/List;)Lorg/springframework/data/mapping/PropertyPath;
     212: areturn
     213: astore        11
     215: aload         11
     217: aload         4
     219: invokevirtual #77                 // Method org/springframework/data/mapping/PropertyReferenceException.hasDeeperResolutionDepthThan:(Lorg/springframework/data/mapping/PropertyReferenceException;)Z
     222: ifeq          230
     225: aload         11
     227: goto          232
     230: aload         4
     232: athrow
     233: aload         4
     235: athrow
    Exception table:
       from    to  target type
          28   116   117   Class org/springframework/data/mapping/PropertyReferenceException
         186   212   213   Class org/springframework/data/mapping/PropertyReferenceException

  public java.lang.String toString();
    Code:
       0: ldc           #78                 // String %s.%s
       2: iconst_2
       3: anewarray     #79                 // class java/lang/Object
       6: dup
       7: iconst_0
       8: aload_0
       9: getfield      #14                 // Field owningType:Lorg/springframework/data/util/TypeInformation;
      12: invokeinterface #22,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      17: invokevirtual #80                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_0
      24: invokevirtual #29                 // Method toDotPath:()Ljava/lang/String;
      27: aastore
      28: invokestatic  #81                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: areturn

  static {};
    Code:
       0: ldc           #82                 // String (?:[%s]?([%s]*?[^%s]+))
       2: ldc           #83                 // String %s
       4: ldc           #84                 // String _\\.
       6: invokevirtual #85                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokestatic  #73                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      12: putstatic     #46                 // Field SPLITTER:Ljava/util/regex/Pattern;
      15: return
}
