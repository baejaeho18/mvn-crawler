Compiled from "PropertyReferenceException.java"
public class org.springframework.data.mapping.PropertyReferenceException extends java.lang.RuntimeException {
  private static final long serialVersionUID;

  private static final java.lang.String ERROR_TEMPLATE;

  private static final java.lang.String HINTS_TEMPLATE;

  private final java.lang.String propertyName;

  private final org.springframework.data.util.TypeInformation<?> type;

  private final java.util.List<org.springframework.data.mapping.PropertyPath> alreadyResolvedPath;

  private final java.util.Set<java.lang.String> propertyMatches;

  public org.springframework.data.mapping.PropertyReferenceException(java.lang.String, org.springframework.data.util.TypeInformation<?>, java.util.List<org.springframework.data.mapping.PropertyPath>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/RuntimeException."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Property name must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String Type must not be null!
      13: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_3
      17: ldc           #6                  // String Already resolved paths must not be null!
      19: invokestatic  #5                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field propertyName:Ljava/lang/String;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field type:Lorg/springframework/data/util/TypeInformation;
      32: aload_0
      33: aload_3
      34: putfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
      37: aload_0
      38: aload_1
      39: aload_2
      40: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      45: invokestatic  #11                 // Method detectPotentialMatches:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Set;
      48: putfield      #12                 // Field propertyMatches:Ljava/util/Set;
      51: return

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field propertyName:Ljava/lang/String;
       4: areturn

  public org.springframework.data.util.TypeInformation<?> getType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field type:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  java.util.Collection<java.lang.String> getPropertyMatches();
    Code:
       0: aload_0
       1: getfield      #12                 // Field propertyMatches:Ljava/util/Set;
       4: areturn

  public java.lang.String getMessage();
    Code:
       0: new           #13                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #15                 // String No property %s found for type %s!
       6: iconst_2
       7: anewarray     #16                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: getfield      #7                  // Field propertyName:Ljava/lang/String;
      16: aastore
      17: dup
      18: iconst_1
      19: aload_0
      20: getfield      #8                  // Field type:Lorg/springframework/data/util/TypeInformation;
      23: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      28: invokevirtual #17                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      31: aastore
      32: invokestatic  #18                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: invokespecial #19                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      38: astore_1
      39: aload_0
      40: getfield      #12                 // Field propertyMatches:Ljava/util/Set;
      43: invokeinterface #20,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      48: ifne          83
      51: aload_0
      52: getfield      #12                 // Field propertyMatches:Ljava/util/Set;
      55: ldc           #21                 // String ,
      57: ldc           #22                 // String \'
      59: ldc           #22                 // String \'
      61: invokestatic  #23                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      64: astore_2
      65: aload_1
      66: ldc           #24                 // String  Did you mean %s?
      68: iconst_1
      69: anewarray     #16                 // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_2
      75: aastore
      76: invokestatic  #18                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      79: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: pop
      83: aload_0
      84: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
      87: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      92: ifne          130
      95: aload_1
      96: ldc           #27                 // String  Traversed path:
      98: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: pop
     102: aload_1
     103: aload_0
     104: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
     107: iconst_0
     108: invokeinterface #28,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     113: checkcast     #29                 // class org/springframework/data/mapping/PropertyPath
     116: invokevirtual #30                 // Method org/springframework/data/mapping/PropertyPath.toString:()Ljava/lang/String;
     119: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_1
     124: ldc           #31                 // String .
     126: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: pop
     130: aload_1
     131: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: areturn

  public org.springframework.data.mapping.PropertyPath getBaseProperty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          16
      12: aconst_null
      13: goto          39
      16: aload_0
      17: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
      20: aload_0
      21: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
      24: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      29: iconst_1
      30: isub
      31: invokeinterface #28,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      36: checkcast     #29                 // class org/springframework/data/mapping/PropertyPath
      39: areturn

  public boolean hasDeeperResolutionDepthThan(org.springframework.data.mapping.PropertyReferenceException);
    Code:
       0: aload_0
       1: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
       9: aload_1
      10: getfield      #9                  // Field alreadyResolvedPath:Ljava/util/List;
      13: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      18: if_icmple     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  private static java.util.Set<java.lang.String> detectPotentialMatches(java.lang.String, java.lang.Class<?>);
    Code:
       0: new           #34                 // class java/util/HashSet
       3: dup
       4: invokespecial #35                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: aload_1
      11: invokestatic  #36                 // Method org/springframework/beans/PropertyMatches.forField:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/beans/PropertyMatches;
      14: invokevirtual #37                 // Method org/springframework/beans/PropertyMatches.getPossibleMatches:()[Ljava/lang/String;
      17: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      20: invokeinterface #39,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_2
      27: aload_0
      28: aload_1
      29: invokestatic  #40                 // Method org/springframework/beans/PropertyMatches.forProperty:(Ljava/lang/String;Ljava/lang/Class;)Lorg/springframework/beans/PropertyMatches;
      32: invokevirtual #37                 // Method org/springframework/beans/PropertyMatches.getPossibleMatches:()[Ljava/lang/String;
      35: invokestatic  #38                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      38: invokeinterface #39,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      43: pop
      44: aload_2
      45: areturn
}
