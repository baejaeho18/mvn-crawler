Compiled from "AbstractMappingContext.java"
public abstract class org.springframework.data.mapping.context.AbstractMappingContext<E extends org.springframework.data.mapping.model.MutablePersistentEntity<?, P>, P extends org.springframework.data.mapping.PersistentProperty<P>> implements org.springframework.data.mapping.context.MappingContext<E, P>, org.springframework.context.ApplicationEventPublisherAware, org.springframework.beans.factory.InitializingBean {
  private final java.util.Map<org.springframework.data.util.TypeInformation<?>, E> persistentEntities;

  private final org.springframework.data.mapping.model.PersistentPropertyAccessorFactory persistentPropertyAccessorFactory;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  private java.util.Set<? extends java.lang.Class<?>> initialEntitySet;

  private boolean strict;

  private org.springframework.data.mapping.model.SimpleTypeHolder simpleTypeHolder;

  private final java.util.concurrent.locks.ReentrantReadWriteLock lock;

  private final java.util.concurrent.locks.Lock read;

  private final java.util.concurrent.locks.Lock write;

  public org.springframework.data.mapping.context.AbstractMappingContext();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/HashMap
       8: dup
       9: invokespecial #4                  // Method java/util/HashMap."<init>":()V
      12: putfield      #5                  // Field persistentEntities:Ljava/util/Map;
      15: aload_0
      16: new           #6                  // class org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory
      19: dup
      20: invokespecial #7                  // Method org/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory."<init>":()V
      23: putfield      #8                  // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
      26: aload_0
      27: new           #9                  // class java/util/HashSet
      30: dup
      31: invokespecial #10                 // Method java/util/HashSet."<init>":()V
      34: putfield      #11                 // Field initialEntitySet:Ljava/util/Set;
      37: aload_0
      38: iconst_0
      39: putfield      #12                 // Field strict:Z
      42: aload_0
      43: new           #13                 // class org/springframework/data/mapping/model/SimpleTypeHolder
      46: dup
      47: invokespecial #14                 // Method org/springframework/data/mapping/model/SimpleTypeHolder."<init>":()V
      50: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      53: aload_0
      54: new           #15                 // class java/util/concurrent/locks/ReentrantReadWriteLock
      57: dup
      58: invokespecial #16                 // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      61: putfield      #17                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      64: aload_0
      65: aload_0
      66: getfield      #17                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      69: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      72: putfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      75: aload_0
      76: aload_0
      77: getfield      #17                 // Field lock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      80: invokevirtual #20                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      83: putfield      #21                 // Field write:Ljava/util/concurrent/locks/Lock;
      86: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public void setInitialEntitySet(java.util.Set<? extends java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field initialEntitySet:Ljava/util/Set;
       5: return

  public void setStrict(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field strict:Z
       5: return

  public void setSimpleTypeHolder(org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     15
       5: new           #13                 // class org/springframework/data/mapping/model/SimpleTypeHolder
       8: dup
       9: invokespecial #14                 // Method org/springframework/data/mapping/model/SimpleTypeHolder."<init>":()V
      12: goto          16
      15: aload_1
      16: putfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
      19: return

  public java.util.Collection<E> getPersistentEntities();
    Code:
       0: aload_0
       1: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #9                  // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
      17: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      22: invokespecial #25                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: invokestatic  #26                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      28: astore_1
      29: aload_0
      30: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: aload_1
      39: areturn
      40: astore_2
      41: aload_0
      42: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    29    40   any

  public E getPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #29                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       8: areturn

  public boolean hasPersistentEntityFor(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          21
       8: aload_0
       9: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
      12: aload_1
      13: invokestatic  #28                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      16: invokeinterface #30,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      21: ireturn

  public E getPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #31                 // String Type must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #34                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: astore_3
      35: aload_0
      36: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: aload_3
      45: areturn
      46: aload_0
      47: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          72
      58: astore        4
      60: aload_0
      61: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
      72: aload_0
      73: aload_1
      74: invokevirtual #35                 // Method shouldCreatePersistentEntityFor:(Lorg/springframework/data/util/TypeInformation;)Z
      77: ifne          82
      80: aconst_null
      81: areturn
      82: aload_0
      83: getfield      #12                 // Field strict:Z
      86: ifeq          116
      89: new           #36                 // class org/springframework/data/mapping/model/MappingException
      92: dup
      93: new           #37                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #39                 // String Unknown persistent entity
     102: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: invokevirtual #41                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: invokespecial #43                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;)V
     115: athrow
     116: aload_0
     117: aload_1
     118: invokevirtual #44                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
     121: areturn
    Exception table:
       from    to  target type
           6    35    58   any
          58    60    58   any

  public E getPersistentEntity(P);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_1
       7: invokeinterface #45,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isEntity:()Z
      12: ifne          17
      15: aconst_null
      16: areturn
      17: aload_1
      18: invokeinterface #46,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
      23: astore_2
      24: aload_0
      25: aload_2
      26: invokeinterface #47,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
      31: invokevirtual #29                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      34: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.PropertyPath);
    Code:
       0: aload_1
       1: ldc           #48                 // String Property path must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #49                 // Method org/springframework/data/mapping/PropertyPath.toDotPath:()Ljava/lang/String;
      11: aload_1
      12: invokevirtual #50                 // Method org/springframework/data/mapping/PropertyPath.getOwningType:()Lorg/springframework/data/util/TypeInformation;
      15: invokespecial #51                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      18: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(java.lang.String, java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #48                 // String Property path must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #31                 // String Type must not be null!
       9: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokestatic  #28                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      18: invokespecial #51                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      21: areturn

  public org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(org.springframework.data.mapping.context.InvalidPersistentPropertyPath);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getResolvedPath:()Ljava/lang/String;
       5: aload_1
       6: invokevirtual #53                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath.getType:()Lorg/springframework/data/util/TypeInformation;
       9: invokespecial #51                 // Method getPersistentPropertyPath:(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      12: areturn

  private org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(java.lang.String, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #54                 // String \\.
       4: invokevirtual #55                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
       7: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: aload_2
      11: invokespecial #57                 // Method getPersistentPropertyPath:(Ljava/util/Collection;Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/context/PersistentPropertyPath;
      14: areturn

  private org.springframework.data.mapping.context.PersistentPropertyPath<P> getPersistentPropertyPath(java.util.Collection<java.lang.String>, org.springframework.data.util.TypeInformation<?>);
    Code:
       0: invokestatic  #58                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.empty:()Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
       3: astore_3
       4: aload_1
       5: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      10: astore        4
      12: aload_0
      13: aload_2
      14: invokevirtual #29                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      17: astore        5
      19: aload         4
      21: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          246
      29: aload         4
      31: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #62                 // class java/lang/String
      39: astore        6
      41: aload         5
      43: aload         6
      45: invokeinterface #63,  2           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.getPersistentProperty:(Ljava/lang/String;)Lorg/springframework/data/mapping/PersistentProperty;
      50: astore        7
      52: aload         7
      54: ifnonnull     110
      57: aload_1
      58: ldc           #64                 // String .
      60: invokestatic  #65                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
      63: astore        8
      65: aload_3
      66: invokevirtual #66                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.toDotPath:()Ljava/lang/String;
      69: astore        9
      71: new           #67                 // class org/springframework/data/mapping/context/InvalidPersistentPropertyPath
      74: dup
      75: aload         8
      77: aload_2
      78: aload         6
      80: aload         9
      82: ldc           #68                 // String No property %s found on %s!
      84: iconst_2
      85: anewarray     #69                 // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload         6
      92: aastore
      93: dup
      94: iconst_1
      95: aload         5
      97: invokeinterface #70,  1           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.getName:()Ljava/lang/String;
     102: aastore
     103: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     106: invokespecial #72                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     109: athrow
     110: aload_3
     111: aload         7
     113: invokevirtual #73                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.append:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/context/DefaultPersistentPropertyPath;
     116: astore_3
     117: aload         4
     119: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     124: ifeq          243
     127: aload         7
     129: invokeinterface #46,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
     134: invokeinterface #47,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getActualType:()Lorg/springframework/data/util/TypeInformation;
     139: astore        8
     141: aload_0
     142: aload         8
     144: invokevirtual #29                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
     147: astore        5
     149: aload         5
     151: ifnonnull     243
     154: aload_1
     155: ldc           #64                 // String .
     157: invokestatic  #65                 // Method org/springframework/util/StringUtils.collectionToDelimitedString:(Ljava/util/Collection;Ljava/lang/String;)Ljava/lang/String;
     160: astore        9
     162: aload_3
     163: invokevirtual #66                 // Method org/springframework/data/mapping/context/DefaultPersistentPropertyPath.toDotPath:()Ljava/lang/String;
     166: astore        10
     168: aload         4
     170: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     175: checkcast     #62                 // class java/lang/String
     178: astore        11
     180: new           #67                 // class org/springframework/data/mapping/context/InvalidPersistentPropertyPath
     183: dup
     184: aload         9
     186: aload         7
     188: invokeinterface #46,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getTypeInformation:()Lorg/springframework/data/util/TypeInformation;
     193: aload         11
     195: aload         10
     197: ldc           #74                 // String No entity %s found for property %s on %s !
     199: iconst_3
     200: anewarray     #69                 // class java/lang/Object
     203: dup
     204: iconst_0
     205: aload         8
     207: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
     212: invokevirtual #76                 // Method java/lang/Class.getName:()Ljava/lang/String;
     215: aastore
     216: dup
     217: iconst_1
     218: aload         6
     220: aastore
     221: dup
     222: iconst_2
     223: aload         7
     225: invokeinterface #77,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getOwner:()Lorg/springframework/data/mapping/PersistentEntity;
     230: invokeinterface #78,  1           // InterfaceMethod org/springframework/data/mapping/PersistentEntity.getName:()Ljava/lang/String;
     235: aastore
     236: invokestatic  #71                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     239: invokespecial #72                 // Method org/springframework/data/mapping/context/InvalidPersistentPropertyPath."<init>":(Ljava/lang/String;Lorg/springframework/data/util/TypeInformation;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     242: athrow
     243: goto          19
     246: aload_3
     247: areturn

  protected E addPersistentEntity(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #28                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
       5: invokevirtual #44                 // Method addPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       8: areturn

  protected E addPersistentEntity(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_1
       1: ldc           #79                 // String TypeInformation must not be null!
       3: invokestatic  #32                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      15: aload_0
      16: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
      19: aload_1
      20: invokeinterface #33,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      25: checkcast     #34                 // class org/springframework/data/mapping/model/MutablePersistentEntity
      28: astore_2
      29: aload_2
      30: ifnull        46
      33: aload_2
      34: astore_3
      35: aload_0
      36: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: aload_3
      45: areturn
      46: aload_0
      47: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      50: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          72
      58: astore        4
      60: aload_0
      61: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      64: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      69: aload         4
      71: athrow
      72: aload_1
      73: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      78: astore_2
      79: aconst_null
      80: astore_3
      81: aload_0
      82: getfield      #21                 // Field write:Ljava/util/concurrent/locks/Lock;
      85: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      90: aload_0
      91: aload_1
      92: invokevirtual #80                 // Method createPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      95: astore_3
      96: aload_0
      97: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
     100: aload_1
     101: aload_3
     102: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: aload_2
     109: invokestatic  #82                 // Method org/springframework/beans/BeanUtils.getPropertyDescriptors:(Ljava/lang/Class;)[Ljava/beans/PropertyDescriptor;
     112: astore        4
     114: new           #3                  // class java/util/HashMap
     117: dup
     118: invokespecial #4                  // Method java/util/HashMap."<init>":()V
     121: astore        5
     123: aload         4
     125: astore        6
     127: aload         6
     129: arraylength
     130: istore        7
     132: iconst_0
     133: istore        8
     135: iload         8
     137: iload         7
     139: if_icmpge     170
     142: aload         6
     144: iload         8
     146: aaload
     147: astore        9
     149: aload         5
     151: aload         9
     153: invokevirtual #83                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
     156: aload         9
     158: invokeinterface #81,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     163: pop
     164: iinc          8, 1
     167: goto          135
     170: new           #84                 // class org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator
     173: dup
     174: aload_0
     175: aload_3
     176: aload         5
     178: aconst_null
     179: invokespecial #85                 // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator."<init>":(Lorg/springframework/data/mapping/context/AbstractMappingContext;Lorg/springframework/data/mapping/model/MutablePersistentEntity;Ljava/util/Map;Lorg/springframework/data/mapping/context/AbstractMappingContext$1;)V
     182: astore        6
     184: aload_2
     185: aload         6
     187: getstatic     #86                 // Field org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter.INSTANCE:Lorg/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyFilter;
     190: invokestatic  #87                 // Method org/springframework/util/ReflectionUtils.doWithFields:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$FieldCallback;Lorg/springframework/util/ReflectionUtils$FieldFilter;)V
     193: aload         6
     195: invokevirtual #88                 // Method org/springframework/data/mapping/context/AbstractMappingContext$PersistentPropertyCreator.addPropertiesForRemainingDescriptors:()V
     198: aload_3
     199: invokeinterface #89,  1           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.verify:()V
     204: aload_0
     205: getfield      #8                  // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     208: aload_3
     209: invokeinterface #90,  2           // InterfaceMethod org/springframework/data/mapping/model/PersistentPropertyAccessorFactory.isSupported:(Lorg/springframework/data/mapping/PersistentEntity;)Z
     214: ifeq          227
     217: aload_3
     218: aload_0
     219: getfield      #8                  // Field persistentPropertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     222: invokeinterface #91,  2           // InterfaceMethod org/springframework/data/mapping/model/MutablePersistentEntity.setPersistentPropertyAccessorFactory:(Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;)V
     227: goto          246
     230: astore        6
     232: aload_0
     233: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
     236: aload_1
     237: invokeinterface #92,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     242: pop
     243: aload         6
     245: athrow
     246: aload_0
     247: getfield      #21                 // Field write:Ljava/util/concurrent/locks/Lock;
     250: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     255: goto          289
     258: astore        4
     260: new           #36                 // class org/springframework/data/mapping/model/MappingException
     263: dup
     264: aload         4
     266: invokevirtual #94                 // Method org/springframework/beans/BeansException.getMessage:()Ljava/lang/String;
     269: aload         4
     271: invokespecial #95                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     274: athrow
     275: astore        10
     277: aload_0
     278: getfield      #21                 // Field write:Ljava/util/concurrent/locks/Lock;
     281: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     286: aload         10
     288: athrow
     289: aload_0
     290: getfield      #22                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     293: ifnull        318
     296: aload_3
     297: ifnull        318
     300: aload_0
     301: getfield      #22                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
     304: new           #96                 // class org/springframework/data/mapping/context/MappingContextEvent
     307: dup
     308: aload_0
     309: aload_3
     310: invokespecial #97                 // Method org/springframework/data/mapping/context/MappingContextEvent."<init>":(Lorg/springframework/data/mapping/context/MappingContext;Lorg/springframework/data/mapping/PersistentEntity;)V
     313: invokeinterface #98,  2           // InterfaceMethod org/springframework/context/ApplicationEventPublisher.publishEvent:(Lorg/springframework/context/ApplicationEvent;)V
     318: aload_3
     319: areturn
    Exception table:
       from    to  target type
           6    35    58   any
          58    60    58   any
         170   227   230   Class org/springframework/data/mapping/model/MappingException
          81   246   258   Class org/springframework/beans/BeansException
          81   246   275   any
         258   277   275   any

  public java.util.Collection<org.springframework.data.util.TypeInformation<?>> getManagedTypes();
    Code:
       0: aload_0
       1: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #9                  // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #5                  // Field persistentEntities:Ljava/util/Map;
      17: invokeinterface #99,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #25                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: invokestatic  #26                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      28: astore_1
      29: aload_0
      30: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: aload_1
      39: areturn
      40: astore_2
      41: aload_0
      42: getfield      #19                 // Field read:Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    29    40   any

  protected abstract <T> E createPersistentEntity(org.springframework.data.util.TypeInformation<T>);

  protected abstract P createPersistentProperty(java.lang.reflect.Field, java.beans.PropertyDescriptor, E, org.springframework.data.mapping.model.SimpleTypeHolder);

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method initialize:()V
       4: return

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #11                 // Field initialEntitySet:Ljava/util/Set;
       4: invokeinterface #101,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          38
      19: aload_1
      20: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #102                // class java/lang/Class
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokevirtual #103                // Method addPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
      34: pop
      35: goto          10
      38: return

  protected boolean shouldCreatePersistentEntityFor(org.springframework.data.util.TypeInformation<?>);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: aload_1
       5: invokeinterface #75,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      10: invokevirtual #104                // Method org/springframework/data/mapping/model/SimpleTypeHolder.isSimpleType:(Ljava/lang/Class;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #105                // Method getPersistentEntity:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(org.springframework.data.util.TypeInformation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method getPersistentEntity:(Lorg/springframework/data/util/TypeInformation;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  public org.springframework.data.mapping.PersistentEntity getPersistentEntity(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #106                // Method getPersistentEntity:(Ljava/lang/Class;)Lorg/springframework/data/mapping/model/MutablePersistentEntity;
       5: areturn

  static org.springframework.data.mapping.model.SimpleTypeHolder access$100(org.springframework.data.mapping.context.AbstractMappingContext);
    Code:
       0: aload_0
       1: getfield      #1                  // Field simpleTypeHolder:Lorg/springframework/data/mapping/model/SimpleTypeHolder;
       4: areturn
}
