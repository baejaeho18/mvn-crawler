Compiled from "BasicPersistentEntity.java"
public class org.springframework.data.mapping.model.BasicPersistentEntity<T, P extends org.springframework.data.mapping.PersistentProperty<P>> implements org.springframework.data.mapping.model.MutablePersistentEntity<T, P> {
  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String TYPE_MISMATCH;

  private static final java.lang.String NULL_ASSOCIATION;

  private final org.springframework.data.mapping.PreferredConstructor<T, P> constructor;

  private final org.springframework.data.util.TypeInformation<T> information;

  private final java.util.List<P> properties;

  private final java.util.Comparator<P> comparator;

  private final java.util.Set<org.springframework.data.mapping.Association<P>> associations;

  private final java.util.Map<java.lang.String, P> propertyCache;

  private final java.util.Map<java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.annotation.Annotation> annotationCache;

  private P idProperty;

  private P versionProperty;

  private org.springframework.data.mapping.model.PersistentPropertyAccessorFactory propertyAccessorFactory;

  public org.springframework.data.mapping.model.BasicPersistentEntity(org.springframework.data.util.TypeInformation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
       6: return

  public org.springframework.data.mapping.model.BasicPersistentEntity(org.springframework.data.util.TypeInformation<T>, java.util.Comparator<P>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #3                  // String Information must not be null!
       7: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #5                  // Field information:Lorg/springframework/data/util/TypeInformation;
      15: aload_0
      16: new           #6                  // class java/util/ArrayList
      19: dup
      20: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      23: putfield      #8                  // Field properties:Ljava/util/List;
      26: aload_0
      27: aload_2
      28: putfield      #9                  // Field comparator:Ljava/util/Comparator;
      31: aload_0
      32: new           #10                 // class org/springframework/data/mapping/model/PreferredConstructorDiscoverer
      35: dup
      36: aload_1
      37: aload_0
      38: invokespecial #11                 // Method org/springframework/data/mapping/model/PreferredConstructorDiscoverer."<init>":(Lorg/springframework/data/util/TypeInformation;Lorg/springframework/data/mapping/PersistentEntity;)V
      41: invokevirtual #12                 // Method org/springframework/data/mapping/model/PreferredConstructorDiscoverer.getConstructor:()Lorg/springframework/data/mapping/PreferredConstructor;
      44: putfield      #13                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
      47: aload_0
      48: aload_2
      49: ifnonnull     62
      52: new           #14                 // class java/util/HashSet
      55: dup
      56: invokespecial #15                 // Method java/util/HashSet."<init>":()V
      59: goto          77
      62: new           #16                 // class java/util/TreeSet
      65: dup
      66: new           #17                 // class org/springframework/data/mapping/model/BasicPersistentEntity$AssociationComparator
      69: dup
      70: aload_2
      71: invokespecial #18                 // Method org/springframework/data/mapping/model/BasicPersistentEntity$AssociationComparator."<init>":(Ljava/util/Comparator;)V
      74: invokespecial #19                 // Method java/util/TreeSet."<init>":(Ljava/util/Comparator;)V
      77: putfield      #20                 // Field associations:Ljava/util/Set;
      80: aload_0
      81: new           #21                 // class java/util/HashMap
      84: dup
      85: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      88: putfield      #23                 // Field propertyCache:Ljava/util/Map;
      91: aload_0
      92: new           #21                 // class java/util/HashMap
      95: dup
      96: invokespecial #22                 // Method java/util/HashMap."<init>":()V
      99: putfield      #24                 // Field annotationCache:Ljava/util/Map;
     102: aload_0
     103: getstatic     #25                 // Field org/springframework/data/mapping/model/BeanWrapperPropertyAccessorFactory.INSTANCE:Lorg/springframework/data/mapping/model/BeanWrapperPropertyAccessorFactory;
     106: putfield      #26                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
     109: return

  public org.springframework.data.mapping.PreferredConstructor<T, P> getPersistenceConstructor();
    Code:
       0: aload_0
       1: getfield      #13                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
       4: areturn

  public boolean isConstructorArgument(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
       4: ifnonnull     11
       7: iconst_0
       8: goto          19
      11: aload_0
      12: getfield      #13                 // Field constructor:Lorg/springframework/data/mapping/PreferredConstructor;
      15: aload_1
      16: invokevirtual #27                 // Method org/springframework/data/mapping/PreferredConstructor.isConstructorParameter:(Lorg/springframework/data/mapping/PersistentProperty;)Z
      19: ireturn

  public boolean isIdProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          19
      11: aload_0
      12: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      15: aload_1
      16: invokevirtual #29                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ireturn

  public boolean isVersionProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnonnull     11
       7: iconst_0
       8: goto          19
      11: aload_0
      12: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
      15: aload_1
      16: invokevirtual #29                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      19: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
       4: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: areturn

  public P getIdProperty();
    Code:
       0: aload_0
       1: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: areturn

  public P getVersionProperty();
    Code:
       0: aload_0
       1: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: areturn

  public boolean hasIdProperty();
    Code:
       0: aload_0
       1: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean hasVersionProperty();
    Code:
       0: aload_0
       1: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public void addPersistentProperty(P);
    Code:
       0: aload_1
       1: ldc           #33                 // String Property must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field properties:Ljava/util/List;
      10: aload_1
      11: invokeinterface #34,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      16: ifeq          20
      19: return
      20: aload_0
      21: getfield      #8                  // Field properties:Ljava/util/List;
      24: aload_1
      25: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: getfield      #23                 // Field propertyCache:Ljava/util/Map;
      35: aload_1
      36: invokeinterface #36,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      41: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      46: ifne          66
      49: aload_0
      50: getfield      #23                 // Field propertyCache:Ljava/util/Map;
      53: aload_1
      54: invokeinterface #36,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      59: aload_1
      60: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: aload_1
      68: invokevirtual #39                 // Method returnPropertyIfBetterIdPropertyCandidateOrNull:(Lorg/springframework/data/mapping/PersistentProperty;)Lorg/springframework/data/mapping/PersistentProperty;
      71: astore_2
      72: aload_2
      73: ifnull        81
      76: aload_0
      77: aload_2
      78: putfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      81: aload_1
      82: invokeinterface #40,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isVersionProperty:()Z
      87: ifeq          140
      90: aload_0
      91: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
      94: ifnull        135
      97: new           #41                 // class org/springframework/data/mapping/model/MappingException
     100: dup
     101: ldc           #42                 // String Attempt to add version property %s but already have property %s registered as version. Check your mapping configuration!
     103: iconst_2
     104: anewarray     #43                 // class java/lang/Object
     107: dup
     108: iconst_0
     109: aload_1
     110: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
     115: aastore
     116: dup
     117: iconst_1
     118: aload_0
     119: getfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
     122: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
     127: aastore
     128: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     131: invokespecial #46                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;)V
     134: athrow
     135: aload_0
     136: aload_1
     137: putfield      #30                 // Field versionProperty:Lorg/springframework/data/mapping/PersistentProperty;
     140: return

  protected P returnPropertyIfBetterIdPropertyCandidateOrNull(P);
    Code:
       0: aload_1
       1: invokeinterface #47,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isIdProperty:()Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      15: ifnull        56
      18: new           #41                 // class org/springframework/data/mapping/model/MappingException
      21: dup
      22: ldc           #48                 // String Attempt to add id property %s but already have property %s registered as id. Check your mapping configuration!
      24: iconst_2
      25: anewarray     #43                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      36: aastore
      37: dup
      38: iconst_1
      39: aload_0
      40: getfield      #28                 // Field idProperty:Lorg/springframework/data/mapping/PersistentProperty;
      43: invokeinterface #44,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      48: aastore
      49: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: invokespecial #46                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_1
      57: areturn

  public void addAssociation(org.springframework.data.mapping.Association<P>);
    Code:
       0: aload_1
       1: ifnonnull     32
       4: getstatic     #49                 // Field LOGGER:Lorg/slf4j/Logger;
       7: ldc           #51                 // String %s.addAssociation(…) was called with a null association! Usually indicates a problem in a Spring Data MappingContext implementation. Be sure to file a bug at https://jira.spring.io!
       9: iconst_1
      10: anewarray     #43                 // class java/lang/Object
      13: dup
      14: iconst_0
      15: aload_0
      16: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: aastore
      23: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      26: invokeinterface #53,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      31: return
      32: aload_0
      33: getfield      #20                 // Field associations:Ljava/util/Set;
      36: aload_1
      37: invokeinterface #54,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      42: ifne          56
      45: aload_0
      46: getfield      #20                 // Field associations:Ljava/util/Set;
      49: aload_1
      50: invokeinterface #55,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      55: pop
      56: return

  public P getPersistentProperty(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #23                 // Field propertyCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #57                 // class org/springframework/data/mapping/PersistentProperty
      13: areturn

  public P getPersistentProperty(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: ldc           #58                 // String Annotation type must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field properties:Ljava/util/List;
      10: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          50
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #57                 // class org/springframework/data/mapping/PersistentProperty
      34: astore_3
      35: aload_3
      36: aload_1
      37: invokeinterface #62,  2           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
      42: ifeq          47
      45: aload_3
      46: areturn
      47: goto          16
      50: aload_0
      51: getfield      #20                 // Field associations:Ljava/util/Set;
      54: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      59: astore_2
      60: aload_2
      61: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      66: ifeq          102
      69: aload_2
      70: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #64                 // class org/springframework/data/mapping/Association
      78: astore_3
      79: aload_3
      80: invokevirtual #65                 // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
      83: astore        4
      85: aload         4
      87: aload_1
      88: invokeinterface #62,  2           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
      93: ifeq          99
      96: aload         4
      98: areturn
      99: goto          60
     102: aconst_null
     103: areturn

  public java.lang.Class<T> getType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field information:Lorg/springframework/data/util/TypeInformation;
       4: invokeinterface #66,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
       9: areturn

  public java.lang.Object getTypeAlias();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
       4: ldc           #67                 // class org/springframework/data/annotation/TypeAlias
       6: invokestatic  #68                 // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       9: checkcast     #67                 // class org/springframework/data/annotation/TypeAlias
      12: astore_1
      13: aload_1
      14: ifnonnull     21
      17: aconst_null
      18: goto          43
      21: aload_1
      22: invokeinterface #69,  1           // InterfaceMethod org/springframework/data/annotation/TypeAlias.value:()Ljava/lang/String;
      27: invokestatic  #70                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      30: ifeq          42
      33: aload_1
      34: invokeinterface #69,  1           // InterfaceMethod org/springframework/data/annotation/TypeAlias.value:()Ljava/lang/String;
      39: goto          43
      42: aconst_null
      43: areturn

  public org.springframework.data.util.TypeInformation<T> getTypeInformation();
    Code:
       0: aload_0
       1: getfield      #5                  // Field information:Lorg/springframework/data/util/TypeInformation;
       4: areturn

  public void doWithProperties(org.springframework.data.mapping.PropertyHandler<P>);
    Code:
       0: aload_1
       1: ldc           #71                 // String Handler must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field properties:Ljava/util/List;
      10: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          63
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #57                 // class org/springframework/data/mapping/PersistentProperty
      34: astore_3
      35: aload_3
      36: invokeinterface #72,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isTransient:()Z
      41: ifne          60
      44: aload_3
      45: invokeinterface #73,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAssociation:()Z
      50: ifne          60
      53: aload_1
      54: aload_3
      55: invokeinterface #74,  2           // InterfaceMethod org/springframework/data/mapping/PropertyHandler.doWithPersistentProperty:(Lorg/springframework/data/mapping/PersistentProperty;)V
      60: goto          16
      63: return

  public void doWithProperties(org.springframework.data.mapping.SimplePropertyHandler);
    Code:
       0: aload_1
       1: ldc           #71                 // String Handler must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #8                  // Field properties:Ljava/util/List;
      10: invokeinterface #59,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          63
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #57                 // class org/springframework/data/mapping/PersistentProperty
      34: astore_3
      35: aload_3
      36: invokeinterface #72,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isTransient:()Z
      41: ifne          60
      44: aload_3
      45: invokeinterface #73,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.isAssociation:()Z
      50: ifne          60
      53: aload_1
      54: aload_3
      55: invokeinterface #75,  2           // InterfaceMethod org/springframework/data/mapping/SimplePropertyHandler.doWithPersistentProperty:(Lorg/springframework/data/mapping/PersistentProperty;)V
      60: goto          16
      63: return

  public void doWithAssociations(org.springframework.data.mapping.AssociationHandler<P>);
    Code:
       0: aload_1
       1: ldc           #71                 // String Handler must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #20                 // Field associations:Ljava/util/Set;
      10: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #64                 // class org/springframework/data/mapping/Association
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #76,  2           // InterfaceMethod org/springframework/data/mapping/AssociationHandler.doWithAssociation:(Lorg/springframework/data/mapping/Association;)V
      42: goto          16
      45: return

  public void doWithAssociations(org.springframework.data.mapping.SimpleAssociationHandler);
    Code:
       0: aload_1
       1: ldc           #71                 // String Handler must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #20                 // Field associations:Ljava/util/Set;
      10: invokeinterface #63,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          45
      25: aload_2
      26: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #64                 // class org/springframework/data/mapping/Association
      34: astore_3
      35: aload_1
      36: aload_3
      37: invokeinterface #77,  2           // InterfaceMethod org/springframework/data/mapping/SimpleAssociationHandler.doWithAssociation:(Lorg/springframework/data/mapping/Association;)V
      42: goto          16
      45: return

  public <A extends java.lang.annotation.Annotation> A findAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #24                 // Field annotationCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifeq          27
      13: aload_0
      14: getfield      #24                 // Field annotationCache:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #56,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #78                 // class java/lang/annotation/Annotation
      26: areturn
      27: aload_0
      28: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
      31: aload_1
      32: invokestatic  #68                 // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      35: astore_2
      36: aload_0
      37: getfield      #24                 // Field annotationCache:Ljava/util/Map;
      40: aload_1
      41: aload_2
      42: invokeinterface #38,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_2
      49: areturn

  public void verify();
    Code:
       0: aload_0
       1: getfield      #9                  // Field comparator:Ljava/util/Comparator;
       4: ifnull        18
       7: aload_0
       8: getfield      #8                  // Field properties:Ljava/util/List;
      11: aload_0
      12: getfield      #9                  // Field comparator:Ljava/util/Comparator;
      15: invokestatic  #79                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      18: return

  public void setPersistentPropertyAccessorFactory(org.springframework.data.mapping.model.PersistentPropertyAccessorFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
       5: return

  public org.springframework.data.mapping.PersistentPropertyAccessor getPropertyAccessor(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #80                 // String Target bean must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #81                 // Method assertBeanType:(Ljava/lang/Object;)V
      11: aload_0
      12: getfield      #26                 // Field propertyAccessorFactory:Lorg/springframework/data/mapping/model/PersistentPropertyAccessorFactory;
      15: aload_0
      16: aload_1
      17: invokeinterface #82,  3           // InterfaceMethod org/springframework/data/mapping/model/PersistentPropertyAccessorFactory.getPropertyAccessor:(Lorg/springframework/data/mapping/PersistentEntity;Ljava/lang/Object;)Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      22: areturn

  public org.springframework.data.mapping.IdentifierAccessor getIdentifierAccessor(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #80                 // String Target bean must not be null!
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokespecial #81                 // Method assertBeanType:(Ljava/lang/Object;)V
      11: ldc           #83                 // class org/springframework/data/domain/Persistable
      13: aload_0
      14: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
      17: invokevirtual #84                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          35
      23: new           #85                 // class org/springframework/data/mapping/model/PersistableIdentifierAccessor
      26: dup
      27: aload_1
      28: checkcast     #83                 // class org/springframework/data/domain/Persistable
      31: invokespecial #86                 // Method org/springframework/data/mapping/model/PersistableIdentifierAccessor."<init>":(Lorg/springframework/data/domain/Persistable;)V
      34: areturn
      35: aload_0
      36: invokevirtual #87                 // Method hasIdProperty:()Z
      39: ifeq          54
      42: new           #88                 // class org/springframework/data/mapping/model/IdPropertyIdentifierAccessor
      45: dup
      46: aload_0
      47: aload_1
      48: invokespecial #89                 // Method org/springframework/data/mapping/model/IdPropertyIdentifierAccessor."<init>":(Lorg/springframework/data/mapping/PersistentEntity;Ljava/lang/Object;)V
      51: goto          57
      54: getstatic     #90                 // Field org/springframework/data/mapping/model/BasicPersistentEntity$NullReturningIdentifierAccessor.INSTANCE:Lorg/springframework/data/mapping/model/BasicPersistentEntity$NullReturningIdentifierAccessor;
      57: areturn

  private void assertBeanType(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #91                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       8: ifne          48
      11: new           #92                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #93                 // String Target bean of type %s is not of type of the persistent entity (%s)!
      17: iconst_2
      18: anewarray     #43                 // class java/lang/Object
      21: dup
      22: iconst_0
      23: aload_1
      24: invokevirtual #52                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: invokevirtual #31                 // Method getType:()Ljava/lang/Class;
      37: invokevirtual #32                 // Method java/lang/Class.getName:()Ljava/lang/String;
      40: aastore
      41: invokestatic  #45                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #94                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  static {};
    Code:
       0: ldc           #50                 // class org/springframework/data/mapping/model/BasicPersistentEntity
       2: invokestatic  #95                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #49                 // Field LOGGER:Lorg/slf4j/Logger;
       8: return
}
