Compiled from "BeanWrapper.java"
class org.springframework.data.mapping.model.BeanWrapper<T> implements org.springframework.data.mapping.PersistentPropertyAccessor {
  private final T bean;

  protected org.springframework.data.mapping.model.BeanWrapper(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Bean must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field bean:Ljava/lang/Object;
      15: return

  public void setProperty(org.springframework.data.mapping.PersistentProperty<?>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #5                  // String PersistentProperty must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.usePropertyAccess:()Z
      12: ifne          39
      15: aload_1
      16: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      21: invokestatic  #8                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      24: aload_1
      25: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      30: aload_0
      31: getfield      #4                  // Field bean:Ljava/lang/Object;
      34: aload_2
      35: invokestatic  #9                  // Method org/springframework/util/ReflectionUtils.setField:(Ljava/lang/reflect/Field;Ljava/lang/Object;Ljava/lang/Object;)V
      38: return
      39: aload_1
      40: invokeinterface #10,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getSetter:()Ljava/lang/reflect/Method;
      45: astore_3
      46: aload_1
      47: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.usePropertyAccess:()Z
      52: ifeq          80
      55: aload_3
      56: ifnull        80
      59: aload_3
      60: invokestatic  #11                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Method;)V
      63: aload_3
      64: aload_0
      65: getfield      #4                  // Field bean:Ljava/lang/Object;
      68: iconst_1
      69: anewarray     #12                 // class java/lang/Object
      72: dup
      73: iconst_0
      74: aload_2
      75: aastore
      76: invokestatic  #13                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: goto          95
      83: astore_3
      84: new           #15                 // class org/springframework/data/mapping/model/MappingException
      87: dup
      88: ldc           #16                 // String Could not set object property!
      90: aload_3
      91: invokespecial #17                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      94: athrow
      95: return
    Exception table:
       from    to  target type
           6    38    83   Class java/lang/IllegalStateException
          39    80    83   Class java/lang/IllegalStateException

  public java.lang.Object getProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokeinterface #18,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getType:()Ljava/lang/Class;
       8: invokevirtual #19                 // Method getProperty:(Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Class;)Ljava/lang/Object;
      11: areturn

  public <S> S getProperty(org.springframework.data.mapping.PersistentProperty<?>, java.lang.Class<? extends S>);
    Code:
       0: aload_1
       1: ldc           #5                  // String PersistentProperty must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.usePropertyAccess:()Z
      12: ifne          35
      15: aload_1
      16: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getField:()Ljava/lang/reflect/Field;
      21: astore_3
      22: aload_3
      23: invokestatic  #8                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
      26: aload_3
      27: aload_0
      28: getfield      #4                  // Field bean:Ljava/lang/Object;
      31: invokestatic  #20                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
      34: areturn
      35: aload_1
      36: invokeinterface #21,  1           // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getGetter:()Ljava/lang/reflect/Method;
      41: astore_3
      42: aload_1
      43: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.usePropertyAccess:()Z
      48: ifeq          68
      51: aload_3
      52: ifnull        68
      55: aload_3
      56: invokestatic  #11                 // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Method;)V
      59: aload_3
      60: aload_0
      61: getfield      #4                  // Field bean:Ljava/lang/Object;
      64: invokestatic  #22                 // Method org/springframework/util/ReflectionUtils.invokeMethod:(Ljava/lang/reflect/Method;Ljava/lang/Object;)Ljava/lang/Object;
      67: areturn
      68: aconst_null
      69: areturn
      70: astore_3
      71: new           #15                 // class org/springframework/data/mapping/model/MappingException
      74: dup
      75: ldc           #23                 // String Could not read property %s of %s!
      77: iconst_2
      78: anewarray     #12                 // class java/lang/Object
      81: dup
      82: iconst_0
      83: aload_1
      84: invokevirtual #24                 // Method java/lang/Object.toString:()Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_1
      90: aload_0
      91: getfield      #4                  // Field bean:Ljava/lang/Object;
      94: invokevirtual #24                 // Method java/lang/Object.toString:()Ljava/lang/String;
      97: aastore
      98: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     101: aload_3
     102: invokespecial #17                 // Method org/springframework/data/mapping/model/MappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     105: athrow
    Exception table:
       from    to  target type
           6    34    70   Class java/lang/IllegalStateException
          35    67    70   Class java/lang/IllegalStateException
          68    69    70   Class java/lang/IllegalStateException

  public T getBean();
    Code:
       0: aload_0
       1: getfield      #4                  // Field bean:Ljava/lang/Object;
       4: areturn
}
