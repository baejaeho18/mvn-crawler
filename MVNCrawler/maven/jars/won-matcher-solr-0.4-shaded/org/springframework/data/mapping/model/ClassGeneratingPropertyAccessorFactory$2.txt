Compiled from "ClassGeneratingPropertyAccessorFactory.java"
class org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$2 implements org.springframework.data.mapping.SimpleAssociationHandler {
  final java.util.Set val$hashCodes;

  final java.util.concurrent.atomic.AtomicInteger val$propertyCount;

  final org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory this$0;

  org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory$2(org.springframework.data.mapping.model.ClassGeneratingPropertyAccessorFactory, java.util.Set, java.util.concurrent.atomic.AtomicInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/data/mapping/model/ClassGeneratingPropertyAccessorFactory;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$hashCodes:Ljava/util/Set;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$propertyCount:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void doWithAssociation(org.springframework.data.mapping.Association<? extends org.springframework.data.mapping.PersistentProperty<?>>);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
       4: ifnull        40
       7: aload_0
       8: getfield      #2                  // Field val$hashCodes:Ljava/util/Set;
      11: aload_1
      12: invokevirtual #5                  // Method org/springframework/data/mapping/Association.getInverse:()Lorg/springframework/data/mapping/PersistentProperty;
      15: invokeinterface #6,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getName:()Ljava/lang/String;
      20: invokevirtual #7                  // Method java/lang/String.hashCode:()I
      23: invokestatic  #8                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: invokeinterface #9,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_0
      33: getfield      #3                  // Field val$propertyCount:Ljava/util/concurrent/atomic/AtomicInteger;
      36: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      39: pop
      40: return
}
