Compiled from "ConvertingPropertyAccessor.java"
public class org.springframework.data.mapping.model.ConvertingPropertyAccessor implements org.springframework.data.mapping.PersistentPropertyAccessor {
  private final org.springframework.data.mapping.PersistentPropertyAccessor accessor;

  private final org.springframework.core.convert.ConversionService conversionService;

  public org.springframework.data.mapping.model.ConvertingPropertyAccessor(org.springframework.data.mapping.PersistentPropertyAccessor, org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String PersistentPropertyAccessor must not be null!
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #4                  // String ConversionService must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
      21: aload_0
      22: aload_2
      23: putfield      #6                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: return

  public void setProperty(org.springframework.data.mapping.PersistentProperty<?>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
       4: aload_1
       5: aload_0
       6: aload_2
       7: aload_1
       8: invokeinterface #7,  1            // InterfaceMethod org/springframework/data/mapping/PersistentProperty.getType:()Ljava/lang/Class;
      13: invokespecial #8                  // Method convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      16: invokeinterface #9,  3            // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.setProperty:(Lorg/springframework/data/mapping/PersistentProperty;Ljava/lang/Object;)V
      21: return

  public java.lang.Object getProperty(org.springframework.data.mapping.PersistentProperty<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/lang/Object;
      10: areturn

  public <T> T getProperty(org.springframework.data.mapping.PersistentProperty<?>, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #11                 // String PersistentProperty must not be null!
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #12                 // String Target type must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_0
      14: aload_1
      15: invokevirtual #13                 // Method getProperty:(Lorg/springframework/data/mapping/PersistentProperty;)Ljava/lang/Object;
      18: aload_2
      19: invokespecial #8                  // Method convertIfNecessary:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #5                  // Field accessor:Lorg/springframework/data/mapping/PersistentPropertyAccessor;
       4: invokeinterface #14,  1           // InterfaceMethod org/springframework/data/mapping/PersistentPropertyAccessor.getBean:()Ljava/lang/Object;
       9: areturn

  private <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: aload_1
       5: goto          34
       8: aload_2
       9: aload_1
      10: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      13: invokevirtual #16                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      16: ifeq          23
      19: aload_1
      20: goto          34
      23: aload_0
      24: getfield      #6                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      27: aload_1
      28: aload_2
      29: invokeinterface #17,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      34: areturn
}
