Compiled from "Range.java"
public final class org.springframework.data.domain.Range<T extends java.lang.Comparable<T>> {
  private final T lowerBound;

  private final T upperBound;

  private final boolean lowerInclusive;

  private final boolean upperInclusive;

  public org.springframework.data.domain.Range(T, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: iconst_1
       5: invokespecial #1                  // Method "<init>":(Ljava/lang/Comparable;Ljava/lang/Comparable;ZZ)V
       8: return

  public org.springframework.data.domain.Range(T, T, boolean, boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field lowerBound:Ljava/lang/Comparable;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field upperBound:Ljava/lang/Comparable;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field lowerInclusive:Z
      19: aload_0
      20: iload         4
      22: putfield      #6                  // Field upperInclusive:Z
      25: return

  public boolean contains(T);
    Code:
       0: aload_1
       1: ldc           #7                  // String Reference value must not be null!
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #3                  // Field lowerBound:Ljava/lang/Comparable;
      10: ifnonnull     17
      13: iconst_1
      14: goto          63
      17: aload_0
      18: getfield      #5                  // Field lowerInclusive:Z
      21: ifeq          45
      24: aload_0
      25: getfield      #3                  // Field lowerBound:Ljava/lang/Comparable;
      28: aload_1
      29: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      34: ifgt          41
      37: iconst_1
      38: goto          63
      41: iconst_0
      42: goto          63
      45: aload_0
      46: getfield      #3                  // Field lowerBound:Ljava/lang/Comparable;
      49: aload_1
      50: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      55: ifge          62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: istore_2
      64: aload_0
      65: getfield      #4                  // Field upperBound:Ljava/lang/Comparable;
      68: ifnonnull     75
      71: iconst_1
      72: goto          121
      75: aload_0
      76: getfield      #6                  // Field upperInclusive:Z
      79: ifeq          103
      82: aload_0
      83: getfield      #4                  // Field upperBound:Ljava/lang/Comparable;
      86: aload_1
      87: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      92: iflt          99
      95: iconst_1
      96: goto          121
      99: iconst_0
     100: goto          121
     103: aload_0
     104: getfield      #4                  // Field upperBound:Ljava/lang/Comparable;
     107: aload_1
     108: invokeinterface #9,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
     113: ifle          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: istore_3
     122: iload_2
     123: ifeq          134
     126: iload_3
     127: ifeq          134
     130: iconst_1
     131: goto          135
     134: iconst_0
     135: ireturn

  public T getLowerBound();
    Code:
       0: aload_0
       1: getfield      #3                  // Field lowerBound:Ljava/lang/Comparable;
       4: areturn

  public T getUpperBound();
    Code:
       0: aload_0
       1: getfield      #4                  // Field upperBound:Ljava/lang/Comparable;
       4: areturn

  public boolean isLowerInclusive();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lowerInclusive:Z
       4: ireturn

  public boolean isUpperInclusive();
    Code:
       0: aload_0
       1: getfield      #6                  // Field upperInclusive:Z
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #10                 // class org/springframework/data/domain/Range
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #10                 // class org/springframework/data/domain/Range
      20: astore_2
      21: aload_0
      22: invokevirtual #11                 // Method getLowerBound:()Ljava/lang/Comparable;
      25: astore_3
      26: aload_2
      27: invokevirtual #11                 // Method getLowerBound:()Ljava/lang/Comparable;
      30: astore        4
      32: aload_3
      33: ifnonnull     44
      36: aload         4
      38: ifnull        55
      41: goto          53
      44: aload_3
      45: aload         4
      47: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifne          55
      53: iconst_0
      54: ireturn
      55: aload_0
      56: invokevirtual #13                 // Method getUpperBound:()Ljava/lang/Comparable;
      59: astore        5
      61: aload_2
      62: invokevirtual #13                 // Method getUpperBound:()Ljava/lang/Comparable;
      65: astore        6
      67: aload         5
      69: ifnonnull     80
      72: aload         6
      74: ifnull        92
      77: goto          90
      80: aload         5
      82: aload         6
      84: invokevirtual #12                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      87: ifne          92
      90: iconst_0
      91: ireturn
      92: aload_0
      93: invokevirtual #14                 // Method isLowerInclusive:()Z
      96: aload_2
      97: invokevirtual #14                 // Method isLowerInclusive:()Z
     100: if_icmpeq     105
     103: iconst_0
     104: ireturn
     105: aload_0
     106: invokevirtual #15                 // Method isUpperInclusive:()Z
     109: aload_2
     110: invokevirtual #15                 // Method isUpperInclusive:()Z
     113: if_icmpeq     118
     116: iconst_0
     117: ireturn
     118: iconst_1
     119: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: invokevirtual #11                 // Method getLowerBound:()Ljava/lang/Comparable;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: aload_0
      30: invokevirtual #13                 // Method getUpperBound:()Ljava/lang/Comparable;
      33: astore        4
      35: iload_2
      36: bipush        59
      38: imul
      39: aload         4
      41: ifnonnull     49
      44: bipush        43
      46: goto          54
      49: aload         4
      51: invokevirtual #16                 // Method java/lang/Object.hashCode:()I
      54: iadd
      55: istore_2
      56: iload_2
      57: bipush        59
      59: imul
      60: aload_0
      61: invokevirtual #14                 // Method isLowerInclusive:()Z
      64: ifeq          72
      67: bipush        79
      69: goto          74
      72: bipush        97
      74: iadd
      75: istore_2
      76: iload_2
      77: bipush        59
      79: imul
      80: aload_0
      81: invokevirtual #15                 // Method isUpperInclusive:()Z
      84: ifeq          92
      87: bipush        79
      89: goto          94
      92: bipush        97
      94: iadd
      95: istore_2
      96: iload_2
      97: ireturn

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #19                 // String Range(lowerBound=
       9: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #11                 // Method getLowerBound:()Ljava/lang/Comparable;
      16: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #22                 // String , upperBound=
      21: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #13                 // Method getUpperBound:()Ljava/lang/Comparable;
      28: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #23                 // String , lowerInclusive=
      33: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: invokevirtual #14                 // Method isLowerInclusive:()Z
      40: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      43: ldc           #25                 // String , upperInclusive=
      45: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #15                 // Method isUpperInclusive:()Z
      52: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
      55: ldc           #26                 // String )
      57: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
}
