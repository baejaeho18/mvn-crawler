Compiled from "JpaPersistentPropertyImpl.java"
class org.springframework.data.jpa.mapping.JpaPersistentPropertyImpl extends org.springframework.data.mapping.model.AnnotationBasedPersistentProperty<org.springframework.data.jpa.mapping.JpaPersistentProperty> implements org.springframework.data.jpa.mapping.JpaPersistentProperty {
  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> ASSOCIATION_ANNOTATIONS;

  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> ID_ANNOTATIONS;

  private static final java.util.Collection<java.lang.Class<? extends java.lang.annotation.Annotation>> UPDATEABLE_ANNOTATIONS;

  private final java.lang.Boolean usePropertyAccess;

  private final org.springframework.data.util.TypeInformation<?> associationTargetType;

  private final boolean updateable;

  private final org.springframework.data.jpa.util.JpaMetamodel metamodel;

  public org.springframework.data.jpa.mapping.JpaPersistentPropertyImpl(javax.persistence.metamodel.Metamodel, java.lang.reflect.Field, java.beans.PropertyDescriptor, org.springframework.data.mapping.PersistentEntity<?, org.springframework.data.jpa.mapping.JpaPersistentProperty>, org.springframework.data.mapping.model.SimpleTypeHolder);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload         4
       5: aload         5
       7: invokespecial #1                  // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty."<init>":(Ljava/lang/reflect/Field;Ljava/beans/PropertyDescriptor;Lorg/springframework/data/mapping/PersistentEntity;Lorg/springframework/data/mapping/model/SimpleTypeHolder;)V
      10: aload_1
      11: ldc           #2                  // String Metamodel must not be null!
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_0
      18: invokespecial #4                  // Method detectPropertyAccess:()Ljava/lang/Boolean;
      21: putfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
      24: aload_0
      25: aload_0
      26: invokevirtual #6                  // Method isAssociation:()Z
      29: ifeq          39
      32: aload_0
      33: invokespecial #7                  // Method detectAssociationTargetType:()Lorg/springframework/data/util/TypeInformation;
      36: goto          40
      39: aconst_null
      40: putfield      #8                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      43: aload_0
      44: aload_0
      45: invokespecial #9                  // Method detectUpdatability:()Z
      48: putfield      #10                 // Field updateable:Z
      51: aload_0
      52: new           #11                 // class org/springframework/data/jpa/util/JpaMetamodel
      55: dup
      56: aload_1
      57: invokespecial #12                 // Method org/springframework/data/jpa/util/JpaMetamodel."<init>":(Ljavax/persistence/metamodel/Metamodel;)V
      60: putfield      #13                 // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
      63: return

  public java.lang.Class<?> getActualType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #14                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.getActualType:()Ljava/lang/Class;
      11: goto          23
      14: aload_0
      15: getfield      #8                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      18: invokeinterface #15,  1           // InterfaceMethod org/springframework/data/util/TypeInformation.getType:()Ljava/lang/Class;
      23: areturn

  public java.lang.Iterable<? extends org.springframework.data.util.TypeInformation<?>> getPersistentEntityType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
       4: ifnonnull     14
       7: aload_0
       8: invokespecial #16                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.getPersistentEntityType:()Ljava/lang/Iterable;
      11: goto          21
      14: aload_0
      15: getfield      #8                  // Field associationTargetType:Lorg/springframework/data/util/TypeInformation;
      18: invokestatic  #17                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      21: areturn

  public boolean isIdProperty();
    Code:
       0: getstatic     #18                 // Field ID_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #23                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
      33: ifeq          38
      36: iconst_1
      37: ireturn
      38: goto          9
      41: iconst_0
      42: ireturn

  public boolean isEntity();
    Code:
       0: aload_0
       1: getfield      #13                 // Field metamodel:Lorg/springframework/data/jpa/util/JpaMetamodel;
       4: aload_0
       5: invokevirtual #24                 // Method getActualType:()Ljava/lang/Class;
       8: invokevirtual #25                 // Method org/springframework/data/jpa/util/JpaMetamodel.isJpaManaged:(Ljava/lang/Class;)Z
      11: ireturn

  public boolean isAssociation();
    Code:
       0: getstatic     #26                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          41
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #27                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: ifnull        38
      36: iconst_1
      37: ireturn
      38: goto          9
      41: aload_0
      42: invokevirtual #28                 // Method getType:()Ljava/lang/Class;
      45: ldc           #29                 // class javax/persistence/Embeddable
      47: invokevirtual #30                 // Method java/lang/Class.isAnnotationPresent:(Ljava/lang/Class;)Z
      50: ifeq          55
      53: iconst_1
      54: ireturn
      55: iconst_0
      56: ireturn

  public boolean isTransient();
    Code:
       0: aload_0
       1: ldc           #31                 // class javax/persistence/Transient
       3: invokevirtual #23                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ifne          16
       9: aload_0
      10: invokespecial #32                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.isTransient:()Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected org.springframework.data.mapping.Association<org.springframework.data.jpa.mapping.JpaPersistentProperty> createAssociation();
    Code:
       0: new           #33                 // class org/springframework/data/mapping/Association
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #34                 // Method org/springframework/data/mapping/Association."<init>":(Lorg/springframework/data/mapping/PersistentProperty;Lorg/springframework/data/mapping/PersistentProperty;)V
       9: areturn

  public boolean usePropertyAccess();
    Code:
       0: aload_0
       1: getfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field usePropertyAccess:Ljava/lang/Boolean;
      11: invokevirtual #35                 // Method java/lang/Boolean.booleanValue:()Z
      14: goto          21
      17: aload_0
      18: invokespecial #36                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.usePropertyAccess:()Z
      21: ireturn

  public boolean isVersionProperty();
    Code:
       0: aload_0
       1: ldc           #37                 // class javax/persistence/Version
       3: invokevirtual #23                 // Method isAnnotationPresent:(Ljava/lang/Class;)Z
       6: ireturn

  public boolean isWritable();
    Code:
       0: aload_0
       1: getfield      #10                 // Field updateable:Z
       4: ifeq          18
       7: aload_0
       8: invokespecial #38                 // Method org/springframework/data/mapping/model/AnnotationBasedPersistentProperty.isWritable:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private java.lang.Boolean detectPropertyAccess();
    Code:
       0: aload_0
       1: ldc           #39                 // class org/springframework/data/annotation/AccessType
       3: invokevirtual #27                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       6: checkcast     #39                 // class org/springframework/data/annotation/AccessType
       9: astore_1
      10: aload_1
      11: ifnull        30
      14: getstatic     #40                 // Field org/springframework/data/annotation/AccessType$Type.PROPERTY:Lorg/springframework/data/annotation/AccessType$Type;
      17: aload_1
      18: invokeinterface #41,  1           // InterfaceMethod org/springframework/data/annotation/AccessType.value:()Lorg/springframework/data/annotation/AccessType$Type;
      23: invokevirtual #42                 // Method org/springframework/data/annotation/AccessType$Type.equals:(Ljava/lang/Object;)Z
      26: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: areturn
      30: aload_0
      31: ldc           #44                 // class javax/persistence/Access
      33: invokevirtual #27                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      36: checkcast     #44                 // class javax/persistence/Access
      39: astore_2
      40: aload_2
      41: ifnull        60
      44: getstatic     #45                 // Field javax/persistence/AccessType.PROPERTY:Ljavax/persistence/AccessType;
      47: aload_2
      48: invokeinterface #46,  1           // InterfaceMethod javax/persistence/Access.value:()Ljavax/persistence/AccessType;
      53: invokevirtual #47                 // Method javax/persistence/AccessType.equals:(Ljava/lang/Object;)Z
      56: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      59: areturn
      60: aload_0
      61: ldc           #39                 // class org/springframework/data/annotation/AccessType
      63: invokevirtual #48                 // Method findPropertyOrOwnerAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      66: checkcast     #39                 // class org/springframework/data/annotation/AccessType
      69: astore_1
      70: aload_1
      71: ifnull        90
      74: getstatic     #40                 // Field org/springframework/data/annotation/AccessType$Type.PROPERTY:Lorg/springframework/data/annotation/AccessType$Type;
      77: aload_1
      78: invokeinterface #41,  1           // InterfaceMethod org/springframework/data/annotation/AccessType.value:()Lorg/springframework/data/annotation/AccessType$Type;
      83: invokevirtual #42                 // Method org/springframework/data/annotation/AccessType$Type.equals:(Ljava/lang/Object;)Z
      86: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      89: areturn
      90: aload_0
      91: ldc           #44                 // class javax/persistence/Access
      93: invokevirtual #48                 // Method findPropertyOrOwnerAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      96: checkcast     #44                 // class javax/persistence/Access
      99: astore_2
     100: aload_2
     101: ifnonnull     108
     104: aconst_null
     105: goto          123
     108: getstatic     #45                 // Field javax/persistence/AccessType.PROPERTY:Ljavax/persistence/AccessType;
     111: aload_2
     112: invokeinterface #46,  1           // InterfaceMethod javax/persistence/Access.value:()Ljavax/persistence/AccessType;
     117: invokevirtual #47                 // Method javax/persistence/AccessType.equals:(Ljava/lang/Object;)Z
     120: invokestatic  #43                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     123: areturn

  private org.springframework.data.util.TypeInformation<?> detectAssociationTargetType();
    Code:
       0: getstatic     #26                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          70
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #27                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: astore_3
      34: aload_3
      35: ldc           #49                 // String targetEntity
      37: invokestatic  #50                 // Method org/springframework/core/annotation/AnnotationUtils.getValue:(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
      40: astore        4
      42: aload         4
      44: ifnull        67
      47: getstatic     #51                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      50: aload         4
      52: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      55: ifne          67
      58: aload         4
      60: checkcast     #22                 // class java/lang/Class
      63: invokestatic  #53                 // Method org/springframework/data/util/ClassTypeInformation.from:(Ljava/lang/Class;)Lorg/springframework/data/util/ClassTypeInformation;
      66: areturn
      67: goto          9
      70: aconst_null
      71: areturn

  private final boolean detectUpdatability();
    Code:
       0: getstatic     #54                 // Field UPDATEABLE_ANNOTATIONS:Ljava/util/Collection;
       3: invokeinterface #19,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_1
       9: aload_1
      10: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          58
      18: aload_1
      19: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #22                 // class java/lang/Class
      27: astore_2
      28: aload_0
      29: aload_2
      30: invokevirtual #27                 // Method findAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      33: astore_3
      34: aload_3
      35: ifnull        55
      38: aload_3
      39: ldc           #55                 // String updatable
      41: invokestatic  #50                 // Method org/springframework/core/annotation/AnnotationUtils.getValue:(Ljava/lang/annotation/Annotation;Ljava/lang/String;)Ljava/lang/Object;
      44: getstatic     #56                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      47: invokevirtual #52                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      50: ifeq          55
      53: iconst_0
      54: ireturn
      55: goto          9
      58: iconst_1
      59: ireturn

  static {};
    Code:
       0: new           #57                 // class java/util/HashSet
       3: dup
       4: invokespecial #58                 // Method java/util/HashSet."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc           #59                 // class javax/persistence/OneToMany
      11: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      16: pop
      17: aload_0
      18: ldc           #61                 // class javax/persistence/OneToOne
      20: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      25: pop
      26: aload_0
      27: ldc           #62                 // class javax/persistence/ManyToMany
      29: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      34: pop
      35: aload_0
      36: ldc           #63                 // class javax/persistence/ManyToOne
      38: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_0
      45: ldc           #64                 // class javax/persistence/Embedded
      47: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: aload_0
      54: invokestatic  #65                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      57: putstatic     #26                 // Field ASSOCIATION_ANNOTATIONS:Ljava/util/Collection;
      60: new           #57                 // class java/util/HashSet
      63: dup
      64: invokespecial #58                 // Method java/util/HashSet."<init>":()V
      67: astore_0
      68: aload_0
      69: ldc           #66                 // class javax/persistence/Id
      71: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      76: pop
      77: aload_0
      78: ldc           #67                 // class javax/persistence/EmbeddedId
      80: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_0
      87: invokestatic  #65                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      90: putstatic     #18                 // Field ID_ANNOTATIONS:Ljava/util/Collection;
      93: new           #57                 // class java/util/HashSet
      96: dup
      97: invokespecial #58                 // Method java/util/HashSet."<init>":()V
     100: astore_0
     101: aload_0
     102: ldc           #68                 // class javax/persistence/Column
     104: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     109: pop
     110: aload_0
     111: ldc           #69                 // class javax/persistence/OrderColumn
     113: invokeinterface #60,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     118: pop
     119: aload_0
     120: invokestatic  #65                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     123: putstatic     #54                 // Field UPDATEABLE_ANNOTATIONS:Ljava/util/Collection;
     126: return
}
