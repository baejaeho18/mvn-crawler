Compiled from "JpaPersistentEntityImpl.java"
class org.springframework.data.jpa.mapping.JpaPersistentEntityImpl<T> extends org.springframework.data.mapping.model.BasicPersistentEntity<T, org.springframework.data.jpa.mapping.JpaPersistentProperty> implements org.springframework.data.jpa.mapping.JpaPersistentEntity<T> {
  private static final java.lang.String INVALID_VERSION_ANNOTATION;

  private final org.springframework.data.jpa.provider.ProxyIdAccessor proxyIdAccessor;

  public org.springframework.data.jpa.mapping.JpaPersistentEntityImpl(org.springframework.data.util.TypeInformation<T>, org.springframework.data.jpa.provider.ProxyIdAccessor);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method org/springframework/data/mapping/model/BasicPersistentEntity."<init>":(Lorg/springframework/data/util/TypeInformation;Ljava/util/Comparator;)V
       6: aload_2
       7: ldc           #2                  // String ProxyIdAccessor must not be null!
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: aload_2
      14: putfield      #4                  // Field proxyIdAccessor:Lorg/springframework/data/jpa/provider/ProxyIdAccessor;
      17: return

  protected org.springframework.data.jpa.mapping.JpaPersistentProperty returnPropertyIfBetterIdPropertyCandidateOrNull(org.springframework.data.jpa.mapping.JpaPersistentProperty);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod org/springframework/data/jpa/mapping/JpaPersistentProperty.isIdProperty:()Z
       6: ifeq          13
       9: aload_1
      10: goto          14
      13: aconst_null
      14: areturn

  public org.springframework.data.mapping.IdentifierAccessor getIdentifierAccessor(java.lang.Object);
    Code:
       0: new           #6                  // class org/springframework/data/jpa/mapping/JpaPersistentEntityImpl$JpaProxyAwareIdentifierAccessor
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #4                  // Field proxyIdAccessor:Lorg/springframework/data/jpa/provider/ProxyIdAccessor;
      10: invokespecial #7                  // Method org/springframework/data/jpa/mapping/JpaPersistentEntityImpl$JpaProxyAwareIdentifierAccessor."<init>":(Lorg/springframework/data/jpa/mapping/JpaPersistentEntity;Ljava/lang/Object;Lorg/springframework/data/jpa/provider/ProxyIdAccessor;)V
      13: areturn

  public void verify();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/springframework/data/mapping/model/BasicPersistentEntity.verify:()V
       4: aload_0
       5: invokevirtual #9                  // Method getVersionProperty:()Lorg/springframework/data/mapping/PersistentProperty;
       8: checkcast     #10                 // class org/springframework/data/jpa/mapping/JpaPersistentProperty
      11: astore_1
      12: aload_1
      13: ifnonnull     17
      16: return
      17: aload_1
      18: ldc           #11                 // class org/springframework/data/annotation/Version
      20: invokeinterface #12,  2           // InterfaceMethod org/springframework/data/jpa/mapping/JpaPersistentProperty.isAnnotationPresent:(Ljava/lang/Class;)Z
      25: ifeq          50
      28: new           #13                 // class java/lang/IllegalArgumentException
      31: dup
      32: getstatic     #14                 // Field INVALID_VERSION_ANNOTATION:Ljava/lang/String;
      35: iconst_1
      36: anewarray     #15                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: aload_1
      42: aastore
      43: invokestatic  #16                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      46: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: return

  protected org.springframework.data.mapping.PersistentProperty returnPropertyIfBetterIdPropertyCandidateOrNull(org.springframework.data.mapping.PersistentProperty);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #10                 // class org/springframework/data/jpa/mapping/JpaPersistentProperty
       5: invokevirtual #18                 // Method returnPropertyIfBetterIdPropertyCandidateOrNull:(Lorg/springframework/data/jpa/mapping/JpaPersistentProperty;)Lorg/springframework/data/jpa/mapping/JpaPersistentProperty;
       8: areturn

  static {};
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String %s is annotated with
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: ldc           #11                 // class org/springframework/data/annotation/Version
      14: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      17: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #24                 // String  but needs to use
      22: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #25                 // class javax/persistence/Version
      27: invokevirtual #23                 // Method java/lang/Class.getName:()Ljava/lang/String;
      30: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #26                 // String  to trigger optimistic locking correctly!
      35: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: putstatic     #14                 // Field INVALID_VERSION_ANNOTATION:Ljava/lang/String;
      44: return
}
