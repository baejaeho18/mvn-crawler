Compiled from "SpelAwareProxyProjectionFactory.java"
public class org.springframework.data.projection.SpelAwareProxyProjectionFactory extends org.springframework.data.projection.ProxyProjectionFactory implements org.springframework.beans.factory.BeanFactoryAware {
  private final java.util.Map<java.lang.Class<?>, java.lang.Boolean> typeCache;

  private final org.springframework.expression.spel.standard.SpelExpressionParser parser;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.data.projection.SpelAwareProxyProjectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/data/projection/ProxyProjectionFactory."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field typeCache:Ljava/util/Map;
      15: aload_0
      16: new           #5                  // class org/springframework/expression/spel/standard/SpelExpressionParser
      19: dup
      20: invokespecial #6                  // Method org/springframework/expression/spel/standard/SpelExpressionParser."<init>":()V
      23: putfield      #7                  // Field parser:Lorg/springframework/expression/spel/standard/SpelExpressionParser;
      26: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  protected org.aopalliance.intercept.MethodInterceptor postProcessAccessorInterceptor(org.aopalliance.intercept.MethodInterceptor, java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field typeCache:Ljava/util/Map;
       4: aload_3
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          49
      13: new           #10                 // class org/springframework/data/util/AnnotationDetectionMethodCallback
      16: dup
      17: ldc           #11                 // class org/springframework/beans/factory/annotation/Value
      19: invokespecial #12                 // Method org/springframework/data/util/AnnotationDetectionMethodCallback."<init>":(Ljava/lang/Class;)V
      22: astore        4
      24: aload_3
      25: aload         4
      27: invokestatic  #13                 // Method org/springframework/util/ReflectionUtils.doWithMethods:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
      30: aload_0
      31: getfield      #4                  // Field typeCache:Ljava/util/Map;
      34: aload_3
      35: aload         4
      37: invokevirtual #14                 // Method org/springframework/data/util/AnnotationDetectionMethodCallback.hasFoundAnnotation:()Z
      40: invokestatic  #15                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      43: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: aload_0
      50: getfield      #4                  // Field typeCache:Ljava/util/Map;
      53: aload_3
      54: invokeinterface #17,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #18                 // class java/lang/Boolean
      62: invokevirtual #19                 // Method java/lang/Boolean.booleanValue:()Z
      65: ifeq          89
      68: new           #20                 // class org/springframework/data/projection/SpelEvaluatingMethodInterceptor
      71: dup
      72: aload_1
      73: aload_2
      74: aload_0
      75: getfield      #8                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      78: aload_0
      79: getfield      #7                  // Field parser:Lorg/springframework/expression/spel/standard/SpelExpressionParser;
      82: aload_3
      83: invokespecial #21                 // Method org/springframework/data/projection/SpelEvaluatingMethodInterceptor."<init>":(Lorg/aopalliance/intercept/MethodInterceptor;Ljava/lang/Object;Lorg/springframework/beans/factory/BeanFactory;Lorg/springframework/expression/spel/standard/SpelExpressionParser;Ljava/lang/Class;)V
      86: goto          90
      89: aload_1
      90: areturn

  public org.springframework.data.projection.ProjectionInformation getProjectionInformation(java.lang.Class<?>);
    Code:
       0: new           #22                 // class org/springframework/data/projection/SpelAwareProxyProjectionFactory$SpelAwareProjectionInformation
       3: dup
       4: aload_1
       5: invokespecial #23                 // Method org/springframework/data/projection/SpelAwareProxyProjectionFactory$SpelAwareProjectionInformation."<init>":(Ljava/lang/Class;)V
       8: areturn

  public java.util.List getInputProperties(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/springframework/data/projection/ProxyProjectionFactory.getInputProperties:(Ljava/lang/Class;)Ljava/util/List;
       5: areturn

  public java.lang.Object createProjection(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #25                 // Method org/springframework/data/projection/ProxyProjectionFactory.createProjection:(Ljava/lang/Class;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object createProjection(java.lang.Class, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #26                 // Method org/springframework/data/projection/ProxyProjectionFactory.createProjection:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public void registerMethodInvokerFactory(org.springframework.data.projection.MethodInterceptorFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method org/springframework/data/projection/ProxyProjectionFactory.registerMethodInvokerFactory:(Lorg/springframework/data/projection/MethodInterceptorFactory;)V
       5: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #28                 // Method org/springframework/data/projection/ProxyProjectionFactory.setBeanClassLoader:(Ljava/lang/ClassLoader;)V
       5: return

  public void setResourceLoader(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #29                 // Method org/springframework/data/projection/ProxyProjectionFactory.setResourceLoader:(Lorg/springframework/core/io/ResourceLoader;)V
       5: return
}
