Compiled from "ProxyProjectionFactory.java"
class org.springframework.data.projection.ProxyProjectionFactory implements org.springframework.data.projection.ProjectionFactory,org.springframework.context.ResourceLoaderAware,org.springframework.beans.factory.BeanClassLoaderAware {
  private static final boolean IS_JAVA_8;

  private final java.util.List<org.springframework.data.projection.MethodInterceptorFactory> factories;

  private final org.springframework.core.convert.ConversionService conversionService;

  private java.lang.ClassLoader classLoader;

  protected org.springframework.data.projection.ProxyProjectionFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field factories:Ljava/util/List;
      15: aload_0
      16: getfield      #4                  // Field factories:Ljava/util/List;
      19: getstatic     #5                  // Field org/springframework/data/projection/ProxyProjectionFactory$MapAccessingMethodInterceptorFactory.INSTANCE:Lorg/springframework/data/projection/ProxyProjectionFactory$MapAccessingMethodInterceptorFactory;
      22: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      27: pop
      28: aload_0
      29: getfield      #4                  // Field factories:Ljava/util/List;
      32: getstatic     #7                  // Field org/springframework/data/projection/ProxyProjectionFactory$PropertyAccessingMethodInvokerFactory.INSTANCE:Lorg/springframework/data/projection/ProxyProjectionFactory$PropertyAccessingMethodInvokerFactory;
      35: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: new           #8                  // class org/springframework/core/convert/support/DefaultConversionService
      45: dup
      46: invokespecial #9                  // Method org/springframework/core/convert/support/DefaultConversionService."<init>":()V
      49: putfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      52: return

  public void setResourceLoader(org.springframework.core.io.ResourceLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  1           // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
       7: putfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
      10: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void registerMethodInvokerFactory(org.springframework.data.projection.MethodInterceptorFactory);
    Code:
       0: aload_1
       1: ldc           #13                 // String MethodInterceptorFactory must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field factories:Ljava/util/List;
      10: iconst_0
      11: aload_1
      12: invokeinterface #15,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      17: return

  public <T> T createProjection(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #16                 // String Projection type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #17                 // Method java/lang/Class.isInterface:()Z
      10: ldc           #18                 // String Projection type must be an interface!
      12: invokestatic  #19                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      15: aload_2
      16: ifnull        27
      19: aload_1
      20: aload_2
      21: invokevirtual #20                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      24: ifeq          29
      27: aload_2
      28: areturn
      29: new           #21                 // class org/springframework/aop/framework/ProxyFactory
      32: dup
      33: invokespecial #22                 // Method org/springframework/aop/framework/ProxyFactory."<init>":()V
      36: astore_3
      37: aload_3
      38: aload_2
      39: invokevirtual #23                 // Method org/springframework/aop/framework/ProxyFactory.setTarget:(Ljava/lang/Object;)V
      42: aload_3
      43: iconst_1
      44: invokevirtual #24                 // Method org/springframework/aop/framework/ProxyFactory.setOpaque:(Z)V
      47: aload_3
      48: iconst_2
      49: anewarray     #25                 // class java/lang/Class
      52: dup
      53: iconst_0
      54: aload_1
      55: aastore
      56: dup
      57: iconst_1
      58: ldc           #26                 // class org/springframework/data/projection/TargetAware
      60: aastore
      61: invokevirtual #27                 // Method org/springframework/aop/framework/ProxyFactory.setInterfaces:([Ljava/lang/Class;)V
      64: getstatic     #28                 // Field IS_JAVA_8:Z
      67: ifeq          81
      70: aload_3
      71: new           #29                 // class org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor
      74: dup
      75: invokespecial #30                 // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor."<init>":()V
      78: invokevirtual #31                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
      81: aload_3
      82: new           #32                 // class org/springframework/data/projection/ProxyProjectionFactory$TargetAwareMethodInterceptor
      85: dup
      86: aload_2
      87: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokespecial #34                 // Method org/springframework/data/projection/ProxyProjectionFactory$TargetAwareMethodInterceptor."<init>":(Ljava/lang/Class;)V
      93: invokevirtual #31                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
      96: aload_3
      97: aload_0
      98: aload_2
      99: aload_1
     100: invokespecial #35                 // Method getMethodInterceptor:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/aopalliance/intercept/MethodInterceptor;
     103: invokevirtual #31                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
     106: aload_3
     107: aload_0
     108: getfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
     111: ifnonnull     120
     114: invokestatic  #36                 // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
     117: goto          124
     120: aload_0
     121: getfield      #12                 // Field classLoader:Ljava/lang/ClassLoader;
     124: invokevirtual #37                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     127: areturn

  public <T> T createProjection(java.lang.Class<T>);
    Code:
       0: aload_1
       1: ldc           #16                 // String Projection type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: new           #38                 // class java/util/HashMap
      11: dup
      12: invokespecial #39                 // Method java/util/HashMap."<init>":()V
      15: invokevirtual #40                 // Method createProjection:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn

  public java.util.List<java.lang.String> getInputProperties(java.lang.Class<?>);
    Code:
       0: aload_1
       1: ldc           #16                 // String Projection type must not be null!
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: astore_2
      14: aload_0
      15: aload_1
      16: invokevirtual #41                 // Method getProjectionInformation:(Ljava/lang/Class;)Lorg/springframework/data/projection/ProjectionInformation;
      19: invokeinterface #42,  1           // InterfaceMethod org/springframework/data/projection/ProjectionInformation.getInputProperties:()Ljava/util/List;
      24: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      29: astore_3
      30: aload_3
      31: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          65
      39: aload_3
      40: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #46                 // class java/beans/PropertyDescriptor
      48: astore        4
      50: aload_2
      51: aload         4
      53: invokevirtual #47                 // Method java/beans/PropertyDescriptor.getName:()Ljava/lang/String;
      56: invokeinterface #6,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: goto          30
      65: aload_2
      66: areturn

  public org.springframework.data.projection.ProjectionInformation getProjectionInformation(java.lang.Class<?>);
    Code:
       0: new           #48                 // class org/springframework/data/projection/DefaultProjectionInformation
       3: dup
       4: aload_1
       5: invokespecial #49                 // Method org/springframework/data/projection/DefaultProjectionInformation."<init>":(Ljava/lang/Class;)V
       8: areturn

  private org.aopalliance.intercept.MethodInterceptor getMethodInterceptor(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #50                 // Method getFactoryFor:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/springframework/data/projection/MethodInterceptorFactory;
       6: aload_1
       7: aload_2
       8: invokeinterface #51,  3           // InterfaceMethod org/springframework/data/projection/MethodInterceptorFactory.createMethodInterceptor:(Ljava/lang/Object;Ljava/lang/Class;)Lorg/aopalliance/intercept/MethodInterceptor;
      13: astore_3
      14: new           #52                 // class org/springframework/data/projection/ProjectingMethodInterceptor
      17: dup
      18: aload_0
      19: aload_0
      20: aload_3
      21: aload_1
      22: aload_2
      23: invokevirtual #53                 // Method postProcessAccessorInterceptor:(Lorg/aopalliance/intercept/MethodInterceptor;Ljava/lang/Object;Ljava/lang/Class;)Lorg/aopalliance/intercept/MethodInterceptor;
      26: aload_0
      27: getfield      #10                 // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      30: invokespecial #54                 // Method org/springframework/data/projection/ProjectingMethodInterceptor."<init>":(Lorg/springframework/data/projection/ProjectionFactory;Lorg/aopalliance/intercept/MethodInterceptor;Lorg/springframework/core/convert/ConversionService;)V
      33: areturn

  private org.springframework.data.projection.MethodInterceptorFactory getFactoryFor(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field factories:Ljava/util/List;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          48
      19: aload_3
      20: invokeinterface #45,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #55                 // class org/springframework/data/projection/MethodInterceptorFactory
      28: astore        4
      30: aload         4
      32: aload_1
      33: aload_2
      34: invokeinterface #56,  3           // InterfaceMethod org/springframework/data/projection/MethodInterceptorFactory.supports:(Ljava/lang/Object;Ljava/lang/Class;)Z
      39: ifeq          45
      42: aload         4
      44: areturn
      45: goto          10
      48: new           #57                 // class java/lang/IllegalStateException
      51: dup
      52: ldc           #58                 // String No MethodInterceptorFactory found for type
      54: aload_1
      55: invokevirtual #33                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      58: invokevirtual #59                 // Method java/lang/Class.getName:()Ljava/lang/String;
      61: invokevirtual #60                 // Method java/lang/String.concat:(Ljava/lang/String;)Ljava/lang/String;
      64: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      67: athrow

  protected org.aopalliance.intercept.MethodInterceptor postProcessAccessorInterceptor(org.aopalliance.intercept.MethodInterceptor, java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_1
       1: areturn

  static {};
    Code:
       0: ldc           #62                 // String java.util.Optional
       2: ldc           #63                 // class org/springframework/data/projection/ProxyProjectionFactory
       4: invokevirtual #64                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #65                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #28                 // Field IS_JAVA_8:Z
      13: return
}
