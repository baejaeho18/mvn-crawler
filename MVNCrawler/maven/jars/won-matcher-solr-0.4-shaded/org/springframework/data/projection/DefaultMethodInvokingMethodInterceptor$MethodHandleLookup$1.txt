Compiled from "DefaultMethodInvokingMethodInterceptor.java"
final class org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$1 extends org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup {
  private final java.lang.reflect.Constructor<java.lang.invoke.MethodHandles$Lookup> constructor;

  org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor$MethodHandleLookup$1(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup."<init>":(Ljava/lang/String;ILorg/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$1;)V
       7: aload_0
       8: invokestatic  #2                  // Method org/springframework/data/projection/DefaultMethodInvokingMethodInterceptor$MethodHandleLookup.access$100:()Ljava/lang/reflect/Constructor;
      11: putfield      #3                  // Field constructor:Ljava/lang/reflect/Constructor;
      14: return

  java.lang.invoke.MethodHandle lookup(java.lang.reflect.Method) throws java.lang.ReflectiveOperationException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field constructor:Ljava/lang/reflect/Constructor;
       4: ifnonnull     17
       7: new           #4                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #5                  // String Could not obtain MethodHandles.lookup constructor
      13: invokespecial #6                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field constructor:Ljava/lang/reflect/Constructor;
      21: iconst_1
      22: anewarray     #7                  // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_1
      28: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      31: aastore
      32: invokevirtual #9                  // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #10                 // class java/lang/invoke/MethodHandles$Lookup
      38: aload_1
      39: aload_1
      40: invokevirtual #8                  // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      43: invokevirtual #11                 // Method java/lang/invoke/MethodHandles$Lookup.unreflectSpecial:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/invoke/MethodHandle;
      46: areturn

  boolean isAvailable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field constructor:Ljava/lang/reflect/Constructor;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn
}
