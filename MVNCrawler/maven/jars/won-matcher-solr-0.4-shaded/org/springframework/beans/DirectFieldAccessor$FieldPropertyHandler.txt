Compiled from "DirectFieldAccessor.java"
class org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler extends org.springframework.beans.AbstractNestablePropertyAccessor$PropertyHandler {
  private final java.lang.reflect.Field field;

  final org.springframework.beans.DirectFieldAccessor this$0;

  public org.springframework.beans.DirectFieldAccessor$FieldPropertyHandler(org.springframework.beans.DirectFieldAccessor, java.lang.reflect.Field);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/beans/DirectFieldAccessor;
       5: aload_0
       6: aload_2
       7: invokevirtual #2                  // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      10: iconst_1
      11: iconst_1
      12: invokespecial #3                  // Method org/springframework/beans/AbstractNestablePropertyAccessor$PropertyHandler."<init>":(Ljava/lang/Class;ZZ)V
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field field:Ljava/lang/reflect/Field;
      20: return

  public org.springframework.core.convert.TypeDescriptor toTypeDescriptor();
    Code:
       0: new           #5                  // class org/springframework/core/convert/TypeDescriptor
       3: dup
       4: aload_0
       5: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
       8: invokespecial #6                  // Method org/springframework/core/convert/TypeDescriptor."<init>":(Ljava/lang/reflect/Field;)V
      11: areturn

  public org.springframework.core.ResolvableType getResolvableType();
    Code:
       0: aload_0
       1: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
       4: invokestatic  #7                  // Method org/springframework/core/ResolvableType.forField:(Ljava/lang/reflect/Field;)Lorg/springframework/core/ResolvableType;
       7: areturn

  public org.springframework.core.convert.TypeDescriptor nested(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
       4: iload_1
       5: invokestatic  #8                  // Method org/springframework/core/convert/TypeDescriptor.nested:(Ljava/lang/reflect/Field;I)Lorg/springframework/core/convert/TypeDescriptor;
       8: areturn

  public java.lang.Object getValue() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
       4: invokestatic  #9                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
       7: aload_0
       8: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
      11: aload_0
      12: getfield      #1                  // Field this$0:Lorg/springframework/beans/DirectFieldAccessor;
      15: invokevirtual #10                 // Method org/springframework/beans/DirectFieldAccessor.getWrappedInstance:()Ljava/lang/Object;
      18: invokevirtual #11                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: areturn
      22: astore_1
      23: new           #13                 // class org/springframework/beans/InvalidPropertyException
      26: dup
      27: aload_0
      28: getfield      #1                  // Field this$0:Lorg/springframework/beans/DirectFieldAccessor;
      31: invokevirtual #14                 // Method org/springframework/beans/DirectFieldAccessor.getWrappedClass:()Ljava/lang/Class;
      34: aload_0
      35: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
      38: invokevirtual #15                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      41: ldc           #16                 // String Field is not accessible
      43: aload_1
      44: invokespecial #17                 // Method org/springframework/beans/InvalidPropertyException."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      47: athrow
    Exception table:
       from    to  target type
           0    21    22   Class java/lang/IllegalAccessException

  public void setValue(java.lang.Object, java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
       4: invokestatic  #9                  // Method org/springframework/util/ReflectionUtils.makeAccessible:(Ljava/lang/reflect/Field;)V
       7: aload_0
       8: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
      11: aload_1
      12: aload_2
      13: invokevirtual #18                 // Method java/lang/reflect/Field.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      16: goto          45
      19: astore_3
      20: new           #13                 // class org/springframework/beans/InvalidPropertyException
      23: dup
      24: aload_0
      25: getfield      #1                  // Field this$0:Lorg/springframework/beans/DirectFieldAccessor;
      28: invokevirtual #14                 // Method org/springframework/beans/DirectFieldAccessor.getWrappedClass:()Ljava/lang/Class;
      31: aload_0
      32: getfield      #4                  // Field field:Ljava/lang/reflect/Field;
      35: invokevirtual #15                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      38: ldc           #16                 // String Field is not accessible
      40: aload_3
      41: invokespecial #17                 // Method org/springframework/beans/InvalidPropertyException."<init>":(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/IllegalAccessException
}
