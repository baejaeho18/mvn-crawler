Compiled from "SingleConnectionFactory.java"
public class org.springframework.jms.connection.SingleConnectionFactory implements javax.jms.ConnectionFactory,javax.jms.QueueConnectionFactory,javax.jms.TopicConnectionFactory,javax.jms.ExceptionListener,org.springframework.beans.factory.InitializingBean,org.springframework.beans.factory.DisposableBean {
  protected final org.apache.commons.logging.Log logger;

  private javax.jms.ConnectionFactory targetConnectionFactory;

  private java.lang.String clientId;

  private javax.jms.ExceptionListener exceptionListener;

  private boolean reconnectOnException;

  private javax.jms.Connection connection;

  private java.lang.Boolean pubSubMode;

  private org.springframework.jms.connection.SingleConnectionFactory$AggregatedExceptionListener aggregatedExceptionListener;

  private int startedCount;

  private final java.lang.Object connectionMonitor;

  public org.springframework.jms.connection.SingleConnectionFactory();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #7                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field reconnectOnException:Z
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field startedCount:I
      25: aload_0
      26: new           #10                 // class java/lang/Object
      29: dup
      30: invokespecial #5                  // Method java/lang/Object."<init>":()V
      33: putfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
      36: return

  public org.springframework.jms.connection.SingleConnectionFactory(javax.jms.Connection);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #7                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field reconnectOnException:Z
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field startedCount:I
      25: aload_0
      26: new           #10                 // class java/lang/Object
      29: dup
      30: invokespecial #5                  // Method java/lang/Object."<init>":()V
      33: putfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
      36: aload_1
      37: ldc           #11                 // String Target Connection must not be null
      39: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      42: aload_0
      43: aload_1
      44: putfield      #1                  // Field connection:Ljavax/jms/Connection;
      47: return

  public org.springframework.jms.connection.SingleConnectionFactory(javax.jms.ConnectionFactory);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #7                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: iconst_0
      17: putfield      #9                  // Field reconnectOnException:Z
      20: aload_0
      21: iconst_0
      22: putfield      #2                  // Field startedCount:I
      25: aload_0
      26: new           #10                 // class java/lang/Object
      29: dup
      30: invokespecial #5                  // Method java/lang/Object."<init>":()V
      33: putfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
      36: aload_1
      37: ldc           #13                 // String Target ConnectionFactory must not be null
      39: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      42: aload_0
      43: aload_1
      44: putfield      #14                 // Field targetConnectionFactory:Ljavax/jms/ConnectionFactory;
      47: return

  public void setTargetConnectionFactory(javax.jms.ConnectionFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field targetConnectionFactory:Ljavax/jms/ConnectionFactory;
       5: return

  public javax.jms.ConnectionFactory getTargetConnectionFactory();
    Code:
       0: aload_0
       1: getfield      #14                 // Field targetConnectionFactory:Ljavax/jms/ConnectionFactory;
       4: areturn

  public void setClientId(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field clientId:Ljava/lang/String;
       5: return

  protected java.lang.String getClientId();
    Code:
       0: aload_0
       1: getfield      #15                 // Field clientId:Ljava/lang/String;
       4: areturn

  public void setExceptionListener(javax.jms.ExceptionListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       5: return

  protected javax.jms.ExceptionListener getExceptionListener();
    Code:
       0: aload_0
       1: getfield      #16                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       4: areturn

  public void setReconnectOnException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field reconnectOnException:Z
       5: return

  protected boolean isReconnectOnException();
    Code:
       0: aload_0
       1: getfield      #9                  // Field reconnectOnException:Z
       4: ireturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field connection:Ljavax/jms/Connection;
       4: ifnonnull     24
       7: aload_0
       8: invokevirtual #17                 // Method getTargetConnectionFactory:()Ljavax/jms/ConnectionFactory;
      11: ifnonnull     24
      14: new           #18                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #19                 // String Target Connection or ConnectionFactory is required
      20: invokespecial #20                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: return

  public javax.jms.Connection createConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #21                 // Method getConnection:()Ljavax/jms/Connection;
       5: invokevirtual #22                 // Method getSharedConnectionProxy:(Ljavax/jms/Connection;)Ljavax/jms/Connection;
       8: areturn

  public javax.jms.Connection createConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #23                 // class javax/jms/IllegalStateException
       3: dup
       4: ldc           #24                 // String SingleConnectionFactory does not support custom username and password
       6: invokespecial #25                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.jms.QueueConnection createQueueConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      11: putfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      14: aload_0
      15: invokevirtual #28                 // Method createConnection:()Ljavax/jms/Connection;
      18: astore_1
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: aload_1
      30: instanceof    #29                 // class javax/jms/QueueConnection
      33: ifne          63
      36: new           #23                 // class javax/jms/IllegalStateException
      39: dup
      40: new           #30                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #32                 // String This SingleConnectionFactory does not hold a QueueConnection but rather:
      49: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #25                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_1
      64: checkcast     #29                 // class javax/jms/QueueConnection
      67: areturn
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public javax.jms.QueueConnection createQueueConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #23                 // class javax/jms/IllegalStateException
       3: dup
       4: ldc           #24                 // String SingleConnectionFactory does not support custom username and password
       6: invokespecial #25                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public javax.jms.TopicConnection createTopicConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getstatic     #36                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      11: putfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      14: aload_0
      15: invokevirtual #28                 // Method createConnection:()Ljavax/jms/Connection;
      18: astore_1
      19: aload_2
      20: monitorexit
      21: goto          29
      24: astore_3
      25: aload_2
      26: monitorexit
      27: aload_3
      28: athrow
      29: aload_1
      30: instanceof    #37                 // class javax/jms/TopicConnection
      33: ifne          63
      36: new           #23                 // class javax/jms/IllegalStateException
      39: dup
      40: new           #30                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #38                 // String This SingleConnectionFactory does not hold a TopicConnection but rather:
      49: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      56: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #25                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: aload_1
      64: checkcast     #37                 // class javax/jms/TopicConnection
      67: areturn
    Exception table:
       from    to  target type
           7    21    24   any
          24    27    24   any

  public javax.jms.TopicConnection createTopicConnection(java.lang.String, java.lang.String) throws javax.jms.JMSException;
    Code:
       0: new           #23                 // class javax/jms/IllegalStateException
       3: dup
       4: ldc           #24                 // String SingleConnectionFactory does not support custom username and password
       6: invokespecial #25                 // Method javax/jms/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected javax.jms.Connection getConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      11: ifnonnull     18
      14: aload_0
      15: invokevirtual #39                 // Method initConnection:()V
      18: aload_0
      19: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      22: aload_1
      23: monitorexit
      24: areturn
      25: astore_2
      26: aload_1
      27: monitorexit
      28: aload_2
      29: athrow
    Exception table:
       from    to  target type
           7    24    25   any
          25    28    25   any

  public void initConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getTargetConnectionFactory:()Ljavax/jms/ConnectionFactory;
       4: ifnonnull     17
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #41                 // String \'targetConnectionFactory\' is required for lazily initializing a Connection
      13: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      28: ifnull        39
      31: aload_0
      32: aload_0
      33: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      36: invokevirtual #43                 // Method closeConnection:(Ljavax/jms/Connection;)V
      39: aload_0
      40: aload_0
      41: invokevirtual #44                 // Method doCreateConnection:()Ljavax/jms/Connection;
      44: putfield      #1                  // Field connection:Ljavax/jms/Connection;
      47: aload_0
      48: aload_0
      49: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      52: invokevirtual #45                 // Method prepareConnection:(Ljavax/jms/Connection;)V
      55: aload_0
      56: getfield      #2                  // Field startedCount:I
      59: ifle          71
      62: aload_0
      63: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      66: invokeinterface #46,  1           // InterfaceMethod javax/jms/Connection.start:()V
      71: aload_0
      72: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      75: invokeinterface #47,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      80: ifeq          114
      83: aload_0
      84: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      87: new           #30                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #48                 // String Established shared JMS Connection:
      96: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: getfield      #1                  // Field connection:Ljavax/jms/Connection;
     103: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     114: aload_1
     115: monitorexit
     116: goto          124
     119: astore_2
     120: aload_1
     121: monitorexit
     122: aload_2
     123: athrow
     124: return
    Exception table:
       from    to  target type
          24   116   119   any
         119   122   119   any

  public void onException(javax.jms.JMSException);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #50                 // String Encountered a JMSException - resetting the underlying JMS Connection
       6: aload_1
       7: invokeinterface #51,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      12: aload_0
      13: invokevirtual #52                 // Method resetConnection:()V
      16: return

  public void destroy();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method resetConnection:()V
       4: return

  public void resetConnection();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      11: ifnull        22
      14: aload_0
      15: aload_0
      16: getfield      #1                  // Field connection:Ljavax/jms/Connection;
      19: invokevirtual #43                 // Method closeConnection:(Ljavax/jms/Connection;)V
      22: aload_0
      23: aconst_null
      24: putfield      #1                  // Field connection:Ljavax/jms/Connection;
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           7    29    32   any
          32    35    32   any

  protected javax.jms.Connection doCreateConnection() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method getTargetConnectionFactory:()Ljavax/jms/ConnectionFactory;
       4: astore_1
       5: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       8: aload_0
       9: getfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      12: invokevirtual #53                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      15: ifeq          35
      18: aload_1
      19: instanceof    #54                 // class javax/jms/QueueConnectionFactory
      22: ifeq          35
      25: aload_1
      26: checkcast     #54                 // class javax/jms/QueueConnectionFactory
      29: invokeinterface #55,  1           // InterfaceMethod javax/jms/QueueConnectionFactory.createQueueConnection:()Ljavax/jms/QueueConnection;
      34: areturn
      35: getstatic     #36                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      38: aload_0
      39: getfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      42: invokevirtual #53                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      45: ifeq          65
      48: aload_1
      49: instanceof    #56                 // class javax/jms/TopicConnectionFactory
      52: ifeq          65
      55: aload_1
      56: checkcast     #56                 // class javax/jms/TopicConnectionFactory
      59: invokeinterface #57,  1           // InterfaceMethod javax/jms/TopicConnectionFactory.createTopicConnection:()Ljavax/jms/TopicConnection;
      64: areturn
      65: aload_0
      66: invokevirtual #17                 // Method getTargetConnectionFactory:()Ljavax/jms/ConnectionFactory;
      69: invokeinterface #58,  1           // InterfaceMethod javax/jms/ConnectionFactory.createConnection:()Ljavax/jms/Connection;
      74: areturn

  protected void prepareConnection(javax.jms.Connection) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #59                 // Method getClientId:()Ljava/lang/String;
       4: ifnull        17
       7: aload_1
       8: aload_0
       9: invokevirtual #59                 // Method getClientId:()Ljava/lang/String;
      12: invokeinterface #60,  2           // InterfaceMethod javax/jms/Connection.setClientID:(Ljava/lang/String;)V
      17: aload_0
      18: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
      21: ifnull        37
      24: aload_1
      25: aload_0
      26: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
      29: invokeinterface #61,  2           // InterfaceMethod javax/jms/Connection.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
      34: goto          120
      37: aload_0
      38: invokevirtual #62                 // Method getExceptionListener:()Ljavax/jms/ExceptionListener;
      41: ifnonnull     51
      44: aload_0
      45: invokevirtual #63                 // Method isReconnectOnException:()Z
      48: ifeq          120
      51: aload_0
      52: invokevirtual #62                 // Method getExceptionListener:()Ljavax/jms/ExceptionListener;
      55: astore_2
      56: aload_0
      57: invokevirtual #63                 // Method isReconnectOnException:()Z
      60: ifeq          113
      63: aload_0
      64: new           #64                 // class org/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener
      67: dup
      68: aload_0
      69: aconst_null
      70: invokespecial #65                 // Method org/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener."<init>":(Lorg/springframework/jms/connection/SingleConnectionFactory;Lorg/springframework/jms/connection/SingleConnectionFactory$1;)V
      73: putfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
      76: aload_0
      77: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
      80: getfield      #66                 // Field org/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener.delegates:Ljava/util/Set;
      83: aload_0
      84: invokeinterface #67,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      89: pop
      90: aload_2
      91: ifnull        108
      94: aload_0
      95: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
      98: getfield      #66                 // Field org/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener.delegates:Ljava/util/Set;
     101: aload_2
     102: invokeinterface #67,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     107: pop
     108: aload_0
     109: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
     112: astore_2
     113: aload_1
     114: aload_2
     115: invokeinterface #61,  2           // InterfaceMethod javax/jms/Connection.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
     120: return

  protected javax.jms.Session getSession(javax.jms.Connection, java.lang.Integer) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: areturn

  protected javax.jms.Session createSession(javax.jms.Connection, java.lang.Integer) throws javax.jms.JMSException;
    Code:
       0: aload_2
       1: invokevirtual #68                 // Method java/lang/Integer.intValue:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: istore_3
      13: iload_3
      14: ifeq          21
      17: iconst_1
      18: goto          25
      21: aload_2
      22: invokevirtual #68                 // Method java/lang/Integer.intValue:()I
      25: istore        4
      27: getstatic     #26                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
      30: aload_0
      31: getfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      34: invokevirtual #53                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      37: ifeq          60
      40: aload_1
      41: instanceof    #29                 // class javax/jms/QueueConnection
      44: ifeq          60
      47: aload_1
      48: checkcast     #29                 // class javax/jms/QueueConnection
      51: iload_3
      52: iload         4
      54: invokeinterface #70,  3           // InterfaceMethod javax/jms/QueueConnection.createQueueSession:(ZI)Ljavax/jms/QueueSession;
      59: areturn
      60: getstatic     #36                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      63: aload_0
      64: getfield      #27                 // Field pubSubMode:Ljava/lang/Boolean;
      67: invokevirtual #53                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      70: ifeq          93
      73: aload_1
      74: instanceof    #37                 // class javax/jms/TopicConnection
      77: ifeq          93
      80: aload_1
      81: checkcast     #37                 // class javax/jms/TopicConnection
      84: iload_3
      85: iload         4
      87: invokeinterface #71,  3           // InterfaceMethod javax/jms/TopicConnection.createTopicSession:(ZI)Ljavax/jms/TopicSession;
      92: areturn
      93: aload_1
      94: iload_3
      95: iload         4
      97: invokeinterface #72,  3           // InterfaceMethod javax/jms/Connection.createSession:(ZI)Ljavax/jms/Session;
     102: areturn

  protected void closeConnection(javax.jms.Connection);
    Code:
       0: aload_0
       1: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #73,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          40
      12: aload_0
      13: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #30                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #74                 // String Closing shared JMS Connection:
      25: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #75,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #2                  // Field startedCount:I
      44: ifle          53
      47: aload_1
      48: invokeinterface #76,  1           // InterfaceMethod javax/jms/Connection.stop:()V
      53: aload_1
      54: invokeinterface #77,  1           // InterfaceMethod javax/jms/Connection.close:()V
      59: goto          71
      62: astore_2
      63: aload_1
      64: invokeinterface #77,  1           // InterfaceMethod javax/jms/Connection.close:()V
      69: aload_2
      70: athrow
      71: goto          119
      74: astore_2
      75: aload_0
      76: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
      79: new           #30                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #78                 // String Ignoring Connection state exception - assuming already closed:
      88: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      95: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #75,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     103: goto          119
     106: astore_2
     107: aload_0
     108: getfield      #8                  // Field logger:Lorg/apache/commons/logging/Log;
     111: ldc           #80                 // String Could not close shared JMS Connection
     113: aload_2
     114: invokeinterface #81,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     119: return
    Exception table:
       from    to  target type
          40    53    62   any
          40    71    74   Class javax/jms/IllegalStateException
          40    71   106   Class java/lang/Throwable

  protected javax.jms.Connection getSharedConnectionProxy(javax.jms.Connection);
    Code:
       0: new           #82                 // class java/util/ArrayList
       3: dup
       4: iconst_3
       5: invokespecial #83                 // Method java/util/ArrayList."<init>":(I)V
       8: astore_2
       9: aload_2
      10: ldc           #84                 // class javax/jms/Connection
      12: invokeinterface #85,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      17: pop
      18: aload_1
      19: instanceof    #29                 // class javax/jms/QueueConnection
      22: ifeq          34
      25: aload_2
      26: ldc           #29                 // class javax/jms/QueueConnection
      28: invokeinterface #85,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_1
      35: instanceof    #37                 // class javax/jms/TopicConnection
      38: ifeq          50
      41: aload_2
      42: ldc           #37                 // class javax/jms/TopicConnection
      44: invokeinterface #85,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: ldc           #84                 // class javax/jms/Connection
      52: invokevirtual #86                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      55: aload_2
      56: invokestatic  #87                 // Method org/springframework/util/ClassUtils.toClassArray:(Ljava/util/Collection;)[Ljava/lang/Class;
      59: new           #88                 // class org/springframework/jms/connection/SingleConnectionFactory$SharedConnectionInvocationHandler
      62: dup
      63: aload_0
      64: aconst_null
      65: invokespecial #89                 // Method org/springframework/jms/connection/SingleConnectionFactory$SharedConnectionInvocationHandler."<init>":(Lorg/springframework/jms/connection/SingleConnectionFactory;Lorg/springframework/jms/connection/SingleConnectionFactory$1;)V
      68: invokestatic  #90                 // Method java/lang/reflect/Proxy.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;
      71: checkcast     #84                 // class javax/jms/Connection
      74: areturn

  static java.lang.Object access$200(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionMonitor:Ljava/lang/Object;
       4: areturn

  static org.springframework.jms.connection.SingleConnectionFactory$AggregatedExceptionListener access$300(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #3                  // Field aggregatedExceptionListener:Lorg/springframework/jms/connection/SingleConnectionFactory$AggregatedExceptionListener;
       4: areturn

  static int access$400(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #2                  // Field startedCount:I
       4: ireturn

  static javax.jms.Connection access$500(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: getfield      #1                  // Field connection:Ljavax/jms/Connection;
       4: areturn

  static int access$408(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field startedCount:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field startedCount:I
      11: ireturn

  static int access$410(org.springframework.jms.connection.SingleConnectionFactory);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field startedCount:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #2                  // Field startedCount:I
      11: ireturn
}
