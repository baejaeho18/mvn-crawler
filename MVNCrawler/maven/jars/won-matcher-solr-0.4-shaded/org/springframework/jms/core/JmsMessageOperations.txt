Compiled from "JmsMessageOperations.java"
public interface org.springframework.jms.core.JmsMessageOperations extends org.springframework.messaging.core.MessageSendingOperations<javax.jms.Destination>, org.springframework.messaging.core.MessageReceivingOperations<javax.jms.Destination>, org.springframework.messaging.core.MessageRequestReplyOperations<javax.jms.Destination> {
  public abstract void send(java.lang.String, org.springframework.messaging.Message<?>) throws org.springframework.messaging.MessagingException;

  public abstract void convertAndSend(java.lang.String, java.lang.Object) throws org.springframework.messaging.MessagingException;

  public abstract void convertAndSend(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>) throws org.springframework.messaging.MessagingException;

  public abstract void convertAndSend(java.lang.String, java.lang.Object, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;

  public abstract void convertAndSend(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;

  public abstract org.springframework.messaging.Message<?> receive(java.lang.String) throws org.springframework.messaging.MessagingException;

  public abstract <T> T receiveAndConvert(java.lang.String, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract org.springframework.messaging.Message<?> sendAndReceive(java.lang.String, org.springframework.messaging.Message<?>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;
}
