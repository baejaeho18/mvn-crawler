Compiled from "AbstractPollingMessageListenerContainer.java"
public abstract class org.springframework.jms.listener.AbstractPollingMessageListenerContainer extends org.springframework.jms.listener.AbstractMessageListenerContainer {
  public static final long DEFAULT_RECEIVE_TIMEOUT;

  private final org.springframework.jms.listener.AbstractPollingMessageListenerContainer$MessageListenerContainerResourceFactory transactionalResourceFactory;

  private boolean sessionTransactedCalled;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.transaction.support.DefaultTransactionDefinition transactionDefinition;

  private long receiveTimeout;

  public org.springframework.jms.listener.AbstractPollingMessageListenerContainer();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/jms/listener/AbstractMessageListenerContainer."<init>":()V
       4: aload_0
       5: new           #4                  // class org/springframework/jms/listener/AbstractPollingMessageListenerContainer$MessageListenerContainerResourceFactory
       8: dup
       9: aload_0
      10: aconst_null
      11: invokespecial #5                  // Method org/springframework/jms/listener/AbstractPollingMessageListenerContainer$MessageListenerContainerResourceFactory."<init>":(Lorg/springframework/jms/listener/AbstractPollingMessageListenerContainer;Lorg/springframework/jms/listener/AbstractPollingMessageListenerContainer$1;)V
      14: putfield      #6                  // Field transactionalResourceFactory:Lorg/springframework/jms/listener/AbstractPollingMessageListenerContainer$MessageListenerContainerResourceFactory;
      17: aload_0
      18: iconst_0
      19: putfield      #7                  // Field sessionTransactedCalled:Z
      22: aload_0
      23: new           #8                  // class org/springframework/transaction/support/DefaultTransactionDefinition
      26: dup
      27: invokespecial #9                  // Method org/springframework/transaction/support/DefaultTransactionDefinition."<init>":()V
      30: putfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
      33: aload_0
      34: ldc2_w        #12                 // long 1000l
      37: putfield      #14                 // Field receiveTimeout:J
      40: return

  public void setSessionTransacted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #15                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.setSessionTransacted:(Z)V
       5: aload_0
       6: iconst_1
       7: putfield      #7                  // Field sessionTransactedCalled:Z
      10: return

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  protected final org.springframework.transaction.PlatformTransactionManager getTransactionManager();
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: areturn

  public void setTransactionName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
       4: aload_1
       5: invokevirtual #17                 // Method org/springframework/transaction/support/DefaultTransactionDefinition.setName:(Ljava/lang/String;)V
       8: return

  public void setTransactionTimeout(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
       4: iload_1
       5: invokevirtual #18                 // Method org/springframework/transaction/support/DefaultTransactionDefinition.setTimeout:(I)V
       8: return

  public void setReceiveTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field receiveTimeout:J
       5: return

  protected long getReceiveTimeout();
    Code:
       0: aload_0
       1: getfield      #14                 // Field receiveTimeout:J
       4: lreturn

  public void initialize();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sessionTransactedCalled:Z
       4: ifne          39
       7: aload_0
       8: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      11: instanceof    #19                 // class org/springframework/transaction/support/ResourceTransactionManager
      14: ifeq          39
      17: aload_0
      18: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      21: checkcast     #19                 // class org/springframework/transaction/support/ResourceTransactionManager
      24: aload_0
      25: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      28: invokestatic  #21                 // Method org/springframework/transaction/support/TransactionSynchronizationUtils.sameResourceFactory:(Lorg/springframework/transaction/support/ResourceTransactionManager;Ljava/lang/Object;)Z
      31: ifne          39
      34: aload_0
      35: iconst_1
      36: invokespecial #15                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.setSessionTransacted:(Z)V
      39: aload_0
      40: getfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
      43: invokevirtual #22                 // Method org/springframework/transaction/support/DefaultTransactionDefinition.getName:()Ljava/lang/String;
      46: ifnonnull     60
      49: aload_0
      50: getfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
      53: aload_0
      54: invokevirtual #23                 // Method getBeanName:()Ljava/lang/String;
      57: invokevirtual #17                 // Method org/springframework/transaction/support/DefaultTransactionDefinition.setName:(Ljava/lang/String;)V
      60: aload_0
      61: invokespecial #24                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.initialize:()V
      64: return

  protected javax.jms.MessageConsumer createListenerConsumer(javax.jms.Session) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getDestination:()Ljavax/jms/Destination;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: aload_0
      10: aload_1
      11: aload_0
      12: invokevirtual #26                 // Method getDestinationName:()Ljava/lang/String;
      15: invokevirtual #27                 // Method resolveDestinationName:(Ljavax/jms/Session;Ljava/lang/String;)Ljavax/jms/Destination;
      18: astore_2
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #28                 // Method createConsumer:(Ljavax/jms/Session;Ljavax/jms/Destination;)Ljavax/jms/MessageConsumer;
      25: areturn

  protected boolean receiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: ifnull        89
       7: aload_0
       8: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      11: aload_0
      12: getfield      #10                 // Field transactionDefinition:Lorg/springframework/transaction/support/DefaultTransactionDefinition;
      15: invokeinterface #29,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      20: astore        4
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: aload         4
      28: invokevirtual #30                 // Method doReceiveAndExecute:(Ljava/lang/Object;Ljavax/jms/Session;Ljavax/jms/MessageConsumer;Lorg/springframework/transaction/TransactionStatus;)Z
      31: istore        5
      33: goto          75
      36: astore        6
      38: aload_0
      39: aload         4
      41: aload         6
      43: invokespecial #32                 // Method rollbackOnException:(Lorg/springframework/transaction/TransactionStatus;Ljava/lang/Throwable;)V
      46: aload         6
      48: athrow
      49: astore        6
      51: aload_0
      52: aload         4
      54: aload         6
      56: invokespecial #32                 // Method rollbackOnException:(Lorg/springframework/transaction/TransactionStatus;Ljava/lang/Throwable;)V
      59: aload         6
      61: athrow
      62: astore        6
      64: aload_0
      65: aload         4
      67: aload         6
      69: invokespecial #32                 // Method rollbackOnException:(Lorg/springframework/transaction/TransactionStatus;Ljava/lang/Throwable;)V
      72: aload         6
      74: athrow
      75: aload_0
      76: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      79: aload         4
      81: invokeinterface #35,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
      86: iload         5
      88: ireturn
      89: aload_0
      90: aload_1
      91: aload_2
      92: aload_3
      93: aconst_null
      94: invokevirtual #30                 // Method doReceiveAndExecute:(Ljava/lang/Object;Ljavax/jms/Session;Ljavax/jms/MessageConsumer;Lorg/springframework/transaction/TransactionStatus;)Z
      97: ireturn
    Exception table:
       from    to  target type
          22    33    36   Class javax/jms/JMSException
          22    33    49   Class java/lang/RuntimeException
          22    33    62   Class java/lang/Error

  protected boolean doReceiveAndExecute(java.lang.Object, javax.jms.Session, javax.jms.MessageConsumer, org.springframework.transaction.TransactionStatus) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: astore        5
       3: aconst_null
       4: astore        6
       6: aconst_null
       7: astore        7
       9: aload_2
      10: astore        8
      12: iconst_0
      13: istore        9
      15: aload         8
      17: ifnonnull     46
      20: aload_0
      21: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      24: aload_0
      25: getfield      #6                  // Field transactionalResourceFactory:Lorg/springframework/jms/listener/AbstractPollingMessageListenerContainer$MessageListenerContainerResourceFactory;
      28: iconst_1
      29: invokestatic  #36                 // Method org/springframework/jms/connection/ConnectionFactoryUtils.doGetTransactionalSession:(Ljavax/jms/ConnectionFactory;Lorg/springframework/jms/connection/ConnectionFactoryUtils$ResourceFactory;Z)Ljavax/jms/Session;
      32: astore        8
      34: aload         8
      36: ifnull        43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: istore        9
      46: aload         8
      48: ifnonnull     96
      51: aload_0
      52: invokevirtual #37                 // Method sharedConnectionEnabled:()Z
      55: ifeq          67
      58: aload_0
      59: invokevirtual #38                 // Method getSharedConnection:()Ljavax/jms/Connection;
      62: astore        10
      64: goto          84
      67: aload_0
      68: invokevirtual #2                  // Method createConnection:()Ljavax/jms/Connection;
      71: astore        10
      73: aload         10
      75: astore        5
      77: aload         10
      79: invokeinterface #39,  1           // InterfaceMethod javax/jms/Connection.start:()V
      84: aload_0
      85: aload         10
      87: invokevirtual #1                  // Method createSession:(Ljavax/jms/Connection;)Ljavax/jms/Session;
      90: astore        8
      92: aload         8
      94: astore        6
      96: aload_3
      97: astore        10
      99: aload         10
     101: ifnonnull     116
     104: aload_0
     105: aload         8
     107: invokevirtual #40                 // Method createListenerConsumer:(Ljavax/jms/Session;)Ljavax/jms/MessageConsumer;
     110: astore        10
     112: aload         10
     114: astore        7
     116: aload_0
     117: aload         10
     119: invokevirtual #41                 // Method receiveMessage:(Ljavax/jms/MessageConsumer;)Ljavax/jms/Message;
     122: astore        11
     124: aload         11
     126: ifnull        434
     129: aload_0
     130: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     133: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     138: ifeq          218
     141: aload_0
     142: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     145: new           #44                 // class java/lang/StringBuilder
     148: dup
     149: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     152: ldc           #46                 // String Received message of type [
     154: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: aload         11
     159: invokevirtual #48                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     162: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     165: ldc           #50                 // String ] from consumer [
     167: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload         10
     172: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     175: ldc           #51                 // String ] of
     177: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: iload         9
     182: ifeq          190
     185: ldc           #52                 // String transactional
     187: goto          192
     190: ldc           #53                 // String
     192: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: ldc           #54                 // String session [
     197: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload         8
     202: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     205: ldc           #55                 // String ]
     207: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     210: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     213: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     218: aload_0
     219: aload_1
     220: aload         8
     222: invokevirtual #58                 // Method messageReceived:(Ljava/lang/Object;Ljavax/jms/Session;)V
     225: iload         9
     227: ifne          251
     230: aload_0
     231: invokevirtual #59                 // Method isExposeListenerSession:()Z
     234: ifeq          251
     237: aload_0
     238: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     241: invokestatic  #60                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.hasResource:(Ljava/lang/Object;)Z
     244: ifne          251
     247: iconst_1
     248: goto          252
     251: iconst_0
     252: istore        12
     254: iload         12
     256: ifeq          275
     259: aload_0
     260: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     263: new           #61                 // class org/springframework/jms/listener/LocallyExposedJmsResourceHolder
     266: dup
     267: aload         8
     269: invokespecial #62                 // Method org/springframework/jms/listener/LocallyExposedJmsResourceHolder."<init>":(Ljavax/jms/Session;)V
     272: invokestatic  #63                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
     275: aload_0
     276: aload         8
     278: aload         11
     280: invokevirtual #64                 // Method doExecuteListener:(Ljavax/jms/Session;Ljavax/jms/Message;)V
     283: iload         12
     285: ifeq          408
     288: aload_0
     289: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     292: invokestatic  #65                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     295: pop
     296: goto          408
     299: astore        13
     301: aload         4
     303: ifnull        354
     306: aload_0
     307: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     310: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     315: ifeq          347
     318: aload_0
     319: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     322: new           #44                 // class java/lang/StringBuilder
     325: dup
     326: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     329: ldc           #67                 // String Rolling back transaction because of listener exception thrown:
     331: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     334: aload         13
     336: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     339: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     342: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     347: aload         4
     349: invokeinterface #68,  1           // InterfaceMethod org/springframework/transaction/TransactionStatus.setRollbackOnly:()V
     354: aload_0
     355: aload         13
     357: invokevirtual #69                 // Method handleListenerException:(Ljava/lang/Throwable;)V
     360: aload         13
     362: instanceof    #31                 // class javax/jms/JMSException
     365: ifeq          374
     368: aload         13
     370: checkcast     #31                 // class javax/jms/JMSException
     373: athrow
     374: iload         12
     376: ifeq          408
     379: aload_0
     380: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     383: invokestatic  #65                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     386: pop
     387: goto          408
     390: astore        14
     392: iload         12
     394: ifeq          405
     397: aload_0
     398: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     401: invokestatic  #65                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
     404: pop
     405: aload         14
     407: athrow
     408: iconst_1
     409: istore        13
     411: aload         7
     413: invokestatic  #70                 // Method org/springframework/jms/support/JmsUtils.closeMessageConsumer:(Ljavax/jms/MessageConsumer;)V
     416: aload         6
     418: invokestatic  #71                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
     421: aload         5
     423: aload_0
     424: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     427: iconst_1
     428: invokestatic  #72                 // Method org/springframework/jms/connection/ConnectionFactoryUtils.releaseConnection:(Ljavax/jms/Connection;Ljavax/jms/ConnectionFactory;Z)V
     431: iload         13
     433: ireturn
     434: aload_0
     435: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     438: invokeinterface #73,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     443: ifeq          510
     446: aload_0
     447: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     450: new           #44                 // class java/lang/StringBuilder
     453: dup
     454: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     457: ldc           #74                 // String Consumer [
     459: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     462: aload         10
     464: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     467: ldc           #51                 // String ] of
     469: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     472: iload         9
     474: ifeq          482
     477: ldc           #52                 // String transactional
     479: goto          484
     482: ldc           #53                 // String
     484: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     487: ldc           #54                 // String session [
     489: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     492: aload         8
     494: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     497: ldc           #75                 // String ] did not receive a message
     499: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     502: invokevirtual #56                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     505: invokeinterface #76,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     510: aload_0
     511: aload_1
     512: aload         8
     514: invokevirtual #77                 // Method noMessageReceived:(Ljava/lang/Object;Ljavax/jms/Session;)V
     517: aload_0
     518: aload         8
     520: invokevirtual #78                 // Method shouldCommitAfterNoMessageReceived:(Ljavax/jms/Session;)Z
     523: ifeq          534
     526: aload_0
     527: aload         8
     529: aload         11
     531: invokevirtual #79                 // Method commitIfNecessary:(Ljavax/jms/Session;Ljavax/jms/Message;)V
     534: iconst_0
     535: istore        12
     537: aload         7
     539: invokestatic  #70                 // Method org/springframework/jms/support/JmsUtils.closeMessageConsumer:(Ljavax/jms/MessageConsumer;)V
     542: aload         6
     544: invokestatic  #71                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
     547: aload         5
     549: aload_0
     550: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     553: iconst_1
     554: invokestatic  #72                 // Method org/springframework/jms/connection/ConnectionFactoryUtils.releaseConnection:(Ljavax/jms/Connection;Ljavax/jms/ConnectionFactory;Z)V
     557: iload         12
     559: ireturn
     560: astore        15
     562: aload         7
     564: invokestatic  #70                 // Method org/springframework/jms/support/JmsUtils.closeMessageConsumer:(Ljavax/jms/MessageConsumer;)V
     567: aload         6
     569: invokestatic  #71                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
     572: aload         5
     574: aload_0
     575: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
     578: iconst_1
     579: invokestatic  #72                 // Method org/springframework/jms/connection/ConnectionFactoryUtils.releaseConnection:(Ljavax/jms/Connection;Ljavax/jms/ConnectionFactory;Z)V
     582: aload         15
     584: athrow
    Exception table:
       from    to  target type
         275   283   299   Class java/lang/Throwable
         275   283   390   any
         299   374   390   any
         390   392   390   any
           9   411   560   any
         434   537   560   any
         560   562   560   any

  protected boolean isSessionLocallyTransacted(javax.jms.Session);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #80                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.isSessionLocallyTransacted:(Ljavax/jms/Session;)Z
       5: ifne          10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: invokevirtual #20                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      14: invokestatic  #81                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.getResource:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #82                 // class org/springframework/jms/connection/JmsResourceHolder
      20: astore_2
      21: aload_2
      22: ifnull        40
      25: aload_2
      26: instanceof    #61                 // class org/springframework/jms/listener/LocallyExposedJmsResourceHolder
      29: ifne          40
      32: aload_2
      33: aload_1
      34: invokevirtual #83                 // Method org/springframework/jms/connection/JmsResourceHolder.containsSession:(Ljavax/jms/Session;)Z
      37: ifne          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  protected boolean shouldCommitAfterNoMessageReceived(javax.jms.Session);
    Code:
       0: iconst_1
       1: ireturn

  private void rollbackOnException(org.springframework.transaction.TransactionStatus, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #84                 // String Initiating transaction rollback on listener exception
       6: aload_2
       7: invokeinterface #85,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      12: aload_0
      13: getfield      #16                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
      16: aload_1
      17: invokeinterface #86,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
      22: goto          55
      25: astore_3
      26: aload_0
      27: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
      30: ldc           #87                 // String Listener exception overridden by rollback exception
      32: aload_2
      33: invokeinterface #88,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      38: aload_3
      39: athrow
      40: astore_3
      41: aload_0
      42: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #89                 // String Listener exception overridden by rollback error
      47: aload_2
      48: invokeinterface #88,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
          12    22    25   Class java/lang/RuntimeException
          12    22    40   Class java/lang/Error

  protected javax.jms.Message receiveMessage(javax.jms.MessageConsumer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: invokevirtual #90                 // Method getReceiveTimeout:()J
       6: invokevirtual #91                 // Method receiveFromConsumer:(Ljavax/jms/MessageConsumer;J)Ljavax/jms/Message;
       9: areturn

  protected void messageReceived(java.lang.Object, javax.jms.Session);
    Code:
       0: return

  protected void noMessageReceived(java.lang.Object, javax.jms.Session);
    Code:
       0: return

  protected javax.jms.Connection getConnection(org.springframework.jms.connection.JmsResourceHolder);
    Code:
       0: aload_1
       1: invokevirtual #92                 // Method org/springframework/jms/connection/JmsResourceHolder.getConnection:()Ljavax/jms/Connection;
       4: areturn

  protected javax.jms.Session getSession(org.springframework.jms.connection.JmsResourceHolder);
    Code:
       0: aload_1
       1: invokevirtual #93                 // Method org/springframework/jms/connection/JmsResourceHolder.getSession:()Ljavax/jms/Session;
       4: areturn

  static javax.jms.Connection access$100(org.springframework.jms.listener.AbstractPollingMessageListenerContainer) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method createConnection:()Ljavax/jms/Connection;
       4: areturn

  static javax.jms.Session access$200(org.springframework.jms.listener.AbstractPollingMessageListenerContainer, javax.jms.Connection) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method createSession:(Ljavax/jms/Connection;)Ljavax/jms/Session;
       5: areturn
}
