Compiled from "AbstractAdaptableMessageListener.java"
public abstract class org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener implements javax.jms.MessageListener, org.springframework.jms.listener.SessionAwareMessageListener<javax.jms.Message> {
  protected final org.apache.commons.logging.Log logger;

  private java.lang.Object defaultResponseDestination;

  private org.springframework.jms.support.destination.DestinationResolver destinationResolver;

  private org.springframework.jms.support.converter.MessageConverter messageConverter;

  private final org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener$MessagingMessageConverterAdapter messagingMessageConverter;

  public org.springframework.jms.listener.adapter.AbstractAdaptableMessageListener();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class org/springframework/jms/support/destination/DynamicDestinationResolver
      19: dup
      20: invokespecial #6                  // Method org/springframework/jms/support/destination/DynamicDestinationResolver."<init>":()V
      23: putfield      #7                  // Field destinationResolver:Lorg/springframework/jms/support/destination/DestinationResolver;
      26: aload_0
      27: new           #8                  // class org/springframework/jms/support/converter/SimpleMessageConverter
      30: dup
      31: invokespecial #9                  // Method org/springframework/jms/support/converter/SimpleMessageConverter."<init>":()V
      34: putfield      #10                 // Field messageConverter:Lorg/springframework/jms/support/converter/MessageConverter;
      37: aload_0
      38: new           #11                 // class org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter
      41: dup
      42: aload_0
      43: aconst_null
      44: invokespecial #12                 // Method org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter."<init>":(Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener;Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$1;)V
      47: putfield      #13                 // Field messagingMessageConverter:Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter;
      50: return

  public void setDefaultResponseDestination(javax.jms.Destination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
       5: return

  public void setDefaultResponseQueueName(java.lang.String);
    Code:
       0: aload_0
       1: new           #15                 // class org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder
       4: dup
       5: aload_1
       6: iconst_0
       7: invokespecial #16                 // Method org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder."<init>":(Ljava/lang/String;Z)V
      10: putfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
      13: return

  public void setDefaultResponseTopicName(java.lang.String);
    Code:
       0: aload_0
       1: new           #15                 // class org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder
       4: dup
       5: aload_1
       6: iconst_1
       7: invokespecial #16                 // Method org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder."<init>":(Ljava/lang/String;Z)V
      10: putfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
      13: return

  public void setDestinationResolver(org.springframework.jms.support.destination.DestinationResolver);
    Code:
       0: aload_1
       1: ldc           #17                 // String DestinationResolver must not be null
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field destinationResolver:Lorg/springframework/jms/support/destination/DestinationResolver;
      11: return

  protected org.springframework.jms.support.destination.DestinationResolver getDestinationResolver();
    Code:
       0: aload_0
       1: getfield      #7                  // Field destinationResolver:Lorg/springframework/jms/support/destination/DestinationResolver;
       4: areturn

  public void setMessageConverter(org.springframework.jms.support.converter.MessageConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field messageConverter:Lorg/springframework/jms/support/converter/MessageConverter;
       5: return

  protected org.springframework.jms.support.converter.MessageConverter getMessageConverter();
    Code:
       0: aload_0
       1: getfield      #10                 // Field messageConverter:Lorg/springframework/jms/support/converter/MessageConverter;
       4: areturn

  public void setHeaderMapper(org.springframework.jms.support.JmsHeaderMapper);
    Code:
       0: aload_1
       1: ldc           #19                 // String HeaderMapper must not be null
       3: invokestatic  #18                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #13                 // Field messagingMessageConverter:Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter;
      10: aload_1
      11: invokevirtual #20                 // Method org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter.setHeaderMapper:(Lorg/springframework/jms/support/JmsHeaderMapper;)V
      14: return

  protected final org.springframework.jms.support.converter.MessagingMessageConverter getMessagingMessageConverter();
    Code:
       0: aload_0
       1: getfield      #13                 // Field messagingMessageConverter:Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter;
       4: areturn

  public void onMessage(javax.jms.Message);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #21                 // Method onMessage:(Ljavax/jms/Message;Ljavax/jms/Session;)V
       6: goto          15
       9: astore_2
      10: aload_0
      11: aload_2
      12: invokevirtual #23                 // Method handleListenerException:(Ljava/lang/Throwable;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  public abstract void onMessage(javax.jms.Message, javax.jms.Session) throws javax.jms.JMSException;

  protected void handleListenerException(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: ldc           #24                 // String Listener execution failed
       6: aload_1
       7: invokeinterface #25,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      12: return

  protected java.lang.Object extractMessage(javax.jms.Message);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getMessageConverter:()Lorg/springframework/jms/support/converter/MessageConverter;
       4: astore_2
       5: aload_2
       6: ifnull        17
       9: aload_2
      10: aload_1
      11: invokeinterface #27,  2           // InterfaceMethod org/springframework/jms/support/converter/MessageConverter.fromMessage:(Ljavax/jms/Message;)Ljava/lang/Object;
      16: areturn
      17: aload_1
      18: areturn
      19: astore_2
      20: new           #29                 // class org/springframework/jms/support/converter/MessageConversionException
      23: dup
      24: ldc           #30                 // String Could not convert JMS message
      26: aload_2
      27: invokespecial #31                 // Method org/springframework/jms/support/converter/MessageConversionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
    Exception table:
       from    to  target type
           0    16    19   Class javax/jms/JMSException
          17    18    19   Class javax/jms/JMSException

  protected void handleResult(java.lang.Object, javax.jms.Message, javax.jms.Session);
    Code:
       0: aload_3
       1: ifnull        123
       4: aload_0
       5: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       8: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      13: ifeq          49
      16: aload_0
      17: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      20: new           #33                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #35                 // String Listener method returned result [
      29: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #38                 // String ] - generating response message for it
      38: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      49: aload_0
      50: aload_3
      51: aload_1
      52: invokevirtual #41                 // Method buildMessage:(Ljavax/jms/Session;Ljava/lang/Object;)Ljavax/jms/Message;
      55: astore        4
      57: aload_0
      58: aload_2
      59: aload         4
      61: invokevirtual #42                 // Method postProcessResponse:(Ljavax/jms/Message;Ljavax/jms/Message;)V
      64: aload_0
      65: aload_2
      66: aload         4
      68: aload_3
      69: aload_1
      70: invokespecial #43                 // Method getResponseDestination:(Ljavax/jms/Message;Ljavax/jms/Message;Ljavax/jms/Session;Ljava/lang/Object;)Ljavax/jms/Destination;
      73: astore        5
      75: aload_0
      76: aload_3
      77: aload         5
      79: aload         4
      81: invokevirtual #44                 // Method sendResponse:(Ljavax/jms/Session;Ljavax/jms/Destination;Ljavax/jms/Message;)V
      84: goto          168
      87: astore        4
      89: new           #46                 // class org/springframework/jms/listener/adapter/ReplyFailureException
      92: dup
      93: new           #33                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #47                 // String Failed to send reply with payload [
     102: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_1
     106: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     109: ldc           #48                 // String ]
     111: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: aload         4
     119: invokespecial #49                 // Method org/springframework/jms/listener/adapter/ReplyFailureException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     122: athrow
     123: aload_0
     124: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     127: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     132: ifeq          168
     135: aload_0
     136: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     139: new           #33                 // class java/lang/StringBuilder
     142: dup
     143: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
     146: ldc           #35                 // String Listener method returned result [
     148: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: aload_1
     152: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     155: ldc           #51                 // String ]: not generating response message for it because of no JMS Session given
     157: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     168: return
    Exception table:
       from    to  target type
          49    84    87   Class java/lang/Exception

  protected javax.jms.Message buildMessage(javax.jms.Session, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_2
       2: instanceof    #53                 // class org/springframework/jms/listener/adapter/JmsResponse
       5: ifeq          18
       8: aload_2
       9: checkcast     #53                 // class org/springframework/jms/listener/adapter/JmsResponse
      12: invokevirtual #54                 // Method org/springframework/jms/listener/adapter/JmsResponse.getResponse:()Ljava/lang/Object;
      15: goto          19
      18: aload_2
      19: invokevirtual #55                 // Method preProcessResponse:(Ljava/lang/Object;)Ljava/lang/Object;
      22: astore_3
      23: aload_0
      24: invokevirtual #26                 // Method getMessageConverter:()Lorg/springframework/jms/support/converter/MessageConverter;
      27: astore        4
      29: aload         4
      31: ifnull        61
      34: aload_3
      35: instanceof    #56                 // class org/springframework/messaging/Message
      38: ifeq          51
      41: aload_0
      42: getfield      #13                 // Field messagingMessageConverter:Lorg/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter;
      45: aload_3
      46: aload_1
      47: invokevirtual #57                 // Method org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$MessagingMessageConverterAdapter.toMessage:(Ljava/lang/Object;Ljavax/jms/Session;)Ljavax/jms/Message;
      50: areturn
      51: aload         4
      53: aload_3
      54: aload_1
      55: invokeinterface #58,  3           // InterfaceMethod org/springframework/jms/support/converter/MessageConverter.toMessage:(Ljava/lang/Object;Ljavax/jms/Session;)Ljavax/jms/Message;
      60: areturn
      61: aload_3
      62: instanceof    #59                 // class javax/jms/Message
      65: ifne          100
      68: new           #29                 // class org/springframework/jms/support/converter/MessageConversionException
      71: dup
      72: new           #33                 // class java/lang/StringBuilder
      75: dup
      76: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      79: ldc           #60                 // String No MessageConverter specified - cannot handle message [
      81: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: aload_3
      85: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: ldc           #48                 // String ]
      90: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: invokespecial #61                 // Method org/springframework/jms/support/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
      99: athrow
     100: aload_3
     101: checkcast     #59                 // class javax/jms/Message
     104: areturn

  protected java.lang.Object preProcessResponse(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  protected void postProcessResponse(javax.jms.Message, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #62,  1           // InterfaceMethod javax/jms/Message.getJMSCorrelationID:()Ljava/lang/String;
       6: astore_3
       7: aload_3
       8: ifnonnull     18
      11: aload_1
      12: invokeinterface #63,  1           // InterfaceMethod javax/jms/Message.getJMSMessageID:()Ljava/lang/String;
      17: astore_3
      18: aload_2
      19: aload_3
      20: invokeinterface #64,  2           // InterfaceMethod javax/jms/Message.setJMSCorrelationID:(Ljava/lang/String;)V
      25: return

  private javax.jms.Destination getResponseDestination(javax.jms.Message, javax.jms.Message, javax.jms.Session, java.lang.Object) throws javax.jms.JMSException;
    Code:
       0: aload         4
       2: instanceof    #53                 // class org/springframework/jms/listener/adapter/JmsResponse
       5: ifeq          35
       8: aload         4
      10: checkcast     #53                 // class org/springframework/jms/listener/adapter/JmsResponse
      13: astore        5
      15: aload         5
      17: aload_0
      18: invokevirtual #65                 // Method getDestinationResolver:()Lorg/springframework/jms/support/destination/DestinationResolver;
      21: aload_3
      22: invokevirtual #66                 // Method org/springframework/jms/listener/adapter/JmsResponse.resolveDestination:(Lorg/springframework/jms/support/destination/DestinationResolver;Ljavax/jms/Session;)Ljavax/jms/Destination;
      25: astore        6
      27: aload         6
      29: ifnull        35
      32: aload         6
      34: areturn
      35: aload_0
      36: aload_1
      37: aload_2
      38: aload_3
      39: invokevirtual #67                 // Method getResponseDestination:(Ljavax/jms/Message;Ljavax/jms/Message;Ljavax/jms/Session;)Ljavax/jms/Destination;
      42: areturn

  protected javax.jms.Destination getResponseDestination(javax.jms.Message, javax.jms.Message, javax.jms.Session) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #68,  1           // InterfaceMethod javax/jms/Message.getJMSReplyTo:()Ljavax/jms/Destination;
       6: astore        4
       8: aload         4
      10: ifnonnull     35
      13: aload_0
      14: aload_3
      15: invokevirtual #69                 // Method resolveDefaultResponseDestination:(Ljavax/jms/Session;)Ljavax/jms/Destination;
      18: astore        4
      20: aload         4
      22: ifnonnull     35
      25: new           #70                 // class javax/jms/InvalidDestinationException
      28: dup
      29: ldc           #71                 // String Cannot determine response destination: Request message does not contain reply-to destination, and no default response destination set.
      31: invokespecial #72                 // Method javax/jms/InvalidDestinationException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload         4
      37: areturn

  protected javax.jms.Destination resolveDefaultResponseDestination(javax.jms.Session) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
       4: instanceof    #73                 // class javax/jms/Destination
       7: ifeq          18
      10: aload_0
      11: getfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
      14: checkcast     #73                 // class javax/jms/Destination
      17: areturn
      18: aload_0
      19: getfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
      22: instanceof    #15                 // class org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder
      25: ifeq          55
      28: aload_0
      29: getfield      #14                 // Field defaultResponseDestination:Ljava/lang/Object;
      32: checkcast     #15                 // class org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder
      35: astore_2
      36: aload_0
      37: invokevirtual #65                 // Method getDestinationResolver:()Lorg/springframework/jms/support/destination/DestinationResolver;
      40: aload_1
      41: aload_2
      42: getfield      #74                 // Field org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder.name:Ljava/lang/String;
      45: aload_2
      46: getfield      #75                 // Field org/springframework/jms/listener/adapter/AbstractAdaptableMessageListener$DestinationNameHolder.isTopic:Z
      49: invokeinterface #76,  4           // InterfaceMethod org/springframework/jms/support/destination/DestinationResolver.resolveDestinationName:(Ljavax/jms/Session;Ljava/lang/String;Z)Ljavax/jms/Destination;
      54: areturn
      55: aconst_null
      56: areturn

  protected void sendResponse(javax.jms.Session, javax.jms.Destination, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #77,  2           // InterfaceMethod javax/jms/Session.createProducer:(Ljavax/jms/Destination;)Ljavax/jms/MessageProducer;
       7: astore        4
       9: aload_0
      10: aload         4
      12: aload_3
      13: invokevirtual #78                 // Method postProcessProducer:(Ljavax/jms/MessageProducer;Ljavax/jms/Message;)V
      16: aload         4
      18: aload_3
      19: invokeinterface #79,  2           // InterfaceMethod javax/jms/MessageProducer.send:(Ljavax/jms/Message;)V
      24: aload         4
      26: invokestatic  #80                 // Method org/springframework/jms/support/JmsUtils.closeMessageProducer:(Ljavax/jms/MessageProducer;)V
      29: goto          42
      32: astore        5
      34: aload         4
      36: invokestatic  #80                 // Method org/springframework/jms/support/JmsUtils.closeMessageProducer:(Ljavax/jms/MessageProducer;)V
      39: aload         5
      41: athrow
      42: return
    Exception table:
       from    to  target type
           9    24    32   any
          32    34    32   any

  protected void postProcessProducer(javax.jms.MessageProducer, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: return
}
