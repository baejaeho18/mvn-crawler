Compiled from "SimpleMessageListenerContainer.java"
public class org.springframework.jms.listener.SimpleMessageListenerContainer extends org.springframework.jms.listener.AbstractMessageListenerContainer implements javax.jms.ExceptionListener {
  private boolean connectLazily;

  private int concurrentConsumers;

  private java.util.concurrent.Executor taskExecutor;

  private java.util.Set<javax.jms.Session> sessions;

  private java.util.Set<javax.jms.MessageConsumer> consumers;

  private final java.lang.Object consumersMonitor;

  public org.springframework.jms.listener.SimpleMessageListenerContainer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/jms/listener/AbstractMessageListenerContainer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field connectLazily:Z
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field concurrentConsumers:I
      14: aload_0
      15: new           #5                  // class java/lang/Object
      18: dup
      19: invokespecial #6                  // Method java/lang/Object."<init>":()V
      22: putfield      #7                  // Field consumersMonitor:Ljava/lang/Object;
      25: return

  public void setConnectLazily(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field connectLazily:Z
       5: return

  public void setConcurrency(java.lang.String);
    Code:
       0: aload_1
       1: bipush        45
       3: invokevirtual #8                  // Method java/lang/String.indexOf:(I)I
       6: istore_2
       7: iload_2
       8: iconst_m1
       9: if_icmpeq     33
      12: aload_0
      13: aload_1
      14: iload_2
      15: iconst_1
      16: iadd
      17: aload_1
      18: invokevirtual #9                  // Method java/lang/String.length:()I
      21: invokevirtual #10                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      24: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      27: invokevirtual #12                 // Method setConcurrentConsumers:(I)V
      30: goto          41
      33: aload_0
      34: aload_1
      35: invokestatic  #11                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      38: invokevirtual #12                 // Method setConcurrentConsumers:(I)V
      41: goto          77
      44: astore_2
      45: new           #14                 // class java/lang/IllegalArgumentException
      48: dup
      49: new           #15                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      56: ldc           #17                 // String Invalid concurrency value [
      58: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: aload_1
      62: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #19                 // String ]: only single maximum integer (e.g. \"5\") and minimum-maximum combo (e.g. \"3-5\") supported. Note that SimpleMessageListenerContainer will effectively ignore the minimum value and always keep a fixed number of consumers according to the maximum value.
      67: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      73: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      76: athrow
      77: return
    Exception table:
       from    to  target type
           0    41    44   Class java/lang/NumberFormatException

  public void setConcurrentConsumers(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #22                 // String \'concurrentConsumers\' value must be at least 1 (one)
      11: invokestatic  #23                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #4                  // Field concurrentConsumers:I
      19: return

  public void setTaskExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field taskExecutor:Ljava/util/concurrent/Executor;
       5: return

  protected void validateConfiguration();
    Code:
       0: aload_0
       1: invokespecial #24                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.validateConfiguration:()V
       4: aload_0
       5: invokevirtual #25                 // Method isSubscriptionDurable:()Z
       8: ifeq          29
      11: aload_0
      12: getfield      #4                  // Field concurrentConsumers:I
      15: iconst_1
      16: if_icmpeq     29
      19: new           #14                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #26                 // String Only 1 concurrent consumer supported for durable subscription
      25: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: return

  protected final boolean sharedConnectionEnabled();
    Code:
       0: iconst_1
       1: ireturn

  protected void doInitialize() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field connectLazily:Z
       4: ifne          32
       7: aload_0
       8: invokevirtual #27                 // Method establishSharedConnection:()V
      11: goto          28
      14: astore_1
      15: aload_0
      16: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      19: ldc           #30                 // String Could not connect on initialization - registering message consumers lazily
      21: aload_1
      22: invokeinterface #31,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      27: return
      28: aload_0
      29: invokevirtual #32                 // Method initializeConsumers:()V
      32: return
    Exception table:
       from    to  target type
           7    11    14   Class javax/jms/JMSException

  protected void doStart() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokespecial #33                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.doStart:()V
       4: aload_0
       5: invokevirtual #32                 // Method initializeConsumers:()V
       8: return

  protected void prepareSharedConnection(javax.jms.Connection) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #34                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer.prepareSharedConnection:(Ljavax/jms/Connection;)V
       5: aload_1
       6: aload_0
       7: invokeinterface #35,  2           // InterfaceMethod javax/jms/Connection.setExceptionListener:(Ljavax/jms/ExceptionListener;)V
      12: return

  public void onException(javax.jms.JMSException);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method invokeExceptionListener:(Ljavax/jms/JMSException;)V
       5: aload_0
       6: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
       9: invokeinterface #37,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      14: ifeq          45
      17: aload_0
      18: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      21: new           #15                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #38                 // String Trying to recover from JMS Connection exception:
      30: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #7                  // Field consumersMonitor:Ljava/lang/Object;
      49: dup
      50: astore_2
      51: monitorenter
      52: aload_0
      53: aconst_null
      54: putfield      #41                 // Field sessions:Ljava/util/Set;
      57: aload_0
      58: aconst_null
      59: putfield      #42                 // Field consumers:Ljava/util/Set;
      62: aload_2
      63: monitorexit
      64: goto          72
      67: astore_3
      68: aload_2
      69: monitorexit
      70: aload_3
      71: athrow
      72: aload_0
      73: invokevirtual #43                 // Method refreshSharedConnection:()V
      76: aload_0
      77: invokevirtual #32                 // Method initializeConsumers:()V
      80: aload_0
      81: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      84: ldc           #44                 // String Successfully refreshed JMS Connection
      86: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      91: goto          119
      94: astore_2
      95: aload_0
      96: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      99: ldc           #45                 // String Failed to recover JMS Connection
     101: aload_2
     102: invokeinterface #31,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     107: aload_0
     108: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
     111: ldc           #46                 // String Encountered non-recoverable JMSException
     113: aload_1
     114: invokeinterface #47,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     119: return
    Exception table:
       from    to  target type
          52    64    67   any
          67    70    67   any
          45    91    94   Class javax/jms/JMSException

  protected void initializeConsumers() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumersMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field consumers:Ljava/util/Set;
      11: ifnonnull     104
      14: aload_0
      15: new           #48                 // class java/util/HashSet
      18: dup
      19: aload_0
      20: getfield      #4                  // Field concurrentConsumers:I
      23: invokespecial #49                 // Method java/util/HashSet."<init>":(I)V
      26: putfield      #41                 // Field sessions:Ljava/util/Set;
      29: aload_0
      30: new           #48                 // class java/util/HashSet
      33: dup
      34: aload_0
      35: getfield      #4                  // Field concurrentConsumers:I
      38: invokespecial #49                 // Method java/util/HashSet."<init>":(I)V
      41: putfield      #42                 // Field consumers:Ljava/util/Set;
      44: aload_0
      45: invokevirtual #50                 // Method getSharedConnection:()Ljavax/jms/Connection;
      48: astore_2
      49: iconst_0
      50: istore_3
      51: iload_3
      52: aload_0
      53: getfield      #4                  // Field concurrentConsumers:I
      56: if_icmpge     104
      59: aload_0
      60: aload_2
      61: invokevirtual #51                 // Method createSession:(Ljavax/jms/Connection;)Ljavax/jms/Session;
      64: astore        4
      66: aload_0
      67: aload         4
      69: invokevirtual #52                 // Method createListenerConsumer:(Ljavax/jms/Session;)Ljavax/jms/MessageConsumer;
      72: astore        5
      74: aload_0
      75: getfield      #41                 // Field sessions:Ljava/util/Set;
      78: aload         4
      80: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      85: pop
      86: aload_0
      87: getfield      #42                 // Field consumers:Ljava/util/Set;
      90: aload         5
      92: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      97: pop
      98: iinc          3, 1
     101: goto          51
     104: aload_1
     105: monitorexit
     106: goto          116
     109: astore        6
     111: aload_1
     112: monitorexit
     113: aload         6
     115: athrow
     116: return
    Exception table:
       from    to  target type
           7   106   109   any
         109   113   109   any

  protected javax.jms.MessageConsumer createListenerConsumer(javax.jms.Session) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getDestination:()Ljavax/jms/Destination;
       4: astore_2
       5: aload_2
       6: ifnonnull     19
       9: aload_0
      10: aload_1
      11: aload_0
      12: invokevirtual #55                 // Method getDestinationName:()Ljava/lang/String;
      15: invokevirtual #56                 // Method resolveDestinationName:(Ljavax/jms/Session;Ljava/lang/String;)Ljavax/jms/Destination;
      18: astore_2
      19: aload_0
      20: aload_1
      21: aload_2
      22: invokevirtual #57                 // Method createConsumer:(Ljavax/jms/Session;Ljavax/jms/Destination;)Ljavax/jms/MessageConsumer;
      25: astore_3
      26: aload_0
      27: getfield      #1                  // Field taskExecutor:Ljava/util/concurrent/Executor;
      30: ifnull        51
      33: aload_3
      34: new           #58                 // class org/springframework/jms/listener/SimpleMessageListenerContainer$1
      37: dup
      38: aload_0
      39: aload_1
      40: invokespecial #59                 // Method org/springframework/jms/listener/SimpleMessageListenerContainer$1."<init>":(Lorg/springframework/jms/listener/SimpleMessageListenerContainer;Ljavax/jms/Session;)V
      43: invokeinterface #60,  2           // InterfaceMethod javax/jms/MessageConsumer.setMessageListener:(Ljavax/jms/MessageListener;)V
      48: goto          66
      51: aload_3
      52: new           #61                 // class org/springframework/jms/listener/SimpleMessageListenerContainer$2
      55: dup
      56: aload_0
      57: aload_1
      58: invokespecial #62                 // Method org/springframework/jms/listener/SimpleMessageListenerContainer$2."<init>":(Lorg/springframework/jms/listener/SimpleMessageListenerContainer;Ljavax/jms/Session;)V
      61: invokeinterface #60,  2           // InterfaceMethod javax/jms/MessageConsumer.setMessageListener:(Ljavax/jms/MessageListener;)V
      66: aload_3
      67: areturn

  protected void processMessage(javax.jms.Message, javax.jms.Session);
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method isExposeListenerSession:()Z
       4: istore_3
       5: iload_3
       6: ifeq          24
       9: aload_0
      10: invokevirtual #64                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      13: new           #65                 // class org/springframework/jms/listener/LocallyExposedJmsResourceHolder
      16: dup
      17: aload_2
      18: invokespecial #66                 // Method org/springframework/jms/listener/LocallyExposedJmsResourceHolder."<init>":(Ljavax/jms/Session;)V
      21: invokestatic  #67                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.bindResource:(Ljava/lang/Object;Ljava/lang/Object;)V
      24: aload_0
      25: aload_2
      26: aload_1
      27: invokevirtual #68                 // Method executeListener:(Ljavax/jms/Session;Ljavax/jms/Message;)V
      30: iload_3
      31: ifeq          62
      34: aload_0
      35: invokevirtual #64                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      38: invokestatic  #69                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: goto          62
      45: astore        4
      47: iload_3
      48: ifeq          59
      51: aload_0
      52: invokevirtual #64                 // Method getConnectionFactory:()Ljavax/jms/ConnectionFactory;
      55: invokestatic  #69                 // Method org/springframework/transaction/support/TransactionSynchronizationManager.unbindResource:(Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: aload         4
      61: athrow
      62: return
    Exception table:
       from    to  target type
          24    30    45   any
          45    47    45   any

  protected void doShutdown() throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field consumersMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #42                 // Field consumers:Ljava/util/Set;
      11: ifnull        108
      14: aload_0
      15: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      18: ldc           #70                 // String Closing JMS MessageConsumers
      20: invokeinterface #71,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      25: aload_0
      26: getfield      #42                 // Field consumers:Ljava/util/Set;
      29: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      34: astore_2
      35: aload_2
      36: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      41: ifeq          61
      44: aload_2
      45: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #75                 // class javax/jms/MessageConsumer
      53: astore_3
      54: aload_3
      55: invokestatic  #76                 // Method org/springframework/jms/support/JmsUtils.closeMessageConsumer:(Ljavax/jms/MessageConsumer;)V
      58: goto          35
      61: aload_0
      62: getfield      #29                 // Field logger:Lorg/apache/commons/logging/Log;
      65: ldc           #77                 // String Closing JMS Sessions
      67: invokeinterface #71,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: aload_0
      73: getfield      #41                 // Field sessions:Ljava/util/Set;
      76: invokeinterface #72,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore_2
      82: aload_2
      83: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          108
      91: aload_2
      92: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #78                 // class javax/jms/Session
     100: astore_3
     101: aload_3
     102: invokestatic  #79                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
     105: goto          82
     108: aload_1
     109: monitorexit
     110: goto          120
     113: astore        4
     115: aload_1
     116: monitorexit
     117: aload         4
     119: athrow
     120: return
    Exception table:
       from    to  target type
           7   110   113   any
         113   117   113   any

  static java.util.concurrent.Executor access$000(org.springframework.jms.listener.SimpleMessageListenerContainer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field taskExecutor:Ljava/util/concurrent/Executor;
       4: areturn
}
