Compiled from "AbstractMessageListenerContainer.java"
public abstract class org.springframework.jms.listener.AbstractMessageListenerContainer extends org.springframework.jms.listener.AbstractJmsListeningContainer implements org.springframework.jms.listener.MessageListenerContainer {
  private static final java.lang.reflect.Method createSharedConsumerMethod;

  private static final java.lang.reflect.Method createSharedDurableConsumerMethod;

  private volatile java.lang.Object destination;

  private volatile java.lang.String messageSelector;

  private volatile java.lang.Object messageListener;

  private boolean subscriptionDurable;

  private boolean subscriptionShared;

  private java.lang.String subscriptionName;

  private java.lang.Boolean replyPubSubDomain;

  private boolean pubSubNoLocal;

  private org.springframework.jms.support.converter.MessageConverter messageConverter;

  private javax.jms.ExceptionListener exceptionListener;

  private org.springframework.util.ErrorHandler errorHandler;

  private boolean exposeListenerSession;

  private boolean acceptMessagesWhileStopping;

  public org.springframework.jms.listener.AbstractMessageListenerContainer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/jms/listener/AbstractJmsListeningContainer."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field subscriptionDurable:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field subscriptionShared:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field pubSubNoLocal:Z
      19: aload_0
      20: iconst_1
      21: putfield      #5                  // Field exposeListenerSession:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field acceptMessagesWhileStopping:Z
      29: return

  public abstract void setConcurrency(java.lang.String);

  public void setDestination(javax.jms.Destination);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field destination:Ljava/lang/Object;
       5: aload_1
       6: instanceof    #8                  // class javax/jms/Topic
       9: ifeq          24
      12: aload_1
      13: instanceof    #9                  // class javax/jms/Queue
      16: ifne          24
      19: aload_0
      20: iconst_1
      21: invokevirtual #10                 // Method setPubSubDomain:(Z)V
      24: return

  public javax.jms.Destination getDestination();
    Code:
       0: aload_0
       1: getfield      #7                  // Field destination:Ljava/lang/Object;
       4: instanceof    #11                 // class javax/jms/Destination
       7: ifeq          20
      10: aload_0
      11: getfield      #7                  // Field destination:Ljava/lang/Object;
      14: checkcast     #11                 // class javax/jms/Destination
      17: goto          21
      20: aconst_null
      21: areturn

  public void setDestinationName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field destination:Ljava/lang/Object;
       5: return

  public java.lang.String getDestinationName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field destination:Ljava/lang/Object;
       4: instanceof    #12                 // class java/lang/String
       7: ifeq          20
      10: aload_0
      11: getfield      #7                  // Field destination:Ljava/lang/Object;
      14: checkcast     #12                 // class java/lang/String
      17: goto          21
      20: aconst_null
      21: areturn

  protected java.lang.String getDestinationDescription();
    Code:
       0: aload_0
       1: getfield      #7                  // Field destination:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #13                 // Method java/lang/Object.toString:()Ljava/lang/String;
      13: goto          18
      16: ldc           #14                 // String
      18: areturn

  public void setMessageSelector(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field messageSelector:Ljava/lang/String;
       5: return

  public java.lang.String getMessageSelector();
    Code:
       0: aload_0
       1: getfield      #15                 // Field messageSelector:Ljava/lang/String;
       4: areturn

  public void setMessageListener(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method checkMessageListener:(Ljava/lang/Object;)V
       5: aload_0
       6: aload_1
       7: putfield      #17                 // Field messageListener:Ljava/lang/Object;
      10: aload_0
      11: getfield      #18                 // Field subscriptionName:Ljava/lang/String;
      14: ifnonnull     26
      17: aload_0
      18: aload_0
      19: aload_1
      20: invokevirtual #19                 // Method getDefaultSubscriptionName:(Ljava/lang/Object;)Ljava/lang/String;
      23: putfield      #18                 // Field subscriptionName:Ljava/lang/String;
      26: return

  public java.lang.Object getMessageListener();
    Code:
       0: aload_0
       1: getfield      #17                 // Field messageListener:Ljava/lang/Object;
       4: areturn

  protected void checkMessageListener(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #20                 // class javax/jms/MessageListener
       4: ifne          63
       7: aload_1
       8: instanceof    #21                 // class org/springframework/jms/listener/SessionAwareMessageListener
      11: ifne          63
      14: new           #22                 // class java/lang/IllegalArgumentException
      17: dup
      18: new           #23                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #25                 // String Message listener needs to be of type [
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: ldc           #20                 // class javax/jms/MessageListener
      32: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      35: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: ldc           #28                 // String ] or [
      40: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #21                 // class org/springframework/jms/listener/SessionAwareMessageListener
      45: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      48: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #29                 // String ]
      53: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: return

  protected java.lang.String getDefaultSubscriptionName(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #32                 // class org/springframework/jms/listener/SubscriptionNameProvider
       4: ifeq          17
       7: aload_1
       8: checkcast     #32                 // class org/springframework/jms/listener/SubscriptionNameProvider
      11: invokeinterface #33,  1           // InterfaceMethod org/springframework/jms/listener/SubscriptionNameProvider.getSubscriptionName:()Ljava/lang/String;
      16: areturn
      17: aload_1
      18: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: areturn

  public void setSubscriptionDurable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field subscriptionDurable:Z
       5: iload_1
       6: ifeq          14
       9: aload_0
      10: iconst_1
      11: invokevirtual #10                 // Method setPubSubDomain:(Z)V
      14: return

  public boolean isSubscriptionDurable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscriptionDurable:Z
       4: ireturn

  public void setSubscriptionShared(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field subscriptionShared:Z
       5: iload_1
       6: ifeq          14
       9: aload_0
      10: iconst_1
      11: invokevirtual #10                 // Method setPubSubDomain:(Z)V
      14: return

  public boolean isSubscriptionShared();
    Code:
       0: aload_0
       1: getfield      #3                  // Field subscriptionShared:Z
       4: ireturn

  public void setSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field subscriptionName:Ljava/lang/String;
       5: return

  public java.lang.String getSubscriptionName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field subscriptionName:Ljava/lang/String;
       4: areturn

  public void setDurableSubscriptionName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field subscriptionName:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: putfield      #2                  // Field subscriptionDurable:Z
      18: return

  public java.lang.String getDurableSubscriptionName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscriptionDurable:Z
       4: ifeq          14
       7: aload_0
       8: getfield      #18                 // Field subscriptionName:Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: areturn

  public void setPubSubNoLocal(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field pubSubNoLocal:Z
       5: return

  public boolean isPubSubNoLocal();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pubSubNoLocal:Z
       4: ireturn

  public void setReplyPubSubDomain(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #35                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #36                 // Field replyPubSubDomain:Ljava/lang/Boolean;
       8: return

  public boolean isReplyPubSubDomain();
    Code:
       0: aload_0
       1: getfield      #36                 // Field replyPubSubDomain:Ljava/lang/Boolean;
       4: ifnull        15
       7: aload_0
       8: getfield      #36                 // Field replyPubSubDomain:Ljava/lang/Boolean;
      11: invokevirtual #37                 // Method java/lang/Boolean.booleanValue:()Z
      14: ireturn
      15: aload_0
      16: invokevirtual #38                 // Method isPubSubDomain:()Z
      19: ireturn

  public void setMessageConverter(org.springframework.jms.support.converter.MessageConverter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field messageConverter:Lorg/springframework/jms/support/converter/MessageConverter;
       5: return

  public org.springframework.jms.support.converter.MessageConverter getMessageConverter();
    Code:
       0: aload_0
       1: getfield      #39                 // Field messageConverter:Lorg/springframework/jms/support/converter/MessageConverter;
       4: areturn

  public void setExceptionListener(javax.jms.ExceptionListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       5: return

  public javax.jms.ExceptionListener getExceptionListener();
    Code:
       0: aload_0
       1: getfield      #40                 // Field exceptionListener:Ljavax/jms/ExceptionListener;
       4: areturn

  public void setErrorHandler(org.springframework.util.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field errorHandler:Lorg/springframework/util/ErrorHandler;
       5: return

  public org.springframework.util.ErrorHandler getErrorHandler();
    Code:
       0: aload_0
       1: getfield      #41                 // Field errorHandler:Lorg/springframework/util/ErrorHandler;
       4: areturn

  public void setExposeListenerSession(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field exposeListenerSession:Z
       5: return

  public boolean isExposeListenerSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field exposeListenerSession:Z
       4: ireturn

  public void setAcceptMessagesWhileStopping(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field acceptMessagesWhileStopping:Z
       5: return

  public boolean isAcceptMessagesWhileStopping();
    Code:
       0: aload_0
       1: getfield      #6                  // Field acceptMessagesWhileStopping:Z
       4: ireturn

  protected void validateConfiguration();
    Code:
       0: aload_0
       1: getfield      #7                  // Field destination:Ljava/lang/Object;
       4: ifnonnull     17
       7: new           #22                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #42                 // String Property \'destination\' or \'destinationName\' is required
      13: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void setupMessageListener(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #43                 // Method setMessageListener:(Ljava/lang/Object;)V
       5: return

  protected void executeListener(javax.jms.Session, javax.jms.Message);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #44                 // Method doExecuteListener:(Ljavax/jms/Session;Ljavax/jms/Message;)V
       6: goto          15
       9: astore_3
      10: aload_0
      11: aload_3
      12: invokevirtual #46                 // Method handleListenerException:(Ljava/lang/Throwable;)V
      15: return
    Exception table:
       from    to  target type
           0     6     9   Class java/lang/Throwable

  protected void doExecuteListener(javax.jms.Session, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method isAcceptMessagesWhileStopping:()Z
       4: ifne          68
       7: aload_0
       8: invokevirtual #48                 // Method isRunning:()Z
      11: ifne          68
      14: aload_0
      15: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      18: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      23: ifeq          54
      26: aload_0
      27: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #23                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #51                 // String Rejecting received message because of the listener container having been stopped in the meantime:
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      54: aload_0
      55: aload_1
      56: invokevirtual #54                 // Method rollbackIfNecessary:(Ljavax/jms/Session;)V
      59: new           #55                 // class org/springframework/jms/listener/AbstractMessageListenerContainer$MessageRejectedWhileStoppingException
      62: dup
      63: aconst_null
      64: invokespecial #56                 // Method org/springframework/jms/listener/AbstractMessageListenerContainer$MessageRejectedWhileStoppingException."<init>":(Lorg/springframework/jms/listener/AbstractMessageListenerContainer$1;)V
      67: athrow
      68: aload_0
      69: aload_1
      70: aload_2
      71: invokevirtual #57                 // Method invokeListener:(Ljavax/jms/Session;Ljavax/jms/Message;)V
      74: goto          104
      77: astore_3
      78: aload_0
      79: aload_1
      80: aload_3
      81: invokevirtual #59                 // Method rollbackOnExceptionIfNecessary:(Ljavax/jms/Session;Ljava/lang/Throwable;)V
      84: aload_3
      85: athrow
      86: astore_3
      87: aload_0
      88: aload_1
      89: aload_3
      90: invokevirtual #59                 // Method rollbackOnExceptionIfNecessary:(Ljavax/jms/Session;Ljava/lang/Throwable;)V
      93: aload_3
      94: athrow
      95: astore_3
      96: aload_0
      97: aload_1
      98: aload_3
      99: invokevirtual #59                 // Method rollbackOnExceptionIfNecessary:(Ljavax/jms/Session;Ljava/lang/Throwable;)V
     102: aload_3
     103: athrow
     104: aload_0
     105: aload_1
     106: aload_2
     107: invokevirtual #62                 // Method commitIfNecessary:(Ljavax/jms/Session;Ljavax/jms/Message;)V
     110: return
    Exception table:
       from    to  target type
          68    74    77   Class javax/jms/JMSException
          68    74    86   Class java/lang/RuntimeException
          68    74    95   Class java/lang/Error

  protected void invokeListener(javax.jms.Session, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method getMessageListener:()Ljava/lang/Object;
       4: astore_3
       5: aload_3
       6: instanceof    #21                 // class org/springframework/jms/listener/SessionAwareMessageListener
       9: ifeq          25
      12: aload_0
      13: aload_3
      14: checkcast     #21                 // class org/springframework/jms/listener/SessionAwareMessageListener
      17: aload_1
      18: aload_2
      19: invokevirtual #64                 // Method doInvokeListener:(Lorg/springframework/jms/listener/SessionAwareMessageListener;Ljavax/jms/Session;Ljavax/jms/Message;)V
      22: goto          85
      25: aload_3
      26: instanceof    #20                 // class javax/jms/MessageListener
      29: ifeq          44
      32: aload_0
      33: aload_3
      34: checkcast     #20                 // class javax/jms/MessageListener
      37: aload_2
      38: invokevirtual #65                 // Method doInvokeListener:(Ljavax/jms/MessageListener;Ljavax/jms/Message;)V
      41: goto          85
      44: aload_3
      45: ifnull        75
      48: new           #22                 // class java/lang/IllegalArgumentException
      51: dup
      52: new           #23                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #66                 // String Only MessageListener and SessionAwareMessageListener supported:
      61: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_3
      65: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      68: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokespecial #31                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      74: athrow
      75: new           #67                 // class java/lang/IllegalStateException
      78: dup
      79: ldc           #68                 // String No message listener specified - see property \'messageListener\'
      81: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: return

  protected void doInvokeListener(org.springframework.jms.listener.SessionAwareMessageListener, javax.jms.Session, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aconst_null
       1: astore        4
       3: aconst_null
       4: astore        5
       6: aload_2
       7: astore        6
       9: aload_0
      10: invokevirtual #70                 // Method isExposeListenerSession:()Z
      13: ifne          34
      16: aload_0
      17: invokevirtual #71                 // Method createConnection:()Ljavax/jms/Connection;
      20: astore        4
      22: aload_0
      23: aload         4
      25: invokevirtual #72                 // Method createSession:(Ljavax/jms/Connection;)Ljavax/jms/Session;
      28: astore        5
      30: aload         5
      32: astore        6
      34: aload_1
      35: aload_3
      36: aload         6
      38: invokeinterface #73,  3           // InterfaceMethod org/springframework/jms/listener/SessionAwareMessageListener.onMessage:(Ljavax/jms/Message;Ljavax/jms/Session;)V
      43: aload         6
      45: aload_2
      46: if_acmpeq     73
      49: aload         6
      51: invokeinterface #74,  1           // InterfaceMethod javax/jms/Session.getTransacted:()Z
      56: ifeq          73
      59: aload_0
      60: aload         6
      62: invokevirtual #75                 // Method isSessionLocallyTransacted:(Ljavax/jms/Session;)Z
      65: ifeq          73
      68: aload         6
      70: invokestatic  #76                 // Method org/springframework/jms/support/JmsUtils.commitIfNecessary:(Ljavax/jms/Session;)V
      73: aload         5
      75: invokestatic  #77                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
      78: aload         4
      80: invokestatic  #78                 // Method org/springframework/jms/support/JmsUtils.closeConnection:(Ljavax/jms/Connection;)V
      83: goto          101
      86: astore        7
      88: aload         5
      90: invokestatic  #77                 // Method org/springframework/jms/support/JmsUtils.closeSession:(Ljavax/jms/Session;)V
      93: aload         4
      95: invokestatic  #78                 // Method org/springframework/jms/support/JmsUtils.closeConnection:(Ljavax/jms/Connection;)V
      98: aload         7
     100: athrow
     101: return
    Exception table:
       from    to  target type
           6    73    86   any
          86    88    86   any

  protected void doInvokeListener(javax.jms.MessageListener, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #79,  2           // InterfaceMethod javax/jms/MessageListener.onMessage:(Ljavax/jms/Message;)V
       7: return

  protected void commitIfNecessary(javax.jms.Session, javax.jms.Message) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod javax/jms/Session.getTransacted:()Z
       6: ifeq          24
       9: aload_0
      10: aload_1
      11: invokevirtual #75                 // Method isSessionLocallyTransacted:(Ljavax/jms/Session;)Z
      14: ifeq          42
      17: aload_1
      18: invokestatic  #76                 // Method org/springframework/jms/support/JmsUtils.commitIfNecessary:(Ljavax/jms/Session;)V
      21: goto          42
      24: aload_2
      25: ifnull        42
      28: aload_0
      29: aload_1
      30: invokevirtual #80                 // Method isClientAcknowledge:(Ljavax/jms/Session;)Z
      33: ifeq          42
      36: aload_2
      37: invokeinterface #81,  1           // InterfaceMethod javax/jms/Message.acknowledge:()V
      42: return

  protected void rollbackIfNecessary(javax.jms.Session) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod javax/jms/Session.getTransacted:()Z
       6: ifeq          24
       9: aload_0
      10: aload_1
      11: invokevirtual #75                 // Method isSessionLocallyTransacted:(Ljavax/jms/Session;)Z
      14: ifeq          38
      17: aload_1
      18: invokestatic  #82                 // Method org/springframework/jms/support/JmsUtils.rollbackIfNecessary:(Ljavax/jms/Session;)V
      21: goto          38
      24: aload_0
      25: aload_1
      26: invokevirtual #80                 // Method isClientAcknowledge:(Ljavax/jms/Session;)Z
      29: ifeq          38
      32: aload_1
      33: invokeinterface #83,  1           // InterfaceMethod javax/jms/Session.recover:()V
      38: return

  protected void rollbackOnExceptionIfNecessary(javax.jms.Session, java.lang.Throwable) throws javax.jms.JMSException;
    Code:
       0: aload_1
       1: invokeinterface #74,  1           // InterfaceMethod javax/jms/Session.getTransacted:()Z
       6: ifeq          48
       9: aload_0
      10: aload_1
      11: invokevirtual #75                 // Method isSessionLocallyTransacted:(Ljavax/jms/Session;)Z
      14: ifeq          62
      17: aload_0
      18: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      21: invokeinterface #84,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      26: ifeq          41
      29: aload_0
      30: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      33: ldc           #85                 // String Initiating transaction rollback on application exception
      35: aload_2
      36: invokeinterface #86,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      41: aload_1
      42: invokestatic  #82                 // Method org/springframework/jms/support/JmsUtils.rollbackIfNecessary:(Ljavax/jms/Session;)V
      45: goto          62
      48: aload_0
      49: aload_1
      50: invokevirtual #80                 // Method isClientAcknowledge:(Ljavax/jms/Session;)Z
      53: ifeq          62
      56: aload_1
      57: invokeinterface #83,  1           // InterfaceMethod javax/jms/Session.recover:()V
      62: goto          126
      65: astore_3
      66: aload_0
      67: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      70: ldc           #87                 // String Could not roll back because Session already closed
      72: aload_3
      73: invokeinterface #86,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      78: goto          126
      81: astore_3
      82: aload_0
      83: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      86: ldc           #88                 // String Application exception overridden by rollback exception
      88: aload_2
      89: invokeinterface #89,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      94: aload_3
      95: athrow
      96: astore_3
      97: aload_0
      98: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
     101: ldc           #88                 // String Application exception overridden by rollback exception
     103: aload_2
     104: invokeinterface #89,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     109: aload_3
     110: athrow
     111: astore_3
     112: aload_0
     113: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
     116: ldc           #90                 // String Application exception overridden by rollback error
     118: aload_2
     119: invokeinterface #89,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     124: aload_3
     125: athrow
     126: return
    Exception table:
       from    to  target type
           0    62    65   Class java/lang/IllegalStateException
           0    62    81   Class javax/jms/JMSException
           0    62    96   Class java/lang/RuntimeException
           0    62   111   Class java/lang/Error

  protected boolean isSessionLocallyTransacted(javax.jms.Session);
    Code:
       0: aload_0
       1: invokevirtual #91                 // Method isSessionTransacted:()Z
       4: ireturn

  protected javax.jms.MessageConsumer createConsumer(javax.jms.Session, javax.jms.Destination) throws javax.jms.JMSException;
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method isPubSubDomain:()Z
       4: ifeq          177
       7: aload_2
       8: instanceof    #8                  // class javax/jms/Topic
      11: ifeq          177
      14: aload_0
      15: invokevirtual #92                 // Method isSubscriptionShared:()Z
      18: ifeq          131
      21: aload_0
      22: invokevirtual #93                 // Method isSubscriptionDurable:()Z
      25: ifeq          34
      28: getstatic     #94                 // Field createSharedDurableConsumerMethod:Ljava/lang/reflect/Method;
      31: goto          37
      34: getstatic     #95                 // Field createSharedConsumerMethod:Ljava/lang/reflect/Method;
      37: astore_3
      38: aload_3
      39: aload_1
      40: iconst_3
      41: anewarray     #96                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_2
      47: aastore
      48: dup
      49: iconst_1
      50: aload_0
      51: invokevirtual #97                 // Method getSubscriptionName:()Ljava/lang/String;
      54: aastore
      55: dup
      56: iconst_2
      57: aload_0
      58: invokevirtual #98                 // Method getMessageSelector:()Ljava/lang/String;
      61: aastore
      62: invokevirtual #99                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      65: checkcast     #100                // class javax/jms/MessageConsumer
      68: areturn
      69: astore        4
      71: aload         4
      73: invokevirtual #102                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      76: instanceof    #58                 // class javax/jms/JMSException
      79: ifeq          91
      82: aload         4
      84: invokevirtual #102                // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      87: checkcast     #58                 // class javax/jms/JMSException
      90: athrow
      91: aload         4
      93: invokestatic  #103                // Method org/springframework/util/ReflectionUtils.handleInvocationTargetException:(Ljava/lang/reflect/InvocationTargetException;)V
      96: aconst_null
      97: areturn
      98: astore        4
     100: new           #67                 // class java/lang/IllegalStateException
     103: dup
     104: new           #23                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #105                // String Could not access JMS 2.0 API method:
     113: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload         4
     118: invokevirtual #106                // Method java/lang/IllegalAccessException.getMessage:()Ljava/lang/String;
     121: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #69                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: aload_0
     132: invokevirtual #93                 // Method isSubscriptionDurable:()Z
     135: ifeq          161
     138: aload_1
     139: aload_2
     140: checkcast     #8                  // class javax/jms/Topic
     143: aload_0
     144: invokevirtual #97                 // Method getSubscriptionName:()Ljava/lang/String;
     147: aload_0
     148: invokevirtual #98                 // Method getMessageSelector:()Ljava/lang/String;
     151: aload_0
     152: invokevirtual #107                // Method isPubSubNoLocal:()Z
     155: invokeinterface #108,  5          // InterfaceMethod javax/jms/Session.createDurableSubscriber:(Ljavax/jms/Topic;Ljava/lang/String;Ljava/lang/String;Z)Ljavax/jms/TopicSubscriber;
     160: areturn
     161: aload_1
     162: aload_2
     163: aload_0
     164: invokevirtual #98                 // Method getMessageSelector:()Ljava/lang/String;
     167: aload_0
     168: invokevirtual #107                // Method isPubSubNoLocal:()Z
     171: invokeinterface #109,  4          // InterfaceMethod javax/jms/Session.createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;Z)Ljavax/jms/MessageConsumer;
     176: areturn
     177: aload_1
     178: aload_2
     179: aload_0
     180: invokevirtual #98                 // Method getMessageSelector:()Ljava/lang/String;
     183: invokeinterface #110,  3          // InterfaceMethod javax/jms/Session.createConsumer:(Ljavax/jms/Destination;Ljava/lang/String;)Ljavax/jms/MessageConsumer;
     188: areturn
    Exception table:
       from    to  target type
          38    68    69   Class java/lang/reflect/InvocationTargetException
          38    68    98   Class java/lang/IllegalAccessException

  protected void handleListenerException(java.lang.Throwable);
    Code:
       0: aload_1
       1: instanceof    #55                 // class org/springframework/jms/listener/AbstractMessageListenerContainer$MessageRejectedWhileStoppingException
       4: ifeq          8
       7: return
       8: aload_1
       9: instanceof    #58                 // class javax/jms/JMSException
      12: ifeq          23
      15: aload_0
      16: aload_1
      17: checkcast     #58                 // class javax/jms/JMSException
      20: invokevirtual #111                // Method invokeExceptionListener:(Ljavax/jms/JMSException;)V
      23: aload_0
      24: invokevirtual #112                // Method isActive:()Z
      27: ifeq          38
      30: aload_0
      31: aload_1
      32: invokevirtual #113                // Method invokeErrorHandler:(Ljava/lang/Throwable;)V
      35: goto          50
      38: aload_0
      39: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      42: ldc           #114                // String Listener exception after container shutdown
      44: aload_1
      45: invokeinterface #86,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      50: return

  protected void invokeExceptionListener(javax.jms.JMSException);
    Code:
       0: aload_0
       1: invokevirtual #115                // Method getExceptionListener:()Ljavax/jms/ExceptionListener;
       4: astore_2
       5: aload_2
       6: ifnull        16
       9: aload_2
      10: aload_1
      11: invokeinterface #116,  2          // InterfaceMethod javax/jms/ExceptionListener.onException:(Ljavax/jms/JMSException;)V
      16: return

  protected void invokeErrorHandler(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #117                // Method getErrorHandler:()Lorg/springframework/util/ErrorHandler;
       4: astore_2
       5: aload_2
       6: ifnull        19
       9: aload_2
      10: aload_1
      11: invokeinterface #118,  2          // InterfaceMethod org/springframework/util/ErrorHandler.handleError:(Ljava/lang/Throwable;)V
      16: goto          31
      19: aload_0
      20: getfield      #49                 // Field logger:Lorg/apache/commons/logging/Log;
      23: ldc           #119                // String Execution of JMS message listener failed, and no ErrorHandler has been set.
      25: aload_1
      26: invokeinterface #120,  3          // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      31: return

  static {};
    Code:
       0: ldc           #121                // class javax/jms/Session
       2: ldc           #122                // String createSharedConsumer
       4: iconst_3
       5: anewarray     #123                // class java/lang/Class
       8: dup
       9: iconst_0
      10: ldc           #8                  // class javax/jms/Topic
      12: aastore
      13: dup
      14: iconst_1
      15: ldc           #12                 // class java/lang/String
      17: aastore
      18: dup
      19: iconst_2
      20: ldc           #12                 // class java/lang/String
      22: aastore
      23: invokestatic  #124                // Method org/springframework/util/ClassUtils.getMethodIfAvailable:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      26: putstatic     #95                 // Field createSharedConsumerMethod:Ljava/lang/reflect/Method;
      29: ldc           #121                // class javax/jms/Session
      31: ldc           #125                // String createSharedDurableConsumer
      33: iconst_3
      34: anewarray     #123                // class java/lang/Class
      37: dup
      38: iconst_0
      39: ldc           #8                  // class javax/jms/Topic
      41: aastore
      42: dup
      43: iconst_1
      44: ldc           #12                 // class java/lang/String
      46: aastore
      47: dup
      48: iconst_2
      49: ldc           #12                 // class java/lang/String
      51: aastore
      52: invokestatic  #124                // Method org/springframework/util/ClassUtils.getMethodIfAvailable:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      55: putstatic     #94                 // Field createSharedDurableConsumerMethod:Ljava/lang/reflect/Method;
      58: return
}
