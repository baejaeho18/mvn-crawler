Compiled from "GenericConversionService.java"
public class org.springframework.core.convert.support.GenericConversionService implements org.springframework.core.convert.support.ConfigurableConversionService {
  private static final org.springframework.core.convert.converter.GenericConverter NO_OP_CONVERTER;

  private static final org.springframework.core.convert.converter.GenericConverter NO_MATCH;

  private static java.lang.Object javaUtilOptionalEmpty;

  private final org.springframework.core.convert.support.GenericConversionService$Converters converters;

  private final java.util.Map<org.springframework.core.convert.support.GenericConversionService$ConverterCacheKey, org.springframework.core.convert.converter.GenericConverter> converterCache;

  public org.springframework.core.convert.support.GenericConversionService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/core/convert/support/GenericConversionService$Converters
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method org/springframework/core/convert/support/GenericConversionService$Converters."<init>":(Lorg/springframework/core/convert/support/GenericConversionService$1;)V
      13: putfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
      16: aload_0
      17: new           #5                  // class org/springframework/util/ConcurrentReferenceHashMap
      20: dup
      21: bipush        64
      23: invokespecial #6                  // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      26: putfield      #7                  // Field converterCache:Ljava/util/Map;
      29: return

  public void addConverter(org.springframework.core.convert.converter.Converter<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: ldc           #9                  // class org/springframework/core/convert/converter/Converter
       7: invokespecial #10                 // Method getRequiredTypeInfo:(Ljava/lang/Class;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
      10: astore_2
      11: aload_2
      12: ifnonnull     38
      15: aload_1
      16: instanceof    #11                 // class org/springframework/core/DecoratingProxy
      19: ifeq          38
      22: aload_0
      23: aload_1
      24: checkcast     #11                 // class org/springframework/core/DecoratingProxy
      27: invokeinterface #12,  1           // InterfaceMethod org/springframework/core/DecoratingProxy.getDecoratedClass:()Ljava/lang/Class;
      32: ldc           #9                  // class org/springframework/core/convert/converter/Converter
      34: invokespecial #10                 // Method getRequiredTypeInfo:(Ljava/lang/Class;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
      37: astore_2
      38: aload_2
      39: ifnonnull     80
      42: new           #13                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #14                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #16                 // String Unable to determine source type <S> and target type <T> for your Converter [
      55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #19                 // String ]; does the class parameterize those types?
      70: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: new           #22                 // class org/springframework/core/convert/support/GenericConversionService$ConverterAdapter
      84: dup
      85: aload_0
      86: aload_1
      87: aload_2
      88: iconst_0
      89: aaload
      90: aload_2
      91: iconst_1
      92: aaload
      93: invokespecial #23                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V
      96: invokevirtual #24                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      99: return

  public <S, T> void addConverter(java.lang.Class<S>, java.lang.Class<T>, org.springframework.core.convert.converter.Converter<? super S, ? extends T>);
    Code:
       0: aload_0
       1: new           #22                 // class org/springframework/core/convert/support/GenericConversionService$ConverterAdapter
       4: dup
       5: aload_0
       6: aload_3
       7: aload_1
       8: invokestatic  #25                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      11: aload_2
      12: invokestatic  #25                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
      15: invokespecial #23                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/Converter;Lorg/springframework/core/ResolvableType;Lorg/springframework/core/ResolvableType;)V
      18: invokevirtual #24                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
      21: return

  public void addConverter(org.springframework.core.convert.converter.GenericConverter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: aload_1
       5: invokevirtual #26                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.add:(Lorg/springframework/core/convert/converter/GenericConverter;)V
       8: aload_0
       9: invokespecial #27                 // Method invalidateCache:()V
      12: return

  public void addConverterFactory(org.springframework.core.convert.converter.ConverterFactory<?, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: ldc           #28                 // class org/springframework/core/convert/converter/ConverterFactory
       7: invokespecial #10                 // Method getRequiredTypeInfo:(Ljava/lang/Class;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
      10: astore_2
      11: aload_2
      12: ifnonnull     38
      15: aload_1
      16: instanceof    #11                 // class org/springframework/core/DecoratingProxy
      19: ifeq          38
      22: aload_0
      23: aload_1
      24: checkcast     #11                 // class org/springframework/core/DecoratingProxy
      27: invokeinterface #12,  1           // InterfaceMethod org/springframework/core/DecoratingProxy.getDecoratedClass:()Ljava/lang/Class;
      32: ldc           #28                 // class org/springframework/core/convert/converter/ConverterFactory
      34: invokespecial #10                 // Method getRequiredTypeInfo:(Ljava/lang/Class;Ljava/lang/Class;)[Lorg/springframework/core/ResolvableType;
      37: astore_2
      38: aload_2
      39: ifnonnull     80
      42: new           #13                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #14                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #29                 // String Unable to determine source type <S> and target type <T> for your ConverterFactory [
      55: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;
      65: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #19                 // String ]; does the class parameterize those types?
      70: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: aload_0
      81: new           #30                 // class org/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter
      84: dup
      85: aload_0
      86: aload_1
      87: new           #31                 // class org/springframework/core/convert/converter/GenericConverter$ConvertiblePair
      90: dup
      91: aload_2
      92: iconst_0
      93: aaload
      94: invokevirtual #32                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      97: aload_2
      98: iconst_1
      99: aaload
     100: invokevirtual #32                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
     103: invokespecial #33                 // Method org/springframework/core/convert/converter/GenericConverter$ConvertiblePair."<init>":(Ljava/lang/Class;Ljava/lang/Class;)V
     106: invokespecial #34                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterFactoryAdapter."<init>":(Lorg/springframework/core/convert/support/GenericConversionService;Lorg/springframework/core/convert/converter/ConverterFactory;Lorg/springframework/core/convert/converter/GenericConverter$ConvertiblePair;)V
     109: invokevirtual #24                 // Method addConverter:(Lorg/springframework/core/convert/converter/GenericConverter;)V
     112: return

  public void removeConvertible(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: aload_1
       5: aload_2
       6: invokevirtual #35                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.remove:(Ljava/lang/Class;Ljava/lang/Class;)V
       9: aload_0
      10: invokespecial #27                 // Method invalidateCache:()V
      13: return

  public boolean canConvert(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_2
       1: ldc           #36                 // String Target type to convert to cannot be null
       3: invokestatic  #37                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #38                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      15: goto          19
      18: aconst_null
      19: aload_2
      20: invokestatic  #38                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      23: invokevirtual #39                 // Method canConvert:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Z
      26: ireturn

  public boolean canConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ldc           #36                 // String Target type to convert to cannot be null
       3: invokestatic  #37                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #40                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      18: astore_3
      19: aload_3
      20: ifnull        27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean canBypassConvert(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: ldc           #36                 // String Target type to convert to cannot be null
       3: invokestatic  #37                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ifnonnull     12
      10: iconst_1
      11: ireturn
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokevirtual #40                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      18: astore_3
      19: aload_3
      20: getstatic     #41                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      23: if_acmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public <T> T convert(java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_2
       1: ldc           #36                 // String Target type to convert to cannot be null
       3: invokestatic  #37                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: aload_1
       9: invokestatic  #42                 // Method org/springframework/core/convert/TypeDescriptor.forObject:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
      12: aload_2
      13: invokestatic  #38                 // Method org/springframework/core/convert/TypeDescriptor.valueOf:(Ljava/lang/Class;)Lorg/springframework/core/convert/TypeDescriptor;
      16: invokevirtual #43                 // Method convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      19: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_3
       1: ldc           #36                 // String Target type to convert to cannot be null
       3: invokestatic  #37                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ifnonnull     37
      10: aload_1
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #44                 // String Source must be [null] if source type == [null]
      21: invokestatic  #45                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      24: aload_0
      25: aconst_null
      26: aload_3
      27: aload_0
      28: aconst_null
      29: aload_3
      30: invokevirtual #46                 // Method convertNullSource:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      33: invokespecial #47                 // Method handleResult:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;
      36: areturn
      37: aload_1
      38: ifnull        99
      41: aload_2
      42: invokevirtual #48                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      45: aload_1
      46: invokevirtual #49                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      49: ifne          99
      52: new           #13                 // class java/lang/IllegalArgumentException
      55: dup
      56: new           #14                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #50                 // String Source to convert from must be an instance of [
      65: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_2
      69: invokevirtual #51                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc           #52                 // String ]; instead it was a [
      74: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      81: invokevirtual #18                 // Method java/lang/Class.getName:()Ljava/lang/String;
      84: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #53                 // String ]
      89: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: aload_0
     100: aload_2
     101: aload_3
     102: invokevirtual #40                 // Method getConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
     105: astore        4
     107: aload         4
     109: ifnull        131
     112: aload         4
     114: aload_1
     115: aload_2
     116: aload_3
     117: invokestatic  #54                 // Method org/springframework/core/convert/support/ConversionUtils.invokeConverter:(Lorg/springframework/core/convert/converter/GenericConverter;Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     120: astore        5
     122: aload_0
     123: aload_2
     124: aload_3
     125: aload         5
     127: invokespecial #47                 // Method handleResult:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;)Ljava/lang/Object;
     130: areturn
     131: aload_0
     132: aload_1
     133: aload_2
     134: aload_3
     135: invokespecial #55                 // Method handleConverterNotFound:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
     138: areturn

  public java.lang.Object convert(java.lang.Object, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: invokestatic  #42                 // Method org/springframework/core/convert/TypeDescriptor.forObject:(Ljava/lang/Object;)Lorg/springframework/core/convert/TypeDescriptor;
       6: aload_2
       7: invokevirtual #43                 // Method convert:(Ljava/lang/Object;Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Ljava/lang/Object;
      10: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
       4: invokevirtual #56                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.toString:()Ljava/lang/String;
       7: areturn

  protected java.lang.Object convertNullSource(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: getstatic     #57                 // Field javaUtilOptionalEmpty:Ljava/lang/Object;
       3: ifnull        23
       6: aload_2
       7: invokevirtual #48                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      10: getstatic     #57                 // Field javaUtilOptionalEmpty:Ljava/lang/Object;
      13: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      16: if_acmpne     23
      19: getstatic     #57                 // Field javaUtilOptionalEmpty:Ljava/lang/Object;
      22: areturn
      23: aconst_null
      24: areturn

  protected org.springframework.core.convert.converter.GenericConverter getConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: new           #58                 // class org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #59                 // Method org/springframework/core/convert/support/GenericConversionService$ConverterCacheKey."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
       9: astore_3
      10: aload_0
      11: getfield      #7                  // Field converterCache:Ljava/util/Map;
      14: aload_3
      15: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #61                 // class org/springframework/core/convert/converter/GenericConverter
      23: astore        4
      25: aload         4
      27: ifnull        45
      30: aload         4
      32: getstatic     #62                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      35: if_acmpeq     43
      38: aload         4
      40: goto          44
      43: aconst_null
      44: areturn
      45: aload_0
      46: getfield      #4                  // Field converters:Lorg/springframework/core/convert/support/GenericConversionService$Converters;
      49: aload_1
      50: aload_2
      51: invokevirtual #63                 // Method org/springframework/core/convert/support/GenericConversionService$Converters.find:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      54: astore        4
      56: aload         4
      58: ifnonnull     69
      61: aload_0
      62: aload_1
      63: aload_2
      64: invokevirtual #64                 // Method getDefaultConverter:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)Lorg/springframework/core/convert/converter/GenericConverter;
      67: astore        4
      69: aload         4
      71: ifnull        90
      74: aload_0
      75: getfield      #7                  // Field converterCache:Ljava/util/Map;
      78: aload_3
      79: aload         4
      81: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload         4
      89: areturn
      90: aload_0
      91: getfield      #7                  // Field converterCache:Ljava/util/Map;
      94: aload_3
      95: getstatic     #62                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      98: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     103: pop
     104: aconst_null
     105: areturn

  protected org.springframework.core.convert.converter.GenericConverter getDefaultConverter(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #66                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
       5: ifeq          14
       8: getstatic     #41                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      11: goto          15
      14: aconst_null
      15: areturn

  private org.springframework.core.ResolvableType[] getRequiredTypeInfo(java.lang.Class<?>, java.lang.Class<?>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method org/springframework/core/ResolvableType.forClass:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       4: aload_2
       5: invokevirtual #67                 // Method org/springframework/core/ResolvableType.as:(Ljava/lang/Class;)Lorg/springframework/core/ResolvableType;
       8: astore_3
       9: aload_3
      10: invokevirtual #68                 // Method org/springframework/core/ResolvableType.getGenerics:()[Lorg/springframework/core/ResolvableType;
      13: astore        4
      15: aload         4
      17: arraylength
      18: iconst_2
      19: if_icmpge     24
      22: aconst_null
      23: areturn
      24: aload         4
      26: iconst_0
      27: aaload
      28: invokevirtual #32                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      31: astore        5
      33: aload         4
      35: iconst_1
      36: aaload
      37: invokevirtual #32                 // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      40: astore        6
      42: aload         5
      44: ifnull        52
      47: aload         6
      49: ifnonnull     54
      52: aconst_null
      53: areturn
      54: aload         4
      56: areturn

  private void invalidateCache();
    Code:
       0: aload_0
       1: getfield      #7                  // Field converterCache:Ljava/util/Map;
       4: invokeinterface #69,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  private java.lang.Object handleConverterNotFound(java.lang.Object, org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: aload_0
       5: aload_2
       6: aload_3
       7: invokespecial #70                 // Method assertNotPrimitiveTargetType:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      10: aconst_null
      11: areturn
      12: aload_2
      13: aload_3
      14: invokevirtual #66                 // Method org/springframework/core/convert/TypeDescriptor.isAssignableTo:(Lorg/springframework/core/convert/TypeDescriptor;)Z
      17: ifeq          33
      20: aload_3
      21: invokevirtual #48                 // Method org/springframework/core/convert/TypeDescriptor.getObjectType:()Ljava/lang/Class;
      24: aload_1
      25: invokevirtual #49                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      28: ifeq          33
      31: aload_1
      32: areturn
      33: new           #71                 // class org/springframework/core/convert/ConverterNotFoundException
      36: dup
      37: aload_2
      38: aload_3
      39: invokespecial #72                 // Method org/springframework/core/convert/ConverterNotFoundException."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      42: athrow

  private java.lang.Object handleResult(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor, java.lang.Object);
    Code:
       0: aload_3
       1: ifnonnull     10
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #70                 // Method assertNotPrimitiveTargetType:(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;)V
      10: aload_3
      11: areturn

  private void assertNotPrimitiveTargetType(org.springframework.core.convert.TypeDescriptor, org.springframework.core.convert.TypeDescriptor);
    Code:
       0: aload_2
       1: invokevirtual #73                 // Method org/springframework/core/convert/TypeDescriptor.isPrimitive:()Z
       4: ifeq          27
       7: new           #74                 // class org/springframework/core/convert/ConversionFailedException
      10: dup
      11: aload_1
      12: aload_2
      13: aconst_null
      14: new           #13                 // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #75                 // String A null value cannot be assigned to a primitive type
      20: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: invokespecial #76                 // Method org/springframework/core/convert/ConversionFailedException."<init>":(Lorg/springframework/core/convert/TypeDescriptor;Lorg/springframework/core/convert/TypeDescriptor;Ljava/lang/Object;Ljava/lang/Throwable;)V
      26: athrow
      27: return

  static {};
    Code:
       0: new           #77                 // class org/springframework/core/convert/support/GenericConversionService$NoOpConverter
       3: dup
       4: ldc           #78                 // String NO_OP
       6: invokespecial #79                 // Method org/springframework/core/convert/support/GenericConversionService$NoOpConverter."<init>":(Ljava/lang/String;)V
       9: putstatic     #41                 // Field NO_OP_CONVERTER:Lorg/springframework/core/convert/converter/GenericConverter;
      12: new           #77                 // class org/springframework/core/convert/support/GenericConversionService$NoOpConverter
      15: dup
      16: ldc           #80                 // String NO_MATCH
      18: invokespecial #79                 // Method org/springframework/core/convert/support/GenericConversionService$NoOpConverter."<init>":(Ljava/lang/String;)V
      21: putstatic     #62                 // Field NO_MATCH:Lorg/springframework/core/convert/converter/GenericConverter;
      24: aconst_null
      25: putstatic     #57                 // Field javaUtilOptionalEmpty:Ljava/lang/Object;
      28: ldc           #81                 // String java.util.Optional
      30: ldc           #82                 // class org/springframework/core/convert/support/GenericConversionService
      32: invokevirtual #83                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      35: invokestatic  #84                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      38: astore_0
      39: aload_0
      40: ldc           #85                 // String empty
      42: iconst_0
      43: anewarray     #86                 // class java/lang/Class
      46: invokestatic  #87                 // Method org/springframework/util/ClassUtils.getMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      49: aconst_null
      50: iconst_0
      51: anewarray     #88                 // class java/lang/Object
      54: invokevirtual #89                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      57: putstatic     #57                 // Field javaUtilOptionalEmpty:Ljava/lang/Object;
      60: goto          64
      63: astore_0
      64: return
    Exception table:
       from    to  target type
          28    60    63   Class java/lang/Exception
}
