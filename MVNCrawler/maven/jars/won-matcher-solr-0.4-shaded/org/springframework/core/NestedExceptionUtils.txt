Compiled from "NestedExceptionUtils.java"
public abstract class org.springframework.core.NestedExceptionUtils {
  public org.springframework.core.NestedExceptionUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String buildMessage(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_0
       5: areturn
       6: new           #2                  // class java/lang/StringBuilder
       9: dup
      10: bipush        64
      12: invokespecial #3                  // Method java/lang/StringBuilder."<init>":(I)V
      15: astore_2
      16: aload_0
      17: ifnull        31
      20: aload_2
      21: aload_0
      22: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #5                  // String ;
      27: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_2
      32: ldc           #6                  // String nested exception is
      34: invokevirtual #4                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_1
      38: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_2
      43: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public static java.lang.Throwable getRootCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aconst_null
       7: astore_1
       8: aload_0
       9: invokevirtual #9                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      12: astore_2
      13: aload_2
      14: ifnull        32
      17: aload_2
      18: aload_1
      19: if_acmpeq     32
      22: aload_2
      23: astore_1
      24: aload_2
      25: invokevirtual #9                  // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      28: astore_2
      29: goto          13
      32: aload_1
      33: areturn

  public static java.lang.Throwable getMostSpecificCause(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #10                 // Method getRootCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          14
      13: aload_0
      14: areturn
}
