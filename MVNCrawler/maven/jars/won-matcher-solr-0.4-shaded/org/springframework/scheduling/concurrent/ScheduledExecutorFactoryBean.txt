Compiled from "ScheduledExecutorFactoryBean.java"
public class org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean extends org.springframework.scheduling.concurrent.ExecutorConfigurationSupport implements org.springframework.beans.factory.FactoryBean<java.util.concurrent.ScheduledExecutorService> {
  private static final boolean setRemoveOnCancelPolicyAvailable;

  private int poolSize;

  private org.springframework.scheduling.concurrent.ScheduledExecutorTask[] scheduledExecutorTasks;

  private boolean removeOnCancelPolicy;

  private boolean continueScheduledExecutionAfterException;

  private boolean exposeUnconfigurableExecutor;

  private java.util.concurrent.ScheduledExecutorService exposedExecutor;

  public org.springframework.scheduling.concurrent.ScheduledExecutorFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/scheduling/concurrent/ExecutorConfigurationSupport."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field poolSize:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field removeOnCancelPolicy:Z
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field continueScheduledExecutionAfterException:Z
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field exposeUnconfigurableExecutor:Z
      24: return

  public void setPoolSize(int);
    Code:
       0: iload_1
       1: ifle          8
       4: iconst_1
       5: goto          9
       8: iconst_0
       9: ldc           #6                  // String \'poolSize\' must be 1 or higher
      11: invokestatic  #7                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_0
      15: iload_1
      16: putfield      #2                  // Field poolSize:I
      19: return

  public void setScheduledExecutorTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field scheduledExecutorTasks:[Lorg/springframework/scheduling/concurrent/ScheduledExecutorTask;
       5: return

  public void setRemoveOnCancelPolicy(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field removeOnCancelPolicy:Z
       5: return

  public void setContinueScheduledExecutionAfterException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field continueScheduledExecutionAfterException:Z
       5: return

  public void setExposeUnconfigurableExecutor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field exposeUnconfigurableExecutor:Z
       5: return

  protected java.util.concurrent.ExecutorService initializeExecutor(java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field poolSize:I
       5: aload_1
       6: aload_2
       7: invokevirtual #9                  // Method createExecutor:(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)Ljava/util/concurrent/ScheduledExecutorService;
      10: astore_3
      11: aload_0
      12: getfield      #3                  // Field removeOnCancelPolicy:Z
      15: ifeq          53
      18: getstatic     #10                 // Field setRemoveOnCancelPolicyAvailable:Z
      21: ifeq          42
      24: aload_3
      25: instanceof    #11                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      28: ifeq          42
      31: aload_3
      32: checkcast     #11                 // class java/util/concurrent/ScheduledThreadPoolExecutor
      35: iconst_1
      36: invokevirtual #12                 // Method java/util/concurrent/ScheduledThreadPoolExecutor.setRemoveOnCancelPolicy:(Z)V
      39: goto          53
      42: aload_0
      43: getfield      #13                 // Field logger:Lorg/apache/commons/logging/Log;
      46: ldc           #14                 // String Could not apply remove-on-cancel policy - not a Java 7+ ScheduledThreadPoolExecutor
      48: invokeinterface #15,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      53: aload_0
      54: getfield      #8                  // Field scheduledExecutorTasks:[Lorg/springframework/scheduling/concurrent/ScheduledExecutorTask;
      57: invokestatic  #16                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      60: ifne          72
      63: aload_0
      64: aload_0
      65: getfield      #8                  // Field scheduledExecutorTasks:[Lorg/springframework/scheduling/concurrent/ScheduledExecutorTask;
      68: aload_3
      69: invokevirtual #17                 // Method registerTasks:([Lorg/springframework/scheduling/concurrent/ScheduledExecutorTask;Ljava/util/concurrent/ScheduledExecutorService;)V
      72: aload_0
      73: aload_0
      74: getfield      #5                  // Field exposeUnconfigurableExecutor:Z
      77: ifeq          87
      80: aload_3
      81: invokestatic  #18                 // Method java/util/concurrent/Executors.unconfigurableScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;
      84: goto          88
      87: aload_3
      88: putfield      #19                 // Field exposedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      91: aload_3
      92: areturn

  protected java.util.concurrent.ScheduledExecutorService createExecutor(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler);
    Code:
       0: new           #11                 // class java/util/concurrent/ScheduledThreadPoolExecutor
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: invokespecial #20                 // Method java/util/concurrent/ScheduledThreadPoolExecutor."<init>":(ILjava/util/concurrent/ThreadFactory;Ljava/util/concurrent/RejectedExecutionHandler;)V
      10: areturn

  protected void registerTasks(org.springframework.scheduling.concurrent.ScheduledExecutorTask[], java.util.concurrent.ScheduledExecutorService);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: arraylength
       4: istore        4
       6: iconst_0
       7: istore        5
       9: iload         5
      11: iload         4
      13: if_icmpge     125
      16: aload_3
      17: iload         5
      19: aaload
      20: astore        6
      22: aload_0
      23: aload         6
      25: invokevirtual #21                 // Method getRunnableToSchedule:(Lorg/springframework/scheduling/concurrent/ScheduledExecutorTask;)Ljava/lang/Runnable;
      28: astore        7
      30: aload         6
      32: invokevirtual #22                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.isOneTimeTask:()Z
      35: ifeq          60
      38: aload_2
      39: aload         7
      41: aload         6
      43: invokevirtual #23                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getDelay:()J
      46: aload         6
      48: invokevirtual #24                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      51: invokeinterface #25,  5           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      56: pop
      57: goto          119
      60: aload         6
      62: invokevirtual #26                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.isFixedRate:()Z
      65: ifeq          95
      68: aload_2
      69: aload         7
      71: aload         6
      73: invokevirtual #23                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getDelay:()J
      76: aload         6
      78: invokevirtual #27                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getPeriod:()J
      81: aload         6
      83: invokevirtual #24                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      86: invokeinterface #28,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
      91: pop
      92: goto          119
      95: aload_2
      96: aload         7
      98: aload         6
     100: invokevirtual #23                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getDelay:()J
     103: aload         6
     105: invokevirtual #27                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getPeriod:()J
     108: aload         6
     110: invokevirtual #24                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getTimeUnit:()Ljava/util/concurrent/TimeUnit;
     113: invokeinterface #29,  7           // InterfaceMethod java/util/concurrent/ScheduledExecutorService.scheduleWithFixedDelay:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;
     118: pop
     119: iinc          5, 1
     122: goto          9
     125: return

  protected java.lang.Runnable getRunnableToSchedule(org.springframework.scheduling.concurrent.ScheduledExecutorTask);
    Code:
       0: aload_0
       1: getfield      #4                  // Field continueScheduledExecutionAfterException:Z
       4: ifeq          24
       7: new           #30                 // class org/springframework/scheduling/support/DelegatingErrorHandlingRunnable
      10: dup
      11: aload_1
      12: invokevirtual #31                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getRunnable:()Ljava/lang/Runnable;
      15: getstatic     #32                 // Field org/springframework/scheduling/support/TaskUtils.LOG_AND_SUPPRESS_ERROR_HANDLER:Lorg/springframework/util/ErrorHandler;
      18: invokespecial #33                 // Method org/springframework/scheduling/support/DelegatingErrorHandlingRunnable."<init>":(Ljava/lang/Runnable;Lorg/springframework/util/ErrorHandler;)V
      21: goto          38
      24: new           #30                 // class org/springframework/scheduling/support/DelegatingErrorHandlingRunnable
      27: dup
      28: aload_1
      29: invokevirtual #31                 // Method org/springframework/scheduling/concurrent/ScheduledExecutorTask.getRunnable:()Ljava/lang/Runnable;
      32: getstatic     #34                 // Field org/springframework/scheduling/support/TaskUtils.LOG_AND_PROPAGATE_ERROR_HANDLER:Lorg/springframework/util/ErrorHandler;
      35: invokespecial #33                 // Method org/springframework/scheduling/support/DelegatingErrorHandlingRunnable."<init>":(Ljava/lang/Runnable;Lorg/springframework/util/ErrorHandler;)V
      38: areturn

  public java.util.concurrent.ScheduledExecutorService getObject();
    Code:
       0: aload_0
       1: getfield      #19                 // Field exposedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  public java.lang.Class<? extends java.util.concurrent.ScheduledExecutorService> getObjectType();
    Code:
       0: aload_0
       1: getfield      #19                 // Field exposedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
       4: ifnull        17
       7: aload_0
       8: getfield      #19                 // Field exposedExecutor:Ljava/util/concurrent/ScheduledExecutorService;
      11: invokevirtual #35                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #36                 // class java/util/concurrent/ScheduledExecutorService
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method getObject:()Ljava/util/concurrent/ScheduledExecutorService;
       4: areturn

  static {};
    Code:
       0: ldc           #11                 // class java/util/concurrent/ScheduledThreadPoolExecutor
       2: ldc           #38                 // String setRemoveOnCancelPolicy
       4: iconst_1
       5: anewarray     #39                 // class java/lang/Class
       8: dup
       9: iconst_0
      10: getstatic     #40                 // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      13: aastore
      14: invokestatic  #41                 // Method org/springframework/util/ClassUtils.hasMethod:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)Z
      17: putstatic     #10                 // Field setRemoveOnCancelPolicyAvailable:Z
      20: return
}
