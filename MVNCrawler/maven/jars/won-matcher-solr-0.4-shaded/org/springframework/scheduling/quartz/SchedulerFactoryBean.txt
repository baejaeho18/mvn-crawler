Compiled from "SchedulerFactoryBean.java"
public class org.springframework.scheduling.quartz.SchedulerFactoryBean extends org.springframework.scheduling.quartz.SchedulerAccessor implements org.springframework.beans.factory.FactoryBean<org.quartz.Scheduler>, org.springframework.beans.factory.BeanNameAware, org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.beans.factory.DisposableBean, org.springframework.context.SmartLifecycle {
  public static final java.lang.String PROP_THREAD_COUNT;

  public static final int DEFAULT_THREAD_COUNT;

  private static final java.lang.ThreadLocal<org.springframework.core.io.ResourceLoader> configTimeResourceLoaderHolder;

  private static final java.lang.ThreadLocal<java.util.concurrent.Executor> configTimeTaskExecutorHolder;

  private static final java.lang.ThreadLocal<javax.sql.DataSource> configTimeDataSourceHolder;

  private static final java.lang.ThreadLocal<javax.sql.DataSource> configTimeNonTransactionalDataSourceHolder;

  private org.quartz.SchedulerFactory schedulerFactory;

  private java.lang.Class<? extends org.quartz.SchedulerFactory> schedulerFactoryClass;

  private java.lang.String schedulerName;

  private org.springframework.core.io.Resource configLocation;

  private java.util.Properties quartzProperties;

  private java.util.concurrent.Executor taskExecutor;

  private javax.sql.DataSource dataSource;

  private javax.sql.DataSource nonTransactionalDataSource;

  private java.util.Map<java.lang.String, ?> schedulerContextMap;

  private org.springframework.context.ApplicationContext applicationContext;

  private java.lang.String applicationContextSchedulerContextKey;

  private org.quartz.spi.JobFactory jobFactory;

  private boolean jobFactorySet;

  private boolean autoStartup;

  private int startupDelay;

  private int phase;

  private boolean exposeSchedulerInRepository;

  private boolean waitForJobsToCompleteOnShutdown;

  private org.quartz.Scheduler scheduler;

  public org.springframework.scheduling.quartz.SchedulerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/scheduling/quartz/SchedulerAccessor."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/quartz/impl/StdSchedulerFactory
       7: putfield      #3                  // Field schedulerFactoryClass:Ljava/lang/Class;
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field jobFactorySet:Z
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field autoStartup:Z
      20: aload_0
      21: iconst_0
      22: putfield      #6                  // Field startupDelay:I
      25: aload_0
      26: ldc           #8                  // int 2147483647
      28: putfield      #9                  // Field phase:I
      31: aload_0
      32: iconst_0
      33: putfield      #10                 // Field exposeSchedulerInRepository:Z
      36: aload_0
      37: iconst_0
      38: putfield      #11                 // Field waitForJobsToCompleteOnShutdown:Z
      41: return

  public static org.springframework.core.io.ResourceLoader getConfigTimeResourceLoader();
    Code:
       0: getstatic     #12                 // Field configTimeResourceLoaderHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #14                 // class org/springframework/core/io/ResourceLoader
       9: areturn

  public static java.util.concurrent.Executor getConfigTimeTaskExecutor();
    Code:
       0: getstatic     #15                 // Field configTimeTaskExecutorHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #16                 // class java/util/concurrent/Executor
       9: areturn

  public static javax.sql.DataSource getConfigTimeDataSource();
    Code:
       0: getstatic     #17                 // Field configTimeDataSourceHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #18                 // class javax/sql/DataSource
       9: areturn

  public static javax.sql.DataSource getConfigTimeNonTransactionalDataSource();
    Code:
       0: getstatic     #19                 // Field configTimeNonTransactionalDataSourceHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #13                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #18                 // class javax/sql/DataSource
       9: areturn

  public void setSchedulerFactory(org.quartz.SchedulerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field schedulerFactory:Lorg/quartz/SchedulerFactory;
       5: return

  public void setSchedulerFactoryClass(java.lang.Class<? extends org.quartz.SchedulerFactory>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field schedulerFactoryClass:Ljava/lang/Class;
       5: return

  public void setSchedulerName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field schedulerName:Ljava/lang/String;
       5: return

  public void setConfigLocation(org.springframework.core.io.Resource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field configLocation:Lorg/springframework/core/io/Resource;
       5: return

  public void setQuartzProperties(java.util.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field quartzProperties:Ljava/util/Properties;
       5: return

  public void setTaskExecutor(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
       5: return

  public void setDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
       5: return

  public void setNonTransactionalDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
       5: return

  public void setSchedulerContextAsMap(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #27                 // Field schedulerContextMap:Ljava/util/Map;
       5: return

  public void setApplicationContextSchedulerContextKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #28                 // Field applicationContextSchedulerContextKey:Ljava/lang/String;
       5: return

  public void setJobFactory(org.quartz.spi.JobFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
       5: aload_0
       6: iconst_1
       7: putfield      #4                  // Field jobFactorySet:Z
      10: return

  public void setAutoStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field autoStartup:Z
       5: return

  public boolean isAutoStartup();
    Code:
       0: aload_0
       1: getfield      #5                  // Field autoStartup:Z
       4: ireturn

  public void setPhase(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field phase:I
       5: return

  public int getPhase();
    Code:
       0: aload_0
       1: getfield      #9                  // Field phase:I
       4: ireturn

  public void setStartupDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field startupDelay:I
       5: return

  public void setExposeSchedulerInRepository(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field exposeSchedulerInRepository:Z
       5: return

  public void setWaitForJobsToCompleteOnShutdown(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field waitForJobsToCompleteOnShutdown:Z
       5: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field schedulerName:Ljava/lang/String;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #21                 // Field schedulerName:Ljava/lang/String;
      12: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #30                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
       4: ifnonnull     22
       7: aload_0
       8: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
      11: ifnull        22
      14: aload_0
      15: aload_0
      16: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
      19: putfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
      22: aload_0
      23: getfield      #30                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      26: ifnull        44
      29: aload_0
      30: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      33: ifnonnull     44
      36: aload_0
      37: aload_0
      38: getfield      #30                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      41: putfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      44: aload_0
      45: aload_0
      46: aload_0
      47: invokespecial #32                 // Method prepareSchedulerFactory:()Lorg/quartz/SchedulerFactory;
      50: invokespecial #33                 // Method prepareScheduler:(Lorg/quartz/SchedulerFactory;)Lorg/quartz/Scheduler;
      53: putfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      56: aload_0
      57: invokevirtual #35                 // Method registerListeners:()V
      60: aload_0
      61: invokevirtual #36                 // Method registerJobsAndTriggers:()V
      64: goto          96
      67: astore_1
      68: aload_0
      69: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      72: iconst_1
      73: invokeinterface #38,  2           // InterfaceMethod org/quartz/Scheduler.shutdown:(Z)V
      78: goto          94
      81: astore_2
      82: aload_0
      83: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      86: ldc           #40                 // String Scheduler shutdown exception after registration failure
      88: aload_2
      89: invokeinterface #41,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      94: aload_1
      95: athrow
      96: return
    Exception table:
       from    to  target type
          56    64    67   Class java/lang/Exception
          68    78    81   Class java/lang/Exception

  private org.quartz.SchedulerFactory prepareSchedulerFactory() throws org.quartz.SchedulerException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #20                 // Field schedulerFactory:Lorg/quartz/SchedulerFactory;
       4: astore_1
       5: aload_1
       6: ifnonnull     93
       9: aload_0
      10: getfield      #3                  // Field schedulerFactoryClass:Ljava/lang/Class;
      13: invokestatic  #42                 // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
      16: checkcast     #43                 // class org/quartz/SchedulerFactory
      19: astore_1
      20: aload_1
      21: instanceof    #2                  // class org/quartz/impl/StdSchedulerFactory
      24: ifeq          38
      27: aload_0
      28: aload_1
      29: checkcast     #2                  // class org/quartz/impl/StdSchedulerFactory
      32: invokespecial #44                 // Method initSchedulerFactory:(Lorg/quartz/impl/StdSchedulerFactory;)V
      35: goto          93
      38: aload_0
      39: getfield      #22                 // Field configLocation:Lorg/springframework/core/io/Resource;
      42: ifnonnull     66
      45: aload_0
      46: getfield      #23                 // Field quartzProperties:Ljava/util/Properties;
      49: ifnonnull     66
      52: aload_0
      53: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
      56: ifnonnull     66
      59: aload_0
      60: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
      63: ifnull        93
      66: new           #45                 // class java/lang/IllegalArgumentException
      69: dup
      70: new           #46                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #48                 // String StdSchedulerFactory required for applying Quartz properties:
      79: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_1
      94: areturn

  private void initSchedulerFactory(org.quartz.impl.StdSchedulerFactory) throws org.quartz.SchedulerException, java.io.IOException;
    Code:
       0: new           #53                 // class java/util/Properties
       3: dup
       4: invokespecial #54                 // Method java/util/Properties."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      12: ifnull        27
      15: aload_2
      16: ldc           #55                 // String org.quartz.scheduler.classLoadHelper.class
      18: ldc           #56                 // class org/springframework/scheduling/quartz/ResourceLoaderClassLoadHelper
      20: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #58                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      26: pop
      27: aload_0
      28: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
      31: ifnull        49
      34: aload_2
      35: ldc           #59                 // String org.quartz.threadPool.class
      37: ldc           #60                 // class org/springframework/scheduling/quartz/LocalTaskExecutorThreadPool
      39: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      42: invokevirtual #58                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      45: pop
      46: goto          73
      49: aload_2
      50: ldc           #59                 // String org.quartz.threadPool.class
      52: ldc           #61                 // class org/quartz/simpl/SimpleThreadPool
      54: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      57: invokevirtual #58                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      60: pop
      61: aload_2
      62: ldc           #63                 // String org.quartz.threadPool.threadCount
      64: bipush        10
      66: invokestatic  #64                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      69: invokevirtual #58                 // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
      72: pop
      73: aload_0
      74: getfield      #22                 // Field configLocation:Lorg/springframework/core/io/Resource;
      77: ifnull        136
      80: aload_0
      81: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      84: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      89: ifeq          128
      92: aload_0
      93: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      96: new           #46                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #66                 // String Loading Quartz config from [
     105: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_0
     109: getfield      #22                 // Field configLocation:Lorg/springframework/core/io/Resource;
     112: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: ldc           #67                 // String ]
     117: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     128: aload_2
     129: aload_0
     130: getfield      #22                 // Field configLocation:Lorg/springframework/core/io/Resource;
     133: invokestatic  #69                 // Method org/springframework/core/io/support/PropertiesLoaderUtils.fillProperties:(Ljava/util/Properties;Lorg/springframework/core/io/Resource;)V
     136: aload_0
     137: getfield      #23                 // Field quartzProperties:Ljava/util/Properties;
     140: aload_2
     141: invokestatic  #70                 // Method org/springframework/util/CollectionUtils.mergePropertiesIntoMap:(Ljava/util/Properties;Ljava/util/Map;)V
     144: aload_0
     145: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
     148: ifnull        163
     151: aload_2
     152: ldc           #71                 // String org.quartz.jobStore.class
     154: ldc           #72                 // class org/springframework/scheduling/quartz/LocalDataSourceJobStore
     156: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
     159: invokevirtual #73                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     162: pop
     163: aload_0
     164: getfield      #21                 // Field schedulerName:Ljava/lang/String;
     167: ifnull        181
     170: aload_2
     171: ldc           #74                 // String org.quartz.scheduler.instanceName
     173: aload_0
     174: getfield      #21                 // Field schedulerName:Ljava/lang/String;
     177: invokevirtual #73                 // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     180: pop
     181: aload_1
     182: aload_2
     183: invokevirtual #75                 // Method org/quartz/impl/StdSchedulerFactory.initialize:(Ljava/util/Properties;)V
     186: return

  private org.quartz.Scheduler prepareScheduler(org.quartz.SchedulerFactory) throws org.quartz.SchedulerException;
    Code:
       0: aload_0
       1: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
       4: ifnull        17
       7: getstatic     #12                 // Field configTimeResourceLoaderHolder:Ljava/lang/ThreadLocal;
      10: aload_0
      11: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      14: invokevirtual #76                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      17: aload_0
      18: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
      21: ifnull        34
      24: getstatic     #15                 // Field configTimeTaskExecutorHolder:Ljava/lang/ThreadLocal;
      27: aload_0
      28: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
      31: invokevirtual #76                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
      38: ifnull        51
      41: getstatic     #17                 // Field configTimeDataSourceHolder:Ljava/lang/ThreadLocal;
      44: aload_0
      45: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
      48: invokevirtual #76                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      51: aload_0
      52: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
      55: ifnull        68
      58: getstatic     #19                 // Field configTimeNonTransactionalDataSourceHolder:Ljava/lang/ThreadLocal;
      61: aload_0
      62: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
      65: invokevirtual #76                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      68: aload_0
      69: aload_1
      70: aload_0
      71: getfield      #21                 // Field schedulerName:Ljava/lang/String;
      74: invokevirtual #77                 // Method createScheduler:(Lorg/quartz/SchedulerFactory;Ljava/lang/String;)Lorg/quartz/Scheduler;
      77: astore_2
      78: aload_0
      79: aload_2
      80: invokespecial #78                 // Method populateSchedulerContext:(Lorg/quartz/Scheduler;)V
      83: aload_0
      84: getfield      #4                  // Field jobFactorySet:Z
      87: ifne          108
      90: aload_2
      91: instanceof    #79                 // class org/quartz/impl/RemoteScheduler
      94: ifne          108
      97: aload_0
      98: new           #80                 // class org/springframework/scheduling/quartz/AdaptableJobFactory
     101: dup
     102: invokespecial #81                 // Method org/springframework/scheduling/quartz/AdaptableJobFactory."<init>":()V
     105: putfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
     108: aload_0
     109: getfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
     112: ifnull        153
     115: aload_0
     116: getfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
     119: instanceof    #82                 // class org/springframework/scheduling/quartz/SchedulerContextAware
     122: ifeq          143
     125: aload_0
     126: getfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
     129: checkcast     #82                 // class org/springframework/scheduling/quartz/SchedulerContextAware
     132: aload_2
     133: invokeinterface #83,  1           // InterfaceMethod org/quartz/Scheduler.getContext:()Lorg/quartz/SchedulerContext;
     138: invokeinterface #84,  2           // InterfaceMethod org/springframework/scheduling/quartz/SchedulerContextAware.setSchedulerContext:(Lorg/quartz/SchedulerContext;)V
     143: aload_2
     144: aload_0
     145: getfield      #29                 // Field jobFactory:Lorg/quartz/spi/JobFactory;
     148: invokeinterface #85,  2           // InterfaceMethod org/quartz/Scheduler.setJobFactory:(Lorg/quartz/spi/JobFactory;)V
     153: aload_2
     154: astore_3
     155: aload_0
     156: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
     159: ifnull        168
     162: getstatic     #12                 // Field configTimeResourceLoaderHolder:Ljava/lang/ThreadLocal;
     165: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     168: aload_0
     169: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
     172: ifnull        181
     175: getstatic     #15                 // Field configTimeTaskExecutorHolder:Ljava/lang/ThreadLocal;
     178: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     181: aload_0
     182: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
     185: ifnull        194
     188: getstatic     #17                 // Field configTimeDataSourceHolder:Ljava/lang/ThreadLocal;
     191: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     194: aload_0
     195: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
     198: ifnull        207
     201: getstatic     #19                 // Field configTimeNonTransactionalDataSourceHolder:Ljava/lang/ThreadLocal;
     204: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     207: aload_3
     208: areturn
     209: astore        4
     211: aload_0
     212: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
     215: ifnull        224
     218: getstatic     #12                 // Field configTimeResourceLoaderHolder:Ljava/lang/ThreadLocal;
     221: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     224: aload_0
     225: getfield      #24                 // Field taskExecutor:Ljava/util/concurrent/Executor;
     228: ifnull        237
     231: getstatic     #15                 // Field configTimeTaskExecutorHolder:Ljava/lang/ThreadLocal;
     234: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     237: aload_0
     238: getfield      #25                 // Field dataSource:Ljavax/sql/DataSource;
     241: ifnull        250
     244: getstatic     #17                 // Field configTimeDataSourceHolder:Ljava/lang/ThreadLocal;
     247: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     250: aload_0
     251: getfield      #26                 // Field nonTransactionalDataSource:Ljavax/sql/DataSource;
     254: ifnull        263
     257: getstatic     #19                 // Field configTimeNonTransactionalDataSourceHolder:Ljava/lang/ThreadLocal;
     260: invokevirtual #86                 // Method java/lang/ThreadLocal.remove:()V
     263: aload         4
     265: athrow
    Exception table:
       from    to  target type
          68   155   209   any
         209   211   209   any

  protected org.quartz.Scheduler createScheduler(org.quartz.SchedulerFactory, java.lang.String) throws org.quartz.SchedulerException;
    Code:
       0: invokestatic  #87                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_3
       4: aload_3
       5: invokevirtual #88                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       8: astore        4
      10: aload_0
      11: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      14: ifnull        35
      17: aload_0
      18: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      21: invokeinterface #89,  1           // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
      26: aload         4
      28: if_acmpeq     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore        5
      38: iload         5
      40: ifeq          56
      43: aload_3
      44: aload_0
      45: getfield      #31                 // Field resourceLoader:Lorg/springframework/core/io/ResourceLoader;
      48: invokeinterface #89,  1           // InterfaceMethod org/springframework/core/io/ResourceLoader.getClassLoader:()Ljava/lang/ClassLoader;
      53: invokevirtual #90                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
      56: invokestatic  #91                 // Method org/quartz/impl/SchedulerRepository.getInstance:()Lorg/quartz/impl/SchedulerRepository;
      59: astore        6
      61: aload         6
      63: dup
      64: astore        7
      66: monitorenter
      67: aload_2
      68: ifnull        80
      71: aload         6
      73: aload_2
      74: invokevirtual #92                 // Method org/quartz/impl/SchedulerRepository.lookup:(Ljava/lang/String;)Lorg/quartz/Scheduler;
      77: goto          81
      80: aconst_null
      81: astore        8
      83: aload_1
      84: invokeinterface #93,  1           // InterfaceMethod org/quartz/SchedulerFactory.getScheduler:()Lorg/quartz/Scheduler;
      89: astore        9
      91: aload         9
      93: aload         8
      95: if_acmpne     130
      98: new           #94                 // class java/lang/IllegalStateException
     101: dup
     102: new           #46                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #95                 // String Active Scheduler of name \'
     111: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_2
     115: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: ldc           #96                 // String \' already registered in Quartz SchedulerRepository. Cannot create a new Spring-managed Scheduler of the same name!
     120: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     126: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: aload_0
     131: getfield      #10                 // Field exposeSchedulerInRepository:Z
     134: ifne          151
     137: invokestatic  #91                 // Method org/quartz/impl/SchedulerRepository.getInstance:()Lorg/quartz/impl/SchedulerRepository;
     140: aload         9
     142: invokeinterface #98,  1           // InterfaceMethod org/quartz/Scheduler.getSchedulerName:()Ljava/lang/String;
     147: invokevirtual #99                 // Method org/quartz/impl/SchedulerRepository.remove:(Ljava/lang/String;)Z
     150: pop
     151: aload         9
     153: astore        10
     155: aload         7
     157: monitorexit
     158: iload         5
     160: ifeq          169
     163: aload_3
     164: aload         4
     166: invokevirtual #90                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
     169: aload         10
     171: areturn
     172: astore        11
     174: aload         7
     176: monitorexit
     177: aload         11
     179: athrow
     180: astore        12
     182: iload         5
     184: ifeq          193
     187: aload_3
     188: aload         4
     190: invokevirtual #90                 // Method java/lang/Thread.setContextClassLoader:(Ljava/lang/ClassLoader;)V
     193: aload         12
     195: athrow
    Exception table:
       from    to  target type
          67   158   172   any
         172   177   172   any
          56   158   180   any
         172   182   180   any

  private void populateSchedulerContext(org.quartz.Scheduler) throws org.quartz.SchedulerException;
    Code:
       0: aload_0
       1: getfield      #27                 // Field schedulerContextMap:Ljava/util/Map;
       4: ifnull        20
       7: aload_1
       8: invokeinterface #83,  1           // InterfaceMethod org/quartz/Scheduler.getContext:()Lorg/quartz/SchedulerContext;
      13: aload_0
      14: getfield      #27                 // Field schedulerContextMap:Ljava/util/Map;
      17: invokevirtual #100                // Method org/quartz/SchedulerContext.putAll:(Ljava/util/Map;)V
      20: aload_0
      21: getfield      #28                 // Field applicationContextSchedulerContextKey:Ljava/lang/String;
      24: ifnull        62
      27: aload_0
      28: getfield      #30                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      31: ifnonnull     44
      34: new           #94                 // class java/lang/IllegalStateException
      37: dup
      38: ldc           #101                // String SchedulerFactoryBean needs to be set up in an ApplicationContext to be able to handle an \'applicationContextSchedulerContextKey\'
      40: invokespecial #97                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: invokeinterface #83,  1           // InterfaceMethod org/quartz/Scheduler.getContext:()Lorg/quartz/SchedulerContext;
      50: aload_0
      51: getfield      #28                 // Field applicationContextSchedulerContextKey:Ljava/lang/String;
      54: aload_0
      55: getfield      #30                 // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      58: invokevirtual #102                // Method org/quartz/SchedulerContext.put:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: return

  protected void startScheduler(org.quartz.Scheduler, int) throws org.quartz.SchedulerException;
    Code:
       0: iload_2
       1: ifgt          24
       4: aload_0
       5: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
       8: ldc           #103                // String Starting Quartz Scheduler now
      10: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      15: aload_1
      16: invokeinterface #104,  1          // InterfaceMethod org/quartz/Scheduler.start:()V
      21: goto          136
      24: aload_0
      25: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      28: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      33: ifeq          83
      36: aload_0
      37: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      40: new           #46                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      47: ldc           #105                // String Will start Quartz Scheduler [
      49: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_1
      53: invokeinterface #98,  1           // InterfaceMethod org/quartz/Scheduler.getSchedulerName:()Ljava/lang/String;
      58: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #106                // String ] in
      63: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: iload_2
      67: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      70: ldc           #108                // String  seconds
      72: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      83: new           #109                // class org/springframework/scheduling/quartz/SchedulerFactoryBean$1
      86: dup
      87: aload_0
      88: iload_2
      89: aload_1
      90: invokespecial #110                // Method org/springframework/scheduling/quartz/SchedulerFactoryBean$1."<init>":(Lorg/springframework/scheduling/quartz/SchedulerFactoryBean;ILorg/quartz/Scheduler;)V
      93: astore_3
      94: aload_3
      95: new           #46                 // class java/lang/StringBuilder
      98: dup
      99: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     102: ldc           #111                // String Quartz Scheduler [
     104: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: aload_1
     108: invokeinterface #98,  1           // InterfaceMethod org/quartz/Scheduler.getSchedulerName:()Ljava/lang/String;
     113: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: ldc           #67                 // String ]
     118: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     121: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokevirtual #112                // Method java/lang/Thread.setName:(Ljava/lang/String;)V
     127: aload_3
     128: iconst_1
     129: invokevirtual #113                // Method java/lang/Thread.setDaemon:(Z)V
     132: aload_3
     133: invokevirtual #114                // Method java/lang/Thread.start:()V
     136: return

  public org.quartz.Scheduler getScheduler();
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: areturn

  public org.quartz.Scheduler getObject();
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: areturn

  public java.lang.Class<? extends org.quartz.Scheduler> getObjectType();
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: ifnull        17
       7: aload_0
       8: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      11: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: goto          19
      17: ldc           #116                // class org/quartz/Scheduler
      19: areturn

  public boolean isSingleton();
    Code:
       0: iconst_1
       1: ireturn

  public void start() throws org.springframework.scheduling.SchedulingException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: ifnull        34
       7: aload_0
       8: aload_0
       9: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      12: aload_0
      13: getfield      #6                  // Field startupDelay:I
      16: invokevirtual #117                // Method startScheduler:(Lorg/quartz/Scheduler;I)V
      19: goto          34
      22: astore_1
      23: new           #119                // class org/springframework/scheduling/SchedulingException
      26: dup
      27: ldc           #120                // String Could not start Quartz Scheduler
      29: aload_1
      30: invokespecial #121                // Method org/springframework/scheduling/SchedulingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      33: athrow
      34: return
    Exception table:
       from    to  target type
           7    19    22   Class org/quartz/SchedulerException

  public void stop() throws org.springframework.scheduling.SchedulingException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: ifnull        31
       7: aload_0
       8: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      11: invokeinterface #122,  1          // InterfaceMethod org/quartz/Scheduler.standby:()V
      16: goto          31
      19: astore_1
      20: new           #119                // class org/springframework/scheduling/SchedulingException
      23: dup
      24: ldc           #123                // String Could not stop Quartz Scheduler
      26: aload_1
      27: invokespecial #121                // Method org/springframework/scheduling/SchedulingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      30: athrow
      31: return
    Exception table:
       from    to  target type
           7    16    19   Class org/quartz/SchedulerException

  public void stop(java.lang.Runnable) throws org.springframework.scheduling.SchedulingException;
    Code:
       0: aload_0
       1: invokevirtual #124                // Method stop:()V
       4: aload_1
       5: invokeinterface #125,  1          // InterfaceMethod java/lang/Runnable.run:()V
      10: return

  public boolean isRunning() throws org.springframework.scheduling.SchedulingException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: ifnull        28
       7: aload_0
       8: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      11: invokeinterface #126,  1          // InterfaceMethod org/quartz/Scheduler.isInStandbyMode:()Z
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn
      25: astore_1
      26: iconst_0
      27: ireturn
      28: iconst_0
      29: ireturn
    Exception table:
       from    to  target type
           7    24    25   Class org/quartz/SchedulerException

  public void destroy() throws org.quartz.SchedulerException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
       4: ifnull        31
       7: aload_0
       8: getfield      #39                 // Field logger:Lorg/apache/commons/logging/Log;
      11: ldc           #127                // String Shutting down Quartz Scheduler
      13: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      18: aload_0
      19: getfield      #34                 // Field scheduler:Lorg/quartz/Scheduler;
      22: aload_0
      23: getfield      #11                 // Field waitForJobsToCompleteOnShutdown:Z
      26: invokeinterface #38,  2           // InterfaceMethod org/quartz/Scheduler.shutdown:(Z)V
      31: return

  public java.lang.Object getObject() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #128                // Method getObject:()Lorg/quartz/Scheduler;
       4: areturn

  static {};
    Code:
       0: new           #129                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #130                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #12                 // Field configTimeResourceLoaderHolder:Ljava/lang/ThreadLocal;
      10: new           #129                // class java/lang/ThreadLocal
      13: dup
      14: invokespecial #130                // Method java/lang/ThreadLocal."<init>":()V
      17: putstatic     #15                 // Field configTimeTaskExecutorHolder:Ljava/lang/ThreadLocal;
      20: new           #129                // class java/lang/ThreadLocal
      23: dup
      24: invokespecial #130                // Method java/lang/ThreadLocal."<init>":()V
      27: putstatic     #17                 // Field configTimeDataSourceHolder:Ljava/lang/ThreadLocal;
      30: new           #129                // class java/lang/ThreadLocal
      33: dup
      34: invokespecial #130                // Method java/lang/ThreadLocal."<init>":()V
      37: putstatic     #19                 // Field configTimeNonTransactionalDataSourceHolder:Ljava/lang/ThreadLocal;
      40: return
}
