Compiled from "ExponentialBackOff.java"
class org.springframework.util.backoff.ExponentialBackOff$ExponentialBackOffExecution implements org.springframework.util.backoff.BackOffExecution {
  private long currentInterval;

  private long currentElapsedTime;

  final org.springframework.util.backoff.ExponentialBackOff this$0;

  private org.springframework.util.backoff.ExponentialBackOff$ExponentialBackOffExecution(org.springframework.util.backoff.ExponentialBackOff);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: ldc2_w        #4                  // long -1l
      13: putfield      #6                  // Field currentInterval:J
      16: aload_0
      17: lconst_0
      18: putfield      #7                  // Field currentElapsedTime:J
      21: return

  public long nextBackOff();
    Code:
       0: aload_0
       1: getfield      #7                  // Field currentElapsedTime:J
       4: aload_0
       5: getfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
       8: invokestatic  #8                  // Method org/springframework/util/backoff/ExponentialBackOff.access$100:(Lorg/springframework/util/backoff/ExponentialBackOff;)J
      11: lcmp
      12: iflt          19
      15: ldc2_w        #4                  // long -1l
      18: lreturn
      19: aload_0
      20: invokespecial #10                 // Method computeNextInterval:()J
      23: lstore_1
      24: aload_0
      25: dup
      26: getfield      #7                  // Field currentElapsedTime:J
      29: lload_1
      30: ladd
      31: putfield      #7                  // Field currentElapsedTime:J
      34: lload_1
      35: lreturn

  private long computeNextInterval();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
       4: invokevirtual #11                 // Method org/springframework/util/backoff/ExponentialBackOff.getMaxInterval:()J
       7: lstore_1
       8: aload_0
       9: getfield      #6                  // Field currentInterval:J
      12: lload_1
      13: lcmp
      14: iflt          19
      17: lload_1
      18: lreturn
      19: aload_0
      20: getfield      #6                  // Field currentInterval:J
      23: lconst_0
      24: lcmp
      25: ifge          54
      28: aload_0
      29: getfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
      32: invokevirtual #12                 // Method org/springframework/util/backoff/ExponentialBackOff.getInitialInterval:()J
      35: lstore_3
      36: aload_0
      37: lload_3
      38: lload_1
      39: lcmp
      40: ifge          47
      43: lload_3
      44: goto          48
      47: lload_1
      48: putfield      #6                  // Field currentInterval:J
      51: goto          63
      54: aload_0
      55: aload_0
      56: lload_1
      57: invokespecial #13                 // Method multiplyInterval:(J)J
      60: putfield      #6                  // Field currentInterval:J
      63: aload_0
      64: getfield      #6                  // Field currentInterval:J
      67: lreturn

  private long multiplyInterval(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentInterval:J
       4: lstore_3
       5: lload_3
       6: l2d
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
      11: invokevirtual #14                 // Method org/springframework/util/backoff/ExponentialBackOff.getMultiplier:()D
      14: dmul
      15: d2l
      16: lstore_3
      17: lload_3
      18: lload_1
      19: lcmp
      20: ifle          27
      23: lload_1
      24: goto          28
      27: lload_3
      28: lreturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: ldc           #16                 // String ExponentialBackOff{
       6: invokespecial #17                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_1
      11: ldc           #18                 // String currentInterval=
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: getfield      #6                  // Field currentInterval:J
      20: lconst_0
      21: lcmp
      22: ifge          30
      25: ldc           #20                 // String n/a
      27: goto          52
      30: new           #15                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      37: aload_0
      38: getfield      #6                  // Field currentInterval:J
      41: invokevirtual #22                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      44: ldc           #23                 // String ms
      46: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: pop
      56: aload_1
      57: ldc           #25                 // String , multiplier=
      59: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload_0
      63: getfield      #2                  // Field this$0:Lorg/springframework/util/backoff/ExponentialBackOff;
      66: invokevirtual #14                 // Method org/springframework/util/backoff/ExponentialBackOff.getMultiplier:()D
      69: invokevirtual #26                 // Method java/lang/StringBuilder.append:(D)Ljava/lang/StringBuilder;
      72: pop
      73: aload_1
      74: bipush        125
      76: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: areturn

  org.springframework.util.backoff.ExponentialBackOff$ExponentialBackOffExecution(org.springframework.util.backoff.ExponentialBackOff, org.springframework.util.backoff.ExponentialBackOff$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lorg/springframework/util/backoff/ExponentialBackOff;)V
       5: return
}
