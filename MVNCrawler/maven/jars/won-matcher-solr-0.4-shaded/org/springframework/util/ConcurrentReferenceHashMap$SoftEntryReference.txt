Compiled from "ConcurrentReferenceHashMap.java"
final class org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference<K, V> extends java.lang.ref.SoftReference<org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>> implements org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> {
  private final int hash;

  private final org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> nextReference;

  public org.springframework.util.ConcurrentReferenceHashMap$SoftEntryReference(org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>, int, org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, java.lang.ref.ReferenceQueue<org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload         4
       4: invokespecial #1                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
       7: aload_0
       8: iload_2
       9: putfield      #2                  // Field hash:I
      12: aload_0
      13: aload_3
      14: putfield      #3                  // Field nextReference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      17: return

  public int getHash();
    Code:
       0: aload_0
       1: getfield      #2                  // Field hash:I
       4: ireturn

  public org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> getNext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field nextReference:Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: areturn

  public void release();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method enqueue:()Z
       4: pop
       5: aload_0
       6: invokevirtual #5                  // Method clear:()V
       9: return

  public org.springframework.util.ConcurrentReferenceHashMap$Entry get();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/springframework/util/ConcurrentReferenceHashMap$Entry
       7: areturn
}
