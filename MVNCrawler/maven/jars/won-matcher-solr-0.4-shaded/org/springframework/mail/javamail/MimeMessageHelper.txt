Compiled from "MimeMessageHelper.java"
public class org.springframework.mail.javamail.MimeMessageHelper {
  public static final int MULTIPART_MODE_NO;

  public static final int MULTIPART_MODE_MIXED;

  public static final int MULTIPART_MODE_RELATED;

  public static final int MULTIPART_MODE_MIXED_RELATED;

  private static final java.lang.String MULTIPART_SUBTYPE_MIXED;

  private static final java.lang.String MULTIPART_SUBTYPE_RELATED;

  private static final java.lang.String MULTIPART_SUBTYPE_ALTERNATIVE;

  private static final java.lang.String CONTENT_TYPE_ALTERNATIVE;

  private static final java.lang.String CONTENT_TYPE_HTML;

  private static final java.lang.String CONTENT_TYPE_CHARSET_SUFFIX;

  private static final java.lang.String HEADER_PRIORITY;

  private static final java.lang.String HEADER_CONTENT_ID;

  private final javax.mail.internet.MimeMessage mimeMessage;

  private javax.mail.internet.MimeMultipart rootMimeMultipart;

  private javax.mail.internet.MimeMultipart mimeMultipart;

  private final java.lang.String encoding;

  private javax.activation.FileTypeMap fileTypeMap;

  private boolean validateAddresses;

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljavax/mail/internet/MimeMessage;Ljava/lang/String;)V
       6: return

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field validateAddresses:Z
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      14: aload_0
      15: aload_2
      16: ifnull        23
      19: aload_2
      20: goto          28
      23: aload_0
      24: aload_1
      25: invokevirtual #5                  // Method getDefaultEncoding:(Ljavax/mail/internet/MimeMessage;)Ljava/lang/String;
      28: putfield      #6                  // Field encoding:Ljava/lang/String;
      31: aload_0
      32: aload_0
      33: aload_1
      34: invokevirtual #7                  // Method getDefaultFileTypeMap:(Ljavax/mail/internet/MimeMessage;)Ljavax/activation/FileTypeMap;
      37: putfield      #8                  // Field fileTypeMap:Ljavax/activation/FileTypeMap;
      40: return

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage, boolean) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #9                  // Method "<init>":(Ljavax/mail/internet/MimeMessage;ZLjava/lang/String;)V
       7: return

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage, boolean, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: ifeq          10
       6: iconst_3
       7: goto          11
      10: iconst_0
      11: aload_3
      12: invokespecial #11                 // Method "<init>":(Ljavax/mail/internet/MimeMessage;ILjava/lang/String;)V
      15: return

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage, int) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #11                 // Method "<init>":(Ljavax/mail/internet/MimeMessage;ILjava/lang/String;)V
       7: return

  public org.springframework.mail.javamail.MimeMessageHelper(javax.mail.internet.MimeMessage, int, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #3                  // Field validateAddresses:Z
       9: aload_0
      10: aload_1
      11: putfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      14: aload_0
      15: aload_1
      16: iload_2
      17: invokevirtual #12                 // Method createMimeMultiparts:(Ljavax/mail/internet/MimeMessage;I)V
      20: aload_0
      21: aload_3
      22: ifnull        29
      25: aload_3
      26: goto          34
      29: aload_0
      30: aload_1
      31: invokevirtual #5                  // Method getDefaultEncoding:(Ljavax/mail/internet/MimeMessage;)Ljava/lang/String;
      34: putfield      #6                  // Field encoding:Ljava/lang/String;
      37: aload_0
      38: aload_0
      39: aload_1
      40: invokevirtual #7                  // Method getDefaultFileTypeMap:(Ljavax/mail/internet/MimeMessage;)Ljavax/activation/FileTypeMap;
      43: putfield      #8                  // Field fileTypeMap:Ljavax/activation/FileTypeMap;
      46: return

  public final javax.mail.internet.MimeMessage getMimeMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
       4: areturn

  protected void createMimeMultiparts(javax.mail.internet.MimeMessage, int) throws javax.mail.MessagingException;
    Code:
       0: iload_2
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 41
                     2: 65
                     3: 93
               default: 155
          }
      32: aload_0
      33: aconst_null
      34: aconst_null
      35: invokevirtual #13                 // Method setMimeMultiparts:(Ljavax/mail/internet/MimeMultipart;Ljavax/mail/internet/MimeMultipart;)V
      38: goto          165
      41: new           #14                 // class javax/mail/internet/MimeMultipart
      44: dup
      45: ldc           #15                 // String mixed
      47: invokespecial #16                 // Method javax/mail/internet/MimeMultipart."<init>":(Ljava/lang/String;)V
      50: astore_3
      51: aload_1
      52: aload_3
      53: invokevirtual #17                 // Method javax/mail/internet/MimeMessage.setContent:(Ljavax/mail/Multipart;)V
      56: aload_0
      57: aload_3
      58: aload_3
      59: invokevirtual #13                 // Method setMimeMultiparts:(Ljavax/mail/internet/MimeMultipart;Ljavax/mail/internet/MimeMultipart;)V
      62: goto          165
      65: new           #14                 // class javax/mail/internet/MimeMultipart
      68: dup
      69: ldc           #18                 // String related
      71: invokespecial #16                 // Method javax/mail/internet/MimeMultipart."<init>":(Ljava/lang/String;)V
      74: astore        4
      76: aload_1
      77: aload         4
      79: invokevirtual #17                 // Method javax/mail/internet/MimeMessage.setContent:(Ljavax/mail/Multipart;)V
      82: aload_0
      83: aload         4
      85: aload         4
      87: invokevirtual #13                 // Method setMimeMultiparts:(Ljavax/mail/internet/MimeMultipart;Ljavax/mail/internet/MimeMultipart;)V
      90: goto          165
      93: new           #14                 // class javax/mail/internet/MimeMultipart
      96: dup
      97: ldc           #15                 // String mixed
      99: invokespecial #16                 // Method javax/mail/internet/MimeMultipart."<init>":(Ljava/lang/String;)V
     102: astore        5
     104: aload_1
     105: aload         5
     107: invokevirtual #17                 // Method javax/mail/internet/MimeMessage.setContent:(Ljavax/mail/Multipart;)V
     110: new           #14                 // class javax/mail/internet/MimeMultipart
     113: dup
     114: ldc           #18                 // String related
     116: invokespecial #16                 // Method javax/mail/internet/MimeMultipart."<init>":(Ljava/lang/String;)V
     119: astore        6
     121: new           #19                 // class javax/mail/internet/MimeBodyPart
     124: dup
     125: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
     128: astore        7
     130: aload         7
     132: aload         6
     134: invokevirtual #21                 // Method javax/mail/internet/MimeBodyPart.setContent:(Ljavax/mail/Multipart;)V
     137: aload         5
     139: aload         7
     141: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
     144: aload_0
     145: aload         5
     147: aload         6
     149: invokevirtual #13                 // Method setMimeMultiparts:(Ljavax/mail/internet/MimeMultipart;Ljavax/mail/internet/MimeMultipart;)V
     152: goto          165
     155: new           #23                 // class java/lang/IllegalArgumentException
     158: dup
     159: ldc           #24                 // String Only multipart modes MIXED_RELATED, RELATED and NO supported
     161: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     164: athrow
     165: return

  protected final void setMimeMultiparts(javax.mail.internet.MimeMultipart, javax.mail.internet.MimeMultipart);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #26                 // Field rootMimeMultipart:Ljavax/mail/internet/MimeMultipart;
       5: aload_0
       6: aload_2
       7: putfield      #27                 // Field mimeMultipart:Ljavax/mail/internet/MimeMultipart;
      10: return

  public final boolean isMultipart();
    Code:
       0: aload_0
       1: getfield      #26                 // Field rootMimeMultipart:Ljavax/mail/internet/MimeMultipart;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private void checkMultipart() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method isMultipart:()Z
       4: ifne          17
       7: new           #29                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #30                 // String Not in multipart mode - create an appropriate MimeMessageHelper via a constructor that takes a \'multipart\' flag if you need to set alternative texts or add inline elements or attachments.
      13: invokespecial #31                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public final javax.mail.internet.MimeMultipart getRootMimeMultipart() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #32                 // Method checkMultipart:()V
       4: aload_0
       5: getfield      #26                 // Field rootMimeMultipart:Ljavax/mail/internet/MimeMultipart;
       8: areturn

  public final javax.mail.internet.MimeMultipart getMimeMultipart() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #32                 // Method checkMultipart:()V
       4: aload_0
       5: getfield      #27                 // Field mimeMultipart:Ljavax/mail/internet/MimeMultipart;
       8: areturn

  protected java.lang.String getDefaultEncoding(javax.mail.internet.MimeMessage);
    Code:
       0: aload_1
       1: instanceof    #33                 // class org/springframework/mail/javamail/SmartMimeMessage
       4: ifeq          15
       7: aload_1
       8: checkcast     #33                 // class org/springframework/mail/javamail/SmartMimeMessage
      11: invokevirtual #34                 // Method org/springframework/mail/javamail/SmartMimeMessage.getDefaultEncoding:()Ljava/lang/String;
      14: areturn
      15: aconst_null
      16: areturn

  public java.lang.String getEncoding();
    Code:
       0: aload_0
       1: getfield      #6                  // Field encoding:Ljava/lang/String;
       4: areturn

  protected javax.activation.FileTypeMap getDefaultFileTypeMap(javax.mail.internet.MimeMessage);
    Code:
       0: aload_1
       1: instanceof    #33                 // class org/springframework/mail/javamail/SmartMimeMessage
       4: ifeq          21
       7: aload_1
       8: checkcast     #33                 // class org/springframework/mail/javamail/SmartMimeMessage
      11: invokevirtual #35                 // Method org/springframework/mail/javamail/SmartMimeMessage.getDefaultFileTypeMap:()Ljavax/activation/FileTypeMap;
      14: astore_2
      15: aload_2
      16: ifnull        21
      19: aload_2
      20: areturn
      21: new           #36                 // class org/springframework/mail/javamail/ConfigurableMimeFileTypeMap
      24: dup
      25: invokespecial #37                 // Method org/springframework/mail/javamail/ConfigurableMimeFileTypeMap."<init>":()V
      28: astore_2
      29: aload_2
      30: invokevirtual #38                 // Method org/springframework/mail/javamail/ConfigurableMimeFileTypeMap.afterPropertiesSet:()V
      33: aload_2
      34: areturn

  public void setFileTypeMap(javax.activation.FileTypeMap);
    Code:
       0: aload_0
       1: aload_1
       2: ifnull        9
       5: aload_1
       6: goto          17
       9: aload_0
      10: aload_0
      11: invokevirtual #39                 // Method getMimeMessage:()Ljavax/mail/internet/MimeMessage;
      14: invokevirtual #7                  // Method getDefaultFileTypeMap:(Ljavax/mail/internet/MimeMessage;)Ljavax/activation/FileTypeMap;
      17: putfield      #8                  // Field fileTypeMap:Ljavax/activation/FileTypeMap;
      20: return

  public javax.activation.FileTypeMap getFileTypeMap();
    Code:
       0: aload_0
       1: getfield      #8                  // Field fileTypeMap:Ljavax/activation/FileTypeMap;
       4: areturn

  public void setValidateAddresses(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field validateAddresses:Z
       5: return

  public boolean isValidateAddresses();
    Code:
       0: aload_0
       1: getfield      #3                  // Field validateAddresses:Z
       4: ireturn

  protected void validateAddress(javax.mail.internet.InternetAddress) throws javax.mail.internet.AddressException;
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isValidateAddresses:()Z
       4: ifeq          11
       7: aload_1
       8: invokevirtual #41                 // Method javax/mail/internet/InternetAddress.validate:()V
      11: return

  protected void validateAddresses(javax.mail.internet.InternetAddress[]) throws javax.mail.internet.AddressException;
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      26: iinc          4, 1
      29: goto          8
      32: return

  public void setFrom(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #43                 // String From address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: aload_1
      16: invokevirtual #45                 // Method javax/mail/internet/MimeMessage.setFrom:(Ljavax/mail/Address;)V
      19: return

  public void setFrom(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #43                 // String From address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #47                 // Method setFrom:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void setFrom(java.lang.String, java.lang.String) throws javax.mail.MessagingException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ldc           #43                 // String From address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      11: ifnull        30
      14: new           #49                 // class javax/mail/internet/InternetAddress
      17: dup
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      24: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: goto          39
      30: new           #49                 // class javax/mail/internet/InternetAddress
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #51                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: invokevirtual #47                 // Method setFrom:(Ljavax/mail/internet/InternetAddress;)V
      42: return

  public void setReplyTo(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #52                 // String Reply-to address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: iconst_1
      16: anewarray     #49                 // class javax/mail/internet/InternetAddress
      19: dup
      20: iconst_0
      21: aload_1
      22: aastore
      23: invokevirtual #53                 // Method javax/mail/internet/MimeMessage.setReplyTo:([Ljavax/mail/Address;)V
      26: return

  public void setReplyTo(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #52                 // String Reply-to address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #54                 // Method setReplyTo:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void setReplyTo(java.lang.String, java.lang.String) throws javax.mail.MessagingException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ldc           #52                 // String Reply-to address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      10: ifnull        29
      13: new           #49                 // class javax/mail/internet/InternetAddress
      16: dup
      17: aload_1
      18: aload_2
      19: aload_0
      20: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      23: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      26: goto          38
      29: new           #49                 // class javax/mail/internet/InternetAddress
      32: dup
      33: aload_1
      34: aload_2
      35: invokespecial #51                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokevirtual #54                 // Method setReplyTo:(Ljavax/mail/internet/InternetAddress;)V
      44: return

  public void setTo(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #55                 // String To address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #56                 // Field javax/mail/Message$RecipientType.TO:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #57                 // Method javax/mail/internet/MimeMessage.setRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void setTo(javax.mail.internet.InternetAddress[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #58                 // String To address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #59                 // Method validateAddresses:([Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #56                 // Field javax/mail/Message$RecipientType.TO:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #60                 // Method javax/mail/internet/MimeMessage.setRecipients:(Ljavax/mail/Message$RecipientType;[Ljavax/mail/Address;)V
      22: return

  public void setTo(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #55                 // String To address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #61                 // Method setTo:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void setTo(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #58                 // String To address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: arraylength
       8: anewarray     #49                 // class javax/mail/internet/InternetAddress
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_1
      16: arraylength
      17: if_icmpge     36
      20: aload_2
      21: iload_3
      22: aload_0
      23: aload_1
      24: iload_3
      25: aaload
      26: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      29: aastore
      30: iinc          3, 1
      33: goto          14
      36: aload_0
      37: aload_2
      38: invokevirtual #62                 // Method setTo:([Ljavax/mail/internet/InternetAddress;)V
      41: return

  public void addTo(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #55                 // String To address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #56                 // Field javax/mail/Message$RecipientType.TO:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #63                 // Method javax/mail/internet/MimeMessage.addRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void addTo(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #55                 // String To address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #64                 // Method addTo:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void addTo(java.lang.String, java.lang.String) throws javax.mail.MessagingException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ldc           #55                 // String To address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      11: ifnull        30
      14: new           #49                 // class javax/mail/internet/InternetAddress
      17: dup
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      24: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: goto          39
      30: new           #49                 // class javax/mail/internet/InternetAddress
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #51                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: invokevirtual #64                 // Method addTo:(Ljavax/mail/internet/InternetAddress;)V
      42: return

  public void setCc(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #65                 // String Cc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #66                 // Field javax/mail/Message$RecipientType.CC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #57                 // Method javax/mail/internet/MimeMessage.setRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void setCc(javax.mail.internet.InternetAddress[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #67                 // String Cc address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #59                 // Method validateAddresses:([Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #66                 // Field javax/mail/Message$RecipientType.CC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #60                 // Method javax/mail/internet/MimeMessage.setRecipients:(Ljavax/mail/Message$RecipientType;[Ljavax/mail/Address;)V
      22: return

  public void setCc(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #65                 // String Cc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #68                 // Method setCc:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void setCc(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #67                 // String Cc address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: arraylength
       8: anewarray     #49                 // class javax/mail/internet/InternetAddress
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_1
      16: arraylength
      17: if_icmpge     36
      20: aload_2
      21: iload_3
      22: aload_0
      23: aload_1
      24: iload_3
      25: aaload
      26: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      29: aastore
      30: iinc          3, 1
      33: goto          14
      36: aload_0
      37: aload_2
      38: invokevirtual #69                 // Method setCc:([Ljavax/mail/internet/InternetAddress;)V
      41: return

  public void addCc(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #65                 // String Cc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #66                 // Field javax/mail/Message$RecipientType.CC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #63                 // Method javax/mail/internet/MimeMessage.addRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void addCc(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #65                 // String Cc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #70                 // Method addCc:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void addCc(java.lang.String, java.lang.String) throws javax.mail.MessagingException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ldc           #65                 // String Cc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      11: ifnull        30
      14: new           #49                 // class javax/mail/internet/InternetAddress
      17: dup
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      24: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: goto          39
      30: new           #49                 // class javax/mail/internet/InternetAddress
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #51                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: invokevirtual #70                 // Method addCc:(Ljavax/mail/internet/InternetAddress;)V
      42: return

  public void setBcc(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Bcc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #72                 // Field javax/mail/Message$RecipientType.BCC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #57                 // Method javax/mail/internet/MimeMessage.setRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void setBcc(javax.mail.internet.InternetAddress[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #73                 // String Bcc address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #59                 // Method validateAddresses:([Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #72                 // Field javax/mail/Message$RecipientType.BCC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #60                 // Method javax/mail/internet/MimeMessage.setRecipients:(Ljavax/mail/Message$RecipientType;[Ljavax/mail/Address;)V
      22: return

  public void setBcc(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Bcc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #74                 // Method setBcc:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void setBcc(java.lang.String[]) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #73                 // String Bcc address array must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: arraylength
       8: anewarray     #49                 // class javax/mail/internet/InternetAddress
      11: astore_2
      12: iconst_0
      13: istore_3
      14: iload_3
      15: aload_1
      16: arraylength
      17: if_icmpge     36
      20: aload_2
      21: iload_3
      22: aload_0
      23: aload_1
      24: iload_3
      25: aaload
      26: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      29: aastore
      30: iinc          3, 1
      33: goto          14
      36: aload_0
      37: aload_2
      38: invokevirtual #75                 // Method setBcc:([Ljavax/mail/internet/InternetAddress;)V
      41: return

  public void addBcc(javax.mail.internet.InternetAddress) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Bcc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokevirtual #42                 // Method validateAddress:(Ljavax/mail/internet/InternetAddress;)V
      11: aload_0
      12: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      15: getstatic     #72                 // Field javax/mail/Message$RecipientType.BCC:Ljavax/mail/Message$RecipientType;
      18: aload_1
      19: invokevirtual #63                 // Method javax/mail/internet/MimeMessage.addRecipient:(Ljavax/mail/Message$RecipientType;Ljavax/mail/Address;)V
      22: return

  public void addBcc(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Bcc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokespecial #46                 // Method parseAddress:(Ljava/lang/String;)Ljavax/mail/internet/InternetAddress;
      12: invokevirtual #76                 // Method addBcc:(Ljavax/mail/internet/InternetAddress;)V
      15: return

  public void addBcc(java.lang.String, java.lang.String) throws javax.mail.MessagingException, java.io.UnsupportedEncodingException;
    Code:
       0: aload_1
       1: ldc           #71                 // String Bcc address must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      11: ifnull        30
      14: new           #49                 // class javax/mail/internet/InternetAddress
      17: dup
      18: aload_1
      19: aload_2
      20: aload_0
      21: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      24: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      27: goto          39
      30: new           #49                 // class javax/mail/internet/InternetAddress
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #51                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: invokevirtual #76                 // Method addBcc:(Ljavax/mail/internet/InternetAddress;)V
      42: return

  private javax.mail.internet.InternetAddress parseAddress(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: invokestatic  #77                 // Method javax/mail/internet/InternetAddress.parse:(Ljava/lang/String;)[Ljavax/mail/internet/InternetAddress;
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: if_icmpeq     22
      11: new           #78                 // class javax/mail/internet/AddressException
      14: dup
      15: ldc           #79                 // String Illegal address
      17: aload_1
      18: invokespecial #80                 // Method javax/mail/internet/AddressException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      21: athrow
      22: aload_2
      23: iconst_0
      24: aaload
      25: astore_3
      26: aload_0
      27: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      30: ifnull        55
      33: new           #49                 // class javax/mail/internet/InternetAddress
      36: dup
      37: aload_3
      38: invokevirtual #81                 // Method javax/mail/internet/InternetAddress.getAddress:()Ljava/lang/String;
      41: aload_3
      42: invokevirtual #82                 // Method javax/mail/internet/InternetAddress.getPersonal:()Ljava/lang/String;
      45: aload_0
      46: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      49: invokespecial #50                 // Method javax/mail/internet/InternetAddress."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      52: goto          56
      55: aload_3
      56: areturn
      57: astore        4
      59: new           #84                 // class javax/mail/MessagingException
      62: dup
      63: ldc           #85                 // String Failed to parse embedded personal name to correct encoding
      65: aload         4
      67: invokespecial #86                 // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      70: athrow
    Exception table:
       from    to  target type
          26    56    57   Class java/io/UnsupportedEncodingException

  public void setPriority(int) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
       4: ldc           #87                 // String X-Priority
       6: iload_1
       7: invokestatic  #88                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      10: invokevirtual #89                 // Method javax/mail/internet/MimeMessage.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      13: return

  public void setSentDate(java.util.Date) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #90                 // String Sent date must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      10: aload_1
      11: invokevirtual #91                 // Method javax/mail/internet/MimeMessage.setSentDate:(Ljava/util/Date;)V
      14: return

  public void setSubject(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #92                 // String Subject must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      10: ifnull        28
      13: aload_0
      14: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      17: aload_1
      18: aload_0
      19: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      22: invokevirtual #93                 // Method javax/mail/internet/MimeMessage.setSubject:(Ljava/lang/String;Ljava/lang/String;)V
      25: goto          36
      28: aload_0
      29: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      32: aload_1
      33: invokevirtual #94                 // Method javax/mail/internet/MimeMessage.setSubject:(Ljava/lang/String;)V
      36: return

  public void setText(java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #95                 // Method setText:(Ljava/lang/String;Z)V
       6: return

  public void setText(java.lang.String, boolean) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #96                 // String Text must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #28                 // Method isMultipart:()Z
      10: ifeq          21
      13: aload_0
      14: invokespecial #97                 // Method getMainPart:()Ljavax/mail/internet/MimeBodyPart;
      17: astore_3
      18: goto          26
      21: aload_0
      22: getfield      #4                  // Field mimeMessage:Ljavax/mail/internet/MimeMessage;
      25: astore_3
      26: iload_2
      27: ifeq          39
      30: aload_0
      31: aload_3
      32: aload_1
      33: invokespecial #98                 // Method setHtmlTextToMimePart:(Ljavax/mail/internet/MimePart;Ljava/lang/String;)V
      36: goto          45
      39: aload_0
      40: aload_3
      41: aload_1
      42: invokespecial #99                 // Method setPlainTextToMimePart:(Ljavax/mail/internet/MimePart;Ljava/lang/String;)V
      45: return

  public void setText(java.lang.String, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #100                // String Plain text must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #101                // String HTML text must not be null
       9: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #14                 // class javax/mail/internet/MimeMultipart
      15: dup
      16: ldc           #102                // String alternative
      18: invokespecial #16                 // Method javax/mail/internet/MimeMultipart."<init>":(Ljava/lang/String;)V
      21: astore_3
      22: aload_0
      23: invokespecial #97                 // Method getMainPart:()Ljavax/mail/internet/MimeBodyPart;
      26: aload_3
      27: ldc           #103                // String text/alternative
      29: invokevirtual #104                // Method javax/mail/internet/MimeBodyPart.setContent:(Ljava/lang/Object;Ljava/lang/String;)V
      32: new           #19                 // class javax/mail/internet/MimeBodyPart
      35: dup
      36: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
      39: astore        4
      41: aload_0
      42: aload         4
      44: aload_1
      45: invokespecial #99                 // Method setPlainTextToMimePart:(Ljavax/mail/internet/MimePart;Ljava/lang/String;)V
      48: aload_3
      49: aload         4
      51: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
      54: new           #19                 // class javax/mail/internet/MimeBodyPart
      57: dup
      58: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
      61: astore        5
      63: aload_0
      64: aload         5
      66: aload_2
      67: invokespecial #98                 // Method setHtmlTextToMimePart:(Ljavax/mail/internet/MimePart;Ljava/lang/String;)V
      70: aload_3
      71: aload         5
      73: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
      76: return

  private javax.mail.internet.MimeBodyPart getMainPart() throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getMimeMultipart:()Ljavax/mail/internet/MimeMultipart;
       4: astore_1
       5: aconst_null
       6: astore_2
       7: iconst_0
       8: istore_3
       9: iload_3
      10: aload_1
      11: invokevirtual #106                // Method javax/mail/internet/MimeMultipart.getCount:()I
      14: if_icmpge     44
      17: aload_1
      18: iload_3
      19: invokevirtual #107                // Method javax/mail/internet/MimeMultipart.getBodyPart:(I)Ljavax/mail/BodyPart;
      22: astore        4
      24: aload         4
      26: invokevirtual #108                // Method javax/mail/BodyPart.getFileName:()Ljava/lang/String;
      29: ifnonnull     38
      32: aload         4
      34: checkcast     #19                 // class javax/mail/internet/MimeBodyPart
      37: astore_2
      38: iinc          3, 1
      41: goto          9
      44: aload_2
      45: ifnonnull     63
      48: new           #19                 // class javax/mail/internet/MimeBodyPart
      51: dup
      52: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
      55: astore_3
      56: aload_1
      57: aload_3
      58: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
      61: aload_3
      62: astore_2
      63: aload_2
      64: areturn

  private void setPlainTextToMimePart(javax.mail.internet.MimePart, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
       4: ifnull        21
       7: aload_1
       8: aload_2
       9: aload_0
      10: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      13: invokeinterface #109,  3          // InterfaceMethod javax/mail/internet/MimePart.setText:(Ljava/lang/String;Ljava/lang/String;)V
      18: goto          28
      21: aload_1
      22: aload_2
      23: invokeinterface #110,  2          // InterfaceMethod javax/mail/internet/MimePart.setText:(Ljava/lang/String;)V
      28: return

  private void setHtmlTextToMimePart(javax.mail.internet.MimePart, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
       4: ifnull        39
       7: aload_1
       8: aload_2
       9: new           #111                // class java/lang/StringBuilder
      12: dup
      13: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #113                // String text/html;charset=
      18: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #48                 // Method getEncoding:()Ljava/lang/String;
      25: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokeinterface #116,  3          // InterfaceMethod javax/mail/internet/MimePart.setContent:(Ljava/lang/Object;Ljava/lang/String;)V
      36: goto          48
      39: aload_1
      40: aload_2
      41: ldc           #117                // String text/html
      43: invokeinterface #116,  3          // InterfaceMethod javax/mail/internet/MimePart.setContent:(Ljava/lang/Object;Ljava/lang/String;)V
      48: return

  public void addInline(java.lang.String, javax.activation.DataSource) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #118                // String Content ID must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #119                // String DataSource must not be null
       9: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #19                 // class javax/mail/internet/MimeBodyPart
      15: dup
      16: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
      19: astore_3
      20: aload_3
      21: ldc           #120                // String inline
      23: invokevirtual #121                // Method javax/mail/internet/MimeBodyPart.setDisposition:(Ljava/lang/String;)V
      26: aload_3
      27: ldc           #122                // String Content-ID
      29: new           #111                // class java/lang/StringBuilder
      32: dup
      33: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #123                // String <
      38: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_1
      42: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #124                // String >
      47: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #115                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokevirtual #125                // Method javax/mail/internet/MimeBodyPart.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      56: aload_3
      57: new           #126                // class javax/activation/DataHandler
      60: dup
      61: aload_2
      62: invokespecial #127                // Method javax/activation/DataHandler."<init>":(Ljavax/activation/DataSource;)V
      65: invokevirtual #128                // Method javax/mail/internet/MimeBodyPart.setDataHandler:(Ljavax/activation/DataHandler;)V
      68: aload_0
      69: invokevirtual #105                // Method getMimeMultipart:()Ljavax/mail/internet/MimeMultipart;
      72: aload_3
      73: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
      76: return

  public void addInline(java.lang.String, java.io.File) throws javax.mail.MessagingException;
    Code:
       0: aload_2
       1: ldc           #129                // String File must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #130                // class javax/activation/FileDataSource
       9: dup
      10: aload_2
      11: invokespecial #131                // Method javax/activation/FileDataSource."<init>":(Ljava/io/File;)V
      14: astore_3
      15: aload_3
      16: aload_0
      17: invokevirtual #132                // Method getFileTypeMap:()Ljavax/activation/FileTypeMap;
      20: invokevirtual #133                // Method javax/activation/FileDataSource.setFileTypeMap:(Ljavax/activation/FileTypeMap;)V
      23: aload_0
      24: aload_1
      25: aload_3
      26: invokevirtual #134                // Method addInline:(Ljava/lang/String;Ljavax/activation/DataSource;)V
      29: return

  public void addInline(java.lang.String, org.springframework.core.io.Resource) throws javax.mail.MessagingException;
    Code:
       0: aload_2
       1: ldc           #135                // String Resource must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #132                // Method getFileTypeMap:()Ljavax/activation/FileTypeMap;
      10: aload_2
      11: invokeinterface #136,  1          // InterfaceMethod org/springframework/core/io/Resource.getFilename:()Ljava/lang/String;
      16: invokevirtual #137                // Method javax/activation/FileTypeMap.getContentType:(Ljava/lang/String;)Ljava/lang/String;
      19: astore_3
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload_3
      24: invokevirtual #138                // Method addInline:(Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;Ljava/lang/String;)V
      27: return

  public void addInline(java.lang.String, org.springframework.core.io.InputStreamSource, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_2
       1: ldc           #139                // String InputStreamSource must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: instanceof    #140                // class org/springframework/core/io/Resource
      10: ifeq          35
      13: aload_2
      14: checkcast     #140                // class org/springframework/core/io/Resource
      17: invokeinterface #141,  1          // InterfaceMethod org/springframework/core/io/Resource.isOpen:()Z
      22: ifeq          35
      25: new           #23                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #142                // String Passed-in Resource contains an open stream: invalid argument. JavaMail requires an InputStreamSource that creates a fresh stream for every call.
      31: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_2
      37: aload_3
      38: ldc           #120                // String inline
      40: invokevirtual #143                // Method createDataSource:(Lorg/springframework/core/io/InputStreamSource;Ljava/lang/String;Ljava/lang/String;)Ljavax/activation/DataSource;
      43: astore        4
      45: aload_0
      46: aload_1
      47: aload         4
      49: invokevirtual #134                // Method addInline:(Ljava/lang/String;Ljavax/activation/DataSource;)V
      52: return

  public void addAttachment(java.lang.String, javax.activation.DataSource) throws javax.mail.MessagingException;
    Code:
       0: aload_1
       1: ldc           #144                // String Attachment filename must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #119                // String DataSource must not be null
       9: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: new           #19                 // class javax/mail/internet/MimeBodyPart
      15: dup
      16: invokespecial #20                 // Method javax/mail/internet/MimeBodyPart."<init>":()V
      19: astore_3
      20: aload_3
      21: ldc           #145                // String attachment
      23: invokevirtual #121                // Method javax/mail/internet/MimeBodyPart.setDisposition:(Ljava/lang/String;)V
      26: aload_3
      27: aload_1
      28: invokestatic  #146                // Method javax/mail/internet/MimeUtility.encodeText:(Ljava/lang/String;)Ljava/lang/String;
      31: invokevirtual #147                // Method javax/mail/internet/MimeBodyPart.setFileName:(Ljava/lang/String;)V
      34: aload_3
      35: new           #126                // class javax/activation/DataHandler
      38: dup
      39: aload_2
      40: invokespecial #127                // Method javax/activation/DataHandler."<init>":(Ljavax/activation/DataSource;)V
      43: invokevirtual #128                // Method javax/mail/internet/MimeBodyPart.setDataHandler:(Ljavax/activation/DataHandler;)V
      46: aload_0
      47: invokevirtual #148                // Method getRootMimeMultipart:()Ljavax/mail/internet/MimeMultipart;
      50: aload_3
      51: invokevirtual #22                 // Method javax/mail/internet/MimeMultipart.addBodyPart:(Ljavax/mail/BodyPart;)V
      54: goto          69
      57: astore_3
      58: new           #84                 // class javax/mail/MessagingException
      61: dup
      62: ldc           #149                // String Failed to encode attachment filename
      64: aload_3
      65: invokespecial #86                 // Method javax/mail/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Exception;)V
      68: athrow
      69: return
    Exception table:
       from    to  target type
          12    54    57   Class java/io/UnsupportedEncodingException

  public void addAttachment(java.lang.String, java.io.File) throws javax.mail.MessagingException;
    Code:
       0: aload_2
       1: ldc           #129                // String File must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #130                // class javax/activation/FileDataSource
       9: dup
      10: aload_2
      11: invokespecial #131                // Method javax/activation/FileDataSource."<init>":(Ljava/io/File;)V
      14: astore_3
      15: aload_3
      16: aload_0
      17: invokevirtual #132                // Method getFileTypeMap:()Ljavax/activation/FileTypeMap;
      20: invokevirtual #133                // Method javax/activation/FileDataSource.setFileTypeMap:(Ljavax/activation/FileTypeMap;)V
      23: aload_0
      24: aload_1
      25: aload_3
      26: invokevirtual #150                // Method addAttachment:(Ljava/lang/String;Ljavax/activation/DataSource;)V
      29: return

  public void addAttachment(java.lang.String, org.springframework.core.io.InputStreamSource) throws javax.mail.MessagingException;
    Code:
       0: aload_0
       1: invokevirtual #132                // Method getFileTypeMap:()Ljavax/activation/FileTypeMap;
       4: aload_1
       5: invokevirtual #137                // Method javax/activation/FileTypeMap.getContentType:(Ljava/lang/String;)Ljava/lang/String;
       8: astore_3
       9: aload_0
      10: aload_1
      11: aload_2
      12: aload_3
      13: invokevirtual #151                // Method addAttachment:(Ljava/lang/String;Lorg/springframework/core/io/InputStreamSource;Ljava/lang/String;)V
      16: return

  public void addAttachment(java.lang.String, org.springframework.core.io.InputStreamSource, java.lang.String) throws javax.mail.MessagingException;
    Code:
       0: aload_2
       1: ldc           #139                // String InputStreamSource must not be null
       3: invokestatic  #44                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: instanceof    #140                // class org/springframework/core/io/Resource
      10: ifeq          35
      13: aload_2
      14: checkcast     #140                // class org/springframework/core/io/Resource
      17: invokeinterface #141,  1          // InterfaceMethod org/springframework/core/io/Resource.isOpen:()Z
      22: ifeq          35
      25: new           #23                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #142                // String Passed-in Resource contains an open stream: invalid argument. JavaMail requires an InputStreamSource that creates a fresh stream for every call.
      31: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_2
      37: aload_3
      38: aload_1
      39: invokevirtual #143                // Method createDataSource:(Lorg/springframework/core/io/InputStreamSource;Ljava/lang/String;Ljava/lang/String;)Ljavax/activation/DataSource;
      42: astore        4
      44: aload_0
      45: aload_1
      46: aload         4
      48: invokevirtual #150                // Method addAttachment:(Ljava/lang/String;Ljavax/activation/DataSource;)V
      51: return

  protected javax.activation.DataSource createDataSource(org.springframework.core.io.InputStreamSource, java.lang.String, java.lang.String);
    Code:
       0: new           #152                // class org/springframework/mail/javamail/MimeMessageHelper$1
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #153                // Method org/springframework/mail/javamail/MimeMessageHelper$1."<init>":(Lorg/springframework/mail/javamail/MimeMessageHelper;Lorg/springframework/core/io/InputStreamSource;Ljava/lang/String;Ljava/lang/String;)V
      11: areturn
}
