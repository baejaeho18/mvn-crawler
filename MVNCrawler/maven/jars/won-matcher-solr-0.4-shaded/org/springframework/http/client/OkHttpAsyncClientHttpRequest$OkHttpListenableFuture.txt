Compiled from "OkHttpAsyncClientHttpRequest.java"
class org.springframework.http.client.OkHttpAsyncClientHttpRequest$OkHttpListenableFuture extends org.springframework.util.concurrent.SettableListenableFuture<org.springframework.http.client.ClientHttpResponse> {
  private final com.squareup.okhttp.Call call;

  public org.springframework.http.client.OkHttpAsyncClientHttpRequest$OkHttpListenableFuture(com.squareup.okhttp.Call);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/util/concurrent/SettableListenableFuture."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field call:Lcom/squareup/okhttp/Call;
       9: aload_0
      10: getfield      #2                  // Field call:Lcom/squareup/okhttp/Call;
      13: new           #3                  // class org/springframework/http/client/OkHttpAsyncClientHttpRequest$OkHttpListenableFuture$1
      16: dup
      17: aload_0
      18: invokespecial #4                  // Method org/springframework/http/client/OkHttpAsyncClientHttpRequest$OkHttpListenableFuture$1."<init>":(Lorg/springframework/http/client/OkHttpAsyncClientHttpRequest$OkHttpListenableFuture;)V
      21: invokevirtual #5                  // Method com/squareup/okhttp/Call.enqueue:(Lcom/squareup/okhttp/Callback;)V
      24: return

  protected void interruptTask();
    Code:
       0: aload_0
       1: getfield      #2                  // Field call:Lcom/squareup/okhttp/Call;
       4: invokevirtual #6                  // Method com/squareup/okhttp/Call.cancel:()V
       7: return
}
