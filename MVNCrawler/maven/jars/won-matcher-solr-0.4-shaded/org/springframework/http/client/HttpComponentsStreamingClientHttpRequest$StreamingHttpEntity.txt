Compiled from "HttpComponentsStreamingClientHttpRequest.java"
class org.springframework.http.client.HttpComponentsStreamingClientHttpRequest$StreamingHttpEntity implements org.apache.http.HttpEntity {
  private final org.springframework.http.HttpHeaders headers;

  private final org.springframework.http.StreamingHttpOutputMessage$Body body;

  public org.springframework.http.client.HttpComponentsStreamingClientHttpRequest$StreamingHttpEntity(org.springframework.http.HttpHeaders, org.springframework.http.StreamingHttpOutputMessage$Body);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field headers:Lorg/springframework/http/HttpHeaders;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field body:Lorg/springframework/http/StreamingHttpOutputMessage$Body;
      14: return

  public boolean isRepeatable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isChunked();
    Code:
       0: iconst_0
       1: ireturn

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #4                  // Method org/springframework/http/HttpHeaders.getContentLength:()J
       7: lreturn

  public org.apache.http.Header getContentType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: invokevirtual #5                  // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
       7: astore_1
       8: aload_1
       9: ifnull        28
      12: new           #6                  // class org/apache/http/message/BasicHeader
      15: dup
      16: ldc           #7                  // String Content-Type
      18: aload_1
      19: invokevirtual #8                  // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      22: invokespecial #9                  // Method org/apache/http/message/BasicHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: goto          29
      28: aconst_null
      29: areturn

  public org.apache.http.Header getContentEncoding();
    Code:
       0: aload_0
       1: getfield      #2                  // Field headers:Lorg/springframework/http/HttpHeaders;
       4: ldc           #10                 // String Content-Encoding
       6: invokevirtual #11                 // Method org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_1
      10: aload_1
      11: ifnull        27
      14: new           #6                  // class org/apache/http/message/BasicHeader
      17: dup
      18: ldc           #10                 // String Content-Encoding
      20: aload_1
      21: invokespecial #9                  // Method org/apache/http/message/BasicHeader."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      24: goto          28
      27: aconst_null
      28: areturn

  public java.io.InputStream getContent() throws java.io.IOException, java.lang.IllegalStateException;
    Code:
       0: new           #12                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #13                 // String No content available
       6: invokespecial #14                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field body:Lorg/springframework/http/StreamingHttpOutputMessage$Body;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod org/springframework/http/StreamingHttpOutputMessage$Body.writeTo:(Ljava/io/OutputStream;)V
      10: return

  public boolean isStreaming();
    Code:
       0: iconst_1
       1: ireturn

  public void consumeContent() throws java.io.IOException;
    Code:
       0: new           #16                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #17                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow
}
