Compiled from "BufferedImageHttpMessageConverter.java"
public class org.springframework.http.converter.BufferedImageHttpMessageConverter implements org.springframework.http.converter.HttpMessageConverter<java.awt.image.BufferedImage> {
  private final java.util.List<org.springframework.http.MediaType> readableMediaTypes;

  private org.springframework.http.MediaType defaultContentType;

  private java.io.File cacheDir;

  public org.springframework.http.converter.BufferedImageHttpMessageConverter();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field readableMediaTypes:Ljava/util/List;
      15: invokestatic  #6                  // Method javax/imageio/ImageIO.getReaderMIMETypes:()[Ljava/lang/String;
      18: astore_1
      19: aload_1
      20: astore_2
      21: aload_2
      22: arraylength
      23: istore_3
      24: iconst_0
      25: istore        4
      27: iload         4
      29: iload_3
      30: if_icmpge     68
      33: aload_2
      34: iload         4
      36: aaload
      37: astore        5
      39: aload         5
      41: invokestatic  #7                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      44: ifeq          62
      47: aload_0
      48: getfield      #5                  // Field readableMediaTypes:Ljava/util/List;
      51: aload         5
      53: invokestatic  #8                  // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
      56: invokeinterface #9,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          4, 1
      65: goto          27
      68: invokestatic  #10                 // Method javax/imageio/ImageIO.getWriterMIMETypes:()[Ljava/lang/String;
      71: astore_2
      72: aload_2
      73: astore_3
      74: aload_3
      75: arraylength
      76: istore        4
      78: iconst_0
      79: istore        5
      81: iload         5
      83: iload         4
      85: if_icmpge     120
      88: aload_3
      89: iload         5
      91: aaload
      92: astore        6
      94: aload         6
      96: invokestatic  #7                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      99: ifeq          114
     102: aload_0
     103: aload         6
     105: invokestatic  #8                  // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     108: putfield      #11                 // Field defaultContentType:Lorg/springframework/http/MediaType;
     111: goto          120
     114: iinc          5, 1
     117: goto          81
     120: return

  public void setDefaultContentType(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ldc           #12                 // String \'contentType\' must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #14                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      10: invokestatic  #15                 // Method javax/imageio/ImageIO.getImageWritersByMIMEType:(Ljava/lang/String;)Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifne          55
      23: new           #17                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #18                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #20                 // String Content-Type [
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String ] is not supported by the Java Image I/O API
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: aload_1
      57: putfield      #11                 // Field defaultContentType:Lorg/springframework/http/MediaType;
      60: return

  public org.springframework.http.MediaType getDefaultContentType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field defaultContentType:Lorg/springframework/http/MediaType;
       4: areturn

  public void setCacheDir(java.io.File);
    Code:
       0: aload_1
       1: ldc           #26                 // String \'cacheDir\' must not be null
       3: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #27                 // Method java/io/File.isDirectory:()Z
      10: ldc           #28                 // String \'cacheDir\' is not a directory
      12: invokestatic  #29                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #30                 // Field cacheDir:Ljava/io/File;
      20: return

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: ldc           #31                 // class java/awt/image/BufferedImage
       2: aload_1
       3: if_acmpne     18
       6: aload_0
       7: aload_2
       8: invokespecial #32                 // Method isReadable:(Lorg/springframework/http/MediaType;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean isReadable(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #14                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      10: invokestatic  #33                 // Method javax/imageio/ImageIO.getImageReadersByMIMEType:(Ljava/lang/String;)Ljava/util/Iterator;
      13: astore_2
      14: aload_2
      15: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: ldc           #31                 // class java/awt/image/BufferedImage
       2: aload_1
       3: if_acmpne     18
       6: aload_0
       7: aload_2
       8: invokespecial #34                 // Method isWritable:(Lorg/springframework/http/MediaType;)Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private boolean isWritable(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnull        14
       4: getstatic     #35                 // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       7: aload_1
       8: invokevirtual #36                 // Method org/springframework/http/MediaType.equals:(Ljava/lang/Object;)Z
      11: ifeq          16
      14: iconst_1
      15: ireturn
      16: aload_1
      17: invokevirtual #14                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      20: invokestatic  #15                 // Method javax/imageio/ImageIO.getImageWritersByMIMEType:(Ljava/lang/String;)Ljava/util/Iterator;
      23: astore_2
      24: aload_2
      25: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ireturn

  public java.util.List<org.springframework.http.MediaType> getSupportedMediaTypes();
    Code:
       0: aload_0
       1: getfield      #5                  // Field readableMediaTypes:Ljava/util/List;
       4: invokestatic  #37                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public java.awt.image.BufferedImage read(java.lang.Class<? extends java.awt.image.BufferedImage>, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_0
       6: aload_2
       7: invokeinterface #38,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getBody:()Ljava/io/InputStream;
      12: invokespecial #39                 // Method createImageInputStream:(Ljava/io/InputStream;)Ljavax/imageio/stream/ImageInputStream;
      15: astore_3
      16: aload_2
      17: invokeinterface #40,  1           // InterfaceMethod org/springframework/http/HttpInputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      22: invokevirtual #41                 // Method org/springframework/http/HttpHeaders.getContentType:()Lorg/springframework/http/MediaType;
      25: astore        5
      27: aload         5
      29: invokevirtual #14                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      32: invokestatic  #33                 // Method javax/imageio/ImageIO.getImageReadersByMIMEType:(Ljava/lang/String;)Ljava/util/Iterator;
      35: astore        6
      37: aload         6
      39: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      44: ifeq          117
      47: aload         6
      49: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      54: checkcast     #43                 // class javax/imageio/ImageReader
      57: astore        4
      59: aload         4
      61: invokevirtual #44                 // Method javax/imageio/ImageReader.getDefaultReadParam:()Ljavax/imageio/ImageReadParam;
      64: astore        7
      66: aload_0
      67: aload         7
      69: invokevirtual #45                 // Method process:(Ljavax/imageio/ImageReadParam;)V
      72: aload         4
      74: aload_3
      75: iconst_1
      76: invokevirtual #46                 // Method javax/imageio/ImageReader.setInput:(Ljava/lang/Object;Z)V
      79: aload         4
      81: iconst_0
      82: aload         7
      84: invokevirtual #47                 // Method javax/imageio/ImageReader.read:(ILjavax/imageio/ImageReadParam;)Ljava/awt/image/BufferedImage;
      87: astore        8
      89: aload         4
      91: ifnull        99
      94: aload         4
      96: invokevirtual #48                 // Method javax/imageio/ImageReader.dispose:()V
      99: aload_3
     100: ifnull        114
     103: aload_3
     104: invokeinterface #49,  1           // InterfaceMethod javax/imageio/stream/ImageInputStream.close:()V
     109: goto          114
     112: astore        9
     114: aload         8
     116: areturn
     117: new           #51                 // class org/springframework/http/converter/HttpMessageNotReadableException
     120: dup
     121: new           #18                 // class java/lang/StringBuilder
     124: dup
     125: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     128: ldc           #52                 // String Could not find javax.imageio.ImageReader for Content-Type [
     130: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     133: aload         5
     135: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #53                 // String ]
     140: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #54                 // Method org/springframework/http/converter/HttpMessageNotReadableException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: astore        10
     152: aload         4
     154: ifnull        162
     157: aload         4
     159: invokevirtual #48                 // Method javax/imageio/ImageReader.dispose:()V
     162: aload_3
     163: ifnull        177
     166: aload_3
     167: invokeinterface #49,  1           // InterfaceMethod javax/imageio/stream/ImageInputStream.close:()V
     172: goto          177
     175: astore        11
     177: aload         10
     179: athrow
    Exception table:
       from    to  target type
         103   109   112   Class java/io/IOException
           5    89   150   any
         166   172   175   Class java/io/IOException
         117   152   150   any

  private javax.imageio.stream.ImageInputStream createImageInputStream(java.io.InputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field cacheDir:Ljava/io/File;
       4: ifnull        20
       7: new           #55                 // class javax/imageio/stream/FileCacheImageInputStream
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #30                 // Field cacheDir:Ljava/io/File;
      16: invokespecial #56                 // Method javax/imageio/stream/FileCacheImageInputStream."<init>":(Ljava/io/InputStream;Ljava/io/File;)V
      19: areturn
      20: new           #57                 // class javax/imageio/stream/MemoryCacheImageInputStream
      23: dup
      24: aload_1
      25: invokespecial #58                 // Method javax/imageio/stream/MemoryCacheImageInputStream."<init>":(Ljava/io/InputStream;)V
      28: areturn

  public void write(java.awt.image.BufferedImage, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #59                 // Method getContentType:(Lorg/springframework/http/MediaType;)Lorg/springframework/http/MediaType;
       5: astore        4
       7: aload_3
       8: invokeinterface #60,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getHeaders:()Lorg/springframework/http/HttpHeaders;
      13: aload         4
      15: invokevirtual #61                 // Method org/springframework/http/HttpHeaders.setContentType:(Lorg/springframework/http/MediaType;)V
      18: aload_3
      19: instanceof    #62                 // class org/springframework/http/StreamingHttpOutputMessage
      22: ifeq          52
      25: aload_3
      26: checkcast     #62                 // class org/springframework/http/StreamingHttpOutputMessage
      29: astore        5
      31: aload         5
      33: new           #63                 // class org/springframework/http/converter/BufferedImageHttpMessageConverter$1
      36: dup
      37: aload_0
      38: aload_1
      39: aload         4
      41: invokespecial #64                 // Method org/springframework/http/converter/BufferedImageHttpMessageConverter$1."<init>":(Lorg/springframework/http/converter/BufferedImageHttpMessageConverter;Ljava/awt/image/BufferedImage;Lorg/springframework/http/MediaType;)V
      44: invokeinterface #65,  2           // InterfaceMethod org/springframework/http/StreamingHttpOutputMessage.setBody:(Lorg/springframework/http/StreamingHttpOutputMessage$Body;)V
      49: goto          65
      52: aload_0
      53: aload_1
      54: aload         4
      56: aload_3
      57: invokeinterface #66,  1           // InterfaceMethod org/springframework/http/HttpOutputMessage.getBody:()Ljava/io/OutputStream;
      62: invokespecial #1                  // Method writeInternal:(Ljava/awt/image/BufferedImage;Lorg/springframework/http/MediaType;Ljava/io/OutputStream;)V
      65: return

  private org.springframework.http.MediaType getContentType(org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_1
       5: invokevirtual #67                 // Method org/springframework/http/MediaType.isWildcardType:()Z
       8: ifne          18
      11: aload_1
      12: invokevirtual #68                 // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
      15: ifeq          23
      18: aload_0
      19: invokevirtual #69                 // Method getDefaultContentType:()Lorg/springframework/http/MediaType;
      22: astore_1
      23: aload_1
      24: ldc           #70                 // String Could not select Content-Type. Please specify one through the \'defaultContentType\' property.
      26: invokestatic  #13                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      29: aload_1
      30: areturn

  private void writeInternal(java.awt.image.BufferedImage, org.springframework.http.MediaType, java.io.OutputStream) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aconst_null
       1: astore        4
       3: aconst_null
       4: astore        5
       6: aload_2
       7: invokevirtual #14                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      10: invokestatic  #15                 // Method javax/imageio/ImageIO.getImageWritersByMIMEType:(Ljava/lang/String;)Ljava/util/Iterator;
      13: astore        6
      15: aload         6
      17: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          85
      25: aload         6
      27: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #71                 // class javax/imageio/ImageWriter
      35: astore        5
      37: aload         5
      39: invokevirtual #72                 // Method javax/imageio/ImageWriter.getDefaultWriteParam:()Ljavax/imageio/ImageWriteParam;
      42: astore        7
      44: aload_0
      45: aload         7
      47: invokevirtual #73                 // Method process:(Ljavax/imageio/ImageWriteParam;)V
      50: aload_0
      51: aload_3
      52: invokespecial #74                 // Method createImageOutputStream:(Ljava/io/OutputStream;)Ljavax/imageio/stream/ImageOutputStream;
      55: astore        4
      57: aload         5
      59: aload         4
      61: invokevirtual #75                 // Method javax/imageio/ImageWriter.setOutput:(Ljava/lang/Object;)V
      64: aload         5
      66: aconst_null
      67: new           #76                 // class javax/imageio/IIOImage
      70: dup
      71: aload_1
      72: aconst_null
      73: aconst_null
      74: invokespecial #77                 // Method javax/imageio/IIOImage."<init>":(Ljava/awt/image/RenderedImage;Ljava/util/List;Ljavax/imageio/metadata/IIOMetadata;)V
      77: aload         7
      79: invokevirtual #78                 // Method javax/imageio/ImageWriter.write:(Ljavax/imageio/metadata/IIOMetadata;Ljavax/imageio/IIOImage;Ljavax/imageio/ImageWriteParam;)V
      82: goto          117
      85: new           #79                 // class org/springframework/http/converter/HttpMessageNotWritableException
      88: dup
      89: new           #18                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #80                 // String Could not find javax.imageio.ImageWriter for Content-Type [
      98: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_2
     102: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #53                 // String ]
     107: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokespecial #81                 // Method org/springframework/http/converter/HttpMessageNotWritableException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload         5
     119: ifnull        127
     122: aload         5
     124: invokevirtual #82                 // Method javax/imageio/ImageWriter.dispose:()V
     127: aload         4
     129: ifnull        179
     132: aload         4
     134: invokeinterface #83,  1           // InterfaceMethod javax/imageio/stream/ImageOutputStream.close:()V
     139: goto          179
     142: astore        6
     144: goto          179
     147: astore        8
     149: aload         5
     151: ifnull        159
     154: aload         5
     156: invokevirtual #82                 // Method javax/imageio/ImageWriter.dispose:()V
     159: aload         4
     161: ifnull        176
     164: aload         4
     166: invokeinterface #83,  1           // InterfaceMethod javax/imageio/stream/ImageOutputStream.close:()V
     171: goto          176
     174: astore        9
     176: aload         8
     178: athrow
     179: return
    Exception table:
       from    to  target type
         132   139   142   Class java/io/IOException
           6   117   147   any
         164   171   174   Class java/io/IOException
         147   149   147   any

  private javax.imageio.stream.ImageOutputStream createImageOutputStream(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field cacheDir:Ljava/io/File;
       4: ifnull        20
       7: new           #84                 // class javax/imageio/stream/FileCacheImageOutputStream
      10: dup
      11: aload_1
      12: aload_0
      13: getfield      #30                 // Field cacheDir:Ljava/io/File;
      16: invokespecial #85                 // Method javax/imageio/stream/FileCacheImageOutputStream."<init>":(Ljava/io/OutputStream;Ljava/io/File;)V
      19: areturn
      20: new           #86                 // class javax/imageio/stream/MemoryCacheImageOutputStream
      23: dup
      24: aload_1
      25: invokespecial #87                 // Method javax/imageio/stream/MemoryCacheImageOutputStream."<init>":(Ljava/io/OutputStream;)V
      28: areturn

  protected void process(javax.imageio.ImageReadParam);
    Code:
       0: return

  protected void process(javax.imageio.ImageWriteParam);
    Code:
       0: return

  public void write(java.lang.Object, org.springframework.http.MediaType, org.springframework.http.HttpOutputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/awt/image/BufferedImage
       5: aload_2
       6: aload_3
       7: invokevirtual #88                 // Method write:(Ljava/awt/image/BufferedImage;Lorg/springframework/http/MediaType;Lorg/springframework/http/HttpOutputMessage;)V
      10: return

  public java.lang.Object read(java.lang.Class, org.springframework.http.HttpInputMessage) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotReadableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #89                 // Method read:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/awt/image/BufferedImage;
       6: areturn

  static void access$000(org.springframework.http.converter.BufferedImageHttpMessageConverter, java.awt.image.BufferedImage, org.springframework.http.MediaType, java.io.OutputStream) throws java.io.IOException, org.springframework.http.converter.HttpMessageNotWritableException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method writeInternal:(Ljava/awt/image/BufferedImage;Lorg/springframework/http/MediaType;Ljava/io/OutputStream;)V
       7: return
}
