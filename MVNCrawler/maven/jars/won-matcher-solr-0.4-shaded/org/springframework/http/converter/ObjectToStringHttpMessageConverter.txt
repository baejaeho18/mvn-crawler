Compiled from "ObjectToStringHttpMessageConverter.java"
public class org.springframework.http.converter.ObjectToStringHttpMessageConverter extends org.springframework.http.converter.AbstractHttpMessageConverter<java.lang.Object> {
  private final org.springframework.core.convert.ConversionService conversionService;

  private final org.springframework.http.converter.StringHttpMessageConverter stringHttpMessageConverter;

  public org.springframework.http.converter.ObjectToStringHttpMessageConverter(org.springframework.core.convert.ConversionService);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #1                  // Field org/springframework/http/converter/StringHttpMessageConverter.DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       5: invokespecial #2                  // Method "<init>":(Lorg/springframework/core/convert/ConversionService;Ljava/nio/charset/Charset;)V
       8: return

  public org.springframework.http.converter.ObjectToStringHttpMessageConverter(org.springframework.core.convert.ConversionService, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: aload_2
       2: iconst_1
       3: anewarray     #3                  // class org/springframework/http/MediaType
       6: dup
       7: iconst_0
       8: getstatic     #4                  // Field org/springframework/http/MediaType.TEXT_PLAIN:Lorg/springframework/http/MediaType;
      11: aastore
      12: invokespecial #5                  // Method org/springframework/http/converter/AbstractHttpMessageConverter."<init>":(Ljava/nio/charset/Charset;[Lorg/springframework/http/MediaType;)V
      15: aload_1
      16: ldc           #6                  // String ConversionService is required
      18: invokestatic  #7                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      26: aload_0
      27: new           #9                  // class org/springframework/http/converter/StringHttpMessageConverter
      30: dup
      31: aload_2
      32: invokespecial #10                 // Method org/springframework/http/converter/StringHttpMessageConverter."<init>":(Ljava/nio/charset/Charset;)V
      35: putfield      #11                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      38: return

  public void setWriteAcceptCharset(boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
       4: iload_1
       5: invokevirtual #12                 // Method org/springframework/http/converter/StringHttpMessageConverter.setWriteAcceptCharset:(Z)V
       8: return

  public boolean canRead(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: ldc           #13                 // class java/lang/String
       6: aload_1
       7: invokeinterface #14,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      12: ifeq          27
      15: aload_0
      16: aload_2
      17: invokevirtual #15                 // Method canRead:(Lorg/springframework/http/MediaType;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public boolean canWrite(java.lang.Class<?>, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #13                 // class java/lang/String
       7: invokeinterface #14,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.canConvert:(Ljava/lang/Class;Ljava/lang/Class;)Z
      12: ifeq          27
      15: aload_0
      16: aload_2
      17: invokevirtual #16                 // Method canWrite:(Lorg/springframework/http/MediaType;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  protected boolean supports(java.lang.Class<?>);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  protected java.lang.Object readInternal(java.lang.Class<?>, org.springframework.http.HttpInputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #11                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
       4: ldc           #13                 // class java/lang/String
       6: aload_2
       7: invokevirtual #19                 // Method org/springframework/http/converter/StringHttpMessageConverter.readInternal:(Ljava/lang/Class;Lorg/springframework/http/HttpInputMessage;)Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: getfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
      15: aload_3
      16: aload_1
      17: invokeinterface #20,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      22: areturn

  protected void writeInternal(java.lang.Object, org.springframework.http.HttpOutputMessage) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #13                 // class java/lang/String
       7: invokeinterface #20,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #13                 // class java/lang/String
      15: astore_3
      16: aload_0
      17: getfield      #11                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      20: aload_3
      21: aload_2
      22: invokevirtual #21                 // Method org/springframework/http/converter/StringHttpMessageConverter.writeInternal:(Ljava/lang/String;Lorg/springframework/http/HttpOutputMessage;)V
      25: return

  protected java.lang.Long getContentLength(java.lang.Object, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #8                  // Field conversionService:Lorg/springframework/core/convert/ConversionService;
       4: aload_1
       5: ldc           #13                 // class java/lang/String
       7: invokeinterface #20,  3           // InterfaceMethod org/springframework/core/convert/ConversionService.convert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #13                 // class java/lang/String
      15: astore_3
      16: aload_0
      17: getfield      #11                 // Field stringHttpMessageConverter:Lorg/springframework/http/converter/StringHttpMessageConverter;
      20: aload_3
      21: aload_2
      22: invokevirtual #22                 // Method org/springframework/http/converter/StringHttpMessageConverter.getContentLength:(Ljava/lang/String;Lorg/springframework/http/MediaType;)Ljava/lang/Long;
      25: areturn
}
