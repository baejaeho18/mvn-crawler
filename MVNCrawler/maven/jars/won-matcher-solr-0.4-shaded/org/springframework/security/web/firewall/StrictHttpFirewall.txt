Compiled from "StrictHttpFirewall.java"
public class org.springframework.security.web.firewall.StrictHttpFirewall implements org.springframework.security.web.firewall.HttpFirewall {
  private static final java.lang.String ENCODED_PERCENT;

  private static final java.lang.String PERCENT;

  private static final java.util.List<java.lang.String> FORBIDDEN_ENCODED_PERIOD;

  private static final java.util.List<java.lang.String> FORBIDDEN_SEMICOLON;

  private static final java.util.List<java.lang.String> FORBIDDEN_FORWARDSLASH;

  private static final java.util.List<java.lang.String> FORBIDDEN_BACKSLASH;

  private java.util.Set<java.lang.String> encodedUrlBlacklist;

  private java.util.Set<java.lang.String> decodedUrlBlacklist;

  public org.springframework.security.web.firewall.StrictHttpFirewall();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
      15: aload_0
      16: new           #2                  // class java/util/HashSet
      19: dup
      20: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      23: putfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      26: aload_0
      27: getstatic     #6                  // Field FORBIDDEN_SEMICOLON:Ljava/util/List;
      30: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      33: aload_0
      34: getstatic     #8                  // Field FORBIDDEN_FORWARDSLASH:Ljava/util/List;
      37: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      40: aload_0
      41: getstatic     #9                  // Field FORBIDDEN_BACKSLASH:Ljava/util/List;
      44: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      47: aload_0
      48: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
      51: ldc           #11                 // String %25
      53: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      58: pop
      59: aload_0
      60: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
      63: getstatic     #13                 // Field FORBIDDEN_ENCODED_PERIOD:Ljava/util/List;
      66: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      71: pop
      72: aload_0
      73: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      76: ldc           #15                 // String %
      78: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      83: pop
      84: return

  public void setAllowSemicolon(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: getstatic     #6                  // Field FORBIDDEN_SEMICOLON:Ljava/util/List;
       8: invokespecial #16                 // Method urlBlacklistsRemoveAll:(Ljava/util/Collection;)V
      11: goto          21
      14: aload_0
      15: getstatic     #6                  // Field FORBIDDEN_SEMICOLON:Ljava/util/List;
      18: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      21: return

  public void setAllowUrlEncodedSlash(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: getstatic     #8                  // Field FORBIDDEN_FORWARDSLASH:Ljava/util/List;
       8: invokespecial #16                 // Method urlBlacklistsRemoveAll:(Ljava/util/Collection;)V
      11: goto          21
      14: aload_0
      15: getstatic     #8                  // Field FORBIDDEN_FORWARDSLASH:Ljava/util/List;
      18: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      21: return

  public void setAllowUrlEncodedPeriod(boolean);
    Code:
       0: iload_1
       1: ifeq          20
       4: aload_0
       5: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
       8: getstatic     #13                 // Field FORBIDDEN_ENCODED_PERIOD:Ljava/util/List;
      11: invokeinterface #17,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      16: pop
      17: goto          33
      20: aload_0
      21: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
      24: getstatic     #13                 // Field FORBIDDEN_ENCODED_PERIOD:Ljava/util/List;
      27: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: return

  public void setAllowBackSlash(boolean);
    Code:
       0: iload_1
       1: ifeq          14
       4: aload_0
       5: getstatic     #9                  // Field FORBIDDEN_BACKSLASH:Ljava/util/List;
       8: invokespecial #16                 // Method urlBlacklistsRemoveAll:(Ljava/util/Collection;)V
      11: goto          21
      14: aload_0
      15: getstatic     #9                  // Field FORBIDDEN_BACKSLASH:Ljava/util/List;
      18: invokespecial #7                  // Method urlBlacklistsAddAll:(Ljava/util/Collection;)V
      21: return

  public void setAllowUrlEncodedPercent(boolean);
    Code:
       0: iload_1
       1: ifeq          31
       4: aload_0
       5: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
       8: ldc           #11                 // String %25
      10: invokeinterface #18,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      20: ldc           #15                 // String %
      22: invokeinterface #18,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      27: pop
      28: goto          55
      31: aload_0
      32: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
      35: ldc           #11                 // String %25
      37: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: aload_0
      44: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      47: ldc           #15                 // String %
      49: invokeinterface #12,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      54: pop
      55: return

  private void urlBlacklistsAddAll(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #14,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
      21: pop
      22: return

  private void urlBlacklistsRemoveAll(java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      10: pop
      11: aload_0
      12: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      15: aload_1
      16: invokeinterface #17,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      21: pop
      22: return

  public org.springframework.security.web.firewall.FirewalledRequest getFirewalledRequest(javax.servlet.http.HttpServletRequest) throws org.springframework.security.web.firewall.RequestRejectedException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method rejectedBlacklistedUrls:(Ljavax/servlet/http/HttpServletRequest;)V
       5: aload_1
       6: invokestatic  #20                 // Method isNormalized:(Ljavax/servlet/http/HttpServletRequest;)Z
       9: ifne          22
      12: new           #21                 // class org/springframework/security/web/firewall/RequestRejectedException
      15: dup
      16: ldc           #22                 // String The request was rejected because the URL was not normalized.
      18: invokespecial #23                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_1
      23: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      28: astore_2
      29: aload_2
      30: invokestatic  #25                 // Method containsOnlyPrintableAsciiCharacters:(Ljava/lang/String;)Z
      33: ifne          46
      36: new           #21                 // class org/springframework/security/web/firewall/RequestRejectedException
      39: dup
      40: ldc           #26                 // String The requestURI was rejected because it can only contain printable ASCII characters.
      42: invokespecial #23                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: new           #27                 // class org/springframework/security/web/firewall/StrictHttpFirewall$1
      49: dup
      50: aload_0
      51: aload_1
      52: invokespecial #28                 // Method org/springframework/security/web/firewall/StrictHttpFirewall$1."<init>":(Lorg/springframework/security/web/firewall/StrictHttpFirewall;Ljavax/servlet/http/HttpServletRequest;)V
      55: areturn

  private void rejectedBlacklistedUrls(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: getfield      #4                  // Field encodedUrlBlacklist:Ljava/util/Set;
       4: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          72
      19: aload_2
      20: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #32                 // class java/lang/String
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokestatic  #33                 // Method encodedUrlContains:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Z
      34: ifeq          69
      37: new           #21                 // class org/springframework/security/web/firewall/RequestRejectedException
      40: dup
      41: new           #34                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #36                 // String The request was rejected because the URL contained a potentially malicious String \"
      50: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_3
      54: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: ldc           #38                 // String \"
      59: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokespecial #23                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: goto          10
      72: aload_0
      73: getfield      #5                  // Field decodedUrlBlacklist:Ljava/util/Set;
      76: invokeinterface #29,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      81: astore_2
      82: aload_2
      83: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      88: ifeq          144
      91: aload_2
      92: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: checkcast     #32                 // class java/lang/String
     100: astore_3
     101: aload_1
     102: aload_3
     103: invokestatic  #40                 // Method decodedUrlContains:(Ljavax/servlet/http/HttpServletRequest;Ljava/lang/String;)Z
     106: ifeq          141
     109: new           #21                 // class org/springframework/security/web/firewall/RequestRejectedException
     112: dup
     113: new           #34                 // class java/lang/StringBuilder
     116: dup
     117: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     120: ldc           #36                 // String The request was rejected because the URL contained a potentially malicious String \"
     122: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_3
     126: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #38                 // String \"
     131: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     137: invokespecial #23                 // Method org/springframework/security/web/firewall/RequestRejectedException."<init>":(Ljava/lang/String;)V
     140: athrow
     141: goto          82
     144: return

  public javax.servlet.http.HttpServletResponse getFirewalledResponse(javax.servlet.http.HttpServletResponse);
    Code:
       0: new           #41                 // class org/springframework/security/web/firewall/FirewalledResponse
       3: dup
       4: aload_1
       5: invokespecial #42                 // Method org/springframework/security/web/firewall/FirewalledResponse."<init>":(Ljavax/servlet/http/HttpServletResponse;)V
       8: areturn

  private static boolean isNormalized(javax.servlet.http.HttpServletRequest);
    Code:
       0: aload_0
       1: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
       6: invokestatic  #43                 // Method isNormalized:(Ljava/lang/String;)Z
       9: ifne          14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
      20: invokestatic  #43                 // Method isNormalized:(Ljava/lang/String;)Z
      23: ifne          28
      26: iconst_0
      27: ireturn
      28: aload_0
      29: invokeinterface #45,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServletPath:()Ljava/lang/String;
      34: invokestatic  #43                 // Method isNormalized:(Ljava/lang/String;)Z
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: invokeinterface #46,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getPathInfo:()Ljava/lang/String;
      48: invokestatic  #43                 // Method isNormalized:(Ljava/lang/String;)Z
      51: ifne          56
      54: iconst_0
      55: ireturn
      56: iconst_1
      57: ireturn

  private static boolean encodedUrlContains(javax.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #44,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getContextPath:()Ljava/lang/String;
       6: aload_1
       7: invokestatic  #47                 // Method valueContains:(Ljava/lang/String;Ljava/lang/String;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: invokeinterface #24,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestURI:()Ljava/lang/String;
      21: aload_1
      22: invokestatic  #47                 // Method valueContains:(Ljava/lang/String;Ljava/lang/String;)Z
      25: ireturn

  private static boolean decodedUrlContains(javax.servlet.http.HttpServletRequest, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #45,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getServletPath:()Ljava/lang/String;
       6: aload_1
       7: invokestatic  #47                 // Method valueContains:(Ljava/lang/String;Ljava/lang/String;)Z
      10: ifeq          15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: invokeinterface #46,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getPathInfo:()Ljava/lang/String;
      21: aload_1
      22: invokestatic  #47                 // Method valueContains:(Ljava/lang/String;Ljava/lang/String;)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iconst_0
      31: ireturn

  private static boolean containsOnlyPrintableAsciiCharacters(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method java/lang/String.length:()I
       4: istore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iload_1
       9: if_icmpge     38
      12: aload_0
      13: iload_2
      14: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      17: istore_3
      18: iload_3
      19: bipush        32
      21: if_icmplt     30
      24: iload_3
      25: bipush        126
      27: if_icmple     32
      30: iconst_0
      31: ireturn
      32: iinc          2, 1
      35: goto          7
      38: iconst_1
      39: ireturn

  private static boolean valueContains(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: ifnull        16
       4: aload_0
       5: aload_1
       6: invokevirtual #50                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       9: ifeq          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  private static boolean isNormalized(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_0
       7: ldc           #51                 // String //
       9: invokevirtual #52                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      12: iconst_m1
      13: if_icmple     18
      16: iconst_0
      17: ireturn
      18: aload_0
      19: invokevirtual #48                 // Method java/lang/String.length:()I
      22: istore_1
      23: iload_1
      24: ifle          96
      27: aload_0
      28: bipush        47
      30: iload_1
      31: iconst_1
      32: isub
      33: invokevirtual #53                 // Method java/lang/String.lastIndexOf:(II)I
      36: istore_2
      37: iload_1
      38: iload_2
      39: isub
      40: istore_3
      41: iload_3
      42: iconst_2
      43: if_icmpne     60
      46: aload_0
      47: iload_2
      48: iconst_1
      49: iadd
      50: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      53: bipush        46
      55: if_icmpne     60
      58: iconst_0
      59: ireturn
      60: iload_3
      61: iconst_3
      62: if_icmpne     91
      65: aload_0
      66: iload_2
      67: iconst_1
      68: iadd
      69: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      72: bipush        46
      74: if_icmpne     91
      77: aload_0
      78: iload_2
      79: iconst_2
      80: iadd
      81: invokevirtual #49                 // Method java/lang/String.charAt:(I)C
      84: bipush        46
      86: if_icmpne     91
      89: iconst_0
      90: ireturn
      91: iload_2
      92: istore_1
      93: goto          23
      96: iconst_1
      97: ireturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #32                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #54                 // String %2e
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #55                 // String %2E
      13: aastore
      14: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: invokestatic  #57                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      20: putstatic     #13                 // Field FORBIDDEN_ENCODED_PERIOD:Ljava/util/List;
      23: iconst_3
      24: anewarray     #32                 // class java/lang/String
      27: dup
      28: iconst_0
      29: ldc           #58                 // String ;
      31: aastore
      32: dup
      33: iconst_1
      34: ldc           #59                 // String %3b
      36: aastore
      37: dup
      38: iconst_2
      39: ldc           #60                 // String %3B
      41: aastore
      42: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      45: invokestatic  #57                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      48: putstatic     #6                  // Field FORBIDDEN_SEMICOLON:Ljava/util/List;
      51: iconst_2
      52: anewarray     #32                 // class java/lang/String
      55: dup
      56: iconst_0
      57: ldc           #61                 // String %2f
      59: aastore
      60: dup
      61: iconst_1
      62: ldc           #62                 // String %2F
      64: aastore
      65: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      68: invokestatic  #57                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      71: putstatic     #8                  // Field FORBIDDEN_FORWARDSLASH:Ljava/util/List;
      74: iconst_3
      75: anewarray     #32                 // class java/lang/String
      78: dup
      79: iconst_0
      80: ldc           #63                 // String \\
      82: aastore
      83: dup
      84: iconst_1
      85: ldc           #64                 // String %5c
      87: aastore
      88: dup
      89: iconst_2
      90: ldc           #65                 // String %5C
      92: aastore
      93: invokestatic  #56                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      96: invokestatic  #57                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      99: putstatic     #9                  // Field FORBIDDEN_BACKSLASH:Ljava/util/List;
     102: return
}
