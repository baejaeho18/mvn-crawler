Compiled from "ConcurrentSessionFilter.java"
public class org.springframework.security.web.session.ConcurrentSessionFilter extends org.springframework.web.filter.GenericFilterBean {
  private final org.springframework.security.core.session.SessionRegistry sessionRegistry;

  private java.lang.String expiredUrl;

  private org.springframework.security.web.RedirectStrategy redirectStrategy;

  private org.springframework.security.web.authentication.logout.LogoutHandler handlers;

  private org.springframework.security.web.session.SessionInformationExpiredStrategy sessionInformationExpiredStrategy;

  public org.springframework.security.web.session.ConcurrentSessionFilter(org.springframework.security.core.session.SessionRegistry);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/filter/GenericFilterBean."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/security/web/authentication/logout/CompositeLogoutHandler
       8: dup
       9: iconst_1
      10: anewarray     #4                  // class org/springframework/security/web/authentication/logout/LogoutHandler
      13: dup
      14: iconst_0
      15: new           #5                  // class org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler
      18: dup
      19: invokespecial #6                  // Method org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler."<init>":()V
      22: aastore
      23: invokespecial #7                  // Method org/springframework/security/web/authentication/logout/CompositeLogoutHandler."<init>":([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
      26: putfield      #8                  // Field handlers:Lorg/springframework/security/web/authentication/logout/LogoutHandler;
      29: aload_1
      30: ldc           #9                  // String SessionRegistry required
      32: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: aload_0
      36: aload_1
      37: putfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
      40: aload_0
      41: new           #12                 // class org/springframework/security/web/session/ConcurrentSessionFilter$ResponseBodySessionInformationExpiredStrategy
      44: dup
      45: aconst_null
      46: invokespecial #13                 // Method org/springframework/security/web/session/ConcurrentSessionFilter$ResponseBodySessionInformationExpiredStrategy."<init>":(Lorg/springframework/security/web/session/ConcurrentSessionFilter$1;)V
      49: putfield      #14                 // Field sessionInformationExpiredStrategy:Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
      52: return

  public org.springframework.security.web.session.ConcurrentSessionFilter(org.springframework.security.core.session.SessionRegistry, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/filter/GenericFilterBean."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/security/web/authentication/logout/CompositeLogoutHandler
       8: dup
       9: iconst_1
      10: anewarray     #4                  // class org/springframework/security/web/authentication/logout/LogoutHandler
      13: dup
      14: iconst_0
      15: new           #5                  // class org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler
      18: dup
      19: invokespecial #6                  // Method org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler."<init>":()V
      22: aastore
      23: invokespecial #7                  // Method org/springframework/security/web/authentication/logout/CompositeLogoutHandler."<init>":([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
      26: putfield      #8                  // Field handlers:Lorg/springframework/security/web/authentication/logout/LogoutHandler;
      29: aload_1
      30: ldc           #9                  // String SessionRegistry required
      32: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: aload_2
      36: ifnull        46
      39: aload_2
      40: invokestatic  #15                 // Method org/springframework/security/web/util/UrlUtils.isValidRedirectUrl:(Ljava/lang/String;)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: new           #16                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      58: aload_2
      59: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: ldc           #19                 // String  isn\'t a valid redirect URL
      64: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokestatic  #21                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      73: aload_0
      74: aload_2
      75: putfield      #22                 // Field expiredUrl:Ljava/lang/String;
      78: aload_0
      79: aload_1
      80: putfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
      83: aload_0
      84: new           #23                 // class org/springframework/security/web/session/ConcurrentSessionFilter$1
      87: dup
      88: aload_0
      89: invokespecial #24                 // Method org/springframework/security/web/session/ConcurrentSessionFilter$1."<init>":(Lorg/springframework/security/web/session/ConcurrentSessionFilter;)V
      92: putfield      #14                 // Field sessionInformationExpiredStrategy:Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
      95: return

  public org.springframework.security.web.session.ConcurrentSessionFilter(org.springframework.security.core.session.SessionRegistry, org.springframework.security.web.session.SessionInformationExpiredStrategy);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/web/filter/GenericFilterBean."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/security/web/authentication/logout/CompositeLogoutHandler
       8: dup
       9: iconst_1
      10: anewarray     #4                  // class org/springframework/security/web/authentication/logout/LogoutHandler
      13: dup
      14: iconst_0
      15: new           #5                  // class org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler
      18: dup
      19: invokespecial #6                  // Method org/springframework/security/web/authentication/logout/SecurityContextLogoutHandler."<init>":()V
      22: aastore
      23: invokespecial #7                  // Method org/springframework/security/web/authentication/logout/CompositeLogoutHandler."<init>":([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
      26: putfield      #8                  // Field handlers:Lorg/springframework/security/web/authentication/logout/LogoutHandler;
      29: aload_1
      30: ldc           #25                 // String sessionRegistry required
      32: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      35: aload_2
      36: ldc           #26                 // String sessionInformationExpiredStrategy cannot be null
      38: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      41: aload_0
      42: aload_1
      43: putfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
      46: aload_0
      47: aload_2
      48: putfield      #14                 // Field sessionInformationExpiredStrategy:Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
      51: return

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
       4: ldc           #9                  // String SessionRegistry required
       6: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: return

  public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException;
    Code:
       0: aload_1
       1: checkcast     #27                 // class javax/servlet/http/HttpServletRequest
       4: astore        4
       6: aload_2
       7: checkcast     #28                 // class javax/servlet/http/HttpServletResponse
      10: astore        5
      12: aload         4
      14: iconst_0
      15: invokeinterface #29,  2           // InterfaceMethod javax/servlet/http/HttpServletRequest.getSession:(Z)Ljavax/servlet/http/HttpSession;
      20: astore        6
      22: aload         6
      24: ifnull        154
      27: aload_0
      28: getfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
      31: aload         6
      33: invokeinterface #30,  1           // InterfaceMethod javax/servlet/http/HttpSession.getId:()Ljava/lang/String;
      38: invokeinterface #31,  2           // InterfaceMethod org/springframework/security/core/session/SessionRegistry.getSessionInformation:(Ljava/lang/String;)Lorg/springframework/security/core/session/SessionInformation;
      43: astore        7
      45: aload         7
      47: ifnull        154
      50: aload         7
      52: invokevirtual #32                 // Method org/springframework/security/core/session/SessionInformation.isExpired:()Z
      55: ifeq          140
      58: aload_0
      59: getfield      #33                 // Field logger:Lorg/apache/commons/logging/Log;
      62: invokeinterface #34,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      67: ifeq          109
      70: aload_0
      71: getfield      #33                 // Field logger:Lorg/apache/commons/logging/Log;
      74: new           #16                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #35                 // String Requested session ID
      83: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload         4
      88: invokeinterface #36,  1           // InterfaceMethod javax/servlet/http/HttpServletRequest.getRequestedSessionId:()Ljava/lang/String;
      93: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #37                 // String  has expired.
      98: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #38,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     109: aload_0
     110: aload         4
     112: aload         5
     114: invokespecial #39                 // Method doLogout:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
     117: aload_0
     118: getfield      #14                 // Field sessionInformationExpiredStrategy:Lorg/springframework/security/web/session/SessionInformationExpiredStrategy;
     121: new           #40                 // class org/springframework/security/web/session/SessionInformationExpiredEvent
     124: dup
     125: aload         7
     127: aload         4
     129: aload         5
     131: invokespecial #41                 // Method org/springframework/security/web/session/SessionInformationExpiredEvent."<init>":(Lorg/springframework/security/core/session/SessionInformation;Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;)V
     134: invokeinterface #42,  2           // InterfaceMethod org/springframework/security/web/session/SessionInformationExpiredStrategy.onExpiredSessionDetected:(Lorg/springframework/security/web/session/SessionInformationExpiredEvent;)V
     139: return
     140: aload_0
     141: getfield      #11                 // Field sessionRegistry:Lorg/springframework/security/core/session/SessionRegistry;
     144: aload         7
     146: invokevirtual #43                 // Method org/springframework/security/core/session/SessionInformation.getSessionId:()Ljava/lang/String;
     149: invokeinterface #44,  2           // InterfaceMethod org/springframework/security/core/session/SessionRegistry.refreshLastRequest:(Ljava/lang/String;)V
     154: aload_3
     155: aload         4
     157: aload         5
     159: invokeinterface #45,  3           // InterfaceMethod javax/servlet/FilterChain.doFilter:(Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V
     164: return

  protected java.lang.String determineExpiredUrl(javax.servlet.http.HttpServletRequest, org.springframework.security.core.session.SessionInformation);
    Code:
       0: aload_0
       1: getfield      #22                 // Field expiredUrl:Ljava/lang/String;
       4: areturn

  private void doLogout(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: invokestatic  #46                 // Method org/springframework/security/core/context/SecurityContextHolder.getContext:()Lorg/springframework/security/core/context/SecurityContext;
       3: invokeinterface #47,  1           // InterfaceMethod org/springframework/security/core/context/SecurityContext.getAuthentication:()Lorg/springframework/security/core/Authentication;
       8: astore_3
       9: aload_0
      10: getfield      #8                  // Field handlers:Lorg/springframework/security/web/authentication/logout/LogoutHandler;
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokeinterface #48,  4           // InterfaceMethod org/springframework/security/web/authentication/logout/LogoutHandler.logout:(Ljavax/servlet/http/HttpServletRequest;Ljavax/servlet/http/HttpServletResponse;Lorg/springframework/security/core/Authentication;)V
      21: return

  public void setLogoutHandlers(org.springframework.security.web.authentication.logout.LogoutHandler[]);
    Code:
       0: aload_0
       1: new           #3                  // class org/springframework/security/web/authentication/logout/CompositeLogoutHandler
       4: dup
       5: aload_1
       6: invokespecial #7                  // Method org/springframework/security/web/authentication/logout/CompositeLogoutHandler."<init>":([Lorg/springframework/security/web/authentication/logout/LogoutHandler;)V
       9: putfield      #8                  // Field handlers:Lorg/springframework/security/web/authentication/logout/LogoutHandler;
      12: return

  public void setRedirectStrategy(org.springframework.security.web.RedirectStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
       5: return

  static org.springframework.security.web.RedirectStrategy access$100(org.springframework.security.web.session.ConcurrentSessionFilter);
    Code:
       0: aload_0
       1: getfield      #1                  // Field redirectStrategy:Lorg/springframework/security/web/RedirectStrategy;
       4: areturn
}
