Compiled from "XXssProtectionHeaderWriter.java"
public final class org.springframework.security.web.header.writers.XXssProtectionHeaderWriter implements org.springframework.security.web.header.HeaderWriter {
  private static final java.lang.String XSS_PROTECTION_HEADER;

  private boolean enabled;

  private boolean block;

  private java.lang.String headerValue;

  public org.springframework.security.web.header.writers.XXssProtectionHeaderWriter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field enabled:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field block:Z
      14: aload_0
      15: invokespecial #4                  // Method updateHeaderValue:()V
      18: return

  public void writeHeaders(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse);
    Code:
       0: aload_2
       1: ldc           #6                  // String X-XSS-Protection
       3: aload_0
       4: getfield      #7                  // Field headerValue:Ljava/lang/String;
       7: invokeinterface #8,  3            // InterfaceMethod javax/servlet/http/HttpServletResponse.setHeader:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void setEnabled(boolean);
    Code:
       0: iload_1
       1: ifne          9
       4: aload_0
       5: iconst_0
       6: invokevirtual #9                  // Method setBlock:(Z)V
       9: aload_0
      10: iload_1
      11: putfield      #2                  // Field enabled:Z
      14: aload_0
      15: invokespecial #4                  // Method updateHeaderValue:()V
      18: return

  public void setBlock(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ifne          21
       7: iload_1
       8: ifeq          21
      11: new           #10                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #11                 // String Cannot set block to true with enabled false
      17: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: iload_1
      23: putfield      #3                  // Field block:Z
      26: aload_0
      27: invokespecial #4                  // Method updateHeaderValue:()V
      30: return

  private void updateHeaderValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field enabled:Z
       4: ifne          14
       7: aload_0
       8: ldc           #13                 // String 0
      10: putfield      #7                  // Field headerValue:Ljava/lang/String;
      13: return
      14: aload_0
      15: ldc           #14                 // String 1
      17: putfield      #7                  // Field headerValue:Ljava/lang/String;
      20: aload_0
      21: getfield      #3                  // Field block:Z
      24: ifeq          53
      27: new           #15                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      34: aload_0
      35: dup_x1
      36: getfield      #7                  // Field headerValue:Ljava/lang/String;
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #18                 // String ; mode=block
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: putfield      #7                  // Field headerValue:Ljava/lang/String;
      53: return

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #22                 // String  [headerValue=
      19: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: getfield      #7                  // Field headerValue:Ljava/lang/String;
      26: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: ldc           #23                 // String ]
      31: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: areturn
}
