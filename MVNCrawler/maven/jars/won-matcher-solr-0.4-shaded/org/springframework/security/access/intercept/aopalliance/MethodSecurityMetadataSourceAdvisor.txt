Compiled from "MethodSecurityMetadataSourceAdvisor.java"
public class org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor extends org.springframework.aop.support.AbstractPointcutAdvisor implements org.springframework.beans.factory.BeanFactoryAware {
  private transient org.springframework.security.access.method.MethodSecurityMetadataSource attributeSource;

  private transient org.springframework.security.access.intercept.aopalliance.MethodSecurityInterceptor interceptor;

  private final org.springframework.aop.Pointcut pointcut;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private final java.lang.String adviceBeanName;

  private final java.lang.String metadataSourceBeanName;

  private volatile transient java.lang.Object adviceMonitor;

  public org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor(java.lang.String, org.springframework.security.access.method.MethodSecurityMetadataSource, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/aop/support/AbstractPointcutAdvisor."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/security/access/intercept/aopalliance/MethodSecurityMetadataSourceAdvisor$MethodSecurityMetadataSourcePointcut
       8: dup
       9: aload_0
      10: invokespecial #4                  // Method org/springframework/security/access/intercept/aopalliance/MethodSecurityMetadataSourceAdvisor$MethodSecurityMetadataSourcePointcut."<init>":(Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityMetadataSourceAdvisor;)V
      13: putfield      #5                  // Field pointcut:Lorg/springframework/aop/Pointcut;
      16: aload_0
      17: new           #6                  // class java/lang/Object
      20: dup
      21: invokespecial #7                  // Method java/lang/Object."<init>":()V
      24: putfield      #8                  // Field adviceMonitor:Ljava/lang/Object;
      27: aload_1
      28: ldc           #9                  // String The adviceBeanName cannot be null
      30: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      33: aload_2
      34: ldc           #11                 // String The attributeSource cannot be null
      36: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      39: aload_3
      40: ldc           #12                 // String The attributeSourceBeanName cannot be null
      42: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      45: aload_0
      46: aload_1
      47: putfield      #13                 // Field adviceBeanName:Ljava/lang/String;
      50: aload_0
      51: aload_2
      52: putfield      #1                  // Field attributeSource:Lorg/springframework/security/access/method/MethodSecurityMetadataSource;
      55: aload_0
      56: aload_3
      57: putfield      #14                 // Field metadataSourceBeanName:Ljava/lang/String;
      60: return

  public org.springframework.aop.Pointcut getPointcut();
    Code:
       0: aload_0
       1: getfield      #5                  // Field pointcut:Lorg/springframework/aop/Pointcut;
       4: areturn

  public org.aopalliance.aop.Advice getAdvice();
    Code:
       0: aload_0
       1: getfield      #8                  // Field adviceMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #15                 // Field interceptor:Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptor;
      11: ifnonnull     62
      14: aload_0
      15: getfield      #13                 // Field adviceBeanName:Ljava/lang/String;
      18: ldc           #16                 // String \'adviceBeanName\' must be set for use with bean factory lookup.
      20: invokestatic  #10                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      27: ifnull        34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ldc           #18                 // String BeanFactory must be set to resolve \'adviceBeanName\'
      37: invokestatic  #19                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      40: aload_0
      41: aload_0
      42: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      45: aload_0
      46: getfield      #13                 // Field adviceBeanName:Ljava/lang/String;
      49: ldc           #20                 // class org/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptor
      51: invokeinterface #21,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      56: checkcast     #20                 // class org/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptor
      59: putfield      #15                 // Field interceptor:Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptor;
      62: aload_0
      63: getfield      #15                 // Field interceptor:Lorg/springframework/security/access/intercept/aopalliance/MethodSecurityInterceptor;
      66: aload_1
      67: monitorexit
      68: areturn
      69: astore_2
      70: aload_1
      71: monitorexit
      72: aload_2
      73: athrow
    Exception table:
       from    to  target type
           7    68    69   any
          69    72    69   any

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: new           #6                  // class java/lang/Object
       8: dup
       9: invokespecial #7                  // Method java/lang/Object."<init>":()V
      12: putfield      #8                  // Field adviceMonitor:Ljava/lang/Object;
      15: aload_0
      16: aload_0
      17: getfield      #17                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      20: aload_0
      21: getfield      #14                 // Field metadataSourceBeanName:Ljava/lang/String;
      24: ldc           #23                 // class org/springframework/security/access/method/MethodSecurityMetadataSource
      26: invokeinterface #21,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      31: checkcast     #23                 // class org/springframework/security/access/method/MethodSecurityMetadataSource
      34: putfield      #1                  // Field attributeSource:Lorg/springframework/security/access/method/MethodSecurityMetadataSource;
      37: return

  static org.springframework.security.access.method.MethodSecurityMetadataSource access$000(org.springframework.security.access.intercept.aopalliance.MethodSecurityMetadataSourceAdvisor);
    Code:
       0: aload_0
       1: getfield      #1                  // Field attributeSource:Lorg/springframework/security/access/method/MethodSecurityMetadataSource;
       4: areturn
}
