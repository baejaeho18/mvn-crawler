Compiled from "AbstractClassGenerator.java"
public abstract class org.springframework.cglib.core.AbstractClassGenerator<T> implements org.springframework.cglib.core.ClassGenerator {
  private static final java.lang.ThreadLocal CURRENT;

  private static volatile java.util.Map<java.lang.ClassLoader, org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData> CACHE;

  private org.springframework.cglib.core.GeneratorStrategy strategy;

  private org.springframework.cglib.core.NamingPolicy namingPolicy;

  private org.springframework.cglib.core.AbstractClassGenerator$Source source;

  private java.lang.ClassLoader classLoader;

  private java.lang.String namePrefix;

  private java.lang.Object key;

  private boolean useCache;

  private java.lang.String className;

  private boolean attemptLoad;

  protected T wrapCachedClass(java.lang.Class);
    Code:
       0: new           #39                 // class java/lang/ref/WeakReference
       3: dup
       4: aload_1
       5: invokespecial #43                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  protected java.lang.Object unwrapCachedValue(T);
    Code:
       0: aload_1
       1: checkcast     #39                 // class java/lang/ref/WeakReference
       4: invokevirtual #54                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
       7: areturn

  protected org.springframework.cglib.core.AbstractClassGenerator(org.springframework.cglib.core.AbstractClassGenerator$Source);
    Code:
       0: aload_0
       1: invokespecial #60                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #66                 // Field org/springframework/cglib/core/DefaultGeneratorStrategy.INSTANCE:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
       8: putfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
      11: aload_0
      12: getstatic     #73                 // Field org/springframework/cglib/core/DefaultNamingPolicy.INSTANCE:Lorg/springframework/cglib/core/DefaultNamingPolicy;
      15: putfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
      18: aload_0
      19: iconst_1
      20: putfield      #77                 // Field useCache:Z
      23: aload_0
      24: aload_1
      25: putfield      #79                 // Field source:Lorg/springframework/cglib/core/AbstractClassGenerator$Source;
      28: return

  protected void setNamePrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #83                 // Field namePrefix:Ljava/lang/String;
       5: return

  protected final java.lang.String getClassName();
    Code:
       0: aload_0
       1: getfield      #87                 // Field className:Ljava/lang/String;
       4: areturn

  private void setClassName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #87                 // Field className:Ljava/lang/String;
       5: return

  private java.lang.String generateClassName(org.springframework.cglib.core.Predicate);
    Code:
       0: aload_0
       1: getfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
       4: aload_0
       5: getfield      #83                 // Field namePrefix:Ljava/lang/String;
       8: aload_0
       9: getfield      #79                 // Field source:Lorg/springframework/cglib/core/AbstractClassGenerator$Source;
      12: getfield      #93                 // Field org/springframework/cglib/core/AbstractClassGenerator$Source.name:Ljava/lang/String;
      15: aload_0
      16: getfield      #95                 // Field key:Ljava/lang/Object;
      19: aload_1
      20: invokeinterface #100,  5          // InterfaceMethod org/springframework/cglib/core/NamingPolicy.getClassName:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
      25: areturn

  public void setClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #106                // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public void setNamingPolicy(org.springframework.cglib.core.NamingPolicy);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #73                 // Field org/springframework/cglib/core/DefaultNamingPolicy.INSTANCE:Lorg/springframework/cglib/core/DefaultNamingPolicy;
       7: astore_1
       8: aload_0
       9: aload_1
      10: putfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
      13: return

  public org.springframework.cglib.core.NamingPolicy getNamingPolicy();
    Code:
       0: aload_0
       1: getfield      #75                 // Field namingPolicy:Lorg/springframework/cglib/core/NamingPolicy;
       4: areturn

  public void setUseCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #77                 // Field useCache:Z
       5: return

  public boolean getUseCache();
    Code:
       0: aload_0
       1: getfield      #77                 // Field useCache:Z
       4: ireturn

  public void setAttemptLoad(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #117                // Field attemptLoad:Z
       5: return

  public boolean getAttemptLoad();
    Code:
       0: aload_0
       1: getfield      #117                // Field attemptLoad:Z
       4: ireturn

  public void setStrategy(org.springframework.cglib.core.GeneratorStrategy);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: getstatic     #66                 // Field org/springframework/cglib/core/DefaultGeneratorStrategy.INSTANCE:Lorg/springframework/cglib/core/DefaultGeneratorStrategy;
       7: astore_1
       8: aload_0
       9: aload_1
      10: putfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
      13: return

  public org.springframework.cglib.core.GeneratorStrategy getStrategy();
    Code:
       0: aload_0
       1: getfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
       4: areturn

  public static org.springframework.cglib.core.AbstractClassGenerator getCurrent();
    Code:
       0: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
       3: invokevirtual #129                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #2                  // class org/springframework/cglib/core/AbstractClassGenerator
       9: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #106                // Field classLoader:Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_1
       6: ifnonnull     14
       9: aload_0
      10: invokevirtual #134                // Method getDefaultClassLoader:()Ljava/lang/ClassLoader;
      13: astore_1
      14: aload_1
      15: ifnonnull     26
      18: aload_0
      19: invokevirtual #138                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #142                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      25: astore_1
      26: aload_1
      27: ifnonnull     37
      30: invokestatic  #148                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      33: invokevirtual #151                // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      36: astore_1
      37: aload_1
      38: ifnonnull     51
      41: new           #153                // class java/lang/IllegalStateException
      44: dup
      45: ldc           #155                // String Cannot determine classloader
      47: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_1
      52: areturn

  protected abstract java.lang.ClassLoader getDefaultClassLoader();

  protected java.security.ProtectionDomain getProtectionDomain();
    Code:
       0: aconst_null
       1: areturn

  protected java.lang.Object create(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #168                // Method getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_2
       5: getstatic     #170                // Field CACHE:Ljava/util/Map;
       8: astore_3
       9: aload_3
      10: aload_2
      11: invokeinterface #174,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      19: astore        4
      21: aload         4
      23: ifnonnull     103
      26: ldc           #2                  // class org/springframework/cglib/core/AbstractClassGenerator
      28: dup
      29: astore        5
      31: monitorenter
      32: getstatic     #170                // Field CACHE:Ljava/util/Map;
      35: astore_3
      36: aload_3
      37: aload_2
      38: invokeinterface #174,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      46: astore        4
      48: aload         4
      50: ifnonnull     89
      53: new           #176                // class java/util/WeakHashMap
      56: dup
      57: aload_3
      58: invokespecial #179                // Method java/util/WeakHashMap."<init>":(Ljava/util/Map;)V
      61: astore        6
      63: new           #13                 // class org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData
      66: dup
      67: aload_2
      68: invokespecial #181                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData."<init>":(Ljava/lang/ClassLoader;)V
      71: astore        4
      73: aload         6
      75: aload_2
      76: aload         4
      78: invokeinterface #185,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      83: pop
      84: aload         6
      86: putstatic     #170                // Field CACHE:Ljava/util/Map;
      89: aload         5
      91: monitorexit
      92: goto          103
      95: astore        7
      97: aload         5
      99: monitorexit
     100: aload         7
     102: athrow
     103: aload_0
     104: aload_1
     105: putfield      #95                 // Field key:Ljava/lang/Object;
     108: aload         4
     110: aload_0
     111: aload_0
     112: invokevirtual #187                // Method getUseCache:()Z
     115: invokevirtual #190                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.get:(Lorg/springframework/cglib/core/AbstractClassGenerator;Z)Ljava/lang/Object;
     118: astore        5
     120: aload         5
     122: instanceof    #140                // class java/lang/Class
     125: ifeq          138
     128: aload_0
     129: aload         5
     131: checkcast     #140                // class java/lang/Class
     134: invokevirtual #193                // Method firstInstance:(Ljava/lang/Class;)Ljava/lang/Object;
     137: areturn
     138: aload_0
     139: aload         5
     141: invokevirtual #196                // Method nextInstance:(Ljava/lang/Object;)Ljava/lang/Object;
     144: areturn
     145: astore_2
     146: aload_2
     147: athrow
     148: astore_2
     149: aload_2
     150: athrow
     151: astore_2
     152: new           #198                // class org/springframework/cglib/core/CodeGenerationException
     155: dup
     156: aload_2
     157: invokespecial #201                // Method org/springframework/cglib/core/CodeGenerationException."<init>":(Ljava/lang/Throwable;)V
     160: athrow
    Exception table:
       from    to  target type
          32    92    95   any
          95   100    95   any
           0   137   145   Class java/lang/RuntimeException
         138   144   145   Class java/lang/RuntimeException
           0   137   148   Class java/lang/Error
         138   144   148   Class java/lang/Error
           0   137   151   Class java/lang/Exception
         138   144   151   Class java/lang/Exception

  protected java.lang.Class generate(org.springframework.cglib.core.AbstractClassGenerator$ClassLoaderData);
    Code:
       0: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
       3: invokevirtual #129                // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: astore_2
       7: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
      10: aload_0
      11: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      14: aload_1
      15: invokevirtual #219                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.getClassLoader:()Ljava/lang/ClassLoader;
      18: astore_3
      19: aload_3
      20: ifnonnull     58
      23: new           #153                // class java/lang/IllegalStateException
      26: dup
      27: new           #221                // class java/lang/StringBuilder
      30: dup
      31: invokespecial #222                // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #224                // String ClassLoader is null while trying to define class
      36: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #230                // Method getClassName:()Ljava/lang/String;
      43: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #232                // String . It seems that the loader has been expired from a weak reference somehow. Please file an issue at cglib\'s issue tracker.
      48: invokevirtual #228                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #235                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #157                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: aload_3
      59: dup
      60: astore        4
      62: monitorenter
      63: aload_0
      64: aload_1
      65: invokevirtual #239                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.getUniqueNamePredicate:()Lorg/springframework/cglib/core/Predicate;
      68: invokespecial #241                // Method generateClassName:(Lorg/springframework/cglib/core/Predicate;)Ljava/lang/String;
      71: astore        5
      73: aload_1
      74: aload         5
      76: invokevirtual #244                // Method org/springframework/cglib/core/AbstractClassGenerator$ClassLoaderData.reserveName:(Ljava/lang/String;)V
      79: aload_0
      80: aload         5
      82: invokespecial #246                // Method setClassName:(Ljava/lang/String;)V
      85: aload         4
      87: monitorexit
      88: goto          99
      91: astore        6
      93: aload         4
      95: monitorexit
      96: aload         6
      98: athrow
      99: aload_0
     100: getfield      #117                // Field attemptLoad:Z
     103: ifeq          132
     106: aload_3
     107: aload_0
     108: invokevirtual #230                // Method getClassName:()Ljava/lang/String;
     111: invokevirtual #252                // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
     114: astore        7
     116: aload         7
     118: astore        4
     120: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     123: aload_2
     124: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     127: aload         4
     129: areturn
     130: astore        4
     132: aload_0
     133: getfield      #68                 // Field strategy:Lorg/springframework/cglib/core/GeneratorStrategy;
     136: aload_0
     137: invokeinterface #257,  2          // InterfaceMethod org/springframework/cglib/core/GeneratorStrategy.generate:(Lorg/springframework/cglib/core/ClassGenerator;)[B
     142: astore        4
     144: new           #259                // class org/springframework/asm/ClassReader
     147: dup
     148: aload         4
     150: invokespecial #262                // Method org/springframework/asm/ClassReader."<init>":([B)V
     153: invokestatic  #267                // Method org/springframework/cglib/core/ClassNameReader.getClassName:(Lorg/springframework/asm/ClassReader;)Ljava/lang/String;
     156: astore        5
     158: aload_0
     159: invokevirtual #269                // Method getProtectionDomain:()Ljava/security/ProtectionDomain;
     162: astore        6
     164: aload_3
     165: dup
     166: astore        8
     168: monitorenter
     169: aload         6
     171: ifnonnull     187
     174: aload         5
     176: aload         4
     178: aload_3
     179: invokestatic  #275                // Method org/springframework/cglib/core/ReflectUtils.defineClass:(Ljava/lang/String;[BLjava/lang/ClassLoader;)Ljava/lang/Class;
     182: astore        7
     184: goto          199
     187: aload         5
     189: aload         4
     191: aload_3
     192: aload         6
     194: invokestatic  #278                // Method org/springframework/cglib/core/ReflectUtils.defineClass:(Ljava/lang/String;[BLjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;
     197: astore        7
     199: aload         8
     201: monitorexit
     202: goto          213
     205: astore        9
     207: aload         8
     209: monitorexit
     210: aload         9
     212: athrow
     213: aload         7
     215: astore        8
     217: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     220: aload_2
     221: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     224: aload         8
     226: areturn
     227: astore_3
     228: aload_3
     229: athrow
     230: astore_3
     231: aload_3
     232: athrow
     233: astore_3
     234: new           #198                // class org/springframework/cglib/core/CodeGenerationException
     237: dup
     238: aload_3
     239: invokespecial #201                // Method org/springframework/cglib/core/CodeGenerationException."<init>":(Ljava/lang/Throwable;)V
     242: athrow
     243: astore        10
     245: getstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
     248: aload_2
     249: invokevirtual #218                // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
     252: aload         10
     254: athrow
    Exception table:
       from    to  target type
          63    88    91   any
          91    96    91   any
         106   120   130   Class java/lang/ClassNotFoundException
         169   202   205   any
         205   210   205   any
          14   120   227   Class java/lang/RuntimeException
         130   217   227   Class java/lang/RuntimeException
          14   120   230   Class java/lang/Error
         130   217   230   Class java/lang/Error
          14   120   233   Class java/lang/Exception
         130   217   233   Class java/lang/Exception
          14   120   243   any
         130   217   243   any
         227   245   243   any

  protected abstract java.lang.Object firstInstance(java.lang.Class) throws java.lang.Exception;

  protected abstract java.lang.Object nextInstance(java.lang.Object) throws java.lang.Exception;

  static java.lang.Object access$100(org.springframework.cglib.core.AbstractClassGenerator);
    Code:
       0: aload_0
       1: getfield      #95                 // Field key:Ljava/lang/Object;
       4: areturn

  static {};
    Code:
       0: new           #128                // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #289                // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #126                // Field CURRENT:Ljava/lang/ThreadLocal;
      10: new           #176                // class java/util/WeakHashMap
      13: dup
      14: invokespecial #290                // Method java/util/WeakHashMap."<init>":()V
      17: putstatic     #170                // Field CACHE:Ljava/util/Map;
      20: return
}
