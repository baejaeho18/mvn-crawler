Compiled from "CacheResultOperation.java"
class org.springframework.cache.jcache.interceptor.CacheResultOperation extends org.springframework.cache.jcache.interceptor.AbstractJCacheKeyOperation<javax.cache.annotation.CacheResult> {
  private final org.springframework.util.ExceptionTypeFilter exceptionTypeFilter;

  private final org.springframework.cache.interceptor.CacheResolver exceptionCacheResolver;

  private final java.lang.String exceptionCacheName;

  public org.springframework.cache.jcache.interceptor.CacheResultOperation(javax.cache.annotation.CacheMethodDetails<javax.cache.annotation.CacheResult>, org.springframework.cache.interceptor.CacheResolver, org.springframework.cache.interceptor.KeyGenerator, org.springframework.cache.interceptor.CacheResolver);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/cache/jcache/interceptor/AbstractJCacheKeyOperation."<init>":(Ljavax/cache/annotation/CacheMethodDetails;Lorg/springframework/cache/interceptor/CacheResolver;Lorg/springframework/cache/interceptor/KeyGenerator;)V
       7: aload_1
       8: invokeinterface #2,  1            // InterfaceMethod javax/cache/annotation/CacheMethodDetails.getCacheAnnotation:()Ljava/lang/annotation/Annotation;
      13: checkcast     #3                  // class javax/cache/annotation/CacheResult
      16: astore        5
      18: aload_0
      19: aload_0
      20: aload         5
      22: invokeinterface #4,  1            // InterfaceMethod javax/cache/annotation/CacheResult.cachedExceptions:()[Ljava/lang/Class;
      27: aload         5
      29: invokeinterface #5,  1            // InterfaceMethod javax/cache/annotation/CacheResult.nonCachedExceptions:()[Ljava/lang/Class;
      34: invokevirtual #6                  // Method createExceptionTypeFilter:([Ljava/lang/Class;[Ljava/lang/Class;)Lorg/springframework/util/ExceptionTypeFilter;
      37: putfield      #7                  // Field exceptionTypeFilter:Lorg/springframework/util/ExceptionTypeFilter;
      40: aload_0
      41: aload         4
      43: putfield      #8                  // Field exceptionCacheResolver:Lorg/springframework/cache/interceptor/CacheResolver;
      46: aload_0
      47: aload         5
      49: invokeinterface #9,  1            // InterfaceMethod javax/cache/annotation/CacheResult.exceptionCacheName:()Ljava/lang/String;
      54: invokestatic  #10                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      57: ifeq          70
      60: aload         5
      62: invokeinterface #9,  1            // InterfaceMethod javax/cache/annotation/CacheResult.exceptionCacheName:()Ljava/lang/String;
      67: goto          71
      70: aconst_null
      71: putfield      #11                 // Field exceptionCacheName:Ljava/lang/String;
      74: return

  public org.springframework.util.ExceptionTypeFilter getExceptionTypeFilter();
    Code:
       0: aload_0
       1: getfield      #7                  // Field exceptionTypeFilter:Lorg/springframework/util/ExceptionTypeFilter;
       4: areturn

  public boolean isAlwaysInvoked();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getCacheAnnotation:()Ljava/lang/annotation/Annotation;
       4: checkcast     #3                  // class javax/cache/annotation/CacheResult
       7: invokeinterface #13,  1           // InterfaceMethod javax/cache/annotation/CacheResult.skipGet:()Z
      12: ireturn

  public org.springframework.cache.interceptor.CacheResolver getExceptionCacheResolver();
    Code:
       0: aload_0
       1: getfield      #8                  // Field exceptionCacheResolver:Lorg/springframework/cache/interceptor/CacheResolver;
       4: areturn

  public java.lang.String getExceptionCacheName();
    Code:
       0: aload_0
       1: getfield      #11                 // Field exceptionCacheName:Ljava/lang/String;
       4: areturn
}
