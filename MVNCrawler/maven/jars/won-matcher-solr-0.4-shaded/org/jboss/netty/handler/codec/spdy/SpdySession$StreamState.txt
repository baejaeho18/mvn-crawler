Compiled from "SpdySession.java"
final class org.jboss.netty.handler.codec.spdy.SpdySession$StreamState {
  private final byte priority;

  private volatile boolean remoteSideClosed;

  private volatile boolean localSideClosed;

  private boolean receivedReply;

  private final java.util.concurrent.atomic.AtomicInteger sendWindowSize;

  private final java.util.concurrent.atomic.AtomicInteger receiveWindowSize;

  private volatile int receiveWindowSizeLowerBound;

  private final java.util.concurrent.ConcurrentLinkedQueue<org.jboss.netty.channel.MessageEvent> pendingWriteQueue;

  org.jboss.netty.handler.codec.spdy.SpdySession$StreamState(byte, boolean, boolean, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field pendingWriteQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
      15: aload_0
      16: iload_1
      17: putfield      #5                  // Field priority:B
      20: aload_0
      21: iload_2
      22: putfield      #6                  // Field remoteSideClosed:Z
      25: aload_0
      26: iload_3
      27: putfield      #7                  // Field localSideClosed:Z
      30: aload_0
      31: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      34: dup
      35: iload         4
      37: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      40: putfield      #10                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
      43: aload_0
      44: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      47: dup
      48: iload         5
      50: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      53: putfield      #11                 // Field receiveWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
      56: return

  byte getPriority();
    Code:
       0: aload_0
       1: getfield      #5                  // Field priority:B
       4: ireturn

  boolean isRemoteSideClosed();
    Code:
       0: aload_0
       1: getfield      #6                  // Field remoteSideClosed:Z
       4: ireturn

  void closeRemoteSide();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field remoteSideClosed:Z
       5: return

  boolean isLocalSideClosed();
    Code:
       0: aload_0
       1: getfield      #7                  // Field localSideClosed:Z
       4: ireturn

  void closeLocalSide();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field localSideClosed:Z
       5: return

  boolean hasReceivedReply();
    Code:
       0: aload_0
       1: getfield      #12                 // Field receivedReply:Z
       4: ireturn

  void receivedReply();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field receivedReply:Z
       5: return

  int getSendWindowSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  int updateSendWindowSize(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field sendWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       8: ireturn

  int updateReceiveWindowSize(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field receiveWindowSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iload_1
       5: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
       8: ireturn

  int getReceiveWindowSizeLowerBound();
    Code:
       0: aload_0
       1: getfield      #15                 // Field receiveWindowSizeLowerBound:I
       4: ireturn

  void setReceiveWindowSizeLowerBound(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field receiveWindowSizeLowerBound:I
       5: return

  boolean putPendingWrite(org.jboss.netty.channel.MessageEvent);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pendingWriteQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: aload_1
       5: invokevirtual #16                 // Method java/util/concurrent/ConcurrentLinkedQueue.offer:(Ljava/lang/Object;)Z
       8: ireturn

  org.jboss.netty.channel.MessageEvent getPendingWrite();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pendingWriteQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #17                 // Method java/util/concurrent/ConcurrentLinkedQueue.peek:()Ljava/lang/Object;
       7: checkcast     #18                 // class org/jboss/netty/channel/MessageEvent
      10: areturn

  org.jboss.netty.channel.MessageEvent removePendingWrite();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pendingWriteQueue:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #19                 // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #18                 // class org/jboss/netty/channel/MessageEvent
      10: areturn
}
