Compiled from "HttpPostBodyUtil.java"
class org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize {
  byte[] bytes;

  int readerIndex;

  int pos;

  int origPos;

  int limit;

  org.jboss.netty.buffer.ChannelBuffer buffer;

  org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize(org.jboss.netty.buffer.ChannelBuffer) throws org.jboss.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadNoBackArrayException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokeinterface #2,  1            // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.hasArray:()Z
      10: ifne          21
      13: new           #3                  // class org/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$SeekAheadNoBackArrayException
      16: dup
      17: invokespecial #4                  // Method org/jboss/netty/handler/codec/http/multipart/HttpPostBodyUtil$SeekAheadNoBackArrayException."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #5                  // Field buffer:Lorg/jboss/netty/buffer/ChannelBuffer;
      26: aload_0
      27: aload_1
      28: invokeinterface #6,  1            // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.array:()[B
      33: putfield      #7                  // Field bytes:[B
      36: aload_0
      37: aload_1
      38: invokeinterface #8,  1            // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.readerIndex:()I
      43: putfield      #9                  // Field readerIndex:I
      46: aload_0
      47: aload_0
      48: aload_1
      49: invokeinterface #10,  1           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.arrayOffset:()I
      54: aload_0
      55: getfield      #9                  // Field readerIndex:I
      58: iadd
      59: dup_x1
      60: putfield      #11                 // Field pos:I
      63: putfield      #12                 // Field origPos:I
      66: aload_0
      67: aload_1
      68: invokeinterface #10,  1           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.arrayOffset:()I
      73: aload_1
      74: invokeinterface #13,  1           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.writerIndex:()I
      79: iadd
      80: putfield      #14                 // Field limit:I
      83: return

  void setReadPosition(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #11                 // Field pos:I
       5: iload_1
       6: isub
       7: putfield      #11                 // Field pos:I
      10: aload_0
      11: aload_0
      12: aload_0
      13: getfield      #11                 // Field pos:I
      16: invokevirtual #15                 // Method getReadPosition:(I)I
      19: putfield      #9                  // Field readerIndex:I
      22: aload_0
      23: getfield      #5                  // Field buffer:Lorg/jboss/netty/buffer/ChannelBuffer;
      26: aload_0
      27: getfield      #9                  // Field readerIndex:I
      30: invokeinterface #16,  2           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.readerIndex:(I)V
      35: return

  int getReadPosition(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field origPos:I
       5: isub
       6: aload_0
       7: getfield      #9                  // Field readerIndex:I
      10: iadd
      11: ireturn

  void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #5                  // Field buffer:Lorg/jboss/netty/buffer/ChannelBuffer;
       5: aload_0
       6: aconst_null
       7: putfield      #7                  // Field bytes:[B
      10: aload_0
      11: iconst_0
      12: putfield      #14                 // Field limit:I
      15: aload_0
      16: iconst_0
      17: putfield      #11                 // Field pos:I
      20: aload_0
      21: iconst_0
      22: putfield      #9                  // Field readerIndex:I
      25: return
}
