Compiled from "NioDatagramChannelFactory.java"
public class org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory implements org.jboss.netty.channel.socket.DatagramChannelFactory {
  private final org.jboss.netty.channel.socket.nio.NioDatagramPipelineSink sink;

  private final org.jboss.netty.channel.socket.nio.WorkerPool<org.jboss.netty.channel.socket.nio.NioDatagramWorker> workerPool;

  private final org.jboss.netty.channel.socket.InternetProtocolFamily family;

  private boolean releasePool;

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory();
    Code:
       0: aload_0
       1: aconst_null
       2: checkcast     #1                  // class org/jboss/netty/channel/socket/InternetProtocolFamily
       5: invokespecial #2                  // Method "<init>":(Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
       8: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(org.jboss.netty.channel.socket.InternetProtocolFamily);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool
       8: dup
       9: invokestatic  #5                  // Method java/util/concurrent/Executors.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;
      12: getstatic     #6                  // Field org/jboss/netty/channel/socket/nio/SelectorUtil.DEFAULT_IO_THREADS:I
      15: invokespecial #7                  // Method org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool."<init>":(Ljava/util/concurrent/Executor;I)V
      18: putfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
      21: aload_0
      22: aload_1
      23: putfield      #9                  // Field family:Lorg/jboss/netty/channel/socket/InternetProtocolFamily;
      26: aload_0
      27: new           #10                 // class org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink
      30: dup
      31: aload_0
      32: getfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
      35: invokespecial #11                 // Method org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink."<init>":(Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
      38: putfield      #12                 // Field sink:Lorg/jboss/netty/channel/socket/nio/NioDatagramPipelineSink;
      41: aload_0
      42: iconst_1
      43: putfield      #13                 // Field releasePool:Z
      46: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field org/jboss/netty/channel/socket/nio/SelectorUtil.DEFAULT_IO_THREADS:I
       5: invokespecial #14                 // Method "<init>":(Ljava/util/concurrent/Executor;I)V
       8: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(java.util.concurrent.Executor, int);
    Code:
       0: aload_0
       1: new           #4                  // class org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool
       4: dup
       5: aload_1
       6: iload_2
       7: invokespecial #7                  // Method org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool."<init>":(Ljava/util/concurrent/Executor;I)V
      10: invokespecial #15                 // Method "<init>":(Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
      13: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(org.jboss.netty.channel.socket.nio.WorkerPool<org.jboss.netty.channel.socket.nio.NioDatagramWorker>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #16                 // Method "<init>":(Lorg/jboss/netty/channel/socket/nio/WorkerPool;Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
       6: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(java.util.concurrent.Executor, org.jboss.netty.channel.socket.InternetProtocolFamily);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #6                  // Field org/jboss/netty/channel/socket/nio/SelectorUtil.DEFAULT_IO_THREADS:I
       5: aload_2
       6: invokespecial #17                 // Method "<init>":(Ljava/util/concurrent/Executor;ILorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
       9: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(java.util.concurrent.Executor, int, org.jboss.netty.channel.socket.InternetProtocolFamily);
    Code:
       0: aload_0
       1: new           #4                  // class org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool
       4: dup
       5: aload_1
       6: iload_2
       7: invokespecial #7                  // Method org/jboss/netty/channel/socket/nio/NioDatagramWorkerPool."<init>":(Ljava/util/concurrent/Executor;I)V
      10: aload_3
      11: invokespecial #16                 // Method "<init>":(Lorg/jboss/netty/channel/socket/nio/WorkerPool;Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
      14: return

  public org.jboss.netty.channel.socket.nio.NioDatagramChannelFactory(org.jboss.netty.channel.socket.nio.WorkerPool<org.jboss.netty.channel.socket.nio.NioDatagramWorker>, org.jboss.netty.channel.socket.InternetProtocolFamily);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
       9: aload_0
      10: aload_2
      11: putfield      #9                  // Field family:Lorg/jboss/netty/channel/socket/InternetProtocolFamily;
      14: aload_0
      15: new           #10                 // class org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink
      18: dup
      19: aload_1
      20: invokespecial #11                 // Method org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink."<init>":(Lorg/jboss/netty/channel/socket/nio/WorkerPool;)V
      23: putfield      #12                 // Field sink:Lorg/jboss/netty/channel/socket/nio/NioDatagramPipelineSink;
      26: return

  public org.jboss.netty.channel.socket.DatagramChannel newChannel(org.jboss.netty.channel.ChannelPipeline);
    Code:
       0: new           #18                 // class org/jboss/netty/channel/socket/nio/NioDatagramChannel
       3: dup
       4: aload_0
       5: aload_1
       6: aload_0
       7: getfield      #12                 // Field sink:Lorg/jboss/netty/channel/socket/nio/NioDatagramPipelineSink;
      10: aload_0
      11: getfield      #12                 // Field sink:Lorg/jboss/netty/channel/socket/nio/NioDatagramPipelineSink;
      14: invokevirtual #19                 // Method org/jboss/netty/channel/socket/nio/NioDatagramPipelineSink.nextWorker:()Lorg/jboss/netty/channel/socket/nio/NioDatagramWorker;
      17: aload_0
      18: getfield      #9                  // Field family:Lorg/jboss/netty/channel/socket/InternetProtocolFamily;
      21: invokespecial #20                 // Method org/jboss/netty/channel/socket/nio/NioDatagramChannel."<init>":(Lorg/jboss/netty/channel/ChannelFactory;Lorg/jboss/netty/channel/ChannelPipeline;Lorg/jboss/netty/channel/ChannelSink;Lorg/jboss/netty/channel/socket/nio/NioDatagramWorker;Lorg/jboss/netty/channel/socket/InternetProtocolFamily;)V
      24: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
       4: invokeinterface #21,  1           // InterfaceMethod org/jboss/netty/channel/socket/nio/WorkerPool.shutdown:()V
       9: aload_0
      10: getfield      #13                 // Field releasePool:Z
      13: ifeq          20
      16: aload_0
      17: invokespecial #22                 // Method releasePool:()V
      20: return

  public void releaseExternalResources();
    Code:
       0: aload_0
       1: getfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
       4: invokeinterface #21,  1           // InterfaceMethod org/jboss/netty/channel/socket/nio/WorkerPool.shutdown:()V
       9: aload_0
      10: invokespecial #22                 // Method releasePool:()V
      13: return

  private void releasePool();
    Code:
       0: aload_0
       1: getfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
       4: instanceof    #23                 // class org/jboss/netty/util/ExternalResourceReleasable
       7: ifeq          22
      10: aload_0
      11: getfield      #8                  // Field workerPool:Lorg/jboss/netty/channel/socket/nio/WorkerPool;
      14: checkcast     #23                 // class org/jboss/netty/util/ExternalResourceReleasable
      17: invokeinterface #24,  1           // InterfaceMethod org/jboss/netty/util/ExternalResourceReleasable.releaseExternalResources:()V
      22: return

  public org.jboss.netty.channel.Channel newChannel(org.jboss.netty.channel.ChannelPipeline);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method newChannel:(Lorg/jboss/netty/channel/ChannelPipeline;)Lorg/jboss/netty/channel/socket/DatagramChannel;
       5: areturn
}
