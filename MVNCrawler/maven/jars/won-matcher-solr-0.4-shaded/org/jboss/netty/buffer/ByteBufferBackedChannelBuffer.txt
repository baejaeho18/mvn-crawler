Compiled from "ByteBufferBackedChannelBuffer.java"
public class org.jboss.netty.buffer.ByteBufferBackedChannelBuffer extends org.jboss.netty.buffer.AbstractChannelBuffer {
  private final java.nio.ByteBuffer buffer;

  private final java.nio.ByteOrder order;

  private final int capacity;

  public org.jboss.netty.buffer.ByteBufferBackedChannelBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/netty/buffer/AbstractChannelBuffer."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #2                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #3                  // String buffer
      14: invokespecial #4                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: invokevirtual #5                  // Method java/nio/ByteBuffer.order:()Ljava/nio/ByteOrder;
      23: putfield      #6                  // Field order:Ljava/nio/ByteOrder;
      26: aload_0
      27: aload_1
      28: invokevirtual #7                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      31: aload_0
      32: getfield      #6                  // Field order:Ljava/nio/ByteOrder;
      35: invokevirtual #8                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      38: putfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      41: aload_0
      42: aload_1
      43: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      46: putfield      #11                 // Field capacity:I
      49: aload_0
      50: aload_0
      51: getfield      #11                 // Field capacity:I
      54: invokevirtual #12                 // Method writerIndex:(I)V
      57: return

  private org.jboss.netty.buffer.ByteBufferBackedChannelBuffer(org.jboss.netty.buffer.ByteBufferBackedChannelBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/jboss/netty/buffer/AbstractChannelBuffer."<init>":()V
       4: aload_0
       5: aload_1
       6: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       9: putfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      12: aload_0
      13: aload_1
      14: getfield      #6                  // Field order:Ljava/nio/ByteOrder;
      17: putfield      #6                  // Field order:Ljava/nio/ByteOrder;
      20: aload_0
      21: aload_1
      22: getfield      #11                 // Field capacity:I
      25: putfield      #11                 // Field capacity:I
      28: aload_0
      29: aload_1
      30: invokevirtual #13                 // Method readerIndex:()I
      33: aload_1
      34: invokevirtual #14                 // Method writerIndex:()I
      37: invokevirtual #15                 // Method setIndex:(II)V
      40: return

  public org.jboss.netty.buffer.ChannelBufferFactory factory();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ifeq          18
      10: aload_0
      11: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      14: invokestatic  #18                 // Method org/jboss/netty/buffer/DirectChannelBufferFactory.getInstance:(Ljava/nio/ByteOrder;)Lorg/jboss/netty/buffer/ChannelBufferFactory;
      17: areturn
      18: aload_0
      19: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      22: invokestatic  #19                 // Method org/jboss/netty/buffer/HeapChannelBufferFactory.getInstance:(Ljava/nio/ByteOrder;)Lorg/jboss/netty/buffer/ChannelBufferFactory;
      25: areturn

  public boolean isDirect();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #16                 // Method java/nio/ByteBuffer.isDirect:()Z
       7: ireturn

  public java.nio.ByteOrder order();
    Code:
       0: aload_0
       1: getfield      #6                  // Field order:Ljava/nio/ByteOrder;
       4: areturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #11                 // Field capacity:I
       4: ireturn

  public boolean hasArray();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.hasArray:()Z
       7: ireturn

  public byte[] array();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
       7: areturn

  public int arrayOffset();
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #22                 // Method java/nio/ByteBuffer.arrayOffset:()I
       7: ireturn

  public byte getByte(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #23                 // Method java/nio/ByteBuffer.get:(I)B
       8: ireturn

  public short getShort(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #24                 // Method java/nio/ByteBuffer.getShort:(I)S
       8: ireturn

  public int getUnsignedMedium(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #25                 // Method getByte:(I)B
       5: sipush        255
       8: iand
       9: bipush        16
      11: ishl
      12: aload_0
      13: iload_1
      14: iconst_1
      15: iadd
      16: invokevirtual #25                 // Method getByte:(I)B
      19: sipush        255
      22: iand
      23: bipush        8
      25: ishl
      26: ior
      27: aload_0
      28: iload_1
      29: iconst_2
      30: iadd
      31: invokevirtual #25                 // Method getByte:(I)B
      34: sipush        255
      37: iand
      38: ior
      39: ireturn

  public int getInt(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:(I)I
       8: ireturn

  public long getLong(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: invokevirtual #27                 // Method java/nio/ByteBuffer.getLong:(I)J
       8: lreturn

  public void getBytes(int, org.jboss.netty.buffer.ChannelBuffer, int, int);
    Code:
       0: aload_2
       1: instanceof    #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
       4: ifeq          47
       7: aload_2
       8: checkcast     #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
      11: astore        5
      13: aload         5
      15: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: astore        6
      23: aload         6
      25: iload_3
      26: iload         4
      28: iadd
      29: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      32: iload_3
      33: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: iload_1
      39: aload         6
      41: invokevirtual #32                 // Method getBytes:(ILjava/nio/ByteBuffer;)V
      44: goto          96
      47: aload_0
      48: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #20                 // Method java/nio/ByteBuffer.hasArray:()Z
      54: ifeq          85
      57: aload_2
      58: iload_3
      59: aload_0
      60: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      63: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
      66: iload_1
      67: aload_0
      68: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      71: invokevirtual #22                 // Method java/nio/ByteBuffer.arrayOffset:()I
      74: iadd
      75: iload         4
      77: invokeinterface #33,  5           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.setBytes:(I[BII)V
      82: goto          96
      85: aload_2
      86: iload_3
      87: aload_0
      88: iload_1
      89: iload         4
      91: invokeinterface #34,  5           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.setBytes:(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
      96: return

  public void getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore        5
       9: aload         5
      11: iload_1
      12: iload         4
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: goto          71
      26: astore        6
      28: new           #36                 // class java/lang/IndexOutOfBoundsException
      31: dup
      32: new           #37                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #39                 // String Too many bytes to read - Need
      41: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_1
      45: iload         4
      47: iadd
      48: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: ldc           #42                 // String , maximum is
      53: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         5
      58: invokevirtual #43                 // Method java/nio/ByteBuffer.limit:()I
      61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: aload         5
      73: aload_2
      74: iload_3
      75: iload         4
      77: invokevirtual #46                 // Method java/nio/ByteBuffer.get:([BII)Ljava/nio/ByteBuffer;
      80: pop
      81: return
    Exception table:
       from    to  target type
           9    23    26   Class java/lang/IllegalArgumentException

  public void getBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_0
       9: invokevirtual #47                 // Method capacity:()I
      12: iload_1
      13: isub
      14: aload_2
      15: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      18: invokestatic  #48                 // Method java/lang/Math.min:(II)I
      21: istore        4
      23: aload_3
      24: iload_1
      25: iload         4
      27: iadd
      28: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      31: iload_1
      32: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      35: pop
      36: goto          83
      39: astore        5
      41: new           #36                 // class java/lang/IndexOutOfBoundsException
      44: dup
      45: new           #37                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #39                 // String Too many bytes to read - Need
      54: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: iload_1
      58: iload         4
      60: iadd
      61: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: ldc           #42                 // String , maximum is
      66: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_3
      70: invokevirtual #43                 // Method java/nio/ByteBuffer.limit:()I
      73: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      76: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      82: athrow
      83: aload_2
      84: aload_3
      85: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      88: pop
      89: return
    Exception table:
       from    to  target type
          23    36    39   Class java/lang/IllegalArgumentException

  public void setByte(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2b
       7: invokevirtual #50                 // Method java/nio/ByteBuffer.put:(IB)Ljava/nio/ByteBuffer;
      10: pop
      11: return

  public void setShort(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: i2s
       7: invokevirtual #51                 // Method java/nio/ByteBuffer.putShort:(IS)Ljava/nio/ByteBuffer;
      10: pop
      11: return

  public void setMedium(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: bipush        16
       5: iushr
       6: i2b
       7: invokevirtual #52                 // Method setByte:(II)V
      10: aload_0
      11: iload_1
      12: iconst_1
      13: iadd
      14: iload_2
      15: bipush        8
      17: iushr
      18: i2b
      19: invokevirtual #52                 // Method setByte:(II)V
      22: aload_0
      23: iload_1
      24: iconst_2
      25: iadd
      26: iload_2
      27: i2b
      28: invokevirtual #52                 // Method setByte:(II)V
      31: return

  public void setInt(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: iload_2
       6: invokevirtual #53                 // Method java/nio/ByteBuffer.putInt:(II)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public void setLong(int, long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: iload_1
       5: lload_2
       6: invokevirtual #54                 // Method java/nio/ByteBuffer.putLong:(IJ)Ljava/nio/ByteBuffer;
       9: pop
      10: return

  public void setBytes(int, org.jboss.netty.buffer.ChannelBuffer, int, int);
    Code:
       0: aload_2
       1: instanceof    #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
       4: ifeq          47
       7: aload_2
       8: checkcast     #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
      11: astore        5
      13: aload         5
      15: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: astore        6
      23: aload         6
      25: iload_3
      26: iload         4
      28: iadd
      29: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      32: iload_3
      33: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      36: pop
      37: aload_0
      38: iload_1
      39: aload         6
      41: invokevirtual #55                 // Method setBytes:(ILjava/nio/ByteBuffer;)V
      44: goto          96
      47: aload_0
      48: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      51: invokevirtual #20                 // Method java/nio/ByteBuffer.hasArray:()Z
      54: ifeq          85
      57: aload_2
      58: iload_3
      59: aload_0
      60: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      63: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
      66: iload_1
      67: aload_0
      68: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      71: invokevirtual #22                 // Method java/nio/ByteBuffer.arrayOffset:()I
      74: iadd
      75: iload         4
      77: invokeinterface #56,  5           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.getBytes:(I[BII)V
      82: goto          96
      85: aload_2
      86: iload_3
      87: aload_0
      88: iload_1
      89: iload         4
      91: invokeinterface #57,  5           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.getBytes:(ILorg/jboss/netty/buffer/ChannelBuffer;II)V
      96: return

  public void setBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore        5
       9: aload         5
      11: iload_1
      12: iload         4
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: aload         5
      25: aload_2
      26: iload_3
      27: iload         4
      29: invokevirtual #58                 // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      32: pop
      33: return

  public void setBytes(int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: astore_3
       8: aload_3
       9: iload_1
      10: aload_2
      11: invokevirtual #10                 // Method java/nio/ByteBuffer.remaining:()I
      14: iadd
      15: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      18: iload_1
      19: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      22: pop
      23: aload_3
      24: aload_2
      25: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      28: pop
      29: return

  public void getBytes(int, java.io.OutputStream, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          5
       4: return
       5: aload_0
       6: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       9: invokevirtual #20                 // Method java/nio/ByteBuffer.hasArray:()Z
      12: ifeq          39
      15: aload_2
      16: aload_0
      17: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      20: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
      23: iload_1
      24: aload_0
      25: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #22                 // Method java/nio/ByteBuffer.arrayOffset:()I
      31: iadd
      32: iload_3
      33: invokevirtual #59                 // Method java/io/OutputStream.write:([BII)V
      36: goto          70
      39: iload_3
      40: newarray       byte
      42: astore        4
      44: aload_0
      45: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      48: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      51: iload_1
      52: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      55: checkcast     #61                 // class java/nio/ByteBuffer
      58: aload         4
      60: invokevirtual #62                 // Method java/nio/ByteBuffer.get:([B)Ljava/nio/ByteBuffer;
      63: pop
      64: aload_2
      65: aload         4
      67: invokevirtual #63                 // Method java/io/OutputStream.write:([B)V
      70: return

  public int getBytes(int, java.nio.channels.GatheringByteChannel, int) throws java.io.IOException;
    Code:
       0: iload_3
       1: ifne          6
       4: iconst_0
       5: ireturn
       6: aload_2
       7: aload_0
       8: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      11: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      14: iload_1
      15: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      18: iload_1
      19: iload_3
      20: iadd
      21: invokevirtual #64                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      24: checkcast     #61                 // class java/nio/ByteBuffer
      27: invokeinterface #65,  2           // InterfaceMethod java/nio/channels/GatheringByteChannel.write:(Ljava/nio/ByteBuffer;)I
      32: ireturn

  public int setBytes(int, java.io.InputStream, int) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore        4
       3: aload_0
       4: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       7: invokevirtual #20                 // Method java/nio/ByteBuffer.hasArray:()Z
      10: ifeq          74
      13: iload_1
      14: aload_0
      15: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      18: invokevirtual #22                 // Method java/nio/ByteBuffer.arrayOffset:()I
      21: iadd
      22: istore_1
      23: aload_2
      24: aload_0
      25: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      28: invokevirtual #21                 // Method java/nio/ByteBuffer.array:()[B
      31: iload_1
      32: iload_3
      33: invokevirtual #66                 // Method java/io/InputStream.read:([BII)I
      36: istore        5
      38: iload         5
      40: ifge          50
      43: iload         4
      45: ifne          152
      48: iconst_m1
      49: ireturn
      50: iload         4
      52: iload         5
      54: iadd
      55: istore        4
      57: iload_1
      58: iload         5
      60: iadd
      61: istore_1
      62: iload_3
      63: iload         5
      65: isub
      66: istore_3
      67: iload_3
      68: ifgt          23
      71: goto          152
      74: iload_3
      75: newarray       byte
      77: astore        5
      79: iconst_0
      80: istore        6
      82: aload_2
      83: aload         5
      85: iload         6
      87: aload         5
      89: arraylength
      90: iload         6
      92: isub
      93: invokevirtual #66                 // Method java/io/InputStream.read:([BII)I
      96: istore        7
      98: iload         7
     100: ifge          110
     103: iload         4
     105: ifne          132
     108: iconst_m1
     109: ireturn
     110: iload         4
     112: iload         7
     114: iadd
     115: istore        4
     117: iload         6
     119: iload         4
     121: iadd
     122: istore        6
     124: iload         6
     126: aload         5
     128: arraylength
     129: if_icmplt     82
     132: aload_0
     133: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
     136: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
     139: iload_1
     140: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     143: checkcast     #61                 // class java/nio/ByteBuffer
     146: aload         5
     148: invokevirtual #67                 // Method java/nio/ByteBuffer.put:([B)Ljava/nio/ByteBuffer;
     151: pop
     152: iload         4
     154: ireturn

  public int setBytes(int, java.nio.channels.ScatteringByteChannel, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: iload_1
       8: iload_3
       9: iadd
      10: invokevirtual #30                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      13: iload_1
      14: invokevirtual #31                 // Method java/nio/Buffer.position:(I)Ljava/nio/Buffer;
      17: checkcast     #61                 // class java/nio/ByteBuffer
      20: astore        4
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload_3
      28: if_icmpge     82
      31: aload_2
      32: aload         4
      34: invokeinterface #68,  2           // InterfaceMethod java/nio/channels/ScatteringByteChannel.read:(Ljava/nio/ByteBuffer;)I
      39: istore        6
      41: goto          49
      44: astore        7
      46: iconst_m1
      47: istore        6
      49: iload         6
      51: ifge          64
      54: iload         5
      56: ifne          61
      59: iconst_m1
      60: ireturn
      61: iload         5
      63: ireturn
      64: iload         6
      66: ifne          72
      69: goto          82
      72: iload         5
      74: iload         6
      76: iadd
      77: istore        5
      79: goto          25
      82: iload         5
      84: ireturn
    Exception table:
       from    to  target type
          31    41    44   Class java/nio/channels/ClosedChannelException

  public java.nio.ByteBuffer toByteBuffer(int, int);
    Code:
       0: iload_1
       1: ifne          27
       4: iload_2
       5: aload_0
       6: invokevirtual #47                 // Method capacity:()I
       9: if_icmpne     27
      12: aload_0
      13: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      16: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      19: aload_0
      20: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      23: invokevirtual #8                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      26: areturn
      27: aload_0
      28: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      31: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      34: iload_1
      35: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      38: iload_1
      39: iload_2
      40: iadd
      41: invokevirtual #64                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      44: checkcast     #61                 // class java/nio/ByteBuffer
      47: invokevirtual #7                  // Method java/nio/ByteBuffer.slice:()Ljava/nio/ByteBuffer;
      50: aload_0
      51: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      54: invokevirtual #8                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      57: areturn

  public org.jboss.netty.buffer.ChannelBuffer slice(int, int);
    Code:
       0: iload_1
       1: ifne          27
       4: iload_2
       5: aload_0
       6: invokevirtual #47                 // Method capacity:()I
       9: if_icmpne     27
      12: aload_0
      13: invokevirtual #70                 // Method duplicate:()Lorg/jboss/netty/buffer/ChannelBuffer;
      16: astore_3
      17: aload_3
      18: iconst_0
      19: iload_2
      20: invokeinterface #71,  3           // InterfaceMethod org/jboss/netty/buffer/ChannelBuffer.setIndex:(II)V
      25: aload_3
      26: areturn
      27: iload_1
      28: iflt          39
      31: iload_2
      32: ifne          39
      35: getstatic     #72                 // Field org/jboss/netty/buffer/ChannelBuffers.EMPTY_BUFFER:Lorg/jboss/netty/buffer/ChannelBuffer;
      38: areturn
      39: new           #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
      42: dup
      43: aload_0
      44: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      47: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      50: iload_1
      51: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      54: iload_1
      55: iload_2
      56: iadd
      57: invokevirtual #64                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      60: checkcast     #61                 // class java/nio/ByteBuffer
      63: aload_0
      64: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      67: invokevirtual #8                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      70: invokespecial #73                 // Method "<init>":(Ljava/nio/ByteBuffer;)V
      73: areturn

  public org.jboss.netty.buffer.ChannelBuffer duplicate();
    Code:
       0: new           #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
       3: dup
       4: aload_0
       5: invokespecial #74                 // Method "<init>":(Lorg/jboss/netty/buffer/ByteBufferBackedChannelBuffer;)V
       8: areturn

  public org.jboss.netty.buffer.ChannelBuffer copy(int, int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #29                 // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
       7: iload_1
       8: invokevirtual #60                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      11: iload_1
      12: iload_2
      13: iadd
      14: invokevirtual #64                 // Method java/nio/Buffer.limit:(I)Ljava/nio/Buffer;
      17: checkcast     #61                 // class java/nio/ByteBuffer
      20: astore_3
      21: goto          55
      24: astore        4
      26: new           #36                 // class java/lang/IndexOutOfBoundsException
      29: dup
      30: new           #37                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #39                 // String Too many bytes to read - Need
      39: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_1
      43: iload_2
      44: iadd
      45: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #44                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: getfield      #9                  // Field buffer:Ljava/nio/ByteBuffer;
      59: invokevirtual #16                 // Method java/nio/ByteBuffer.isDirect:()Z
      62: ifeq          72
      65: iload_2
      66: invokestatic  #75                 // Method java/nio/ByteBuffer.allocateDirect:(I)Ljava/nio/ByteBuffer;
      69: goto          76
      72: iload_2
      73: invokestatic  #76                 // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      76: astore        4
      78: aload         4
      80: aload_3
      81: invokevirtual #49                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      84: pop
      85: aload         4
      87: aload_0
      88: invokevirtual #17                 // Method order:()Ljava/nio/ByteOrder;
      91: invokevirtual #8                  // Method java/nio/ByteBuffer.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;
      94: pop
      95: aload         4
      97: invokevirtual #77                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     100: pop
     101: new           #28                 // class org/jboss/netty/buffer/ByteBufferBackedChannelBuffer
     104: dup
     105: aload         4
     107: invokespecial #73                 // Method "<init>":(Ljava/nio/ByteBuffer;)V
     110: areturn
    Exception table:
       from    to  target type
           0    21    24   Class java/lang/IllegalArgumentException
}
