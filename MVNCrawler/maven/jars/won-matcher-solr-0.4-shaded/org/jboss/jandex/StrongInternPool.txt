Compiled from "StrongInternPool.java"
class org.jboss.jandex.StrongInternPool<E> implements java.lang.Cloneable, java.io.Serializable {
  private static final java.lang.Object NULL;

  private static final long serialVersionUID;

  private static final int DEFAULT_CAPACITY;

  private static final int MAXIMUM_CAPACITY;

  private static final float DEFAULT_LOAD_FACTOR;

  private transient java.lang.Object[] table;

  private transient int size;

  private transient int threshold;

  private final float loadFactor;

  private transient int modCount;

  public org.jboss.jandex.StrongInternPool(int, float);
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #11                 // String Can not have a negative size table!
      14: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: iload_1
      19: ldc           #13                 // int 1073741824
      21: if_icmple     27
      24: ldc           #13                 // int 1073741824
      26: istore_1
      27: fload_2
      28: fconst_0
      29: fcmpl
      30: ifle          39
      33: fload_2
      34: fconst_1
      35: fcmpg
      36: ifle          49
      39: new           #10                 // class java/lang/IllegalArgumentException
      42: dup
      43: ldc           #14                 // String Load factor must be greater than 0 and less than or equal to 1
      45: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_0
      50: fload_2
      51: putfield      #15                 // Field loadFactor:F
      54: aload_0
      55: iload_1
      56: fload_2
      57: invokespecial #16                 // Method init:(IF)V
      60: return

  private void init(int, float);
    Code:
       0: iconst_1
       1: istore_3
       2: iload_3
       3: iload_1
       4: if_icmpge     14
       7: iload_3
       8: iconst_1
       9: ishl
      10: istore_3
      11: goto          2
      14: aload_0
      15: iload_3
      16: i2f
      17: fload_2
      18: fmul
      19: f2i
      20: putfield      #17                 // Field threshold:I
      23: iload_1
      24: aload_0
      25: getfield      #17                 // Field threshold:I
      28: if_icmple     50
      31: iload_3
      32: ldc           #13                 // int 1073741824
      34: if_icmpge     50
      37: iload_3
      38: iconst_1
      39: ishl
      40: istore_3
      41: aload_0
      42: iload_3
      43: i2f
      44: fload_2
      45: fmul
      46: f2i
      47: putfield      #17                 // Field threshold:I
      50: aload_0
      51: iload_3
      52: anewarray     #18                 // class java/lang/Object
      55: putfield      #8                  // Field table:[Ljava/lang/Object;
      58: return

  private static boolean eq(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     17
       5: aload_0
       6: ifnull        21
       9: aload_0
      10: aload_1
      11: invokevirtual #19                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public org.jboss.jandex.StrongInternPool(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #20                 // float 0.67f
       4: invokespecial #21                 // Method "<init>":(IF)V
       7: return

  public org.jboss.jandex.StrongInternPool();
    Code:
       0: aload_0
       1: bipush        8
       3: invokespecial #22                 // Method "<init>":(I)V
       6: return

  private static final int hash(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method java/lang/Object.hashCode:()I
       4: istore_1
       5: iload_1
       6: iload_1
       7: bipush        20
       9: iushr
      10: iload_1
      11: bipush        12
      13: iushr
      14: ixor
      15: ixor
      16: istore_1
      17: iload_1
      18: iload_1
      19: bipush        7
      21: iushr
      22: ixor
      23: iload_1
      24: iconst_4
      25: iushr
      26: ixor
      27: ireturn

  private static final <K> K maskNull(K);
    Code:
       0: aload_0
       1: ifnonnull     10
       4: getstatic     #24                 // Field NULL:Ljava/lang/Object;
       7: goto          11
      10: aload_0
      11: areturn

  private static final <K> K unmaskNull(K);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field NULL:Ljava/lang/Object;
       4: if_acmpne     11
       7: aconst_null
       8: goto          12
      11: aload_0
      12: areturn

  private int nextIndex(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iconst_1
       3: isub
       4: if_icmplt     11
       7: iconst_0
       8: goto          14
      11: iload_1
      12: iconst_1
      13: iadd
      14: istore_1
      15: iload_1
      16: ireturn

  private static final int index(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: iand
       5: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method maskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
       9: istore_2
      10: aload_0
      11: getfield      #8                  // Field table:[Ljava/lang/Object;
      14: arraylength
      15: istore_3
      16: iload_2
      17: iload_3
      18: invokestatic  #1                  // Method index:(II)I
      21: istore        4
      23: iload         4
      25: istore        5
      27: aload_0
      28: getfield      #8                  // Field table:[Ljava/lang/Object;
      31: iload         4
      33: aaload
      34: astore        6
      36: aload         6
      38: ifnonnull     43
      41: iconst_0
      42: ireturn
      43: aload_1
      44: aload         6
      46: invokestatic  #26                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: aload_0
      55: iload         4
      57: iload_3
      58: invokespecial #3                  // Method nextIndex:(II)I
      61: istore        4
      63: iload         4
      65: iload         5
      67: if_icmpne     72
      70: iconst_0
      71: ireturn
      72: goto          27

  private int offset(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method maskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
       9: istore_2
      10: aload_0
      11: getfield      #8                  // Field table:[Ljava/lang/Object;
      14: arraylength
      15: istore_3
      16: iload_2
      17: iload_3
      18: invokestatic  #1                  // Method index:(II)I
      21: istore        4
      23: iload         4
      25: istore        5
      27: aload_0
      28: getfield      #8                  // Field table:[Ljava/lang/Object;
      31: iload         4
      33: aaload
      34: astore        6
      36: aload         6
      38: ifnonnull     43
      41: iconst_m1
      42: ireturn
      43: aload_1
      44: aload         6
      46: invokestatic  #26                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          55
      52: iload         4
      54: ireturn
      55: aload_0
      56: iload         4
      58: iload_3
      59: invokespecial #3                  // Method nextIndex:(II)I
      62: istore        4
      64: iload         4
      66: iload         5
      68: if_icmpne     73
      71: iconst_m1
      72: ireturn
      73: goto          27

  public E intern(E);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method maskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field table:[Ljava/lang/Object;
       9: astore_2
      10: aload_1
      11: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      14: istore_3
      15: aload_2
      16: arraylength
      17: istore        4
      19: iload_3
      20: iload         4
      22: invokestatic  #1                  // Method index:(II)I
      25: istore        5
      27: iload         5
      29: istore        6
      31: aload_2
      32: iload         5
      34: aaload
      35: astore        7
      37: aload         7
      39: ifnonnull     45
      42: goto          90
      45: aload_1
      46: aload         7
      48: invokestatic  #26                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      51: ifeq          60
      54: aload         7
      56: invokestatic  #5                  // Method unmaskNull:(Ljava/lang/Object;)Ljava/lang/Object;
      59: areturn
      60: aload_0
      61: iload         5
      63: iload         4
      65: invokespecial #3                  // Method nextIndex:(II)I
      68: istore        5
      70: iload         5
      72: iload         6
      74: if_icmpne     87
      77: new           #27                 // class java/lang/IllegalStateException
      80: dup
      81: ldc           #28                 // String Table is full!
      83: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      86: athrow
      87: goto          31
      90: aload_0
      91: dup
      92: getfield      #6                  // Field modCount:I
      95: iconst_1
      96: iadd
      97: putfield      #6                  // Field modCount:I
     100: aload_2
     101: iload         5
     103: aload_1
     104: aastore
     105: aload_0
     106: dup
     107: getfield      #4                  // Field size:I
     110: iconst_1
     111: iadd
     112: dup_x1
     113: putfield      #4                  // Field size:I
     116: aload_0
     117: getfield      #17                 // Field threshold:I
     120: if_icmplt     129
     123: aload_0
     124: iload         4
     126: invokespecial #30                 // Method resize:(I)V
     129: aload_1
     130: invokestatic  #5                  // Method unmaskNull:(Ljava/lang/Object;)Ljava/lang/Object;
     133: areturn

  private void resize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: ishl
       3: istore_2
       4: iload_2
       5: ldc           #13                 // int 1073741824
       7: if_icmpgt     15
      10: iload_2
      11: iload_1
      12: if_icmpgt     16
      15: return
      16: iload_2
      17: anewarray     #18                 // class java/lang/Object
      20: astore_3
      21: aload_0
      22: getfield      #8                  // Field table:[Ljava/lang/Object;
      25: astore        4
      27: aload         4
      29: astore        5
      31: aload         5
      33: arraylength
      34: istore        6
      36: iconst_0
      37: istore        7
      39: iload         7
      41: iload         6
      43: if_icmpge     103
      46: aload         5
      48: iload         7
      50: aaload
      51: astore        8
      53: aload         8
      55: ifnonnull     61
      58: goto          97
      61: aload         8
      63: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      66: iload_2
      67: invokestatic  #1                  // Method index:(II)I
      70: istore        9
      72: aload_3
      73: iload         9
      75: aaload
      76: ifnull        91
      79: aload_0
      80: iload         9
      82: iload_2
      83: invokespecial #3                  // Method nextIndex:(II)I
      86: istore        9
      88: goto          72
      91: aload_3
      92: iload         9
      94: aload         8
      96: aastore
      97: iinc          7, 1
     100: goto          39
     103: aload_0
     104: aload_0
     105: getfield      #15                 // Field loadFactor:F
     108: iload_2
     109: i2f
     110: fmul
     111: f2i
     112: putfield      #17                 // Field threshold:I
     115: aload_0
     116: aload_3
     117: putfield      #8                  // Field table:[Ljava/lang/Object;
     120: return

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method maskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field table:[Ljava/lang/Object;
       9: astore_2
      10: aload_2
      11: arraylength
      12: istore_3
      13: aload_1
      14: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      17: istore        4
      19: iload         4
      21: iload_3
      22: invokestatic  #1                  // Method index:(II)I
      25: istore        5
      27: iload         5
      29: istore        6
      31: aload_2
      32: iload         6
      34: aaload
      35: astore        7
      37: aload         7
      39: ifnonnull     44
      42: iconst_0
      43: ireturn
      44: aload         7
      46: aload_1
      47: invokestatic  #26                 // Method eq:(Ljava/lang/Object;Ljava/lang/Object;)Z
      50: ifeq          86
      53: aload_2
      54: iload         6
      56: aconst_null
      57: aastore
      58: aload_0
      59: iload         6
      61: invokespecial #31                 // Method relocate:(I)V
      64: aload_0
      65: dup
      66: getfield      #6                  // Field modCount:I
      69: iconst_1
      70: iadd
      71: putfield      #6                  // Field modCount:I
      74: aload_0
      75: dup
      76: getfield      #4                  // Field size:I
      79: iconst_1
      80: isub
      81: putfield      #4                  // Field size:I
      84: iconst_1
      85: ireturn
      86: aload_0
      87: iload         6
      89: iload_3
      90: invokespecial #3                  // Method nextIndex:(II)I
      93: istore        6
      95: iload         6
      97: iload         5
      99: if_icmpne     104
     102: iconst_0
     103: ireturn
     104: goto          31

  private void relocate(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field table:[Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: aload_0
       9: iload_1
      10: iload_3
      11: invokespecial #3                  // Method nextIndex:(II)I
      14: istore        4
      16: aload_2
      17: iload         4
      19: aaload
      20: astore        5
      22: aload         5
      24: ifnonnull     28
      27: return
      28: aload         5
      30: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      33: iload_3
      34: invokestatic  #1                  // Method index:(II)I
      37: istore        6
      39: iload         4
      41: iload         6
      43: if_icmpge     58
      46: iload         6
      48: iload_1
      49: if_icmple     70
      52: iload_1
      53: iload         4
      55: if_icmple     70
      58: iload         6
      60: iload_1
      61: if_icmpgt     83
      64: iload_1
      65: iload         4
      67: if_icmpgt     83
      70: aload_2
      71: iload_1
      72: aload         5
      74: aastore
      75: aload_2
      76: iload         4
      78: aconst_null
      79: aastore
      80: iload         4
      82: istore_1
      83: aload_0
      84: iload         4
      86: iload_3
      87: invokespecial #3                  // Method nextIndex:(II)I
      90: istore        4
      92: goto          16

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #6                  // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #6                  // Field modCount:I
      10: aload_0
      11: getfield      #8                  // Field table:[Ljava/lang/Object;
      14: astore_1
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_1
      19: arraylength
      20: if_icmpge     33
      23: aload_1
      24: iload_2
      25: aconst_null
      26: aastore
      27: iinc          2, 1
      30: goto          17
      33: aload_0
      34: iconst_0
      35: putfield      #4                  // Field size:I
      38: return

  public org.jboss.jandex.StrongInternPool<E> clone();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #33                 // class org/jboss/jandex/StrongInternPool
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field table:[Ljava/lang/Object;
      13: invokevirtual #34                 // Method "[Ljava/lang/Object;".clone:()Ljava/lang/Object;
      16: checkcast     #35                 // class "[Ljava/lang/Object;"
      19: putfield      #8                  // Field table:[Ljava/lang/Object;
      22: aload_1
      23: areturn
      24: astore_1
      25: new           #27                 // class java/lang/IllegalStateException
      28: dup
      29: aload_1
      30: invokespecial #37                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      33: athrow
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/CloneNotSupportedException

  public java.lang.Object[] toInternalArray();
    Code:
       0: aload_0
       1: getfield      #8                  // Field table:[Ljava/lang/Object;
       4: areturn

  public void printDebugStats();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iconst_0
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: aload_0
      15: getfield      #8                  // Field table:[Ljava/lang/Object;
      18: arraylength
      19: if_icmpge     99
      22: aload_0
      23: getfield      #8                  // Field table:[Ljava/lang/Object;
      26: iload         5
      28: aaload
      29: astore        6
      31: aload         6
      33: ifnull        93
      36: iinc          2, 1
      39: aload         6
      41: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      44: aload_0
      45: getfield      #8                  // Field table:[Ljava/lang/Object;
      48: arraylength
      49: invokestatic  #1                  // Method index:(II)I
      52: istore        7
      54: iload         5
      56: iload         7
      58: if_icmpne     67
      61: iinc          1, 1
      64: goto          93
      67: iload         5
      69: iload         7
      71: isub
      72: invokestatic  #38                 // Method java/lang/Math.abs:(I)I
      75: istore        8
      77: iload         8
      79: iload         4
      81: if_icmple     88
      84: iload         8
      86: istore        4
      88: iload_3
      89: iload         8
      91: iadd
      92: istore_3
      93: iinc          5, 1
      96: goto          12
      99: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
     102: new           #40                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #42                 // String  Size:
     111: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_0
     115: getfield      #4                  // Field size:I
     118: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     121: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: invokevirtual #46                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     127: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
     130: new           #40                 // class java/lang/StringBuilder
     133: dup
     134: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     137: ldc           #47                 // String  Real Size:
     139: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: iload_2
     143: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     146: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokevirtual #46                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     152: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
     155: new           #40                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #48                 // String  Optimal:
     164: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: iload_1
     168: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     171: ldc           #49                 // String  (
     173: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: iload_1
     177: i2f
     178: ldc           #50                 // float 100.0f
     180: fmul
     181: iload_2
     182: i2f
     183: fdiv
     184: invokevirtual #51                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     187: ldc           #52                 // String %)
     189: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokevirtual #46                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     198: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
     201: new           #40                 // class java/lang/StringBuilder
     204: dup
     205: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     208: ldc           #53                 // String  Average Distnce:
     210: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     213: iload_3
     214: i2f
     215: iload_2
     216: iload_1
     217: isub
     218: i2f
     219: fdiv
     220: invokevirtual #51                 // Method java/lang/StringBuilder.append:(F)Ljava/lang/StringBuilder;
     223: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     226: invokevirtual #46                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     229: getstatic     #39                 // Field java/lang/System.out:Ljava/io/PrintStream;
     232: new           #40                 // class java/lang/StringBuilder
     235: dup
     236: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     239: ldc           #54                 // String  Max Distance:
     241: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: iload         4
     246: invokevirtual #44                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     249: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: invokevirtual #46                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     255: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #56                 // Method java/io/ObjectInputStream.readInt:()I
       8: istore_2
       9: aload_0
      10: iload_2
      11: aload_0
      12: getfield      #15                 // Field loadFactor:F
      15: invokespecial #16                 // Method init:(IF)V
      18: iconst_0
      19: istore_3
      20: iload_3
      21: iload_2
      22: if_icmpge     39
      25: aload_0
      26: aload_1
      27: invokevirtual #57                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      30: invokespecial #58                 // Method putForCreate:(Ljava/lang/Object;)V
      33: iinc          3, 1
      36: goto          20
      39: aload_0
      40: iload_2
      41: putfield      #4                  // Field size:I
      44: return

  private void putForCreate(E);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method maskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field table:[Ljava/lang/Object;
       9: astore_2
      10: aload_1
      11: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
      14: istore_3
      15: aload_2
      16: arraylength
      17: istore        4
      19: iload_3
      20: iload         4
      22: invokestatic  #1                  // Method index:(II)I
      25: istore        5
      27: aload_2
      28: iload         5
      30: aaload
      31: astore        6
      33: aload         6
      35: ifnull        57
      38: aload_0
      39: iload         5
      41: iload         4
      43: invokespecial #3                  // Method nextIndex:(II)I
      46: istore        5
      48: aload_2
      49: iload         5
      51: aaload
      52: astore        6
      54: goto          33
      57: aload_2
      58: iload         5
      60: aload_1
      61: aastore
      62: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #59                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field size:I
       9: invokevirtual #60                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      12: aload_0
      13: getfield      #8                  // Field table:[Ljava/lang/Object;
      16: astore_2
      17: aload_2
      18: arraylength
      19: istore_3
      20: iconst_0
      21: istore        4
      23: iload         4
      25: iload_3
      26: if_icmpge     55
      29: aload_2
      30: iload         4
      32: aaload
      33: astore        5
      35: aload         5
      37: ifnull        49
      40: aload_1
      41: aload         5
      43: invokestatic  #5                  // Method unmaskNull:(Ljava/lang/Object;)Ljava/lang/Object;
      46: invokevirtual #61                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      49: iinc          4, 1
      52: goto          23
      55: return

  public java.util.Iterator<E> iterator();
    Code:
       0: new           #62                 // class org/jboss/jandex/StrongInternPool$IdentityHashSetIterator
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #63                 // Method org/jboss/jandex/StrongInternPool$IdentityHashSetIterator."<init>":(Lorg/jboss/jandex/StrongInternPool;Lorg/jboss/jandex/StrongInternPool$1;)V
       9: areturn

  public org.jboss.jandex.StrongInternPool<E>.Index index();
    Code:
       0: new           #64                 // class org/jboss/jandex/StrongInternPool$Index
       3: dup
       4: aload_0
       5: invokespecial #65                 // Method org/jboss/jandex/StrongInternPool$Index."<init>":(Lorg/jboss/jandex/StrongInternPool;)V
       8: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method iterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifne          17
      14: ldc           #68                 // String []
      16: areturn
      17: new           #40                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      24: astore_2
      25: aload_2
      26: bipush        91
      28: invokevirtual #69                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: invokeinterface #70,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore_3
      39: aload_2
      40: aload_3
      41: invokevirtual #71                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: pop
      45: aload_1
      46: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifne          64
      54: aload_2
      55: bipush        93
      57: invokevirtual #69                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      60: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: areturn
      64: aload_2
      65: ldc           #72                 // String ,
      67: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: pop
      71: goto          32

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method clone:()Lorg/jboss/jandex/StrongInternPool;
       4: areturn

  static java.lang.Object[] access$100(org.jboss.jandex.StrongInternPool);
    Code:
       0: aload_0
       1: getfield      #8                  // Field table:[Ljava/lang/Object;
       4: areturn

  static int access$200(org.jboss.jandex.StrongInternPool, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #7                  // Method offset:(Ljava/lang/Object;)I
       5: ireturn

  static int access$300(org.jboss.jandex.StrongInternPool);
    Code:
       0: aload_0
       1: getfield      #6                  // Field modCount:I
       4: ireturn

  static java.lang.Object access$400(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method unmaskNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: areturn

  static int access$510(org.jboss.jandex.StrongInternPool);
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field size:I
       5: dup_x1
       6: iconst_1
       7: isub
       8: putfield      #4                  // Field size:I
      11: ireturn

  static int access$600(org.jboss.jandex.StrongInternPool, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #3                  // Method nextIndex:(II)I
       6: ireturn

  static int access$700(java.lang.Object);
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method hash:(Ljava/lang/Object;)I
       4: ireturn

  static int access$800(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: invokestatic  #1                  // Method index:(II)I
       5: ireturn

  static {};
    Code:
       0: new           #18                 // class java/lang/Object
       3: dup
       4: invokespecial #9                  // Method java/lang/Object."<init>":()V
       7: putstatic     #24                 // Field NULL:Ljava/lang/Object;
      10: return
}
