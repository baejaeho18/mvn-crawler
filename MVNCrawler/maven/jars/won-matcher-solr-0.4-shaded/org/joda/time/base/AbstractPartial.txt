Compiled from "AbstractPartial.java"
public abstract class org.joda.time.base.AbstractPartial implements org.joda.time.ReadablePartial, java.lang.Comparable<org.joda.time.ReadablePartial> {
  protected org.joda.time.base.AbstractPartial();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected abstract org.joda.time.DateTimeField getField(int, org.joda.time.Chronology);

  public org.joda.time.DateTimeFieldType getFieldType(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #2                  // Method getChronology:()Lorg/joda/time/Chronology;
       6: invokevirtual #3                  // Method getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;
       9: invokevirtual #4                  // Method org/joda/time/DateTimeField.getType:()Lorg/joda/time/DateTimeFieldType;
      12: areturn

  public org.joda.time.DateTimeFieldType[] getFieldTypes();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method size:()I
       4: anewarray     #6                  // class org/joda/time/DateTimeFieldType
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_1
      12: arraylength
      13: if_icmpge     30
      16: aload_1
      17: iload_2
      18: aload_0
      19: iload_2
      20: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      23: aastore
      24: iinc          2, 1
      27: goto          10
      30: aload_1
      31: areturn

  public org.joda.time.DateTimeField getField(int);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokevirtual #2                  // Method getChronology:()Lorg/joda/time/Chronology;
       6: invokevirtual #3                  // Method getField:(ILorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;
       9: areturn

  public org.joda.time.DateTimeField[] getFields();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method size:()I
       4: anewarray     #8                  // class org/joda/time/DateTimeField
       7: astore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_1
      12: arraylength
      13: if_icmpge     30
      16: aload_1
      17: iload_2
      18: aload_0
      19: iload_2
      20: invokevirtual #9                  // Method getField:(I)Lorg/joda/time/DateTimeField;
      23: aastore
      24: iinc          2, 1
      27: goto          10
      30: aload_1
      31: areturn

  public int[] getValues();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method size:()I
       4: newarray       int
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_1
      11: arraylength
      12: if_icmpge     29
      15: aload_1
      16: iload_2
      17: aload_0
      18: iload_2
      19: invokevirtual #10                 // Method getValue:(I)I
      22: iastore
      23: iinc          2, 1
      26: goto          9
      29: aload_1
      30: areturn

  public int get(org.joda.time.DateTimeFieldType);
    Code:
       0: aload_0
       1: aload_0
       2: aload_1
       3: invokevirtual #11                 // Method indexOfSupported:(Lorg/joda/time/DateTimeFieldType;)I
       6: invokevirtual #10                 // Method getValue:(I)I
       9: ireturn

  public boolean isSupported(org.joda.time.DateTimeFieldType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method indexOf:(Lorg/joda/time/DateTimeFieldType;)I
       5: iconst_m1
       6: if_icmpeq     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public int indexOf(org.joda.time.DateTimeFieldType);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #5                  // Method size:()I
       6: istore_3
       7: iload_2
       8: iload_3
       9: if_icmpge     29
      12: aload_0
      13: iload_2
      14: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      17: aload_1
      18: if_acmpne     23
      21: iload_2
      22: ireturn
      23: iinc          2, 1
      26: goto          7
      29: iconst_m1
      30: ireturn

  protected int indexOfSupported(org.joda.time.DateTimeFieldType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method indexOf:(Lorg/joda/time/DateTimeFieldType;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     43
      11: new           #13                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #14                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #16                 // String Field \'
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #19                 // String \' is not supported
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_2
      44: ireturn

  protected int indexOf(org.joda.time.DurationFieldType);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #5                  // Method size:()I
       6: istore_3
       7: iload_2
       8: iload_3
       9: if_icmpge     32
      12: aload_0
      13: iload_2
      14: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      17: invokevirtual #22                 // Method org/joda/time/DateTimeFieldType.getDurationType:()Lorg/joda/time/DurationFieldType;
      20: aload_1
      21: if_acmpne     26
      24: iload_2
      25: ireturn
      26: iinc          2, 1
      29: goto          7
      32: iconst_m1
      33: ireturn

  protected int indexOfSupported(org.joda.time.DurationFieldType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method indexOf:(Lorg/joda/time/DurationFieldType;)I
       5: istore_2
       6: iload_2
       7: iconst_m1
       8: if_icmpne     43
      11: new           #13                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #14                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #16                 // String Field \'
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_1
      28: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc           #19                 // String \' is not supported
      33: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: iload_2
      44: ireturn

  public org.joda.time.DateTime toDateTime(org.joda.time.ReadableInstant);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method org/joda/time/DateTimeUtils.getInstantChronology:(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;
       4: astore_2
       5: aload_1
       6: invokestatic  #25                 // Method org/joda/time/DateTimeUtils.getInstantMillis:(Lorg/joda/time/ReadableInstant;)J
       9: lstore_3
      10: aload_2
      11: aload_0
      12: lload_3
      13: invokevirtual #26                 // Method org/joda/time/Chronology.set:(Lorg/joda/time/ReadablePartial;J)J
      16: lstore        5
      18: new           #27                 // class org/joda/time/DateTime
      21: dup
      22: lload         5
      24: aload_2
      25: invokespecial #28                 // Method org/joda/time/DateTime."<init>":(JLorg/joda/time/Chronology;)V
      28: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #29                 // class org/joda/time/ReadablePartial
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #29                 // class org/joda/time/ReadablePartial
      20: astore_2
      21: aload_0
      22: invokevirtual #5                  // Method size:()I
      25: aload_2
      26: invokeinterface #30,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: iconst_0
      37: istore_3
      38: aload_0
      39: invokevirtual #5                  // Method size:()I
      42: istore        4
      44: iload_3
      45: iload         4
      47: if_icmpge     88
      50: aload_0
      51: iload_3
      52: invokevirtual #10                 // Method getValue:(I)I
      55: aload_2
      56: iload_3
      57: invokeinterface #31,  2           // InterfaceMethod org/joda/time/ReadablePartial.getValue:(I)I
      62: if_icmpne     80
      65: aload_0
      66: iload_3
      67: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      70: aload_2
      71: iload_3
      72: invokeinterface #32,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      77: if_acmpeq     82
      80: iconst_0
      81: ireturn
      82: iinc          3, 1
      85: goto          44
      88: aload_0
      89: invokevirtual #2                  // Method getChronology:()Lorg/joda/time/Chronology;
      92: aload_2
      93: invokeinterface #33,  1           // InterfaceMethod org/joda/time/ReadablePartial.getChronology:()Lorg/joda/time/Chronology;
      98: invokestatic  #34                 // Method org/joda/time/field/FieldUtils.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
     101: ireturn

  public int hashCode();
    Code:
       0: sipush        157
       3: istore_1
       4: iconst_0
       5: istore_2
       6: aload_0
       7: invokevirtual #5                  // Method size:()I
      10: istore_3
      11: iload_2
      12: iload_3
      13: if_icmpge     47
      16: bipush        23
      18: iload_1
      19: imul
      20: aload_0
      21: iload_2
      22: invokevirtual #10                 // Method getValue:(I)I
      25: iadd
      26: istore_1
      27: bipush        23
      29: iload_1
      30: imul
      31: aload_0
      32: iload_2
      33: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      36: invokevirtual #35                 // Method java/lang/Object.hashCode:()I
      39: iadd
      40: istore_1
      41: iinc          2, 1
      44: goto          11
      47: iload_1
      48: aload_0
      49: invokevirtual #2                  // Method getChronology:()Lorg/joda/time/Chronology;
      52: invokevirtual #35                 // Method java/lang/Object.hashCode:()I
      55: iadd
      56: istore_1
      57: iload_1
      58: ireturn

  public int compareTo(org.joda.time.ReadablePartial);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: invokevirtual #5                  // Method size:()I
      11: aload_1
      12: invokeinterface #30,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
      17: if_icmpeq     30
      20: new           #36                 // class java/lang/ClassCastException
      23: dup
      24: ldc           #37                 // String ReadablePartial objects must have matching field types
      26: invokespecial #38                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: iconst_0
      31: istore_2
      32: aload_0
      33: invokevirtual #5                  // Method size:()I
      36: istore_3
      37: iload_2
      38: iload_3
      39: if_icmpge     73
      42: aload_0
      43: iload_2
      44: invokevirtual #7                  // Method getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      47: aload_1
      48: iload_2
      49: invokeinterface #32,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      54: if_acmpeq     67
      57: new           #36                 // class java/lang/ClassCastException
      60: dup
      61: ldc           #37                 // String ReadablePartial objects must have matching field types
      63: invokespecial #38                 // Method java/lang/ClassCastException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: iinc          2, 1
      70: goto          37
      73: iconst_0
      74: istore_2
      75: aload_0
      76: invokevirtual #5                  // Method size:()I
      79: istore_3
      80: iload_2
      81: iload_3
      82: if_icmpge     125
      85: aload_0
      86: iload_2
      87: invokevirtual #10                 // Method getValue:(I)I
      90: aload_1
      91: iload_2
      92: invokeinterface #31,  2           // InterfaceMethod org/joda/time/ReadablePartial.getValue:(I)I
      97: if_icmple     102
     100: iconst_1
     101: ireturn
     102: aload_0
     103: iload_2
     104: invokevirtual #10                 // Method getValue:(I)I
     107: aload_1
     108: iload_2
     109: invokeinterface #31,  2           // InterfaceMethod org/joda/time/ReadablePartial.getValue:(I)I
     114: if_icmpge     119
     117: iconst_m1
     118: ireturn
     119: iinc          2, 1
     122: goto          80
     125: iconst_0
     126: ireturn

  public boolean isAfter(org.joda.time.ReadablePartial);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #39                 // String Partial cannot be null
      10: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #40                 // Method compareTo:(Lorg/joda/time/ReadablePartial;)I
      19: ifle          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isBefore(org.joda.time.ReadablePartial);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #39                 // String Partial cannot be null
      10: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #40                 // Method compareTo:(Lorg/joda/time/ReadablePartial;)I
      19: ifge          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isEqual(org.joda.time.ReadablePartial);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #13                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #39                 // String Partial cannot be null
      10: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #40                 // Method compareTo:(Lorg/joda/time/ReadablePartial;)I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.String toString(org.joda.time.format.DateTimeFormatter);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: invokevirtual #41                 // Method java/lang/Object.toString:()Ljava/lang/String;
       8: areturn
       9: aload_1
      10: aload_0
      11: invokevirtual #42                 // Method org/joda/time/format/DateTimeFormatter.print:(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;
      14: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #29                 // class org/joda/time/ReadablePartial
       5: invokevirtual #40                 // Method compareTo:(Lorg/joda/time/ReadablePartial;)I
       8: ireturn
}
