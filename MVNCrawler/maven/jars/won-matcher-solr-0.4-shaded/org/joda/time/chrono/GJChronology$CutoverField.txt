Compiled from "GJChronology.java"
class org.joda.time.chrono.GJChronology$CutoverField extends org.joda.time.field.BaseDateTimeField {
  private static final long serialVersionUID;

  final org.joda.time.DateTimeField iJulianField;

  final org.joda.time.DateTimeField iGregorianField;

  final long iCutover;

  final boolean iConvertByWeekyear;

  protected org.joda.time.DurationField iDurationField;

  protected org.joda.time.DurationField iRangeDurationField;

  final org.joda.time.chrono.GJChronology this$0;

  org.joda.time.chrono.GJChronology$CutoverField(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: lload         4
       6: iconst_0
       7: invokespecial #1                  // Method "<init>":(Lorg/joda/time/chrono/GJChronology;Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeField;JZ)V
      10: return

  org.joda.time.chrono.GJChronology$CutoverField(org.joda.time.chrono.GJChronology, org.joda.time.DateTimeField, org.joda.time.DateTimeField, long, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
       5: aload_0
       6: aload_3
       7: invokevirtual #3                  // Method org/joda/time/DateTimeField.getType:()Lorg/joda/time/DateTimeFieldType;
      10: invokespecial #4                  // Method org/joda/time/field/BaseDateTimeField."<init>":(Lorg/joda/time/DateTimeFieldType;)V
      13: aload_0
      14: aload_2
      15: putfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      18: aload_0
      19: aload_3
      20: putfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      23: aload_0
      24: lload         4
      26: putfield      #7                  // Field iCutover:J
      29: aload_0
      30: iload         6
      32: putfield      #8                  // Field iConvertByWeekyear:Z
      35: aload_0
      36: aload_3
      37: invokevirtual #9                  // Method org/joda/time/DateTimeField.getDurationField:()Lorg/joda/time/DurationField;
      40: putfield      #10                 // Field iDurationField:Lorg/joda/time/DurationField;
      43: aload_3
      44: invokevirtual #11                 // Method org/joda/time/DateTimeField.getRangeDurationField:()Lorg/joda/time/DurationField;
      47: astore        7
      49: aload         7
      51: ifnonnull     60
      54: aload_2
      55: invokevirtual #11                 // Method org/joda/time/DateTimeField.getRangeDurationField:()Lorg/joda/time/DurationField;
      58: astore        7
      60: aload_0
      61: aload         7
      63: putfield      #12                 // Field iRangeDurationField:Lorg/joda/time/DurationField;
      66: return

  public boolean isLenient();
    Code:
       0: iconst_0
       1: ireturn

  public int get(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          18
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      22: lload_1
      23: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
      26: ireturn

  public java.lang.String getAsText(long, java.util.Locale);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          19
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: aload_3
      15: invokevirtual #14                 // Method org/joda/time/DateTimeField.getAsText:(JLjava/util/Locale;)Ljava/lang/String;
      18: areturn
      19: aload_0
      20: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      23: lload_1
      24: aload_3
      25: invokevirtual #14                 // Method org/joda/time/DateTimeField.getAsText:(JLjava/util/Locale;)Ljava/lang/String;
      28: areturn

  public java.lang.String getAsText(int, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: iload_1
       5: aload_2
       6: invokevirtual #15                 // Method org/joda/time/DateTimeField.getAsText:(ILjava/util/Locale;)Ljava/lang/String;
       9: areturn

  public java.lang.String getAsShortText(long, java.util.Locale);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          19
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: aload_3
      15: invokevirtual #16                 // Method org/joda/time/DateTimeField.getAsShortText:(JLjava/util/Locale;)Ljava/lang/String;
      18: areturn
      19: aload_0
      20: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      23: lload_1
      24: aload_3
      25: invokevirtual #16                 // Method org/joda/time/DateTimeField.getAsShortText:(JLjava/util/Locale;)Ljava/lang/String;
      28: areturn

  public java.lang.String getAsShortText(int, java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: iload_1
       5: aload_2
       6: invokevirtual #17                 // Method org/joda/time/DateTimeField.getAsShortText:(ILjava/util/Locale;)Ljava/lang/String;
       9: areturn

  public long add(long, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: iload_3
       6: invokevirtual #18                 // Method org/joda/time/DateTimeField.add:(JI)J
       9: lreturn

  public long add(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #19                 // Method org/joda/time/DateTimeField.add:(JJ)J
       9: lreturn

  public int[] add(org.joda.time.ReadablePartial, int, int[], int);
    Code:
       0: iload         4
       2: ifne          7
       5: aload_3
       6: areturn
       7: aload_1
       8: invokestatic  #20                 // Method org/joda/time/DateTimeUtils.isContiguous:(Lorg/joda/time/ReadablePartial;)Z
      11: ifeq          88
      14: lconst_0
      15: lstore        5
      17: iconst_0
      18: istore        7
      20: aload_1
      21: invokeinterface #21,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
      26: istore        8
      28: iload         7
      30: iload         8
      32: if_icmpge     67
      35: aload_1
      36: iload         7
      38: invokeinterface #22,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      43: aload_0
      44: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      47: invokevirtual #23                 // Method org/joda/time/DateTimeFieldType.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;
      50: lload         5
      52: aload_3
      53: iload         7
      55: iaload
      56: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      59: lstore        5
      61: iinc          7, 1
      64: goto          28
      67: aload_0
      68: lload         5
      70: iload         4
      72: invokevirtual #25                 // Method add:(JI)J
      75: lstore        5
      77: aload_0
      78: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      81: aload_1
      82: lload         5
      84: invokevirtual #26                 // Method org/joda/time/chrono/GJChronology.get:(Lorg/joda/time/ReadablePartial;J)[I
      87: areturn
      88: aload_0
      89: aload_1
      90: iload_2
      91: aload_3
      92: iload         4
      94: invokespecial #27                 // Method org/joda/time/field/BaseDateTimeField.add:(Lorg/joda/time/ReadablePartial;I[II)[I
      97: areturn

  public int getDifference(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #28                 // Method org/joda/time/DateTimeField.getDifference:(JJ)I
       9: ireturn

  public long getDifferenceAsLong(long, long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: lload_1
       5: lload_3
       6: invokevirtual #29                 // Method org/joda/time/DateTimeField.getDifferenceAsLong:(JJ)J
       9: lreturn

  public long set(long, int);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          81
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: iload_3
      15: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      18: lstore_1
      19: lload_1
      20: aload_0
      21: getfield      #7                  // Field iCutover:J
      24: lcmp
      25: ifge          153
      28: lload_1
      29: aload_0
      30: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      33: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
      36: ladd
      37: aload_0
      38: getfield      #7                  // Field iCutover:J
      41: lcmp
      42: ifge          51
      45: aload_0
      46: lload_1
      47: invokevirtual #31                 // Method gregorianToJulian:(J)J
      50: lstore_1
      51: aload_0
      52: lload_1
      53: invokevirtual #32                 // Method get:(J)I
      56: iload_3
      57: if_icmpeq     153
      60: new           #33                 // class org/joda/time/IllegalFieldValueException
      63: dup
      64: aload_0
      65: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      68: invokevirtual #3                  // Method org/joda/time/DateTimeField.getType:()Lorg/joda/time/DateTimeFieldType;
      71: iload_3
      72: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aconst_null
      76: aconst_null
      77: invokespecial #35                 // Method org/joda/time/IllegalFieldValueException."<init>":(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
      80: athrow
      81: aload_0
      82: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      85: lload_1
      86: iload_3
      87: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      90: lstore_1
      91: lload_1
      92: aload_0
      93: getfield      #7                  // Field iCutover:J
      96: lcmp
      97: iflt          153
     100: lload_1
     101: aload_0
     102: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
     105: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
     108: lsub
     109: aload_0
     110: getfield      #7                  // Field iCutover:J
     113: lcmp
     114: iflt          123
     117: aload_0
     118: lload_1
     119: invokevirtual #36                 // Method julianToGregorian:(J)J
     122: lstore_1
     123: aload_0
     124: lload_1
     125: invokevirtual #32                 // Method get:(J)I
     128: iload_3
     129: if_icmpeq     153
     132: new           #33                 // class org/joda/time/IllegalFieldValueException
     135: dup
     136: aload_0
     137: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
     140: invokevirtual #3                  // Method org/joda/time/DateTimeField.getType:()Lorg/joda/time/DateTimeFieldType;
     143: iload_3
     144: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     147: aconst_null
     148: aconst_null
     149: invokespecial #35                 // Method org/joda/time/IllegalFieldValueException."<init>":(Lorg/joda/time/DateTimeFieldType;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V
     152: athrow
     153: lload_1
     154: lreturn

  public long set(long, java.lang.String, java.util.Locale);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          56
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: aload_3
      15: aload         4
      17: invokevirtual #37                 // Method org/joda/time/DateTimeField.set:(JLjava/lang/String;Ljava/util/Locale;)J
      20: lstore_1
      21: lload_1
      22: aload_0
      23: getfield      #7                  // Field iCutover:J
      26: lcmp
      27: ifge          100
      30: lload_1
      31: aload_0
      32: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      35: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
      38: ladd
      39: aload_0
      40: getfield      #7                  // Field iCutover:J
      43: lcmp
      44: ifge          100
      47: aload_0
      48: lload_1
      49: invokevirtual #31                 // Method gregorianToJulian:(J)J
      52: lstore_1
      53: goto          100
      56: aload_0
      57: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      60: lload_1
      61: aload_3
      62: aload         4
      64: invokevirtual #37                 // Method org/joda/time/DateTimeField.set:(JLjava/lang/String;Ljava/util/Locale;)J
      67: lstore_1
      68: lload_1
      69: aload_0
      70: getfield      #7                  // Field iCutover:J
      73: lcmp
      74: iflt          100
      77: lload_1
      78: aload_0
      79: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      82: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
      85: lsub
      86: aload_0
      87: getfield      #7                  // Field iCutover:J
      90: lcmp
      91: iflt          100
      94: aload_0
      95: lload_1
      96: invokevirtual #36                 // Method julianToGregorian:(J)J
      99: lstore_1
     100: lload_1
     101: lreturn

  public org.joda.time.DurationField getDurationField();
    Code:
       0: aload_0
       1: getfield      #10                 // Field iDurationField:Lorg/joda/time/DurationField;
       4: areturn

  public org.joda.time.DurationField getRangeDurationField();
    Code:
       0: aload_0
       1: getfield      #12                 // Field iRangeDurationField:Lorg/joda/time/DurationField;
       4: areturn

  public boolean isLeap(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          18
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #38                 // Method org/joda/time/DateTimeField.isLeap:(J)Z
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      22: lload_1
      23: invokevirtual #38                 // Method org/joda/time/DateTimeField.isLeap:(J)Z
      26: ireturn

  public int getLeapAmount(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          18
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #39                 // Method org/joda/time/DateTimeField.getLeapAmount:(J)I
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      22: lload_1
      23: invokevirtual #39                 // Method org/joda/time/DateTimeField.getLeapAmount:(J)I
      26: ireturn

  public org.joda.time.DurationField getLeapDurationField();
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #40                 // Method org/joda/time/DateTimeField.getLeapDurationField:()Lorg/joda/time/DurationField;
       7: areturn

  public int getMinimumValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #41                 // Method org/joda/time/DateTimeField.getMinimumValue:()I
       7: ireturn

  public int getMinimumValue(org.joda.time.ReadablePartial);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
       4: aload_1
       5: invokevirtual #42                 // Method org/joda/time/DateTimeField.getMinimumValue:(Lorg/joda/time/ReadablePartial;)I
       8: ireturn

  public int getMinimumValue(org.joda.time.ReadablePartial, int[]);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
       4: aload_1
       5: aload_2
       6: invokevirtual #43                 // Method org/joda/time/DateTimeField.getMinimumValue:(Lorg/joda/time/ReadablePartial;[I)I
       9: ireturn

  public int getMinimumValue(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: ifge          18
       9: aload_0
      10: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #44                 // Method org/joda/time/DateTimeField.getMinimumValue:(J)I
      17: ireturn
      18: aload_0
      19: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      22: lload_1
      23: invokevirtual #44                 // Method org/joda/time/DateTimeField.getMinimumValue:(J)I
      26: istore_3
      27: aload_0
      28: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      31: lload_1
      32: iload_3
      33: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      36: lstore_1
      37: lload_1
      38: aload_0
      39: getfield      #7                  // Field iCutover:J
      42: lcmp
      43: ifge          58
      46: aload_0
      47: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      50: aload_0
      51: getfield      #7                  // Field iCutover:J
      54: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
      57: istore_3
      58: iload_3
      59: ireturn

  public int getMaximumValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
       4: invokevirtual #45                 // Method org/joda/time/DateTimeField.getMaximumValue:()I
       7: ireturn

  public int getMaximumValue(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          18
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #46                 // Method org/joda/time/DateTimeField.getMaximumValue:(J)I
      17: ireturn
      18: aload_0
      19: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      22: lload_1
      23: invokevirtual #46                 // Method org/joda/time/DateTimeField.getMaximumValue:(J)I
      26: istore_3
      27: aload_0
      28: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      31: lload_1
      32: iload_3
      33: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      36: lstore_1
      37: lload_1
      38: aload_0
      39: getfield      #7                  // Field iCutover:J
      42: lcmp
      43: iflt          66
      46: aload_0
      47: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      50: aload_0
      51: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      54: aload_0
      55: getfield      #7                  // Field iCutover:J
      58: iconst_m1
      59: invokevirtual #18                 // Method org/joda/time/DateTimeField.add:(JI)J
      62: invokevirtual #13                 // Method org/joda/time/DateTimeField.get:(J)I
      65: istore_3
      66: iload_3
      67: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial);
    Code:
       0: invokestatic  #47                 // Method org/joda/time/chrono/GJChronology.getInstanceUTC:()Lorg/joda/time/chrono/GJChronology;
       3: aload_1
       4: lconst_0
       5: invokevirtual #48                 // Method org/joda/time/chrono/GJChronology.set:(Lorg/joda/time/ReadablePartial;J)J
       8: lstore_2
       9: aload_0
      10: lload_2
      11: invokevirtual #49                 // Method getMaximumValue:(J)I
      14: ireturn

  public int getMaximumValue(org.joda.time.ReadablePartial, int[]);
    Code:
       0: invokestatic  #47                 // Method org/joda/time/chrono/GJChronology.getInstanceUTC:()Lorg/joda/time/chrono/GJChronology;
       3: astore_3
       4: lconst_0
       5: lstore        4
       7: iconst_0
       8: istore        6
      10: aload_1
      11: invokeinterface #21,  1           // InterfaceMethod org/joda/time/ReadablePartial.size:()I
      16: istore        7
      18: iload         6
      20: iload         7
      22: if_icmpge     72
      25: aload_1
      26: iload         6
      28: invokeinterface #22,  2           // InterfaceMethod org/joda/time/ReadablePartial.getFieldType:(I)Lorg/joda/time/DateTimeFieldType;
      33: aload_3
      34: invokevirtual #23                 // Method org/joda/time/DateTimeFieldType.getField:(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;
      37: astore        8
      39: aload_2
      40: iload         6
      42: iaload
      43: aload         8
      45: lload         4
      47: invokevirtual #46                 // Method org/joda/time/DateTimeField.getMaximumValue:(J)I
      50: if_icmpgt     66
      53: aload         8
      55: lload         4
      57: aload_2
      58: iload         6
      60: iaload
      61: invokevirtual #24                 // Method org/joda/time/DateTimeField.set:(JI)J
      64: lstore        4
      66: iinc          6, 1
      69: goto          18
      72: aload_0
      73: lload         4
      75: invokevirtual #49                 // Method getMaximumValue:(J)I
      78: ireturn

  public long roundFloor(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          53
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #50                 // Method org/joda/time/DateTimeField.roundFloor:(J)J
      17: lstore_1
      18: lload_1
      19: aload_0
      20: getfield      #7                  // Field iCutover:J
      23: lcmp
      24: ifge          62
      27: lload_1
      28: aload_0
      29: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      32: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
      35: ladd
      36: aload_0
      37: getfield      #7                  // Field iCutover:J
      40: lcmp
      41: ifge          62
      44: aload_0
      45: lload_1
      46: invokevirtual #31                 // Method gregorianToJulian:(J)J
      49: lstore_1
      50: goto          62
      53: aload_0
      54: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      57: lload_1
      58: invokevirtual #50                 // Method org/joda/time/DateTimeField.roundFloor:(J)J
      61: lstore_1
      62: lload_1
      63: lreturn

  public long roundCeiling(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #7                  // Field iCutover:J
       5: lcmp
       6: iflt          21
       9: aload_0
      10: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      13: lload_1
      14: invokevirtual #51                 // Method org/joda/time/DateTimeField.roundCeiling:(J)J
      17: lstore_1
      18: goto          62
      21: aload_0
      22: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
      25: lload_1
      26: invokevirtual #51                 // Method org/joda/time/DateTimeField.roundCeiling:(J)J
      29: lstore_1
      30: lload_1
      31: aload_0
      32: getfield      #7                  // Field iCutover:J
      35: lcmp
      36: iflt          62
      39: lload_1
      40: aload_0
      41: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      44: invokestatic  #30                 // Method org/joda/time/chrono/GJChronology.access$000:(Lorg/joda/time/chrono/GJChronology;)J
      47: lsub
      48: aload_0
      49: getfield      #7                  // Field iCutover:J
      52: lcmp
      53: iflt          62
      56: aload_0
      57: lload_1
      58: invokevirtual #36                 // Method julianToGregorian:(J)J
      61: lstore_1
      62: lload_1
      63: lreturn

  public int getMaximumTextLength(java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
       4: aload_1
       5: invokevirtual #52                 // Method org/joda/time/DateTimeField.getMaximumTextLength:(Ljava/util/Locale;)I
       8: aload_0
       9: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      12: aload_1
      13: invokevirtual #52                 // Method org/joda/time/DateTimeField.getMaximumTextLength:(Ljava/util/Locale;)I
      16: invokestatic  #53                 // Method java/lang/Math.max:(II)I
      19: ireturn

  public int getMaximumShortTextLength(java.util.Locale);
    Code:
       0: aload_0
       1: getfield      #5                  // Field iJulianField:Lorg/joda/time/DateTimeField;
       4: aload_1
       5: invokevirtual #54                 // Method org/joda/time/DateTimeField.getMaximumShortTextLength:(Ljava/util/Locale;)I
       8: aload_0
       9: getfield      #6                  // Field iGregorianField:Lorg/joda/time/DateTimeField;
      12: aload_1
      13: invokevirtual #54                 // Method org/joda/time/DateTimeField.getMaximumShortTextLength:(Ljava/util/Locale;)I
      16: invokestatic  #53                 // Method java/lang/Math.max:(II)I
      19: ireturn

  protected long julianToGregorian(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field iConvertByWeekyear:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      11: lload_1
      12: invokevirtual #55                 // Method org/joda/time/chrono/GJChronology.julianToGregorianByWeekyear:(J)J
      15: lreturn
      16: aload_0
      17: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      20: lload_1
      21: invokevirtual #56                 // Method org/joda/time/chrono/GJChronology.julianToGregorianByYear:(J)J
      24: lreturn

  protected long gregorianToJulian(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field iConvertByWeekyear:Z
       4: ifeq          16
       7: aload_0
       8: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      11: lload_1
      12: invokevirtual #57                 // Method org/joda/time/chrono/GJChronology.gregorianToJulianByWeekyear:(J)J
      15: lreturn
      16: aload_0
      17: getfield      #2                  // Field this$0:Lorg/joda/time/chrono/GJChronology;
      20: lload_1
      21: invokevirtual #58                 // Method org/joda/time/chrono/GJChronology.gregorianToJulianByYear:(J)J
      24: lreturn
}
