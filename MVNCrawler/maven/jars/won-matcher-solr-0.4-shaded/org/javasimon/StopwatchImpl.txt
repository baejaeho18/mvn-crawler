Compiled from "StopwatchImpl.java"
final class org.javasimon.StopwatchImpl extends org.javasimon.AbstractSimon implements org.javasimon.Stopwatch {
  private long total;

  private long counter;

  private long active;

  private long max;

  private long maxTimestamp;

  private long maxActive;

  private long maxActiveTimestamp;

  private long min;

  private long minTimestamp;

  private long last;

  private double mean;

  private double mean2;

  org.javasimon.StopwatchImpl(java.lang.String, org.javasimon.Manager);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/javasimon/AbstractSimon."<init>":(Ljava/lang/String;Lorg/javasimon/Manager;)V
       6: aload_0
       7: ldc2_w        #2                  // long 9223372036854775807l
      10: putfield      #4                  // Field min:J
      13: return

  public org.javasimon.Stopwatch addTime(long);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_0
       3: getfield      #5                  // Field enabled:Z
       6: ifne          11
       9: aload_0
      10: areturn
      11: aload_0
      12: dup
      13: astore        4
      15: monitorenter
      16: aload_0
      17: invokespecial #6                  // Method updateUsages:()V
      20: aload_0
      21: lload_1
      22: invokespecial #7                  // Method addSplit:(J)J
      25: pop2
      26: aload_0
      27: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      30: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
      35: invokeinterface #10,  1           // InterfaceMethod org/javasimon/callback/CompositeCallback.callbacks:()Ljava/util/List;
      40: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      45: ifne          53
      48: aload_0
      49: invokevirtual #12                 // Method sample:()Lorg/javasimon/StopwatchSample;
      52: astore_3
      53: aload         4
      55: monitorexit
      56: goto          67
      59: astore        5
      61: aload         4
      63: monitorexit
      64: aload         5
      66: athrow
      67: aload_0
      68: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      71: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
      76: aload_0
      77: lload_1
      78: aload_3
      79: invokeinterface #13,  5           // InterfaceMethod org/javasimon/callback/CompositeCallback.onStopwatchAdd:(Lorg/javasimon/Stopwatch;JLorg/javasimon/StopwatchSample;)V
      84: aload_0
      85: areturn
    Exception table:
       from    to  target type
          16    56    59   any
          59    64    59   any

  public org.javasimon.Stopwatch addSplit(org.javasimon.Split);
    Code:
       0: aload_0
       1: getfield      #5                  // Field enabled:Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_1
      10: invokevirtual #14                 // Method org/javasimon/Split.runningFor:()J
      13: lstore_2
      14: aconst_null
      15: astore        4
      17: aload_0
      18: dup
      19: astore        5
      21: monitorenter
      22: aload_0
      23: aload_1
      24: invokevirtual #15                 // Method org/javasimon/Split.getStart:()J
      27: lload_2
      28: ladd
      29: invokespecial #16                 // Method updateUsages:(J)V
      32: aload_0
      33: lload_2
      34: invokespecial #7                  // Method addSplit:(J)J
      37: pop2
      38: aload_0
      39: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      42: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
      47: invokeinterface #10,  1           // InterfaceMethod org/javasimon/callback/CompositeCallback.callbacks:()Ljava/util/List;
      52: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      57: ifne          66
      60: aload_0
      61: invokevirtual #12                 // Method sample:()Lorg/javasimon/StopwatchSample;
      64: astore        4
      66: aload         5
      68: monitorexit
      69: goto          80
      72: astore        6
      74: aload         5
      76: monitorexit
      77: aload         6
      79: athrow
      80: aload_0
      81: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      84: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
      89: aload_0
      90: aload_1
      91: aload         4
      93: invokeinterface #17,  4           // InterfaceMethod org/javasimon/callback/CompositeCallback.onStopwatchAdd:(Lorg/javasimon/Stopwatch;Lorg/javasimon/Split;Lorg/javasimon/StopwatchSample;)V
      98: aload_0
      99: areturn
    Exception table:
       from    to  target type
          22    69    72   any
          72    77    72   any

  public org.javasimon.Split start();
    Code:
       0: aload_0
       1: getfield      #5                  // Field enabled:Z
       4: ifne          16
       7: new           #18                 // class org/javasimon/Split
      10: dup
      11: aload_0
      12: invokespecial #19                 // Method org/javasimon/Split."<init>":(Lorg/javasimon/Stopwatch;)V
      15: areturn
      16: invokestatic  #20                 // Method java/lang/System.nanoTime:()J
      19: lstore_1
      20: aload_0
      21: dup
      22: astore        4
      24: monitorenter
      25: aload_0
      26: lload_1
      27: invokespecial #16                 // Method updateUsages:(J)V
      30: aload_0
      31: invokespecial #21                 // Method activeStart:()V
      34: aload         4
      36: monitorexit
      37: goto          48
      40: astore        5
      42: aload         4
      44: monitorexit
      45: aload         5
      47: athrow
      48: new           #18                 // class org/javasimon/Split
      51: dup
      52: aload_0
      53: lload_1
      54: invokespecial #22                 // Method org/javasimon/Split."<init>":(Lorg/javasimon/Stopwatch;J)V
      57: astore_3
      58: aload_0
      59: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      62: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
      67: aload_3
      68: invokeinterface #23,  2           // InterfaceMethod org/javasimon/callback/CompositeCallback.onStopwatchStart:(Lorg/javasimon/Split;)V
      73: aload_3
      74: areturn
    Exception table:
       from    to  target type
          25    37    40   any
          40    45    40   any

  void stop(org.javasimon.Split, long, long, java.lang.String);
    Code:
       0: aconst_null
       1: astore        7
       3: aload_0
       4: dup
       5: astore        8
       7: monitorenter
       8: aload_0
       9: dup
      10: getfield      #24                 // Field active:J
      13: lconst_1
      14: lsub
      15: putfield      #24                 // Field active:J
      18: aload_0
      19: lload         4
      21: invokespecial #16                 // Method updateUsages:(J)V
      24: aload         6
      26: ifnull        88
      29: aload_0
      30: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
      33: new           #25                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      40: aload_0
      41: invokevirtual #27                 // Method getName:()Ljava/lang/String;
      44: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: ldc           #29                 // String .
      49: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload         6
      54: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokeinterface #31,  2           // InterfaceMethod org/javasimon/Manager.getStopwatch:(Ljava/lang/String;)Lorg/javasimon/Stopwatch;
      65: astore        9
      67: aload_1
      68: ldc           #32                 // String effective-stopwatch
      70: aload         9
      72: invokevirtual #33                 // Method org/javasimon/Split.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      75: aload         9
      77: aload_1
      78: invokeinterface #34,  2           // InterfaceMethod org/javasimon/Stopwatch.addSplit:(Lorg/javasimon/Split;)Lorg/javasimon/Stopwatch;
      83: pop
      84: aload         8
      86: monitorexit
      87: return
      88: aload_0
      89: lload         4
      91: lload_2
      92: lsub
      93: invokespecial #7                  // Method addSplit:(J)J
      96: pop2
      97: aload_0
      98: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
     101: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
     106: invokeinterface #10,  1           // InterfaceMethod org/javasimon/callback/CompositeCallback.callbacks:()Ljava/util/List;
     111: invokeinterface #11,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     116: ifne          125
     119: aload_0
     120: invokevirtual #12                 // Method sample:()Lorg/javasimon/StopwatchSample;
     123: astore        7
     125: aload         8
     127: monitorexit
     128: goto          139
     131: astore        10
     133: aload         8
     135: monitorexit
     136: aload         10
     138: athrow
     139: aload_0
     140: getfield      #8                  // Field manager:Lorg/javasimon/Manager;
     143: invokeinterface #9,  1            // InterfaceMethod org/javasimon/Manager.callback:()Lorg/javasimon/callback/CompositeCallback;
     148: aload_1
     149: aload         7
     151: invokeinterface #35,  3           // InterfaceMethod org/javasimon/callback/CompositeCallback.onStopwatchStop:(Lorg/javasimon/Split;Lorg/javasimon/StopwatchSample;)V
     156: return
    Exception table:
       from    to  target type
           8    87   131   any
          88   128   131   any
         131   136   131   any

  private void activeStart();
    Code:
       0: aload_0
       1: dup
       2: getfield      #24                 // Field active:J
       5: lconst_1
       6: ladd
       7: putfield      #24                 // Field active:J
      10: aload_0
      11: getfield      #24                 // Field active:J
      14: aload_0
      15: getfield      #36                 // Field maxActive:J
      18: lcmp
      19: iflt          38
      22: aload_0
      23: aload_0
      24: getfield      #24                 // Field active:J
      27: putfield      #36                 // Field maxActive:J
      30: aload_0
      31: aload_0
      32: invokevirtual #37                 // Method getLastUsage:()J
      35: putfield      #38                 // Field maxActiveTimestamp:J
      38: return

  public synchronized org.javasimon.Stopwatch reset();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #39                 // Field total:J
       5: aload_0
       6: lconst_0
       7: putfield      #40                 // Field counter:J
      10: aload_0
      11: lconst_0
      12: putfield      #41                 // Field max:J
      15: aload_0
      16: ldc2_w        #2                  // long 9223372036854775807l
      19: putfield      #4                  // Field min:J
      22: aload_0
      23: lconst_0
      24: putfield      #42                 // Field maxTimestamp:J
      27: aload_0
      28: lconst_0
      29: putfield      #43                 // Field minTimestamp:J
      32: aload_0
      33: aload_0
      34: getfield      #24                 // Field active:J
      37: putfield      #36                 // Field maxActive:J
      40: aload_0
      41: lconst_0
      42: putfield      #38                 // Field maxActiveTimestamp:J
      45: aload_0
      46: dconst_0
      47: putfield      #44                 // Field mean:D
      50: aload_0
      51: dconst_0
      52: putfield      #45                 // Field mean2:D
      55: aload_0
      56: invokevirtual #46                 // Method resetCommon:()V
      59: aload_0
      60: areturn

  private long addSplit(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #47                 // Field last:J
       5: aload_0
       6: dup
       7: getfield      #39                 // Field total:J
      10: lload_1
      11: ladd
      12: putfield      #39                 // Field total:J
      15: aload_0
      16: dup
      17: getfield      #40                 // Field counter:J
      20: lconst_1
      21: ladd
      22: putfield      #40                 // Field counter:J
      25: lload_1
      26: aload_0
      27: getfield      #41                 // Field max:J
      30: lcmp
      31: ifle          47
      34: aload_0
      35: lload_1
      36: putfield      #41                 // Field max:J
      39: aload_0
      40: aload_0
      41: invokevirtual #37                 // Method getLastUsage:()J
      44: putfield      #42                 // Field maxTimestamp:J
      47: lload_1
      48: aload_0
      49: getfield      #4                  // Field min:J
      52: lcmp
      53: ifge          69
      56: aload_0
      57: lload_1
      58: putfield      #4                  // Field min:J
      61: aload_0
      62: aload_0
      63: invokevirtual #37                 // Method getLastUsage:()J
      66: putfield      #43                 // Field minTimestamp:J
      69: lload_1
      70: l2d
      71: aload_0
      72: getfield      #44                 // Field mean:D
      75: dsub
      76: dstore_3
      77: aload_0
      78: aload_0
      79: getfield      #39                 // Field total:J
      82: l2d
      83: aload_0
      84: getfield      #40                 // Field counter:J
      87: l2d
      88: ddiv
      89: putfield      #44                 // Field mean:D
      92: aload_0
      93: dup
      94: getfield      #45                 // Field mean2:D
      97: dload_3
      98: lload_1
      99: l2d
     100: aload_0
     101: getfield      #44                 // Field mean:D
     104: dsub
     105: dmul
     106: dadd
     107: putfield      #45                 // Field mean2:D
     110: lload_1
     111: lreturn

  public synchronized double getMean();
    Code:
       0: aload_0
       1: getfield      #44                 // Field mean:D
       4: dreturn

  public synchronized double getVarianceN();
    Code:
       0: aload_0
       1: getfield      #40                 // Field counter:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: getfield      #45                 // Field mean2:D
      15: aload_0
      16: getfield      #40                 // Field counter:J
      19: l2d
      20: ddiv
      21: dreturn

  public synchronized double getVariance();
    Code:
       0: aload_0
       1: getfield      #40                 // Field counter:J
       4: lconst_0
       5: lcmp
       6: ifne          11
       9: dconst_0
      10: dreturn
      11: aload_0
      12: getfield      #40                 // Field counter:J
      15: lconst_1
      16: lsub
      17: lstore_1
      18: aload_0
      19: getfield      #40                 // Field counter:J
      22: ldc2_w        #48                 // long 2l
      25: lcmp
      26: ifge          31
      29: lconst_1
      30: lstore_1
      31: aload_0
      32: getfield      #45                 // Field mean2:D
      35: lload_1
      36: l2d
      37: ddiv
      38: dreturn

  public synchronized double getStandardDeviation();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method getVarianceN:()D
       4: invokestatic  #51                 // Method java/lang/Math.sqrt:(D)D
       7: dreturn

  public synchronized long getTotal();
    Code:
       0: aload_0
       1: getfield      #39                 // Field total:J
       4: lreturn

  public synchronized long getLast();
    Code:
       0: aload_0
       1: getfield      #47                 // Field last:J
       4: lreturn

  public synchronized long getCounter();
    Code:
       0: aload_0
       1: getfield      #40                 // Field counter:J
       4: lreturn

  public synchronized long getMax();
    Code:
       0: aload_0
       1: getfield      #41                 // Field max:J
       4: lreturn

  public synchronized long getMin();
    Code:
       0: aload_0
       1: getfield      #4                  // Field min:J
       4: lreturn

  public synchronized long getMaxTimestamp();
    Code:
       0: aload_0
       1: getfield      #42                 // Field maxTimestamp:J
       4: lreturn

  public synchronized long getMinTimestamp();
    Code:
       0: aload_0
       1: getfield      #43                 // Field minTimestamp:J
       4: lreturn

  public synchronized long getActive();
    Code:
       0: aload_0
       1: getfield      #24                 // Field active:J
       4: lreturn

  public synchronized long getMaxActive();
    Code:
       0: aload_0
       1: getfield      #36                 // Field maxActive:J
       4: lreturn

  public synchronized long getMaxActiveTimestamp();
    Code:
       0: aload_0
       1: getfield      #38                 // Field maxActiveTimestamp:J
       4: lreturn

  public synchronized org.javasimon.StopwatchSample sampleAndReset();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method sample:()Lorg/javasimon/StopwatchSample;
       4: astore_1
       5: aload_0
       6: invokevirtual #52                 // Method reset:()Lorg/javasimon/Stopwatch;
       9: pop
      10: aload_1
      11: areturn

  public synchronized org.javasimon.StopwatchSample sample();
    Code:
       0: new           #53                 // class org/javasimon/StopwatchSample
       3: dup
       4: invokespecial #54                 // Method org/javasimon/StopwatchSample."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #39                 // Field total:J
      13: invokevirtual #55                 // Method org/javasimon/StopwatchSample.setTotal:(J)V
      16: aload_1
      17: aload_0
      18: getfield      #40                 // Field counter:J
      21: invokevirtual #56                 // Method org/javasimon/StopwatchSample.setCounter:(J)V
      24: aload_1
      25: aload_0
      26: getfield      #4                  // Field min:J
      29: invokevirtual #57                 // Method org/javasimon/StopwatchSample.setMin:(J)V
      32: aload_1
      33: aload_0
      34: getfield      #41                 // Field max:J
      37: invokevirtual #58                 // Method org/javasimon/StopwatchSample.setMax:(J)V
      40: aload_1
      41: aload_0
      42: getfield      #43                 // Field minTimestamp:J
      45: invokevirtual #59                 // Method org/javasimon/StopwatchSample.setMinTimestamp:(J)V
      48: aload_1
      49: aload_0
      50: getfield      #42                 // Field maxTimestamp:J
      53: invokevirtual #60                 // Method org/javasimon/StopwatchSample.setMaxTimestamp:(J)V
      56: aload_1
      57: aload_0
      58: getfield      #24                 // Field active:J
      61: invokevirtual #61                 // Method org/javasimon/StopwatchSample.setActive:(J)V
      64: aload_1
      65: aload_0
      66: getfield      #36                 // Field maxActive:J
      69: invokevirtual #62                 // Method org/javasimon/StopwatchSample.setMaxActive:(J)V
      72: aload_1
      73: aload_0
      74: getfield      #38                 // Field maxActiveTimestamp:J
      77: invokevirtual #63                 // Method org/javasimon/StopwatchSample.setMaxActiveTimestamp:(J)V
      80: aload_1
      81: aload_0
      82: invokevirtual #64                 // Method getMean:()D
      85: invokevirtual #65                 // Method org/javasimon/StopwatchSample.setMean:(D)V
      88: aload_1
      89: aload_0
      90: invokevirtual #66                 // Method getVariance:()D
      93: invokevirtual #67                 // Method org/javasimon/StopwatchSample.setVariance:(D)V
      96: aload_1
      97: aload_0
      98: invokevirtual #50                 // Method getVarianceN:()D
     101: invokevirtual #68                 // Method org/javasimon/StopwatchSample.setVarianceN:(D)V
     104: aload_1
     105: aload_0
     106: invokevirtual #69                 // Method getStandardDeviation:()D
     109: invokevirtual #70                 // Method org/javasimon/StopwatchSample.setStandardDeviation:(D)V
     112: aload_1
     113: aload_0
     114: invokevirtual #71                 // Method getLast:()J
     117: invokevirtual #72                 // Method org/javasimon/StopwatchSample.setLast:(J)V
     120: aload_0
     121: aload_1
     122: invokevirtual #73                 // Method sampleCommon:(Lorg/javasimon/Sample;)V
     125: aload_1
     126: areturn

  private void updateUsages(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #74                 // Method org/javasimon/utils/SimonUtils.millisForNano:(J)J
       5: putfield      #75                 // Field lastUsage:J
       8: aload_0
       9: getfield      #76                 // Field firstUsage:J
      12: lconst_0
      13: lcmp
      14: ifne          25
      17: aload_0
      18: aload_0
      19: getfield      #75                 // Field lastUsage:J
      22: putfield      #76                 // Field firstUsage:J
      25: return

  private void updateUsages();
    Code:
       0: aload_0
       1: invokestatic  #77                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #75                 // Field lastUsage:J
       7: aload_0
       8: getfield      #76                 // Field firstUsage:J
      11: lconst_0
      12: lcmp
      13: ifne          24
      16: aload_0
      17: aload_0
      18: getfield      #75                 // Field lastUsage:J
      21: putfield      #76                 // Field firstUsage:J
      24: return

  public synchronized java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #78                 // String Simon Stopwatch: total
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #39                 // Field total:J
      16: invokestatic  #79                 // Method org/javasimon/utils/SimonUtils.presentNanoTime:(J)Ljava/lang/String;
      19: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: ldc           #80                 // String , counter
      24: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #40                 // Field counter:J
      31: invokevirtual #81                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      34: ldc           #82                 // String , max
      36: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #41                 // Field max:J
      43: invokestatic  #79                 // Method org/javasimon/utils/SimonUtils.presentNanoTime:(J)Ljava/lang/String;
      46: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #83                 // String , min
      51: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: getfield      #4                  // Field min:J
      58: invokestatic  #79                 // Method org/javasimon/utils/SimonUtils.presentNanoTime:(J)Ljava/lang/String;
      61: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: ldc           #84                 // String , mean
      66: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_0
      70: getfield      #44                 // Field mean:D
      73: d2l
      74: invokestatic  #79                 // Method org/javasimon/utils/SimonUtils.presentNanoTime:(J)Ljava/lang/String;
      77: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: aload_0
      81: invokespecial #85                 // Method org/javasimon/AbstractSimon.toString:()Ljava/lang/String;
      84: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #30                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: areturn

  public org.javasimon.Sample sampleAndReset();
    Code:
       0: aload_0
       1: invokevirtual #86                 // Method sampleAndReset:()Lorg/javasimon/StopwatchSample;
       4: areturn

  public org.javasimon.Sample sample();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method sample:()Lorg/javasimon/StopwatchSample;
       4: areturn

  public org.javasimon.Simon reset();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method reset:()Lorg/javasimon/Stopwatch;
       4: areturn
}
