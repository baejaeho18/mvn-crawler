Compiled from "CachedMonitorSource.java"
public abstract class org.javasimon.source.CachedMonitorSource<L, M extends org.javasimon.Simon, K> implements org.javasimon.source.MonitorSource<L, M> {
  private final org.javasimon.source.MonitorSource<L, M> delegate;

  private static final org.javasimon.source.CachedMonitorSource$MonitorInformation NULL_MONITOR_INFORMATION;

  private final java.util.Map<K, org.javasimon.source.CachedMonitorSource$MonitorInformation> monitorInformations;

  public org.javasimon.source.CachedMonitorSource(org.javasimon.source.MonitorSource<L, M>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field monitorInformations:Ljava/util/Map;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field delegate:Lorg/javasimon/source/MonitorSource;
      20: return

  protected abstract K getLocationKey(L);

  private org.javasimon.source.CachedMonitorSource$MonitorInformation getMonitorInformation(L);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method getLocationKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #4                  // Field monitorInformations:Ljava/util/Map;
      10: aload_2
      11: invokeinterface #7,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #8                  // class org/javasimon/source/CachedMonitorSource$MonitorInformation
      19: astore_3
      20: aload_3
      21: ifnonnull     75
      24: aload_0
      25: getfield      #5                  // Field delegate:Lorg/javasimon/source/MonitorSource;
      28: aload_1
      29: invokeinterface #9,  2            // InterfaceMethod org/javasimon/source/MonitorSource.isMonitored:(Ljava/lang/Object;)Z
      34: ifeq          59
      37: new           #8                  // class org/javasimon/source/CachedMonitorSource$MonitorInformation
      40: dup
      41: iconst_1
      42: aload_0
      43: getfield      #5                  // Field delegate:Lorg/javasimon/source/MonitorSource;
      46: aload_1
      47: invokeinterface #10,  2           // InterfaceMethod org/javasimon/source/MonitorSource.getMonitor:(Ljava/lang/Object;)Lorg/javasimon/Simon;
      52: invokespecial #11                 // Method org/javasimon/source/CachedMonitorSource$MonitorInformation."<init>":(ZLorg/javasimon/Simon;)V
      55: astore_3
      56: goto          63
      59: getstatic     #12                 // Field NULL_MONITOR_INFORMATION:Lorg/javasimon/source/CachedMonitorSource$MonitorInformation;
      62: astore_3
      63: aload_0
      64: getfield      #4                  // Field monitorInformations:Ljava/util/Map;
      67: aload_2
      68: aload_3
      69: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_3
      76: areturn

  private void removeMonitorInformation(L);
    Code:
       0: aload_0
       1: getfield      #4                  // Field monitorInformations:Ljava/util/Map;
       4: aload_0
       5: aload_1
       6: invokevirtual #6                  // Method getLocationKey:(Ljava/lang/Object;)Ljava/lang/Object;
       9: invokeinterface #14,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: return

  public boolean isMonitored(L);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method getMonitorInformation:(Ljava/lang/Object;)Lorg/javasimon/source/CachedMonitorSource$MonitorInformation;
       5: invokevirtual #16                 // Method org/javasimon/source/CachedMonitorSource$MonitorInformation.isMonitored:()Z
       8: ireturn

  private M getMonitorOnce(L);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method getMonitorInformation:(Ljava/lang/Object;)Lorg/javasimon/source/CachedMonitorSource$MonitorInformation;
       5: aload_0
       6: invokevirtual #17                 // Method getManager:()Lorg/javasimon/Manager;
       9: invokevirtual #18                 // Method org/javasimon/source/CachedMonitorSource$MonitorInformation.getMonitor:(Lorg/javasimon/Manager;)Lorg/javasimon/Simon;
      12: areturn

  public M getMonitor(L);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method getMonitorOnce:(Ljava/lang/Object;)Lorg/javasimon/Simon;
       5: astore_2
       6: aload_2
       7: ifnonnull     21
      10: aload_0
      11: aload_1
      12: invokespecial #20                 // Method removeMonitorInformation:(Ljava/lang/Object;)V
      15: aload_0
      16: aload_1
      17: invokespecial #19                 // Method getMonitorOnce:(Ljava/lang/Object;)Lorg/javasimon/Simon;
      20: astore_2
      21: aload_2
      22: areturn

  public org.javasimon.Manager getManager();
    Code:
       0: aload_0
       1: getfield      #5                  // Field delegate:Lorg/javasimon/source/MonitorSource;
       4: invokeinterface #21,  1           // InterfaceMethod org/javasimon/source/MonitorSource.getManager:()Lorg/javasimon/Manager;
       9: areturn

  static {};
    Code:
       0: new           #8                  // class org/javasimon/source/CachedMonitorSource$MonitorInformation
       3: dup
       4: iconst_0
       5: aconst_null
       6: invokespecial #11                 // Method org/javasimon/source/CachedMonitorSource$MonitorInformation."<init>":(ZLorg/javasimon/Simon;)V
       9: putstatic     #12                 // Field NULL_MONITOR_INFORMATION:Lorg/javasimon/source/CachedMonitorSource$MonitorInformation;
      12: return
}
