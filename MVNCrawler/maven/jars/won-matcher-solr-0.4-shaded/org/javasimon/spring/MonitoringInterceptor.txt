Compiled from "MonitoringInterceptor.java"
public class org.javasimon.spring.MonitoringInterceptor extends org.javasimon.spring.BasicMonitoringInterceptor {
  public static final java.lang.String EXCEPTION_TAG;

  private boolean tagByExceptionType;

  public org.javasimon.spring.MonitoringInterceptor(org.javasimon.source.StopwatchSource<org.aopalliance.intercept.MethodInvocation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/javasimon/spring/BasicMonitoringInterceptor."<init>":(Lorg/javasimon/source/StopwatchSource;)V
       5: return

  public org.javasimon.spring.MonitoringInterceptor(org.javasimon.Manager);
    Code:
       0: aload_0
       1: new           #2                  // class org/javasimon/spring/SpringStopwatchSource
       4: dup
       5: aload_1
       6: invokespecial #3                  // Method org/javasimon/spring/SpringStopwatchSource."<init>":(Lorg/javasimon/Manager;)V
       9: invokevirtual #4                  // Method org/javasimon/spring/SpringStopwatchSource.cache:()Lorg/javasimon/source/CachedStopwatchSource;
      12: invokespecial #1                  // Method org/javasimon/spring/BasicMonitoringInterceptor."<init>":(Lorg/javasimon/source/StopwatchSource;)V
      15: return

  public org.javasimon.spring.MonitoringInterceptor();
    Code:
       0: aload_0
       1: new           #2                  // class org/javasimon/spring/SpringStopwatchSource
       4: dup
       5: invokestatic  #5                  // Method org/javasimon/SimonManager.manager:()Lorg/javasimon/Manager;
       8: invokespecial #3                  // Method org/javasimon/spring/SpringStopwatchSource."<init>":(Lorg/javasimon/Manager;)V
      11: invokevirtual #4                  // Method org/javasimon/spring/SpringStopwatchSource.cache:()Lorg/javasimon/source/CachedStopwatchSource;
      14: invokespecial #1                  // Method org/javasimon/spring/BasicMonitoringInterceptor."<init>":(Lorg/javasimon/source/StopwatchSource;)V
      17: return

  public void setTagByExceptionType(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field tagByExceptionType:Z
       5: return

  protected java.lang.Object processInvoke(org.aopalliance.intercept.MethodInvocation, org.javasimon.Split) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod org/aopalliance/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
       6: areturn
       7: astore_3
       8: aload_2
       9: aload_0
      10: getfield      #6                  // Field tagByExceptionType:Z
      13: ifeq          26
      16: aload_3
      17: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #10                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      23: goto          28
      26: ldc           #11                 // String failed
      28: invokevirtual #12                 // Method org/javasimon/Split.stop:(Ljava/lang/String;)Lorg/javasimon/Split;
      31: pop
      32: aload_3
      33: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable
}
