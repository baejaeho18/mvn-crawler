Compiled from "MultiHostChooser.java"
class org.postgresql.hostchooser.MultiHostChooser$HostSpecByTargetServerTypeComparator implements java.util.Comparator<org.postgresql.hostchooser.GlobalHostStatusTracker$HostSpecStatus> {
  final org.postgresql.hostchooser.MultiHostChooser this$0;

  org.postgresql.hostchooser.MultiHostChooser$HostSpecByTargetServerTypeComparator(org.postgresql.hostchooser.MultiHostChooser);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/postgresql/hostchooser/MultiHostChooser;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public int compare(org.postgresql.hostchooser.GlobalHostStatusTracker$HostSpecStatus, org.postgresql.hostchooser.GlobalHostStatusTracker$HostSpecStatus);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field org/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus.status:Lorg/postgresql/hostchooser/HostStatus;
       5: aload_0
       6: getfield      #1                  // Field this$0:Lorg/postgresql/hostchooser/MultiHostChooser;
       9: invokestatic  #4                  // Method org/postgresql/hostchooser/MultiHostChooser.access$000:(Lorg/postgresql/hostchooser/MultiHostChooser;)Lorg/postgresql/hostchooser/HostRequirement;
      12: invokespecial #5                  // Method rank:(Lorg/postgresql/hostchooser/HostStatus;Lorg/postgresql/hostchooser/HostRequirement;)I
      15: istore_3
      16: aload_0
      17: aload_2
      18: getfield      #3                  // Field org/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus.status:Lorg/postgresql/hostchooser/HostStatus;
      21: aload_0
      22: getfield      #1                  // Field this$0:Lorg/postgresql/hostchooser/MultiHostChooser;
      25: invokestatic  #4                  // Method org/postgresql/hostchooser/MultiHostChooser.access$000:(Lorg/postgresql/hostchooser/MultiHostChooser;)Lorg/postgresql/hostchooser/HostRequirement;
      28: invokespecial #5                  // Method rank:(Lorg/postgresql/hostchooser/HostStatus;Lorg/postgresql/hostchooser/HostRequirement;)I
      31: istore        4
      33: iload_3
      34: iload         4
      36: if_icmpne     43
      39: iconst_0
      40: goto          54
      43: iload_3
      44: iload         4
      46: if_icmple     53
      49: iconst_m1
      50: goto          54
      53: iconst_1
      54: ireturn

  private int rank(org.postgresql.hostchooser.HostStatus, org.postgresql.hostchooser.HostRequirement);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field org/postgresql/hostchooser/HostStatus.ConnectFail:Lorg/postgresql/hostchooser/HostStatus;
       4: if_acmpne     9
       7: iconst_m1
       8: ireturn
       9: getstatic     #7                  // Field org/postgresql/hostchooser/MultiHostChooser$1.$SwitchMap$org$postgresql$hostchooser$HostRequirement:[I
      12: aload_2
      13: invokevirtual #8                  // Method org/postgresql/hostchooser/HostRequirement.ordinal:()I
      16: iaload
      17: tableswitch   { // 1 to 3
                     1: 44
                     2: 61
                     3: 78
               default: 106
          }
      44: aload_1
      45: getstatic     #9                  // Field org/postgresql/hostchooser/HostStatus.Master:Lorg/postgresql/hostchooser/HostStatus;
      48: if_acmpeq     55
      51: aload_1
      52: ifnonnull     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: aload_1
      62: getstatic     #10                 // Field org/postgresql/hostchooser/HostStatus.Slave:Lorg/postgresql/hostchooser/HostStatus;
      65: if_acmpeq     72
      68: aload_1
      69: ifnonnull     76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: aload_1
      79: getstatic     #10                 // Field org/postgresql/hostchooser/HostStatus.Slave:Lorg/postgresql/hostchooser/HostStatus;
      82: if_acmpeq     89
      85: aload_1
      86: ifnonnull     93
      89: iconst_2
      90: goto          105
      93: aload_1
      94: getstatic     #9                  // Field org/postgresql/hostchooser/HostStatus.Master:Lorg/postgresql/hostchooser/HostStatus;
      97: if_acmpne     104
     100: iconst_1
     101: goto          105
     104: iconst_0
     105: ireturn
     106: iconst_0
     107: ireturn

  public int compare(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class org/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus
       5: aload_2
       6: checkcast     #11                 // class org/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus
       9: invokevirtual #12                 // Method compare:(Lorg/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus;Lorg/postgresql/hostchooser/GlobalHostStatusTracker$HostSpecStatus;)I
      12: ireturn
}
