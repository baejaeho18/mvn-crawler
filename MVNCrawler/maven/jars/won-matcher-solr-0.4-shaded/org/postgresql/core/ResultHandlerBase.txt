Compiled from "ResultHandlerBase.java"
public class org.postgresql.core.ResultHandlerBase implements org.postgresql.core.ResultHandler {
  private java.sql.SQLException firstException;

  private java.sql.SQLException lastException;

  private java.sql.SQLWarning firstWarning;

  private java.sql.SQLWarning lastWarning;

  public org.postgresql.core.ResultHandlerBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void handleResultRows(org.postgresql.core.Query, org.postgresql.core.Field[], java.util.List<byte[][]>, org.postgresql.core.ResultCursor);
    Code:
       0: return

  public void handleCommandStatus(java.lang.String, int, long);
    Code:
       0: return

  public void secureProgress();
    Code:
       0: return

  public void handleWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #2                  // Field firstWarning:Ljava/sql/SQLWarning;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: aload_1
      10: dup_x1
      11: putfield      #3                  // Field lastWarning:Ljava/sql/SQLWarning;
      14: putfield      #2                  // Field firstWarning:Ljava/sql/SQLWarning;
      17: return
      18: aload_0
      19: getfield      #3                  // Field lastWarning:Ljava/sql/SQLWarning;
      22: aload_1
      23: invokevirtual #4                  // Method java/sql/SQLWarning.setNextException:(Ljava/sql/SQLException;)V
      26: aload_0
      27: aload_1
      28: putfield      #3                  // Field lastWarning:Ljava/sql/SQLWarning;
      31: return

  public void handleError(java.sql.SQLException);
    Code:
       0: aload_0
       1: getfield      #5                  // Field firstException:Ljava/sql/SQLException;
       4: ifnonnull     18
       7: aload_0
       8: aload_0
       9: aload_1
      10: dup_x1
      11: putfield      #6                  // Field lastException:Ljava/sql/SQLException;
      14: putfield      #5                  // Field firstException:Ljava/sql/SQLException;
      17: return
      18: aload_0
      19: getfield      #6                  // Field lastException:Ljava/sql/SQLException;
      22: aload_1
      23: invokevirtual #7                  // Method java/sql/SQLException.setNextException:(Ljava/sql/SQLException;)V
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field lastException:Ljava/sql/SQLException;
      31: return

  public void handleCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field firstException:Ljava/sql/SQLException;
       4: ifnull        12
       7: aload_0
       8: getfield      #5                  // Field firstException:Ljava/sql/SQLException;
      11: athrow
      12: return

  public java.sql.SQLException getException();
    Code:
       0: aload_0
       1: getfield      #5                  // Field firstException:Ljava/sql/SQLException;
       4: areturn

  public java.sql.SQLWarning getWarning();
    Code:
       0: aload_0
       1: getfield      #2                  // Field firstWarning:Ljava/sql/SQLWarning;
       4: areturn
}
