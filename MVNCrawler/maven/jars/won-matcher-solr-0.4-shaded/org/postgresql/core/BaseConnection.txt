Compiled from "BaseConnection.java"
public interface org.postgresql.core.BaseConnection extends org.postgresql.PGConnection,java.sql.Connection {
  public abstract void cancelQuery() throws java.sql.SQLException;

  public abstract java.sql.ResultSet execSQLQuery(java.lang.String) throws java.sql.SQLException;

  public abstract java.sql.ResultSet execSQLQuery(java.lang.String, int, int) throws java.sql.SQLException;

  public abstract void execSQLUpdate(java.lang.String) throws java.sql.SQLException;

  public abstract org.postgresql.core.QueryExecutor getQueryExecutor();

  public abstract org.postgresql.core.ReplicationProtocol getReplicationProtocol();

  public abstract java.lang.Object getObject(java.lang.String, java.lang.String, byte[]) throws java.sql.SQLException;

  public abstract org.postgresql.core.Encoding getEncoding() throws java.sql.SQLException;

  public abstract org.postgresql.core.TypeInfo getTypeInfo();

  public abstract boolean haveMinimumServerVersion(int);

  public abstract boolean haveMinimumServerVersion(org.postgresql.core.Version);

  public abstract byte[] encodeString(java.lang.String) throws java.sql.SQLException;

  public abstract java.lang.String escapeString(java.lang.String) throws java.sql.SQLException;

  public abstract boolean getStandardConformingStrings();

  public abstract org.postgresql.jdbc.TimestampUtils getTimestampUtils();

  public abstract java.util.logging.Logger getLogger();

  public abstract boolean getStringVarcharFlag();

  public abstract org.postgresql.core.TransactionState getTransactionState();

  public abstract boolean binaryTransferSend(int);

  public abstract boolean isColumnSanitiserDisabled();

  public abstract void addTimerTask(java.util.TimerTask, long);

  public abstract void purgeTimerTasks();

  public abstract org.postgresql.util.LruCache<org.postgresql.jdbc.FieldMetadata$Key, org.postgresql.jdbc.FieldMetadata> getFieldMetadataCache();

  public abstract org.postgresql.core.CachedQuery createQuery(java.lang.String, boolean, boolean, java.lang.String...) throws java.sql.SQLException;

  public abstract void setFlushCacheOnDeallocate(boolean);
}
