Compiled from "PgParameterMetaData.java"
public class org.postgresql.jdbc.PgParameterMetaData implements java.sql.ParameterMetaData {
  private final org.postgresql.core.BaseConnection _connection;

  private final int[] _oids;

  public org.postgresql.jdbc.PgParameterMetaData(org.postgresql.core.BaseConnection, int[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _connection:Lorg/postgresql/core/BaseConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _oids:[I
      14: return

  public java.lang.String getParameterClassName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: aload_0
       6: getfield      #2                  // Field _connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #5,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_0
      15: getfield      #3                  // Field _oids:[I
      18: iload_1
      19: iconst_1
      20: isub
      21: iaload
      22: invokeinterface #6,  2            // InterfaceMethod org/postgresql/core/TypeInfo.getJavaClass:(I)Ljava/lang/String;
      27: areturn

  public int getParameterCount();
    Code:
       0: aload_0
       1: getfield      #3                  // Field _oids:[I
       4: arraylength
       5: ireturn

  public int getParameterMode(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: iconst_1
       6: ireturn

  public int getParameterType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: aload_0
       6: getfield      #2                  // Field _connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #5,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_0
      15: getfield      #3                  // Field _oids:[I
      18: iload_1
      19: iconst_1
      20: isub
      21: iaload
      22: invokeinterface #8,  2            // InterfaceMethod org/postgresql/core/TypeInfo.getSQLType:(I)I
      27: ireturn

  public java.lang.String getParameterTypeName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: aload_0
       6: getfield      #2                  // Field _connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #5,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_0
      15: getfield      #3                  // Field _oids:[I
      18: iload_1
      19: iconst_1
      20: isub
      21: iaload
      22: invokeinterface #9,  2            // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(I)Ljava/lang/String;
      27: areturn

  public int getPrecision(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: iconst_0
       6: ireturn

  public int getScale(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: iconst_0
       6: ireturn

  public int isNullable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: iconst_2
       6: ireturn

  public boolean isSigned(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #4                  // Method checkParamIndex:(I)V
       5: aload_0
       6: getfield      #2                  // Field _connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #5,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_0
      15: getfield      #3                  // Field _oids:[I
      18: iload_1
      19: iconst_1
      20: isub
      21: iaload
      22: invokeinterface #10,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isSigned:(I)Z
      27: ireturn

  private void checkParamIndex(int) throws org.postgresql.util.PSQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     14
       5: iload_1
       6: aload_0
       7: getfield      #3                  // Field _oids:[I
      10: arraylength
      11: if_icmple     52
      14: new           #11                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc           #12                 // String The parameter index is out of range: {0}, number of parameters: {1}.
      20: iconst_2
      21: anewarray     #13                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_1
      27: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #3                  // Field _oids:[I
      37: arraylength
      38: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: invokestatic  #15                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #16                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      48: invokespecial #17                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      51: athrow
      52: return

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #19                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #18                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #19                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #20                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: new           #21                 // class java/sql/SQLException
      20: dup
      21: new           #22                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #24                 // String Cannot unwrap to
      30: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #28                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      46: athrow
}
