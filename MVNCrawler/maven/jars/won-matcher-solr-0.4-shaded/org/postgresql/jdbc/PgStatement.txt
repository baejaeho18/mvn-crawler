Compiled from "PgStatement.java"
public class org.postgresql.jdbc.PgStatement implements java.sql.Statement,org.postgresql.core.BaseStatement {
  private static final java.lang.String[] NO_RETURNING_COLUMNS;

  private static final boolean DEFAULT_FORCE_BINARY_TRANSFERS;

  private boolean forceBinaryTransfers;

  protected java.util.ArrayList<org.postgresql.core.Query> batchStatements;

  protected java.util.ArrayList<org.postgresql.core.ParameterList> batchParameters;

  protected final int resultsettype;

  protected final int concurrency;

  private final int rsHoldability;

  private boolean poolable;

  private boolean closeOnCompletion;

  protected int fetchdirection;

  private volatile java.util.TimerTask cancelTimerTask;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.postgresql.jdbc.PgStatement, java.util.TimerTask> CANCEL_TIMER_UPDATER;

  private volatile org.postgresql.jdbc.StatementCancelState statementState;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<org.postgresql.jdbc.PgStatement, org.postgresql.jdbc.StatementCancelState> STATE_UPDATER;

  protected boolean wantsGeneratedKeysOnce;

  public boolean wantsGeneratedKeysAlways;

  protected final org.postgresql.core.BaseConnection connection;

  protected java.sql.SQLWarning warnings;

  protected java.sql.SQLWarning lastWarning;

  protected int maxrows;

  protected int fetchSize;

  protected int timeout;

  protected boolean replaceProcessingEnabled;

  protected org.postgresql.jdbc.ResultWrapper result;

  protected org.postgresql.jdbc.ResultWrapper firstUnclosedResult;

  protected org.postgresql.jdbc.ResultWrapper generatedKeys;

  protected int m_prepareThreshold;

  protected int maxfieldSize;

  protected boolean isClosed;

  org.postgresql.jdbc.PgStatement(org.postgresql.jdbc.PgConnection, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
       8: putfield      #4                  // Field forceBinaryTransfers:Z
      11: aload_0
      12: aconst_null
      13: putfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field closeOnCompletion:Z
      26: aload_0
      27: sipush        1000
      30: putfield      #9                  // Field fetchdirection:I
      33: aload_0
      34: aconst_null
      35: putfield      #10                 // Field cancelTimerTask:Ljava/util/TimerTask;
      38: aload_0
      39: getstatic     #11                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      42: putfield      #12                 // Field statementState:Lorg/postgresql/jdbc/StatementCancelState;
      45: aload_0
      46: iconst_0
      47: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
      50: aload_0
      51: iconst_0
      52: putfield      #14                 // Field wantsGeneratedKeysAlways:Z
      55: aload_0
      56: aconst_null
      57: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
      60: aload_0
      61: aconst_null
      62: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      65: aload_0
      66: iconst_0
      67: putfield      #17                 // Field maxrows:I
      70: aload_0
      71: iconst_0
      72: putfield      #18                 // Field fetchSize:I
      75: aload_0
      76: iconst_0
      77: putfield      #19                 // Field timeout:I
      80: aload_0
      81: iconst_1
      82: putfield      #20                 // Field replaceProcessingEnabled:Z
      85: aload_0
      86: aconst_null
      87: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      90: aload_0
      91: aconst_null
      92: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      95: aload_0
      96: aconst_null
      97: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     100: aload_0
     101: iconst_0
     102: putfield      #24                 // Field maxfieldSize:I
     105: aload_0
     106: iconst_0
     107: putfield      #25                 // Field isClosed:Z
     110: aload_0
     111: aload_1
     112: putfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     115: aload_0
     116: dup
     117: getfield      #4                  // Field forceBinaryTransfers:Z
     120: aload_1
     121: invokevirtual #27                 // Method org/postgresql/jdbc/PgConnection.getForceBinary:()Z
     124: ior
     125: putfield      #4                  // Field forceBinaryTransfers:Z
     128: aload_0
     129: iload_2
     130: putfield      #28                 // Field resultsettype:I
     133: aload_0
     134: iload_3
     135: putfield      #29                 // Field concurrency:I
     138: aload_0
     139: aload_1
     140: invokevirtual #30                 // Method org/postgresql/jdbc/PgConnection.getDefaultFetchSize:()I
     143: invokevirtual #31                 // Method setFetchSize:(I)V
     146: aload_0
     147: aload_1
     148: invokevirtual #32                 // Method org/postgresql/jdbc/PgConnection.getPrepareThreshold:()I
     151: invokevirtual #33                 // Method setPrepareThreshold:(I)V
     154: aload_0
     155: iload         4
     157: putfield      #34                 // Field rsHoldability:I
     160: return

  public java.sql.ResultSet createResultSet(org.postgresql.core.Query, org.postgresql.core.Field[], java.util.List<byte[][]>, org.postgresql.core.ResultCursor) throws java.sql.SQLException;
    Code:
       0: new           #35                 // class org/postgresql/jdbc/PgResultSet
       3: dup
       4: aload_1
       5: aload_0
       6: aload_2
       7: aload_3
       8: aload         4
      10: aload_0
      11: invokevirtual #36                 // Method getMaxRows:()I
      14: aload_0
      15: invokevirtual #37                 // Method getMaxFieldSize:()I
      18: aload_0
      19: invokevirtual #38                 // Method getResultSetType:()I
      22: aload_0
      23: invokevirtual #39                 // Method getResultSetConcurrency:()I
      26: aload_0
      27: invokevirtual #40                 // Method getResultSetHoldability:()I
      30: invokespecial #41                 // Method org/postgresql/jdbc/PgResultSet."<init>":(Lorg/postgresql/core/Query;Lorg/postgresql/core/BaseStatement;[Lorg/postgresql/core/Field;Ljava/util/List;Lorg/postgresql/core/ResultCursor;IIIII)V
      33: astore        5
      35: aload         5
      37: aload_0
      38: invokevirtual #42                 // Method getFetchSize:()I
      41: invokevirtual #43                 // Method org/postgresql/jdbc/PgResultSet.setFetchSize:(I)V
      44: aload         5
      46: aload_0
      47: invokevirtual #44                 // Method getFetchDirection:()I
      50: invokevirtual #45                 // Method org/postgresql/jdbc/PgResultSet.setFetchDirection:(I)V
      53: aload         5
      55: areturn

  public org.postgresql.core.BaseConnection getPGConnection();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public java.lang.String getFetchingCursorName();
    Code:
       0: aconst_null
       1: areturn

  public int getFetchSize();
    Code:
       0: aload_0
       1: getfield      #18                 // Field fetchSize:I
       4: ireturn

  protected boolean wantsScrollableResultSet();
    Code:
       0: aload_0
       1: getfield      #28                 // Field resultsettype:I
       4: sipush        1003
       7: if_icmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean wantsHoldableResultSet();
    Code:
       0: aload_0
       1: getfield      #34                 // Field rsHoldability:I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #46                 // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: ifne          29
       9: new           #47                 // class org/postgresql/util/PSQLException
      12: dup
      13: ldc           #48                 // String No results were returned by the query.
      15: iconst_0
      16: anewarray     #49                 // class java/lang/Object
      19: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #51                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      25: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      33: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      36: ifnull        59
      39: new           #47                 // class org/postgresql/util/PSQLException
      42: dup
      43: ldc           #54                 // String Multiple ResultSets were returned by the query.
      45: iconst_0
      46: anewarray     #49                 // class java/lang/Object
      49: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      52: getstatic     #55                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      55: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      58: athrow
      59: aload_0
      60: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      63: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      66: areturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_4
       3: invokevirtual #46                 // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: pop
       7: aload_0
       8: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      11: astore_2
      12: aload_2
      13: ifnull        51
      16: aload_2
      17: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      20: ifnull        43
      23: new           #47                 // class org/postgresql/util/PSQLException
      26: dup
      27: ldc           #58                 // String A result was returned when none was expected.
      29: iconst_0
      30: anewarray     #49                 // class java/lang/Object
      33: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: getstatic     #55                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      39: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      42: athrow
      43: aload_2
      44: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      47: astore_2
      48: goto          12
      51: aload_0
      52: invokevirtual #59                 // Method getUpdateCount:()I
      55: ireturn

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #46                 // Method executeWithFlags:(Ljava/lang/String;I)Z
       6: ireturn

  public boolean executeWithFlags(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: getstatic     #60                 // Field NO_RETURNING_COLUMNS:[Ljava/lang/String;
       6: invokespecial #61                 // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
       9: ireturn

  private boolean executeCachedSql(java.lang.String, int, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #62,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
       9: astore        4
      11: iconst_0
      12: istore        5
      14: aload_0
      15: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      18: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      23: astore        6
      25: aload         6
      27: aload_1
      28: aload_0
      29: getfield      #20                 // Field replaceProcessingEnabled:Z
      32: iload         5
      34: aload_3
      35: invokeinterface #64,  5           // InterfaceMethod org/postgresql/core/QueryExecutor.createQueryKey:(Ljava/lang/String;ZZ[Ljava/lang/String;)Ljava/lang/Object;
      40: astore        7
      42: aload         4
      44: getstatic     #65                 // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED_CACHE_EVERYTING:Lorg/postgresql/jdbc/PreferQueryMode;
      47: if_acmpne     54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore        9
      57: iload         9
      59: ifeq          76
      62: aload         6
      64: aload         7
      66: invokeinterface #66,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.borrowQueryByKey:(Ljava/lang/Object;)Lorg/postgresql/core/CachedQuery;
      71: astore        8
      73: goto          87
      76: aload         6
      78: aload         7
      80: invokeinterface #67,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.createQueryByKey:(Ljava/lang/Object;)Lorg/postgresql/core/CachedQuery;
      85: astore        8
      87: aload_0
      88: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
      91: ifeq          128
      94: aload         8
      96: getfield      #68                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      99: invokeinterface #69,  1           // InterfaceMethod org/postgresql/core/Query.getSqlCommand:()Lorg/postgresql/core/SqlCommand;
     104: astore        10
     106: aload_0
     107: aload         10
     109: ifnull        124
     112: aload         10
     114: invokevirtual #70                 // Method org/postgresql/core/SqlCommand.isReturningKeywordPresent:()Z
     117: ifeq          124
     120: iconst_1
     121: goto          125
     124: iconst_0
     125: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
     128: aload_0
     129: aload         8
     131: iload_2
     132: invokevirtual #71                 // Method executeWithFlags:(Lorg/postgresql/core/CachedQuery;I)Z
     135: istore        10
     137: iload         9
     139: ifeq          173
     142: aload         6
     144: aload         8
     146: invokeinterface #72,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
     151: goto          173
     154: astore        11
     156: iload         9
     158: ifeq          170
     161: aload         6
     163: aload         8
     165: invokeinterface #72,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
     170: aload         11
     172: athrow
     173: iload         10
     175: ireturn
    Exception table:
       from    to  target type
         128   137   154   any
         154   156   154   any

  public boolean executeWithFlags(org.postgresql.core.CachedQuery, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: invokeinterface #62,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
      13: getstatic     #74                 // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED:Lorg/postgresql/jdbc/PreferQueryMode;
      16: invokevirtual #75                 // Method org/postgresql/jdbc/PreferQueryMode.compareTo:(Ljava/lang/Enum;)I
      19: ifge          28
      22: iload_2
      23: sipush        1024
      26: ior
      27: istore_2
      28: aload_0
      29: aload_1
      30: aconst_null
      31: iload_2
      32: invokevirtual #76                 // Method execute:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
      35: aload_0
      36: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      39: ifnull        56
      42: aload_0
      43: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      46: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      49: ifnull        56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn

  public boolean executeWithFlags(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: new           #47                 // class org/postgresql/util/PSQLException
       7: dup
       8: ldc           #77                 // String Can\'\'t use executeWithFlags(int) on a Statement.
      10: iconst_0
      11: anewarray     #49                 // class java/lang/Object
      14: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: getstatic     #78                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow

  protected void closeForNextExecution() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method clearWarnings:()V
       4: aload_0
       5: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
       8: ifnull        43
      11: aload_0
      12: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      15: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      18: astore_1
      19: aload_1
      20: ifnull        29
      23: aload_1
      24: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      29: aload_0
      30: aload_0
      31: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      34: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      37: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      40: goto          4
      43: aload_0
      44: aconst_null
      45: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      48: aload_0
      49: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      52: ifnull        82
      55: aload_0
      56: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      59: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      62: ifnull        77
      65: aload_0
      66: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      69: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      72: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      77: aload_0
      78: aconst_null
      79: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      82: return

  protected boolean isOneShotQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #81                 // Method org/postgresql/core/CachedQuery.increaseExecuteCount:()V
      10: aload_0
      11: getfield      #82                 // Field m_prepareThreshold:I
      14: ifeq          28
      17: aload_1
      18: invokevirtual #83                 // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
      21: aload_0
      22: getfield      #82                 // Field m_prepareThreshold:I
      25: if_icmpge     37
      28: aload_0
      29: invokevirtual #84                 // Method getForceBinaryTransfer:()Z
      32: ifne          37
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn

  protected final void execute(org.postgresql.core.CachedQuery, org.postgresql.core.ParameterList, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #85                 // Method executeInternal:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
       7: goto          62
      10: astore        4
      12: aload_1
      13: getfield      #68                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      16: invokeinterface #87,  1           // InterfaceMethod org/postgresql/core/Query.getSubqueries:()[Lorg/postgresql/core/Query;
      21: ifnonnull     43
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      28: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      33: aload         4
      35: invokeinterface #88,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.willHealOnRetry:(Ljava/sql/SQLException;)Z
      40: ifne          46
      43: aload         4
      45: athrow
      46: aload_1
      47: getfield      #68                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      50: invokeinterface #89,  1           // InterfaceMethod org/postgresql/core/Query.close:()V
      55: aload_0
      56: aload_1
      57: aload_2
      58: iload_3
      59: invokespecial #85                 // Method executeInternal:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
      62: return
    Exception table:
       from    to  target type
           0     7    10   Class java/sql/SQLException

  private void executeInternal(org.postgresql.core.CachedQuery, org.postgresql.core.ParameterList, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method closeForNextExecution:()V
       4: aload_0
       5: getfield      #18                 // Field fetchSize:I
       8: ifle          42
      11: aload_0
      12: invokevirtual #91                 // Method wantsScrollableResultSet:()Z
      15: ifne          42
      18: aload_0
      19: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      22: invokeinterface #92,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
      27: ifne          42
      30: aload_0
      31: invokevirtual #93                 // Method wantsHoldableResultSet:()Z
      34: ifne          42
      37: iload_3
      38: bipush        8
      40: ior
      41: istore_3
      42: aload_0
      43: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
      46: ifne          56
      49: aload_0
      50: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
      53: ifeq          72
      56: iload_3
      57: bipush        64
      59: ior
      60: istore_3
      61: iload_3
      62: iconst_4
      63: iand
      64: ifeq          72
      67: iload_3
      68: bipush        -5
      70: iand
      71: istore_3
      72: aload_0
      73: aload_1
      74: invokevirtual #94                 // Method isOneShotQuery:(Lorg/postgresql/core/CachedQuery;)Z
      77: ifeq          84
      80: iload_3
      81: iconst_1
      82: ior
      83: istore_3
      84: aload_0
      85: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      88: invokeinterface #92,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
      93: ifeq          101
      96: iload_3
      97: bipush        16
      99: ior
     100: istore_3
     101: aload_0
     102: getfield      #29                 // Field concurrency:I
     105: sipush        1007
     108: if_icmpeq     117
     111: iload_3
     112: sipush        256
     115: ior
     116: istore_3
     117: aload_1
     118: getfield      #68                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     121: astore        4
     123: aload         4
     125: invokeinterface #95,  1           // InterfaceMethod org/postgresql/core/Query.isEmpty:()Z
     130: ifeq          138
     133: iload_3
     134: bipush        16
     136: ior
     137: istore_3
     138: aload         4
     140: invokeinterface #96,  1           // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     145: ifne          224
     148: aload_0
     149: getfield      #4                  // Field forceBinaryTransfers:Z
     152: ifeq          224
     155: iload_3
     156: sipush        1024
     159: iand
     160: ifne          224
     163: iload_3
     164: bipush        32
     166: ior
     167: istore        5
     169: new           #97                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     172: dup
     173: aload_0
     174: invokespecial #98                 // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     177: astore        6
     179: aload_0
     180: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     183: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     188: aload         4
     190: aload_2
     191: aload         6
     193: iconst_0
     194: iconst_0
     195: iload         5
     197: invokeinterface #99,  7           // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     202: aload         6
     204: invokevirtual #100                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     207: astore        7
     209: aload         7
     211: ifnull        224
     214: aload         7
     216: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     219: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     224: new           #97                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     227: dup
     228: aload_0
     229: invokespecial #98                 // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     232: astore        5
     234: aload_0
     235: aconst_null
     236: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     239: aload_0
     240: invokespecial #101                // Method startTimer:()V
     243: aload_0
     244: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     247: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     252: aload         4
     254: aload_2
     255: aload         5
     257: aload_0
     258: getfield      #17                 // Field maxrows:I
     261: aload_0
     262: getfield      #18                 // Field fetchSize:I
     265: iload_3
     266: invokeinterface #99,  7           // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     271: aload_0
     272: invokespecial #102                // Method killTimerTask:()V
     275: goto          287
     278: astore        8
     280: aload_0
     281: invokespecial #102                // Method killTimerTask:()V
     284: aload         8
     286: athrow
     287: aload_0
     288: aload_0
     289: aload         5
     291: invokevirtual #100                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     294: dup_x1
     295: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
     298: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     301: aload_0
     302: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
     305: ifne          315
     308: aload_0
     309: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     312: ifeq          346
     315: aload_0
     316: aload_0
     317: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     320: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     323: aload_0
     324: aload_0
     325: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     328: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
     331: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     334: aload_0
     335: getfield      #13                 // Field wantsGeneratedKeysOnce:Z
     338: ifeq          346
     341: aload_0
     342: iconst_0
     343: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
     346: return
    Exception table:
       from    to  target type
         239   271   278   any
         278   280   278   any

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: return

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
       8: ifnull        21
      11: aload_0
      12: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      15: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      18: ifnull        23
      21: iconst_m1
      22: ireturn
      23: aload_0
      24: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      27: invokevirtual #103                // Method org/postgresql/jdbc/ResultWrapper.getUpdateCount:()I
      30: ireturn

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
       4: ifnonnull     9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: aload_0
      11: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      14: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      17: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      20: aload_0
      21: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      24: aload_0
      25: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      28: if_acmpeq     67
      31: aload_0
      32: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      35: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      38: ifnull        53
      41: aload_0
      42: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      45: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      48: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      53: aload_0
      54: aload_0
      55: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      58: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      61: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      64: goto          20
      67: aload_0
      68: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      71: ifnull        88
      74: aload_0
      75: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      78: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      81: ifnull        88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field maxrows:I
       8: ireturn

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: iload_1
       5: ifge          28
       8: new           #47                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #104                // String Maximum number of rows must be a value grater than or equal to 0.
      14: iconst_0
      15: anewarray     #49                 // class java/lang/Object
      18: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #105                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #17                 // Field maxrows:I
      33: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: putfield      #20                 // Field replaceProcessingEnabled:Z
       9: return

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #106                // Method getQueryTimeoutMs:()I
       4: sipush        1000
       7: idiv
       8: ireturn

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: sipush        1000
       5: imul
       6: invokevirtual #107                // Method setQueryTimeoutMs:(I)V
       9: return

  public int getQueryTimeoutMs() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field timeout:I
       8: ireturn

  public void setQueryTimeoutMs(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: iload_1
       5: ifge          28
       8: new           #47                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #108                // String Query timeout must be a value greater than or equals to 0.
      14: iconst_0
      15: anewarray     #49                 // class java/lang/Object
      18: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #105                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #19                 // Field timeout:I
      33: return

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       4: ifnonnull     20
       7: aload_0
       8: aload_1
       9: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
      12: aload_0
      13: aload_1
      14: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      17: goto          33
      20: aload_0
      21: getfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      24: aload_1
      25: invokevirtual #109                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      28: aload_0
      29: aload_1
      30: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      33: return

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       8: areturn

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field maxfieldSize:I
       4: ireturn

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: iload_1
       5: ifge          28
       8: new           #47                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #110                // String The maximum field size must be a value greater than or equal to 0.
      14: iconst_0
      15: anewarray     #49                 // class java/lang/Object
      18: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #105                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #24                 // Field maxfieldSize:I
      33: return

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #15                 // Field warnings:Ljava/sql/SQLWarning;
       5: aload_0
       6: aconst_null
       7: putfield      #16                 // Field lastWarning:Ljava/sql/SQLWarning;
      10: return

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
       8: ifnonnull     13
      11: aconst_null
      12: areturn
      13: aload_0
      14: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      17: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      20: areturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field isClosed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #111                // Method cleanupTimer:()Z
      12: pop
      13: aload_0
      14: invokevirtual #90                 // Method closeForNextExecution:()V
      17: aload_0
      18: iconst_1
      19: putfield      #25                 // Field isClosed:Z
      22: return

  public long getLastOID() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
       8: ifnonnull     13
      11: lconst_0
      12: lreturn
      13: aload_0
      14: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      17: invokevirtual #112                // Method org/postgresql/jdbc/ResultWrapper.getInsertOID:()J
      20: lreturn

  public void setPrepareThreshold(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: iload_1
       5: ifge          15
       8: aload_0
       9: iconst_1
      10: putfield      #4                  // Field forceBinaryTransfers:Z
      13: iconst_1
      14: istore_1
      15: aload_0
      16: iload_1
      17: putfield      #82                 // Field m_prepareThreshold:I
      20: return

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #82                 // Field m_prepareThreshold:I
       4: ireturn

  public void setUseServerPrepare(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: ifeq          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokevirtual #33                 // Method setPrepareThreshold:(I)V
      13: return

  public boolean isUseServerPrepare();
    Code:
       0: iconst_0
       1: ireturn

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field isClosed:Z
       4: ifeq          27
       7: new           #47                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc           #113                // String This statement has been closed.
      13: iconst_0
      14: anewarray     #49                 // class java/lang/Object
      17: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      20: getstatic     #114                // Field org/postgresql/util/PSQLState.OBJECT_NOT_IN_STATE:Lorg/postgresql/util/PSQLState;
      23: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      26: athrow
      27: return

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
       8: ifnonnull     33
      11: aload_0
      12: new           #115                // class java/util/ArrayList
      15: dup
      16: invokespecial #116                // Method java/util/ArrayList."<init>":()V
      19: putfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      22: aload_0
      23: new           #115                // class java/util/ArrayList
      26: dup
      27: invokespecial #116                // Method java/util/ArrayList."<init>":()V
      30: putfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      33: iconst_0
      34: istore_2
      35: aload_0
      36: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      39: aload_1
      40: aload_0
      41: getfield      #20                 // Field replaceProcessingEnabled:Z
      44: iload_2
      45: iconst_0
      46: anewarray     #117                // class java/lang/String
      49: invokeinterface #118,  5          // InterfaceMethod org/postgresql/core/BaseConnection.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      54: astore_3
      55: aload_0
      56: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      59: aload_3
      60: getfield      #68                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      63: invokevirtual #119                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      71: aconst_null
      72: invokevirtual #119                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      75: pop
      76: return

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
       4: ifnull        21
       7: aload_0
       8: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      11: invokevirtual #120                // Method java/util/ArrayList.clear:()V
      14: aload_0
      15: getfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      18: invokevirtual #120                // Method java/util/ArrayList.clear:()V
      21: return

  protected org.postgresql.jdbc.BatchResultHandler createBatchHandler(org.postgresql.core.Query[], org.postgresql.core.ParameterList[]);
    Code:
       0: new           #121                // class org/postgresql/jdbc/BatchResultHandler
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_0
       8: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
      11: invokespecial #122                // Method org/postgresql/jdbc/BatchResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;[Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;Z)V
      14: areturn

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #90                 // Method closeForNextExecution:()V
       8: aload_0
       9: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      12: ifnull        25
      15: aload_0
      16: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      19: invokevirtual #123                // Method java/util/ArrayList.isEmpty:()Z
      22: ifeq          29
      25: iconst_0
      26: newarray       int
      28: areturn
      29: aload_0
      30: invokevirtual #124                // Method transformQueriesAndParameters:()V
      33: aload_0
      34: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      37: iconst_0
      38: anewarray     #125                // class org/postgresql/core/Query
      41: invokevirtual #126                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      44: checkcast     #127                // class "[Lorg/postgresql/core/Query;"
      47: astore_1
      48: aload_0
      49: getfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      52: iconst_0
      53: anewarray     #128                // class org/postgresql/core/ParameterList
      56: invokevirtual #126                // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      59: checkcast     #129                // class "[Lorg/postgresql/core/ParameterList;"
      62: astore_2
      63: aload_0
      64: getfield      #5                  // Field batchStatements:Ljava/util/ArrayList;
      67: invokevirtual #120                // Method java/util/ArrayList.clear:()V
      70: aload_0
      71: getfield      #6                  // Field batchParameters:Ljava/util/ArrayList;
      74: invokevirtual #120                // Method java/util/ArrayList.clear:()V
      77: iconst_0
      78: istore_3
      79: iconst_0
      80: istore        4
      82: aload_0
      83: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
      86: ifeq          96
      89: sipush        320
      92: istore_3
      93: goto          98
      96: iconst_4
      97: istore_3
      98: aload_0
      99: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     102: invokeinterface #62,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
     107: astore        5
     109: aload         5
     111: getstatic     #130                // Field org/postgresql/jdbc/PreferQueryMode.SIMPLE:Lorg/postgresql/jdbc/PreferQueryMode;
     114: if_acmpeq     131
     117: aload         5
     119: getstatic     #131                // Field org/postgresql/jdbc/PreferQueryMode.EXTENDED_FOR_PREPARED:Lorg/postgresql/jdbc/PreferQueryMode;
     122: if_acmpne     137
     125: aload_2
     126: iconst_0
     127: aaload
     128: ifnonnull     137
     131: iload_3
     132: sipush        1024
     135: ior
     136: istore_3
     137: aload_1
     138: arraylength
     139: iconst_1
     140: if_icmple     156
     143: aload_1
     144: iconst_0
     145: aaload
     146: aload_1
     147: iconst_1
     148: aaload
     149: if_acmpne     156
     152: iconst_1
     153: goto          157
     156: iconst_0
     157: istore        6
     159: iload         6
     161: ifeq          172
     164: aload_0
     165: aconst_null
     166: invokevirtual #94                 // Method isOneShotQuery:(Lorg/postgresql/core/CachedQuery;)Z
     169: ifeq          179
     172: iload_3
     173: iconst_1
     174: ior
     175: istore_3
     176: goto          215
     179: aload_0
     180: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     183: ifne          191
     186: iload         6
     188: ifeq          206
     191: aload_1
     192: iconst_0
     193: aaload
     194: invokeinterface #96,  1           // InterfaceMethod org/postgresql/core/Query.isStatementDescribed:()Z
     199: ifne          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: istore        4
     209: iload_3
     210: sipush        512
     213: ior
     214: istore_3
     215: aload_0
     216: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     219: invokeinterface #92,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getAutoCommit:()Z
     224: ifeq          232
     227: iload_3
     228: bipush        16
     230: ior
     231: istore_3
     232: aload_0
     233: aload_1
     234: aload_2
     235: invokevirtual #132                // Method createBatchHandler:([Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;)Lorg/postgresql/jdbc/BatchResultHandler;
     238: astore        7
     240: iload         4
     242: ifne          252
     245: aload_0
     246: getfield      #4                  // Field forceBinaryTransfers:Z
     249: ifeq          341
     252: iload_3
     253: sipush        1024
     256: iand
     257: ifne          341
     260: iload_3
     261: bipush        32
     263: ior
     264: istore        8
     266: new           #97                 // class org/postgresql/jdbc/PgStatement$StatementResultHandler
     269: dup
     270: aload_0
     271: invokespecial #98                 // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
     274: astore        9
     276: aload_0
     277: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     280: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     285: aload_1
     286: iconst_0
     287: aaload
     288: aload_2
     289: iconst_0
     290: aaload
     291: aload         9
     293: iconst_0
     294: iconst_0
     295: iload         8
     297: invokeinterface #99,  7           // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
     302: goto          319
     305: astore        10
     307: aload         7
     309: aload         10
     311: invokevirtual #133                // Method org/postgresql/jdbc/BatchResultHandler.handleError:(Ljava/sql/SQLException;)V
     314: aload         7
     316: invokevirtual #134                // Method org/postgresql/jdbc/BatchResultHandler.handleCompletion:()V
     319: aload         9
     321: invokevirtual #100                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
     324: astore        10
     326: aload         10
     328: ifnull        341
     331: aload         10
     333: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     336: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     341: aload_0
     342: aconst_null
     343: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     346: aload_0
     347: invokespecial #101                // Method startTimer:()V
     350: aload_0
     351: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     354: invokeinterface #63,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
     359: aload_1
     360: aload_2
     361: aload         7
     363: aload_0
     364: getfield      #17                 // Field maxrows:I
     367: aload_0
     368: getfield      #18                 // Field fetchSize:I
     371: iload_3
     372: invokeinterface #135,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:([Lorg/postgresql/core/Query;[Lorg/postgresql/core/ParameterList;Lorg/postgresql/jdbc/BatchResultHandler;III)V
     377: aload_0
     378: invokespecial #102                // Method killTimerTask:()V
     381: aload_0
     382: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     385: ifeq          439
     388: aload_0
     389: new           #136                // class org/postgresql/jdbc/ResultWrapper
     392: dup
     393: aload         7
     395: invokevirtual #137                // Method org/postgresql/jdbc/BatchResultHandler.getGeneratedKeys:()Ljava/sql/ResultSet;
     398: invokespecial #138                // Method org/postgresql/jdbc/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     401: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     404: goto          439
     407: astore        11
     409: aload_0
     410: invokespecial #102                // Method killTimerTask:()V
     413: aload_0
     414: getfield      #14                 // Field wantsGeneratedKeysAlways:Z
     417: ifeq          436
     420: aload_0
     421: new           #136                // class org/postgresql/jdbc/ResultWrapper
     424: dup
     425: aload         7
     427: invokevirtual #137                // Method org/postgresql/jdbc/BatchResultHandler.getGeneratedKeys:()Ljava/sql/ResultSet;
     430: invokespecial #138                // Method org/postgresql/jdbc/ResultWrapper."<init>":(Ljava/sql/ResultSet;)V
     433: putfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
     436: aload         11
     438: athrow
     439: aload         7
     441: invokevirtual #139                // Method org/postgresql/jdbc/BatchResultHandler.getUpdateCount:()[I
     444: areturn
    Exception table:
       from    to  target type
         276   302   305   Class java/sql/SQLException
         346   377   407   any
         407   409   407   any

  public void cancel() throws java.sql.SQLException;
    Code:
       0: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: getstatic     #141                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
       7: getstatic     #142                // Field org/postgresql/jdbc/StatementCancelState.CANCELING:Lorg/postgresql/jdbc/StatementCancelState;
      10: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifne          17
      16: return
      17: aload_0
      18: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      21: dup
      22: astore_1
      23: monitorenter
      24: aload_0
      25: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      28: invokeinterface #144,  1          // InterfaceMethod org/postgresql/core/BaseConnection.cancelQuery:()V
      33: aload_1
      34: monitorexit
      35: goto          43
      38: astore_2
      39: aload_1
      40: monitorexit
      41: aload_2
      42: athrow
      43: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      46: aload_0
      47: getstatic     #145                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      50: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      53: aload_0
      54: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      57: dup
      58: astore_1
      59: monitorenter
      60: aload_0
      61: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      64: invokevirtual #147                // Method java/lang/Object.notifyAll:()V
      67: aload_1
      68: monitorexit
      69: goto          77
      72: astore_3
      73: aload_1
      74: monitorexit
      75: aload_3
      76: athrow
      77: goto          124
      80: astore        4
      82: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      85: aload_0
      86: getstatic     #145                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      89: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      92: aload_0
      93: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      96: dup
      97: astore        5
      99: monitorenter
     100: aload_0
     101: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
     104: invokevirtual #147                // Method java/lang/Object.notifyAll:()V
     107: aload         5
     109: monitorexit
     110: goto          121
     113: astore        6
     115: aload         5
     117: monitorexit
     118: aload         6
     120: athrow
     121: aload         4
     123: athrow
     124: return
    Exception table:
       from    to  target type
          24    35    38   any
          38    41    38   any
          60    69    72   any
          72    75    72   any
          17    43    80   any
         100   110   113   any
         113   118   113   any
          80    82    80   any

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: areturn

  public int getFetchDirection();
    Code:
       0: aload_0
       1: getfield      #9                  // Field fetchdirection:I
       4: ireturn

  public int getResultSetConcurrency();
    Code:
       0: aload_0
       1: getfield      #29                 // Field concurrency:I
       4: ireturn

  public int getResultSetType();
    Code:
       0: aload_0
       1: getfield      #28                 // Field resultsettype:I
       4: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: tableswitch   { // 1000 to 1002
                  1000: 28
                  1001: 28
                  1002: 28
               default: 36
          }
      28: aload_0
      29: iload_1
      30: putfield      #9                  // Field fetchdirection:I
      33: goto          63
      36: new           #47                 // class org/postgresql/util/PSQLException
      39: dup
      40: ldc           #148                // String Invalid fetch direction constant: {0}.
      42: iconst_1
      43: anewarray     #49                 // class java/lang/Object
      46: dup
      47: iconst_0
      48: iload_1
      49: invokestatic  #149                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: getstatic     #105                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      59: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      62: athrow
      63: return

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: iload_1
       5: ifge          28
       8: new           #47                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #150                // String Fetch size must be a value greater to or equal to 0.
      14: iconst_0
      15: anewarray     #49                 // class java/lang/Object
      18: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #105                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      24: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: iload_1
      30: putfield      #18                 // Field fetchSize:I
      33: return

  private void startTimer();
    Code:
       0: aload_0
       1: invokespecial #111                // Method cleanupTimer:()Z
       4: pop
       5: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       8: aload_0
       9: getstatic     #141                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
      12: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      15: aload_0
      16: getfield      #19                 // Field timeout:I
      19: ifne          23
      22: return
      23: new           #151                // class org/postgresql/jdbc/PgStatement$1
      26: dup
      27: aload_0
      28: invokespecial #152                // Method org/postgresql/jdbc/PgStatement$1."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
      31: astore_1
      32: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      35: aload_0
      36: aload_1
      37: invokevirtual #146                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      44: aload_1
      45: aload_0
      46: getfield      #19                 // Field timeout:I
      49: i2l
      50: invokeinterface #153,  4          // InterfaceMethod org/postgresql/core/BaseConnection.addTimerTask:(Ljava/util/TimerTask;J)V
      55: return

  private boolean cleanupTimer();
    Code:
       0: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #154                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #155                // class java/util/TimerTask
      10: astore_1
      11: aload_1
      12: ifnonnull     28
      15: aload_0
      16: getfield      #19                 // Field timeout:I
      19: ifne          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn
      28: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: aload_0
      32: aload_1
      33: aconst_null
      34: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      37: ifne          42
      40: iconst_0
      41: ireturn
      42: aload_1
      43: invokevirtual #156                // Method java/util/TimerTask.cancel:()Z
      46: pop
      47: aload_0
      48: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      51: invokeinterface #157,  1          // InterfaceMethod org/postgresql/core/BaseConnection.purgeTimerTasks:()V
      56: iconst_1
      57: ireturn

  private void killTimerTask();
    Code:
       0: aload_0
       1: invokespecial #111                // Method cleanupTimer:()Z
       4: istore_1
       5: iload_1
       6: ifeq          26
       9: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: aload_0
      13: getstatic     #141                // Field org/postgresql/jdbc/StatementCancelState.IN_QUERY:Lorg/postgresql/jdbc/StatementCancelState;
      16: getstatic     #11                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      19: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      22: ifeq          26
      25: return
      26: iconst_0
      27: istore_2
      28: getstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: aload_0
      32: getstatic     #145                // Field org/postgresql/jdbc/StatementCancelState.CANCELLED:Lorg/postgresql/jdbc/StatementCancelState;
      35: getstatic     #11                 // Field org/postgresql/jdbc/StatementCancelState.IDLE:Lorg/postgresql/jdbc/StatementCancelState;
      38: invokevirtual #143                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifne          83
      44: aload_0
      45: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      48: dup
      49: astore_3
      50: monitorenter
      51: aload_0
      52: getfield      #26                 // Field connection:Lorg/postgresql/core/BaseConnection;
      55: ldc2_w        #158                // long 10l
      58: invokevirtual #160                // Method java/lang/Object.wait:(J)V
      61: goto          68
      64: astore        4
      66: iconst_1
      67: istore_2
      68: aload_3
      69: monitorexit
      70: goto          80
      73: astore        5
      75: aload_3
      76: monitorexit
      77: aload         5
      79: athrow
      80: goto          28
      83: iload_2
      84: ifeq          93
      87: invokestatic  #162                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      90: invokevirtual #163                // Method java/lang/Thread.interrupt:()V
      93: return
    Exception table:
       from    to  target type
          51    61    64   Class java/lang/InterruptedException
          51    70    73   any
          73    77    73   any

  protected boolean getForceBinaryTransfer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field forceBinaryTransfers:Z
       4: ireturn

  public long getLargeUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #165                // String getLargeUpdateCount
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public void setLargeMaxRows(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #167                // String setLargeMaxRows
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long getLargeMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #168                // String getLargeMaxRows
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long[] executeLargeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #169                // String executeLargeBatch
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long executeLargeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #170                // String executeLargeUpdate
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long executeLargeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #170                // String executeLargeUpdate
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long executeLargeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #170                // String executeLargeUpdate
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long executeLargeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #170                // String executeLargeUpdate
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public long executeLargeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc           #170                // String executeLargeUpdate
       6: invokestatic  #166                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
       9: athrow

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field isClosed:Z
       4: ireturn

  public void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: putfield      #171                // Field poolable:Z
       9: return

  public boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #171                // Field poolable:Z
       8: ireturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #172                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #164                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #172                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #173                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: new           #86                 // class java/sql/SQLException
      20: dup
      21: new           #174                // class java/lang/StringBuilder
      24: dup
      25: invokespecial #175                // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #176                // String Cannot unwrap to
      30: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #178                // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #177                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #179                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #180                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      46: athrow

  public void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #7                  // Field closeOnCompletion:Z
       5: return

  public boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeOnCompletion:Z
       4: ireturn

  protected void checkCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field closeOnCompletion:Z
       4: ifne          8
       7: return
       8: aload_0
       9: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      12: astore_1
      13: aload_1
      14: ifnull        45
      17: aload_1
      18: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      21: ifnull        37
      24: aload_1
      25: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      28: invokeinterface #181,  1          // InterfaceMethod java/sql/ResultSet.isClosed:()Z
      33: ifne          37
      36: return
      37: aload_1
      38: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      41: astore_1
      42: goto          13
      45: aload_0
      46: iconst_0
      47: putfield      #7                  // Field closeOnCompletion:Z
      50: aload_0
      51: invokevirtual #182                // Method close:()V
      54: aload_0
      55: iconst_1
      56: putfield      #7                  // Field closeOnCompletion:Z
      59: goto          70
      62: astore_2
      63: aload_0
      64: iconst_1
      65: putfield      #7                  // Field closeOnCompletion:Z
      68: aload_2
      69: athrow
      70: return
    Exception table:
       from    to  target type
          50    54    62   any

  public boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpne     34
       5: aload_0
       6: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
       9: ifnull        34
      12: aload_0
      13: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      16: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      19: ifnull        34
      22: aload_0
      23: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      26: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      29: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      34: aload_0
      35: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      38: ifnull        52
      41: aload_0
      42: aload_0
      43: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      46: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      49: putfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      52: iload_1
      53: iconst_3
      54: if_icmpne     104
      57: aload_0
      58: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      61: aload_0
      62: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      65: if_acmpeq     104
      68: aload_0
      69: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      72: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      75: ifnull        90
      78: aload_0
      79: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      82: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      85: invokeinterface #80,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      90: aload_0
      91: aload_0
      92: getfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
      95: invokevirtual #53                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      98: putfield      #22                 // Field firstUnclosedResult:Lorg/postgresql/jdbc/ResultWrapper;
     101: goto          57
     104: aload_0
     105: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     108: ifnull        125
     111: aload_0
     112: getfield      #21                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
     115: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
     118: ifnull        125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: ireturn

  public java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
       8: ifnull        21
      11: aload_0
      12: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      15: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      18: ifnonnull     37
      21: aload_0
      22: iconst_0
      23: anewarray     #184                // class org/postgresql/core/Field
      26: new           #115                // class java/util/ArrayList
      29: dup
      30: invokespecial #116                // Method java/util/ArrayList."<init>":()V
      33: invokevirtual #185                // Method createDriverResultSet:([Lorg/postgresql/core/Field;Ljava/util/List;)Ljava/sql/ResultSet;
      36: areturn
      37: aload_0
      38: getfield      #23                 // Field generatedKeys:Lorg/postgresql/jdbc/ResultWrapper;
      41: invokevirtual #56                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      44: areturn

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_2
       2: if_icmpne     11
       5: aload_0
       6: aload_1
       7: invokevirtual #186                // Method executeUpdate:(Ljava/lang/String;)I
      10: ireturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #187                // class "[Ljava/lang/String;"
      17: invokevirtual #188                // Method executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I
      20: ireturn

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #186                // Method executeUpdate:(Ljava/lang/String;)I
      14: ireturn
      15: new           #47                 // class org/postgresql/util/PSQLException
      18: dup
      19: ldc           #189                // String Returning autogenerated keys by column index is not supported.
      21: iconst_0
      22: anewarray     #49                 // class java/lang/Object
      25: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: getstatic     #190                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      31: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      34: athrow

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #186                // Method executeUpdate:(Ljava/lang/String;)I
      14: ireturn
      15: aload_0
      16: iconst_1
      17: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
      20: aload_0
      21: aload_1
      22: iconst_0
      23: aload_2
      24: invokespecial #61                 // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
      27: ifne          30
      30: aload_0
      31: invokevirtual #59                 // Method getUpdateCount:()I
      34: ireturn

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_2
       2: if_icmpne     11
       5: aload_0
       6: aload_1
       7: invokevirtual #191                // Method execute:(Ljava/lang/String;)Z
      10: ireturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #187                // class "[Ljava/lang/String;"
      17: invokevirtual #192                // Method execute:(Ljava/lang/String;[Ljava/lang/String;)Z
      20: ireturn

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #191                // Method execute:(Ljava/lang/String;)Z
      14: ireturn
      15: new           #47                 // class org/postgresql/util/PSQLException
      18: dup
      19: ldc           #189                // String Returning autogenerated keys by column index is not supported.
      21: iconst_0
      22: anewarray     #49                 // class java/lang/Object
      25: invokestatic  #50                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      28: getstatic     #190                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      31: invokespecial #52                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      34: athrow

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #191                // Method execute:(Ljava/lang/String;)Z
      14: ireturn
      15: aload_0
      16: iconst_1
      17: putfield      #13                 // Field wantsGeneratedKeysOnce:Z
      20: aload_0
      21: aload_1
      22: iconst_0
      23: aload_2
      24: invokespecial #61                 // Method executeCachedSql:(Ljava/lang/String;I[Ljava/lang/String;)Z
      27: ireturn

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #34                 // Field rsHoldability:I
       4: ireturn

  public java.sql.ResultSet createDriverResultSet(org.postgresql.core.Field[], java.util.List<byte[][]>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: aload_2
       4: aconst_null
       5: invokevirtual #193                // Method createResultSet:(Lorg/postgresql/core/Query;[Lorg/postgresql/core/Field;Ljava/util/List;Lorg/postgresql/core/ResultCursor;)Ljava/sql/ResultSet;
       8: areturn

  protected void transformQueriesAndParameters() throws java.sql.SQLException;
    Code:
       0: return

  static java.util.concurrent.atomic.AtomicReferenceFieldUpdater access$000();
    Code:
       0: getstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: anewarray     #117                // class java/lang/String
       4: putstatic     #60                 // Field NO_RETURNING_COLUMNS:[Ljava/lang/String;
       7: ldc           #194                // String org.postgresql.forceBinary
       9: invokestatic  #195                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
      12: putstatic     #3                  // Field DEFAULT_FORCE_BINARY_TRANSFERS:Z
      15: ldc           #196                // class org/postgresql/jdbc/PgStatement
      17: ldc           #155                // class java/util/TimerTask
      19: ldc           #197                // String cancelTimerTask
      21: invokestatic  #198                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: putstatic     #1                  // Field CANCEL_TIMER_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      27: ldc           #196                // class org/postgresql/jdbc/PgStatement
      29: ldc           #199                // class org/postgresql/jdbc/StatementCancelState
      31: ldc           #200                // String statementState
      33: invokestatic  #198                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      36: putstatic     #140                // Field STATE_UPDATER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: return
}
