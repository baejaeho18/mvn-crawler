Compiled from "PgPreparedStatement.java"
class org.postgresql.jdbc.PgPreparedStatement extends org.postgresql.jdbc.PgStatement implements java.sql.PreparedStatement {
  protected final org.postgresql.core.CachedQuery preparedQuery;

  protected final org.postgresql.core.ParameterList preparedParameters;

  protected boolean adjustIndex;

  protected boolean outParmBeforeFunc;

  private java.util.TimeZone defaultTimeZone;

  org.postgresql.jdbc.PgPreparedStatement(org.postgresql.jdbc.PgConnection, java.lang.String, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_1
       3: aload_2
       4: invokevirtual #1                  // Method org/postgresql/jdbc/PgConnection.borrowQuery:(Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
       7: iload_3
       8: iload         4
      10: iload         5
      12: invokespecial #2                  // Method "<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/core/CachedQuery;III)V
      15: return

  org.postgresql.jdbc.PgPreparedStatement(org.postgresql.jdbc.PgConnection, org.postgresql.core.CachedQuery, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_3
       3: iload         4
       5: iload         5
       7: invokespecial #3                  // Method org/postgresql/jdbc/PgStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;III)V
      10: aload_0
      11: iconst_0
      12: putfield      #4                  // Field adjustIndex:Z
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field outParmBeforeFunc:Z
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      30: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      33: invokeinterface #8,  1            // InterfaceMethod org/postgresql/core/Query.createParameterList:()Lorg/postgresql/core/ParameterList;
      38: putfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      41: aload_0
      42: iconst_1
      43: invokevirtual #10                 // Method setPoolable:(Z)V
      46: return

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #11                 // class org/postgresql/util/PSQLException
       3: dup
       4: ldc           #12                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
       6: iconst_0
       7: anewarray     #13                 // class java/lang/Object
      10: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: getstatic     #15                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      16: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      19: athrow

  public java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #17                 // Method executeWithFlags:(I)Z
       5: ifne          28
       8: new           #11                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc           #18                 // String No results were returned by the query.
      14: iconst_0
      15: anewarray     #13                 // class java/lang/Object
      18: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #19                 // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      24: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: aload_0
      29: getfield      #20                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      32: invokevirtual #21                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      35: ifnull        58
      38: new           #11                 // class org/postgresql/util/PSQLException
      41: dup
      42: ldc           #22                 // String Multiple ResultSets were returned by the query.
      44: iconst_0
      45: anewarray     #13                 // class java/lang/Object
      48: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      51: getstatic     #23                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      54: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      57: athrow
      58: aload_0
      59: getfield      #20                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      62: invokevirtual #24                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      65: areturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #11                 // class org/postgresql/util/PSQLException
       3: dup
       4: ldc           #12                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
       6: iconst_0
       7: anewarray     #13                 // class java/lang/Object
      10: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: getstatic     #15                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      16: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      19: athrow

  public int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #17                 // Method executeWithFlags:(I)Z
       5: pop
       6: aload_0
       7: getfield      #20                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      10: astore_1
      11: aload_1
      12: ifnull        50
      15: aload_1
      16: invokevirtual #24                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      19: ifnull        42
      22: new           #11                 // class org/postgresql/util/PSQLException
      25: dup
      26: ldc           #26                 // String A result was returned when none was expected.
      28: iconst_0
      29: anewarray     #13                 // class java/lang/Object
      32: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: getstatic     #23                 // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      38: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      41: athrow
      42: aload_1
      43: invokevirtual #21                 // Method org/postgresql/jdbc/ResultWrapper.getNext:()Lorg/postgresql/jdbc/ResultWrapper;
      46: astore_1
      47: goto          11
      50: aload_0
      51: invokevirtual #27                 // Method getUpdateCount:()I
      54: ireturn

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #11                 // class org/postgresql/util/PSQLException
       3: dup
       4: ldc           #12                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
       6: iconst_0
       7: anewarray     #13                 // class java/lang/Object
      10: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      13: getstatic     #15                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      16: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      19: athrow

  public boolean execute() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #17                 // Method executeWithFlags:(I)Z
       5: ireturn

  public boolean executeWithFlags(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: invokeinterface #30,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
      13: getstatic     #31                 // Field org/postgresql/jdbc/PreferQueryMode.SIMPLE:Lorg/postgresql/jdbc/PreferQueryMode;
      16: if_acmpne     25
      19: iload_1
      20: sipush        1024
      23: ior
      24: istore_1
      25: aload_0
      26: aload_0
      27: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      30: aload_0
      31: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      34: iload_1
      35: invokevirtual #32                 // Method execute:(Lorg/postgresql/core/CachedQuery;Lorg/postgresql/core/ParameterList;I)V
      38: aload_0
      39: getfield      #20                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      42: ifnull        59
      45: aload_0
      46: getfield      #20                 // Field result:Lorg/postgresql/jdbc/ResultWrapper;
      49: invokevirtual #24                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      52: ifnull        59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: istore_2
      61: aload_0
      62: aconst_null
      63: putfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      66: iload_2
      67: ireturn
      68: astore_3
      69: aload_0
      70: aconst_null
      71: putfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      74: aload_3
      75: athrow
    Exception table:
       from    to  target type
           0    61    68   any

  protected boolean isOneShotQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_1
       1: ifnonnull     9
       4: aload_0
       5: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #34                 // Method org/postgresql/jdbc/PgStatement.isOneShotQuery:(Lorg/postgresql/core/CachedQuery;)Z
      14: ireturn

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field isClosed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      12: ifnull        53
      15: aload_0
      16: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      19: dup
      20: astore_1
      21: monitorenter
      22: aload_0
      23: getfield      #35                 // Field isClosed:Z
      26: ifne          43
      29: aload_0
      30: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      33: checkcast     #36                 // class org/postgresql/jdbc/PgConnection
      36: aload_0
      37: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      40: invokevirtual #37                 // Method org/postgresql/jdbc/PgConnection.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
      43: aload_1
      44: monitorexit
      45: goto          53
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
      53: aload_0
      54: invokespecial #38                 // Method org/postgresql/jdbc/PgStatement.close:()V
      57: return
    Exception table:
       from    to  target type
          22    45    48   any
          48    51    48   any

  public void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: iload_2
       5: lookupswitch  { // 30
                    -7: 344
                    -6: 269
                    -5: 275
                    -4: 350
                    -3: 350
                    -2: 350
                    -1: 309
                     0: 362
                     1: 302
                     2: 295
                     3: 295
                     4: 263
                     5: 269
                     6: 288
                     7: 281
                     8: 288
                    12: 309
                    16: 344
                    91: 332
                    92: 339
                    93: 339
                  1111: 362
                  2001: 362
                  2002: 362
                  2003: 362
                  2004: 356
                  2005: 356
                  2009: 256
                  2013: 339
                  2014: 339
               default: 367
          }
     256: sipush        142
     259: istore_3
     260: goto          387
     263: bipush        23
     265: istore_3
     266: goto          387
     269: bipush        21
     271: istore_3
     272: goto          387
     275: bipush        20
     277: istore_3
     278: goto          387
     281: sipush        700
     284: istore_3
     285: goto          387
     288: sipush        701
     291: istore_3
     292: goto          387
     295: sipush        1700
     298: istore_3
     299: goto          387
     302: sipush        1042
     305: istore_3
     306: goto          387
     309: aload_0
     310: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     313: invokeinterface #40,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getStringVarcharFlag:()Z
     318: ifeq          327
     321: sipush        1043
     324: goto          328
     327: iconst_0
     328: istore_3
     329: goto          387
     332: sipush        1082
     335: istore_3
     336: goto          387
     339: iconst_0
     340: istore_3
     341: goto          387
     344: bipush        16
     346: istore_3
     347: goto          387
     350: bipush        17
     352: istore_3
     353: goto          387
     356: bipush        26
     358: istore_3
     359: goto          387
     362: iconst_0
     363: istore_3
     364: goto          387
     367: new           #11                 // class org/postgresql/util/PSQLException
     370: dup
     371: ldc           #41                 // String Unknown Types value.
     373: iconst_0
     374: anewarray     #13                 // class java/lang/Object
     377: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     380: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     383: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     386: athrow
     387: aload_0
     388: getfield      #4                  // Field adjustIndex:Z
     391: ifeq          397
     394: iinc          1, -1
     397: aload_0
     398: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     401: iload_1
     402: iload_3
     403: invokeinterface #43,  3           // InterfaceMethod org/postgresql/core/ParameterList.setNull:(II)V
     408: return

  public void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: ifeq          15
      10: ldc           #44                 // String TRUE
      12: goto          17
      15: ldc           #45                 // String FALSE
      17: bipush        16
      19: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      22: return

  public void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: i2s
       4: invokevirtual #47                 // Method setShort:(IS)V
       7: return

  public void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        21
      10: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          37
      18: iconst_2
      19: newarray       byte
      21: astore_3
      22: aload_3
      23: iconst_0
      24: iload_2
      25: invokestatic  #49                 // Method org/postgresql/util/ByteConverter.int2:([BII)V
      28: aload_0
      29: iload_1
      30: aload_3
      31: bipush        21
      33: invokevirtual #50                 // Method bindBytes:(I[BI)V
      36: return
      37: aload_0
      38: iload_1
      39: iload_2
      40: invokestatic  #51                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: bipush        21
      45: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      48: return

  public void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        23
      10: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          37
      18: iconst_4
      19: newarray       byte
      21: astore_3
      22: aload_3
      23: iconst_0
      24: iload_2
      25: invokestatic  #52                 // Method org/postgresql/util/ByteConverter.int4:([BII)V
      28: aload_0
      29: iload_1
      30: aload_3
      31: bipush        23
      33: invokevirtual #50                 // Method bindBytes:(I[BI)V
      36: return
      37: aload_0
      38: iload_1
      39: iload_2
      40: invokestatic  #51                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: bipush        23
      45: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      48: return

  public void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: bipush        20
      10: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      15: ifeq          41
      18: bipush        8
      20: newarray       byte
      22: astore        4
      24: aload         4
      26: iconst_0
      27: lload_2
      28: invokestatic  #53                 // Method org/postgresql/util/ByteConverter.int8:([BIJ)V
      31: aload_0
      32: iload_1
      33: aload         4
      35: bipush        20
      37: invokevirtual #50                 // Method bindBytes:(I[BI)V
      40: return
      41: aload_0
      42: iload_1
      43: lload_2
      44: invokestatic  #54                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      47: bipush        20
      49: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      52: return

  public void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: sipush        700
      11: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      16: ifeq          39
      19: iconst_4
      20: newarray       byte
      22: astore_3
      23: aload_3
      24: iconst_0
      25: fload_2
      26: invokestatic  #55                 // Method org/postgresql/util/ByteConverter.float4:([BIF)V
      29: aload_0
      30: iload_1
      31: aload_3
      32: sipush        700
      35: invokevirtual #50                 // Method bindBytes:(I[BI)V
      38: return
      39: aload_0
      40: iload_1
      41: fload_2
      42: invokestatic  #56                 // Method java/lang/Float.toString:(F)Ljava/lang/String;
      45: sipush        701
      48: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      51: return

  public void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       8: sipush        701
      11: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      16: ifeq          43
      19: bipush        8
      21: newarray       byte
      23: astore        4
      25: aload         4
      27: iconst_0
      28: dload_2
      29: invokestatic  #57                 // Method org/postgresql/util/ByteConverter.float8:([BID)V
      32: aload_0
      33: iload_1
      34: aload         4
      36: sipush        701
      39: invokevirtual #50                 // Method bindBytes:(I[BI)V
      42: return
      43: aload_0
      44: iload_1
      45: dload_2
      46: invokestatic  #58                 // Method java/lang/Double.toString:(D)Ljava/lang/String;
      49: sipush        701
      52: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      55: return

  public void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: iconst_3
      11: invokevirtual #60                 // Method setNull:(II)V
      14: goto          29
      17: aload_0
      18: iload_1
      19: aload_2
      20: invokevirtual #61                 // Method java/math/BigDecimal.toString:()Ljava/lang/String;
      23: sipush        1700
      26: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      29: return

  public void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: aload_0
       8: invokespecial #62                 // Method getStringType:()I
      11: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
      14: return

  private int getStringType();
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #40,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getStringVarcharFlag:()Z
       9: ifeq          18
      12: sipush        1043
      15: goto          19
      18: iconst_0
      19: ireturn

  protected void setString(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     32
       8: aload_0
       9: getfield      #4                  // Field adjustIndex:Z
      12: ifeq          18
      15: iinc          1, -1
      18: aload_0
      19: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      22: iload_1
      23: iload_3
      24: invokeinterface #43,  3           // InterfaceMethod org/postgresql/core/ParameterList.setNull:(II)V
      29: goto          39
      32: aload_0
      33: iload_1
      34: aload_2
      35: iload_3
      36: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      39: return

  public void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aconst_null
       5: aload_2
       6: if_acmpne     17
       9: aload_0
      10: iload_1
      11: bipush        -3
      13: invokevirtual #60                 // Method setNull:(II)V
      16: return
      17: aload_2
      18: arraylength
      19: newarray       byte
      21: astore_3
      22: aload_2
      23: iconst_0
      24: aload_3
      25: iconst_0
      26: aload_2
      27: arraylength
      28: invokestatic  #65                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      31: aload_0
      32: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      35: iload_1
      36: aload_3
      37: iconst_0
      38: aload_2
      39: arraylength
      40: invokeinterface #66,  5           // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(I[BII)V
      45: return

  public void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #67                 // Method setDate:(ILjava/sql/Date;Ljava/util/Calendar;)V
       7: return

  public void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #68                 // Method setTime:(ILjava/sql/Time;Ljava/util/Calendar;)V
       7: return

  public void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #69                 // Method setTimestamp:(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
       7: return

  private void setCharacterStreamPost71(int, java.io.InputStream, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnonnull     12
       4: aload_0
       5: iload_1
       6: bipush        12
       8: invokevirtual #60                 // Method setNull:(II)V
      11: return
      12: iload_3
      13: ifge          43
      16: new           #11                 // class org/postgresql/util/PSQLException
      19: dup
      20: ldc           #70                 // String Invalid stream length {0}.
      22: iconst_1
      23: anewarray     #13                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: iload_3
      29: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aastore
      33: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      36: getstatic     #72                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      39: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      42: athrow
      43: new           #73                 // class java/io/InputStreamReader
      46: dup
      47: aload_2
      48: aload         4
      50: invokespecial #74                 // Method java/io/InputStreamReader."<init>":(Ljava/io/InputStream;Ljava/lang/String;)V
      53: astore        5
      55: iload_3
      56: newarray       char
      58: astore        6
      60: iconst_0
      61: istore        7
      63: aload         5
      65: aload         6
      67: iload         7
      69: iload_3
      70: iload         7
      72: isub
      73: invokevirtual #75                 // Method java/io/InputStreamReader.read:([CII)I
      76: istore        8
      78: iload         8
      80: iconst_m1
      81: if_icmpne     87
      84: goto          106
      87: iload         7
      89: iload         8
      91: iadd
      92: istore        7
      94: iload         7
      96: iload_3
      97: if_icmpne     103
     100: goto          106
     103: goto          63
     106: aload_0
     107: iload_1
     108: new           #76                 // class java/lang/String
     111: dup
     112: aload         6
     114: iconst_0
     115: iload         7
     117: invokespecial #77                 // Method java/lang/String."<init>":([CII)V
     120: sipush        1043
     123: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     126: goto          182
     129: astore        5
     131: new           #11                 // class org/postgresql/util/PSQLException
     134: dup
     135: ldc           #79                 // String The JVM claims not to support the {0} encoding.
     137: iconst_1
     138: anewarray     #13                 // class java/lang/Object
     141: dup
     142: iconst_0
     143: aload         4
     145: aastore
     146: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     149: getstatic     #80                 // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     152: aload         5
     154: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     157: athrow
     158: astore        5
     160: new           #11                 // class org/postgresql/util/PSQLException
     163: dup
     164: ldc           #83                 // String Provided InputStream failed.
     166: iconst_0
     167: anewarray     #13                 // class java/lang/Object
     170: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     173: getstatic     #80                 // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     176: aload         5
     178: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     181: athrow
     182: return
    Exception table:
       from    to  target type
          43   126   129   Class java/io/UnsupportedEncodingException
          43   126   158   Class java/io/IOException

  public void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: iload_3
       8: ldc           #84                 // String ASCII
      10: invokespecial #85                 // Method setCharacterStreamPost71:(ILjava/io/InputStream;ILjava/lang/String;)V
      13: return

  public void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: aload_2
       7: iload_3
       8: ldc           #86                 // String UTF-8
      10: invokespecial #85                 // Method setCharacterStreamPost71:(ILjava/io/InputStream;ILjava/lang/String;)V
      13: return

  public void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        -3
      12: invokevirtual #60                 // Method setNull:(II)V
      15: return
      16: iload_3
      17: ifge          47
      20: new           #11                 // class org/postgresql/util/PSQLException
      23: dup
      24: ldc           #70                 // String Invalid stream length {0}.
      26: iconst_1
      27: anewarray     #13                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_3
      33: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: getstatic     #72                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      43: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      46: athrow
      47: aload_0
      48: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      51: iload_1
      52: aload_2
      53: iload_3
      54: invokeinterface #87,  4           // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(ILjava/io/InputStream;I)V
      59: return

  public void clearParameters() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
       4: invokeinterface #88,  1           // InterfaceMethod org/postgresql/core/ParameterList.clear:()V
       9: return

  private void setPGobject(int, org.postgresql.util.PGobject) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: invokevirtual #89                 // Method org/postgresql/util/PGobject.getType:()Ljava/lang/String;
       4: astore_3
       5: aload_0
       6: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       9: invokeinterface #90,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      14: aload_3
      15: invokeinterface #91,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      20: istore        4
      22: iload         4
      24: ifne          51
      27: new           #11                 // class org/postgresql/util/PSQLException
      30: dup
      31: ldc           #92                 // String Unknown type {0}.
      33: iconst_1
      34: anewarray     #13                 // class java/lang/Object
      37: dup
      38: iconst_0
      39: aload_3
      40: aastore
      41: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      47: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      50: athrow
      51: aload_2
      52: instanceof    #93                 // class org/postgresql/util/PGBinaryObject
      55: ifeq          111
      58: aload_0
      59: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      62: iload         4
      64: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      69: ifeq          111
      72: aload_2
      73: checkcast     #93                 // class org/postgresql/util/PGBinaryObject
      76: astore        5
      78: aload         5
      80: invokeinterface #94,  1           // InterfaceMethod org/postgresql/util/PGBinaryObject.lengthInBytes:()I
      85: newarray       byte
      87: astore        6
      89: aload         5
      91: aload         6
      93: iconst_0
      94: invokeinterface #95,  3           // InterfaceMethod org/postgresql/util/PGBinaryObject.toBytes:([BI)V
      99: aload_0
     100: iload_1
     101: aload         6
     103: iload         4
     105: invokevirtual #50                 // Method bindBytes:(I[BI)V
     108: goto          122
     111: aload_0
     112: iload_1
     113: aload_2
     114: invokevirtual #96                 // Method org/postgresql/util/PGobject.getValue:()Ljava/lang/String;
     117: iload         4
     119: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     122: return

  private void setMap(int, java.util.Map<?, ?>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #90,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: ldc           #97                 // String hstore
      11: invokeinterface #91,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      16: istore_3
      17: iload_3
      18: ifne          41
      21: new           #11                 // class org/postgresql/util/PSQLException
      24: dup
      25: ldc           #98                 // String No hstore extension installed.
      27: iconst_0
      28: anewarray     #13                 // class java/lang/Object
      31: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      37: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      40: athrow
      41: aload_0
      42: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      45: iload_3
      46: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      51: ifeq          80
      54: aload_2
      55: aload_0
      56: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      59: invokeinterface #99,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      64: invokestatic  #100                // Method org/postgresql/util/HStoreConverter.toBytes:(Ljava/util/Map;Lorg/postgresql/core/Encoding;)[B
      67: astore        4
      69: aload_0
      70: iload_1
      71: aload         4
      73: iload_3
      74: invokevirtual #50                 // Method bindBytes:(I[BI)V
      77: goto          90
      80: aload_0
      81: iload_1
      82: aload_2
      83: invokestatic  #101                // Method org/postgresql/util/HStoreConverter.toString:(Ljava/util/Map;)Ljava/lang/String;
      86: iload_3
      87: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
      90: return

  public void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     15
       8: aload_0
       9: iload_1
      10: iload_3
      11: invokevirtual #60                 // Method setNull:(II)V
      14: return
      15: iload_3
      16: sipush        1111
      19: if_icmpne     54
      22: aload_2
      23: instanceof    #102                // class java/util/UUID
      26: ifeq          54
      29: aload_0
      30: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      33: getstatic     #103                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
      36: invokeinterface #104,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      41: ifeq          54
      44: aload_0
      45: iload_1
      46: aload_2
      47: checkcast     #102                // class java/util/UUID
      50: invokespecial #105                // Method setUuid:(ILjava/util/UUID;)V
      53: return
      54: iload_3
      55: lookupswitch  { // 27
                    -7: 841
                    -6: 334
                    -5: 346
                    -4: 853
                    -3: 853
                    -2: 853
                    -1: 427
                     1: 396
                     2: 382
                     3: 382
                     4: 322
                     5: 334
                     6: 370
                     7: 358
                     8: 370
                    12: 411
                    16: 841
                    91: 467
                    92: 563
                    93: 659
                  1111: 1068
                  2001: 1055
                  2003: 1001
                  2004: 862
                  2005: 947
                  2009: 280
                  2014: 771
               default: 1119
          }
     280: aload_2
     281: instanceof    #106                // class java/sql/SQLXML
     284: ifeq          299
     287: aload_0
     288: iload_1
     289: aload_2
     290: checkcast     #106                // class java/sql/SQLXML
     293: invokevirtual #107                // Method setSQLXML:(ILjava/sql/SQLXML;)V
     296: goto          1146
     299: aload_0
     300: iload_1
     301: new           #108                // class org/postgresql/jdbc/PgSQLXML
     304: dup
     305: aload_0
     306: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     309: aload_2
     310: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
     313: invokespecial #110                // Method org/postgresql/jdbc/PgSQLXML."<init>":(Lorg/postgresql/core/BaseConnection;Ljava/lang/String;)V
     316: invokevirtual #107                // Method setSQLXML:(ILjava/sql/SQLXML;)V
     319: goto          1146
     322: aload_0
     323: iload_1
     324: aload_2
     325: invokestatic  #111                // Method castToInt:(Ljava/lang/Object;)I
     328: invokevirtual #112                // Method setInt:(II)V
     331: goto          1146
     334: aload_0
     335: iload_1
     336: aload_2
     337: invokestatic  #113                // Method castToShort:(Ljava/lang/Object;)S
     340: invokevirtual #47                 // Method setShort:(IS)V
     343: goto          1146
     346: aload_0
     347: iload_1
     348: aload_2
     349: invokestatic  #114                // Method castToLong:(Ljava/lang/Object;)J
     352: invokevirtual #115                // Method setLong:(IJ)V
     355: goto          1146
     358: aload_0
     359: iload_1
     360: aload_2
     361: invokestatic  #116                // Method castToFloat:(Ljava/lang/Object;)F
     364: invokevirtual #117                // Method setFloat:(IF)V
     367: goto          1146
     370: aload_0
     371: iload_1
     372: aload_2
     373: invokestatic  #118                // Method castToDouble:(Ljava/lang/Object;)D
     376: invokevirtual #119                // Method setDouble:(ID)V
     379: goto          1146
     382: aload_0
     383: iload_1
     384: aload_2
     385: iload         4
     387: invokestatic  #120                // Method castToBigDecimal:(Ljava/lang/Object;I)Ljava/math/BigDecimal;
     390: invokevirtual #121                // Method setBigDecimal:(ILjava/math/BigDecimal;)V
     393: goto          1146
     396: aload_0
     397: iload_1
     398: aload_2
     399: invokestatic  #122                // Method castToString:(Ljava/lang/Object;)Ljava/lang/String;
     402: sipush        1042
     405: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     408: goto          1146
     411: aload_0
     412: iload_1
     413: aload_2
     414: invokestatic  #122                // Method castToString:(Ljava/lang/Object;)Ljava/lang/String;
     417: aload_0
     418: invokespecial #62                 // Method getStringType:()I
     421: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     424: goto          1146
     427: aload_2
     428: instanceof    #123                // class java/io/InputStream
     431: ifeq          451
     434: aload_0
     435: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
     438: iload_1
     439: aload_2
     440: checkcast     #123                // class java/io/InputStream
     443: invokeinterface #124,  3          // InterfaceMethod org/postgresql/core/ParameterList.setText:(ILjava/io/InputStream;)V
     448: goto          1146
     451: aload_0
     452: iload_1
     453: aload_2
     454: invokestatic  #122                // Method castToString:(Ljava/lang/Object;)Ljava/lang/String;
     457: aload_0
     458: invokespecial #62                 // Method getStringType:()I
     461: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     464: goto          1146
     467: aload_2
     468: instanceof    #125                // class java/sql/Date
     471: ifeq          486
     474: aload_0
     475: iload_1
     476: aload_2
     477: checkcast     #125                // class java/sql/Date
     480: invokevirtual #126                // Method setDate:(ILjava/sql/Date;)V
     483: goto          1146
     486: aload_2
     487: instanceof    #127                // class java/util/Date
     490: ifeq          512
     493: new           #125                // class java/sql/Date
     496: dup
     497: aload_2
     498: checkcast     #127                // class java/util/Date
     501: invokevirtual #128                // Method java/util/Date.getTime:()J
     504: invokespecial #129                // Method java/sql/Date."<init>":(J)V
     507: astore        5
     509: goto          553
     512: aload_2
     513: instanceof    #130                // class java/time/LocalDate
     516: ifeq          531
     519: aload_0
     520: iload_1
     521: aload_2
     522: checkcast     #130                // class java/time/LocalDate
     525: invokespecial #131                // Method setDate:(ILjava/time/LocalDate;)V
     528: goto          1146
     531: aload_0
     532: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     535: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
     540: aload_0
     541: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
     544: aload_2
     545: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
     548: invokevirtual #134                // Method org/postgresql/jdbc/TimestampUtils.toDate:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Date;
     551: astore        5
     553: aload_0
     554: iload_1
     555: aload         5
     557: invokevirtual #126                // Method setDate:(ILjava/sql/Date;)V
     560: goto          1146
     563: aload_2
     564: instanceof    #135                // class java/sql/Time
     567: ifeq          582
     570: aload_0
     571: iload_1
     572: aload_2
     573: checkcast     #135                // class java/sql/Time
     576: invokevirtual #136                // Method setTime:(ILjava/sql/Time;)V
     579: goto          1146
     582: aload_2
     583: instanceof    #127                // class java/util/Date
     586: ifeq          608
     589: new           #135                // class java/sql/Time
     592: dup
     593: aload_2
     594: checkcast     #127                // class java/util/Date
     597: invokevirtual #128                // Method java/util/Date.getTime:()J
     600: invokespecial #137                // Method java/sql/Time."<init>":(J)V
     603: astore        5
     605: goto          649
     608: aload_2
     609: instanceof    #138                // class java/time/LocalTime
     612: ifeq          627
     615: aload_0
     616: iload_1
     617: aload_2
     618: checkcast     #138                // class java/time/LocalTime
     621: invokespecial #139                // Method setTime:(ILjava/time/LocalTime;)V
     624: goto          1146
     627: aload_0
     628: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     631: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
     636: aload_0
     637: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
     640: aload_2
     641: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
     644: invokevirtual #140                // Method org/postgresql/jdbc/TimestampUtils.toTime:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Time;
     647: astore        5
     649: aload_0
     650: iload_1
     651: aload         5
     653: invokevirtual #136                // Method setTime:(ILjava/sql/Time;)V
     656: goto          1146
     659: aload_2
     660: instanceof    #141                // class org/postgresql/util/PGTimestamp
     663: ifeq          675
     666: aload_0
     667: iload_1
     668: aload_2
     669: invokevirtual #142                // Method setObject:(ILjava/lang/Object;)V
     672: goto          1146
     675: aload_2
     676: instanceof    #143                // class java/sql/Timestamp
     679: ifeq          694
     682: aload_0
     683: iload_1
     684: aload_2
     685: checkcast     #143                // class java/sql/Timestamp
     688: invokevirtual #144                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     691: goto          1146
     694: aload_2
     695: instanceof    #127                // class java/util/Date
     698: ifeq          720
     701: new           #143                // class java/sql/Timestamp
     704: dup
     705: aload_2
     706: checkcast     #127                // class java/util/Date
     709: invokevirtual #128                // Method java/util/Date.getTime:()J
     712: invokespecial #145                // Method java/sql/Timestamp."<init>":(J)V
     715: astore        5
     717: goto          761
     720: aload_2
     721: instanceof    #146                // class java/time/LocalDateTime
     724: ifeq          739
     727: aload_0
     728: iload_1
     729: aload_2
     730: checkcast     #146                // class java/time/LocalDateTime
     733: invokespecial #147                // Method setTimestamp:(ILjava/time/LocalDateTime;)V
     736: goto          1146
     739: aload_0
     740: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
     743: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
     748: aload_0
     749: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
     752: aload_2
     753: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
     756: invokevirtual #148                // Method org/postgresql/jdbc/TimestampUtils.toTimestamp:(Ljava/util/Calendar;Ljava/lang/String;)Ljava/sql/Timestamp;
     759: astore        5
     761: aload_0
     762: iload_1
     763: aload         5
     765: invokevirtual #144                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     768: goto          1146
     771: aload_2
     772: instanceof    #149                // class java/time/OffsetDateTime
     775: ifeq          790
     778: aload_0
     779: iload_1
     780: aload_2
     781: checkcast     #149                // class java/time/OffsetDateTime
     784: invokespecial #150                // Method setTimestamp:(ILjava/time/OffsetDateTime;)V
     787: goto          1146
     790: aload_2
     791: instanceof    #141                // class org/postgresql/util/PGTimestamp
     794: ifeq          806
     797: aload_0
     798: iload_1
     799: aload_2
     800: invokevirtual #142                // Method setObject:(ILjava/lang/Object;)V
     803: goto          1146
     806: new           #11                 // class org/postgresql/util/PSQLException
     809: dup
     810: ldc           #151                // String Cannot cast an instance of {0} to type {1}
     812: iconst_2
     813: anewarray     #13                 // class java/lang/Object
     816: dup
     817: iconst_0
     818: aload_2
     819: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     822: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     825: aastore
     826: dup
     827: iconst_1
     828: ldc           #154                // String Types.TIMESTAMP_WITH_TIMEZONE
     830: aastore
     831: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     834: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     837: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     840: athrow
     841: aload_0
     842: iload_1
     843: aload_2
     844: invokestatic  #155                // Method org/postgresql/jdbc/BooleanTypeUtil.castToBoolean:(Ljava/lang/Object;)Z
     847: invokevirtual #156                // Method setBoolean:(IZ)V
     850: goto          1146
     853: aload_0
     854: iload_1
     855: aload_2
     856: invokevirtual #142                // Method setObject:(ILjava/lang/Object;)V
     859: goto          1146
     862: aload_2
     863: instanceof    #157                // class java/sql/Blob
     866: ifeq          881
     869: aload_0
     870: iload_1
     871: aload_2
     872: checkcast     #157                // class java/sql/Blob
     875: invokevirtual #158                // Method setBlob:(ILjava/sql/Blob;)V
     878: goto          1146
     881: aload_2
     882: instanceof    #123                // class java/io/InputStream
     885: ifeq          912
     888: aload_0
     889: iload_1
     890: aload_2
     891: checkcast     #123                // class java/io/InputStream
     894: ldc2_w        #159                // long -1l
     897: invokevirtual #161                // Method createBlob:(ILjava/io/InputStream;J)J
     900: lstore        5
     902: aload_0
     903: iload_1
     904: lload         5
     906: invokevirtual #115                // Method setLong:(IJ)V
     909: goto          1146
     912: new           #11                 // class org/postgresql/util/PSQLException
     915: dup
     916: ldc           #151                // String Cannot cast an instance of {0} to type {1}
     918: iconst_2
     919: anewarray     #13                 // class java/lang/Object
     922: dup
     923: iconst_0
     924: aload_2
     925: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     928: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     931: aastore
     932: dup
     933: iconst_1
     934: ldc           #162                // String Types.BLOB
     936: aastore
     937: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     940: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     943: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     946: athrow
     947: aload_2
     948: instanceof    #163                // class java/sql/Clob
     951: ifeq          966
     954: aload_0
     955: iload_1
     956: aload_2
     957: checkcast     #163                // class java/sql/Clob
     960: invokevirtual #164                // Method setClob:(ILjava/sql/Clob;)V
     963: goto          1146
     966: new           #11                 // class org/postgresql/util/PSQLException
     969: dup
     970: ldc           #151                // String Cannot cast an instance of {0} to type {1}
     972: iconst_2
     973: anewarray     #13                 // class java/lang/Object
     976: dup
     977: iconst_0
     978: aload_2
     979: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     982: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     985: aastore
     986: dup
     987: iconst_1
     988: ldc           #165                // String Types.CLOB
     990: aastore
     991: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     994: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     997: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
    1000: athrow
    1001: aload_2
    1002: instanceof    #166                // class java/sql/Array
    1005: ifeq          1020
    1008: aload_0
    1009: iload_1
    1010: aload_2
    1011: checkcast     #166                // class java/sql/Array
    1014: invokevirtual #167                // Method setArray:(ILjava/sql/Array;)V
    1017: goto          1146
    1020: new           #11                 // class org/postgresql/util/PSQLException
    1023: dup
    1024: ldc           #151                // String Cannot cast an instance of {0} to type {1}
    1026: iconst_2
    1027: anewarray     #13                 // class java/lang/Object
    1030: dup
    1031: iconst_0
    1032: aload_2
    1033: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
    1036: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
    1039: aastore
    1040: dup
    1041: iconst_1
    1042: ldc           #168                // String Types.ARRAY
    1044: aastore
    1045: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1048: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
    1051: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
    1054: athrow
    1055: aload_0
    1056: iload_1
    1057: aload_2
    1058: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
    1061: iconst_0
    1062: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
    1065: goto          1146
    1068: aload_2
    1069: instanceof    #169                // class org/postgresql/util/PGobject
    1072: ifeq          1087
    1075: aload_0
    1076: iload_1
    1077: aload_2
    1078: checkcast     #169                // class org/postgresql/util/PGobject
    1081: invokespecial #170                // Method setPGobject:(ILorg/postgresql/util/PGobject;)V
    1084: goto          1146
    1087: aload_2
    1088: instanceof    #171                // class java/util/Map
    1091: ifeq          1106
    1094: aload_0
    1095: iload_1
    1096: aload_2
    1097: checkcast     #171                // class java/util/Map
    1100: invokespecial #172                // Method setMap:(ILjava/util/Map;)V
    1103: goto          1146
    1106: aload_0
    1107: iload_1
    1108: aload_2
    1109: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
    1112: iconst_0
    1113: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
    1116: goto          1146
    1119: new           #11                 // class org/postgresql/util/PSQLException
    1122: dup
    1123: ldc           #173                // String Unsupported Types value: {0}
    1125: iconst_1
    1126: anewarray     #13                 // class java/lang/Object
    1129: dup
    1130: iconst_0
    1131: iload_3
    1132: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1135: aastore
    1136: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
    1139: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
    1142: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
    1145: athrow
    1146: return

  private static java.lang.String asString(java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: lconst_1
       2: aload_0
       3: invokeinterface #174,  1          // InterfaceMethod java/sql/Clob.length:()J
       8: l2i
       9: invokeinterface #175,  4          // InterfaceMethod java/sql/Clob.getSubString:(JI)Ljava/lang/String;
      14: areturn

  private static int castToInt(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: invokestatic  #176                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      14: ireturn
      15: aload_0
      16: instanceof    #177                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #177                // class java/lang/Number
      26: invokevirtual #178                // Method java/lang/Number.intValue:()I
      29: ireturn
      30: aload_0
      31: instanceof    #127                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #127                // class java/util/Date
      41: invokevirtual #128                // Method java/util/Date.getTime:()J
      44: l2i
      45: ireturn
      46: aload_0
      47: instanceof    #179                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #179                // class java/lang/Boolean
      57: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
      69: aload_0
      70: instanceof    #163                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #163                // class java/sql/Clob
      80: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #176                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      86: ireturn
      87: aload_0
      88: instanceof    #182                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #176                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     101: ireturn
     102: goto          120
     105: astore_1
     106: aload_0
     107: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc           #184                // String int
     115: aload_1
     116: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     119: athrow
     120: aload_0
     121: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     127: ldc           #184                // String int
     129: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     132: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static short castToShort(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: invokestatic  #187                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
      14: ireturn
      15: aload_0
      16: instanceof    #177                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #177                // class java/lang/Number
      26: invokevirtual #188                // Method java/lang/Number.shortValue:()S
      29: ireturn
      30: aload_0
      31: instanceof    #127                // class java/util/Date
      34: ifeq          47
      37: aload_0
      38: checkcast     #127                // class java/util/Date
      41: invokevirtual #128                // Method java/util/Date.getTime:()J
      44: l2i
      45: i2s
      46: ireturn
      47: aload_0
      48: instanceof    #179                // class java/lang/Boolean
      51: ifeq          70
      54: aload_0
      55: checkcast     #179                // class java/lang/Boolean
      58: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn
      70: aload_0
      71: instanceof    #163                // class java/sql/Clob
      74: ifeq          88
      77: aload_0
      78: checkcast     #163                // class java/sql/Clob
      81: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      84: invokestatic  #187                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
      87: ireturn
      88: aload_0
      89: instanceof    #182                // class java/lang/Character
      92: ifeq          103
      95: aload_0
      96: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      99: invokestatic  #187                // Method java/lang/Short.parseShort:(Ljava/lang/String;)S
     102: ireturn
     103: goto          121
     106: astore_1
     107: aload_0
     108: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     111: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     114: ldc           #189                // String short
     116: aload_1
     117: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     120: athrow
     121: aload_0
     122: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     128: ldc           #189                // String short
     130: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     133: athrow
    Exception table:
       from    to  target type
           0    14   106   Class java/lang/Exception
          15    29   106   Class java/lang/Exception
          30    46   106   Class java/lang/Exception
          47    69   106   Class java/lang/Exception
          70    87   106   Class java/lang/Exception
          88   102   106   Class java/lang/Exception

  private static long castToLong(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: invokestatic  #190                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      14: lreturn
      15: aload_0
      16: instanceof    #177                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #177                // class java/lang/Number
      26: invokevirtual #191                // Method java/lang/Number.longValue:()J
      29: lreturn
      30: aload_0
      31: instanceof    #127                // class java/util/Date
      34: ifeq          45
      37: aload_0
      38: checkcast     #127                // class java/util/Date
      41: invokevirtual #128                // Method java/util/Date.getTime:()J
      44: lreturn
      45: aload_0
      46: instanceof    #179                // class java/lang/Boolean
      49: ifeq          68
      52: aload_0
      53: checkcast     #179                // class java/lang/Boolean
      56: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
      59: ifeq          66
      62: lconst_1
      63: goto          67
      66: lconst_0
      67: lreturn
      68: aload_0
      69: instanceof    #163                // class java/sql/Clob
      72: ifeq          86
      75: aload_0
      76: checkcast     #163                // class java/sql/Clob
      79: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      82: invokestatic  #190                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      85: lreturn
      86: aload_0
      87: instanceof    #182                // class java/lang/Character
      90: ifeq          101
      93: aload_0
      94: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      97: invokestatic  #190                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
     100: lreturn
     101: goto          119
     104: astore_1
     105: aload_0
     106: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     109: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     112: ldc           #192                // String long
     114: aload_1
     115: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     118: athrow
     119: aload_0
     120: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     123: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     126: ldc           #192                // String long
     128: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     131: athrow
    Exception table:
       from    to  target type
           0    14   104   Class java/lang/Exception
          15    29   104   Class java/lang/Exception
          30    44   104   Class java/lang/Exception
          45    67   104   Class java/lang/Exception
          68    85   104   Class java/lang/Exception
          86   100   104   Class java/lang/Exception

  private static float castToFloat(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: invokestatic  #193                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      14: freturn
      15: aload_0
      16: instanceof    #177                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #177                // class java/lang/Number
      26: invokevirtual #194                // Method java/lang/Number.floatValue:()F
      29: freturn
      30: aload_0
      31: instanceof    #127                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #127                // class java/util/Date
      41: invokevirtual #128                // Method java/util/Date.getTime:()J
      44: l2f
      45: freturn
      46: aload_0
      47: instanceof    #179                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #179                // class java/lang/Boolean
      57: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: fconst_1
      64: goto          68
      67: fconst_0
      68: freturn
      69: aload_0
      70: instanceof    #163                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #163                // class java/sql/Clob
      80: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #193                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
      86: freturn
      87: aload_0
      88: instanceof    #182                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #193                // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
     101: freturn
     102: goto          120
     105: astore_1
     106: aload_0
     107: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc           #195                // String float
     115: aload_1
     116: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     119: athrow
     120: aload_0
     121: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     127: ldc           #195                // String float
     129: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     132: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static double castToDouble(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          15
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: invokestatic  #196                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      14: dreturn
      15: aload_0
      16: instanceof    #177                // class java/lang/Number
      19: ifeq          30
      22: aload_0
      23: checkcast     #177                // class java/lang/Number
      26: invokevirtual #197                // Method java/lang/Number.doubleValue:()D
      29: dreturn
      30: aload_0
      31: instanceof    #127                // class java/util/Date
      34: ifeq          46
      37: aload_0
      38: checkcast     #127                // class java/util/Date
      41: invokevirtual #128                // Method java/util/Date.getTime:()J
      44: l2d
      45: dreturn
      46: aload_0
      47: instanceof    #179                // class java/lang/Boolean
      50: ifeq          69
      53: aload_0
      54: checkcast     #179                // class java/lang/Boolean
      57: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
      60: ifeq          67
      63: dconst_1
      64: goto          68
      67: dconst_0
      68: dreturn
      69: aload_0
      70: instanceof    #163                // class java/sql/Clob
      73: ifeq          87
      76: aload_0
      77: checkcast     #163                // class java/sql/Clob
      80: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      83: invokestatic  #196                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      86: dreturn
      87: aload_0
      88: instanceof    #182                // class java/lang/Character
      91: ifeq          102
      94: aload_0
      95: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      98: invokestatic  #196                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
     101: dreturn
     102: goto          120
     105: astore_1
     106: aload_0
     107: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     110: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     113: ldc           #198                // String double
     115: aload_1
     116: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     119: athrow
     120: aload_0
     121: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     124: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     127: ldc           #198                // String double
     129: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     132: athrow
    Exception table:
       from    to  target type
           0    14   105   Class java/lang/Exception
          15    29   105   Class java/lang/Exception
          30    45   105   Class java/lang/Exception
          46    68   105   Class java/lang/Exception
          69    86   105   Class java/lang/Exception
          87   101   105   Class java/lang/Exception

  private static java.math.BigDecimal castToBigDecimal(java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: instanceof    #76                 // class java/lang/String
       6: ifeq          24
       9: new           #199                // class java/math/BigDecimal
      12: dup
      13: aload_0
      14: checkcast     #76                 // class java/lang/String
      17: invokespecial #200                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
      20: astore_2
      21: goto          235
      24: aload_0
      25: instanceof    #199                // class java/math/BigDecimal
      28: ifeq          39
      31: aload_0
      32: checkcast     #199                // class java/math/BigDecimal
      35: astore_2
      36: goto          235
      39: aload_0
      40: instanceof    #201                // class java/math/BigInteger
      43: ifeq          61
      46: new           #199                // class java/math/BigDecimal
      49: dup
      50: aload_0
      51: checkcast     #201                // class java/math/BigInteger
      54: invokespecial #202                // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      57: astore_2
      58: goto          235
      61: aload_0
      62: instanceof    #203                // class java/lang/Long
      65: ifne          89
      68: aload_0
      69: instanceof    #204                // class java/lang/Integer
      72: ifne          89
      75: aload_0
      76: instanceof    #205                // class java/lang/Short
      79: ifne          89
      82: aload_0
      83: instanceof    #206                // class java/lang/Byte
      86: ifeq          103
      89: aload_0
      90: checkcast     #177                // class java/lang/Number
      93: invokevirtual #191                // Method java/lang/Number.longValue:()J
      96: invokestatic  #207                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
      99: astore_2
     100: goto          235
     103: aload_0
     104: instanceof    #208                // class java/lang/Double
     107: ifne          117
     110: aload_0
     111: instanceof    #209                // class java/lang/Float
     114: ifeq          131
     117: aload_0
     118: checkcast     #177                // class java/lang/Number
     121: invokevirtual #197                // Method java/lang/Number.doubleValue:()D
     124: invokestatic  #210                // Method java/math/BigDecimal.valueOf:(D)Ljava/math/BigDecimal;
     127: astore_2
     128: goto          235
     131: aload_0
     132: instanceof    #127                // class java/util/Date
     135: ifeq          152
     138: aload_0
     139: checkcast     #127                // class java/util/Date
     142: invokevirtual #128                // Method java/util/Date.getTime:()J
     145: invokestatic  #207                // Method java/math/BigDecimal.valueOf:(J)Ljava/math/BigDecimal;
     148: astore_2
     149: goto          235
     152: aload_0
     153: instanceof    #179                // class java/lang/Boolean
     156: ifeq          182
     159: aload_0
     160: checkcast     #179                // class java/lang/Boolean
     163: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
     166: ifeq          175
     169: getstatic     #211                // Field java/math/BigDecimal.ONE:Ljava/math/BigDecimal;
     172: goto          178
     175: getstatic     #212                // Field java/math/BigDecimal.ZERO:Ljava/math/BigDecimal;
     178: astore_2
     179: goto          235
     182: aload_0
     183: instanceof    #163                // class java/sql/Clob
     186: ifeq          207
     189: new           #199                // class java/math/BigDecimal
     192: dup
     193: aload_0
     194: checkcast     #163                // class java/sql/Clob
     197: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
     200: invokespecial #200                // Method java/math/BigDecimal."<init>":(Ljava/lang/String;)V
     203: astore_2
     204: goto          235
     207: aload_0
     208: instanceof    #182                // class java/lang/Character
     211: ifeq          235
     214: new           #199                // class java/math/BigDecimal
     217: dup
     218: iconst_1
     219: newarray       char
     221: dup
     222: iconst_0
     223: aload_0
     224: checkcast     #182                // class java/lang/Character
     227: invokevirtual #213                // Method java/lang/Character.charValue:()C
     230: castore
     231: invokespecial #214                // Method java/math/BigDecimal."<init>":([C)V
     234: astore_2
     235: aload_2
     236: ifnull        254
     239: iload_1
     240: iflt          252
     243: aload_2
     244: iload_1
     245: getstatic     #215                // Field java/math/RoundingMode.HALF_UP:Ljava/math/RoundingMode;
     248: invokevirtual #216                // Method java/math/BigDecimal.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
     251: astore_2
     252: aload_2
     253: areturn
     254: goto          272
     257: astore_2
     258: aload_0
     259: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     262: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     265: ldc           #217                // String BigDecimal
     267: aload_2
     268: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
     271: athrow
     272: aload_0
     273: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     276: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     279: ldc           #217                // String BigDecimal
     281: invokestatic  #186                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     284: athrow
    Exception table:
       from    to  target type
           0   253   257   Class java/lang/Exception

  private static java.lang.String castToString(java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #76                 // class java/lang/String
       4: ifeq          12
       7: aload_0
       8: checkcast     #76                 // class java/lang/String
      11: areturn
      12: aload_0
      13: instanceof    #163                // class java/sql/Clob
      16: ifeq          27
      19: aload_0
      20: checkcast     #163                // class java/sql/Clob
      23: invokestatic  #181                // Method asString:(Ljava/sql/Clob;)Ljava/lang/String;
      26: areturn
      27: aload_0
      28: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      31: areturn
      32: astore_1
      33: aload_0
      34: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      37: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
      40: ldc           #218                // String String
      42: aload_1
      43: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
      46: athrow
    Exception table:
       from    to  target type
           0    11    32   Class java/lang/Exception
          12    26    32   Class java/lang/Exception
          27    31    32   Class java/lang/Exception

  private static org.postgresql.util.PSQLException cannotCastException(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #185                // Method cannotCastException:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Exception;)Lorg/postgresql/util/PSQLException;
       6: areturn

  private static org.postgresql.util.PSQLException cannotCastException(java.lang.String, java.lang.String, java.lang.Exception);
    Code:
       0: new           #11                 // class org/postgresql/util/PSQLException
       3: dup
       4: ldc           #219                // String Cannot convert an instance of {0} to type {1}
       6: iconst_2
       7: anewarray     #13                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: aastore
      14: dup
      15: iconst_1
      16: aload_1
      17: aastore
      18: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      24: aload_2
      25: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      28: areturn

  public void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iload_3
       4: iconst_m1
       5: invokevirtual #220                // Method setObject:(ILjava/lang/Object;II)V
       8: return

  public void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     19
       8: aload_0
       9: iload_1
      10: sipush        1111
      13: invokevirtual #60                 // Method setNull:(II)V
      16: goto          566
      19: aload_2
      20: instanceof    #102                // class java/util/UUID
      23: ifeq          53
      26: aload_0
      27: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      30: getstatic     #103                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
      33: invokeinterface #104,  2          // InterfaceMethod org/postgresql/core/BaseConnection.haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      38: ifeq          53
      41: aload_0
      42: iload_1
      43: aload_2
      44: checkcast     #102                // class java/util/UUID
      47: invokespecial #105                // Method setUuid:(ILjava/util/UUID;)V
      50: goto          566
      53: aload_2
      54: instanceof    #106                // class java/sql/SQLXML
      57: ifeq          72
      60: aload_0
      61: iload_1
      62: aload_2
      63: checkcast     #106                // class java/sql/SQLXML
      66: invokevirtual #107                // Method setSQLXML:(ILjava/sql/SQLXML;)V
      69: goto          566
      72: aload_2
      73: instanceof    #76                 // class java/lang/String
      76: ifeq          91
      79: aload_0
      80: iload_1
      81: aload_2
      82: checkcast     #76                 // class java/lang/String
      85: invokevirtual #221                // Method setString:(ILjava/lang/String;)V
      88: goto          566
      91: aload_2
      92: instanceof    #199                // class java/math/BigDecimal
      95: ifeq          110
      98: aload_0
      99: iload_1
     100: aload_2
     101: checkcast     #199                // class java/math/BigDecimal
     104: invokevirtual #121                // Method setBigDecimal:(ILjava/math/BigDecimal;)V
     107: goto          566
     110: aload_2
     111: instanceof    #205                // class java/lang/Short
     114: ifeq          132
     117: aload_0
     118: iload_1
     119: aload_2
     120: checkcast     #205                // class java/lang/Short
     123: invokevirtual #222                // Method java/lang/Short.shortValue:()S
     126: invokevirtual #47                 // Method setShort:(IS)V
     129: goto          566
     132: aload_2
     133: instanceof    #204                // class java/lang/Integer
     136: ifeq          154
     139: aload_0
     140: iload_1
     141: aload_2
     142: checkcast     #204                // class java/lang/Integer
     145: invokevirtual #223                // Method java/lang/Integer.intValue:()I
     148: invokevirtual #112                // Method setInt:(II)V
     151: goto          566
     154: aload_2
     155: instanceof    #203                // class java/lang/Long
     158: ifeq          176
     161: aload_0
     162: iload_1
     163: aload_2
     164: checkcast     #203                // class java/lang/Long
     167: invokevirtual #224                // Method java/lang/Long.longValue:()J
     170: invokevirtual #115                // Method setLong:(IJ)V
     173: goto          566
     176: aload_2
     177: instanceof    #209                // class java/lang/Float
     180: ifeq          198
     183: aload_0
     184: iload_1
     185: aload_2
     186: checkcast     #209                // class java/lang/Float
     189: invokevirtual #225                // Method java/lang/Float.floatValue:()F
     192: invokevirtual #117                // Method setFloat:(IF)V
     195: goto          566
     198: aload_2
     199: instanceof    #208                // class java/lang/Double
     202: ifeq          220
     205: aload_0
     206: iload_1
     207: aload_2
     208: checkcast     #208                // class java/lang/Double
     211: invokevirtual #226                // Method java/lang/Double.doubleValue:()D
     214: invokevirtual #119                // Method setDouble:(ID)V
     217: goto          566
     220: aload_2
     221: instanceof    #227                // class "[B"
     224: ifeq          242
     227: aload_0
     228: iload_1
     229: aload_2
     230: checkcast     #227                // class "[B"
     233: checkcast     #227                // class "[B"
     236: invokevirtual #228                // Method setBytes:(I[B)V
     239: goto          566
     242: aload_2
     243: instanceof    #125                // class java/sql/Date
     246: ifeq          261
     249: aload_0
     250: iload_1
     251: aload_2
     252: checkcast     #125                // class java/sql/Date
     255: invokevirtual #126                // Method setDate:(ILjava/sql/Date;)V
     258: goto          566
     261: aload_2
     262: instanceof    #135                // class java/sql/Time
     265: ifeq          280
     268: aload_0
     269: iload_1
     270: aload_2
     271: checkcast     #135                // class java/sql/Time
     274: invokevirtual #136                // Method setTime:(ILjava/sql/Time;)V
     277: goto          566
     280: aload_2
     281: instanceof    #143                // class java/sql/Timestamp
     284: ifeq          299
     287: aload_0
     288: iload_1
     289: aload_2
     290: checkcast     #143                // class java/sql/Timestamp
     293: invokevirtual #144                // Method setTimestamp:(ILjava/sql/Timestamp;)V
     296: goto          566
     299: aload_2
     300: instanceof    #179                // class java/lang/Boolean
     303: ifeq          321
     306: aload_0
     307: iload_1
     308: aload_2
     309: checkcast     #179                // class java/lang/Boolean
     312: invokevirtual #180                // Method java/lang/Boolean.booleanValue:()Z
     315: invokevirtual #156                // Method setBoolean:(IZ)V
     318: goto          566
     321: aload_2
     322: instanceof    #206                // class java/lang/Byte
     325: ifeq          343
     328: aload_0
     329: iload_1
     330: aload_2
     331: checkcast     #206                // class java/lang/Byte
     334: invokevirtual #229                // Method java/lang/Byte.byteValue:()B
     337: invokevirtual #230                // Method setByte:(IB)V
     340: goto          566
     343: aload_2
     344: instanceof    #157                // class java/sql/Blob
     347: ifeq          362
     350: aload_0
     351: iload_1
     352: aload_2
     353: checkcast     #157                // class java/sql/Blob
     356: invokevirtual #158                // Method setBlob:(ILjava/sql/Blob;)V
     359: goto          566
     362: aload_2
     363: instanceof    #163                // class java/sql/Clob
     366: ifeq          381
     369: aload_0
     370: iload_1
     371: aload_2
     372: checkcast     #163                // class java/sql/Clob
     375: invokevirtual #164                // Method setClob:(ILjava/sql/Clob;)V
     378: goto          566
     381: aload_2
     382: instanceof    #166                // class java/sql/Array
     385: ifeq          400
     388: aload_0
     389: iload_1
     390: aload_2
     391: checkcast     #166                // class java/sql/Array
     394: invokevirtual #167                // Method setArray:(ILjava/sql/Array;)V
     397: goto          566
     400: aload_2
     401: instanceof    #169                // class org/postgresql/util/PGobject
     404: ifeq          419
     407: aload_0
     408: iload_1
     409: aload_2
     410: checkcast     #169                // class org/postgresql/util/PGobject
     413: invokespecial #170                // Method setPGobject:(ILorg/postgresql/util/PGobject;)V
     416: goto          566
     419: aload_2
     420: instanceof    #182                // class java/lang/Character
     423: ifeq          441
     426: aload_0
     427: iload_1
     428: aload_2
     429: checkcast     #182                // class java/lang/Character
     432: invokevirtual #231                // Method java/lang/Character.toString:()Ljava/lang/String;
     435: invokevirtual #221                // Method setString:(ILjava/lang/String;)V
     438: goto          566
     441: aload_2
     442: instanceof    #130                // class java/time/LocalDate
     445: ifeq          460
     448: aload_0
     449: iload_1
     450: aload_2
     451: checkcast     #130                // class java/time/LocalDate
     454: invokespecial #131                // Method setDate:(ILjava/time/LocalDate;)V
     457: goto          566
     460: aload_2
     461: instanceof    #138                // class java/time/LocalTime
     464: ifeq          479
     467: aload_0
     468: iload_1
     469: aload_2
     470: checkcast     #138                // class java/time/LocalTime
     473: invokespecial #139                // Method setTime:(ILjava/time/LocalTime;)V
     476: goto          566
     479: aload_2
     480: instanceof    #146                // class java/time/LocalDateTime
     483: ifeq          498
     486: aload_0
     487: iload_1
     488: aload_2
     489: checkcast     #146                // class java/time/LocalDateTime
     492: invokespecial #147                // Method setTimestamp:(ILjava/time/LocalDateTime;)V
     495: goto          566
     498: aload_2
     499: instanceof    #149                // class java/time/OffsetDateTime
     502: ifeq          517
     505: aload_0
     506: iload_1
     507: aload_2
     508: checkcast     #149                // class java/time/OffsetDateTime
     511: invokespecial #150                // Method setTimestamp:(ILjava/time/OffsetDateTime;)V
     514: goto          566
     517: aload_2
     518: instanceof    #171                // class java/util/Map
     521: ifeq          536
     524: aload_0
     525: iload_1
     526: aload_2
     527: checkcast     #171                // class java/util/Map
     530: invokespecial #172                // Method setMap:(ILjava/util/Map;)V
     533: goto          566
     536: new           #11                 // class org/postgresql/util/PSQLException
     539: dup
     540: ldc           #232                // String Can\'\'t infer the SQL type to use for an instance of {0}. Use setObject() with an explicit Types value to specify the type to use.
     542: iconst_1
     543: anewarray     #13                 // class java/lang/Object
     546: dup
     547: iconst_0
     548: aload_2
     549: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     552: invokevirtual #153                // Method java/lang/Class.getName:()Ljava/lang/String;
     555: aastore
     556: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     559: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
     562: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     565: athrow
     566: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnonnull     12
       7: aload_0
       8: invokespecial #109                // Method java/lang/Object.toString:()Ljava/lang/String;
      11: areturn
      12: aload_0
      13: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      16: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      19: aload_0
      20: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      23: invokeinterface #233,  2          // InterfaceMethod org/postgresql/core/Query.toString:(Lorg/postgresql/core/ParameterList;)Ljava/lang/String;
      28: areturn

  protected void bindLiteral(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #234,  4          // InterfaceMethod org/postgresql/core/ParameterList.setLiteralParameter:(ILjava/lang/String;I)V
      22: return

  protected void bindBytes(int, byte[], int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #235,  4          // InterfaceMethod org/postgresql/core/ParameterList.setBinaryParameter:(I[BI)V
      22: return

  private void bindString(int, java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field adjustIndex:Z
       4: ifeq          10
       7: iinc          1, -1
      10: aload_0
      11: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      14: iload_1
      15: aload_2
      16: iload_3
      17: invokeinterface #236,  4          // InterfaceMethod org/postgresql/core/ParameterList.setStringParameter:(ILjava/lang/String;I)V
      22: return

  public boolean isUseServerPrepare();
    Code:
       0: aload_0
       1: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
       4: ifnull        34
       7: aload_0
       8: getfield      #237                // Field m_prepareThreshold:I
      11: ifeq          34
      14: aload_0
      15: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      18: invokevirtual #238                // Method org/postgresql/core/CachedQuery.getExecuteCount:()I
      21: iconst_1
      22: iadd
      23: aload_0
      24: getfield      #237                // Field m_prepareThreshold:I
      27: if_icmplt     34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: new           #11                 // class org/postgresql/util/PSQLException
       7: dup
       8: ldc           #12                 // String Can\'\'t use query methods that take a query string on a PreparedStatement.
      10: iconst_0
      11: anewarray     #13                 // class java/lang/Object
      14: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      17: getstatic     #15                 // Field org/postgresql/util/PSQLState.WRONG_OBJECT_TYPE:Lorg/postgresql/util/PSQLState;
      20: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      23: athrow

  public void addBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: getfield      #239                // Field batchStatements:Ljava/util/ArrayList;
       8: ifnonnull     33
      11: aload_0
      12: new           #240                // class java/util/ArrayList
      15: dup
      16: invokespecial #241                // Method java/util/ArrayList."<init>":()V
      19: putfield      #239                // Field batchStatements:Ljava/util/ArrayList;
      22: aload_0
      23: new           #240                // class java/util/ArrayList
      26: dup
      27: invokespecial #241                // Method java/util/ArrayList."<init>":()V
      30: putfield      #242                // Field batchParameters:Ljava/util/ArrayList;
      33: aload_0
      34: getfield      #242                // Field batchParameters:Ljava/util/ArrayList;
      37: aload_0
      38: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      41: invokeinterface #243,  1          // InterfaceMethod org/postgresql/core/ParameterList.copy:()Lorg/postgresql/core/ParameterList;
      46: invokevirtual #244                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      49: pop
      50: aload_0
      51: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      54: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      57: astore_1
      58: aload_1
      59: instanceof    #245                // class org/postgresql/core/v3/BatchedQuery
      62: ifeq          75
      65: aload_0
      66: getfield      #239                // Field batchStatements:Ljava/util/ArrayList;
      69: invokevirtual #246                // Method java/util/ArrayList.isEmpty:()Z
      72: ifeq          84
      75: aload_0
      76: getfield      #239                // Field batchStatements:Ljava/util/ArrayList;
      79: aload_1
      80: invokevirtual #244                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      83: pop
      84: return

  public java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #247                // Method getResultSet:()Ljava/sql/ResultSet;
       8: astore_1
       9: aload_1
      10: ifnull        23
      13: aload_1
      14: checkcast     #248                // class org/postgresql/jdbc/PgResultSet
      17: invokevirtual #249                // Method org/postgresql/jdbc/PgResultSet.isResultSetClosed:()Z
      20: ifeq          81
      23: bipush        49
      25: istore_2
      26: new           #250                // class org/postgresql/jdbc/PgStatement$StatementResultHandler
      29: dup
      30: aload_0
      31: invokespecial #251                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
      34: astore_3
      35: aload_0
      36: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      39: invokeinterface #252,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      44: aload_0
      45: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      48: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      51: aload_0
      52: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      55: aload_3
      56: iconst_0
      57: iconst_0
      58: iload_2
      59: invokeinterface #253,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      64: aload_3
      65: invokevirtual #254                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler.getResults:()Lorg/postgresql/jdbc/ResultWrapper;
      68: astore        4
      70: aload         4
      72: ifnull        81
      75: aload         4
      77: invokevirtual #24                 // Method org/postgresql/jdbc/ResultWrapper.getResultSet:()Ljava/sql/ResultSet;
      80: astore_1
      81: aload_1
      82: ifnull        92
      85: aload_1
      86: invokeinterface #255,  1          // InterfaceMethod java/sql/ResultSet.getMetaData:()Ljava/sql/ResultSetMetaData;
      91: areturn
      92: aconst_null
      93: areturn

  public void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aconst_null
       5: aload_2
       6: if_acmpne     18
       9: aload_0
      10: iload_1
      11: sipush        2003
      14: invokevirtual #60                 // Method setNull:(II)V
      17: return
      18: new           #256                // class java/lang/StringBuilder
      21: dup
      22: invokespecial #257                // Method java/lang/StringBuilder."<init>":()V
      25: aload_2
      26: invokeinterface #258,  1          // InterfaceMethod java/sql/Array.getBaseTypeName:()Ljava/lang/String;
      31: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: ldc_w         #260                // String []
      37: invokevirtual #259                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: astore_3
      44: aload_0
      45: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      48: invokeinterface #90,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      53: aload_3
      54: invokeinterface #91,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(Ljava/lang/String;)I
      59: istore        4
      61: iload         4
      63: ifne          90
      66: new           #11                 // class org/postgresql/util/PSQLException
      69: dup
      70: ldc           #92                 // String Unknown type {0}.
      72: iconst_1
      73: anewarray     #13                 // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_3
      79: aastore
      80: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      83: getstatic     #42                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_TYPE:Lorg/postgresql/util/PSQLState;
      86: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      89: athrow
      90: aload_2
      91: instanceof    #262                // class org/postgresql/jdbc/PgArray
      94: ifeq          124
      97: aload_2
      98: checkcast     #262                // class org/postgresql/jdbc/PgArray
     101: astore        5
     103: aload         5
     105: invokevirtual #263                // Method org/postgresql/jdbc/PgArray.isBinary:()Z
     108: ifeq          124
     111: aload_0
     112: iload_1
     113: aload         5
     115: invokevirtual #264                // Method org/postgresql/jdbc/PgArray.toBytes:()[B
     118: iload         4
     120: invokevirtual #50                 // Method bindBytes:(I[BI)V
     123: return
     124: aload_0
     125: iload_1
     126: aload_2
     127: invokevirtual #109                // Method java/lang/Object.toString:()Ljava/lang/String;
     130: iload         4
     132: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
     135: return

  protected long createBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #265,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
       9: astore        5
      11: aload         5
      13: invokevirtual #266                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      16: lstore        6
      18: aload         5
      20: lload         6
      22: invokevirtual #267                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      25: astore        8
      27: aload         8
      29: invokevirtual #268                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
      32: astore        9
      34: sipush        4096
      37: newarray       byte
      39: astore        10
      41: lload_3
      42: lconst_0
      43: lcmp
      44: ifle          53
      47: lload_3
      48: lstore        11
      50: goto          58
      53: ldc2_w        #269                // long 9223372036854775807l
      56: lstore        11
      58: aload_2
      59: aload         10
      61: iconst_0
      62: lload_3
      63: lconst_0
      64: lcmp
      65: ifle          84
      68: lload         11
      70: aload         10
      72: arraylength
      73: i2l
      74: lcmp
      75: ifge          84
      78: lload         11
      80: l2i
      81: goto          87
      84: aload         10
      86: arraylength
      87: invokevirtual #271                // Method java/io/InputStream.read:([BII)I
      90: istore        13
      92: iload         13
      94: iconst_m1
      95: if_icmpeq     160
      98: lload         11
     100: lconst_0
     101: lcmp
     102: ifle          160
     105: lload         11
     107: iload         13
     109: i2l
     110: lsub
     111: lstore        11
     113: aload         9
     115: aload         10
     117: iconst_0
     118: iload         13
     120: invokevirtual #272                // Method java/io/OutputStream.write:([BII)V
     123: aload_2
     124: aload         10
     126: iconst_0
     127: lload_3
     128: lconst_0
     129: lcmp
     130: ifle          149
     133: lload         11
     135: aload         10
     137: arraylength
     138: i2l
     139: lcmp
     140: ifge          149
     143: lload         11
     145: l2i
     146: goto          152
     149: aload         10
     151: arraylength
     152: invokevirtual #271                // Method java/io/InputStream.read:([BII)I
     155: istore        13
     157: goto          92
     160: aload         9
     162: invokevirtual #273                // Method java/io/OutputStream.close:()V
     165: goto          213
     168: astore        11
     170: goto          213
     173: astore        11
     175: new           #11                 // class org/postgresql/util/PSQLException
     178: dup
     179: ldc_w         #274                // String Unexpected error writing large object to database.
     182: iconst_0
     183: anewarray     #13                 // class java/lang/Object
     186: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     189: getstatic     #80                 // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     192: aload         11
     194: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     197: athrow
     198: astore        14
     200: aload         9
     202: invokevirtual #273                // Method java/io/OutputStream.close:()V
     205: goto          210
     208: astore        15
     210: aload         14
     212: athrow
     213: lload         6
     215: lreturn
    Exception table:
       from    to  target type
         160   165   168   Class java/lang/Exception
          41   160   173   Class java/io/IOException
          41   160   198   any
         200   205   208   Class java/lang/Exception
         173   200   198   any

  public void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2004
      13: invokevirtual #60                 // Method setNull:(II)V
      16: return
      17: aload_2
      18: invokeinterface #275,  1          // InterfaceMethod java/sql/Blob.getBinaryStream:()Ljava/io/InputStream;
      23: astore_3
      24: aload_0
      25: iload_1
      26: aload_3
      27: aload_2
      28: invokeinterface #276,  1          // InterfaceMethod java/sql/Blob.length:()J
      33: invokevirtual #161                // Method createBlob:(ILjava/io/InputStream;J)J
      36: lstore        4
      38: aload_0
      39: iload_1
      40: lload         4
      42: invokevirtual #115                // Method setLong:(IJ)V
      45: aload_3
      46: invokevirtual #277                // Method java/io/InputStream.close:()V
      49: goto          71
      52: astore        4
      54: goto          71
      57: astore        6
      59: aload_3
      60: invokevirtual #277                // Method java/io/InputStream.close:()V
      63: goto          68
      66: astore        7
      68: aload         6
      70: athrow
      71: return
    Exception table:
       from    to  target type
          45    49    52   Class java/lang/Exception
          24    45    57   any
          59    63    66   Class java/lang/Exception
          57    59    57   any

  private java.lang.String readerToString(java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: sipush        1024
       4: invokestatic  #278                // Method java/lang/Math.min:(II)I
       7: istore_3
       8: new           #256                // class java/lang/StringBuilder
      11: dup
      12: iload_3
      13: invokespecial #279                // Method java/lang/StringBuilder."<init>":(I)V
      16: astore        4
      18: iload_3
      19: newarray       char
      21: astore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iconst_m1
      29: if_icmple     80
      32: aload         4
      34: invokevirtual #280                // Method java/lang/StringBuilder.length:()I
      37: iload_2
      38: if_icmpge     80
      41: aload_1
      42: aload         5
      44: iconst_0
      45: iload_3
      46: iload_2
      47: aload         4
      49: invokevirtual #280                // Method java/lang/StringBuilder.length:()I
      52: isub
      53: invokestatic  #278                // Method java/lang/Math.min:(II)I
      56: invokevirtual #281                // Method java/io/Reader.read:([CII)I
      59: istore        6
      61: iload         6
      63: ifle          26
      66: aload         4
      68: aload         5
      70: iconst_0
      71: iload         6
      73: invokevirtual #282                // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
      76: pop
      77: goto          26
      80: aload         4
      82: invokevirtual #261                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: areturn
      86: astore_3
      87: new           #11                 // class org/postgresql/util/PSQLException
      90: dup
      91: ldc_w         #283                // String Provided Reader failed.
      94: iconst_0
      95: anewarray     #13                 // class java/lang/Object
      98: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     101: getstatic     #80                 // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     104: aload_3
     105: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     108: athrow
    Exception table:
       from    to  target type
           0    85    86   Class java/io/IOException

  public void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        12
      12: invokevirtual #60                 // Method setNull:(II)V
      15: return
      16: iload_3
      17: ifge          47
      20: new           #11                 // class org/postgresql/util/PSQLException
      23: dup
      24: ldc           #70                 // String Invalid stream length {0}.
      26: iconst_1
      27: anewarray     #13                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_3
      33: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: getstatic     #72                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      43: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      46: athrow
      47: aload_0
      48: iload_1
      49: aload_0
      50: aload_2
      51: iload_3
      52: invokespecial #284                // Method readerToString:(Ljava/io/Reader;I)Ljava/lang/String;
      55: invokevirtual #221                // Method setString:(ILjava/lang/String;)V
      58: return

  public void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2005
      13: invokevirtual #60                 // Method setNull:(II)V
      16: return
      17: aload_2
      18: invokeinterface #285,  1          // InterfaceMethod java/sql/Clob.getCharacterStream:()Ljava/io/Reader;
      23: astore_3
      24: aload_2
      25: invokeinterface #174,  1          // InterfaceMethod java/sql/Clob.length:()J
      30: l2i
      31: istore        4
      33: aload_0
      34: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      37: invokeinterface #265,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getLargeObjectAPI:()Lorg/postgresql/largeobject/LargeObjectManager;
      42: astore        5
      44: aload         5
      46: invokevirtual #266                // Method org/postgresql/largeobject/LargeObjectManager.createLO:()J
      49: lstore        6
      51: aload         5
      53: lload         6
      55: invokevirtual #267                // Method org/postgresql/largeobject/LargeObjectManager.open:(J)Lorg/postgresql/largeobject/LargeObject;
      58: astore        8
      60: aload_0
      61: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      64: invokeinterface #99,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getEncoding:()Lorg/postgresql/core/Encoding;
      69: invokevirtual #286                // Method org/postgresql/core/Encoding.name:()Ljava/lang/String;
      72: invokestatic  #287                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
      75: astore        9
      77: aload         8
      79: invokevirtual #268                // Method org/postgresql/largeobject/LargeObject.getOutputStream:()Ljava/io/OutputStream;
      82: astore        10
      84: new           #288                // class java/io/OutputStreamWriter
      87: dup
      88: aload         10
      90: aload         9
      92: invokespecial #289                // Method java/io/OutputStreamWriter."<init>":(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V
      95: astore        11
      97: aload_3
      98: invokevirtual #290                // Method java/io/Reader.read:()I
     101: istore        12
     103: iconst_0
     104: istore        13
     106: iload         12
     108: iconst_m1
     109: if_icmple     138
     112: iload         13
     114: iload         4
     116: if_icmpge     138
     119: aload         11
     121: iload         12
     123: invokevirtual #291                // Method java/io/Writer.write:(I)V
     126: aload_3
     127: invokevirtual #290                // Method java/io/Reader.read:()I
     130: istore        12
     132: iinc          13, 1
     135: goto          106
     138: aload         11
     140: invokevirtual #292                // Method java/io/Writer.close:()V
     143: goto          171
     146: astore        12
     148: new           #11                 // class org/postgresql/util/PSQLException
     151: dup
     152: ldc_w         #274                // String Unexpected error writing large object to database.
     155: iconst_0
     156: anewarray     #13                 // class java/lang/Object
     159: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     162: getstatic     #80                 // Field org/postgresql/util/PSQLState.UNEXPECTED_ERROR:Lorg/postgresql/util/PSQLState;
     165: aload         12
     167: invokespecial #81                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     170: athrow
     171: aload_0
     172: iload_1
     173: lload         6
     175: invokevirtual #115                // Method setLong:(IJ)V
     178: return
    Exception table:
       from    to  target type
          97   143   146   Class java/io/IOException

  public void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokevirtual #60                 // Method setNull:(II)V
      10: return

  public void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #293                // String setRef(int,Ref)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        91
      12: invokevirtual #60                 // Method setNull:(II)V
      15: return
      16: aload_0
      17: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      20: sipush        1082
      23: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      28: ifeq          83
      31: iconst_4
      32: newarray       byte
      34: astore        4
      36: aload_3
      37: ifnull        47
      40: aload_3
      41: invokevirtual #295                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      44: goto          48
      47: aconst_null
      48: astore        5
      50: aload_0
      51: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      54: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      59: aload         5
      61: aload         4
      63: aload_2
      64: invokevirtual #296                // Method org/postgresql/jdbc/TimestampUtils.toBinDate:(Ljava/util/TimeZone;[BLjava/sql/Date;)V
      67: aload_0
      68: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      71: iload_1
      72: aload         4
      74: sipush        1082
      77: invokeinterface #235,  4          // InterfaceMethod org/postgresql/core/ParameterList.setBinaryParameter:(I[BI)V
      82: return
      83: aload_3
      84: ifnonnull     92
      87: aload_0
      88: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
      91: astore_3
      92: aload_0
      93: iload_1
      94: aload_0
      95: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      98: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
     103: aload_3
     104: aload_2
     105: invokevirtual #297                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Date;)Ljava/lang/String;
     108: iconst_0
     109: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
     112: return

  public void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        92
      12: invokevirtual #60                 // Method setNull:(II)V
      15: return
      16: iconst_0
      17: istore        4
      19: aload_2
      20: instanceof    #298                // class org/postgresql/util/PGTime
      23: ifeq          59
      26: aload_2
      27: checkcast     #298                // class org/postgresql/util/PGTime
      30: astore        5
      32: aload         5
      34: invokevirtual #299                // Method org/postgresql/util/PGTime.getCalendar:()Ljava/util/Calendar;
      37: ifnonnull     48
      40: sipush        1083
      43: istore        4
      45: goto          59
      48: sipush        1266
      51: istore        4
      53: aload         5
      55: invokevirtual #299                // Method org/postgresql/util/PGTime.getCalendar:()Ljava/util/Calendar;
      58: astore_3
      59: aload_3
      60: ifnonnull     68
      63: aload_0
      64: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
      67: astore_3
      68: aload_0
      69: iload_1
      70: aload_0
      71: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      74: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      79: aload_3
      80: aload_2
      81: invokevirtual #300                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Time;)Ljava/lang/String;
      84: iload         4
      86: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      89: return

  public void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     16
       8: aload_0
       9: iload_1
      10: bipush        93
      12: invokevirtual #60                 // Method setNull:(II)V
      15: return
      16: iconst_0
      17: istore        4
      19: aload_2
      20: instanceof    #141                // class org/postgresql/util/PGTimestamp
      23: ifeq          59
      26: aload_2
      27: checkcast     #141                // class org/postgresql/util/PGTimestamp
      30: astore        5
      32: aload         5
      34: invokevirtual #301                // Method org/postgresql/util/PGTimestamp.getCalendar:()Ljava/util/Calendar;
      37: ifnonnull     48
      40: sipush        1114
      43: istore        4
      45: goto          59
      48: sipush        1184
      51: istore        4
      53: aload         5
      55: invokevirtual #301                // Method org/postgresql/util/PGTimestamp.getCalendar:()Ljava/util/Calendar;
      58: astore_3
      59: aload_3
      60: ifnonnull     68
      63: aload_0
      64: invokespecial #133                // Method getDefaultCalendar:()Ljava/util/Calendar;
      67: astore_3
      68: aload_0
      69: iload_1
      70: aload_0
      71: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      74: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      79: aload_3
      80: aload_2
      81: invokevirtual #302                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/util/Calendar;Ljava/sql/Timestamp;)Ljava/lang/String;
      84: iload         4
      86: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      89: return

  private void setDate(int, java.time.LocalDate) throws java.sql.SQLException;
    Code:
       0: sipush        1082
       3: istore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      15: aload_2
      16: invokevirtual #303                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/time/LocalDate;)Ljava/lang/String;
      19: iload_3
      20: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      23: return

  private void setTime(int, java.time.LocalTime) throws java.sql.SQLException;
    Code:
       0: sipush        1083
       3: istore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      15: aload_2
      16: invokevirtual #304                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/time/LocalTime;)Ljava/lang/String;
      19: iload_3
      20: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      23: return

  private void setTimestamp(int, java.time.LocalDateTime) throws java.sql.SQLException;
    Code:
       0: sipush        1114
       3: istore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      15: aload_2
      16: invokevirtual #305                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/time/LocalDateTime;)Ljava/lang/String;
      19: iload_3
      20: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      23: return

  private void setTimestamp(int, java.time.OffsetDateTime) throws java.sql.SQLException;
    Code:
       0: sipush        1184
       3: istore_3
       4: aload_0
       5: iload_1
       6: aload_0
       7: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
      15: aload_2
      16: invokevirtual #306                // Method org/postgresql/jdbc/TimestampUtils.toString:(Ljava/time/OffsetDateTime;)Ljava/lang/String;
      19: iload_3
      20: invokespecial #64                 // Method bindString:(ILjava/lang/String;I)V
      23: return

  public java.sql.ParameterMetaData createParameterMetaData(org.postgresql.core.BaseConnection, int[]) throws java.sql.SQLException;
    Code:
       0: new           #307                // class org/postgresql/jdbc/PgParameterMetaData
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #308                // Method org/postgresql/jdbc/PgParameterMetaData."<init>":(Lorg/postgresql/core/BaseConnection;[I)V
       9: areturn

  public void setObject(int, java.lang.Object, java.sql.SQLType, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #309                // String setObject
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setObject(int, java.lang.Object, java.sql.SQLType) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #309                // String setObject
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #310                // String setRowId(int, RowId)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #311                // String setNString(int, String)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #312                // String setNCharacterStream(int, Reader, long)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #313                // String setNCharacterStream(int, Reader)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #314                // String setCharacterStream(int, Reader, long)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #30,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
       9: getstatic     #31                 // Field org/postgresql/jdbc/PreferQueryMode.SIMPLE:Lorg/postgresql/jdbc/PreferQueryMode;
      12: if_acmpne     39
      15: aload_2
      16: ifnull        30
      19: aload_0
      20: aload_2
      21: ldc_w         #315                // int 2147483647
      24: invokespecial #284                // Method readerToString:(Ljava/io/Reader;I)Ljava/lang/String;
      27: goto          31
      30: aconst_null
      31: astore_3
      32: aload_0
      33: iload_1
      34: aload_3
      35: invokevirtual #221                // Method setString:(ILjava/lang/String;)V
      38: return
      39: aload_2
      40: ifnull        54
      43: new           #316                // class org/postgresql/util/ReaderInputStream
      46: dup
      47: aload_2
      48: invokespecial #317                // Method org/postgresql/util/ReaderInputStream."<init>":(Ljava/io/Reader;)V
      51: goto          55
      54: aconst_null
      55: astore_3
      56: aload_0
      57: iload_1
      58: aload_3
      59: iconst_m1
      60: invokevirtual #318                // Method setObject:(ILjava/lang/Object;I)V
      63: return

  public void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: lload_3
       1: ldc2_w        #319                // long 2147483647l
       4: lcmp
       5: ifle          29
       8: new           #11                 // class org/postgresql/util/PSQLException
      11: dup
      12: ldc_w         #321                // String Object is too large to send over the protocol.
      15: iconst_0
      16: anewarray     #13                 // class java/lang/Object
      19: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      22: getstatic     #322                // Field org/postgresql/util/PSQLState.NUMERIC_CONSTANT_OUT_OF_RANGE:Lorg/postgresql/util/PSQLState;
      25: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      28: athrow
      29: aload_0
      30: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      33: iload_1
      34: aload_2
      35: lload_3
      36: l2i
      37: invokeinterface #87,  4           // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(ILjava/io/InputStream;I)V
      42: return

  public void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
       4: iload_1
       5: aload_2
       6: invokeinterface #323,  3          // InterfaceMethod org/postgresql/core/ParameterList.setBytea:(ILjava/io/InputStream;)V
      11: return

  public void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #324                // String setAsciiStream(int, InputStream, long)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #325                // String setAsciiStream(int, InputStream)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #326                // String setNClob(int, NClob)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #327                // String setClob(int, Reader, long)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #328                // String setClob(int, Reader)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2004
      13: invokevirtual #60                 // Method setNull:(II)V
      16: return
      17: lload_3
      18: lconst_0
      19: lcmp
      20: ifge          50
      23: new           #11                 // class org/postgresql/util/PSQLException
      26: dup
      27: ldc           #70                 // String Invalid stream length {0}.
      29: iconst_1
      30: anewarray     #13                 // class java/lang/Object
      33: dup
      34: iconst_0
      35: lload_3
      36: invokestatic  #329                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      39: aastore
      40: invokestatic  #14                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: getstatic     #72                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      46: invokespecial #16                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      49: athrow
      50: aload_0
      51: iload_1
      52: aload_2
      53: lload_3
      54: invokevirtual #161                // Method createBlob:(ILjava/io/InputStream;J)J
      57: lstore        5
      59: aload_0
      60: iload_1
      61: lload         5
      63: invokevirtual #115                // Method setLong:(IJ)V
      66: return

  public void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnonnull     17
       8: aload_0
       9: iload_1
      10: sipush        2004
      13: invokevirtual #60                 // Method setNull:(II)V
      16: return
      17: aload_0
      18: iload_1
      19: aload_2
      20: ldc2_w        #159                // long -1l
      23: invokevirtual #161                // Method createBlob:(ILjava/io/InputStream;J)J
      26: lstore_3
      27: aload_0
      28: iload_1
      29: lload_3
      30: invokevirtual #115                // Method setLong:(IJ)V
      33: return

  public void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #330                // String setNClob(int, Reader, long)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #331                // String setNClob(int, Reader)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method checkClosed:()V
       4: aload_2
       5: ifnull        17
       8: aload_2
       9: invokeinterface #332,  1          // InterfaceMethod java/sql/SQLXML.getString:()Ljava/lang/String;
      14: ifnonnull     28
      17: aload_0
      18: iload_1
      19: sipush        2009
      22: invokevirtual #60                 // Method setNull:(II)V
      25: goto          42
      28: aload_0
      29: iload_1
      30: aload_2
      31: invokeinterface #332,  1          // InterfaceMethod java/sql/SQLXML.getString:()Ljava/lang/String;
      36: sipush        142
      39: invokevirtual #63                 // Method setString:(ILjava/lang/String;I)V
      42: return

  private void setUuid(int, java.util.UUID) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: sipush        2950
       7: invokeinterface #48,  2           // InterfaceMethod org/postgresql/core/BaseConnection.binaryTransferSend:(I)Z
      12: ifeq          51
      15: bipush        16
      17: newarray       byte
      19: astore_3
      20: aload_3
      21: iconst_0
      22: aload_2
      23: invokevirtual #333                // Method java/util/UUID.getMostSignificantBits:()J
      26: invokestatic  #53                 // Method org/postgresql/util/ByteConverter.int8:([BIJ)V
      29: aload_3
      30: bipush        8
      32: aload_2
      33: invokevirtual #334                // Method java/util/UUID.getLeastSignificantBits:()J
      36: invokestatic  #53                 // Method org/postgresql/util/ByteConverter.int8:([BIJ)V
      39: aload_0
      40: iload_1
      41: aload_3
      42: sipush        2950
      45: invokevirtual #50                 // Method bindBytes:(I[BI)V
      48: goto          63
      51: aload_0
      52: iload_1
      53: aload_2
      54: invokevirtual #335                // Method java/util/UUID.toString:()Ljava/lang/String;
      57: sipush        2950
      60: invokevirtual #46                 // Method bindLiteral:(ILjava/lang/String;I)V
      63: return

  public void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #152                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #336                // String setURL(int,URL)
       7: invokestatic  #294                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #337                // Method org/postgresql/jdbc/PgStatement.executeBatch:()[I
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      10: aload_1
      11: areturn
      12: astore_2
      13: aload_0
      14: aconst_null
      15: putfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      18: aload_2
      19: athrow
    Exception table:
       from    to  target type
           0     5    12   any

  private java.util.Calendar getDefaultCalendar();
    Code:
       0: aload_0
       1: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #132,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getTimestampUtils:()Lorg/postgresql/jdbc/TimestampUtils;
       9: astore_1
      10: aload_1
      11: invokevirtual #338                // Method org/postgresql/jdbc/TimestampUtils.hasFastDefaultTimeZone:()Z
      14: ifeq          23
      17: aload_1
      18: aconst_null
      19: invokevirtual #339                // Method org/postgresql/jdbc/TimestampUtils.getSharedCalendar:(Ljava/util/TimeZone;)Ljava/util/Calendar;
      22: areturn
      23: aload_1
      24: aload_0
      25: getfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      28: invokevirtual #339                // Method org/postgresql/jdbc/TimestampUtils.getSharedCalendar:(Ljava/util/TimeZone;)Ljava/util/Calendar;
      31: astore_2
      32: aload_0
      33: getfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      36: ifnonnull     47
      39: aload_0
      40: aload_2
      41: invokevirtual #295                // Method java/util/Calendar.getTimeZone:()Ljava/util/TimeZone;
      44: putfield      #33                 // Field defaultTimeZone:Ljava/util/TimeZone;
      47: aload_2
      48: areturn

  public java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: bipush        49
       2: istore_1
       3: new           #250                // class org/postgresql/jdbc/PgStatement$StatementResultHandler
       6: dup
       7: aload_0
       8: invokespecial #251                // Method org/postgresql/jdbc/PgStatement$StatementResultHandler."<init>":(Lorg/postgresql/jdbc/PgStatement;)V
      11: astore_2
      12: aload_0
      13: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      16: invokeinterface #252,  1          // InterfaceMethod org/postgresql/core/BaseConnection.getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      21: aload_0
      22: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      25: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      28: aload_0
      29: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      32: aload_2
      33: iconst_0
      34: iconst_0
      35: iload_1
      36: invokeinterface #253,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      41: aload_0
      42: getfield      #9                  // Field preparedParameters:Lorg/postgresql/core/ParameterList;
      45: invokeinterface #340,  1          // InterfaceMethod org/postgresql/core/ParameterList.getTypeOIDs:()[I
      50: astore_3
      51: aload_3
      52: ifnull        65
      55: aload_0
      56: aload_0
      57: getfield      #29                 // Field connection:Lorg/postgresql/core/BaseConnection;
      60: aload_3
      61: invokevirtual #341                // Method createParameterMetaData:(Lorg/postgresql/core/BaseConnection;[I)Ljava/sql/ParameterMetaData;
      64: areturn
      65: aconst_null
      66: areturn

  protected void transformQueriesAndParameters() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #242                // Field batchParameters:Ljava/util/ArrayList;
       4: invokevirtual #342                // Method java/util/ArrayList.size:()I
       7: iconst_1
       8: if_icmple     24
      11: aload_0
      12: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      15: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      18: instanceof    #245                // class org/postgresql/core/v3/BatchedQuery
      21: ifne          25
      24: return
      25: aload_0
      26: getfield      #6                  // Field preparedQuery:Lorg/postgresql/core/CachedQuery;
      29: getfield      #7                  // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      32: checkcast     #245                // class org/postgresql/core/v3/BatchedQuery
      35: astore_1
      36: aload_1
      37: invokevirtual #343                // Method org/postgresql/core/v3/BatchedQuery.getBindCount:()I
      40: istore_2
      41: sipush        128
      44: istore_3
      45: iload_2
      46: ifne          55
      49: sipush        1024
      52: goto          73
      55: iconst_1
      56: sipush        32766
      59: iload_2
      60: idiv
      61: invokestatic  #344                // Method java/lang/Math.max:(II)I
      64: sipush        128
      67: invokestatic  #278                // Method java/lang/Math.min:(II)I
      70: invokestatic  #345                // Method java/lang/Integer.highestOneBit:(I)I
      73: istore        4
      75: aload_0
      76: getfield      #242                // Field batchParameters:Ljava/util/ArrayList;
      79: invokevirtual #342                // Method java/util/ArrayList.size:()I
      82: istore        5
      84: iload         5
      86: iload         4
      88: idiv
      89: istore        6
      91: iload         5
      93: iload         4
      95: irem
      96: invokestatic  #346                // Method java/lang/Integer.bitCount:(I)I
      99: istore        7
     101: iload         6
     103: iload         7
     105: iadd
     106: istore        8
     108: new           #240                // class java/util/ArrayList
     111: dup
     112: iload         8
     114: invokespecial #347                // Method java/util/ArrayList."<init>":(I)V
     117: astore        9
     119: new           #240                // class java/util/ArrayList
     122: dup
     123: iload         8
     125: invokespecial #347                // Method java/util/ArrayList."<init>":(I)V
     128: astore        10
     130: iconst_0
     131: istore        11
     133: iconst_0
     134: istore        12
     136: iload         12
     138: iload         8
     140: if_icmpge     250
     143: iload         5
     145: iload         4
     147: if_icmplt     157
     150: iload         4
     152: istore        13
     154: goto          164
     157: iload         5
     159: invokestatic  #345                // Method java/lang/Integer.highestOneBit:(I)I
     162: istore        13
     164: aload_1
     165: iload         13
     167: invokevirtual #348                // Method org/postgresql/core/v3/BatchedQuery.deriveForMultiBatch:(I)Lorg/postgresql/core/v3/BatchedQuery;
     170: astore        14
     172: aload         14
     174: invokevirtual #349                // Method org/postgresql/core/v3/BatchedQuery.createParameterList:()Lorg/postgresql/core/ParameterList;
     177: astore        15
     179: iconst_0
     180: istore        16
     182: iload         16
     184: iload         13
     186: if_icmpge     221
     189: aload_0
     190: getfield      #242                // Field batchParameters:Ljava/util/ArrayList;
     193: iload         11
     195: iinc          11, 1
     198: invokevirtual #350                // Method java/util/ArrayList.get:(I)Ljava/lang/Object;
     201: checkcast     #351                // class org/postgresql/core/ParameterList
     204: astore        17
     206: aload         15
     208: aload         17
     210: invokeinterface #352,  2          // InterfaceMethod org/postgresql/core/ParameterList.appendAll:(Lorg/postgresql/core/ParameterList;)V
     215: iinc          16, 1
     218: goto          182
     221: aload         9
     223: aload         14
     225: invokevirtual #244                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     228: pop
     229: aload         10
     231: aload         15
     233: invokevirtual #244                // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     236: pop
     237: iload         5
     239: iload         13
     241: isub
     242: istore        5
     244: iinc          12, 1
     247: goto          136
     250: aload_0
     251: aload         9
     253: putfield      #239                // Field batchStatements:Ljava/util/ArrayList;
     256: aload_0
     257: aload         10
     259: putfield      #242                // Field batchParameters:Ljava/util/ArrayList;
     262: return
}
