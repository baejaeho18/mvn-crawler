Compiled from "PgConnection.java"
public class org.postgresql.jdbc.PgConnection implements org.postgresql.core.BaseConnection {
  private static final java.util.logging.Logger LOGGER;

  private static final java.sql.SQLPermission SQL_PERMISSION_ABORT;

  private final java.util.Properties _clientInfo;

  private final java.lang.String creatingURL;

  private java.lang.Throwable openStackTrace;

  private final org.postgresql.core.QueryExecutor queryExecutor;

  private final org.postgresql.core.Query commitQuery;

  private final org.postgresql.core.Query rollbackQuery;

  private final org.postgresql.core.TypeInfo _typeCache;

  private boolean disableColumnSanitiser;

  protected int prepareThreshold;

  protected int defaultFetchSize;

  protected boolean forcebinary;

  private int rsHoldability;

  private int savepointId;

  private boolean autoCommit;

  private boolean readOnly;

  private final boolean bindStringAsVarchar;

  private java.sql.SQLWarning firstWarning;

  private volatile java.util.Timer cancelTimer;

  private java.sql.PreparedStatement checkConnectionQuery;

  private final boolean replicationConnection;

  private final org.postgresql.util.LruCache<org.postgresql.jdbc.FieldMetadata$Key, org.postgresql.jdbc.FieldMetadata> fieldMetadataCache;

  private final org.postgresql.jdbc.TimestampUtils timestampUtils;

  protected java.util.Map<java.lang.String, java.lang.Class<?>> typemap;

  private org.postgresql.fastpath.Fastpath fastpath;

  private org.postgresql.largeobject.LargeObjectManager largeobject;

  protected java.sql.DatabaseMetaData metadata;

  private org.postgresql.copy.CopyManager copyManager;

  final org.postgresql.core.CachedQuery borrowQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #2,  2            // InterfaceMethod org/postgresql/core/QueryExecutor.borrowQuery:(Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      10: areturn

  final org.postgresql.core.CachedQuery borrowCallableQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod org/postgresql/core/QueryExecutor.borrowCallableQuery:(Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      10: areturn

  private org.postgresql.core.CachedQuery borrowReturningQuery(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: aload_2
       6: invokeinterface #4,  3            // InterfaceMethod org/postgresql/core/QueryExecutor.borrowReturningQuery:(Ljava/lang/String;[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      11: areturn

  public org.postgresql.core.CachedQuery createQuery(java.lang.String, boolean, boolean, java.lang.String...) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: iload_2
       6: iload_3
       7: aload         4
       9: invokeinterface #5,  5            // InterfaceMethod org/postgresql/core/QueryExecutor.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      14: areturn

  void releaseQuery(org.postgresql.core.CachedQuery);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod org/postgresql/core/QueryExecutor.releaseQuery:(Lorg/postgresql/core/CachedQuery;)V
      10: return

  public void setFlushCacheOnDeallocate(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: iload_1
       5: invokeinterface #7,  2            // InterfaceMethod org/postgresql/core/QueryExecutor.setFlushCacheOnDeallocate:(Z)V
      10: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: ldc           #10                 // String   setFlushCacheOnDeallocate = {0}
      18: iload_1
      19: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      22: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      25: return

  public org.postgresql.jdbc.PgConnection(org.postgresql.util.HostSpec[], java.lang.String, java.lang.String, java.util.Properties, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field disableColumnSanitiser:Z
       9: aload_0
      10: iconst_0
      11: putfield      #15                 // Field forcebinary:Z
      14: aload_0
      15: iconst_2
      16: putfield      #17                 // Field rsHoldability:I
      19: aload_0
      20: iconst_0
      21: putfield      #18                 // Field savepointId:I
      24: aload_0
      25: iconst_1
      26: putfield      #19                 // Field autoCommit:Z
      29: aload_0
      30: iconst_0
      31: putfield      #20                 // Field readOnly:Z
      34: aload_0
      35: aconst_null
      36: putfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      39: aload_0
      40: aconst_null
      41: putfield      #22                 // Field cancelTimer:Ljava/util/Timer;
      44: aload_0
      45: aconst_null
      46: putfield      #23                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      49: aload_0
      50: aconst_null
      51: putfield      #24                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      54: aload_0
      55: aconst_null
      56: putfield      #25                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      59: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      62: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      65: ldc           #27                 // String PostgreSQL JDBC Driver 42.1.1
      67: invokevirtual #28                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;)V
      70: aload_0
      71: aload         5
      73: putfield      #29                 // Field creatingURL:Ljava/lang/String;
      76: aload_0
      77: getstatic     #30                 // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
      80: aload         4
      82: invokevirtual #31                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
      85: invokevirtual #32                 // Method setDefaultFetchSize:(I)V
      88: aload_0
      89: getstatic     #33                 // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
      92: aload         4
      94: invokevirtual #31                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
      97: invokevirtual #34                 // Method setPrepareThreshold:(I)V
     100: aload_0
     101: getfield      #35                 // Field prepareThreshold:I
     104: iconst_m1
     105: if_icmpne     113
     108: aload_0
     109: iconst_1
     110: invokevirtual #36                 // Method setForceBinary:(Z)V
     113: aload_0
     114: aload_1
     115: aload_2
     116: aload_3
     117: aload         4
     119: invokestatic  #37                 // Method org/postgresql/core/ConnectionFactory.openConnection:([Lorg/postgresql/util/HostSpec;Ljava/lang/String;Ljava/lang/String;Ljava/util/Properties;)Lorg/postgresql/core/QueryExecutor;
     122: putfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     125: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     128: getstatic     #38                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     131: invokevirtual #39                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     134: ifeq          167
     137: aload_0
     138: getstatic     #40                 // Field org/postgresql/core/ServerVersion.v8_2:Lorg/postgresql/core/ServerVersion;
     141: invokevirtual #41                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     144: ifne          167
     147: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     150: getstatic     #38                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     153: ldc           #42                 // String Unsupported Server Version: {0}
     155: aload_0
     156: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     159: invokeinterface #43,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
     164: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     167: getstatic     #44                 // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
     170: aload         4
     172: invokevirtual #45                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     175: ifeq          183
     178: aload_0
     179: iconst_1
     180: invokevirtual #46                 // Method setReadOnly:(Z)V
     183: getstatic     #47                 // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
     186: aload         4
     188: invokevirtual #45                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     191: istore        6
     193: new           #48                 // class java/util/HashSet
     196: dup
     197: invokespecial #49                 // Method java/util/HashSet."<init>":()V
     200: astore        7
     202: iload         6
     204: ifeq          524
     207: aload_0
     208: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     211: invokeinterface #50,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getProtocolVersion:()I
     216: iconst_3
     217: if_icmplt     524
     220: aload         7
     222: bipush        17
     224: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     227: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     232: pop
     233: aload         7
     235: bipush        21
     237: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     240: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     245: pop
     246: aload         7
     248: bipush        23
     250: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     253: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     258: pop
     259: aload         7
     261: bipush        20
     263: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     266: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     271: pop
     272: aload         7
     274: sipush        700
     277: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     280: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     285: pop
     286: aload         7
     288: sipush        701
     291: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     294: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     299: pop
     300: aload         7
     302: sipush        1083
     305: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     308: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     313: pop
     314: aload         7
     316: sipush        1082
     319: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     322: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     327: pop
     328: aload         7
     330: sipush        1266
     333: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     336: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     341: pop
     342: aload         7
     344: sipush        1114
     347: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     350: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     355: pop
     356: aload         7
     358: sipush        1184
     361: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     364: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     369: pop
     370: aload         7
     372: sipush        1005
     375: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     378: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     383: pop
     384: aload         7
     386: sipush        1007
     389: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     392: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     397: pop
     398: aload         7
     400: sipush        1016
     403: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     406: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     411: pop
     412: aload         7
     414: sipush        1021
     417: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     420: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     425: pop
     426: aload         7
     428: sipush        1022
     431: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     434: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     439: pop
     440: aload         7
     442: sipush        1022
     445: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     448: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     453: pop
     454: aload         7
     456: sipush        1015
     459: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     462: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     467: pop
     468: aload         7
     470: sipush        1009
     473: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     476: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     481: pop
     482: aload         7
     484: sipush        600
     487: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     490: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     495: pop
     496: aload         7
     498: sipush        603
     501: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     504: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     509: pop
     510: aload         7
     512: sipush        2950
     515: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     518: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     523: pop
     524: aload         7
     526: aload_0
     527: getstatic     #54                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
     530: aload         4
     532: invokevirtual #55                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     535: invokespecial #56                 // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     538: invokeinterface #57,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     543: pop
     544: aload         7
     546: aload_0
     547: getstatic     #58                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
     550: aload         4
     552: invokevirtual #55                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     555: invokespecial #56                 // Method getOidSet:(Ljava/lang/String;)Ljava/util/Set;
     558: invokeinterface #59,  2           // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     563: pop
     564: new           #48                 // class java/util/HashSet
     567: dup
     568: invokespecial #49                 // Method java/util/HashSet."<init>":()V
     571: astore        8
     573: aload         8
     575: aload         7
     577: invokeinterface #57,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     582: pop
     583: new           #48                 // class java/util/HashSet
     586: dup
     587: invokespecial #49                 // Method java/util/HashSet."<init>":()V
     590: astore        9
     592: aload         9
     594: aload         7
     596: invokeinterface #57,  2           // InterfaceMethod java/util/Set.addAll:(Ljava/util/Collection;)Z
     601: pop
     602: aload         8
     604: sipush        1082
     607: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     610: invokeinterface #60,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     615: pop
     616: aload_0
     617: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     620: aload         9
     622: invokeinterface #61,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.setBinaryReceiveOids:(Ljava/util/Set;)V
     627: aload_0
     628: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     631: aload         8
     633: invokeinterface #62,  2           // InterfaceMethod org/postgresql/core/QueryExecutor.setBinarySendOids:(Ljava/util/Set;)V
     638: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     641: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     644: invokevirtual #39                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     647: ifeq          707
     650: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     653: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     656: ldc           #64                 // String     types using binary send = {0}
     658: aload_0
     659: aload         8
     661: invokespecial #65                 // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
     664: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     667: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     670: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     673: ldc           #66                 // String     types using binary receive = {0}
     675: aload_0
     676: aload         9
     678: invokespecial #65                 // Method oidsToString:(Ljava/util/Set;)Ljava/lang/String;
     681: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     684: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     687: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
     690: ldc           #67                 // String     integer date/time = {0}
     692: aload_0
     693: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     696: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getIntegerDateTimes:()Z
     701: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     704: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     707: getstatic     #69                 // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
     710: aload         4
     712: invokevirtual #55                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     715: astore        10
     717: aload         10
     719: ifnull        783
     722: aload         10
     724: ldc           #70                 // String unspecified
     726: invokevirtual #71                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     729: ifeq          740
     732: aload_0
     733: iconst_0
     734: putfield      #72                 // Field bindStringAsVarchar:Z
     737: goto          788
     740: aload         10
     742: ldc           #73                 // String varchar
     744: invokevirtual #71                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     747: ifeq          758
     750: aload_0
     751: iconst_1
     752: putfield      #72                 // Field bindStringAsVarchar:Z
     755: goto          788
     758: new           #74                 // class org/postgresql/util/PSQLException
     761: dup
     762: ldc           #75                 // String Unsupported value for stringtype parameter: {0}
     764: iconst_1
     765: anewarray     #76                 // class java/lang/Object
     768: dup
     769: iconst_0
     770: aload         10
     772: aastore
     773: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     776: getstatic     #78                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
     779: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
     782: athrow
     783: aload_0
     784: iconst_1
     785: putfield      #72                 // Field bindStringAsVarchar:Z
     788: aload_0
     789: new           #80                 // class org/postgresql/jdbc/TimestampUtils
     792: dup
     793: aload_0
     794: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
     797: invokeinterface #68,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getIntegerDateTimes:()Z
     802: ifne          809
     805: iconst_1
     806: goto          810
     809: iconst_0
     810: new           #81                 // class org/postgresql/jdbc/PgConnection$1
     813: dup
     814: aload_0
     815: invokespecial #82                 // Method org/postgresql/jdbc/PgConnection$1."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
     818: invokespecial #83                 // Method org/postgresql/jdbc/TimestampUtils."<init>":(ZLorg/postgresql/core/Provider;)V
     821: putfield      #84                 // Field timestampUtils:Lorg/postgresql/jdbc/TimestampUtils;
     824: aload_0
     825: aload_0
     826: ldc           #85                 // String COMMIT
     828: iconst_0
     829: iconst_1
     830: iconst_0
     831: anewarray     #86                 // class java/lang/String
     834: invokevirtual #87                 // Method createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
     837: getfield      #88                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     840: putfield      #89                 // Field commitQuery:Lorg/postgresql/core/Query;
     843: aload_0
     844: aload_0
     845: ldc           #90                 // String ROLLBACK
     847: iconst_0
     848: iconst_1
     849: iconst_0
     850: anewarray     #86                 // class java/lang/String
     853: invokevirtual #87                 // Method createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
     856: getfield      #88                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
     859: putfield      #91                 // Field rollbackQuery:Lorg/postgresql/core/Query;
     862: getstatic     #92                 // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
     865: aload         4
     867: invokevirtual #31                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
     870: istore        11
     872: aload_0
     873: aload_0
     874: aload_0
     875: iload         11
     877: invokevirtual #93                 // Method createTypeInfo:(Lorg/postgresql/core/BaseConnection;I)Lorg/postgresql/core/TypeInfo;
     880: putfield      #94                 // Field _typeCache:Lorg/postgresql/core/TypeInfo;
     883: aload_0
     884: aload         4
     886: invokespecial #95                 // Method initObjectTypes:(Ljava/util/Properties;)V
     889: getstatic     #96                 // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
     892: aload         4
     894: invokevirtual #45                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     897: ifeq          913
     900: aload_0
     901: new           #97                 // class java/lang/Throwable
     904: dup
     905: ldc           #98                 // String Connection was created at this point:
     907: invokespecial #99                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
     910: putfield      #100                // Field openStackTrace:Ljava/lang/Throwable;
     913: aload_0
     914: getstatic     #101                // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
     917: aload         4
     919: invokevirtual #45                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
     922: putfield      #14                 // Field disableColumnSanitiser:Z
     925: aload_0
     926: invokevirtual #102                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
     929: astore        12
     931: aload_0
     932: getstatic     #103                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
     935: invokevirtual #41                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     938: ifeq          970
     941: aload         12
     943: ldc           #104                // String uuid
     945: sipush        2950
     948: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     951: sipush        1111
     954: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     957: ldc           #106                // String java.util.UUID
     959: sipush        2951
     962: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     965: invokeinterface #107,  6          // InterfaceMethod org/postgresql/core/TypeInfo.addCoreType:(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;)V
     970: aload_0
     971: invokevirtual #102                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
     974: astore        13
     976: aload_0
     977: getstatic     #103                // Field org/postgresql/core/ServerVersion.v8_3:Lorg/postgresql/core/ServerVersion;
     980: invokevirtual #41                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
     983: ifeq          1015
     986: aload         13
     988: ldc           #108                // String xml
     990: sipush        142
     993: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     996: sipush        2009
     999: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1002: ldc           #109                // String java.sql.SQLXML
    1004: sipush        143
    1007: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
    1010: invokeinterface #107,  6          // InterfaceMethod org/postgresql/core/TypeInfo.addCoreType:(Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/Integer;)V
    1015: aload_0
    1016: new           #110                // class java/util/Properties
    1019: dup
    1020: invokespecial #111                // Method java/util/Properties."<init>":()V
    1023: putfield      #112                // Field _clientInfo:Ljava/util/Properties;
    1026: aload_0
    1027: getstatic     #113                // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
    1030: invokevirtual #41                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
    1033: ifeq          1067
    1036: getstatic     #114                // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
    1039: aload         4
    1041: invokevirtual #55                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
    1044: astore        14
    1046: aload         14
    1048: ifnonnull     1055
    1051: ldc           #115                // String
    1053: astore        14
    1055: aload_0
    1056: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
    1059: ldc           #116                // String ApplicationName
    1061: aload         14
    1063: invokevirtual #117                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    1066: pop
    1067: aload_0
    1068: new           #118                // class org/postgresql/util/LruCache
    1071: dup
    1072: iconst_0
    1073: getstatic     #119                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
    1076: aload         4
    1078: invokevirtual #31                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1081: invokestatic  #120                // Method java/lang/Math.max:(II)I
    1084: iconst_0
    1085: getstatic     #121                // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
    1088: aload         4
    1090: invokevirtual #31                 // Method org/postgresql/PGProperty.getInt:(Ljava/util/Properties;)I
    1093: sipush        1024
    1096: imul
    1097: sipush        1024
    1100: imul
    1101: invokestatic  #120                // Method java/lang/Math.max:(II)I
    1104: i2l
    1105: iconst_0
    1106: invokespecial #122                // Method org/postgresql/util/LruCache."<init>":(IJZ)V
    1109: putfield      #123                // Field fieldMetadataCache:Lorg/postgresql/util/LruCache;
    1112: aload_0
    1113: getstatic     #124                // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
    1116: aload         4
    1118: invokevirtual #55                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
    1121: ifnull        1128
    1124: iconst_1
    1125: goto          1129
    1128: iconst_0
    1129: putfield      #125                // Field replicationConnection:Z
    1132: return

  private java.util.Set<java.lang.Integer> getOidSet(java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: new           #48                 // class java/util/HashSet
       3: dup
       4: invokespecial #49                 // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: new           #126                // class java/util/StringTokenizer
      11: dup
      12: aload_1
      13: ldc           #127                // String ,
      15: invokespecial #128                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      18: astore_3
      19: aload_3
      20: invokevirtual #129                // Method java/util/StringTokenizer.hasMoreTokens:()Z
      23: ifeq          50
      26: aload_3
      27: invokevirtual #130                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      30: astore        4
      32: aload_2
      33: aload         4
      35: invokestatic  #131                // Method org/postgresql/core/Oid.valueOf:(Ljava/lang/String;)I
      38: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      46: pop
      47: goto          19
      50: aload_2
      51: areturn

  private java.lang.String oidsToString(java.util.Set<java.lang.Integer>);
    Code:
       0: new           #132                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #134,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          58
      24: aload_3
      25: invokeinterface #136,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #137                // class java/lang/Integer
      33: astore        4
      35: aload_2
      36: aload         4
      38: invokevirtual #138                // Method java/lang/Integer.intValue:()I
      41: invokestatic  #139                // Method org/postgresql/core/Oid.toString:(I)Ljava/lang/String;
      44: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_2
      49: bipush        44
      51: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: goto          15
      58: aload_2
      59: invokevirtual #142                // Method java/lang/StringBuilder.length:()I
      62: ifle          78
      65: aload_2
      66: aload_2
      67: invokevirtual #142                // Method java/lang/StringBuilder.length:()I
      70: iconst_1
      71: isub
      72: invokevirtual #143                // Method java/lang/StringBuilder.setLength:(I)V
      75: goto          85
      78: aload_2
      79: ldc           #144                // String  <none>
      81: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: pop
      85: aload_2
      86: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  public org.postgresql.jdbc.TimestampUtils getTimestampUtils();
    Code:
       0: aload_0
       1: getfield      #84                 // Field timestampUtils:Lorg/postgresql/jdbc/TimestampUtils;
       4: areturn

  public java.sql.Statement createStatement() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: sipush        1003
       4: sipush        1007
       7: invokevirtual #146                // Method createStatement:(II)Ljava/sql/Statement;
      10: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #147                // Method prepareStatement:(Ljava/lang/String;II)Ljava/sql/PreparedStatement;
      11: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #148                // Method prepareCall:(Ljava/lang/String;II)Ljava/sql/CallableStatement;
      11: areturn

  public java.util.Map<java.lang.String, java.lang.Class<?>> getTypeMap() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #150                // Field typemap:Ljava/util/Map;
       8: areturn

  public org.postgresql.core.QueryExecutor getQueryExecutor();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: areturn

  public org.postgresql.core.ReplicationProtocol getReplicationProtocol();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #151,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getReplicationProtocol:()Lorg/postgresql/core/ReplicationProtocol;
       9: areturn

  public void addWarning(java.sql.SQLWarning);
    Code:
       0: aload_0
       1: getfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
       4: ifnull        18
       7: aload_0
       8: getfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      11: aload_1
      12: invokevirtual #152                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      15: goto          23
      18: aload_0
      19: aload_1
      20: putfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      23: return

  public java.sql.ResultSet execSQLQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        1003
       5: sipush        1007
       8: invokevirtual #153                // Method execSQLQuery:(Ljava/lang/String;II)Ljava/sql/ResultSet;
      11: areturn

  public java.sql.ResultSet execSQLQuery(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: invokevirtual #146                // Method createStatement:(II)Ljava/sql/Statement;
       6: checkcast     #154                // class org/postgresql/core/BaseStatement
       9: astore        4
      11: aload         4
      13: aload_1
      14: bipush        16
      16: invokeinterface #156,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      21: istore        5
      23: iload         5
      25: ifne          51
      28: aload         4
      30: invokeinterface #157,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getUpdateCount:()I
      35: iconst_m1
      36: if_icmpeq     51
      39: aload         4
      41: invokeinterface #158,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getMoreResults:()Z
      46: istore        5
      48: goto          23
      51: iload         5
      53: ifne          76
      56: new           #74                 // class org/postgresql/util/PSQLException
      59: dup
      60: ldc           #159                // String No results were returned by the query.
      62: iconst_0
      63: anewarray     #76                 // class java/lang/Object
      66: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: getstatic     #160                // Field org/postgresql/util/PSQLState.NO_DATA:Lorg/postgresql/util/PSQLState;
      72: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      75: athrow
      76: aload         4
      78: invokeinterface #161,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      83: astore        6
      85: aload         6
      87: ifnull        96
      90: aload_0
      91: aload         6
      93: invokevirtual #162                // Method addWarning:(Ljava/sql/SQLWarning;)V
      96: aload         4
      98: invokeinterface #163,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getResultSet:()Ljava/sql/ResultSet;
     103: areturn

  public void execSQLUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
       4: checkcast     #154                // class org/postgresql/core/BaseStatement
       7: astore_2
       8: aload_2
       9: aload_1
      10: bipush        22
      12: invokeinterface #156,  3          // InterfaceMethod org/postgresql/core/BaseStatement.executeWithFlags:(Ljava/lang/String;I)Z
      17: ifeq          40
      20: new           #74                 // class org/postgresql/util/PSQLException
      23: dup
      24: ldc           #165                // String A result was returned when none was expected.
      26: iconst_0
      27: anewarray     #76                 // class java/lang/Object
      30: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #166                // Field org/postgresql/util/PSQLState.TOO_MANY_RESULTS:Lorg/postgresql/util/PSQLState;
      36: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow
      40: aload_2
      41: invokeinterface #161,  1          // InterfaceMethod org/postgresql/core/BaseStatement.getWarnings:()Ljava/sql/SQLWarning;
      46: astore_3
      47: aload_3
      48: ifnull        56
      51: aload_0
      52: aload_3
      53: invokevirtual #162                // Method addWarning:(Ljava/sql/SQLWarning;)V
      56: aload_2
      57: invokeinterface #167,  1          // InterfaceMethod org/postgresql/core/BaseStatement.close:()V
      62: return

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: return

  public java.lang.String getCursorName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aconst_null
       5: areturn

  public java.lang.String getURL() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #29                 // Field creatingURL:Ljava/lang/String;
       4: areturn

  public java.lang.String getUserName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #168,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getUser:()Ljava/lang/String;
       9: areturn

  public org.postgresql.fastpath.Fastpath getFastpathAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #23                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
       8: ifnonnull     23
      11: aload_0
      12: new           #169                // class org/postgresql/fastpath/Fastpath
      15: dup
      16: aload_0
      17: invokespecial #170                // Method org/postgresql/fastpath/Fastpath."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #23                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      23: aload_0
      24: getfield      #23                 // Field fastpath:Lorg/postgresql/fastpath/Fastpath;
      27: areturn

  public org.postgresql.largeobject.LargeObjectManager getLargeObjectAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #24                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #171                // class org/postgresql/largeobject/LargeObjectManager
      15: dup
      16: aload_0
      17: invokespecial #172                // Method org/postgresql/largeobject/LargeObjectManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #24                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      23: aload_0
      24: getfield      #24                 // Field largeobject:Lorg/postgresql/largeobject/LargeObjectManager;
      27: areturn

  public java.lang.Object getObject(java.lang.String, java.lang.String, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #150                // Field typemap:Ljava/util/Map;
       4: ifnull        47
       7: aload_0
       8: getfield      #150                // Field typemap:Ljava/util/Map;
      11: aload_1
      12: invokeinterface #173,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #174                // class java/lang/Class
      20: astore        4
      22: aload         4
      24: ifnull        47
      27: new           #74                 // class org/postgresql/util/PSQLException
      30: dup
      31: ldc           #175                // String Custom type maps are not supported.
      33: iconst_0
      34: anewarray     #76                 // class java/lang/Object
      37: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      40: getstatic     #176                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      43: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      46: athrow
      47: aconst_null
      48: astore        4
      50: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      53: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      56: invokevirtual #39                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      59: ifeq          85
      62: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      65: getstatic     #63                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      68: ldc           #177                // String Constructing object from type={0} value=<{1}>
      70: iconst_2
      71: anewarray     #76                 // class java/lang/Object
      74: dup
      75: iconst_0
      76: aload_1
      77: aastore
      78: dup
      79: iconst_1
      80: aload_2
      81: aastore
      82: invokevirtual #178                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      85: aload_0
      86: getfield      #94                 // Field _typeCache:Lorg/postgresql/core/TypeInfo;
      89: aload_1
      90: invokeinterface #179,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGobject:(Ljava/lang/String;)Ljava/lang/Class;
      95: astore        5
      97: aload         5
      99: ifnull        158
     102: aload         5
     104: invokevirtual #180                // Method java/lang/Class.newInstance:()Ljava/lang/Object;
     107: checkcast     #181                // class org/postgresql/util/PGobject
     110: astore        4
     112: aload         4
     114: aload_1
     115: invokevirtual #182                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     118: aload_3
     119: ifnull        149
     122: aload         4
     124: instanceof    #183                // class org/postgresql/util/PGBinaryObject
     127: ifeq          149
     130: aload         4
     132: checkcast     #183                // class org/postgresql/util/PGBinaryObject
     135: astore        6
     137: aload         6
     139: aload_3
     140: iconst_0
     141: invokeinterface #184,  3          // InterfaceMethod org/postgresql/util/PGBinaryObject.setByteValue:([BI)V
     146: goto          179
     149: aload         4
     151: aload_2
     152: invokevirtual #185                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     155: goto          179
     158: new           #181                // class org/postgresql/util/PGobject
     161: dup
     162: invokespecial #186                // Method org/postgresql/util/PGobject."<init>":()V
     165: astore        4
     167: aload         4
     169: aload_1
     170: invokevirtual #182                // Method org/postgresql/util/PGobject.setType:(Ljava/lang/String;)V
     173: aload         4
     175: aload_2
     176: invokevirtual #185                // Method org/postgresql/util/PGobject.setValue:(Ljava/lang/String;)V
     179: aload         4
     181: areturn
     182: astore        5
     184: aload         5
     186: athrow
     187: astore        5
     189: new           #74                 // class org/postgresql/util/PSQLException
     192: dup
     193: ldc           #189                // String Failed to create object for: {0}.
     195: iconst_1
     196: anewarray     #76                 // class java/lang/Object
     199: dup
     200: iconst_0
     201: aload_1
     202: aastore
     203: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     206: getstatic     #190                // Field org/postgresql/util/PSQLState.CONNECTION_FAILURE:Lorg/postgresql/util/PSQLState;
     209: aload         5
     211: invokespecial #191                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     214: athrow
    Exception table:
       from    to  target type
          85   181   182   Class java/sql/SQLException
          85   181   187   Class java/lang/Exception

  protected org.postgresql.core.TypeInfo createTypeInfo(org.postgresql.core.BaseConnection, int);
    Code:
       0: new           #192                // class org/postgresql/jdbc/TypeInfoCache
       3: dup
       4: aload_1
       5: iload_2
       6: invokespecial #193                // Method org/postgresql/jdbc/TypeInfoCache."<init>":(Lorg/postgresql/core/BaseConnection;I)V
       9: areturn

  public org.postgresql.core.TypeInfo getTypeInfo();
    Code:
       0: aload_0
       1: getfield      #94                 // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       4: areturn

  public void addDataType(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #194                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       6: ldc           #181                // class org/postgresql/util/PGobject
       8: invokevirtual #195                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
      11: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      14: goto          45
      17: astore_3
      18: new           #197                // class java/lang/RuntimeException
      21: dup
      22: new           #132                // class java/lang/StringBuilder
      25: dup
      26: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #198                // String Cannot register new type:
      31: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_3
      35: invokevirtual #199                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #200                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/Exception

  public void addDataType(java.lang.String, java.lang.Class<? extends org.postgresql.util.PGobject>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #94                 // Field _typeCache:Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: aload_2
      10: invokeinterface #201,  3          // InterfaceMethod org/postgresql/core/TypeInfo.addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      15: return

  private void initObjectTypes(java.util.Properties) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: ldc           #202                // String box
       3: ldc           #203                // class org/postgresql/geometric/PGbox
       5: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
       8: aload_0
       9: ldc           #204                // String circle
      11: ldc           #205                // class org/postgresql/geometric/PGcircle
      13: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      16: aload_0
      17: ldc           #206                // String line
      19: ldc           #207                // class org/postgresql/geometric/PGline
      21: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      24: aload_0
      25: ldc           #208                // String lseg
      27: ldc           #209                // class org/postgresql/geometric/PGlseg
      29: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      32: aload_0
      33: ldc           #210                // String path
      35: ldc           #211                // class org/postgresql/geometric/PGpath
      37: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      40: aload_0
      41: ldc           #212                // String point
      43: ldc           #213                // class org/postgresql/geometric/PGpoint
      45: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      48: aload_0
      49: ldc           #214                // String polygon
      51: ldc           #215                // class org/postgresql/geometric/PGpolygon
      53: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      56: aload_0
      57: ldc           #216                // String money
      59: ldc           #217                // class org/postgresql/util/PGmoney
      61: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      64: aload_0
      65: ldc           #218                // String interval
      67: ldc           #219                // class org/postgresql/util/PGInterval
      69: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
      72: aload_1
      73: invokevirtual #220                // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      76: astore_2
      77: aload_2
      78: invokeinterface #221,  1          // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      83: ifeq          180
      86: aload_2
      87: invokeinterface #222,  1          // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      92: checkcast     #86                 // class java/lang/String
      95: astore_3
      96: aload_3
      97: ldc           #223                // String datatype.
      99: invokevirtual #224                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     102: ifeq          177
     105: aload_3
     106: bipush        9
     108: invokevirtual #225                // Method java/lang/String.substring:(I)Ljava/lang/String;
     111: astore        4
     113: aload_1
     114: aload_3
     115: invokevirtual #226                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
     118: astore        5
     120: aload         5
     122: invokestatic  #194                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
     125: astore        6
     127: goto          164
     130: astore        7
     132: new           #74                 // class org/postgresql/util/PSQLException
     135: dup
     136: ldc           #228                // String Unable to load the class {0} responsible for the datatype {1}
     138: iconst_2
     139: anewarray     #76                 // class java/lang/Object
     142: dup
     143: iconst_0
     144: aload         5
     146: aastore
     147: dup
     148: iconst_1
     149: aload         4
     151: aastore
     152: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     155: getstatic     #229                // Field org/postgresql/util/PSQLState.SYSTEM_ERROR:Lorg/postgresql/util/PSQLState;
     158: aload         7
     160: invokespecial #191                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
     163: athrow
     164: aload_0
     165: aload         4
     167: aload         6
     169: ldc           #181                // class org/postgresql/util/PGobject
     171: invokevirtual #195                // Method java/lang/Class.asSubclass:(Ljava/lang/Class;)Ljava/lang/Class;
     174: invokevirtual #196                // Method addDataType:(Ljava/lang/String;Ljava/lang/Class;)V
     177: goto          77
     180: return
    Exception table:
       from    to  target type
         120   127   130   Class java/lang/ClassNotFoundException

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #230                // Method releaseTimer:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #231,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.close:()V
      13: aload_0
      14: aconst_null
      15: putfield      #100                // Field openStackTrace:Ljava/lang/Throwable;
      18: return

  public java.lang.String nativeSQL(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: aload_1
       9: iconst_0
      10: iconst_1
      11: iconst_0
      12: anewarray     #86                 // class java/lang/String
      15: invokeinterface #5,  5            // InterfaceMethod org/postgresql/core/QueryExecutor.createQuery:(Ljava/lang/String;ZZ[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      20: astore_2
      21: aload_2
      22: getfield      #88                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      25: invokeinterface #232,  1          // InterfaceMethod org/postgresql/core/Query.getNativeSql:()Ljava/lang/String;
      30: areturn

  public synchronized java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #233,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getWarnings:()Ljava/sql/SQLWarning;
      13: astore_1
      14: aload_0
      15: getfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      18: ifnonnull     29
      21: aload_0
      22: aload_1
      23: putfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      26: goto          37
      29: aload_0
      30: getfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      33: aload_1
      34: invokevirtual #152                // Method java/sql/SQLWarning.setNextWarning:(Ljava/sql/SQLWarning;)V
      37: aload_0
      38: getfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      41: areturn

  public synchronized void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #233,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getWarnings:()Ljava/sql/SQLWarning;
      13: pop
      14: aload_0
      15: aconst_null
      16: putfield      #21                 // Field firstWarning:Ljava/sql/SQLWarning;
      19: return

  public void setReadOnly(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      13: getstatic     #235                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      16: if_acmpeq     39
      19: new           #74                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc           #236                // String Cannot change transaction read-only property in the middle of a transaction.
      25: iconst_0
      26: anewarray     #76                 // class java/lang/Object
      29: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: getstatic     #237                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      35: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      38: athrow
      39: iload_1
      40: aload_0
      41: getfield      #20                 // Field readOnly:Z
      44: if_icmpeq     82
      47: new           #132                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #238                // String SET SESSION CHARACTERISTICS AS TRANSACTION
      56: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: iload_1
      60: ifeq          68
      63: ldc           #239                // String READ ONLY
      65: goto          70
      68: ldc           #240                // String READ WRITE
      70: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: astore_2
      77: aload_0
      78: aload_2
      79: invokevirtual #241                // Method execSQLUpdate:(Ljava/lang/String;)V
      82: aload_0
      83: iload_1
      84: putfield      #20                 // Field readOnly:Z
      87: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      90: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      93: ldc           #242                // String   setReadOnly = {0}
      95: iload_1
      96: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      99: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     102: return

  public boolean isReadOnly() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #20                 // Field readOnly:Z
       8: ireturn

  public void setAutoCommit(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field autoCommit:Z
       8: iload_1
       9: if_icmpne     13
      12: return
      13: aload_0
      14: getfield      #19                 // Field autoCommit:Z
      17: ifne          24
      20: aload_0
      21: invokevirtual #243                // Method commit:()V
      24: aload_0
      25: iload_1
      26: putfield      #19                 // Field autoCommit:Z
      29: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      32: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      35: ldc           #244                // String   setAutoCommit = {0}
      37: iload_1
      38: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      44: return

  public boolean getAutoCommit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field autoCommit:Z
       8: ireturn

  private void executeTransactionCommand(org.postgresql.core.Query) throws java.sql.SQLException;
    Code:
       0: bipush        22
       2: istore_2
       3: aload_0
       4: getfield      #35                 // Field prepareThreshold:I
       7: ifne          14
      10: iload_2
      11: iconst_1
      12: ior
      13: istore_2
      14: aload_0
      15: invokevirtual #245                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      18: aload_1
      19: aconst_null
      20: new           #246                // class org/postgresql/jdbc/PgConnection$TransactionCommandHandler
      23: dup
      24: aload_0
      25: aconst_null
      26: invokespecial #247                // Method org/postgresql/jdbc/PgConnection$TransactionCommandHandler."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/jdbc/PgConnection$1;)V
      29: iconst_0
      30: iconst_0
      31: iload_2
      32: invokeinterface #248,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      37: goto          94
      40: astore_3
      41: aload_1
      42: invokeinterface #249,  1          // InterfaceMethod org/postgresql/core/Query.getSubqueries:()[Lorg/postgresql/core/Query;
      47: ifnonnull     63
      50: aload_0
      51: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      54: aload_3
      55: invokeinterface #250,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.willHealOnRetry:(Ljava/sql/SQLException;)Z
      60: ifne          65
      63: aload_3
      64: athrow
      65: aload_1
      66: invokeinterface #251,  1          // InterfaceMethod org/postgresql/core/Query.close:()V
      71: aload_0
      72: invokevirtual #245                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
      75: aload_1
      76: aconst_null
      77: new           #246                // class org/postgresql/jdbc/PgConnection$TransactionCommandHandler
      80: dup
      81: aload_0
      82: aconst_null
      83: invokespecial #247                // Method org/postgresql/jdbc/PgConnection$TransactionCommandHandler."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/jdbc/PgConnection$1;)V
      86: iconst_0
      87: iconst_0
      88: iload_2
      89: invokeinterface #248,  7          // InterfaceMethod org/postgresql/core/QueryExecutor.execute:(Lorg/postgresql/core/Query;Lorg/postgresql/core/ParameterList;Lorg/postgresql/core/ResultHandler;III)V
      94: return
    Exception table:
       from    to  target type
          14    37    40   Class java/sql/SQLException

  public void commit() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field autoCommit:Z
       8: ifeq          31
      11: new           #74                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc           #252                // String Cannot commit when autoCommit is enabled.
      17: iconst_0
      18: anewarray     #76                 // class java/lang/Object
      21: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: getstatic     #253                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      27: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      30: athrow
      31: aload_0
      32: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      35: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      40: getstatic     #235                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      43: if_acmpeq     54
      46: aload_0
      47: aload_0
      48: getfield      #89                 // Field commitQuery:Lorg/postgresql/core/Query;
      51: invokespecial #254                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      54: return

  protected void checkClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #255                // Method isClosed:()Z
       4: ifeq          28
       7: new           #74                 // class org/postgresql/util/PSQLException
      10: dup
      11: ldc_w         #256                // String This connection has been closed.
      14: iconst_0
      15: anewarray     #76                 // class java/lang/Object
      18: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      21: getstatic     #257                // Field org/postgresql/util/PSQLState.CONNECTION_DOES_NOT_EXIST:Lorg/postgresql/util/PSQLState;
      24: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      27: athrow
      28: return

  public void rollback() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #19                 // Field autoCommit:Z
       8: ifeq          32
      11: new           #74                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #258                // String Cannot rollback when autoCommit is enabled.
      18: iconst_0
      19: anewarray     #76                 // class java/lang/Object
      22: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #253                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      36: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      41: getstatic     #235                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      44: if_acmpeq     55
      47: aload_0
      48: aload_0
      49: getfield      #91                 // Field rollbackQuery:Lorg/postgresql/core/Query;
      52: invokespecial #254                // Method executeTransactionCommand:(Lorg/postgresql/core/Query;)V
      55: return

  public org.postgresql.core.TransactionState getTransactionState();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
       9: areturn

  public int getTransactionIsolation() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aconst_null
       5: astore_1
       6: aload_0
       7: ldc_w         #259                // String SHOW TRANSACTION ISOLATION LEVEL
      10: invokevirtual #260                // Method execSQLQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      13: astore_2
      14: aload_2
      15: invokeinterface #261,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      20: ifeq          31
      23: aload_2
      24: iconst_1
      25: invokeinterface #262,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      30: astore_1
      31: aload_2
      32: invokeinterface #263,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      37: aload_1
      38: ifnonnull     43
      41: iconst_2
      42: ireturn
      43: aload_1
      44: getstatic     #265                // Field java/util/Locale.US:Ljava/util/Locale;
      47: invokevirtual #266                // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      50: astore_1
      51: aload_1
      52: ldc_w         #267                // String READ COMMITTED
      55: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_2
      62: ireturn
      63: aload_1
      64: ldc_w         #269                // String READ UNCOMMITTED
      67: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      70: ifeq          75
      73: iconst_1
      74: ireturn
      75: aload_1
      76: ldc_w         #270                // String REPEATABLE READ
      79: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          87
      85: iconst_4
      86: ireturn
      87: aload_1
      88: ldc_w         #271                // String SERIALIZABLE
      91: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      94: ifeq          100
      97: bipush        8
      99: ireturn
     100: iconst_2
     101: ireturn

  public void setTransactionIsolation(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #234,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getTransactionState:()Lorg/postgresql/core/TransactionState;
      13: getstatic     #235                // Field org/postgresql/core/TransactionState.IDLE:Lorg/postgresql/core/TransactionState;
      16: if_acmpeq     40
      19: new           #74                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #272                // String Cannot change transaction isolation level in the middle of a transaction.
      26: iconst_0
      27: anewarray     #76                 // class java/lang/Object
      30: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #237                // Field org/postgresql/util/PSQLState.ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      36: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow
      40: aload_0
      41: iload_1
      42: invokevirtual #273                // Method getIsolationLevelName:(I)Ljava/lang/String;
      45: astore_2
      46: aload_2
      47: ifnonnull     78
      50: new           #74                 // class org/postgresql/util/PSQLException
      53: dup
      54: ldc_w         #274                // String Transaction isolation level {0} not supported.
      57: iconst_1
      58: anewarray     #76                 // class java/lang/Object
      61: dup
      62: iconst_0
      63: iload_1
      64: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: aastore
      68: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      71: getstatic     #176                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      74: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      77: athrow
      78: new           #132                // class java/lang/StringBuilder
      81: dup
      82: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      85: ldc_w         #275                // String SET SESSION CHARACTERISTICS AS TRANSACTION ISOLATION LEVEL
      88: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_2
      92: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: astore_3
      99: aload_0
     100: aload_3
     101: invokevirtual #241                // Method execSQLUpdate:(Ljava/lang/String;)V
     104: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     107: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     110: ldc_w         #276                // String   setTransactionIsolation = {0}
     113: aload_2
     114: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
     117: return

  protected java.lang.String getIsolationLevelName(int);
    Code:
       0: iload_1
       1: tableswitch   { // 1 to 8
                     1: 56
                     2: 48
                     3: 64
                     4: 60
                     5: 64
                     6: 64
                     7: 64
                     8: 52
               default: 64
          }
      48: ldc_w         #267                // String READ COMMITTED
      51: areturn
      52: ldc_w         #271                // String SERIALIZABLE
      55: areturn
      56: ldc_w         #269                // String READ UNCOMMITTED
      59: areturn
      60: ldc_w         #270                // String REPEATABLE READ
      63: areturn
      64: aconst_null
      65: areturn

  public void setCatalog(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: return

  public java.lang.String getCatalog() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #277,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getDatabase:()Ljava/lang/String;
      13: areturn

  protected void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #100                // Field openStackTrace:Ljava/lang/Throwable;
       4: ifnull        30
       7: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      10: getstatic     #38                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      13: ldc_w         #278                // String Finalizing a Connection that was never closed:
      16: iconst_0
      17: anewarray     #76                 // class java/lang/Object
      20: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      23: aload_0
      24: getfield      #100                // Field openStackTrace:Ljava/lang/Throwable;
      27: invokevirtual #279                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
      30: aload_0
      31: invokevirtual #280                // Method close:()V
      34: aload_0
      35: invokespecial #281                // Method java/lang/Object.finalize:()V
      38: goto          48
      41: astore_1
      42: aload_0
      43: invokespecial #281                // Method java/lang/Object.finalize:()V
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
           0    34    41   any

  public java.lang.String getDBVersionNumber();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #43,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
       9: areturn

  public int getServerMajorVersion();
    Code:
       0: new           #126                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #43,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #282                // String .
      16: invokespecial #128                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #130                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: invokestatic  #283                // Method integerPart:(Ljava/lang/String;)I
      27: ireturn
      28: astore_1
      29: iconst_0
      30: ireturn
    Exception table:
       from    to  target type
           0    27    28   Class java/util/NoSuchElementException

  public int getServerMinorVersion();
    Code:
       0: new           #126                // class java/util/StringTokenizer
       3: dup
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #43,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersion:()Ljava/lang/String;
      13: ldc_w         #282                // String .
      16: invokespecial #128                // Method java/util/StringTokenizer."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: astore_1
      20: aload_1
      21: invokevirtual #130                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      24: pop
      25: aload_1
      26: invokevirtual #130                // Method java/util/StringTokenizer.nextToken:()Ljava/lang/String;
      29: invokestatic  #283                // Method integerPart:(Ljava/lang/String;)I
      32: ireturn
      33: astore_1
      34: iconst_0
      35: ireturn
    Exception table:
       from    to  target type
           0    32    33   Class java/util/NoSuchElementException

  public boolean haveMinimumServerVersion(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #285,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getServerVersionNum:()I
       9: iload_1
      10: if_icmplt     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean haveMinimumServerVersion(org.postgresql.core.Version);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #286,  1          // InterfaceMethod org/postgresql/core/Version.getVersionNum:()I
       7: invokevirtual #287                // Method haveMinimumServerVersion:(I)Z
      10: ireturn

  public org.postgresql.core.Encoding getEncoding();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #288,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getEncoding:()Lorg/postgresql/core/Encoding;
       9: areturn

  public byte[] encodeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #289                // Method getEncoding:()Lorg/postgresql/core/Encoding;
       4: aload_1
       5: invokevirtual #290                // Method org/postgresql/core/Encoding.encode:(Ljava/lang/String;)[B
       8: areturn
       9: astore_2
      10: new           #74                 // class org/postgresql/util/PSQLException
      13: dup
      14: ldc_w         #292                // String Unable to translate data into the desired encoding.
      17: iconst_0
      18: anewarray     #76                 // class java/lang/Object
      21: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      24: getstatic     #293                // Field org/postgresql/util/PSQLState.DATA_ERROR:Lorg/postgresql/util/PSQLState;
      27: aload_2
      28: invokespecial #191                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;Ljava/lang/Throwable;)V
      31: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/io/IOException

  public java.lang.String escapeString(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       6: invokeinterface #294,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
      11: invokestatic  #295                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public boolean getStandardConformingStrings();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #294,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
       9: ireturn

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #296,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.isClosed:()Z
       9: ireturn

  public void cancelQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       8: invokeinterface #297,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.sendQueryCancel:()V
      13: return

  public org.postgresql.PGNotification[] getNotifications() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_m1
       2: invokevirtual #298                // Method getNotifications:(I)[Lorg/postgresql/PGNotification;
       5: areturn

  public org.postgresql.PGNotification[] getNotifications(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #245                // Method getQueryExecutor:()Lorg/postgresql/core/QueryExecutor;
       8: iload_1
       9: invokeinterface #299,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.processNotifies:(I)V
      14: aload_0
      15: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      18: invokeinterface #300,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getNotifications:()[Lorg/postgresql/PGNotification;
      23: astore_2
      24: aload_2
      25: arraylength
      26: ifne          33
      29: aconst_null
      30: goto          34
      33: aload_2
      34: areturn

  public int getPrepareThreshold();
    Code:
       0: aload_0
       1: getfield      #35                 // Field prepareThreshold:I
       4: ireturn

  public void setDefaultFetchSize(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifge          25
       4: new           #74                 // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #301                // String Fetch size must be a value greater to or equal to 0.
      11: iconst_0
      12: anewarray     #76                 // class java/lang/Object
      15: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      18: getstatic     #78                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      21: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      24: athrow
      25: aload_0
      26: iload_1
      27: putfield      #302                // Field defaultFetchSize:I
      30: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      33: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      36: ldc_w         #303                // String   setDefaultFetchSize = {0}
      39: iload_1
      40: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      46: return

  public int getDefaultFetchSize();
    Code:
       0: aload_0
       1: getfield      #302                // Field defaultFetchSize:I
       4: ireturn

  public void setPrepareThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #35                 // Field prepareThreshold:I
       5: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #304                // String   setPrepareThreshold = {0}
      14: iload_1
      15: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public boolean getForceBinary();
    Code:
       0: aload_0
       1: getfield      #15                 // Field forcebinary:Z
       4: ireturn

  public void setForceBinary(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field forcebinary:Z
       5: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #305                // String   setForceBinary = {0}
      14: iload_1
      15: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public void setTypeMapImpl(java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #150                // Field typemap:Ljava/util/Map;
       5: return

  public java.util.logging.Logger getLogger();
    Code:
       0: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
       3: areturn

  public int getProtocolVersion();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #50,  1           // InterfaceMethod org/postgresql/core/QueryExecutor.getProtocolVersion:()I
       9: ireturn

  public boolean getStringVarcharFlag();
    Code:
       0: aload_0
       1: getfield      #72                 // Field bindStringAsVarchar:Z
       4: ireturn

  public org.postgresql.copy.CopyManager getCopyAPI() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #25                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
       8: ifnonnull     23
      11: aload_0
      12: new           #306                // class org/postgresql/copy/CopyManager
      15: dup
      16: aload_0
      17: invokespecial #307                // Method org/postgresql/copy/CopyManager."<init>":(Lorg/postgresql/core/BaseConnection;)V
      20: putfield      #25                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      23: aload_0
      24: getfield      #25                 // Field copyManager:Lorg/postgresql/copy/CopyManager;
      27: areturn

  public boolean binaryTransferSend(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: iload_1
       5: invokeinterface #308,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.useBinaryForSend:(I)Z
      10: ireturn

  public int getBackendPID();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #309,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getBackendPID:()I
       9: ireturn

  public boolean isColumnSanitiserDisabled();
    Code:
       0: aload_0
       1: getfield      #14                 // Field disableColumnSanitiser:Z
       4: ireturn

  public void setDisableColumnSanitiser(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field disableColumnSanitiser:Z
       5: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #310                // String   setDisableColumnSanitiser = {0}
      14: iload_1
      15: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      18: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      21: return

  public org.postgresql.jdbc.PreferQueryMode getPreferQueryMode();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #311,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getPreferQueryMode:()Lorg/postgresql/jdbc/PreferQueryMode;
       9: areturn

  public org.postgresql.jdbc.AutoSave getAutosave();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #312,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getAutoSave:()Lorg/postgresql/jdbc/AutoSave;
       9: areturn

  public void setAutosave(org.postgresql.jdbc.AutoSave);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: aload_1
       5: invokeinterface #313,  2          // InterfaceMethod org/postgresql/core/QueryExecutor.setAutoSave:(Lorg/postgresql/jdbc/AutoSave;)V
      10: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: ldc_w         #314                // String   setAutosave = {0}
      19: aload_1
      20: invokevirtual #315                // Method org/postgresql/jdbc/AutoSave.value:()Ljava/lang/String;
      23: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      26: return

  protected void abort();
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: invokeinterface #316,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.abort:()V
       9: return

  private synchronized java.util.Timer getTimer();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cancelTimer:Ljava/util/Timer;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #317                // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      11: invokevirtual #318                // Method org/postgresql/util/SharedTimer.getTimer:()Ljava/util/Timer;
      14: putfield      #22                 // Field cancelTimer:Ljava/util/Timer;
      17: aload_0
      18: getfield      #22                 // Field cancelTimer:Ljava/util/Timer;
      21: areturn

  private synchronized void releaseTimer();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cancelTimer:Ljava/util/Timer;
       4: ifnull        18
       7: aload_0
       8: aconst_null
       9: putfield      #22                 // Field cancelTimer:Ljava/util/Timer;
      12: invokestatic  #317                // Method org/postgresql/Driver.getSharedTimer:()Lorg/postgresql/util/SharedTimer;
      15: invokevirtual #319                // Method org/postgresql/util/SharedTimer.releaseTimer:()V
      18: return

  public void addTimerTask(java.util.TimerTask, long);
    Code:
       0: aload_0
       1: invokespecial #320                // Method getTimer:()Ljava/util/Timer;
       4: astore        4
       6: aload         4
       8: aload_1
       9: lload_2
      10: invokevirtual #321                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;J)V
      13: return

  public void purgeTimerTasks();
    Code:
       0: aload_0
       1: getfield      #22                 // Field cancelTimer:Ljava/util/Timer;
       4: astore_1
       5: aload_1
       6: ifnull        14
       9: aload_1
      10: invokevirtual #322                // Method java/util/Timer.purge:()I
      13: pop
      14: return

  public java.lang.String escapeIdentifier(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: invokestatic  #323                // Method org/postgresql/core/Utils.escapeIdentifier:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;
       5: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
       8: areturn

  public java.lang.String escapeLiteral(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aconst_null
       1: aload_1
       2: aload_0
       3: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       6: invokeinterface #294,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getStandardConformingStrings:()Z
      11: invokestatic  #295                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      14: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      17: areturn

  public org.postgresql.util.LruCache<org.postgresql.jdbc.FieldMetadata$Key, org.postgresql.jdbc.FieldMetadata> getFieldMetadataCache();
    Code:
       0: aload_0
       1: getfield      #123                // Field fieldMetadataCache:Lorg/postgresql/util/LruCache;
       4: areturn

  public org.postgresql.replication.PGReplicationConnection getReplicationAPI();
    Code:
       0: new           #324                // class org/postgresql/replication/PGReplicationConnectionImpl
       3: dup
       4: aload_0
       5: invokespecial #325                // Method org/postgresql/replication/PGReplicationConnectionImpl."<init>":(Lorg/postgresql/core/BaseConnection;)V
       8: areturn

  private static void appendArray(java.lang.StringBuilder, java.lang.Object, char);
    Code:
       0: aload_0
       1: bipush        123
       3: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
       6: pop
       7: aload_1
       8: invokestatic  #326                // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     96
      21: iload         4
      23: ifle          32
      26: aload_0
      27: iload_2
      28: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_1
      33: iload         4
      35: invokestatic  #327                // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
      38: astore        5
      40: aload         5
      42: ifnonnull     56
      45: aload_0
      46: ldc_w         #328                // String NULL
      49: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: pop
      53: goto          90
      56: aload         5
      58: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #330                // Method java/lang/Class.isArray:()Z
      64: ifeq          77
      67: aload_0
      68: aload         5
      70: iload_2
      71: invokestatic  #331                // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      74: goto          90
      77: aload         5
      79: invokevirtual #332                // Method java/lang/Object.toString:()Ljava/lang/String;
      82: astore        6
      84: aload_0
      85: aload         6
      87: invokestatic  #333                // Method org/postgresql/jdbc/PgArray.escapeArrayElement:(Ljava/lang/StringBuilder;Ljava/lang/String;)V
      90: iinc          4, 1
      93: goto          15
      96: aload_0
      97: bipush        125
      99: invokevirtual #141                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     102: pop
     103: return

  private static int integerPart(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: invokevirtual #334                // Method java/lang/String.length:()I
       7: if_icmpge     27
      10: aload_0
      11: iload_1
      12: invokevirtual #335                // Method java/lang/String.charAt:(I)C
      15: invokestatic  #336                // Method java/lang/Character.isDigit:(C)Z
      18: ifne          27
      21: iinc          1, 1
      24: goto          2
      27: iload_1
      28: istore_2
      29: iload_2
      30: aload_0
      31: invokevirtual #334                // Method java/lang/String.length:()I
      34: if_icmpge     54
      37: aload_0
      38: iload_2
      39: invokevirtual #335                // Method java/lang/String.charAt:(I)C
      42: invokestatic  #336                // Method java/lang/Character.isDigit:(C)Z
      45: ifeq          54
      48: iinc          2, 1
      51: goto          29
      54: iload_1
      55: iload_2
      56: if_icmpne     61
      59: iconst_0
      60: ireturn
      61: aload_0
      62: iload_1
      63: iload_2
      64: invokevirtual #337                // Method java/lang/String.substring:(II)Ljava/lang/String;
      67: invokestatic  #338                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      70: ireturn

  public java.sql.Statement createStatement(int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: new           #339                // class org/postgresql/jdbc/PgStatement
       7: dup
       8: aload_0
       9: iload_1
      10: iload_2
      11: iload_3
      12: invokespecial #340                // Method org/postgresql/jdbc/PgStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;III)V
      15: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: new           #341                // class org/postgresql/jdbc/PgPreparedStatement
       7: dup
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: invokespecial #342                // Method org/postgresql/jdbc/PgPreparedStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Ljava/lang/String;III)V
      17: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String, int, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: new           #343                // class org/postgresql/jdbc/PgCallableStatement
       7: dup
       8: aload_0
       9: aload_1
      10: iload_2
      11: iload_3
      12: iload         4
      14: invokespecial #344                // Method org/postgresql/jdbc/PgCallableStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Ljava/lang/String;III)V
      17: areturn

  public java.sql.DatabaseMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #345                // Field metadata:Ljava/sql/DatabaseMetaData;
       8: ifnonnull     23
      11: aload_0
      12: new           #346                // class org/postgresql/jdbc/PgDatabaseMetaData
      15: dup
      16: aload_0
      17: invokespecial #347                // Method org/postgresql/jdbc/PgDatabaseMetaData."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
      20: putfield      #345                // Field metadata:Ljava/sql/DatabaseMetaData;
      23: aload_0
      24: getfield      #345                // Field metadata:Ljava/sql/DatabaseMetaData;
      27: areturn

  public void setTypeMap(java.util.Map<java.lang.String, java.lang.Class<?>>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #348                // Method setTypeMapImpl:(Ljava/util/Map;)V
       5: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
       8: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      11: ldc_w         #349                // String   setTypeMap = {0}
      14: aload_1
      15: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      18: return

  protected java.sql.Array makeArray(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #350                // class org/postgresql/jdbc/PgArray
       3: dup
       4: aload_0
       5: iload_1
       6: aload_2
       7: invokespecial #351                // Method org/postgresql/jdbc/PgArray."<init>":(Lorg/postgresql/core/BaseConnection;ILjava/lang/String;)V
      10: areturn

  protected java.sql.Blob makeBlob(long) throws java.sql.SQLException;
    Code:
       0: new           #352                // class org/postgresql/jdbc/PgBlob
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #353                // Method org/postgresql/jdbc/PgBlob."<init>":(Lorg/postgresql/core/BaseConnection;J)V
       9: areturn

  protected java.sql.Clob makeClob(long) throws java.sql.SQLException;
    Code:
       0: new           #354                // class org/postgresql/jdbc/PgClob
       3: dup
       4: aload_0
       5: lload_1
       6: invokespecial #355                // Method org/postgresql/jdbc/PgClob."<init>":(Lorg/postgresql/core/BaseConnection;J)V
       9: areturn

  protected java.sql.SQLXML makeSQLXML() throws java.sql.SQLException;
    Code:
       0: new           #356                // class org/postgresql/jdbc/PgSQLXML
       3: dup
       4: aload_0
       5: invokespecial #357                // Method org/postgresql/jdbc/PgSQLXML."<init>":(Lorg/postgresql/core/BaseConnection;)V
       8: areturn

  public java.sql.Clob createClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #358                // String createClob()
      11: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.Blob createBlob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #360                // String createBlob()
      11: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.NClob createNClob() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #361                // String createNClob()
      11: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.SQLXML createSQLXML() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #362                // Method makeSQLXML:()Ljava/sql/SQLXML;
       8: areturn

  public java.sql.Struct createStruct(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #363                // String createStruct(String, Object[])
      11: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public java.sql.Array createArrayOf(java.lang.String, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #102                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       8: aload_1
       9: invokeinterface #364,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getPGArrayType:(Ljava/lang/String;)I
      14: istore_3
      15: iload_3
      16: ifne          44
      19: new           #74                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #365                // String Unable to find server array type for provided name {0}.
      26: iconst_1
      27: anewarray     #76                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: aload_1
      33: aastore
      34: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      37: getstatic     #366                // Field org/postgresql/util/PSQLState.INVALID_NAME:Lorg/postgresql/util/PSQLState;
      40: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      43: athrow
      44: aload_0
      45: invokevirtual #102                // Method getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      48: iload_3
      49: invokeinterface #367,  2          // InterfaceMethod org/postgresql/core/TypeInfo.getArrayDelimiter:(I)C
      54: istore        4
      56: new           #132                // class java/lang/StringBuilder
      59: dup
      60: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      63: astore        5
      65: aload         5
      67: aload_2
      68: iload         4
      70: invokestatic  #331                // Method appendArray:(Ljava/lang/StringBuilder;Ljava/lang/Object;C)V
      73: aload_0
      74: iload_3
      75: aload         5
      77: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokevirtual #368                // Method makeArray:(ILjava/lang/String;)Ljava/sql/Array;
      83: areturn

  public boolean isValid(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: ifge          32
       4: new           #74                 // class org/postgresql/util/PSQLException
       7: dup
       8: ldc_w         #369                // String Invalid timeout ({0}<0).
      11: iconst_1
      12: anewarray     #76                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: iload_1
      18: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      21: aastore
      22: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #78                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      28: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: aload_0
      33: invokevirtual #255                // Method isClosed:()Z
      36: ifeq          41
      39: iconst_0
      40: ireturn
      41: aload_0
      42: getfield      #125                // Field replicationConnection:Z
      45: ifeq          72
      48: aload_0
      49: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
      52: astore_2
      53: aload_2
      54: ldc_w         #370                // String IDENTIFY_SYSTEM
      57: invokeinterface #371,  2          // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;)Z
      62: pop
      63: aload_2
      64: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      69: goto          109
      72: aload_0
      73: getfield      #373                // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      76: ifnonnull     89
      79: aload_0
      80: aload_0
      81: ldc           #115                // String
      83: invokevirtual #374                // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      86: putfield      #373                // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      89: aload_0
      90: getfield      #373                // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
      93: iload_1
      94: invokeinterface #375,  2          // InterfaceMethod java/sql/PreparedStatement.setQueryTimeout:(I)V
      99: aload_0
     100: getfield      #373                // Field checkConnectionQuery:Ljava/sql/PreparedStatement;
     103: invokeinterface #376,  1          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
     108: pop
     109: iconst_1
     110: ireturn
     111: astore_2
     112: getstatic     #377                // Field org/postgresql/util/PSQLState.IN_FAILED_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
     115: invokevirtual #378                // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     118: aload_2
     119: invokevirtual #379                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     122: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifeq          130
     128: iconst_1
     129: ireturn
     130: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     133: getstatic     #38                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     136: ldc_w         #380                // String Validating connection.
     139: iconst_0
     140: anewarray     #76                 // class java/lang/Object
     143: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     146: aload_2
     147: invokevirtual #279                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V
     150: iconst_0
     151: ireturn
    Exception table:
       from    to  target type
          41   110   111   Class java/sql/SQLException

  public void setClientInfo(java.lang.String, java.lang.String) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: goto          50
       7: astore_3
       8: new           #381                // class java/util/HashMap
      11: dup
      12: invokespecial #382                // Method java/util/HashMap."<init>":()V
      15: astore        4
      17: aload         4
      19: aload_1
      20: getstatic     #383                // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      23: invokeinterface #384,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: new           #385                // class java/sql/SQLClientInfoException
      32: dup
      33: ldc_w         #256                // String This connection has been closed.
      36: iconst_0
      37: anewarray     #76                 // class java/lang/Object
      40: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      43: aload         4
      45: aload_3
      46: invokespecial #386                // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      49: athrow
      50: aload_0
      51: getstatic     #113                // Field org/postgresql/core/ServerVersion.v9_0:Lorg/postgresql/core/ServerVersion;
      54: invokevirtual #41                 // Method haveMinimumServerVersion:(Lorg/postgresql/core/Version;)Z
      57: ifeq          241
      60: ldc           #116                // String ApplicationName
      62: aload_1
      63: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      66: ifeq          241
      69: aload_2
      70: ifnonnull     76
      73: ldc           #115                // String
      75: astore_2
      76: aload_0
      77: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      80: invokeinterface #387,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      85: astore_3
      86: aload_2
      87: aload_3
      88: invokevirtual #268                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      91: ifeq          95
      94: return
      95: new           #132                // class java/lang/StringBuilder
      98: dup
      99: ldc_w         #388                // String SET application_name = \'
     102: invokespecial #389                // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
     105: astore        4
     107: aload         4
     109: aload_2
     110: aload_0
     111: invokevirtual #390                // Method getStandardConformingStrings:()Z
     114: invokestatic  #295                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
     117: pop
     118: aload         4
     120: ldc_w         #391                // String \'
     123: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: pop
     127: aload_0
     128: aload         4
     130: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokevirtual #241                // Method execSQLUpdate:(Ljava/lang/String;)V
     136: goto          194
     139: astore        4
     141: new           #381                // class java/util/HashMap
     144: dup
     145: invokespecial #382                // Method java/util/HashMap."<init>":()V
     148: astore        5
     150: aload         5
     152: aload_1
     153: getstatic     #383                // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
     156: invokeinterface #384,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     161: pop
     162: new           #385                // class java/sql/SQLClientInfoException
     165: dup
     166: ldc_w         #392                // String Failed to set ClientInfo property: {0}
     169: iconst_1
     170: anewarray     #76                 // class java/lang/Object
     173: dup
     174: iconst_0
     175: ldc           #116                // String ApplicationName
     177: aastore
     178: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     181: aload         4
     183: invokevirtual #379                // Method java/sql/SQLException.getSQLState:()Ljava/lang/String;
     186: aload         5
     188: aload         4
     190: invokespecial #393                // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
     193: athrow
     194: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     197: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     200: invokevirtual #39                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
     203: ifeq          230
     206: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
     209: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
     212: ldc_w         #394                // String   setClientInfo = {0} {1}
     215: iconst_2
     216: anewarray     #76                 // class java/lang/Object
     219: dup
     220: iconst_0
     221: aload_1
     222: aastore
     223: dup
     224: iconst_1
     225: aload_2
     226: aastore
     227: invokevirtual #178                // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
     230: aload_0
     231: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
     234: aload_1
     235: aload_2
     236: invokevirtual #117                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     239: pop
     240: return
     241: aload_0
     242: new           #395                // class java/sql/SQLWarning
     245: dup
     246: ldc_w         #396                // String ClientInfo property not supported.
     249: iconst_0
     250: anewarray     #76                 // class java/lang/Object
     253: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     256: getstatic     #176                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     259: invokevirtual #378                // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     262: invokespecial #397                // Method java/sql/SQLWarning."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     265: invokevirtual #162                // Method addWarning:(Ljava/sql/SQLWarning;)V
     268: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
          95   136   139   Class java/sql/SQLException

  public void setClientInfo(java.util.Properties) throws java.sql.SQLClientInfoException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: goto          92
       7: astore_2
       8: new           #381                // class java/util/HashMap
      11: dup
      12: invokespecial #382                // Method java/util/HashMap."<init>":()V
      15: astore_3
      16: aload_1
      17: invokevirtual #398                // Method java/util/Properties.entrySet:()Ljava/util/Set;
      20: invokeinterface #134,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #135,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload         4
      39: invokeinterface #136,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #399                // class java/util/Map$Entry
      47: astore        5
      49: aload_3
      50: aload         5
      52: invokeinterface #400,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: checkcast     #86                 // class java/lang/String
      60: getstatic     #383                // Field java/sql/ClientInfoStatus.REASON_UNKNOWN:Ljava/sql/ClientInfoStatus;
      63: invokeinterface #384,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      68: pop
      69: goto          27
      72: new           #385                // class java/sql/SQLClientInfoException
      75: dup
      76: ldc_w         #256                // String This connection has been closed.
      79: iconst_0
      80: anewarray     #76                 // class java/lang/Object
      83: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      86: aload_3
      87: aload_2
      88: invokespecial #386                // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/util/Map;Ljava/lang/Throwable;)V
      91: athrow
      92: new           #381                // class java/util/HashMap
      95: dup
      96: invokespecial #382                // Method java/util/HashMap."<init>":()V
      99: astore_2
     100: iconst_1
     101: anewarray     #86                 // class java/lang/String
     104: dup
     105: iconst_0
     106: ldc           #116                // String ApplicationName
     108: aastore
     109: astore_3
     110: aload_3
     111: arraylength
     112: istore        4
     114: iconst_0
     115: istore        5
     117: iload         5
     119: iload         4
     121: if_icmpge     165
     124: aload_3
     125: iload         5
     127: aaload
     128: astore        6
     130: aload_0
     131: aload         6
     133: aload_1
     134: aload         6
     136: aconst_null
     137: invokevirtual #401                // Method java/util/Properties.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
     140: invokevirtual #402                // Method setClientInfo:(Ljava/lang/String;Ljava/lang/String;)V
     143: goto          159
     146: astore        7
     148: aload_2
     149: aload         7
     151: invokevirtual #403                // Method java/sql/SQLClientInfoException.getFailedProperties:()Ljava/util/Map;
     154: invokeinterface #404,  2          // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
     159: iinc          5, 1
     162: goto          117
     165: aload_2
     166: invokeinterface #405,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     171: ifne          199
     174: new           #385                // class java/sql/SQLClientInfoException
     177: dup
     178: ldc_w         #406                // String One ore more ClientInfo failed.
     181: iconst_0
     182: anewarray     #76                 // class java/lang/Object
     185: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     188: getstatic     #176                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
     191: invokevirtual #378                // Method org/postgresql/util/PSQLState.getState:()Ljava/lang/String;
     194: aload_2
     195: invokespecial #407                // Method java/sql/SQLClientInfoException."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;)V
     198: athrow
     199: return
    Exception table:
       from    to  target type
           0     4     7   Class java/sql/SQLException
         130   143   146   Class java/sql/SQLClientInfoException

  public java.lang.String getClientInfo(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
       8: ldc           #116                // String ApplicationName
      10: aload_0
      11: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      14: invokeinterface #387,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      19: invokevirtual #117                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
      27: aload_1
      28: invokevirtual #226                // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      31: areturn

  public java.util.Properties getClientInfo() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
       8: ldc           #116                // String ApplicationName
      10: aload_0
      11: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
      14: invokeinterface #387,  1          // InterfaceMethod org/postgresql/core/QueryExecutor.getApplicationName:()Ljava/lang/String;
      19: invokevirtual #117                // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: aload_0
      24: getfield      #112                // Field _clientInfo:Ljava/util/Properties;
      27: areturn

  public <T> T createQueryObject(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc_w         #408                // String createQueryObject(Class<T>)
      11: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      14: athrow

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #409                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_1
       5: aload_0
       6: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokevirtual #409                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      12: ifeq          21
      15: aload_1
      16: aload_0
      17: invokevirtual #410                // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      20: areturn
      21: new           #187                // class java/sql/SQLException
      24: dup
      25: new           #132                // class java/lang/StringBuilder
      28: dup
      29: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      32: ldc_w         #411                // String Cannot unwrap to
      35: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_1
      39: invokevirtual #412                // Method java/lang/Class.getName:()Ljava/lang/String;
      42: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: invokespecial #413                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      51: athrow

  public java.lang.String getSchema() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
       8: astore_1
       9: aload_1
      10: ldc_w         #414                // String select current_schema()
      13: invokeinterface #415,  2          // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      18: astore_2
      19: aload_2
      20: invokeinterface #261,  1          // InterfaceMethod java/sql/ResultSet.next:()Z
      25: ifne          44
      28: aconst_null
      29: astore_3
      30: aload_2
      31: invokeinterface #263,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      36: aload_1
      37: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      42: aload_3
      43: areturn
      44: aload_2
      45: iconst_1
      46: invokeinterface #262,  2          // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
      51: astore_3
      52: aload_2
      53: invokeinterface #263,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      58: aload_1
      59: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      64: aload_3
      65: areturn
      66: astore        4
      68: aload_2
      69: invokeinterface #263,  1          // InterfaceMethod java/sql/ResultSet.close:()V
      74: aload         4
      76: athrow
      77: astore        5
      79: aload_1
      80: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      85: aload         5
      87: athrow
    Exception table:
       from    to  target type
          19    30    66   any
          44    52    66   any
          66    68    66   any
           9    36    77   any
          44    58    77   any
          66    79    77   any

  public void setSchema(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
       8: astore_2
       9: aload_1
      10: ifnonnull     26
      13: aload_2
      14: ldc_w         #416                // String SET SESSION search_path TO DEFAULT
      17: invokeinterface #417,  2          // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      22: pop
      23: goto          84
      26: new           #132                // class java/lang/StringBuilder
      29: dup
      30: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      33: astore_3
      34: aload_3
      35: ldc_w         #418                // String SET SESSION search_path TO \'
      38: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: pop
      42: aload_3
      43: aload_1
      44: aload_0
      45: invokevirtual #390                // Method getStandardConformingStrings:()Z
      48: invokestatic  #295                // Method org/postgresql/core/Utils.escapeLiteral:(Ljava/lang/StringBuilder;Ljava/lang/String;Z)Ljava/lang/StringBuilder;
      51: pop
      52: aload_3
      53: ldc_w         #391                // String \'
      56: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: aload_3
      62: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #417,  2          // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      70: pop
      71: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      74: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      77: ldc_w         #419                // String   setSchema = {0}
      80: aload_1
      81: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      84: aload_2
      85: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      90: goto          104
      93: astore        4
      95: aload_2
      96: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
     101: aload         4
     103: athrow
     104: return
    Exception table:
       from    to  target type
           9    84    93   any
          93    95    93   any

  public void abort(java.util.concurrent.Executor) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #255                // Method isClosed:()Z
       4: ifeq          8
       7: return
       8: getstatic     #420                // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      11: aload_0
      12: invokevirtual #421                // Method java/sql/SQLPermission.checkGuard:(Ljava/lang/Object;)V
      15: new           #422                // class org/postgresql/jdbc/PgConnection$AbortCommand
      18: dup
      19: aload_0
      20: invokespecial #423                // Method org/postgresql/jdbc/PgConnection$AbortCommand."<init>":(Lorg/postgresql/jdbc/PgConnection;)V
      23: astore_2
      24: aload_1
      25: ifnull        38
      28: aload_1
      29: aload_2
      30: invokeinterface #424,  2          // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      35: goto          42
      38: aload_2
      39: invokevirtual #425                // Method org/postgresql/jdbc/PgConnection$AbortCommand.run:()V
      42: return

  public void setNetworkTimeout(java.util.concurrent.Executor, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #426                // String setNetworkTimeout(Executor, int)
       7: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public int getNetworkTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #329                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: ldc_w         #427                // String getNetworkTimeout()
       7: invokestatic  #359                // Method org/postgresql/Driver.notImplemented:(Ljava/lang/Class;Ljava/lang/String;)Ljava/sql/SQLFeatureNotSupportedException;
      10: athrow

  public void setHoldability(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: iload_1
       5: lookupswitch  { // 2
                     1: 40
                     2: 32
               default: 48
          }
      32: aload_0
      33: iload_1
      34: putfield      #17                 // Field rsHoldability:I
      37: goto          76
      40: aload_0
      41: iload_1
      42: putfield      #17                 // Field rsHoldability:I
      45: goto          76
      48: new           #74                 // class org/postgresql/util/PSQLException
      51: dup
      52: ldc_w         #428                // String Unknown ResultSet holdability setting: {0}.
      55: iconst_1
      56: anewarray     #76                 // class java/lang/Object
      59: dup
      60: iconst_0
      61: iload_1
      62: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: aastore
      66: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: getstatic     #78                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      72: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      75: athrow
      76: getstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      79: getstatic     #9                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      82: ldc_w         #429                // String   setHoldability = {0}
      85: iload_1
      86: invokestatic  #52                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      89: invokevirtual #12                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      92: return

  public int getHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: getfield      #17                 // Field rsHoldability:I
       8: ireturn

  public java.sql.Savepoint setSavepoint() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #430                // Method getAutoCommit:()Z
       8: ifeq          32
      11: new           #74                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #431                // String Cannot establish a savepoint in auto-commit mode.
      18: iconst_0
      19: anewarray     #76                 // class java/lang/Object
      22: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #253                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: new           #432                // class org/postgresql/jdbc/PSQLSavepoint
      35: dup
      36: aload_0
      37: dup
      38: getfield      #18                 // Field savepointId:I
      41: dup_x1
      42: iconst_1
      43: iadd
      44: putfield      #18                 // Field savepointId:I
      47: invokespecial #433                // Method org/postgresql/jdbc/PSQLSavepoint."<init>":(I)V
      50: astore_2
      51: aload_2
      52: invokevirtual #434                // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      55: astore_1
      56: aload_0
      57: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
      60: astore_3
      61: aload_3
      62: new           #132                // class java/lang/StringBuilder
      65: dup
      66: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      69: ldc_w         #435                // String SAVEPOINT
      72: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_1
      76: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokeinterface #417,  2          // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      87: pop
      88: aload_3
      89: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      94: aload_2
      95: areturn

  public java.sql.Savepoint setSavepoint(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: invokevirtual #430                // Method getAutoCommit:()Z
       8: ifeq          32
      11: new           #74                 // class org/postgresql/util/PSQLException
      14: dup
      15: ldc_w         #431                // String Cannot establish a savepoint in auto-commit mode.
      18: iconst_0
      19: anewarray     #76                 // class java/lang/Object
      22: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      25: getstatic     #253                // Field org/postgresql/util/PSQLState.NO_ACTIVE_SQL_TRANSACTION:Lorg/postgresql/util/PSQLState;
      28: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      31: athrow
      32: new           #432                // class org/postgresql/jdbc/PSQLSavepoint
      35: dup
      36: aload_1
      37: invokespecial #436                // Method org/postgresql/jdbc/PSQLSavepoint."<init>":(Ljava/lang/String;)V
      40: astore_2
      41: aload_0
      42: invokevirtual #164                // Method createStatement:()Ljava/sql/Statement;
      45: astore_3
      46: aload_3
      47: new           #132                // class java/lang/StringBuilder
      50: dup
      51: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      54: ldc_w         #435                // String SAVEPOINT
      57: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_2
      61: invokevirtual #434                // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      64: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: invokeinterface #417,  2          // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      75: pop
      76: aload_3
      77: invokeinterface #372,  1          // InterfaceMethod java/sql/Statement.close:()V
      82: aload_2
      83: areturn

  public void rollback(java.sql.Savepoint) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_1
       5: checkcast     #432                // class org/postgresql/jdbc/PSQLSavepoint
       8: astore_2
       9: aload_0
      10: new           #132                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #437                // String ROLLBACK TO SAVEPOINT
      20: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #434                // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      27: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #241                // Method execSQLUpdate:(Ljava/lang/String;)V
      36: return

  public void releaseSavepoint(java.sql.Savepoint) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_1
       5: checkcast     #432                // class org/postgresql/jdbc/PSQLSavepoint
       8: astore_2
       9: aload_0
      10: new           #132                // class java/lang/StringBuilder
      13: dup
      14: invokespecial #133                // Method java/lang/StringBuilder."<init>":()V
      17: ldc_w         #438                // String RELEASE SAVEPOINT
      20: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_2
      24: invokevirtual #434                // Method org/postgresql/jdbc/PSQLSavepoint.getPGName:()Ljava/lang/String;
      27: invokevirtual #140                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #145                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #241                // Method execSQLUpdate:(Ljava/lang/String;)V
      36: aload_2
      37: invokevirtual #439                // Method org/postgresql/jdbc/PSQLSavepoint.invalidate:()V
      40: return

  public java.sql.Statement createStatement(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: iload_1
       6: iload_2
       7: aload_0
       8: invokevirtual #440                // Method getHoldability:()I
      11: invokevirtual #441                // Method createStatement:(III)Ljava/sql/Statement;
      14: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: aload_0
       9: invokevirtual #440                // Method getHoldability:()I
      12: invokevirtual #442                // Method prepareStatement:(Ljava/lang/String;III)Ljava/sql/PreparedStatement;
      15: areturn

  public java.sql.CallableStatement prepareCall(java.lang.String, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #149                // Method checkClosed:()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: aload_0
       9: invokevirtual #440                // Method getHoldability:()I
      12: invokevirtual #443                // Method prepareCall:(Ljava/lang/String;III)Ljava/sql/CallableStatement;
      15: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpeq     11
       5: aload_0
       6: aload_1
       7: invokevirtual #374                // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      10: areturn
      11: aload_0
      12: aload_1
      13: aconst_null
      14: checkcast     #445                // class "[Ljava/lang/String;"
      17: invokevirtual #446                // Method prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
      20: areturn

  public java.sql.PreparedStatement prepareStatement(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #374                // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      14: areturn
      15: aload_0
      16: invokevirtual #149                // Method checkClosed:()V
      19: new           #74                 // class org/postgresql/util/PSQLException
      22: dup
      23: ldc_w         #447                // String Returning autogenerated keys is not supported.
      26: iconst_0
      27: anewarray     #76                 // class java/lang/Object
      30: invokestatic  #77                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: getstatic     #176                // Field org/postgresql/util/PSQLState.NOT_IMPLEMENTED:Lorg/postgresql/util/PSQLState;
      36: invokespecial #79                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      39: athrow

  public java.sql.PreparedStatement prepareStatement(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        15
       4: aload_2
       5: arraylength
       6: ifne          15
       9: aload_0
      10: aload_1
      11: invokevirtual #374                // Method prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      14: areturn
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokespecial #448                // Method borrowReturningQuery:(Ljava/lang/String;[Ljava/lang/String;)Lorg/postgresql/core/CachedQuery;
      21: astore_3
      22: new           #341                // class org/postgresql/jdbc/PgPreparedStatement
      25: dup
      26: aload_0
      27: aload_3
      28: sipush        1003
      31: sipush        1007
      34: aload_0
      35: invokevirtual #440                // Method getHoldability:()I
      38: invokespecial #449                // Method org/postgresql/jdbc/PgPreparedStatement."<init>":(Lorg/postgresql/jdbc/PgConnection;Lorg/postgresql/core/CachedQuery;III)V
      41: astore        4
      43: aload_3
      44: getfield      #88                 // Field org/postgresql/core/CachedQuery.query:Lorg/postgresql/core/Query;
      47: astore        5
      49: aload         5
      51: invokeinterface #450,  1          // InterfaceMethod org/postgresql/core/Query.getSqlCommand:()Lorg/postgresql/core/SqlCommand;
      56: astore        6
      58: aload         6
      60: ifnull        73
      63: aload         4
      65: aload         6
      67: invokevirtual #451                // Method org/postgresql/core/SqlCommand.isReturningKeywordPresent:()Z
      70: putfield      #452                // Field org/postgresql/jdbc/PgPreparedStatement.wantsGeneratedKeysAlways:Z
      73: aload         4
      75: areturn

  static org.postgresql.core.QueryExecutor access$000(org.postgresql.jdbc.PgConnection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field queryExecutor:Lorg/postgresql/core/QueryExecutor;
       4: areturn

  static {};
    Code:
       0: ldc_w         #453                // class org/postgresql/jdbc/PgConnection
       3: invokevirtual #412                // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #454                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       9: putstatic     #8                  // Field LOGGER:Ljava/util/logging/Logger;
      12: new           #455                // class java/sql/SQLPermission
      15: dup
      16: ldc_w         #456                // String callAbort
      19: invokespecial #457                // Method java/sql/SQLPermission."<init>":(Ljava/lang/String;)V
      22: putstatic     #420                // Field SQL_PERMISSION_ABORT:Ljava/sql/SQLPermission;
      25: return
}
