Compiled from "BooleanTypeUtil.java"
class org.postgresql.jdbc.BooleanTypeUtil {
  private static final java.util.logging.Logger LOGGER;

  private org.postgresql.jdbc.BooleanTypeUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  static boolean castToBoolean(java.lang.Object) throws org.postgresql.util.PSQLException;
    Code:
       0: getstatic     #2                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: ldc           #4                  // String Object to cast: {0}
       8: aload_0
       9: invokevirtual #5                  // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      12: aload_0
      13: instanceof    #6                  // class java/lang/Boolean
      16: ifeq          27
      19: aload_0
      20: checkcast     #6                  // class java/lang/Boolean
      23: invokevirtual #7                  // Method java/lang/Boolean.booleanValue:()Z
      26: ireturn
      27: aload_0
      28: instanceof    #8                  // class java/lang/String
      31: ifeq          42
      34: aload_0
      35: checkcast     #8                  // class java/lang/String
      38: invokestatic  #9                  // Method from:(Ljava/lang/String;)Z
      41: ireturn
      42: aload_0
      43: instanceof    #10                 // class java/lang/Character
      46: ifeq          57
      49: aload_0
      50: checkcast     #10                 // class java/lang/Character
      53: invokestatic  #11                 // Method from:(Ljava/lang/Character;)Z
      56: ireturn
      57: aload_0
      58: instanceof    #12                 // class java/lang/Number
      61: ifeq          79
      64: aload_0
      65: checkcast     #12                 // class java/lang/Number
      68: aload_0
      69: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      72: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      75: invokestatic  #15                 // Method from:(Ljava/lang/Number;Ljava/lang/String;)Z
      78: ireturn
      79: aload_0
      80: invokevirtual #13                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      83: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
      86: invokestatic  #16                 // Method cannotCoerceException:(Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
      89: athrow

  private static boolean from(java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_1
       5: ldc           #18                 // String 1
       7: aload_1
       8: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          59
      14: ldc           #20                 // String true
      16: aload_1
      17: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      20: ifne          59
      23: ldc           #22                 // String t
      25: aload_1
      26: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      29: ifne          59
      32: ldc           #23                 // String yes
      34: aload_1
      35: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      38: ifne          59
      41: ldc           #24                 // String y
      43: aload_1
      44: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      47: ifne          59
      50: ldc           #25                 // String on
      52: aload_1
      53: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      56: ifeq          61
      59: iconst_1
      60: ireturn
      61: ldc           #26                 // String 0
      63: aload_1
      64: invokevirtual #19                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      67: ifne          115
      70: ldc           #27                 // String false
      72: aload_1
      73: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      76: ifne          115
      79: ldc           #28                 // String f
      81: aload_1
      82: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      85: ifne          115
      88: ldc           #29                 // String no
      90: aload_1
      91: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      94: ifne          115
      97: ldc           #30                 // String n
      99: aload_1
     100: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     103: ifne          115
     106: ldc           #31                 // String off
     108: aload_1
     109: invokevirtual #21                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     112: ifeq          117
     115: iconst_0
     116: ireturn
     117: ldc           #32                 // String String
     119: aload_1
     120: invokestatic  #33                 // Method cannotCoerceException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     123: athrow

  private static boolean from(java.lang.Character) throws org.postgresql.util.PSQLException;
    Code:
       0: bipush        49
       2: aload_0
       3: invokevirtual #34                 // Method java/lang/Character.charValue:()C
       6: if_icmpeq     45
       9: bipush        116
      11: aload_0
      12: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      15: if_icmpeq     45
      18: bipush        84
      20: aload_0
      21: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      24: if_icmpeq     45
      27: bipush        121
      29: aload_0
      30: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      33: if_icmpeq     45
      36: bipush        89
      38: aload_0
      39: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      42: if_icmpne     47
      45: iconst_1
      46: ireturn
      47: bipush        48
      49: aload_0
      50: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      53: if_icmpeq     92
      56: bipush        102
      58: aload_0
      59: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      62: if_icmpeq     92
      65: bipush        70
      67: aload_0
      68: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      71: if_icmpeq     92
      74: bipush        110
      76: aload_0
      77: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      80: if_icmpeq     92
      83: bipush        78
      85: aload_0
      86: invokevirtual #34                 // Method java/lang/Character.charValue:()C
      89: if_icmpne     94
      92: iconst_0
      93: ireturn
      94: ldc           #35                 // String Character
      96: aload_0
      97: invokevirtual #36                 // Method java/lang/Character.toString:()Ljava/lang/String;
     100: invokestatic  #33                 // Method cannotCoerceException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
     103: athrow

  private static boolean from(java.lang.Number, java.lang.String) throws org.postgresql.util.PSQLException;
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method java/lang/Number.doubleValue:()D
       4: dstore_2
       5: dload_2
       6: dconst_1
       7: dcmpl
       8: ifne          13
      11: iconst_1
      12: ireturn
      13: dload_2
      14: dconst_0
      15: dcmpl
      16: ifne          21
      19: iconst_0
      20: ireturn
      21: aload_1
      22: aload_0
      23: invokestatic  #38                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      26: invokestatic  #33                 // Method cannotCoerceException:(Ljava/lang/String;Ljava/lang/String;)Lorg/postgresql/util/PSQLException;
      29: athrow

  private static org.postgresql.util.PSQLException cannotCoerceException(java.lang.String);
    Code:
       0: getstatic     #2                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: ldc           #39                 // String Cannot cast type {0} to boolean
       8: aload_0
       9: invokevirtual #5                  // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Object;)V
      12: new           #40                 // class org/postgresql/util/PSQLException
      15: dup
      16: ldc           #39                 // String Cannot cast type {0} to boolean
      18: iconst_1
      19: anewarray     #41                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: aastore
      26: invokestatic  #42                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      29: getstatic     #43                 // Field org/postgresql/util/PSQLState.CANNOT_COERCE:Lorg/postgresql/util/PSQLState;
      32: invokespecial #44                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      35: areturn

  private static org.postgresql.util.PSQLException cannotCoerceException(java.lang.String, java.lang.String);
    Code:
       0: getstatic     #2                  // Field LOGGER:Ljava/util/logging/Logger;
       3: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       6: invokevirtual #45                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
       9: ifeq          35
      12: getstatic     #2                  // Field LOGGER:Ljava/util/logging/Logger;
      15: getstatic     #3                  // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      18: ldc           #46                 // String Cannot cast type {0} to boolean: \"{1}\"
      20: iconst_2
      21: anewarray     #41                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: aload_0
      27: aastore
      28: dup
      29: iconst_1
      30: aload_1
      31: aastore
      32: invokevirtual #47                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      35: new           #40                 // class org/postgresql/util/PSQLException
      38: dup
      39: ldc           #46                 // String Cannot cast type {0} to boolean: \"{1}\"
      41: iconst_2
      42: anewarray     #41                 // class java/lang/Object
      45: dup
      46: iconst_0
      47: aload_0
      48: aastore
      49: dup
      50: iconst_1
      51: aload_1
      52: aastore
      53: invokestatic  #42                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      56: getstatic     #43                 // Field org/postgresql/util/PSQLState.CANNOT_COERCE:Lorg/postgresql/util/PSQLState;
      59: invokespecial #44                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      62: areturn

  static {};
    Code:
       0: ldc           #48                 // class org/postgresql/jdbc/BooleanTypeUtil
       2: invokevirtual #14                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #49                 // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #2                  // Field LOGGER:Ljava/util/logging/Logger;
      11: return
}
