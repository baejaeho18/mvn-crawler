Compiled from "PgResultSetMetaData.java"
public class org.postgresql.jdbc.PgResultSetMetaData implements java.sql.ResultSetMetaData,org.postgresql.PGResultSetMetaData {
  protected final org.postgresql.core.BaseConnection connection;

  protected final org.postgresql.core.Field[] fields;

  private boolean fieldInfoFetched;

  public org.postgresql.jdbc.PgResultSetMetaData(org.postgresql.core.BaseConnection, org.postgresql.core.Field[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      14: aload_0
      15: iconst_0
      16: putfield      #4                  // Field fieldInfoFetched:Z
      19: return

  public int getColumnCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
       4: arraylength
       5: ireturn

  public boolean isAutoIncrement(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: astore_3
      15: aload_3
      16: ifnull        30
      19: aload_3
      20: getfield      #8                  // Field org/postgresql/jdbc/FieldMetadata.autoIncrement:Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean isCaseSensitive(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #11,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isCaseSensitive:(I)Z
      24: ireturn

  public boolean isSearchable(int) throws java.sql.SQLException;
    Code:
       0: iconst_1
       1: ireturn

  public boolean isCurrency(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ldc           #13                 // String cash
       9: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      12: ifne          24
      15: aload_2
      16: ldc           #15                 // String money
      18: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public int isNullable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #16                 // Field org/postgresql/jdbc/FieldMetadata.nullable:I
      17: ireturn

  public boolean isSigned(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #17,  2           // InterfaceMethod org/postgresql/core/TypeInfo.isSigned:(I)Z
      24: ireturn

  public int getColumnDisplaySize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #18                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #19,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getDisplaySize:(II)I
      28: ireturn

  public java.lang.String getColumnLabel(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #20                 // Method org/postgresql/core/Field.getColumnLabel:()Ljava/lang/String;
      10: areturn

  public java.lang.String getColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #21                 // Method getColumnLabel:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseColumnName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_2
       7: invokevirtual #22                 // Method org/postgresql/core/Field.getTableOid:()I
      10: ifne          16
      13: ldc           #23                 // String
      15: areturn
      16: aload_0
      17: invokespecial #5                  // Method fetchFieldMetaData:()V
      20: aload_2
      21: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      24: getfield      #24                 // Field org/postgresql/jdbc/FieldMetadata.columnName:Ljava/lang/String;
      27: areturn

  public java.lang.String getSchemaName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #23                 // String
       2: areturn

  private boolean populateFieldsWithCachedMetadata();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       6: invokeinterface #25,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getFieldMetadataCache:()Lorg/postgresql/util/LruCache;
      11: astore_2
      12: aload_0
      13: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      16: astore_3
      17: aload_3
      18: arraylength
      19: istore        4
      21: iconst_0
      22: istore        5
      24: iload         5
      26: iload         4
      28: if_icmpge     97
      31: aload_3
      32: iload         5
      34: aaload
      35: astore        6
      37: aload         6
      39: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      42: ifnull        48
      45: goto          91
      48: aload_2
      49: new           #26                 // class org/postgresql/jdbc/FieldMetadata$Key
      52: dup
      53: aload         6
      55: invokevirtual #22                 // Method org/postgresql/core/Field.getTableOid:()I
      58: aload         6
      60: invokevirtual #27                 // Method org/postgresql/core/Field.getPositionInTable:()I
      63: invokespecial #28                 // Method org/postgresql/jdbc/FieldMetadata$Key."<init>":(II)V
      66: invokevirtual #29                 // Method org/postgresql/util/LruCache.get:(Ljava/lang/Object;)Lorg/postgresql/util/CanEstimateSize;
      69: checkcast     #30                 // class org/postgresql/jdbc/FieldMetadata
      72: astore        7
      74: aload         7
      76: ifnonnull     84
      79: iconst_0
      80: istore_1
      81: goto          91
      84: aload         6
      86: aload         7
      88: invokevirtual #31                 // Method org/postgresql/core/Field.setMetadata:(Lorg/postgresql/jdbc/FieldMetadata;)V
      91: iinc          5, 1
      94: goto          24
      97: iload_1
      98: ireturn

  private void fetchFieldMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field fieldInfoFetched:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: invokespecial #32                 // Method populateFieldsWithCachedMetadata:()Z
      12: ifeq          21
      15: aload_0
      16: iconst_1
      17: putfield      #4                  // Field fieldInfoFetched:Z
      20: return
      21: new           #33                 // class java/lang/StringBuilder
      24: dup
      25: ldc           #34                 // String SELECT c.oid, a.attnum, a.attname, c.relname, n.nspname, a.attnotnull OR (t.typtype = \'d\' AND t.typnotnull), pg_catalog.pg_get_expr(d.adbin, d.adrelid) LIKE \'%nextval(%\' FROM pg_catalog.pg_class c JOIN pg_catalog.pg_namespace n ON (c.relnamespace = n.oid) JOIN pg_catalog.pg_attribute a ON (c.oid = a.attrelid) JOIN pg_catalog.pg_type t ON (a.atttypid = t.oid) LEFT JOIN pg_catalog.pg_attrdef d ON (d.adrelid = a.attrelid AND d.adnum = a.attnum) JOIN (
      27: invokespecial #35                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      30: astore_1
      31: iconst_0
      32: istore_2
      33: aload_0
      34: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      37: astore_3
      38: aload_3
      39: arraylength
      40: istore        4
      42: iconst_0
      43: istore        5
      45: iload         5
      47: iload         4
      49: if_icmpge     148
      52: aload_3
      53: iload         5
      55: aaload
      56: astore        6
      58: aload         6
      60: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      63: ifnull        69
      66: goto          142
      69: iload_2
      70: ifeq          80
      73: aload_1
      74: ldc           #36                 // String  UNION ALL
      76: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: pop
      80: aload_1
      81: ldc           #38                 // String SELECT
      83: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: pop
      87: aload_1
      88: aload         6
      90: invokevirtual #22                 // Method org/postgresql/core/Field.getTableOid:()I
      93: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      96: pop
      97: iload_2
      98: ifne          108
     101: aload_1
     102: ldc           #40                 // String  AS oid
     104: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: pop
     108: aload_1
     109: ldc           #41                 // String ,
     111: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: pop
     115: aload_1
     116: aload         6
     118: invokevirtual #27                 // Method org/postgresql/core/Field.getPositionInTable:()I
     121: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     124: pop
     125: iload_2
     126: ifne          136
     129: aload_1
     130: ldc           #42                 // String  AS attnum
     132: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: pop
     136: iload_2
     137: ifne          142
     140: iconst_1
     141: istore_2
     142: iinc          5, 1
     145: goto          45
     148: aload_1
     149: ldc           #43                 // String ) vals ON (c.oid = vals.oid AND a.attnum = vals.attnum)
     151: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: pop
     155: iload_2
     156: ifne          165
     159: aload_0
     160: iconst_1
     161: putfield      #4                  // Field fieldInfoFetched:Z
     164: return
     165: aload_0
     166: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
     169: invokeinterface #44,  1           // InterfaceMethod org/postgresql/core/BaseConnection.createStatement:()Ljava/sql/Statement;
     174: astore_3
     175: aconst_null
     176: astore        4
     178: aload_0
     179: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
     182: invokeinterface #25,  1           // InterfaceMethod org/postgresql/core/BaseConnection.getFieldMetadataCache:()Lorg/postgresql/util/LruCache;
     187: astore        5
     189: aload_3
     190: aload_1
     191: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     194: invokeinterface #46,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
     199: astore        4
     201: aload         4
     203: invokeinterface #47,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     208: ifeq          337
     211: aload         4
     213: iconst_1
     214: invokeinterface #48,  2           // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     219: l2i
     220: istore        6
     222: aload         4
     224: iconst_2
     225: invokeinterface #48,  2           // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     230: l2i
     231: istore        7
     233: aload         4
     235: iconst_3
     236: invokeinterface #49,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     241: astore        8
     243: aload         4
     245: iconst_4
     246: invokeinterface #49,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     251: astore        9
     253: aload         4
     255: iconst_5
     256: invokeinterface #49,  2           // InterfaceMethod java/sql/ResultSet.getString:(I)Ljava/lang/String;
     261: astore        10
     263: aload         4
     265: bipush        6
     267: invokeinterface #50,  2           // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     272: ifeq          279
     275: iconst_0
     276: goto          280
     279: iconst_1
     280: istore        11
     282: aload         4
     284: bipush        7
     286: invokeinterface #50,  2           // InterfaceMethod java/sql/ResultSet.getBoolean:(I)Z
     291: istore        12
     293: new           #30                 // class org/postgresql/jdbc/FieldMetadata
     296: dup
     297: aload         8
     299: aload         9
     301: aload         10
     303: iload         11
     305: iload         12
     307: invokespecial #52                 // Method org/postgresql/jdbc/FieldMetadata."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;IZ)V
     310: astore        13
     312: new           #26                 // class org/postgresql/jdbc/FieldMetadata$Key
     315: dup
     316: iload         6
     318: iload         7
     320: invokespecial #28                 // Method org/postgresql/jdbc/FieldMetadata$Key."<init>":(II)V
     323: astore        14
     325: aload         5
     327: aload         14
     329: aload         13
     331: invokevirtual #53                 // Method org/postgresql/util/LruCache.put:(Ljava/lang/Object;Lorg/postgresql/util/CanEstimateSize;)V
     334: goto          201
     337: aload         4
     339: invokestatic  #54                 // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/ResultSet;)V
     342: aload_3
     343: invokestatic  #55                 // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/Statement;)V
     346: goto          363
     349: astore        15
     351: aload         4
     353: invokestatic  #54                 // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/ResultSet;)V
     356: aload_3
     357: invokestatic  #55                 // Method org/postgresql/util/JdbcBlackHole.close:(Ljava/sql/Statement;)V
     360: aload         15
     362: athrow
     363: aload_0
     364: invokespecial #32                 // Method populateFieldsWithCachedMetadata:()Z
     367: pop
     368: return
    Exception table:
       from    to  target type
         178   337   349   any
         349   351   349   any

  public java.lang.String getBaseSchemaName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #56                 // Field org/postgresql/jdbc/FieldMetadata.schemaName:Ljava/lang/String;
      17: areturn

  public int getPrecision(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #18                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #57,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getPrecision:(II)I
      28: ireturn

  public int getScale(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: aload_2
      20: invokevirtual #18                 // Method org/postgresql/core/Field.getMod:()I
      23: invokeinterface #58,  3           // InterfaceMethod org/postgresql/core/TypeInfo.getScale:(II)I
      28: ireturn

  public java.lang.String getTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method getBaseTableName:(I)Ljava/lang/String;
       5: areturn

  public java.lang.String getBaseTableName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method fetchFieldMetaData:()V
       4: aload_0
       5: iload_1
       6: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       9: astore_2
      10: aload_2
      11: invokevirtual #7                  // Method org/postgresql/core/Field.getMetadata:()Lorg/postgresql/jdbc/FieldMetadata;
      14: getfield      #60                 // Field org/postgresql/jdbc/FieldMetadata.tableName:Ljava/lang/String;
      17: areturn

  public java.lang.String getCatalogName(int) throws java.sql.SQLException;
    Code:
       0: ldc           #23                 // String
       2: areturn

  public int getColumnType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method getSQLType:(I)I
       5: ireturn

  public int getFormat(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: invokevirtual #62                 // Method org/postgresql/core/Field.getFormat:()I
       8: ireturn

  public java.lang.String getColumnTypeName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #12                 // Method getPGType:(I)Ljava/lang/String;
       5: astore_2
       6: aload_0
       7: iload_1
       8: invokevirtual #63                 // Method isAutoIncrement:(I)Z
      11: ifeq          38
      14: ldc           #64                 // String int4
      16: aload_2
      17: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          26
      23: ldc           #65                 // String serial
      25: areturn
      26: ldc           #66                 // String int8
      28: aload_2
      29: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          38
      35: ldc           #67                 // String bigserial
      37: areturn
      38: aload_2
      39: areturn

  public boolean isReadOnly(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWritable(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #68                 // Method isReadOnly:(I)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean isDefinitelyWritable(int) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  protected org.postgresql.core.Field getField(int) throws java.sql.SQLException;
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmplt     14
       5: iload_1
       6: aload_0
       7: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      10: arraylength
      11: if_icmple     52
      14: new           #69                 // class org/postgresql/util/PSQLException
      17: dup
      18: ldc           #70                 // String The column index is out of range: {0}, number of columns: {1}.
      20: iconst_2
      21: anewarray     #71                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload_1
      27: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: dup
      32: iconst_1
      33: aload_0
      34: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      37: arraylength
      38: invokestatic  #72                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: invokestatic  #73                 // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: getstatic     #74                 // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      48: invokespecial #75                 // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      51: athrow
      52: aload_0
      53: getfield      #3                  // Field fields:[Lorg/postgresql/core/Field;
      56: iload_1
      57: iconst_1
      58: isub
      59: aaload
      60: areturn

  protected java.lang.String getPGType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #76,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getPGType:(I)Ljava/lang/String;
      22: areturn

  protected int getSQLType(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
       4: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
       9: aload_0
      10: iload_1
      11: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
      14: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      17: invokeinterface #77,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getSQLType:(I)I
      22: ireturn

  public java.lang.String getColumnClassName(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #6                  // Method getField:(I)Lorg/postgresql/core/Field;
       5: astore_2
       6: aload_0
       7: getfield      #2                  // Field connection:Lorg/postgresql/core/BaseConnection;
      10: invokeinterface #9,  1            // InterfaceMethod org/postgresql/core/BaseConnection.getTypeInfo:()Lorg/postgresql/core/TypeInfo;
      15: aload_2
      16: invokevirtual #10                 // Method org/postgresql/core/Field.getOID:()I
      19: invokeinterface #78,  2           // InterfaceMethod org/postgresql/core/TypeInfo.getJavaClass:(I)Ljava/lang/String;
      24: astore_3
      25: aload_3
      26: ifnull        31
      29: aload_3
      30: areturn
      31: aload_0
      32: iload_1
      33: invokevirtual #61                 // Method getSQLType:(I)I
      36: istore        4
      38: iload         4
      40: lookupswitch  { // 1
                  2003: 60
               default: 63
          }
      60: ldc           #79                 // String java.sql.Array
      62: areturn
      63: aload_0
      64: iload_1
      65: invokevirtual #12                 // Method getPGType:(I)Ljava/lang/String;
      68: astore        5
      70: ldc           #80                 // String unknown
      72: aload         5
      74: invokevirtual #14                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      77: ifeq          83
      80: ldc           #81                 // String java.lang.String
      82: areturn
      83: ldc           #82                 // String java.lang.Object
      85: areturn

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #84                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #83                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #84                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ifeq          17
      11: aload_1
      12: aload_0
      13: invokevirtual #85                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      16: areturn
      17: new           #86                 // class java/sql/SQLException
      20: dup
      21: new           #33                 // class java/lang/StringBuilder
      24: dup
      25: invokespecial #87                 // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #88                 // String Cannot unwrap to
      30: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #89                 // Method java/lang/Class.getName:()Ljava/lang/String;
      37: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #90                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      46: athrow
}
