Compiled from "BaseDataSource.java"
public abstract class org.postgresql.ds.common.BaseDataSource implements javax.sql.CommonDataSource,javax.naming.Referenceable {
  private static final java.util.logging.Logger LOGGER;

  private java.lang.String serverName;

  private java.lang.String databaseName;

  private java.lang.String user;

  private java.lang.String password;

  private int portNumber;

  private java.util.Properties properties;

  public org.postgresql.ds.common.BaseDataSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc           #2                  // String localhost
       7: putfield      #3                  // Field serverName:Ljava/lang/String;
      10: aload_0
      11: ldc           #4                  // String
      13: putfield      #5                  // Field databaseName:Ljava/lang/String;
      16: aload_0
      17: iconst_0
      18: putfield      #6                  // Field portNumber:I
      21: aload_0
      22: new           #7                  // class java/util/Properties
      25: dup
      26: invokespecial #8                  // Method java/util/Properties."<init>":()V
      29: putfield      #9                  // Field properties:Ljava/util/Properties;
      32: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #10                 // Field user:Ljava/lang/String;
       5: aload_0
       6: getfield      #11                 // Field password:Ljava/lang/String;
       9: invokevirtual #12                 // Method getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      12: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getUrl:()Ljava/lang/String;
       4: aload_1
       5: aload_2
       6: invokestatic  #14                 // Method java/sql/DriverManager.getConnection:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
       9: astore_3
      10: getstatic     #15                 // Field LOGGER:Ljava/util/logging/Logger;
      13: getstatic     #16                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      16: invokevirtual #17                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      19: ifeq          55
      22: getstatic     #15                 // Field LOGGER:Ljava/util/logging/Logger;
      25: getstatic     #16                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      28: ldc           #18                 // String Created a {0} for {1} at {2}
      30: iconst_3
      31: anewarray     #19                 // class java/lang/Object
      34: dup
      35: iconst_0
      36: aload_0
      37: invokevirtual #20                 // Method getDescription:()Ljava/lang/String;
      40: aastore
      41: dup
      42: iconst_1
      43: aload_1
      44: aastore
      45: dup
      46: iconst_2
      47: aload_0
      48: invokevirtual #13                 // Method getUrl:()Ljava/lang/String;
      51: aastore
      52: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      55: aload_3
      56: areturn
      57: astore_3
      58: getstatic     #15                 // Field LOGGER:Ljava/util/logging/Logger;
      61: getstatic     #23                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      64: ldc           #24                 // String Failed to create a {0} for {1} at {2}: {3}
      66: iconst_4
      67: anewarray     #19                 // class java/lang/Object
      70: dup
      71: iconst_0
      72: aload_0
      73: invokevirtual #20                 // Method getDescription:()Ljava/lang/String;
      76: aastore
      77: dup
      78: iconst_1
      79: aload_1
      80: aastore
      81: dup
      82: iconst_2
      83: aload_0
      84: invokevirtual #13                 // Method getUrl:()Ljava/lang/String;
      87: aastore
      88: dup
      89: iconst_3
      90: aload_3
      91: aastore
      92: invokevirtual #21                 // Method java/util/logging/Logger.log:(Ljava/util/logging/Level;Ljava/lang/String;[Ljava/lang/Object;)V
      95: aload_3
      96: athrow
    Exception table:
       from    to  target type
           0    56    57   Class java/sql/SQLException

  public java.io.PrintWriter getLogWriter();
    Code:
       0: aconst_null
       1: areturn

  public void setLogWriter(java.io.PrintWriter);
    Code:
       0: return

  public java.lang.String getServerName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field serverName:Ljava/lang/String;
       4: areturn

  public void setServerName(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: ldc           #4                  // String
       7: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifeq          22
      13: aload_0
      14: ldc           #2                  // String localhost
      16: putfield      #3                  // Field serverName:Ljava/lang/String;
      19: goto          27
      22: aload_0
      23: aload_1
      24: putfield      #3                  // Field serverName:Ljava/lang/String;
      27: return

  public java.lang.String getDatabaseName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field databaseName:Ljava/lang/String;
       4: areturn

  public void setDatabaseName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field databaseName:Ljava/lang/String;
       5: return

  public abstract java.lang.String getDescription();

  public java.lang.String getUser();
    Code:
       0: aload_0
       1: getfield      #10                 // Field user:Ljava/lang/String;
       4: areturn

  public void setUser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field user:Ljava/lang/String;
       5: return

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #11                 // Field password:Ljava/lang/String;
       4: areturn

  public void setPassword(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field password:Ljava/lang/String;
       5: return

  public int getPortNumber();
    Code:
       0: aload_0
       1: getfield      #6                  // Field portNumber:I
       4: ireturn

  public void setPortNumber(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field portNumber:I
       5: return

  public int getLoginTimeout();
    Code:
       0: getstatic     #26                 // Field org/postgresql/PGProperty.LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setLoginTimeout(int);
    Code:
       0: getstatic     #26                 // Field org/postgresql/PGProperty.LOGIN_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getConnectTimeout();
    Code:
       0: getstatic     #29                 // Field org/postgresql/PGProperty.CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setConnectTimeout(int);
    Code:
       0: getstatic     #29                 // Field org/postgresql/PGProperty.CONNECT_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getProtocolVersion();
    Code:
       0: getstatic     #30                 // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #31                 // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
      10: ifne          15
      13: iconst_0
      14: ireturn
      15: getstatic     #30                 // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
      18: aload_0
      19: getfield      #9                  // Field properties:Ljava/util/Properties;
      22: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      25: ireturn

  public void setProtocolVersion(int);
    Code:
       0: iload_1
       1: ifne          18
       4: getstatic     #30                 // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
       7: aload_0
       8: getfield      #9                  // Field properties:Ljava/util/Properties;
      11: aconst_null
      12: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      15: goto          29
      18: getstatic     #30                 // Field org/postgresql/PGProperty.PROTOCOL_VERSION:Lorg/postgresql/PGProperty;
      21: aload_0
      22: getfield      #9                  // Field properties:Ljava/util/Properties;
      25: iload_1
      26: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      29: return

  public int getReceiveBufferSize();
    Code:
       0: getstatic     #33                 // Field org/postgresql/PGProperty.RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setReceiveBufferSize(int);
    Code:
       0: getstatic     #33                 // Field org/postgresql/PGProperty.RECEIVE_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getSendBufferSize();
    Code:
       0: getstatic     #34                 // Field org/postgresql/PGProperty.SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSendBufferSize(int);
    Code:
       0: getstatic     #34                 // Field org/postgresql/PGProperty.SEND_BUFFER_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public void setPrepareThreshold(int);
    Code:
       0: getstatic     #35                 // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getPrepareThreshold();
    Code:
       0: getstatic     #35                 // Field org/postgresql/PGProperty.PREPARE_THRESHOLD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public int getPreparedStatementCacheQueries();
    Code:
       0: getstatic     #36                 // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setPreparedStatementCacheQueries(int);
    Code:
       0: getstatic     #36                 // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_QUERIES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getPreparedStatementCacheSizeMiB();
    Code:
       0: getstatic     #37                 // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setPreparedStatementCacheSizeMiB(int);
    Code:
       0: getstatic     #37                 // Field org/postgresql/PGProperty.PREPARED_STATEMENT_CACHE_SIZE_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDatabaseMetadataCacheFields();
    Code:
       0: getstatic     #38                 // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setDatabaseMetadataCacheFields(int);
    Code:
       0: getstatic     #38                 // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDatabaseMetadataCacheFieldsMiB();
    Code:
       0: getstatic     #39                 // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setDatabaseMetadataCacheFieldsMiB(int);
    Code:
       0: getstatic     #39                 // Field org/postgresql/PGProperty.DATABASE_METADATA_CACHE_FIELDS_MIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public void setDefaultRowFetchSize(int);
    Code:
       0: getstatic     #40                 // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getDefaultRowFetchSize();
    Code:
       0: getstatic     #40                 // Field org/postgresql/PGProperty.DEFAULT_ROW_FETCH_SIZE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setUnknownLength(int);
    Code:
       0: getstatic     #41                 // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getUnknownLength();
    Code:
       0: getstatic     #41                 // Field org/postgresql/PGProperty.UNKNOWN_LENGTH:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSocketTimeout(int);
    Code:
       0: getstatic     #42                 // Field org/postgresql/PGProperty.SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getSocketTimeout();
    Code:
       0: getstatic     #42                 // Field org/postgresql/PGProperty.SOCKET_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setCancelSignalTimeout(int);
    Code:
       0: getstatic     #43                 // Field org/postgresql/PGProperty.CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getCancelSignalTimeout();
    Code:
       0: getstatic     #43                 // Field org/postgresql/PGProperty.CANCEL_SIGNAL_TIMEOUT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setSsl(boolean);
    Code:
       0: iload_1
       1: ifeq          18
       4: getstatic     #44                 // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
       7: aload_0
       8: getfield      #9                  // Field properties:Ljava/util/Properties;
      11: iconst_1
      12: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      15: goto          29
      18: getstatic     #44                 // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
      21: aload_0
      22: getfield      #9                  // Field properties:Ljava/util/Properties;
      25: iconst_0
      26: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      29: return

  public boolean getSsl();
    Code:
       0: getstatic     #44                 // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ifne          31
      13: ldc           #4                  // String
      15: getstatic     #44                 // Field org/postgresql/PGProperty.SSL:Lorg/postgresql/PGProperty;
      18: aload_0
      19: getfield      #9                  // Field properties:Ljava/util/Properties;
      22: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      25: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public void setSslfactory(java.lang.String);
    Code:
       0: getstatic     #48                 // Field org/postgresql/PGProperty.SSL_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslfactory();
    Code:
       0: getstatic     #48                 // Field org/postgresql/PGProperty.SSL_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getSslMode();
    Code:
       0: getstatic     #49                 // Field org/postgresql/PGProperty.SSL_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslMode(java.lang.String);
    Code:
       0: getstatic     #49                 // Field org/postgresql/PGProperty.SSL_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslFactoryArg();
    Code:
       0: getstatic     #50                 // Field org/postgresql/PGProperty.SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslFactoryArg(java.lang.String);
    Code:
       0: getstatic     #50                 // Field org/postgresql/PGProperty.SSL_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslHostnameVerifier();
    Code:
       0: getstatic     #51                 // Field org/postgresql/PGProperty.SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslHostnameVerifier(java.lang.String);
    Code:
       0: getstatic     #51                 // Field org/postgresql/PGProperty.SSL_HOSTNAME_VERIFIER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslCert();
    Code:
       0: getstatic     #52                 // Field org/postgresql/PGProperty.SSL_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslCert(java.lang.String);
    Code:
       0: getstatic     #52                 // Field org/postgresql/PGProperty.SSL_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslKey();
    Code:
       0: getstatic     #53                 // Field org/postgresql/PGProperty.SSL_KEY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslKey(java.lang.String);
    Code:
       0: getstatic     #53                 // Field org/postgresql/PGProperty.SSL_KEY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslRootCert();
    Code:
       0: getstatic     #54                 // Field org/postgresql/PGProperty.SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslRootCert(java.lang.String);
    Code:
       0: getstatic     #54                 // Field org/postgresql/PGProperty.SSL_ROOT_CERT:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslPassword();
    Code:
       0: getstatic     #55                 // Field org/postgresql/PGProperty.SSL_PASSWORD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslPassword(java.lang.String);
    Code:
       0: getstatic     #55                 // Field org/postgresql/PGProperty.SSL_PASSWORD:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSslPasswordCallback();
    Code:
       0: getstatic     #56                 // Field org/postgresql/PGProperty.SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSslPasswordCallback(java.lang.String);
    Code:
       0: getstatic     #56                 // Field org/postgresql/PGProperty.SSL_PASSWORD_CALLBACK:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public void setApplicationName(java.lang.String);
    Code:
       0: getstatic     #57                 // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getApplicationName();
    Code:
       0: getstatic     #57                 // Field org/postgresql/PGProperty.APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setTargetServerType(java.lang.String);
    Code:
       0: getstatic     #58                 // Field org/postgresql/PGProperty.TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getTargetServerType();
    Code:
       0: getstatic     #58                 // Field org/postgresql/PGProperty.TARGET_SERVER_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setLoadBalanceHosts(boolean);
    Code:
       0: getstatic     #59                 // Field org/postgresql/PGProperty.LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getLoadBalanceHosts();
    Code:
       0: getstatic     #59                 // Field org/postgresql/PGProperty.LOAD_BALANCE_HOSTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #31                 // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
      10: ireturn

  public void setHostRecheckSeconds(int);
    Code:
       0: getstatic     #60                 // Field org/postgresql/PGProperty.HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #28                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;I)V
      11: return

  public int getHostRecheckSeconds();
    Code:
       0: getstatic     #60                 // Field org/postgresql/PGProperty.HOST_RECHECK_SECONDS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #27                 // Method org/postgresql/PGProperty.getIntNoCheck:(Ljava/util/Properties;)I
      10: ireturn

  public void setTcpKeepAlive(boolean);
    Code:
       0: getstatic     #61                 // Field org/postgresql/PGProperty.TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getTcpKeepAlive();
    Code:
       0: getstatic     #61                 // Field org/postgresql/PGProperty.TCP_KEEP_ALIVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setBinaryTransfer(boolean);
    Code:
       0: getstatic     #62                 // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getBinaryTransfer();
    Code:
       0: getstatic     #62                 // Field org/postgresql/PGProperty.BINARY_TRANSFER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setBinaryTransferEnable(java.lang.String);
    Code:
       0: getstatic     #63                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getBinaryTransferEnable();
    Code:
       0: getstatic     #63                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_ENABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setBinaryTransferDisable(java.lang.String);
    Code:
       0: getstatic     #64                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getBinaryTransferDisable();
    Code:
       0: getstatic     #64                 // Field org/postgresql/PGProperty.BINARY_TRANSFER_DISABLE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getStringType();
    Code:
       0: getstatic     #65                 // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setStringType(java.lang.String);
    Code:
       0: getstatic     #65                 // Field org/postgresql/PGProperty.STRING_TYPE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean isColumnSanitiserDisabled();
    Code:
       0: getstatic     #66                 // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public boolean getDisableColumnSanitiser();
    Code:
       0: getstatic     #66                 // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setDisableColumnSanitiser(boolean);
    Code:
       0: getstatic     #66                 // Field org/postgresql/PGProperty.DISABLE_COLUMN_SANITISER:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getCurrentSchema();
    Code:
       0: getstatic     #67                 // Field org/postgresql/PGProperty.CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setCurrentSchema(java.lang.String);
    Code:
       0: getstatic     #67                 // Field org/postgresql/PGProperty.CURRENT_SCHEMA:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getReadOnly();
    Code:
       0: getstatic     #68                 // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setReadOnly(boolean);
    Code:
       0: getstatic     #68                 // Field org/postgresql/PGProperty.READ_ONLY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public boolean getLogUnclosedConnections();
    Code:
       0: getstatic     #69                 // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setLogUnclosedConnections(boolean);
    Code:
       0: getstatic     #69                 // Field org/postgresql/PGProperty.LOG_UNCLOSED_CONNECTIONS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getAssumeMinServerVersion();
    Code:
       0: getstatic     #70                 // Field org/postgresql/PGProperty.ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setAssumeMinServerVersion(java.lang.String);
    Code:
       0: getstatic     #70                 // Field org/postgresql/PGProperty.ASSUME_MIN_SERVER_VERSION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getJaasApplicationName();
    Code:
       0: getstatic     #71                 // Field org/postgresql/PGProperty.JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setJaasApplicationName(java.lang.String);
    Code:
       0: getstatic     #71                 // Field org/postgresql/PGProperty.JAAS_APPLICATION_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getKerberosServerName();
    Code:
       0: getstatic     #72                 // Field org/postgresql/PGProperty.KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setKerberosServerName(java.lang.String);
    Code:
       0: getstatic     #72                 // Field org/postgresql/PGProperty.KERBEROS_SERVER_NAME:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getUseSpNego();
    Code:
       0: getstatic     #73                 // Field org/postgresql/PGProperty.USE_SPNEGO:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setUseSpNego(boolean);
    Code:
       0: getstatic     #73                 // Field org/postgresql/PGProperty.USE_SPNEGO:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getGssLib();
    Code:
       0: getstatic     #74                 // Field org/postgresql/PGProperty.GSS_LIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setGssLib(java.lang.String);
    Code:
       0: getstatic     #74                 // Field org/postgresql/PGProperty.GSS_LIB:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSspiServiceClass();
    Code:
       0: getstatic     #75                 // Field org/postgresql/PGProperty.SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSspiServiceClass(java.lang.String);
    Code:
       0: getstatic     #75                 // Field org/postgresql/PGProperty.SSPI_SERVICE_CLASS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public boolean getAllowEncodingChanges();
    Code:
       0: getstatic     #76                 // Field org/postgresql/PGProperty.ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setAllowEncodingChanges(boolean);
    Code:
       0: getstatic     #76                 // Field org/postgresql/PGProperty.ALLOW_ENCODING_CHANGES:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.lang.String getSocketFactory();
    Code:
       0: getstatic     #77                 // Field org/postgresql/PGProperty.SOCKET_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSocketFactory(java.lang.String);
    Code:
       0: getstatic     #77                 // Field org/postgresql/PGProperty.SOCKET_FACTORY:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getSocketFactoryArg();
    Code:
       0: getstatic     #78                 // Field org/postgresql/PGProperty.SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setSocketFactoryArg(java.lang.String);
    Code:
       0: getstatic     #78                 // Field org/postgresql/PGProperty.SOCKET_FACTORY_ARG:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public void setReplication(java.lang.String);
    Code:
       0: getstatic     #79                 // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getReplication();
    Code:
       0: getstatic     #79                 // Field org/postgresql/PGProperty.REPLICATION:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public java.lang.String getLoggerLevel();
    Code:
       0: getstatic     #80                 // Field org/postgresql/PGProperty.LOGGER_LEVEL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: areturn

  public void setLoggerLevel(java.lang.String);
    Code:
       0: getstatic     #80                 // Field org/postgresql/PGProperty.LOGGER_LEVEL:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getLoggerFile();
    Code:
       0: new           #81                 // class org/postgresql/util/ExpressionProperties
       3: dup
       4: iconst_2
       5: anewarray     #7                  // class java/util/Properties
       8: dup
       9: iconst_0
      10: aload_0
      11: getfield      #9                  // Field properties:Ljava/util/Properties;
      14: aastore
      15: dup
      16: iconst_1
      17: invokestatic  #82                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
      20: aastore
      21: invokespecial #83                 // Method org/postgresql/util/ExpressionProperties."<init>":([Ljava/util/Properties;)V
      24: astore_1
      25: getstatic     #84                 // Field org/postgresql/PGProperty.LOGGER_FILE:Lorg/postgresql/PGProperty;
      28: aload_1
      29: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      32: areturn

  public void setLoggerFile(java.lang.String);
    Code:
       0: getstatic     #84                 // Field org/postgresql/PGProperty.LOGGER_FILE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      11: return

  public java.lang.String getUrl();
    Code:
       0: new           #85                 // class java/lang/StringBuilder
       3: dup
       4: bipush        100
       6: invokespecial #86                 // Method java/lang/StringBuilder."<init>":(I)V
       9: astore_1
      10: aload_1
      11: ldc           #87                 // String jdbc:postgresql://
      13: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: aload_0
      19: getfield      #3                  // Field serverName:Ljava/lang/String;
      22: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: pop
      26: aload_0
      27: getfield      #6                  // Field portNumber:I
      30: ifeq          47
      33: aload_1
      34: ldc           #89                 // String :
      36: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #6                  // Field portNumber:I
      43: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #91                 // String /
      50: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_0
      54: getfield      #5                  // Field databaseName:Ljava/lang/String;
      57: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: new           #85                 // class java/lang/StringBuilder
      64: dup
      65: bipush        100
      67: invokespecial #86                 // Method java/lang/StringBuilder."<init>":(I)V
      70: astore_2
      71: invokestatic  #92                 // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
      74: astore_3
      75: aload_3
      76: arraylength
      77: istore        4
      79: iconst_0
      80: istore        5
      82: iload         5
      84: iload         4
      86: if_icmpge     158
      89: aload_3
      90: iload         5
      92: aaload
      93: astore        6
      95: aload         6
      97: aload_0
      98: getfield      #9                  // Field properties:Ljava/util/Properties;
     101: invokevirtual #31                 // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
     104: ifeq          152
     107: aload_2
     108: invokevirtual #93                 // Method java/lang/StringBuilder.length:()I
     111: ifeq          121
     114: aload_2
     115: ldc           #94                 // String &
     117: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: pop
     121: aload_2
     122: aload         6
     124: invokevirtual #95                 // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     127: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: pop
     131: aload_2
     132: ldc           #96                 // String =
     134: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: pop
     138: aload_2
     139: aload         6
     141: aload_0
     142: getfield      #9                  // Field properties:Ljava/util/Properties;
     145: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     148: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     151: pop
     152: iinc          5, 1
     155: goto          82
     158: aload_2
     159: invokevirtual #93                 // Method java/lang/StringBuilder.length:()I
     162: ifle          178
     165: aload_1
     166: ldc           #97                 // String ?
     168: invokevirtual #88                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     171: pop
     172: aload_1
     173: aload_2
     174: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;
     177: pop
     178: aload_1
     179: invokevirtual #99                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     182: areturn

  public void setUrl(java.lang.String);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #100                // Method org/postgresql/Driver.parseURL:(Ljava/lang/String;Ljava/util/Properties;)Ljava/util/Properties;
       5: astore_2
       6: invokestatic  #92                 // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
       9: astore_3
      10: aload_3
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     48
      24: aload_3
      25: iload         5
      27: aaload
      28: astore        6
      30: aload_0
      31: aload         6
      33: aload         6
      35: aload_2
      36: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      39: invokevirtual #101                // Method setProperty:(Lorg/postgresql/PGProperty;Ljava/lang/String;)V
      42: iinc          5, 1
      45: goto          17
      48: return

  public java.lang.String getProperty(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokestatic  #102                // Method org/postgresql/PGProperty.forName:(Ljava/lang/String;)Lorg/postgresql/PGProperty;
       4: astore_2
       5: aload_2
       6: ifnull        15
       9: aload_0
      10: aload_2
      11: invokevirtual #103                // Method getProperty:(Lorg/postgresql/PGProperty;)Ljava/lang/String;
      14: areturn
      15: new           #104                // class org/postgresql/util/PSQLException
      18: dup
      19: ldc           #105                // String Unsupported property name: {0}
      21: iconst_1
      22: anewarray     #19                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: aload_1
      28: aastore
      29: invokestatic  #106                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      32: getstatic     #107                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      35: invokespecial #108                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      38: athrow

  public void setProperty(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokestatic  #102                // Method org/postgresql/PGProperty.forName:(Ljava/lang/String;)Lorg/postgresql/PGProperty;
       4: astore_3
       5: aload_3
       6: ifnull        18
       9: aload_0
      10: aload_3
      11: aload_2
      12: invokevirtual #101                // Method setProperty:(Lorg/postgresql/PGProperty;Ljava/lang/String;)V
      15: goto          42
      18: new           #104                // class org/postgresql/util/PSQLException
      21: dup
      22: ldc           #105                // String Unsupported property name: {0}
      24: iconst_1
      25: anewarray     #19                 // class java/lang/Object
      28: dup
      29: iconst_0
      30: aload_1
      31: aastore
      32: invokestatic  #106                // Method org/postgresql/util/GT.tr:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: getstatic     #107                // Field org/postgresql/util/PSQLState.INVALID_PARAMETER_VALUE:Lorg/postgresql/util/PSQLState;
      38: invokespecial #108                // Method org/postgresql/util/PSQLException."<init>":(Ljava/lang/String;Lorg/postgresql/util/PSQLState;)V
      41: athrow
      42: return

  public java.lang.String getProperty(org.postgresql.PGProperty);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #9                  // Field properties:Ljava/util/Properties;
       5: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
       8: areturn

  public void setProperty(org.postgresql.PGProperty, java.lang.String);
    Code:
       0: aload_2
       1: ifnonnull     5
       4: return
       5: getstatic     #109                // Field org/postgresql/ds/common/BaseDataSource$1.$SwitchMap$org$postgresql$PGProperty:[I
       8: aload_1
       9: invokevirtual #110                // Method org/postgresql/PGProperty.ordinal:()I
      12: iaload
      13: tableswitch   { // 1 to 5
                     1: 48
                     2: 56
                     3: 76
                     4: 84
                     5: 92
               default: 100
          }
      48: aload_0
      49: aload_2
      50: putfield      #3                  // Field serverName:Ljava/lang/String;
      53: goto          113
      56: aload_0
      57: aload_2
      58: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      61: putfield      #6                  // Field portNumber:I
      64: goto          113
      67: astore_3
      68: aload_0
      69: iconst_0
      70: putfield      #6                  // Field portNumber:I
      73: goto          113
      76: aload_0
      77: aload_2
      78: putfield      #5                  // Field databaseName:Ljava/lang/String;
      81: goto          113
      84: aload_0
      85: aload_2
      86: putfield      #10                 // Field user:Ljava/lang/String;
      89: goto          113
      92: aload_0
      93: aload_2
      94: putfield      #11                 // Field password:Ljava/lang/String;
      97: goto          113
     100: aload_0
     101: getfield      #9                  // Field properties:Ljava/util/Properties;
     104: aload_1
     105: invokevirtual #95                 // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     108: aload_2
     109: invokevirtual #113                // Method java/util/Properties.setProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;
     112: pop
     113: return
    Exception table:
       from    to  target type
          56    64    67   Class java/lang/NumberFormatException

  protected javax.naming.Reference createReference();
    Code:
       0: new           #114                // class javax/naming/Reference
       3: dup
       4: aload_0
       5: invokevirtual #115                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #116                // Method java/lang/Class.getName:()Ljava/lang/String;
      11: ldc           #117                // class org/postgresql/ds/common/PGObjectFactory
      13: invokevirtual #116                // Method java/lang/Class.getName:()Ljava/lang/String;
      16: aconst_null
      17: invokespecial #118                // Method javax/naming/Reference."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      20: areturn

  public javax.naming.Reference getReference() throws javax.naming.NamingException;
    Code:
       0: aload_0
       1: invokevirtual #119                // Method createReference:()Ljavax/naming/Reference;
       4: astore_1
       5: aload_1
       6: new           #120                // class javax/naming/StringRefAddr
       9: dup
      10: ldc           #121                // String serverName
      12: aload_0
      13: getfield      #3                  // Field serverName:Ljava/lang/String;
      16: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      19: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      22: aload_0
      23: getfield      #6                  // Field portNumber:I
      26: ifeq          49
      29: aload_1
      30: new           #120                // class javax/naming/StringRefAddr
      33: dup
      34: ldc           #124                // String portNumber
      36: aload_0
      37: getfield      #6                  // Field portNumber:I
      40: invokestatic  #125                // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      43: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      46: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      49: aload_1
      50: new           #120                // class javax/naming/StringRefAddr
      53: dup
      54: ldc           #126                // String databaseName
      56: aload_0
      57: getfield      #5                  // Field databaseName:Ljava/lang/String;
      60: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      63: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      66: aload_0
      67: getfield      #10                 // Field user:Ljava/lang/String;
      70: ifnull        90
      73: aload_1
      74: new           #120                // class javax/naming/StringRefAddr
      77: dup
      78: ldc           #127                // String user
      80: aload_0
      81: getfield      #10                 // Field user:Ljava/lang/String;
      84: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      87: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
      90: aload_0
      91: getfield      #11                 // Field password:Ljava/lang/String;
      94: ifnull        114
      97: aload_1
      98: new           #120                // class javax/naming/StringRefAddr
     101: dup
     102: ldc           #128                // String password
     104: aload_0
     105: getfield      #11                 // Field password:Ljava/lang/String;
     108: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     111: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
     114: invokestatic  #92                 // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
     117: astore_2
     118: aload_2
     119: arraylength
     120: istore_3
     121: iconst_0
     122: istore        4
     124: iload         4
     126: iload_3
     127: if_icmpge     179
     130: aload_2
     131: iload         4
     133: aaload
     134: astore        5
     136: aload         5
     138: aload_0
     139: getfield      #9                  // Field properties:Ljava/util/Properties;
     142: invokevirtual #31                 // Method org/postgresql/PGProperty.isPresent:(Ljava/util/Properties;)Z
     145: ifeq          173
     148: aload_1
     149: new           #120                // class javax/naming/StringRefAddr
     152: dup
     153: aload         5
     155: invokevirtual #95                 // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
     158: aload         5
     160: aload_0
     161: getfield      #9                  // Field properties:Ljava/util/Properties;
     164: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
     167: invokespecial #122                // Method javax/naming/StringRefAddr."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     170: invokevirtual #123                // Method javax/naming/Reference.add:(Ljavax/naming/RefAddr;)V
     173: iinc          4, 1
     176: goto          124
     179: aload_1
     180: areturn

  public void setFromReference(javax.naming.Reference);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #126                // String databaseName
       4: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
       7: putfield      #5                  // Field databaseName:Ljava/lang/String;
      10: aload_1
      11: ldc           #124                // String portNumber
      13: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ifnull        29
      21: aload_0
      22: aload_2
      23: invokestatic  #111                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      26: putfield      #6                  // Field portNumber:I
      29: aload_0
      30: aload_1
      31: ldc           #121                // String serverName
      33: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      36: putfield      #3                  // Field serverName:Ljava/lang/String;
      39: aload_0
      40: aload_1
      41: ldc           #127                // String user
      43: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      46: putfield      #10                 // Field user:Ljava/lang/String;
      49: aload_0
      50: aload_1
      51: ldc           #128                // String password
      53: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      56: putfield      #11                 // Field password:Ljava/lang/String;
      59: invokestatic  #92                 // Method org/postgresql/PGProperty.values:()[Lorg/postgresql/PGProperty;
      62: astore_3
      63: aload_3
      64: arraylength
      65: istore        4
      67: iconst_0
      68: istore        5
      70: iload         5
      72: iload         4
      74: if_icmpge     107
      77: aload_3
      78: iload         5
      80: aaload
      81: astore        6
      83: aload         6
      85: aload_0
      86: getfield      #9                  // Field properties:Ljava/util/Properties;
      89: aload_1
      90: aload         6
      92: invokevirtual #95                 // Method org/postgresql/PGProperty.getName:()Ljava/lang/String;
      95: invokestatic  #129                // Method getReferenceProperty:(Ljavax/naming/Reference;Ljava/lang/String;)Ljava/lang/String;
      98: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
     101: iinc          5, 1
     104: goto          70
     107: return

  private static java.lang.String getReferenceProperty(javax.naming.Reference, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #130                // Method javax/naming/Reference.get:(Ljava/lang/String;)Ljavax/naming/RefAddr;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: invokevirtual #131                // Method javax/naming/RefAddr.getContent:()Ljava/lang/Object;
      16: checkcast     #132                // class java/lang/String
      19: areturn

  protected void writeBaseObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #3                  // Field serverName:Ljava/lang/String;
       5: invokevirtual #133                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
       8: aload_1
       9: aload_0
      10: getfield      #5                  // Field databaseName:Ljava/lang/String;
      13: invokevirtual #133                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      16: aload_1
      17: aload_0
      18: getfield      #10                 // Field user:Ljava/lang/String;
      21: invokevirtual #133                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      24: aload_1
      25: aload_0
      26: getfield      #11                 // Field password:Ljava/lang/String;
      29: invokevirtual #133                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      32: aload_1
      33: aload_0
      34: getfield      #6                  // Field portNumber:I
      37: invokevirtual #134                // Method java/io/ObjectOutputStream.writeInt:(I)V
      40: aload_1
      41: aload_0
      42: getfield      #9                  // Field properties:Ljava/util/Properties;
      45: invokevirtual #133                // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      48: return

  protected void readBaseObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #135                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       5: checkcast     #132                // class java/lang/String
       8: putfield      #3                  // Field serverName:Ljava/lang/String;
      11: aload_0
      12: aload_1
      13: invokevirtual #135                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      16: checkcast     #132                // class java/lang/String
      19: putfield      #5                  // Field databaseName:Ljava/lang/String;
      22: aload_0
      23: aload_1
      24: invokevirtual #135                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      27: checkcast     #132                // class java/lang/String
      30: putfield      #10                 // Field user:Ljava/lang/String;
      33: aload_0
      34: aload_1
      35: invokevirtual #135                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      38: checkcast     #132                // class java/lang/String
      41: putfield      #11                 // Field password:Ljava/lang/String;
      44: aload_0
      45: aload_1
      46: invokevirtual #136                // Method java/io/ObjectInputStream.readInt:()I
      49: putfield      #6                  // Field portNumber:I
      52: aload_0
      53: aload_1
      54: invokevirtual #135                // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      57: checkcast     #7                  // class java/util/Properties
      60: putfield      #9                  // Field properties:Ljava/util/Properties;
      63: return

  public void initializeFrom(org.postgresql.ds.common.BaseDataSource) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: new           #137                // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #138                // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #139                // class java/io/ObjectOutputStream
      11: dup
      12: aload_2
      13: invokespecial #140                // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      16: astore_3
      17: aload_1
      18: aload_3
      19: invokevirtual #141                // Method writeBaseObject:(Ljava/io/ObjectOutputStream;)V
      22: aload_3
      23: invokevirtual #142                // Method java/io/ObjectOutputStream.close:()V
      26: new           #143                // class java/io/ByteArrayInputStream
      29: dup
      30: aload_2
      31: invokevirtual #144                // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      34: invokespecial #145                // Method java/io/ByteArrayInputStream."<init>":([B)V
      37: astore        4
      39: new           #146                // class java/io/ObjectInputStream
      42: dup
      43: aload         4
      45: invokespecial #147                // Method java/io/ObjectInputStream."<init>":(Ljava/io/InputStream;)V
      48: astore        5
      50: aload_0
      51: aload         5
      53: invokevirtual #148                // Method readBaseObject:(Ljava/io/ObjectInputStream;)V
      56: return

  public org.postgresql.jdbc.PreferQueryMode getPreferQueryMode();
    Code:
       0: getstatic     #149                // Field org/postgresql/PGProperty.PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: invokestatic  #150                // Method org/postgresql/jdbc/PreferQueryMode.of:(Ljava/lang/String;)Lorg/postgresql/jdbc/PreferQueryMode;
      13: areturn

  public void setPreferQueryMode(org.postgresql.jdbc.PreferQueryMode);
    Code:
       0: getstatic     #149                // Field org/postgresql/PGProperty.PREFER_QUERY_MODE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #151                // Method org/postgresql/jdbc/PreferQueryMode.value:()Ljava/lang/String;
      11: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      14: return

  public org.postgresql.jdbc.AutoSave getAutosave();
    Code:
       0: getstatic     #152                // Field org/postgresql/PGProperty.AUTOSAVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #47                 // Method org/postgresql/PGProperty.get:(Ljava/util/Properties;)Ljava/lang/String;
      10: invokestatic  #153                // Method org/postgresql/jdbc/AutoSave.of:(Ljava/lang/String;)Lorg/postgresql/jdbc/AutoSave;
      13: areturn

  public void setAutosave(org.postgresql.jdbc.AutoSave);
    Code:
       0: getstatic     #152                // Field org/postgresql/PGProperty.AUTOSAVE:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: aload_1
       8: invokevirtual #154                // Method org/postgresql/jdbc/AutoSave.value:()Ljava/lang/String;
      11: invokevirtual #32                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Ljava/lang/String;)V
      14: return

  public boolean getReWriteBatchedInserts();
    Code:
       0: getstatic     #155                // Field org/postgresql/PGProperty.REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: invokevirtual #46                 // Method org/postgresql/PGProperty.getBoolean:(Ljava/util/Properties;)Z
      10: ireturn

  public void setReWriteBatchedInserts(boolean);
    Code:
       0: getstatic     #155                // Field org/postgresql/PGProperty.REWRITE_BATCHED_INSERTS:Lorg/postgresql/PGProperty;
       3: aload_0
       4: getfield      #9                  // Field properties:Ljava/util/Properties;
       7: iload_1
       8: invokevirtual #45                 // Method org/postgresql/PGProperty.set:(Ljava/util/Properties;Z)V
      11: return

  public java.util.logging.Logger getParentLogger();
    Code:
       0: ldc           #156                // String org.postgresql
       2: invokestatic  #157                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       5: areturn

  static {};
    Code:
       0: ldc           #158                // class org/postgresql/ds/common/BaseDataSource
       2: invokevirtual #116                // Method java/lang/Class.getName:()Ljava/lang/String;
       5: invokestatic  #157                // Method java/util/logging/Logger.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;
       8: putstatic     #15                 // Field LOGGER:Ljava/util/logging/Logger;
      11: ldc           #159                // String org.postgresql.Driver
      13: invokestatic  #160                // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      16: pop
      17: goto          32
      20: astore_0
      21: new           #162                // class java/lang/IllegalStateException
      24: dup
      25: ldc           #163                // String BaseDataSource is unable to load org.postgresql.Driver. Please check if you have proper PostgreSQL JDBC Driver jar on the classpath
      27: aload_0
      28: invokespecial #164                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      31: athrow
      32: return
    Exception table:
       from    to  target type
          11    17    20   Class java/lang/ClassNotFoundException
}
