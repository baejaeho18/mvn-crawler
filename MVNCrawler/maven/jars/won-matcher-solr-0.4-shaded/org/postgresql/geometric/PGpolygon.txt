Compiled from "PGpolygon.java"
public class org.postgresql.geometric.PGpolygon extends org.postgresql.util.PGobject implements java.io.Serializable,java.lang.Cloneable {
  public org.postgresql.geometric.PGpoint[] points;

  public org.postgresql.geometric.PGpolygon(org.postgresql.geometric.PGpoint[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
       9: return

  public org.postgresql.geometric.PGpolygon(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method setValue:(Ljava/lang/String;)V
       9: return

  public org.postgresql.geometric.PGpolygon();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method org/postgresql/util/PGobject."<init>":()V
       4: aload_0
       5: ldc           #5                  // String polygon
       7: invokevirtual #6                  // Method setType:(Ljava/lang/String;)V
      10: return

  public void setValue(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #7                  // class org/postgresql/util/PGtokenizer
       3: dup
       4: aload_1
       5: invokestatic  #8                  // Method org/postgresql/util/PGtokenizer.removePara:(Ljava/lang/String;)Ljava/lang/String;
       8: bipush        44
      10: invokespecial #9                  // Method org/postgresql/util/PGtokenizer."<init>":(Ljava/lang/String;C)V
      13: astore_2
      14: aload_2
      15: invokevirtual #10                 // Method org/postgresql/util/PGtokenizer.getSize:()I
      18: istore_3
      19: aload_0
      20: iload_3
      21: anewarray     #11                 // class org/postgresql/geometric/PGpoint
      24: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_3
      33: if_icmpge     62
      36: aload_0
      37: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      40: iload         4
      42: new           #11                 // class org/postgresql/geometric/PGpoint
      45: dup
      46: aload_2
      47: iload         4
      49: invokevirtual #12                 // Method org/postgresql/util/PGtokenizer.getToken:(I)Ljava/lang/String;
      52: invokespecial #13                 // Method org/postgresql/geometric/PGpoint."<init>":(Ljava/lang/String;)V
      55: aastore
      56: iinc          4, 1
      59: goto          30
      62: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #14                 // class org/postgresql/geometric/PGpolygon
       4: ifeq          66
       7: aload_1
       8: checkcast     #14                 // class org/postgresql/geometric/PGpolygon
      11: astore_2
      12: aload_2
      13: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      16: arraylength
      17: aload_0
      18: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      21: arraylength
      22: if_icmpeq     27
      25: iconst_0
      26: ireturn
      27: iconst_0
      28: istore_3
      29: iload_3
      30: aload_0
      31: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      34: arraylength
      35: if_icmpge     64
      38: aload_0
      39: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      42: iload_3
      43: aaload
      44: aload_2
      45: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      48: iload_3
      49: aaload
      50: invokevirtual #15                 // Method org/postgresql/geometric/PGpoint.equals:(Ljava/lang/Object;)Z
      53: ifne          58
      56: iconst_0
      57: ireturn
      58: iinc          3, 1
      61: goto          29
      64: iconst_1
      65: ireturn
      66: iconst_0
      67: ireturn

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iload_2
       5: aload_0
       6: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
       9: arraylength
      10: if_icmpge     36
      13: iload_2
      14: iconst_5
      15: if_icmpge     36
      18: iload_1
      19: aload_0
      20: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      23: iload_2
      24: aaload
      25: invokevirtual #16                 // Method org/postgresql/geometric/PGpoint.hashCode:()I
      28: ixor
      29: istore_1
      30: iinc          2, 1
      33: goto          4
      36: iload_1
      37: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/postgresql/util/PGobject.clone:()Ljava/lang/Object;
       4: checkcast     #14                 // class org/postgresql/geometric/PGpolygon
       7: astore_1
       8: aload_1
       9: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      12: ifnull        76
      15: aload_1
      16: aload_1
      17: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      20: invokevirtual #18                 // Method "[Lorg/postgresql/geometric/PGpoint;".clone:()Ljava/lang/Object;
      23: checkcast     #19                 // class "[Lorg/postgresql/geometric/PGpoint;"
      26: checkcast     #19                 // class "[Lorg/postgresql/geometric/PGpoint;"
      29: putfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      32: iconst_0
      33: istore_2
      34: iload_2
      35: aload_1
      36: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      39: arraylength
      40: if_icmpge     76
      43: aload_1
      44: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      47: iload_2
      48: aaload
      49: ifnull        70
      52: aload_1
      53: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      56: iload_2
      57: aload_1
      58: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      61: iload_2
      62: aaload
      63: invokevirtual #20                 // Method org/postgresql/geometric/PGpoint.clone:()Ljava/lang/Object;
      66: checkcast     #11                 // class org/postgresql/geometric/PGpoint
      69: aastore
      70: iinc          2, 1
      73: goto          34
      76: aload_1
      77: areturn

  public java.lang.String getValue();
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #23                 // String (
      11: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: iconst_0
      16: istore_2
      17: iload_2
      18: aload_0
      19: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      22: arraylength
      23: if_icmpge     57
      26: iload_2
      27: ifle          37
      30: aload_1
      31: ldc           #25                 // String ,
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: pop
      37: aload_1
      38: aload_0
      39: getfield      #2                  // Field points:[Lorg/postgresql/geometric/PGpoint;
      42: iload_2
      43: aaload
      44: invokevirtual #26                 // Method org/postgresql/geometric/PGpoint.toString:()Ljava/lang/String;
      47: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: pop
      51: iinc          2, 1
      54: goto          17
      57: aload_1
      58: ldc           #27                 // String )
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: pop
      64: aload_1
      65: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: areturn
}
