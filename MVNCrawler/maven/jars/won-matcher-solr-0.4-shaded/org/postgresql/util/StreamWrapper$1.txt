Compiled from "StreamWrapper.java"
class org.postgresql.util.StreamWrapper$1 extends java.io.FileInputStream {
  private boolean _closed;

  private int _position;

  final java.io.File val$tempFile;

  final org.postgresql.util.StreamWrapper this$0;

  org.postgresql.util.StreamWrapper$1(org.postgresql.util.StreamWrapper, java.io.File, java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/postgresql/util/StreamWrapper;
       5: aload_0
       6: aload_3
       7: putfield      #2                  // Field val$tempFile:Ljava/io/File;
      10: aload_0
      11: aload_2
      12: invokespecial #3                  // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      15: aload_0
      16: iconst_0
      17: putfield      #4                  // Field _closed:Z
      20: aload_0
      21: iconst_0
      22: putfield      #5                  // Field _position:I
      25: return

  private void checkShouldClose(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: iconst_m1
       2: if_icmpne     12
       5: aload_0
       6: invokevirtual #6                  // Method close:()V
       9: goto          40
      12: aload_0
      13: dup
      14: getfield      #5                  // Field _position:I
      17: iload_1
      18: iadd
      19: putfield      #5                  // Field _position:I
      22: aload_0
      23: getfield      #5                  // Field _position:I
      26: aload_0
      27: getfield      #1                  // Field this$0:Lorg/postgresql/util/StreamWrapper;
      30: invokestatic  #7                  // Method org/postgresql/util/StreamWrapper.access$000:(Lorg/postgresql/util/StreamWrapper;)I
      33: if_icmplt     40
      36: aload_0
      37: invokevirtual #6                  // Method close:()V
      40: return

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _closed:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: aload_1
      11: invokespecial #8                  // Method java/io/FileInputStream.read:([B)I
      14: istore_2
      15: aload_0
      16: iload_2
      17: invokespecial #9                  // Method checkShouldClose:(I)V
      20: iload_2
      21: ireturn

  public int read(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _closed:Z
       4: ifeq          9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: aload_1
      11: iload_2
      12: iload_3
      13: invokespecial #10                 // Method java/io/FileInputStream.read:([BII)I
      16: istore        4
      18: aload_0
      19: iload         4
      21: invokespecial #9                  // Method checkShouldClose:(I)V
      24: iload         4
      26: ireturn

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field _closed:Z
       4: ifne          24
       7: aload_0
       8: invokespecial #11                 // Method java/io/FileInputStream.close:()V
      11: aload_0
      12: getfield      #2                  // Field val$tempFile:Ljava/io/File;
      15: invokevirtual #12                 // Method java/io/File.delete:()Z
      18: pop
      19: aload_0
      20: iconst_1
      21: putfield      #4                  // Field _closed:Z
      24: return

  protected void finalize() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method close:()V
       4: aload_0
       5: invokespecial #13                 // Method java/io/FileInputStream.finalize:()V
       8: return
}
