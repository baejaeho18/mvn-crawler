Compiled from "ByteArrayInputStream.java"
public class org.fusesource.hawtbuf.ByteArrayInputStream extends java.io.InputStream {
  byte[] buffer;

  int limit;

  int pos;

  int mark;

  public org.fusesource.hawtbuf.ByteArrayInputStream(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokespecial #1                  // Method "<init>":([BII)V
       8: return

  public org.fusesource.hawtbuf.ByteArrayInputStream(org.fusesource.hawtbuf.Buffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method org/fusesource/hawtbuf/Buffer.getData:()[B
       5: aload_1
       6: invokevirtual #3                  // Method org/fusesource/hawtbuf/Buffer.getOffset:()I
       9: aload_1
      10: invokevirtual #4                  // Method org/fusesource/hawtbuf/Buffer.getLength:()I
      13: invokespecial #1                  // Method "<init>":([BII)V
      16: return

  public org.fusesource.hawtbuf.ByteArrayInputStream(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #6                  // Field buffer:[B
       9: aload_0
      10: iload_2
      11: putfield      #7                  // Field mark:I
      14: aload_0
      15: iload_2
      16: putfield      #8                  // Field pos:I
      19: aload_0
      20: iload_2
      21: iload_3
      22: iadd
      23: putfield      #9                  // Field limit:I
      26: return

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #9                  // Field limit:I
       8: if_icmpge     32
      11: aload_0
      12: getfield      #6                  // Field buffer:[B
      15: aload_0
      16: dup
      17: getfield      #8                  // Field pos:I
      20: dup_x1
      21: iconst_1
      22: iadd
      23: putfield      #8                  // Field pos:I
      26: baload
      27: sipush        255
      30: iand
      31: ireturn
      32: iconst_m1
      33: ireturn

  public int read(byte[]) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #10                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #9                  // Field limit:I
       8: if_icmpge     55
      11: iload_3
      12: aload_0
      13: getfield      #9                  // Field limit:I
      16: aload_0
      17: getfield      #8                  // Field pos:I
      20: isub
      21: invokestatic  #11                 // Method java/lang/Math.min:(II)I
      24: istore_3
      25: iload_3
      26: ifle          53
      29: aload_0
      30: getfield      #6                  // Field buffer:[B
      33: aload_0
      34: getfield      #8                  // Field pos:I
      37: aload_1
      38: iload_2
      39: iload_3
      40: invokestatic  #12                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      43: aload_0
      44: dup
      45: getfield      #8                  // Field pos:I
      48: iload_3
      49: iadd
      50: putfield      #8                  // Field pos:I
      53: iload_3
      54: ireturn
      55: iconst_m1
      56: ireturn

  public long skip(long) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field pos:I
       4: aload_0
       5: getfield      #9                  // Field limit:I
       8: if_icmpge     46
      11: lload_1
      12: aload_0
      13: getfield      #9                  // Field limit:I
      16: aload_0
      17: getfield      #8                  // Field pos:I
      20: isub
      21: i2l
      22: invokestatic  #13                 // Method java/lang/Math.min:(JJ)J
      25: lstore_1
      26: lload_1
      27: lconst_0
      28: lcmp
      29: ifle          44
      32: aload_0
      33: dup
      34: getfield      #8                  // Field pos:I
      37: i2l
      38: lload_1
      39: ladd
      40: l2i
      41: putfield      #8                  // Field pos:I
      44: lload_1
      45: lreturn
      46: ldc2_w        #14                 // long -1l
      49: lreturn

  public int available();
    Code:
       0: aload_0
       1: getfield      #9                  // Field limit:I
       4: aload_0
       5: getfield      #8                  // Field pos:I
       8: isub
       9: ireturn

  public boolean markSupported();
    Code:
       0: iconst_1
       1: ireturn

  public void mark(int);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #8                  // Field pos:I
       5: putfield      #7                  // Field mark:I
       8: return

  public void reset();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #7                  // Field mark:I
       5: putfield      #8                  // Field pos:I
       8: return
}
