Compiled from "NioSelectedKeySet.java"
public class org.agrona.nio.NioSelectedKeySet extends java.util.AbstractSet<java.nio.channels.SelectionKey> {
  private static final int INITIAL_CAPACITY;

  private java.nio.channels.SelectionKey[] keys;

  private int size;

  public org.agrona.nio.NioSelectedKeySet();
    Code:
       0: aload_0
       1: bipush        16
       3: invokespecial #2                  // Method "<init>":(I)V
       6: return

  public org.agrona.nio.NioSelectedKeySet(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/util/AbstractSet."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #4                  // Field size:I
       9: aload_0
      10: iload_1
      11: invokestatic  #5                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      14: anewarray     #6                  // class java/nio/channels/SelectionKey
      17: putfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      20: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
       4: arraylength
       5: ireturn

  public boolean add(java.nio.channels.SelectionKey);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     7
       5: iconst_0
       6: ireturn
       7: aload_0
       8: aload_0
       9: getfield      #4                  // Field size:I
      12: iconst_1
      13: iadd
      14: invokespecial #8                  // Method ensureCapacity:(I)V
      17: aload_0
      18: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      21: aload_0
      22: dup
      23: getfield      #4                  // Field size:I
      26: dup_x1
      27: iconst_1
      28: iadd
      29: putfield      #4                  // Field size:I
      32: aload_1
      33: aastore
      34: iconst_1
      35: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public java.nio.channels.SelectionKey[] keys();
    Code:
       0: aload_0
       1: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
       4: areturn

  public void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field size:I
       5: return

  public int forEach(java.util.function.ToIntFunction<java.nio.channels.SelectionKey>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
       6: astore_3
       7: aload_0
       8: getfield      #4                  // Field size:I
      11: iconst_1
      12: isub
      13: istore        4
      15: iload         4
      17: iflt          39
      20: iload_2
      21: aload_1
      22: aload_3
      23: iload         4
      25: aaload
      26: invokeinterface #9,  2            // InterfaceMethod java/util/function/ToIntFunction.applyAsInt:(Ljava/lang/Object;)I
      31: iadd
      32: istore_2
      33: iinc          4, -1
      36: goto          15
      39: aload_0
      40: iconst_0
      41: putfield      #4                  // Field size:I
      44: iload_2
      45: ireturn

  public java.util.Iterator<java.nio.channels.SelectionKey> iterator();
    Code:
       0: new           #10                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #11                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  private void ensureCapacity(int);
    Code:
       0: iload_1
       1: ifge          41
       4: ldc           #12                 // String Insufficient capacity: length=%d required=%d
       6: iconst_2
       7: anewarray     #13                 // class java/lang/Object
      10: dup
      11: iconst_0
      12: aload_0
      13: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      16: arraylength
      17: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_1
      23: iload_1
      24: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      27: aastore
      28: invokestatic  #15                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      31: astore_2
      32: new           #16                 // class java/lang/IllegalStateException
      35: dup
      36: aload_2
      37: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: iload_1
      42: aload_0
      43: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      46: arraylength
      47: if_icmple     70
      50: iload_1
      51: invokestatic  #5                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      54: istore_2
      55: aload_0
      56: aload_0
      57: getfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      60: iload_2
      61: invokestatic  #18                 // Method java/util/Arrays.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;
      64: checkcast     #19                 // class "[Ljava/nio/channels/SelectionKey;"
      67: putfield      #7                  // Field keys:[Ljava/nio/channels/SelectionKey;
      70: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class java/nio/channels/SelectionKey
       5: invokevirtual #20                 // Method add:(Ljava/nio/channels/SelectionKey;)Z
       8: ireturn
}
