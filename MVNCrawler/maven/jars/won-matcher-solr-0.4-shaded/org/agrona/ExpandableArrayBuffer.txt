Compiled from "ExpandableArrayBuffer.java"
public class org.agrona.ExpandableArrayBuffer implements org.agrona.MutableDirectBuffer {
  public static final int MAX_ARRAY_LENGTH;

  public static final int INITIAL_CAPACITY;

  private byte[] byteArray;

  public org.agrona.ExpandableArrayBuffer();
    Code:
       0: aload_0
       1: sipush        128
       4: invokespecial #4                  // Method "<init>":(I)V
       7: return

  public org.agrona.ExpandableArrayBuffer(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       byte
       8: putfield      #6                  // Field byteArray:[B
      11: return

  public void wrap(byte[]);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(byte[], int, int);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(java.nio.ByteBuffer);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(java.nio.ByteBuffer, int, int);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(org.agrona.DirectBuffer);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(org.agrona.DirectBuffer, int, int);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void wrap(long, int);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #8                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public long addressOffset();
    Code:
       0: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
       3: lreturn

  public byte[] byteArray();
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: areturn

  public java.nio.ByteBuffer byteBuffer();
    Code:
       0: aconst_null
       1: areturn

  public void setMemory(int, int, byte);
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: iload_1
       5: iload_1
       6: iload_2
       7: iadd
       8: iload_3
       9: invokestatic  #10                 // Method java/util/Arrays.fill:([BIIB)V
      12: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: arraylength
       5: ireturn

  public boolean isExpandable();
    Code:
       0: iconst_1
       1: ireturn

  public void checkLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: return

  public long getLong(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #12                 // Method boundsCheck0:(II)V
       7: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_0
      11: getfield      #6                  // Field byteArray:[B
      14: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      17: iload_1
      18: i2l
      19: ladd
      20: invokevirtual #14                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      23: lstore_3
      24: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      27: aload_2
      28: if_acmpeq     36
      31: lload_3
      32: invokestatic  #16                 // Method java/lang/Long.reverseBytes:(J)J
      35: lstore_3
      36: lload_3
      37: lreturn

  public void putLong(int, long, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: lload_2
       8: lstore        5
      10: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      13: aload         4
      15: if_acmpeq     25
      18: lload         5
      20: invokestatic  #16                 // Method java/lang/Long.reverseBytes:(J)J
      23: lstore        5
      25: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      28: aload_0
      29: getfield      #6                  // Field byteArray:[B
      32: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      35: iload_1
      36: i2l
      37: ladd
      38: lload         5
      40: invokevirtual #17                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      43: return

  public long getLong(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #12                 // Method boundsCheck0:(II)V
       7: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_0
      11: getfield      #6                  // Field byteArray:[B
      14: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      17: iload_1
      18: i2l
      19: ladd
      20: invokevirtual #14                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      23: lreturn

  public void putLong(int, long);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_0
      11: getfield      #6                  // Field byteArray:[B
      14: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      17: iload_1
      18: i2l
      19: ladd
      20: lload_2
      21: invokevirtual #17                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      24: return

  public int getInt(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #18                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      22: istore_3
      23: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      26: aload_2
      27: if_acmpeq     35
      30: iload_3
      31: invokestatic  #19                 // Method java/lang/Integer.reverseBytes:(I)I
      34: istore_3
      35: iload_3
      36: ireturn

  public void putInt(int, int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: iload_2
       7: istore        4
       9: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      12: aload_3
      13: if_acmpeq     23
      16: iload         4
      18: invokestatic  #19                 // Method java/lang/Integer.reverseBytes:(I)I
      21: istore        4
      23: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      26: aload_0
      27: getfield      #6                  // Field byteArray:[B
      30: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      33: iload_1
      34: i2l
      35: ladd
      36: iload         4
      38: invokevirtual #20                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      41: return

  public int getInt(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #18                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      22: ireturn

  public void putInt(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: iload_2
      20: invokevirtual #20                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      23: return

  public double getDouble(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #12                 // Method boundsCheck0:(II)V
       7: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      10: aload_2
      11: if_acmpeq     39
      14: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      17: aload_0
      18: getfield      #6                  // Field byteArray:[B
      21: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      24: iload_1
      25: i2l
      26: ladd
      27: invokevirtual #14                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      30: lstore_3
      31: lload_3
      32: invokestatic  #16                 // Method java/lang/Long.reverseBytes:(J)J
      35: invokestatic  #21                 // Method java/lang/Double.longBitsToDouble:(J)D
      38: dreturn
      39: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      42: aload_0
      43: getfield      #6                  // Field byteArray:[B
      46: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      49: iload_1
      50: i2l
      51: ladd
      52: invokevirtual #22                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      55: dreturn

  public void putDouble(int, double, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      10: aload         4
      12: if_acmpeq     45
      15: dload_2
      16: invokestatic  #23                 // Method java/lang/Double.doubleToRawLongBits:(D)J
      19: invokestatic  #16                 // Method java/lang/Long.reverseBytes:(J)J
      22: lstore        5
      24: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      27: aload_0
      28: getfield      #6                  // Field byteArray:[B
      31: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      34: iload_1
      35: i2l
      36: ladd
      37: lload         5
      39: invokevirtual #17                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      42: goto          62
      45: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      48: aload_0
      49: getfield      #6                  // Field byteArray:[B
      52: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      55: iload_1
      56: i2l
      57: ladd
      58: dload_2
      59: invokevirtual #24                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      62: return

  public double getDouble(int);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #12                 // Method boundsCheck0:(II)V
       7: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_0
      11: getfield      #6                  // Field byteArray:[B
      14: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      17: iload_1
      18: i2l
      19: ladd
      20: invokevirtual #22                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      23: dreturn

  public void putDouble(int, double);
    Code:
       0: aload_0
       1: iload_1
       2: bipush        8
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      10: aload_0
      11: getfield      #6                  // Field byteArray:[B
      14: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      17: iload_1
      18: i2l
      19: ladd
      20: dload_2
      21: invokevirtual #24                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      24: return

  public float getFloat(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: aload_2
      10: if_acmpeq     38
      13: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #6                  // Field byteArray:[B
      20: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #18                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      29: istore_3
      30: iload_3
      31: invokestatic  #19                 // Method java/lang/Integer.reverseBytes:(I)I
      34: invokestatic  #25                 // Method java/lang/Float.intBitsToFloat:(I)F
      37: freturn
      38: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      41: aload_0
      42: getfield      #6                  // Field byteArray:[B
      45: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      48: iload_1
      49: i2l
      50: ladd
      51: invokevirtual #26                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      54: freturn

  public void putFloat(int, float, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
       9: aload_3
      10: if_acmpeq     43
      13: fload_2
      14: invokestatic  #27                 // Method java/lang/Float.floatToRawIntBits:(F)I
      17: invokestatic  #19                 // Method java/lang/Integer.reverseBytes:(I)I
      20: istore        4
      22: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      25: aload_0
      26: getfield      #6                  // Field byteArray:[B
      29: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      32: iload_1
      33: i2l
      34: ladd
      35: iload         4
      37: invokevirtual #20                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      40: goto          60
      43: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      46: aload_0
      47: getfield      #6                  // Field byteArray:[B
      50: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      53: iload_1
      54: i2l
      55: ladd
      56: fload_2
      57: invokevirtual #28                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      60: return

  public float getFloat(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #26                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      22: freturn

  public void putFloat(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_4
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: fload_2
      20: invokevirtual #28                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      23: return

  public short getShort(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #29                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      22: istore_3
      23: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      26: aload_2
      27: if_acmpeq     35
      30: iload_3
      31: invokestatic  #30                 // Method java/lang/Short.reverseBytes:(S)S
      34: istore_3
      35: iload_3
      36: ireturn

  public void putShort(int, short, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: iload_2
       7: istore        4
       9: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      12: aload_3
      13: if_acmpeq     23
      16: iload         4
      18: invokestatic  #30                 // Method java/lang/Short.reverseBytes:(S)S
      21: istore        4
      23: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      26: aload_0
      27: getfield      #6                  // Field byteArray:[B
      30: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      33: iload_1
      34: i2l
      35: ladd
      36: iload         4
      38: invokevirtual #31                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      41: return

  public short getShort(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #29                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      22: ireturn

  public void putShort(int, short);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: iload_2
      20: invokevirtual #31                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      23: return

  public byte getByte(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: iload_1
       5: baload
       6: ireturn

  public void putByte(int, byte);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_1
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: aload_0
       7: getfield      #6                  // Field byteArray:[B
      10: iload_1
      11: iload_2
      12: bastore
      13: return

  public void getBytes(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #32                 // Method getBytes:(I[BII)V
       9: return

  public void getBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: iload_1
       5: aload_2
       6: iload_3
       7: iload         4
       9: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      12: return

  public void getBytes(int, org.agrona.MutableDirectBuffer, int, int);
    Code:
       0: aload_2
       1: iload_3
       2: aload_0
       3: iload_1
       4: iload         4
       6: invokeinterface #34,  5           // InterfaceMethod org/agrona/MutableDirectBuffer.putBytes:(ILorg/agrona/DirectBuffer;II)V
      11: return

  public void getBytes(int, java.nio.ByteBuffer, int);
    Code:
       0: aload_2
       1: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: iload_1
       8: aload_2
       9: iload         4
      11: iload_3
      12: invokevirtual #36                 // Method getBytes:(ILjava/nio/ByteBuffer;II)V
      15: aload_2
      16: iload         4
      18: iload_3
      19: iadd
      20: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: return

  public void getBytes(int, java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: invokespecial #12                 // Method boundsCheck0:(II)V
       7: aload_2
       8: iload_3
       9: i2l
      10: iload         4
      12: invokestatic  #38                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      15: aload_2
      16: invokevirtual #39                 // Method java/nio/ByteBuffer.isDirect:()Z
      19: ifeq          34
      22: aconst_null
      23: astore        5
      25: aload_2
      26: invokestatic  #40                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      29: lstore        6
      31: goto          51
      34: aload_2
      35: invokestatic  #41                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
      38: astore        5
      40: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      43: aload_2
      44: invokestatic  #42                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
      47: i2l
      48: ladd
      49: lstore        6
      51: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      54: aload_0
      55: getfield      #6                  // Field byteArray:[B
      58: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      61: iload_1
      62: i2l
      63: ladd
      64: aload         5
      66: lload         6
      68: iload_3
      69: i2l
      70: ladd
      71: iload         4
      73: i2l
      74: invokevirtual #43                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      77: return

  public void putBytes(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #44                 // Method putBytes:(I[BII)V
       9: return

  public void putBytes(int, byte[], int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: aload_2
       8: iload_3
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: iload_1
      14: iload         4
      16: invokestatic  #33                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      19: return

  public void putBytes(int, java.nio.ByteBuffer, int);
    Code:
       0: aload_2
       1: invokevirtual #35                 // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: iload_1
       8: aload_2
       9: iload         4
      11: iload_3
      12: invokevirtual #45                 // Method putBytes:(ILjava/nio/ByteBuffer;II)V
      15: aload_2
      16: iload         4
      18: iload_3
      19: iadd
      20: invokevirtual #37                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: return

  public void putBytes(int, java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: aload_2
       8: iload_3
       9: i2l
      10: iload         4
      12: invokestatic  #38                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      15: aload_2
      16: invokevirtual #39                 // Method java/nio/ByteBuffer.isDirect:()Z
      19: ifeq          34
      22: aconst_null
      23: astore        5
      25: aload_2
      26: invokestatic  #40                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      29: lstore        6
      31: goto          51
      34: aload_2
      35: invokestatic  #41                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
      38: astore        5
      40: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      43: aload_2
      44: invokestatic  #42                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
      47: i2l
      48: ladd
      49: lstore        6
      51: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      54: aload         5
      56: lload         6
      58: iload_3
      59: i2l
      60: ladd
      61: aload_0
      62: getfield      #6                  // Field byteArray:[B
      65: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      68: iload_1
      69: i2l
      70: ladd
      71: iload         4
      73: i2l
      74: invokevirtual #43                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      77: return

  public void putBytes(int, org.agrona.DirectBuffer, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload         4
       4: invokespecial #11                 // Method ensureCapacity:(II)V
       7: aload_2
       8: iload_3
       9: iload         4
      11: invokeinterface #46,  3           // InterfaceMethod org/agrona/DirectBuffer.boundsCheck:(II)V
      16: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      19: aload_2
      20: invokeinterface #47,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
      25: aload_2
      26: invokeinterface #48,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
      31: iload_3
      32: i2l
      33: ladd
      34: aload_0
      35: getfield      #6                  // Field byteArray:[B
      38: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      41: iload_1
      42: i2l
      43: ladd
      44: iload         4
      46: i2l
      47: invokevirtual #43                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      50: return

  public char getChar(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #49                 // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      22: istore_3
      23: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      26: aload_2
      27: if_acmpeq     37
      30: iload_3
      31: i2s
      32: invokestatic  #30                 // Method java/lang/Short.reverseBytes:(S)S
      35: i2c
      36: istore_3
      37: iload_3
      38: ireturn

  public void putChar(int, char, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: iload_2
       7: istore        4
       9: getstatic     #15                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      12: aload_3
      13: if_acmpeq     25
      16: iload         4
      18: i2s
      19: invokestatic  #30                 // Method java/lang/Short.reverseBytes:(S)S
      22: i2c
      23: istore        4
      25: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      28: aload_0
      29: getfield      #6                  // Field byteArray:[B
      32: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      35: iload_1
      36: i2l
      37: ladd
      38: iload         4
      40: invokevirtual #50                 // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      43: return

  public char getChar(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: invokevirtual #49                 // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      22: ireturn

  public void putChar(int, char);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_2
       3: invokespecial #11                 // Method ensureCapacity:(II)V
       6: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
       9: aload_0
      10: getfield      #6                  // Field byteArray:[B
      13: getstatic     #9                  // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      16: iload_1
      17: i2l
      18: ladd
      19: iload_2
      20: invokevirtual #50                 // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      23: return

  public java.lang.String getStringUtf8(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #51                 // Method getInt:(I)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokevirtual #52                 // Method getStringUtf8:(II)Ljava/lang/String;
      12: areturn

  public java.lang.String getStringUtf8(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #53                 // Method getInt:(ILjava/nio/ByteOrder;)I
       6: istore_3
       7: aload_0
       8: iload_1
       9: iload_3
      10: invokevirtual #52                 // Method getStringUtf8:(II)Ljava/lang/String;
      13: areturn

  public java.lang.String getStringUtf8(int, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: iload_1
       6: iconst_4
       7: iadd
       8: aload_3
       9: invokevirtual #54                 // Method getBytes:(I[B)V
      12: new           #55                 // class java/lang/String
      15: dup
      16: aload_3
      17: getstatic     #56                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      20: invokespecial #57                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      23: areturn

  public int putStringUtf8(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: ldc           #58                 // int 2147483647
       5: invokevirtual #59                 // Method putStringUtf8:(ILjava/lang/String;I)I
       8: ireturn

  public int putStringUtf8(int, java.lang.String, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: ldc           #58                 // int 2147483647
       6: invokevirtual #60                 // Method putStringUtf8:(ILjava/lang/String;Ljava/nio/ByteOrder;I)I
       9: ireturn

  public int putStringUtf8(int, java.lang.String, int);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #56                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #61                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #62                 // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        4
      19: aload         4
      21: arraylength
      22: iload_3
      23: if_icmple     53
      26: new           #63                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #64                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #66                 // String Encoded string larger than maximum size:
      39: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_3
      43: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: iload_1
      55: aload         4
      57: arraylength
      58: invokevirtual #71                 // Method putInt:(II)V
      61: aload_0
      62: iload_1
      63: iconst_4
      64: iadd
      65: aload         4
      67: invokevirtual #72                 // Method putBytes:(I[B)V
      70: iconst_4
      71: aload         4
      73: arraylength
      74: iadd
      75: ireturn

  public int putStringUtf8(int, java.lang.String, java.nio.ByteOrder, int);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #56                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #61                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #62                 // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        5
      19: aload         5
      21: arraylength
      22: iload         4
      24: if_icmple     55
      27: new           #63                 // class java/lang/IllegalArgumentException
      30: dup
      31: new           #64                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #66                 // String Encoded string larger than maximum size:
      40: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload         4
      45: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: iload_1
      57: aload         5
      59: arraylength
      60: aload_3
      61: invokevirtual #73                 // Method putInt:(IILjava/nio/ByteOrder;)V
      64: aload_0
      65: iload_1
      66: iconst_4
      67: iadd
      68: aload         5
      70: invokevirtual #72                 // Method putBytes:(I[B)V
      73: iconst_4
      74: aload         5
      76: arraylength
      77: iadd
      78: ireturn

  public java.lang.String getStringWithoutLengthUtf8(int, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: iload_1
       6: aload_3
       7: invokevirtual #54                 // Method getBytes:(I[B)V
      10: new           #55                 // class java/lang/String
      13: dup
      14: aload_3
      15: getstatic     #56                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokespecial #57                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      21: areturn

  public int putStringWithoutLengthUtf8(int, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #56                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #61                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #62                 // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore_3
      18: aload_0
      19: iload_1
      20: aload_3
      21: invokevirtual #72                 // Method putBytes:(I[B)V
      24: aload_3
      25: arraylength
      26: ireturn

  private void ensureCapacity(int, int);
    Code:
       0: iload_1
       1: ifge          31
       4: new           #74                 // class java/lang/IndexOutOfBoundsException
       7: dup
       8: new           #64                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #65                 // Method java/lang/StringBuilder."<init>":()V
      15: ldc           #75                 // String index cannot be negative: index=
      17: invokevirtual #67                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: iload_1
      21: invokevirtual #68                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: iload_1
      32: i2l
      33: iload_2
      34: i2l
      35: ladd
      36: lstore_3
      37: aload_0
      38: getfield      #6                  // Field byteArray:[B
      41: arraylength
      42: istore        5
      44: lload_3
      45: iload         5
      47: i2l
      48: lcmp
      49: ifle          117
      52: iload         5
      54: ldc           #77                 // int 2147483639
      56: if_icmplt     98
      59: new           #74                 // class java/lang/IndexOutOfBoundsException
      62: dup
      63: ldc           #78                 // String index=%d, length=%d, maxCapacity=%d
      65: iconst_3
      66: anewarray     #79                 // class java/lang/Object
      69: dup
      70: iconst_0
      71: iload_1
      72: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      75: aastore
      76: dup
      77: iconst_1
      78: iload_2
      79: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      82: aastore
      83: dup
      84: iconst_2
      85: ldc           #77                 // int 2147483639
      87: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      90: aastore
      91: invokestatic  #81                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      94: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: aload_0
     100: getfield      #6                  // Field byteArray:[B
     103: aload_0
     104: iload         5
     106: lload_3
     107: l2i
     108: invokespecial #82                 // Method calculateExpansion:(II)I
     111: invokestatic  #83                 // Method java/util/Arrays.copyOf:([BI)[B
     114: putfield      #6                  // Field byteArray:[B
     117: return

  private int calculateExpansion(int, int);
    Code:
       0: iload_1
       1: i2l
       2: lstore_3
       3: lload_3
       4: iload_2
       5: i2l
       6: lcmp
       7: ifge          31
      10: lload_3
      11: ldc2_w        #84                 // long 2l
      14: lmul
      15: lstore_3
      16: lload_3
      17: ldc2_w        #86                 // long 2147483647l
      20: lcmp
      21: ifle          3
      24: ldc2_w        #88                 // long 2147483639l
      27: lstore_3
      28: goto          3
      31: lload_3
      32: l2i
      33: ireturn

  private void boundsCheck0(int, int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: arraylength
       5: istore_3
       6: iload_1
       7: i2l
       8: iload_2
       9: i2l
      10: ladd
      11: lstore        4
      13: iload_1
      14: iflt          25
      17: lload         4
      19: iload_3
      20: i2l
      21: lcmp
      22: ifle          63
      25: new           #74                 // class java/lang/IndexOutOfBoundsException
      28: dup
      29: ldc           #90                 // String index=%d, length=%d, capacity=%d
      31: iconst_3
      32: anewarray     #79                 // class java/lang/Object
      35: dup
      36: iconst_0
      37: iload_1
      38: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      41: aastore
      42: dup
      43: iconst_1
      44: iload_2
      45: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      48: aastore
      49: dup
      50: iconst_2
      51: iload_3
      52: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      55: aastore
      56: invokestatic  #81                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      59: invokespecial #76                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: return

  public void boundsCheck(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #12                 // Method boundsCheck0:(II)V
       6: return

  public int wrapAdjustment();
    Code:
       0: iconst_0
       1: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #91                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #3                  // class org/agrona/ExpandableArrayBuffer
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field byteArray:[B
      33: aload_2
      34: getfield      #6                  // Field byteArray:[B
      37: invokestatic  #92                 // Method java/util/Arrays.equals:([B[B)Z
      40: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field byteArray:[B
       4: invokestatic  #93                 // Method java/util/Arrays.hashCode:([B)I
       7: ireturn

  public int compareTo(org.agrona.DirectBuffer);
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method capacity:()I
       4: istore_2
       5: aload_1
       6: invokeinterface #95,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
      11: istore_3
      12: aload_0
      13: getfield      #6                  // Field byteArray:[B
      16: astore        4
      18: aload_1
      19: invokeinterface #47,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
      24: astore        5
      26: aload_0
      27: invokevirtual #96                 // Method addressOffset:()J
      30: lstore        6
      32: aload_1
      33: invokeinterface #48,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
      38: lstore        8
      40: iconst_0
      41: istore        10
      43: iload_2
      44: iload_3
      45: invokestatic  #97                 // Method java/lang/Math.min:(II)I
      48: istore        11
      50: iload         10
      52: iload         11
      54: if_icmpge     105
      57: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      60: aload         4
      62: lload         6
      64: iload         10
      66: i2l
      67: ladd
      68: invokevirtual #98                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      71: getstatic     #13                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      74: aload         5
      76: lload         8
      78: iload         10
      80: i2l
      81: ladd
      82: invokevirtual #98                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      85: invokestatic  #99                 // Method java/lang/Byte.compare:(BB)I
      88: istore        12
      90: iconst_0
      91: iload         12
      93: if_icmpeq     99
      96: iload         12
      98: ireturn
      99: iinc          10, 1
     102: goto          50
     105: iload_2
     106: iload_3
     107: if_icmpeq     114
     110: iload_2
     111: iload_3
     112: isub
     113: ireturn
     114: iconst_0
     115: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #100                // class org/agrona/DirectBuffer
       5: invokevirtual #101                // Method compareTo:(Lorg/agrona/DirectBuffer;)I
       8: ireturn
}
