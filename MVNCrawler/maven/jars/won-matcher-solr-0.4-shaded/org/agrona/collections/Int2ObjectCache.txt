Compiled from "Int2ObjectCache.java"
public class org.agrona.collections.Int2ObjectCache<V> implements java.util.Map<java.lang.Integer, V> {
  private long cachePuts;

  private long cacheHits;

  private long cacheMisses;

  private int size;

  private final int capacity;

  private final int setSize;

  private final int mask;

  private final int[] keys;

  private final java.lang.Object[] values;

  private final java.util.function.Consumer<V> evictionConsumer;

  private final org.agrona.collections.Int2ObjectCache<V>.ValueCollection<V> valueCollection;

  private final org.agrona.collections.Int2ObjectCache<V>.KeySet keySet;

  private final org.agrona.collections.Int2ObjectCache<V>.EntrySet<V> entrySet;

  public org.agrona.collections.Int2ObjectCache(int, int, java.util.function.Consumer<V>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #5                  // Field cachePuts:J
       9: aload_0
      10: lconst_0
      11: putfield      #6                  // Field cacheHits:J
      14: aload_0
      15: lconst_0
      16: putfield      #7                  // Field cacheMisses:J
      19: iload_1
      20: invokestatic  #8                  // Method org/agrona/collections/CollectionUtil.validatePositivePowerOfTwo:(I)V
      23: aload_3
      24: ldc           #9                  // String Null values are not permitted
      26: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      29: pop
      30: iload_1
      31: i2l
      32: iload_2
      33: i2l
      34: lmul
      35: ldc2_w        #12                 // long 2147483647l
      38: lcmp
      39: ifle          73
      42: new           #14                 // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #15                 // String Total capacity must be <= Integer.MAX_VALUE: numSets=%d setSize=%d
      48: iconst_2
      49: anewarray     #16                 // class java/lang/Object
      52: dup
      53: iconst_0
      54: iload_1
      55: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      58: aastore
      59: dup
      60: iconst_1
      61: iload_2
      62: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      65: aastore
      66: invokestatic  #18                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      69: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      72: athrow
      73: aload_0
      74: iload_2
      75: putfield      #20                 // Field setSize:I
      78: aload_0
      79: iload_1
      80: iload_2
      81: imul
      82: putfield      #3                  // Field capacity:I
      85: aload_0
      86: iload_1
      87: iconst_1
      88: isub
      89: putfield      #21                 // Field mask:I
      92: aload_0
      93: aload_0
      94: getfield      #3                  // Field capacity:I
      97: newarray       int
      99: putfield      #1                  // Field keys:[I
     102: aload_0
     103: aload_0
     104: getfield      #3                  // Field capacity:I
     107: anewarray     #16                 // class java/lang/Object
     110: putfield      #2                  // Field values:[Ljava/lang/Object;
     113: aload_0
     114: aload_3
     115: putfield      #22                 // Field evictionConsumer:Ljava/util/function/Consumer;
     118: aload_0
     119: new           #23                 // class org/agrona/collections/Int2ObjectCache$ValueCollection
     122: dup
     123: aload_0
     124: aconst_null
     125: invokespecial #24                 // Method org/agrona/collections/Int2ObjectCache$ValueCollection."<init>":(Lorg/agrona/collections/Int2ObjectCache;Lorg/agrona/collections/Int2ObjectCache$1;)V
     128: putfield      #25                 // Field valueCollection:Lorg/agrona/collections/Int2ObjectCache$ValueCollection;
     131: aload_0
     132: new           #26                 // class org/agrona/collections/Int2ObjectCache$KeySet
     135: dup
     136: aload_0
     137: invokespecial #27                 // Method org/agrona/collections/Int2ObjectCache$KeySet."<init>":(Lorg/agrona/collections/Int2ObjectCache;)V
     140: putfield      #28                 // Field keySet:Lorg/agrona/collections/Int2ObjectCache$KeySet;
     143: aload_0
     144: new           #29                 // class org/agrona/collections/Int2ObjectCache$EntrySet
     147: dup
     148: aload_0
     149: aconst_null
     150: invokespecial #30                 // Method org/agrona/collections/Int2ObjectCache$EntrySet."<init>":(Lorg/agrona/collections/Int2ObjectCache;Lorg/agrona/collections/Int2ObjectCache$1;)V
     153: putfield      #31                 // Field entrySet:Lorg/agrona/collections/Int2ObjectCache$EntrySet;
     156: return

  public long cacheHits();
    Code:
       0: aload_0
       1: getfield      #6                  // Field cacheHits:J
       4: lreturn

  public long cacheMisses();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cacheMisses:J
       4: lreturn

  public long cachePuts();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cachePuts:J
       4: lreturn

  public void resetCounters();
    Code:
       0: aload_0
       1: lconst_0
       2: putfield      #6                  // Field cacheHits:J
       5: aload_0
       6: lconst_0
       7: putfield      #7                  // Field cacheMisses:J
      10: aload_0
      11: lconst_0
      12: putfield      #5                  // Field cachePuts:J
      15: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #32                 // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #32                 // Field size:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/lang/Integer
       5: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #34                 // Method containsKey:(I)Z
      11: ireturn

  public boolean containsKey(int);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_1
       3: aload_0
       4: getfield      #21                 // Field mask:I
       7: invokestatic  #35                 // Method org/agrona/collections/Hashing.hash:(II)I
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #20                 // Field setSize:I
      16: imul
      17: istore        4
      19: iload         4
      21: istore        5
      23: iload         4
      25: aload_0
      26: getfield      #20                 // Field setSize:I
      29: iadd
      30: istore        6
      32: iload         5
      34: iload         6
      36: if_icmpge     75
      39: aconst_null
      40: aload_0
      41: getfield      #2                  // Field values:[Ljava/lang/Object;
      44: iload         5
      46: aaload
      47: if_acmpne     53
      50: goto          75
      53: iload_1
      54: aload_0
      55: getfield      #1                  // Field keys:[I
      58: iload         5
      60: iaload
      61: if_icmpne     69
      64: iconst_1
      65: istore_2
      66: goto          75
      69: iinc          5, 1
      72: goto          32
      75: iload_2
      76: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: aload_1
       4: if_acmpeq     52
       7: aload_0
       8: getfield      #2                  // Field values:[Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     52
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_1
      33: aload         6
      35: invokevirtual #36                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          46
      41: iconst_1
      42: istore_2
      43: goto          52
      46: iinc          5, 1
      49: goto          19
      52: iload_2
      53: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/lang/Integer
       5: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #37                 // Method get:(I)Ljava/lang/Object;
      11: areturn

  public V get(int);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: aload_0
       4: getfield      #21                 // Field mask:I
       7: invokestatic  #35                 // Method org/agrona/collections/Hashing.hash:(II)I
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #20                 // Field setSize:I
      16: imul
      17: istore        4
      19: iload         4
      21: istore        5
      23: iload         4
      25: aload_0
      26: getfield      #20                 // Field setSize:I
      29: iadd
      30: istore        6
      32: iload         5
      34: iload         6
      36: if_icmpge     81
      39: aconst_null
      40: aload_0
      41: getfield      #2                  // Field values:[Ljava/lang/Object;
      44: iload         5
      46: aaload
      47: if_acmpne     53
      50: goto          81
      53: iload_1
      54: aload_0
      55: getfield      #1                  // Field keys:[I
      58: iload         5
      60: iaload
      61: if_icmpne     75
      64: aload_0
      65: getfield      #2                  // Field values:[Ljava/lang/Object;
      68: iload         5
      70: aaload
      71: astore_2
      72: goto          81
      75: iinc          5, 1
      78: goto          32
      81: aconst_null
      82: aload_2
      83: if_acmpne     99
      86: aload_0
      87: dup
      88: getfield      #7                  // Field cacheMisses:J
      91: lconst_1
      92: ladd
      93: putfield      #7                  // Field cacheMisses:J
      96: goto          109
      99: aload_0
     100: dup
     101: getfield      #6                  // Field cacheHits:J
     104: lconst_1
     105: ladd
     106: putfield      #6                  // Field cacheHits:J
     109: aload_2
     110: areturn

  public V computeIfAbsent(int, java.util.function.IntFunction<? extends V>);
    Code:
       0: aload_2
       1: ldc           #38                 // String mappingFunction cannot be null
       3: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: iload_1
       9: invokevirtual #37                 // Method get:(I)Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: ifnonnull     36
      17: aload_2
      18: iload_1
      19: invokeinterface #39,  2           // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: ifnull        36
      29: aload_0
      30: iload_1
      31: aload_3
      32: invokevirtual #40                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_3
      37: areturn

  public V put(java.lang.Integer, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
       5: aload_2
       6: invokevirtual #40                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public V put(int, V);
    Code:
       0: aload_2
       1: ldc           #41                 // String null values are not supported
       3: invokestatic  #10                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aconst_null
       8: astore_3
       9: iload_1
      10: aload_0
      11: getfield      #21                 // Field mask:I
      14: invokestatic  #35                 // Method org/agrona/collections/Hashing.hash:(II)I
      17: istore        4
      19: iload         4
      21: aload_0
      22: getfield      #20                 // Field setSize:I
      25: imul
      26: istore        5
      28: iload         5
      30: istore        6
      32: iload         5
      34: aload_0
      35: getfield      #20                 // Field setSize:I
      38: iadd
      39: istore        7
      41: iload         6
      43: iload         7
      45: if_icmpge     100
      48: aconst_null
      49: aload_0
      50: getfield      #2                  // Field values:[Ljava/lang/Object;
      53: iload         6
      55: aaload
      56: if_acmpne     62
      59: goto          100
      62: iload_1
      63: aload_0
      64: getfield      #1                  // Field keys:[I
      67: iload         6
      69: iaload
      70: if_icmpne     94
      73: aload_0
      74: getfield      #2                  // Field values:[Ljava/lang/Object;
      77: iload         6
      79: aaload
      80: astore_3
      81: aload_0
      82: iload         6
      84: iload         7
      86: iconst_1
      87: isub
      88: invokespecial #42                 // Method shuffleUp:(II)V
      91: goto          100
      94: iinc          6, 1
      97: goto          41
     100: aconst_null
     101: aload_3
     102: if_acmpne     120
     105: aload_0
     106: getfield      #2                  // Field values:[Ljava/lang/Object;
     109: iload         5
     111: aload_0
     112: getfield      #20                 // Field setSize:I
     115: iconst_1
     116: isub
     117: iadd
     118: aaload
     119: astore_3
     120: aload_0
     121: iload         5
     123: invokespecial #43                 // Method shuffleDown:(I)V
     126: aload_0
     127: getfield      #1                  // Field keys:[I
     130: iload         5
     132: iload_1
     133: iastore
     134: aload_0
     135: getfield      #2                  // Field values:[Ljava/lang/Object;
     138: iload         5
     140: aload_2
     141: aastore
     142: aload_0
     143: dup
     144: getfield      #5                  // Field cachePuts:J
     147: lconst_1
     148: ladd
     149: putfield      #5                  // Field cachePuts:J
     152: aconst_null
     153: aload_3
     154: if_acmpeq     170
     157: aload_0
     158: getfield      #22                 // Field evictionConsumer:Ljava/util/function/Consumer;
     161: aload_3
     162: invokeinterface #44,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     167: goto          180
     170: aload_0
     171: dup
     172: getfield      #32                 // Field size:I
     175: iconst_1
     176: iadd
     177: putfield      #32                 // Field size:I
     180: aconst_null
     181: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/lang/Integer
       5: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #45                 // Method remove:(I)Ljava/lang/Object;
      11: areturn

  public V remove(int);
    Code:
       0: aconst_null
       1: astore_2
       2: iload_1
       3: aload_0
       4: getfield      #21                 // Field mask:I
       7: invokestatic  #35                 // Method org/agrona/collections/Hashing.hash:(II)I
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #20                 // Field setSize:I
      16: imul
      17: istore        4
      19: iload         4
      21: istore        5
      23: iload         4
      25: aload_0
      26: getfield      #20                 // Field setSize:I
      29: iadd
      30: istore        6
      32: iload         5
      34: iload         6
      36: if_icmpge     111
      39: aconst_null
      40: aload_0
      41: getfield      #2                  // Field values:[Ljava/lang/Object;
      44: iload         5
      46: aaload
      47: if_acmpne     53
      50: goto          111
      53: iload_1
      54: aload_0
      55: getfield      #1                  // Field keys:[I
      58: iload         5
      60: iaload
      61: if_icmpne     105
      64: aload_0
      65: getfield      #2                  // Field values:[Ljava/lang/Object;
      68: iload         5
      70: aaload
      71: astore_2
      72: aload_0
      73: iload         5
      75: iload         6
      77: iconst_1
      78: isub
      79: invokespecial #42                 // Method shuffleUp:(II)V
      82: aload_0
      83: dup
      84: getfield      #32                 // Field size:I
      87: iconst_1
      88: isub
      89: putfield      #32                 // Field size:I
      92: aload_0
      93: getfield      #22                 // Field evictionConsumer:Ljava/util/function/Consumer;
      96: aload_2
      97: invokeinterface #44,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     102: goto          111
     105: iinc          5, 1
     108: goto          32
     111: aload_2
     112: areturn

  private void shuffleUp(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:[Ljava/lang/Object;
       4: iload_2
       5: aconst_null
       6: aastore
       7: iload_1
       8: istore_3
       9: iload_3
      10: iload_2
      11: if_icmpge     48
      14: aload_0
      15: getfield      #2                  // Field values:[Ljava/lang/Object;
      18: iload_3
      19: aload_0
      20: getfield      #2                  // Field values:[Ljava/lang/Object;
      23: iload_3
      24: iconst_1
      25: iadd
      26: aaload
      27: aastore
      28: aload_0
      29: getfield      #1                  // Field keys:[I
      32: iload_3
      33: aload_0
      34: getfield      #1                  // Field keys:[I
      37: iload_3
      38: iconst_1
      39: iadd
      40: iaload
      41: iastore
      42: iinc          3, 1
      45: goto          9
      48: return

  private void shuffleDown(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #20                 // Field setSize:I
       5: iconst_1
       6: isub
       7: iadd
       8: istore_2
       9: iload_2
      10: iload_1
      11: if_icmple     48
      14: aload_0
      15: getfield      #2                  // Field values:[Ljava/lang/Object;
      18: iload_2
      19: aload_0
      20: getfield      #2                  // Field values:[Ljava/lang/Object;
      23: iload_2
      24: iconst_1
      25: isub
      26: aaload
      27: aastore
      28: aload_0
      29: getfield      #1                  // Field keys:[I
      32: iload_2
      33: aload_0
      34: getfield      #1                  // Field keys:[I
      37: iload_2
      38: iconst_1
      39: isub
      40: iaload
      41: iastore
      42: iinc          2, -1
      45: goto          9
      48: aload_0
      49: getfield      #2                  // Field values:[Ljava/lang/Object;
      52: iload_1
      53: aconst_null
      54: aastore
      55: return

  public void clear();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #2                  // Field values:[Ljava/lang/Object;
       6: arraylength
       7: istore_2
       8: iload_1
       9: iload_2
      10: if_icmpge     58
      13: aload_0
      14: getfield      #2                  // Field values:[Ljava/lang/Object;
      17: iload_1
      18: aaload
      19: astore_3
      20: aconst_null
      21: aload_3
      22: if_acmpeq     52
      25: aload_0
      26: getfield      #2                  // Field values:[Ljava/lang/Object;
      29: iload_1
      30: aconst_null
      31: aastore
      32: aload_0
      33: dup
      34: getfield      #32                 // Field size:I
      37: iconst_1
      38: isub
      39: putfield      #32                 // Field size:I
      42: aload_0
      43: getfield      #22                 // Field evictionConsumer:Ljava/util/function/Consumer;
      46: aload_3
      47: invokeinterface #44,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      52: iinc          1, 1
      55: goto          8
      58: return

  public void putAll(java.util.Map<? extends java.lang.Integer, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #46,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #47,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #50                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #11                 // class java/lang/Integer
      41: aload_3
      42: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokevirtual #53                 // Method put:(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          12
      54: return

  public org.agrona.collections.Int2ObjectCache<V>.KeySet keySet();
    Code:
       0: aload_0
       1: getfield      #28                 // Field keySet:Lorg/agrona/collections/Int2ObjectCache$KeySet;
       4: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #25                 // Field valueCollection:Lorg/agrona/collections/Int2ObjectCache$ValueCollection;
       4: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.Integer, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #31                 // Field entrySet:Lorg/agrona/collections/Int2ObjectCache$EntrySet;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #54                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #57                 // Method entrySet:()Ljava/util/Set;
      19: invokeinterface #47,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          89
      34: aload_2
      35: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #50                 // class java/util/Map$Entry
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokeinterface #51,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #11                 // class java/lang/Integer
      54: invokevirtual #33                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #58                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: bipush        61
      64: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: aload_3
      70: invokeinterface #52,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: pop
      79: aload_1
      80: ldc           #60                 // String ,
      82: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: goto          25
      89: aload_1
      90: invokevirtual #62                 // Method java/lang/StringBuilder.length:()I
      93: iconst_1
      94: if_icmple     107
      97: aload_1
      98: aload_1
      99: invokevirtual #62                 // Method java/lang/StringBuilder.length:()I
     102: iconst_2
     103: isub
     104: invokevirtual #63                 // Method java/lang/StringBuilder.setLength:(I)V
     107: aload_1
     108: bipush        125
     110: invokevirtual #56                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: aload_1
     115: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method keySet:()Lorg/agrona/collections/Int2ObjectCache$KeySet;
       4: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #11                 // class java/lang/Integer
       5: aload_2
       6: invokevirtual #53                 // Method put:(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  static int access$200(org.agrona.collections.Int2ObjectCache);
    Code:
       0: aload_0
       1: getfield      #3                  // Field capacity:I
       4: ireturn

  static java.lang.Object[] access$300(org.agrona.collections.Int2ObjectCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field values:[Ljava/lang/Object;
       4: areturn

  static int[] access$400(org.agrona.collections.Int2ObjectCache);
    Code:
       0: aload_0
       1: getfield      #1                  // Field keys:[I
       4: areturn
}
