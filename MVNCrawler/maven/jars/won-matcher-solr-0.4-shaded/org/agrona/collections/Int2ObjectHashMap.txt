Compiled from "Int2ObjectHashMap.java"
public class org.agrona.collections.Int2ObjectHashMap<V> implements java.util.Map<java.lang.Integer, V> {
  private final float loadFactor;

  private int resizeThreshold;

  private int size;

  private int[] keys;

  private java.lang.Object[] values;

  private final org.agrona.collections.Int2ObjectHashMap<V>.ValueCollection<V> valueCollection;

  private final org.agrona.collections.Int2ObjectHashMap<V>.KeySet keySet;

  private final org.agrona.collections.Int2ObjectHashMap<V>.EntrySet<V> entrySet;

  public org.agrona.collections.Int2ObjectHashMap();
    Code:
       0: aload_0
       1: bipush        8
       3: ldc           #5                  // float 0.67f
       5: invokespecial #6                  // Method "<init>":(IF)V
       8: return

  public org.agrona.collections.Int2ObjectHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: fload_2
       5: invokestatic  #8                  // Method org/agrona/collections/CollectionUtil.validateLoadFactor:(F)V
       8: aload_0
       9: fload_2
      10: putfield      #9                  // Field loadFactor:F
      13: iload_1
      14: invokestatic  #10                 // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      17: istore_3
      18: aload_0
      19: iload_3
      20: i2f
      21: fload_2
      22: fmul
      23: f2i
      24: putfield      #11                 // Field resizeThreshold:I
      27: aload_0
      28: iload_3
      29: newarray       int
      31: putfield      #2                  // Field keys:[I
      34: aload_0
      35: iload_3
      36: anewarray     #12                 // class java/lang/Object
      39: putfield      #1                  // Field values:[Ljava/lang/Object;
      42: aload_0
      43: new           #13                 // class org/agrona/collections/Int2ObjectHashMap$ValueCollection
      46: dup
      47: aload_0
      48: aconst_null
      49: invokespecial #14                 // Method org/agrona/collections/Int2ObjectHashMap$ValueCollection."<init>":(Lorg/agrona/collections/Int2ObjectHashMap;Lorg/agrona/collections/Int2ObjectHashMap$1;)V
      52: putfield      #15                 // Field valueCollection:Lorg/agrona/collections/Int2ObjectHashMap$ValueCollection;
      55: aload_0
      56: new           #16                 // class org/agrona/collections/Int2ObjectHashMap$KeySet
      59: dup
      60: aload_0
      61: invokespecial #17                 // Method org/agrona/collections/Int2ObjectHashMap$KeySet."<init>":(Lorg/agrona/collections/Int2ObjectHashMap;)V
      64: putfield      #18                 // Field keySet:Lorg/agrona/collections/Int2ObjectHashMap$KeySet;
      67: aload_0
      68: new           #19                 // class org/agrona/collections/Int2ObjectHashMap$EntrySet
      71: dup
      72: aload_0
      73: aconst_null
      74: invokespecial #20                 // Method org/agrona/collections/Int2ObjectHashMap$EntrySet."<init>":(Lorg/agrona/collections/Int2ObjectHashMap;Lorg/agrona/collections/Int2ObjectHashMap$1;)V
      77: putfield      #21                 // Field entrySet:Lorg/agrona/collections/Int2ObjectHashMap$EntrySet;
      80: return

  public float loadFactor();
    Code:
       0: aload_0
       1: getfield      #9                  // Field loadFactor:F
       4: freturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: ireturn

  public int resizeThreshold();
    Code:
       0: aload_0
       1: getfield      #11                 // Field resizeThreshold:I
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #4                  // Field size:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Integer
       5: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #24                 // Method containsKey:(I)Z
      11: ireturn

  public boolean containsKey(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_2
       8: iload_1
       9: iload_2
      10: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      13: istore_3
      14: iconst_0
      15: istore        4
      17: aconst_null
      18: aload_0
      19: getfield      #1                  // Field values:[Ljava/lang/Object;
      22: iload_3
      23: aaload
      24: if_acmpeq     53
      27: iload_1
      28: aload_0
      29: getfield      #2                  // Field keys:[I
      32: iload_3
      33: iaload
      34: if_icmpne     43
      37: iconst_1
      38: istore        4
      40: goto          53
      43: iinc          3, 1
      46: iload_3
      47: iload_2
      48: iand
      49: istore_3
      50: goto          17
      53: iload         4
      55: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aconst_null
       3: aload_1
       4: if_acmpeq     52
       7: aload_0
       8: getfield      #1                  // Field values:[Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: arraylength
      14: istore        4
      16: iconst_0
      17: istore        5
      19: iload         5
      21: iload         4
      23: if_icmpge     52
      26: aload_3
      27: iload         5
      29: aaload
      30: astore        6
      32: aload_1
      33: aload         6
      35: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      38: ifeq          46
      41: iconst_1
      42: istore_2
      43: goto          52
      46: iinc          5, 1
      49: goto          19
      52: iload_2
      53: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Integer
       5: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #27                 // Method get:(I)Ljava/lang/Object;
      11: areturn

  public V get(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_2
       8: iload_1
       9: iload_2
      10: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      13: istore_3
      14: aconst_null
      15: aload_0
      16: getfield      #1                  // Field values:[Ljava/lang/Object;
      19: iload_3
      20: aaload
      21: dup
      22: astore        4
      24: if_acmpeq     50
      27: iload_1
      28: aload_0
      29: getfield      #2                  // Field keys:[I
      32: iload_3
      33: iaload
      34: if_icmpne     40
      37: goto          50
      40: iinc          3, 1
      43: iload_3
      44: iload_2
      45: iand
      46: istore_3
      47: goto          14
      50: aload         4
      52: areturn

  public V computeIfAbsent(int, java.util.function.IntFunction<? extends V>);
    Code:
       0: aload_2
       1: ldc           #28                 // String mappingFunction cannot be null
       3: invokestatic  #29                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: iload_1
       9: invokevirtual #27                 // Method get:(I)Ljava/lang/Object;
      12: astore_3
      13: aload_3
      14: ifnonnull     36
      17: aload_2
      18: iload_1
      19: invokeinterface #30,  2           // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: ifnull        36
      29: aload_0
      30: iload_1
      31: aload_3
      32: invokevirtual #31                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: aload_3
      37: areturn

  public V put(java.lang.Integer, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
       5: aload_2
       6: invokevirtual #31                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public V put(int, V);
    Code:
       0: aload_2
       1: ldc           #32                 // String Value cannot be null
       3: invokestatic  #29                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aconst_null
       8: astore_3
       9: aload_0
      10: getfield      #1                  // Field values:[Ljava/lang/Object;
      13: arraylength
      14: iconst_1
      15: isub
      16: istore        4
      18: iload_1
      19: iload         4
      21: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      24: istore        5
      26: aconst_null
      27: aload_0
      28: getfield      #1                  // Field values:[Ljava/lang/Object;
      31: iload         5
      33: aaload
      34: if_acmpeq     72
      37: iload_1
      38: aload_0
      39: getfield      #2                  // Field keys:[I
      42: iload         5
      44: iaload
      45: if_icmpne     59
      48: aload_0
      49: getfield      #1                  // Field values:[Ljava/lang/Object;
      52: iload         5
      54: aaload
      55: astore_3
      56: goto          72
      59: iinc          5, 1
      62: iload         5
      64: iload         4
      66: iand
      67: istore        5
      69: goto          26
      72: aconst_null
      73: aload_3
      74: if_acmpne     95
      77: aload_0
      78: dup
      79: getfield      #4                  // Field size:I
      82: iconst_1
      83: iadd
      84: putfield      #4                  // Field size:I
      87: aload_0
      88: getfield      #2                  // Field keys:[I
      91: iload         5
      93: iload_1
      94: iastore
      95: aload_0
      96: getfield      #1                  // Field values:[Ljava/lang/Object;
      99: iload         5
     101: aload_2
     102: aastore
     103: aload_0
     104: getfield      #4                  // Field size:I
     107: aload_0
     108: getfield      #11                 // Field resizeThreshold:I
     111: if_icmple     118
     114: aload_0
     115: invokespecial #33                 // Method increaseCapacity:()V
     118: aload_3
     119: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Integer
       5: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #34                 // Method remove:(I)Ljava/lang/Object;
      11: areturn

  public V remove(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_2
       8: iload_1
       9: iload_2
      10: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      13: istore_3
      14: aconst_null
      15: aload_0
      16: getfield      #1                  // Field values:[Ljava/lang/Object;
      19: iload_3
      20: aaload
      21: dup
      22: astore        4
      24: if_acmpeq     72
      27: iload_1
      28: aload_0
      29: getfield      #2                  // Field keys:[I
      32: iload_3
      33: iaload
      34: if_icmpne     62
      37: aload_0
      38: getfield      #1                  // Field values:[Ljava/lang/Object;
      41: iload_3
      42: aconst_null
      43: aastore
      44: aload_0
      45: dup
      46: getfield      #4                  // Field size:I
      49: iconst_1
      50: isub
      51: putfield      #4                  // Field size:I
      54: aload_0
      55: iload_3
      56: invokespecial #3                  // Method compactChain:(I)V
      59: goto          72
      62: iinc          3, 1
      65: iload_3
      66: iload_2
      67: iand
      68: istore_3
      69: goto          14
      72: aload         4
      74: areturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field size:I
       5: aload_0
       6: getfield      #1                  // Field values:[Ljava/lang/Object;
       9: aconst_null
      10: invokestatic  #35                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  public void compact();
    Code:
       0: aload_0
       1: invokevirtual #36                 // Method size:()I
       4: i2d
       5: dconst_1
       6: aload_0
       7: getfield      #9                  // Field loadFactor:F
      10: f2d
      11: ddiv
      12: dmul
      13: invokestatic  #37                 // Method java/lang/Math.round:(D)J
      16: l2i
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokestatic  #10                 // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      23: invokespecial #38                 // Method rehash:(I)V
      26: return

  public void putAll(java.util.Map<? extends java.lang.Integer, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          54
      21: aload_2
      22: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #43                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #22                 // class java/lang/Integer
      41: aload_3
      42: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: invokevirtual #46                 // Method put:(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: goto          12
      54: return

  public org.agrona.collections.Int2ObjectHashMap<V>.KeySet keySet();
    Code:
       0: aload_0
       1: getfield      #18                 // Field keySet:Lorg/agrona/collections/Int2ObjectHashMap$KeySet;
       4: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #15                 // Field valueCollection:Lorg/agrona/collections/Int2ObjectHashMap$ValueCollection;
       4: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.Integer, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #21                 // Field entrySet:Lorg/agrona/collections/Int2ObjectHashMap$EntrySet;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #47                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #50                 // Method entrySet:()Ljava/util/Set;
      19: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          89
      34: aload_2
      35: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #43                 // class java/util/Map$Entry
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #22                 // class java/lang/Integer
      54: invokevirtual #23                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: bipush        61
      64: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: aload_3
      70: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokevirtual #52                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: pop
      79: aload_1
      80: ldc           #53                 // String ,
      82: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: pop
      86: goto          25
      89: aload_1
      90: invokevirtual #55                 // Method java/lang/StringBuilder.length:()I
      93: iconst_1
      94: if_icmple     107
      97: aload_1
      98: aload_1
      99: invokevirtual #55                 // Method java/lang/StringBuilder.length:()I
     102: iconst_2
     103: isub
     104: invokevirtual #56                 // Method java/lang/StringBuilder.setLength:(I)V
     107: aload_1
     108: bipush        125
     110: invokevirtual #49                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     113: pop
     114: aload_1
     115: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: areturn

  public V replace(int, V);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method get:(I)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnull        17
      10: aload_0
      11: iload_1
      12: aload_2
      13: invokevirtual #31                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
      16: astore_3
      17: aload_3
      18: areturn

  public boolean replace(int, V, V);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method get:(I)Ljava/lang/Object;
       5: astore        4
       7: aload         4
       9: ifnull        21
      12: aload         4
      14: aload_2
      15: invokestatic  #58                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      18: ifne          23
      21: iconst_0
      22: ireturn
      23: aload_0
      24: iload_1
      25: aload_3
      26: invokevirtual #31                 // Method put:(ILjava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: iconst_1
      31: ireturn

  private void increaseCapacity();
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: ishl
       7: istore_1
       8: iload_1
       9: ifge          42
      12: new           #59                 // class java/lang/IllegalStateException
      15: dup
      16: new           #47                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #48                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #60                 // String Max capacity reached at size=
      25: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #4                  // Field size:I
      32: invokevirtual #51                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #57                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #61                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: iload_1
      44: invokespecial #38                 // Method rehash:(I)V
      47: return

  private void rehash(int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: istore_2
       4: aload_0
       5: iload_1
       6: i2f
       7: aload_0
       8: getfield      #9                  // Field loadFactor:F
      11: fmul
      12: f2i
      13: putfield      #11                 // Field resizeThreshold:I
      16: iload_1
      17: newarray       int
      19: astore_3
      20: iload_1
      21: anewarray     #12                 // class java/lang/Object
      24: astore        4
      26: iconst_0
      27: istore        5
      29: aload_0
      30: getfield      #1                  // Field values:[Ljava/lang/Object;
      33: arraylength
      34: istore        6
      36: iload         5
      38: iload         6
      40: if_icmpge     115
      43: aload_0
      44: getfield      #1                  // Field values:[Ljava/lang/Object;
      47: iload         5
      49: aaload
      50: astore        7
      52: aconst_null
      53: aload         7
      55: if_acmpeq     109
      58: aload_0
      59: getfield      #2                  // Field keys:[I
      62: iload         5
      64: iaload
      65: istore        8
      67: iload         8
      69: iload_2
      70: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      73: istore        9
      75: aconst_null
      76: aload         4
      78: iload         9
      80: aaload
      81: if_acmpeq     96
      84: iinc          9, 1
      87: iload         9
      89: iload_2
      90: iand
      91: istore        9
      93: goto          75
      96: aload_3
      97: iload         9
      99: iload         8
     101: iastore
     102: aload         4
     104: iload         9
     106: aload         7
     108: aastore
     109: iinc          5, 1
     112: goto          36
     115: aload_0
     116: aload_3
     117: putfield      #2                  // Field keys:[I
     120: aload_0
     121: aload         4
     123: putfield      #1                  // Field values:[Ljava/lang/Object;
     126: return

  private void compactChain(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_2
       8: iload_1
       9: istore_3
      10: iinc          3, 1
      13: iload_3
      14: iload_2
      15: iand
      16: istore_3
      17: aconst_null
      18: aload_0
      19: getfield      #1                  // Field values:[Ljava/lang/Object;
      22: iload_3
      23: aaload
      24: if_acmpne     30
      27: goto          106
      30: aload_0
      31: getfield      #2                  // Field keys:[I
      34: iload_3
      35: iaload
      36: iload_2
      37: invokestatic  #25                 // Method org/agrona/collections/Hashing.hash:(II)I
      40: istore        4
      42: iload_3
      43: iload         4
      45: if_icmpge     59
      48: iload         4
      50: iload_1
      51: if_icmple     70
      54: iload_1
      55: iload_3
      56: if_icmple     70
      59: iload         4
      61: iload_1
      62: if_icmpgt     103
      65: iload_1
      66: iload_3
      67: if_icmpgt     103
      70: aload_0
      71: getfield      #2                  // Field keys:[I
      74: iload_1
      75: aload_0
      76: getfield      #2                  // Field keys:[I
      79: iload_3
      80: iaload
      81: iastore
      82: aload_0
      83: getfield      #1                  // Field values:[Ljava/lang/Object;
      86: iload_1
      87: aload_0
      88: getfield      #1                  // Field values:[Ljava/lang/Object;
      91: iload_3
      92: aaload
      93: aastore
      94: aload_0
      95: getfield      #1                  // Field values:[Ljava/lang/Object;
      98: iload_3
      99: aconst_null
     100: aastore
     101: iload_3
     102: istore_1
     103: goto          10
     106: return

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method keySet:()Lorg/agrona/collections/Int2ObjectHashMap$KeySet;
       4: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #22                 // class java/lang/Integer
       5: aload_2
       6: invokevirtual #46                 // Method put:(Ljava/lang/Integer;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  static int access$206(org.agrona.collections.Int2ObjectHashMap);
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field size:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #4                  // Field size:I
      11: ireturn

  static void access$300(org.agrona.collections.Int2ObjectHashMap, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #3                  // Method compactChain:(I)V
       5: return

  static int[] access$400(org.agrona.collections.Int2ObjectHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field keys:[I
       4: areturn

  static java.lang.Object[] access$500(org.agrona.collections.Int2ObjectHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field values:[Ljava/lang/Object;
       4: areturn
}
