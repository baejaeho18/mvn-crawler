Compiled from "IntHashSet.java"
public final class org.agrona.collections.IntHashSet implements java.util.Set<java.lang.Integer> {
  public static final float DEFAULT_LOAD_FACTOR;

  public static final int DEFAULT_INITIAL_CAPACITY;

  private final float loadFactor;

  private final int missingValue;

  private int resizeThreshold;

  private int size;

  private int[] values;

  private final org.agrona.collections.IntIterator iterator;

  public org.agrona.collections.IntHashSet(int);
    Code:
       0: aload_0
       1: bipush        8
       3: iload_1
       4: invokespecial #2                  // Method "<init>":(II)V
       7: return

  public org.agrona.collections.IntHashSet(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: ldc           #3                  // float 0.67f
       5: invokespecial #4                  // Method "<init>":(IIF)V
       8: return

  public org.agrona.collections.IntHashSet(int, int, float);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: fload_3
       5: invokestatic  #6                  // Method org/agrona/collections/CollectionUtil.validateLoadFactor:(F)V
       8: aload_0
       9: fload_3
      10: putfield      #7                  // Field loadFactor:F
      13: aload_0
      14: iconst_0
      15: putfield      #8                  // Field size:I
      18: aload_0
      19: iload_2
      20: putfield      #9                  // Field missingValue:I
      23: iload_1
      24: invokestatic  #10                 // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      27: istore        4
      29: aload_0
      30: iload         4
      32: i2f
      33: fload_3
      34: fmul
      35: f2i
      36: putfield      #11                 // Field resizeThreshold:I
      39: aload_0
      40: iload         4
      42: newarray       int
      44: putfield      #12                 // Field values:[I
      47: aload_0
      48: getfield      #12                 // Field values:[I
      51: iload_2
      52: invokestatic  #13                 // Method java/util/Arrays.fill:([II)V
      55: aload_0
      56: new           #14                 // class org/agrona/collections/IntIterator
      59: dup
      60: iload_2
      61: aload_0
      62: getfield      #12                 // Field values:[I
      65: invokespecial #15                 // Method org/agrona/collections/IntIterator."<init>":(I[I)V
      68: putfield      #16                 // Field iterator:Lorg/agrona/collections/IntIterator;
      71: return

  public int missingValue();
    Code:
       0: aload_0
       1: getfield      #9                  // Field missingValue:I
       4: ireturn

  public boolean add(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
       5: invokevirtual #18                 // Method add:(I)Z
       8: ireturn

  public boolean add(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_1
      11: iload_3
      12: invokestatic  #19                 // Method org/agrona/collections/Hashing.hash:(II)I
      15: istore        4
      17: aload_2
      18: iload         4
      20: iaload
      21: aload_0
      22: getfield      #9                  // Field missingValue:I
      25: if_icmpeq     49
      28: aload_2
      29: iload         4
      31: iaload
      32: iload_1
      33: if_icmpne     38
      36: iconst_0
      37: ireturn
      38: iload         4
      40: iload_3
      41: invokestatic  #20                 // Method next:(II)I
      44: istore        4
      46: goto          17
      49: aload_2
      50: iload         4
      52: iload_1
      53: iastore
      54: aload_0
      55: dup
      56: getfield      #8                  // Field size:I
      59: iconst_1
      60: iadd
      61: putfield      #8                  // Field size:I
      64: aload_0
      65: getfield      #8                  // Field size:I
      68: aload_0
      69: getfield      #11                 // Field resizeThreshold:I
      72: if_icmple     79
      75: aload_0
      76: invokespecial #21                 // Method increaseCapacity:()V
      79: iconst_1
      80: ireturn

  private void increaseCapacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: arraylength
       5: iconst_2
       6: imul
       7: istore_1
       8: iload_1
       9: ifge          42
      12: new           #22                 // class java/lang/IllegalStateException
      15: dup
      16: new           #23                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #25                 // String Max capacity reached at size=
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #8                  // Field size:I
      32: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #29                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: iload_1
      44: invokespecial #30                 // Method rehash:(I)V
      47: return

  private void rehash(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_1
       3: iconst_1
       4: isub
       5: istore_3
       6: aload_0
       7: iload_1
       8: i2f
       9: aload_0
      10: getfield      #7                  // Field loadFactor:F
      13: fmul
      14: f2i
      15: putfield      #11                 // Field resizeThreshold:I
      18: iload_2
      19: newarray       int
      21: astore        4
      23: aload_0
      24: getfield      #9                  // Field missingValue:I
      27: istore        5
      29: aload         4
      31: iload         5
      33: invokestatic  #13                 // Method java/util/Arrays.fill:([II)V
      36: aload_0
      37: getfield      #12                 // Field values:[I
      40: astore        6
      42: aload         6
      44: arraylength
      45: istore        7
      47: iconst_0
      48: istore        8
      50: iload         8
      52: iload         7
      54: if_icmpge     114
      57: aload         6
      59: iload         8
      61: iaload
      62: istore        9
      64: iload         9
      66: iload         5
      68: if_icmpeq     108
      71: iload         9
      73: iload_3
      74: invokestatic  #19                 // Method org/agrona/collections/Hashing.hash:(II)I
      77: istore        10
      79: aload         4
      81: iload         10
      83: iaload
      84: iload         5
      86: if_icmpeq     101
      89: iinc          10, 1
      92: iload         10
      94: iload_3
      95: iand
      96: istore        10
      98: goto          79
     101: aload         4
     103: iload         10
     105: iload         9
     107: iastore
     108: iinc          8, 1
     111: goto          50
     114: aload_0
     115: aload         4
     117: putfield      #12                 // Field values:[I
     120: return

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #31                 // class java/lang/Integer
       4: ifeq          25
       7: aload_0
       8: aload_1
       9: checkcast     #31                 // class java/lang/Integer
      12: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
      15: invokevirtual #32                 // Method remove:(I)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean remove(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_1
      11: iload_3
      12: invokestatic  #19                 // Method org/agrona/collections/Hashing.hash:(II)I
      15: istore        4
      17: aload_2
      18: iload         4
      20: iaload
      21: aload_0
      22: getfield      #9                  // Field missingValue:I
      25: if_icmpeq     73
      28: aload_2
      29: iload         4
      31: iaload
      32: iload_1
      33: if_icmpne     62
      36: aload_2
      37: iload         4
      39: aload_0
      40: getfield      #9                  // Field missingValue:I
      43: iastore
      44: aload_0
      45: iload         4
      47: invokespecial #33                 // Method compactChain:(I)V
      50: aload_0
      51: dup
      52: getfield      #8                  // Field size:I
      55: iconst_1
      56: isub
      57: putfield      #8                  // Field size:I
      60: iconst_1
      61: ireturn
      62: iload         4
      64: iload_3
      65: invokestatic  #20                 // Method next:(II)I
      68: istore        4
      70: goto          17
      73: iconst_0
      74: ireturn

  private static int next(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: iload_1
       4: iand
       5: ireturn

  private void compactChain(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_1
      11: istore        4
      13: iload         4
      15: iload_3
      16: invokestatic  #20                 // Method next:(II)I
      19: istore        4
      21: aload_2
      22: iload         4
      24: iaload
      25: aload_0
      26: getfield      #9                  // Field missingValue:I
      29: if_icmpne     33
      32: return
      33: aload_2
      34: iload         4
      36: iaload
      37: iload_3
      38: invokestatic  #19                 // Method org/agrona/collections/Hashing.hash:(II)I
      41: istore        5
      43: iload         4
      45: iload         5
      47: if_icmpge     62
      50: iload         5
      52: iload_1
      53: if_icmple     74
      56: iload_1
      57: iload         4
      59: if_icmple     74
      62: iload         5
      64: iload_1
      65: if_icmpgt     92
      68: iload_1
      69: iload         4
      71: if_icmpgt     92
      74: aload_2
      75: iload_1
      76: aload_2
      77: iload         4
      79: iaload
      80: iastore
      81: aload_2
      82: iload         4
      84: aload_0
      85: getfield      #9                  // Field missingValue:I
      88: iastore
      89: iload         4
      91: istore_1
      92: goto          13

  public void compact();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method size:()I
       4: i2d
       5: dconst_1
       6: aload_0
       7: getfield      #7                  // Field loadFactor:F
      10: f2d
      11: ddiv
      12: dmul
      13: invokestatic  #35                 // Method java/lang/Math.round:(D)J
      16: l2i
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokestatic  #10                 // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      23: invokespecial #30                 // Method rehash:(I)V
      26: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #31                 // class java/lang/Integer
       4: ifeq          25
       7: aload_0
       8: aload_1
       9: checkcast     #31                 // class java/lang/Integer
      12: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
      15: invokevirtual #36                 // Method contains:(I)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public boolean contains(int);
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: iconst_1
       8: isub
       9: istore_3
      10: iload_1
      11: iload_3
      12: invokestatic  #19                 // Method org/agrona/collections/Hashing.hash:(II)I
      15: istore        4
      17: aload_2
      18: iload         4
      20: iaload
      21: aload_0
      22: getfield      #9                  // Field missingValue:I
      25: if_icmpeq     49
      28: aload_2
      29: iload         4
      31: iaload
      32: iload_1
      33: if_icmpne     38
      36: iconst_1
      37: ireturn
      38: iload         4
      40: iload_3
      41: invokestatic  #20                 // Method next:(II)I
      44: istore        4
      46: goto          17
      49: iconst_0
      50: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #8                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public float loadFactor();
    Code:
       0: aload_0
       1: getfield      #7                  // Field loadFactor:F
       4: freturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: arraylength
       5: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: aload_0
       5: getfield      #9                  // Field missingValue:I
       8: invokestatic  #13                 // Method java/util/Arrays.fill:([II)V
      11: aload_0
      12: iconst_0
      13: putfield      #8                  // Field size:I
      16: return

  public boolean addAll(java.util.Collection<? extends java.lang.Integer>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #37,  0             // InvokeDynamic #0:test:(Lorg/agrona/collections/IntHashSet;)Ljava/util/function/Predicate;
       7: invokestatic  #38                 // Method conjunction:(Ljava/util/Collection;Ljava/util/function/Predicate;)Z
      10: ireturn

  public boolean containsAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #39,  0             // InvokeDynamic #1:test:(Lorg/agrona/collections/IntHashSet;)Ljava/util/function/Predicate;
       7: invokestatic  #38                 // Method conjunction:(Ljava/util/Collection;Ljava/util/function/Predicate;)Z
      10: ireturn

  public boolean containsAll(org.agrona.collections.IntHashSet);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #9                  // Field missingValue:I
       6: istore_3
       7: aload_0
       8: getfield      #12                 // Field values:[I
      11: astore        4
      13: aload         4
      15: arraylength
      16: istore        5
      18: iconst_0
      19: istore        6
      21: iload         6
      23: iload         5
      25: if_icmpge     61
      28: aload         4
      30: iload         6
      32: iaload
      33: istore        7
      35: iload         7
      37: iload_3
      38: if_icmpeq     55
      41: aload_1
      42: iload         7
      44: invokevirtual #36                 // Method contains:(I)Z
      47: ifne          55
      50: iconst_0
      51: istore_2
      52: goto          61
      55: iinc          6, 1
      58: goto          21
      61: iload_2
      62: ireturn

  public org.agrona.collections.IntHashSet difference(org.agrona.collections.IntHashSet);
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aconst_null
       6: astore_2
       7: aload_0
       8: getfield      #9                  // Field missingValue:I
      11: istore_3
      12: aload_0
      13: getfield      #12                 // Field values:[I
      16: astore        4
      18: aload         4
      20: arraylength
      21: istore        5
      23: iconst_0
      24: istore        6
      26: iload         6
      28: iload         5
      30: if_icmpge     85
      33: aload         4
      35: iload         6
      37: iaload
      38: istore        7
      40: iload         7
      42: iload_3
      43: if_icmpeq     79
      46: aload_1
      47: iload         7
      49: invokevirtual #36                 // Method contains:(I)Z
      52: ifne          79
      55: aload_2
      56: ifnonnull     72
      59: new           #1                  // class org/agrona/collections/IntHashSet
      62: dup
      63: aload_0
      64: getfield      #8                  // Field size:I
      67: iload_3
      68: invokespecial #2                  // Method "<init>":(II)V
      71: astore_2
      72: aload_2
      73: iload         7
      75: invokevirtual #18                 // Method add:(I)Z
      78: pop
      79: iinc          6, 1
      82: goto          26
      85: aload_2
      86: areturn

  public boolean removeAll(java.util.Collection<?>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #41,  0             // InvokeDynamic #2:test:(Lorg/agrona/collections/IntHashSet;)Ljava/util/function/Predicate;
       7: invokestatic  #38                 // Method conjunction:(Ljava/util/Collection;Ljava/util/function/Predicate;)Z
      10: ireturn

  private static <T> boolean conjunction(java.util.Collection<T>, java.util.function.Predicate<T>);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iconst_0
       6: istore_2
       7: aload_0
       8: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          45
      23: aload_3
      24: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: astore        4
      31: iload_2
      32: aload_1
      33: aload         4
      35: invokeinterface #45,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      40: ior
      41: istore_2
      42: goto          14
      45: iload_2
      46: ireturn

  public org.agrona.collections.IntIterator iterator();
    Code:
       0: aload_0
       1: getfield      #16                 // Field iterator:Lorg/agrona/collections/IntIterator;
       4: invokevirtual #46                 // Method org/agrona/collections/IntIterator.reset:()V
       7: aload_0
       8: getfield      #16                 // Field iterator:Lorg/agrona/collections/IntIterator;
      11: areturn

  public void copy(org.agrona.collections.IntHashSet);
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: arraylength
       5: aload_1
       6: getfield      #12                 // Field values:[I
       9: arraylength
      10: if_icmpeq     23
      13: new           #47                 // class java/lang/IllegalArgumentException
      16: dup
      17: ldc           #48                 // String Cannot copy object: masks not equal
      19: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      22: athrow
      23: aload_0
      24: getfield      #9                  // Field missingValue:I
      27: aload_1
      28: getfield      #9                  // Field missingValue:I
      31: if_icmpeq     44
      34: new           #47                 // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #50                 // String Cannot copy object: missingValues not equal
      40: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: aload_1
      45: getfield      #12                 // Field values:[I
      48: iconst_0
      49: aload_0
      50: getfield      #12                 // Field values:[I
      53: iconst_0
      54: aload_0
      55: getfield      #12                 // Field values:[I
      58: arraylength
      59: invokestatic  #51                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      62: aload_0
      63: aload_1
      64: getfield      #8                  // Field size:I
      67: putfield      #8                  // Field size:I
      70: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method stream:()Ljava/util/stream/Stream;
       4: invokedynamic #53,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
       9: invokeinterface #54,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      14: ldc           #55                 // String ,
      16: ldc           #56                 // String {
      18: ldc           #57                 // String }
      20: invokestatic  #58                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      23: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      28: checkcast     #60                 // class java/lang/String
      31: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: aload_1
       1: ldc           #61                 // String into
       3: invokestatic  #62                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_1
       8: invokevirtual #63                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #64                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      14: astore_2
      15: aload_2
      16: ldc           #31                 // class java/lang/Integer
      18: invokevirtual #65                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifne          51
      24: new           #66                 // class java/lang/ArrayStoreException
      27: dup
      28: new           #23                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #67                 // String Cannot store Integers in array of type
      37: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #68                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      47: invokespecial #69                 // Method java/lang/ArrayStoreException."<init>":(Ljava/lang/String;)V
      50: athrow
      51: aload_0
      52: getfield      #8                  // Field size:I
      55: istore_3
      56: aload_1
      57: arraylength
      58: iload_3
      59: if_icmplt     66
      62: aload_1
      63: goto          77
      66: aload_2
      67: iload_3
      68: invokestatic  #70                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      71: checkcast     #71                 // class "[Ljava/lang/Object;"
      74: checkcast     #71                 // class "[Ljava/lang/Object;"
      77: astore        4
      79: aload_0
      80: aload         4
      82: invokespecial #72                 // Method copyValues:([Ljava/lang/Object;)V
      85: aload         4
      87: areturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #8                  // Field size:I
       4: anewarray     #73                 // class java/lang/Object
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokespecial #72                 // Method copyValues:([Ljava/lang/Object;)V
      13: aload_1
      14: areturn

  private void copyValues(java.lang.Object[]);
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method iterator:()Lorg/agrona/collections/IntIterator;
       4: astore_2
       5: iconst_0
       6: istore_3
       7: aload_2
       8: invokevirtual #75                 // Method org/agrona/collections/IntIterator.hasNext:()Z
      11: ifeq          27
      14: aload_1
      15: iload_3
      16: aload_2
      17: invokevirtual #76                 // Method org/agrona/collections/IntIterator.next:()Ljava/lang/Integer;
      20: aastore
      21: iinc          3, 1
      24: goto          7
      27: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #1                  // class org/agrona/collections/IntHashSet
      11: ifeq          55
      14: aload_1
      15: checkcast     #1                  // class org/agrona/collections/IntHashSet
      18: astore_2
      19: aload_2
      20: getfield      #9                  // Field missingValue:I
      23: aload_0
      24: getfield      #9                  // Field missingValue:I
      27: if_icmpne     53
      30: aload_2
      31: getfield      #8                  // Field size:I
      34: aload_0
      35: getfield      #8                  // Field size:I
      38: if_icmpne     53
      41: aload_0
      42: aload_2
      43: invokevirtual #77                 // Method containsAll:(Lorg/agrona/collections/IntHashSet;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn
      55: iconst_0
      56: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field values:[I
       4: invokestatic  #78                 // Method java/util/Arrays.hashCode:([I)I
       7: ireturn

  public boolean retainAll(java.util.Collection<?>);
    Code:
       0: new           #79                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #80                 // String Not implemented
       6: invokespecial #81                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: invokevirtual #82                 // Method add:(Ljava/lang/Integer;)Z
       8: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: invokevirtual #74                 // Method iterator:()Lorg/agrona/collections/IntIterator;
       4: areturn

  private static java.lang.String lambda$toString$0(java.lang.Integer);
    Code:
       0: aload_0
       1: invokevirtual #17                 // Method java/lang/Integer.intValue:()I
       4: invokestatic  #83                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: areturn
}
