Compiled from "BiInt2ObjectMap.java"
public class org.agrona.collections.BiInt2ObjectMap<V> {
  private final float loadFactor;

  private int resizeThreshold;

  private int size;

  private long[] keys;

  private java.lang.Object[] values;

  public org.agrona.collections.BiInt2ObjectMap();
    Code:
       0: aload_0
       1: bipush        8
       3: ldc           #1                  // float 0.67f
       5: invokespecial #2                  // Method "<init>":(IF)V
       8: return

  public org.agrona.collections.BiInt2ObjectMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: fload_2
       5: invokestatic  #4                  // Method org/agrona/collections/CollectionUtil.validateLoadFactor:(F)V
       8: aload_0
       9: fload_2
      10: putfield      #5                  // Field loadFactor:F
      13: iload_1
      14: invokestatic  #6                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      17: istore_3
      18: aload_0
      19: iload_3
      20: i2f
      21: fload_2
      22: fmul
      23: f2i
      24: putfield      #7                  // Field resizeThreshold:I
      27: aload_0
      28: iload_3
      29: newarray       long
      31: putfield      #8                  // Field keys:[J
      34: aload_0
      35: iload_3
      36: anewarray     #9                  // class java/lang/Object
      39: putfield      #10                 // Field values:[Ljava/lang/Object;
      42: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:[Ljava/lang/Object;
       4: arraylength
       5: ireturn

  public float loadFactor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field loadFactor:F
       4: freturn

  public void clear();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #11                 // Field size:I
       5: aload_0
       6: getfield      #10                 // Field values:[Ljava/lang/Object;
       9: aconst_null
      10: invokestatic  #12                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  public void compact();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method size:()I
       4: i2d
       5: dconst_1
       6: aload_0
       7: getfield      #5                  // Field loadFactor:F
      10: f2d
      11: ddiv
      12: dmul
      13: invokestatic  #14                 // Method java/lang/Math.round:(D)J
      16: l2i
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokestatic  #6                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      23: invokespecial #15                 // Method rehash:(I)V
      26: return

  public V put(int, int, V);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #16                 // Method compoundKey:(II)J
       5: lstore        4
       7: aconst_null
       8: astore        6
      10: aload_0
      11: getfield      #10                 // Field values:[Ljava/lang/Object;
      14: arraylength
      15: iconst_1
      16: isub
      17: istore        7
      19: iload_1
      20: iload_2
      21: iload         7
      23: invokestatic  #17                 // Method org/agrona/collections/Hashing.hash:(III)I
      26: istore        8
      28: aconst_null
      29: aload_0
      30: getfield      #10                 // Field values:[Ljava/lang/Object;
      33: iload         8
      35: aaload
      36: if_acmpeq     77
      39: lload         4
      41: aload_0
      42: getfield      #8                  // Field keys:[J
      45: iload         8
      47: laload
      48: lcmp
      49: ifne          64
      52: aload_0
      53: getfield      #10                 // Field values:[Ljava/lang/Object;
      56: iload         8
      58: aaload
      59: astore        6
      61: goto          77
      64: iinc          8, 1
      67: iload         8
      69: iload         7
      71: iand
      72: istore        8
      74: goto          28
      77: aconst_null
      78: aload         6
      80: if_acmpne     102
      83: aload_0
      84: dup
      85: getfield      #11                 // Field size:I
      88: iconst_1
      89: iadd
      90: putfield      #11                 // Field size:I
      93: aload_0
      94: getfield      #8                  // Field keys:[J
      97: iload         8
      99: lload         4
     101: lastore
     102: aload_0
     103: getfield      #10                 // Field values:[Ljava/lang/Object;
     106: iload         8
     108: aload_3
     109: aastore
     110: aload_0
     111: getfield      #11                 // Field size:I
     114: aload_0
     115: getfield      #7                  // Field resizeThreshold:I
     118: if_icmple     125
     121: aload_0
     122: invokespecial #18                 // Method increaseCapacity:()V
     125: aload         6
     127: areturn

  public V get(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #16                 // Method compoundKey:(II)J
       5: lstore_3
       6: aload_0
       7: getfield      #10                 // Field values:[Ljava/lang/Object;
      10: arraylength
      11: iconst_1
      12: isub
      13: istore        5
      15: iload_1
      16: iload_2
      17: iload         5
      19: invokestatic  #17                 // Method org/agrona/collections/Hashing.hash:(III)I
      22: istore        6
      24: aconst_null
      25: aload_0
      26: getfield      #10                 // Field values:[Ljava/lang/Object;
      29: iload         6
      31: aaload
      32: dup
      33: astore        7
      35: if_acmpeq     66
      38: lload_3
      39: aload_0
      40: getfield      #8                  // Field keys:[J
      43: iload         6
      45: laload
      46: lcmp
      47: ifne          53
      50: goto          66
      53: iinc          6, 1
      56: iload         6
      58: iload         5
      60: iand
      61: istore        6
      63: goto          24
      66: aload         7
      68: areturn

  public V remove(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: invokestatic  #16                 // Method compoundKey:(II)J
       5: lstore_3
       6: aload_0
       7: getfield      #10                 // Field values:[Ljava/lang/Object;
      10: arraylength
      11: iconst_1
      12: isub
      13: istore        5
      15: iload_1
      16: iload_2
      17: iload         5
      19: invokestatic  #17                 // Method org/agrona/collections/Hashing.hash:(III)I
      22: istore        6
      24: aconst_null
      25: aload_0
      26: getfield      #10                 // Field values:[Ljava/lang/Object;
      29: iload         6
      31: aaload
      32: dup
      33: astore        7
      35: if_acmpeq     90
      38: lload_3
      39: aload_0
      40: getfield      #8                  // Field keys:[J
      43: iload         6
      45: laload
      46: lcmp
      47: ifne          77
      50: aload_0
      51: getfield      #10                 // Field values:[Ljava/lang/Object;
      54: iload         6
      56: aconst_null
      57: aastore
      58: aload_0
      59: dup
      60: getfield      #11                 // Field size:I
      63: iconst_1
      64: isub
      65: putfield      #11                 // Field size:I
      68: aload_0
      69: iload         6
      71: invokespecial #19                 // Method compactChain:(I)V
      74: goto          90
      77: iinc          6, 1
      80: iload         6
      82: iload         5
      84: iand
      85: istore        6
      87: goto          24
      90: aload         7
      92: areturn

  public V computeIfAbsent(int, int, org.agrona.collections.BiInt2ObjectMap$EntryFunction<? extends V>);
    Code:
       0: aload_3
       1: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: iload_1
       7: iload_2
       8: invokevirtual #21                 // Method get:(II)Ljava/lang/Object;
      11: astore        4
      13: aload         4
      15: ifnonnull     42
      18: aload_3
      19: iload_1
      20: iload_2
      21: invokeinterface #22,  3           // InterfaceMethod org/agrona/collections/BiInt2ObjectMap$EntryFunction.apply:(II)Ljava/lang/Object;
      26: astore        4
      28: aload         4
      30: ifnull        42
      33: aload_0
      34: iload_1
      35: iload_2
      36: aload         4
      38: invokevirtual #23                 // Method put:(IILjava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload         4
      44: areturn

  public void forEach(java.util.function.Consumer<V>);
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:[Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     43
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aconst_null
      24: aload         5
      26: if_acmpeq     37
      29: aload_1
      30: aload         5
      32: invokeinterface #24,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      37: iinc          4, 1
      40: goto          11
      43: return

  public void forEach(org.agrona.collections.BiInt2ObjectMap$EntryConsumer<V>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #10                 // Field values:[Ljava/lang/Object;
       6: arraylength
       7: istore_3
       8: iload_2
       9: iload_3
      10: if_icmpge     70
      13: aload_0
      14: getfield      #10                 // Field values:[Ljava/lang/Object;
      17: iload_2
      18: aaload
      19: astore        4
      21: aconst_null
      22: aload         4
      24: if_acmpeq     64
      27: aload_0
      28: getfield      #8                  // Field keys:[J
      31: iload_2
      32: laload
      33: lstore        5
      35: lload         5
      37: bipush        32
      39: lushr
      40: l2i
      41: istore        7
      43: lload         5
      45: ldc2_w        #25                 // long 4294967295l
      48: land
      49: l2i
      50: istore        8
      52: aload_1
      53: iload         7
      55: iload         8
      57: aload         4
      59: invokeinterface #27,  4           // InterfaceMethod org/agrona/collections/BiInt2ObjectMap$EntryConsumer.accept:(IILjava/lang/Object;)V
      64: iinc          2, 1
      67: goto          8
      70: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: iconst_0
       1: aload_0
       2: getfield      #11                 // Field size:I
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private static long compoundKey(int, int);
    Code:
       0: iload_0
       1: i2l
       2: bipush        32
       4: lshl
       5: iload_1
       6: i2l
       7: ldc2_w        #25                 // long 4294967295l
      10: land
      11: lor
      12: lreturn

  private void rehash(int);
    Code:
       0: iload_1
       1: iconst_1
       2: isub
       3: istore_2
       4: aload_0
       5: iload_1
       6: i2f
       7: aload_0
       8: getfield      #5                  // Field loadFactor:F
      11: fmul
      12: f2i
      13: putfield      #7                  // Field resizeThreshold:I
      16: iload_1
      17: newarray       long
      19: astore_3
      20: iload_1
      21: anewarray     #9                  // class java/lang/Object
      24: astore        4
      26: iconst_0
      27: istore        5
      29: aload_0
      30: getfield      #10                 // Field values:[Ljava/lang/Object;
      33: arraylength
      34: istore        6
      36: iload         5
      38: iload         6
      40: if_icmpge     115
      43: aload_0
      44: getfield      #10                 // Field values:[Ljava/lang/Object;
      47: iload         5
      49: aaload
      50: astore        7
      52: aconst_null
      53: aload         7
      55: if_acmpeq     109
      58: aload_0
      59: getfield      #8                  // Field keys:[J
      62: iload         5
      64: laload
      65: lstore        8
      67: lload         8
      69: iload_2
      70: invokestatic  #28                 // Method org/agrona/collections/Hashing.hash:(JI)I
      73: istore        10
      75: aconst_null
      76: aload         4
      78: iload         10
      80: aaload
      81: if_acmpeq     96
      84: iinc          10, 1
      87: iload         10
      89: iload_2
      90: iand
      91: istore        10
      93: goto          75
      96: aload_3
      97: iload         10
      99: lload         8
     101: lastore
     102: aload         4
     104: iload         10
     106: aload         7
     108: aastore
     109: iinc          5, 1
     112: goto          36
     115: aload_0
     116: aload_3
     117: putfield      #8                  // Field keys:[J
     120: aload_0
     121: aload         4
     123: putfield      #10                 // Field values:[Ljava/lang/Object;
     126: return

  private void compactChain(int);
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: isub
       7: istore_2
       8: iload_1
       9: istore_3
      10: iinc          3, 1
      13: iload_3
      14: iload_2
      15: iand
      16: istore_3
      17: aconst_null
      18: aload_0
      19: getfield      #10                 // Field values:[Ljava/lang/Object;
      22: iload_3
      23: aaload
      24: if_acmpne     30
      27: goto          106
      30: aload_0
      31: getfield      #8                  // Field keys:[J
      34: iload_3
      35: laload
      36: lstore        4
      38: lload         4
      40: iload_2
      41: invokestatic  #28                 // Method org/agrona/collections/Hashing.hash:(JI)I
      44: istore        6
      46: iload_3
      47: iload         6
      49: if_icmpge     63
      52: iload         6
      54: iload_1
      55: if_icmple     74
      58: iload_1
      59: iload_3
      60: if_icmple     74
      63: iload         6
      65: iload_1
      66: if_icmpgt     103
      69: iload_1
      70: iload_3
      71: if_icmpgt     103
      74: aload_0
      75: getfield      #8                  // Field keys:[J
      78: iload_1
      79: lload         4
      81: lastore
      82: aload_0
      83: getfield      #10                 // Field values:[Ljava/lang/Object;
      86: iload_1
      87: aload_0
      88: getfield      #10                 // Field values:[Ljava/lang/Object;
      91: iload_3
      92: aaload
      93: aastore
      94: aload_0
      95: getfield      #10                 // Field values:[Ljava/lang/Object;
      98: iload_3
      99: aconst_null
     100: aastore
     101: iload_3
     102: istore_1
     103: goto          10
     106: return

  private void increaseCapacity();
    Code:
       0: aload_0
       1: getfield      #10                 // Field values:[Ljava/lang/Object;
       4: arraylength
       5: iconst_1
       6: ishl
       7: istore_1
       8: iload_1
       9: ifge          42
      12: new           #29                 // class java/lang/IllegalStateException
      15: dup
      16: new           #30                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #32                 // String Max capacity reached at size=
      25: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: getfield      #11                 // Field size:I
      32: invokevirtual #34                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      35: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #36                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: iload_1
      44: invokespecial #15                 // Method rehash:(I)V
      47: return
}
