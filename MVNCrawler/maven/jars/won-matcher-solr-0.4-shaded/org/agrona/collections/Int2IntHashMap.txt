Compiled from "Int2IntHashMap.java"
public class org.agrona.collections.Int2IntHashMap implements java.util.Map<java.lang.Integer, java.lang.Integer> {
  private final float loadFactor;

  private final int missingValue;

  private int resizeThreshold;

  private int size;

  private int[] entries;

  private final org.agrona.collections.Int2IntHashMap$KeySet keySet;

  private final org.agrona.collections.Int2IntHashMap$Values values;

  private final java.util.Set<java.util.Map$Entry<java.lang.Integer, java.lang.Integer>> entrySet;

  public org.agrona.collections.Int2IntHashMap(int);
    Code:
       0: aload_0
       1: bipush        16
       3: ldc           #3                  // float 0.67f
       5: iload_1
       6: invokespecial #4                  // Method "<init>":(IFI)V
       9: return

  public org.agrona.collections.Int2IntHashMap(int, float, int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field size:I
       9: fload_2
      10: invokestatic  #7                  // Method org/agrona/collections/CollectionUtil.validateLoadFactor:(F)V
      13: aload_0
      14: fload_2
      15: putfield      #8                  // Field loadFactor:F
      18: aload_0
      19: iload_3
      20: putfield      #2                  // Field missingValue:I
      23: aload_0
      24: iload_1
      25: invokestatic  #9                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      28: invokespecial #10                 // Method capacity:(I)V
      31: aload_0
      32: new           #11                 // class org/agrona/collections/Int2IntHashMap$KeySet
      35: dup
      36: aload_0
      37: aconst_null
      38: invokespecial #12                 // Method org/agrona/collections/Int2IntHashMap$KeySet."<init>":(Lorg/agrona/collections/Int2IntHashMap;Lorg/agrona/collections/Int2IntHashMap$1;)V
      41: putfield      #13                 // Field keySet:Lorg/agrona/collections/Int2IntHashMap$KeySet;
      44: aload_0
      45: new           #14                 // class org/agrona/collections/Int2IntHashMap$Values
      48: dup
      49: aload_0
      50: aconst_null
      51: invokespecial #15                 // Method org/agrona/collections/Int2IntHashMap$Values."<init>":(Lorg/agrona/collections/Int2IntHashMap;Lorg/agrona/collections/Int2IntHashMap$1;)V
      54: putfield      #16                 // Field values:Lorg/agrona/collections/Int2IntHashMap$Values;
      57: aload_0
      58: new           #17                 // class org/agrona/collections/Int2IntHashMap$EntrySet
      61: dup
      62: aload_0
      63: aconst_null
      64: invokespecial #18                 // Method org/agrona/collections/Int2IntHashMap$EntrySet."<init>":(Lorg/agrona/collections/Int2IntHashMap;Lorg/agrona/collections/Int2IntHashMap$1;)V
      67: putfield      #19                 // Field entrySet:Ljava/util/Set;
      70: return

  public int missingValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field missingValue:I
       4: ireturn

  public float loadFactor();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loadFactor:F
       4: freturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int get(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iconst_1
      13: isub
      14: istore        4
      16: iload_1
      17: iload         4
      19: invokestatic  #20                 // Method org/agrona/collections/Hashing.evenHash:(II)I
      22: istore        5
      24: iload_3
      25: istore        6
      27: aload_2
      28: iload         5
      30: iaload
      31: dup
      32: istore        7
      34: iload_3
      35: if_icmpeq     67
      38: iload         7
      40: iload_1
      41: if_icmpne     55
      44: aload_2
      45: iload         5
      47: iconst_1
      48: iadd
      49: iaload
      50: istore        6
      52: goto          67
      55: iload         5
      57: iload         4
      59: invokestatic  #21                 // Method next:(II)I
      62: istore        5
      64: goto          27
      67: iload         6
      69: ireturn

  public int put(int, int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_3
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore        4
      11: aload_3
      12: arraylength
      13: iconst_1
      14: isub
      15: istore        5
      17: iload_1
      18: iload         5
      20: invokestatic  #20                 // Method org/agrona/collections/Hashing.evenHash:(II)I
      23: istore        6
      25: iload         4
      27: istore        7
      29: aload_3
      30: iload         6
      32: iaload
      33: dup
      34: istore        8
      36: iload         4
      38: if_icmpeq     70
      41: iload         8
      43: iload_1
      44: if_icmpne     58
      47: aload_3
      48: iload         6
      50: iconst_1
      51: iadd
      52: iaload
      53: istore        7
      55: goto          70
      58: iload         6
      60: iload         5
      62: invokestatic  #21                 // Method next:(II)I
      65: istore        6
      67: goto          29
      70: iload         7
      72: iload         4
      74: if_icmpne     92
      77: aload_0
      78: dup
      79: getfield      #6                  // Field size:I
      82: iconst_1
      83: iadd
      84: putfield      #6                  // Field size:I
      87: aload_3
      88: iload         6
      90: iload_1
      91: iastore
      92: aload_3
      93: iload         6
      95: iconst_1
      96: iadd
      97: iload_2
      98: iastore
      99: aload_0
     100: invokespecial #22                 // Method increaseCapacity:()V
     103: iload         7
     105: ireturn

  private void increaseCapacity();
    Code:
       0: aload_0
       1: getfield      #6                  // Field size:I
       4: aload_0
       5: getfield      #23                 // Field resizeThreshold:I
       8: if_icmple     22
      11: aload_0
      12: getfield      #1                  // Field entries:[I
      15: arraylength
      16: istore_1
      17: aload_0
      18: iload_1
      19: invokespecial #24                 // Method rehash:(I)V
      22: return

  private void rehash(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore_3
      10: aload_0
      11: getfield      #1                  // Field entries:[I
      14: arraylength
      15: istore        4
      17: aload_0
      18: iload_1
      19: invokespecial #10                 // Method capacity:(I)V
      22: iconst_0
      23: istore        5
      25: iload         5
      27: iload         4
      29: if_icmpge     63
      32: aload_2
      33: iload         5
      35: iaload
      36: istore        6
      38: iload         6
      40: iload_3
      41: if_icmpeq     57
      44: aload_0
      45: iload         6
      47: aload_2
      48: iload         5
      50: iconst_1
      51: iadd
      52: iaload
      53: invokevirtual #25                 // Method put:(II)I
      56: pop
      57: iinc          5, 2
      60: goto          25
      63: return

  public void intForEach(org.agrona.collections.IntIntConsumer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore_3
      10: aload_2
      11: arraylength
      12: istore        4
      14: iconst_0
      15: istore        5
      17: iload         5
      19: iload         4
      21: if_icmpge     58
      24: aload_2
      25: iload         5
      27: iaload
      28: istore        6
      30: iload         6
      32: iload_3
      33: if_icmpeq     52
      36: aload_1
      37: aload_2
      38: iload         5
      40: iaload
      41: aload_2
      42: iload         5
      44: iconst_1
      45: iadd
      46: iaload
      47: invokeinterface #26,  3           // InterfaceMethod org/agrona/collections/IntIntConsumer.accept:(II)V
      52: iinc          5, 2
      55: goto          17
      58: return

  public boolean containsKey(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method get:(I)I
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: if_icmpeq     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public boolean containsValue(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iconst_1
      12: istore        5
      14: iload         5
      16: iload_3
      17: if_icmpge     40
      20: iload_1
      21: aload_2
      22: iload         5
      24: iaload
      25: if_icmpne     34
      28: iconst_1
      29: istore        4
      31: goto          40
      34: iinc          5, 2
      37: goto          14
      40: iload         4
      42: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: aload_0
       5: getfield      #2                  // Field missingValue:I
       8: invokestatic  #28                 // Method java/util/Arrays.fill:([II)V
      11: aload_0
      12: iconst_0
      13: putfield      #6                  // Field size:I
      16: return

  public void compact();
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method size:()I
       4: i2d
       5: dconst_1
       6: aload_0
       7: getfield      #8                  // Field loadFactor:F
      10: f2d
      11: ddiv
      12: dmul
      13: invokestatic  #30                 // Method java/lang/Math.round:(D)J
      16: l2i
      17: istore_1
      18: aload_0
      19: iload_1
      20: invokestatic  #9                  // Method org/agrona/BitUtil.findNextPositivePowerOfTwo:(I)I
      23: invokespecial #24                 // Method rehash:(I)V
      26: return

  public java.lang.Integer get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #27                 // Method get:(I)I
      11: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn

  public java.lang.Integer put(java.lang.Integer, java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       5: aload_2
       6: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       9: invokevirtual #25                 // Method put:(II)I
      12: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      15: areturn

  public void forEach(java.util.function.BiConsumer<? super java.lang.Integer, ? super java.lang.Integer>);
    Code:
       0: aload_0
       1: aload_1
       2: dup
       3: invokevirtual #34                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #35,  0             // InvokeDynamic #0:accept:(Ljava/util/function/BiConsumer;)Lorg/agrona/collections/IntIntConsumer;
      12: invokevirtual #36                 // Method intForEach:(Lorg/agrona/collections/IntIntConsumer;)V
      15: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #37                 // Method containsKey:(I)Z
      11: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #38                 // Method containsValue:(I)Z
      11: ireturn

  public void putAll(java.util.Map<? extends java.lang.Integer, ? extends java.lang.Integer>);
    Code:
       0: aload_1
       1: invokeinterface #39,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          57
      21: aload_2
      22: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #43                 // class java/util/Map$Entry
      30: astore_3
      31: aload_0
      32: aload_3
      33: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      38: checkcast     #31                 // class java/lang/Integer
      41: aload_3
      42: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      47: checkcast     #31                 // class java/lang/Integer
      50: invokevirtual #46                 // Method put:(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;
      53: pop
      54: goto          12
      57: return

  public org.agrona.collections.Int2IntHashMap$KeySet keySet();
    Code:
       0: aload_0
       1: getfield      #13                 // Field keySet:Lorg/agrona/collections/Int2IntHashMap$KeySet;
       4: areturn

  public org.agrona.collections.Int2IntHashMap$Values values();
    Code:
       0: aload_0
       1: getfield      #16                 // Field values:Lorg/agrona/collections/Int2IntHashMap$Values;
       4: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.Integer, java.lang.Integer>> entrySet();
    Code:
       0: aload_0
       1: getfield      #19                 // Field entrySet:Ljava/util/Set;
       4: areturn

  public java.lang.Integer remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
       8: invokevirtual #47                 // Method remove:(I)I
      11: invokestatic  #33                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      14: areturn

  public int remove(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iconst_1
      13: isub
      14: istore        4
      16: iload_1
      17: iload         4
      19: invokestatic  #20                 // Method org/agrona/collections/Hashing.evenHash:(II)I
      22: istore        5
      24: iload_3
      25: istore        6
      27: aload_2
      28: iload         5
      30: iaload
      31: dup
      32: istore        7
      34: iload_3
      35: if_icmpeq     97
      38: iload         7
      40: iload_1
      41: if_icmpne     85
      44: iload         5
      46: iconst_1
      47: iadd
      48: istore        8
      50: aload_2
      51: iload         8
      53: iaload
      54: istore        6
      56: aload_2
      57: iload         5
      59: iload_3
      60: iastore
      61: aload_2
      62: iload         8
      64: iload_3
      65: iastore
      66: aload_0
      67: dup
      68: getfield      #6                  // Field size:I
      71: iconst_1
      72: isub
      73: putfield      #6                  // Field size:I
      76: aload_0
      77: iload         5
      79: invokespecial #48                 // Method compactChain:(I)V
      82: goto          97
      85: iload         5
      87: iload         4
      89: invokestatic  #21                 // Method next:(II)I
      92: istore        5
      94: goto          27
      97: iload         6
      99: ireturn

  private void compactChain(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field missingValue:I
       9: istore_3
      10: aload_2
      11: arraylength
      12: iconst_1
      13: isub
      14: istore        4
      16: iload_1
      17: istore        5
      19: iload         5
      21: iload         4
      23: invokestatic  #21                 // Method next:(II)I
      26: istore        5
      28: aload_2
      29: iload         5
      31: iaload
      32: iload_3
      33: if_icmpne     39
      36: goto          117
      39: aload_2
      40: iload         5
      42: iaload
      43: iload         4
      45: invokestatic  #20                 // Method org/agrona/collections/Hashing.evenHash:(II)I
      48: istore        6
      50: iload         5
      52: iload         6
      54: if_icmpge     69
      57: iload         6
      59: iload_1
      60: if_icmple     81
      63: iload_1
      64: iload         5
      66: if_icmple     81
      69: iload         6
      71: iload_1
      72: if_icmpgt     114
      75: iload_1
      76: iload         5
      78: if_icmpgt     114
      81: aload_2
      82: iload_1
      83: aload_2
      84: iload         5
      86: iaload
      87: iastore
      88: aload_2
      89: iload_1
      90: iconst_1
      91: iadd
      92: aload_2
      93: iload         5
      95: iconst_1
      96: iadd
      97: iaload
      98: iastore
      99: aload_2
     100: iload         5
     102: iload_3
     103: iastore
     104: aload_2
     105: iload         5
     107: iconst_1
     108: iadd
     109: iload_3
     110: iastore
     111: iload         5
     113: istore_1
     114: goto          19
     117: return

  public int minValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field missingValue:I
       4: istore_1
       5: aload_0
       6: getfield      #6                  // Field size:I
       9: ifne          16
      12: iload_1
      13: goto          18
      16: ldc           #49                 // int 2147483647
      18: istore_2
      19: aload_0
      20: getfield      #1                  // Field entries:[I
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_1
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     63
      38: aload_3
      39: iload         5
      41: iaload
      42: istore        6
      44: iload         6
      46: iload_1
      47: if_icmpeq     57
      50: iload_2
      51: iload         6
      53: invokestatic  #50                 // Method java/lang/Math.min:(II)I
      56: istore_2
      57: iinc          5, 2
      60: goto          31
      63: iload_2
      64: ireturn

  public int maxValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field missingValue:I
       4: istore_1
       5: aload_0
       6: getfield      #6                  // Field size:I
       9: ifne          16
      12: iload_1
      13: goto          18
      16: ldc           #51                 // int -2147483648
      18: istore_2
      19: aload_0
      20: getfield      #1                  // Field entries:[I
      23: astore_3
      24: aload_3
      25: arraylength
      26: istore        4
      28: iconst_1
      29: istore        5
      31: iload         5
      33: iload         4
      35: if_icmpge     63
      38: aload_3
      39: iload         5
      41: iaload
      42: istore        6
      44: iload         6
      46: iload_1
      47: if_icmpeq     57
      50: iload_2
      51: iload         6
      53: invokestatic  #52                 // Method java/lang/Math.max:(II)I
      56: istore_2
      57: iinc          5, 2
      60: goto          31
      63: iload_2
      64: ireturn

  public java.lang.String toString();
    Code:
       0: new           #53                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        123
      11: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: pop
      15: aload_0
      16: invokevirtual #56                 // Method entrySet:()Ljava/util/Set;
      19: invokeinterface #40,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore_2
      25: aload_2
      26: invokeinterface #41,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          95
      34: aload_2
      35: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #43                 // class java/util/Map$Entry
      43: astore_3
      44: aload_1
      45: aload_3
      46: invokeinterface #44,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      51: checkcast     #31                 // class java/lang/Integer
      54: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
      57: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: bipush        61
      64: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      67: pop
      68: aload_1
      69: aload_3
      70: invokeinterface #45,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: checkcast     #31                 // class java/lang/Integer
      78: invokevirtual #32                 // Method java/lang/Integer.intValue:()I
      81: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: pop
      85: aload_1
      86: ldc           #58                 // String ,
      88: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: pop
      92: goto          25
      95: aload_1
      96: invokevirtual #60                 // Method java/lang/StringBuilder.length:()I
      99: iconst_1
     100: if_icmple     113
     103: aload_1
     104: aload_1
     105: invokevirtual #60                 // Method java/lang/StringBuilder.length:()I
     108: iconst_2
     109: isub
     110: invokevirtual #61                 // Method java/lang/StringBuilder.setLength:(I)V
     113: aload_1
     114: bipush        125
     116: invokevirtual #55                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     119: pop
     120: aload_1
     121: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     124: areturn

  public int replace(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method get:(I)I
       5: istore_3
       6: iload_3
       7: aload_0
       8: getfield      #2                  // Field missingValue:I
      11: if_icmpeq     21
      14: aload_0
      15: iload_1
      16: iload_2
      17: invokevirtual #25                 // Method put:(II)I
      20: istore_3
      21: iload_3
      22: ireturn

  public boolean replace(int, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #27                 // Method get:(I)I
       5: istore        4
       7: iload         4
       9: iload_2
      10: if_icmpne     22
      13: iload         4
      15: aload_0
      16: getfield      #2                  // Field missingValue:I
      19: if_icmpne     24
      22: iconst_0
      23: ireturn
      24: aload_0
      25: iload_1
      26: iload_3
      27: invokevirtual #25                 // Method put:(II)I
      30: pop
      31: iconst_1
      32: ireturn

  private static int next(int, int);
    Code:
       0: iload_0
       1: iconst_2
       2: iadd
       3: iload_1
       4: iand
       5: ireturn

  private void capacity(int);
    Code:
       0: iload_1
       1: iconst_2
       2: imul
       3: istore_2
       4: iload_2
       5: ifge          38
       8: new           #63                 // class java/lang/IllegalStateException
      11: dup
      12: new           #53                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #54                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc           #64                 // String Max capacity reached at size=
      21: invokevirtual #59                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #6                  // Field size:I
      28: invokevirtual #57                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #62                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #65                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: iload_1
      40: i2f
      41: aload_0
      42: getfield      #8                  // Field loadFactor:F
      45: fmul
      46: f2i
      47: putfield      #23                 // Field resizeThreshold:I
      50: aload_0
      51: iload_2
      52: newarray       int
      54: putfield      #1                  // Field entries:[I
      57: aload_0
      58: iconst_0
      59: putfield      #6                  // Field size:I
      62: aload_0
      63: getfield      #1                  // Field entries:[I
      66: aload_0
      67: getfield      #2                  // Field missingValue:I
      70: invokestatic  #28                 // Method java/util/Arrays.fill:([II)V
      73: return

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method values:()Lorg/agrona/collections/Int2IntHashMap$Values;
       4: areturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #67                 // Method keySet:()Lorg/agrona/collections/Int2IntHashMap$KeySet;
       4: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #68                 // Method remove:(Ljava/lang/Object;)Ljava/lang/Integer;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/lang/Integer
       5: aload_2
       6: checkcast     #31                 // class java/lang/Integer
       9: invokevirtual #46                 // Method put:(Ljava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method get:(Ljava/lang/Object;)Ljava/lang/Integer;
       5: areturn

  static int access$300(org.agrona.collections.Int2IntHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field missingValue:I
       4: ireturn

  static int[] access$400(org.agrona.collections.Int2IntHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field entries:[I
       4: areturn
}
