Compiled from "UnsafeBuffer.java"
public class org.agrona.concurrent.UnsafeBuffer implements org.agrona.concurrent.AtomicBuffer {
  public static final int ALIGNMENT;

  public static final java.lang.String DISABLE_BOUNDS_CHECKS_PROP_NAME;

  public static final boolean SHOULD_BOUNDS_CHECK;

  private long addressOffset;

  private int capacity;

  private byte[] byteArray;

  private java.nio.ByteBuffer byteBuffer;

  public org.agrona.concurrent.UnsafeBuffer(byte[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method wrap:([B)V
       9: return

  public org.agrona.concurrent.UnsafeBuffer(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #4                  // Method wrap:([BII)V
      11: return

  public org.agrona.concurrent.UnsafeBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #5                  // Method wrap:(Ljava/nio/ByteBuffer;)V
       9: return

  public org.agrona.concurrent.UnsafeBuffer(java.nio.ByteBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #6                  // Method wrap:(Ljava/nio/ByteBuffer;II)V
      11: return

  public org.agrona.concurrent.UnsafeBuffer(org.agrona.DirectBuffer);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #7                  // Method wrap:(Lorg/agrona/DirectBuffer;)V
       9: return

  public org.agrona.concurrent.UnsafeBuffer(org.agrona.DirectBuffer, int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #8                  // Method wrap:(Lorg/agrona/DirectBuffer;II)V
      11: return

  public org.agrona.concurrent.UnsafeBuffer(long, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: iload_3
       7: invokevirtual #9                  // Method wrap:(JI)V
      10: return

  public void wrap(byte[]);
    Code:
       0: aload_0
       1: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
       4: putfield      #11                 // Field addressOffset:J
       7: aload_0
       8: aload_1
       9: arraylength
      10: putfield      #12                 // Field capacity:I
      13: aload_0
      14: aload_1
      15: putfield      #13                 // Field byteArray:[B
      18: aload_0
      19: aconst_null
      20: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      23: return

  public void wrap(byte[], int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          121
       6: aload_1
       7: arraylength
       8: istore        4
      10: iload_2
      11: ifeq          63
      14: iload_2
      15: iflt          26
      18: iload_2
      19: iload         4
      21: iconst_1
      22: isub
      23: if_icmple     63
      26: new           #16                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #17                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #19                 // String offset=
      39: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_2
      43: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: ldc           #22                 // String  not valid for buffer.length=
      48: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: iload         4
      53: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      56: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow
      63: iload_3
      64: iflt          75
      67: iload_3
      68: iload         4
      70: iload_2
      71: isub
      72: if_icmple     121
      75: new           #16                 // class java/lang/IllegalArgumentException
      78: dup
      79: new           #17                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #19                 // String offset=
      88: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: iload_2
      92: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      95: ldc           #25                 // String  length=
      97: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: iload_3
     101: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     104: ldc           #22                 // String  not valid for buffer.length=
     106: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: iload         4
     111: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     114: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
     125: iload_2
     126: i2l
     127: ladd
     128: putfield      #11                 // Field addressOffset:J
     131: aload_0
     132: iload_3
     133: putfield      #12                 // Field capacity:I
     136: aload_0
     137: aload_1
     138: putfield      #13                 // Field byteArray:[B
     141: aload_0
     142: aconst_null
     143: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     146: return

  public void wrap(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       5: aload_1
       6: invokevirtual #26                 // Method java/nio/ByteBuffer.isDirect:()Z
       9: ifeq          28
      12: aload_0
      13: aconst_null
      14: putfield      #13                 // Field byteArray:[B
      17: aload_0
      18: aload_1
      19: invokestatic  #27                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      22: putfield      #11                 // Field addressOffset:J
      25: goto          55
      28: aload_0
      29: aload_0
      30: getfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      33: invokestatic  #28                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
      36: putfield      #13                 // Field byteArray:[B
      39: aload_0
      40: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      43: aload_0
      44: getfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      47: invokestatic  #29                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
      50: i2l
      51: ladd
      52: putfield      #11                 // Field addressOffset:J
      55: aload_0
      56: aload_1
      57: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
      60: putfield      #12                 // Field capacity:I
      63: return

  public void wrap(java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          123
       6: aload_1
       7: invokevirtual #30                 // Method java/nio/ByteBuffer.capacity:()I
      10: istore        4
      12: iload_2
      13: ifeq          65
      16: iload_2
      17: iflt          28
      20: iload_2
      21: iload         4
      23: iconst_1
      24: isub
      25: if_icmple     65
      28: new           #16                 // class java/lang/IllegalArgumentException
      31: dup
      32: new           #17                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #19                 // String offset=
      41: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: iload_2
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #31                 // String  not valid for buffer.capacity()=
      50: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: iload         4
      55: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      64: athrow
      65: iload_3
      66: iflt          77
      69: iload_3
      70: iload         4
      72: iload_2
      73: isub
      74: if_icmple     123
      77: new           #16                 // class java/lang/IllegalArgumentException
      80: dup
      81: new           #17                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc           #19                 // String offset=
      90: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: iload_2
      94: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #25                 // String  length=
      99: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload_3
     103: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     106: ldc           #31                 // String  not valid for buffer.capacity()=
     108: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: iload         4
     113: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     116: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     119: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: aload_0
     124: aload_1
     125: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     128: aload_1
     129: invokevirtual #26                 // Method java/nio/ByteBuffer.isDirect:()Z
     132: ifeq          154
     135: aload_0
     136: aconst_null
     137: putfield      #13                 // Field byteArray:[B
     140: aload_0
     141: aload_1
     142: invokestatic  #27                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
     145: iload_2
     146: i2l
     147: ladd
     148: putfield      #11                 // Field addressOffset:J
     151: goto          178
     154: aload_0
     155: aload_1
     156: invokestatic  #28                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
     159: putfield      #13                 // Field byteArray:[B
     162: aload_0
     163: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
     166: aload_1
     167: invokestatic  #29                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
     170: i2l
     171: ladd
     172: iload_2
     173: i2l
     174: ladd
     175: putfield      #11                 // Field addressOffset:J
     178: aload_0
     179: iload_3
     180: putfield      #12                 // Field capacity:I
     183: return

  public void wrap(org.agrona.DirectBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #32,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
       7: putfield      #11                 // Field addressOffset:J
      10: aload_0
      11: aload_1
      12: invokeinterface #33,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
      17: putfield      #12                 // Field capacity:I
      20: aload_0
      21: aload_1
      22: invokeinterface #34,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
      27: putfield      #13                 // Field byteArray:[B
      30: aload_0
      31: aload_1
      32: invokeinterface #35,  1           // InterfaceMethod org/agrona/DirectBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
      37: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      40: return

  public void wrap(org.agrona.DirectBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          125
       6: aload_1
       7: invokeinterface #33,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
      12: istore        4
      14: iload_2
      15: ifeq          67
      18: iload_2
      19: iflt          30
      22: iload_2
      23: iload         4
      25: iconst_1
      26: isub
      27: if_icmple     67
      30: new           #16                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #17                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #19                 // String offset=
      43: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_2
      47: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: ldc           #31                 // String  not valid for buffer.capacity()=
      52: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload         4
      57: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      66: athrow
      67: iload_3
      68: iflt          79
      71: iload_3
      72: iload         4
      74: iload_2
      75: isub
      76: if_icmple     125
      79: new           #16                 // class java/lang/IllegalArgumentException
      82: dup
      83: new           #17                 // class java/lang/StringBuilder
      86: dup
      87: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      90: ldc           #19                 // String offset=
      92: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: iload_2
      96: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      99: ldc           #25                 // String  length=
     101: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: iload_3
     105: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     108: ldc           #31                 // String  not valid for buffer.capacity()=
     110: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: iload         4
     115: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     118: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     124: athrow
     125: aload_0
     126: aload_1
     127: invokeinterface #32,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
     132: iload_2
     133: i2l
     134: ladd
     135: putfield      #11                 // Field addressOffset:J
     138: aload_0
     139: iload_3
     140: putfield      #12                 // Field capacity:I
     143: aload_0
     144: aload_1
     145: invokeinterface #34,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
     150: putfield      #13                 // Field byteArray:[B
     153: aload_0
     154: aload_1
     155: invokeinterface #35,  1           // InterfaceMethod org/agrona/DirectBuffer.byteBuffer:()Ljava/nio/ByteBuffer;
     160: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
     163: return

  public void wrap(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #11                 // Field addressOffset:J
       5: aload_0
       6: iload_3
       7: putfield      #12                 // Field capacity:I
      10: aload_0
      11: aconst_null
      12: putfield      #13                 // Field byteArray:[B
      15: aload_0
      16: aconst_null
      17: putfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      20: return

  public long addressOffset();
    Code:
       0: aload_0
       1: getfield      #11                 // Field addressOffset:J
       4: lreturn

  public byte[] byteArray();
    Code:
       0: aload_0
       1: getfield      #13                 // Field byteArray:[B
       4: areturn

  public java.nio.ByteBuffer byteBuffer();
    Code:
       0: aload_0
       1: getfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public void setMemory(int, int, byte);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: aload_0
      13: getfield      #11                 // Field addressOffset:J
      16: iload_1
      17: i2l
      18: ladd
      19: lstore        4
      21: lconst_0
      22: lload         4
      24: lconst_1
      25: land
      26: lcmp
      27: ifne          71
      30: iload_2
      31: bipush        64
      33: if_icmple     71
      36: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      39: aload_0
      40: getfield      #13                 // Field byteArray:[B
      43: lload         4
      45: iload_3
      46: invokevirtual #38                 // Method sun/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
      49: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      52: aload_0
      53: getfield      #13                 // Field byteArray:[B
      56: lload         4
      58: lconst_1
      59: ladd
      60: iload_2
      61: iconst_1
      62: isub
      63: i2l
      64: iload_3
      65: invokevirtual #39                 // Method sun/misc/Unsafe.setMemory:(Ljava/lang/Object;JJB)V
      68: goto          86
      71: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      74: aload_0
      75: getfield      #13                 // Field byteArray:[B
      78: lload         4
      80: iload_2
      81: i2l
      82: iload_3
      83: invokevirtual #39                 // Method sun/misc/Unsafe.setMemory:(Ljava/lang/Object;JJB)V
      86: return

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #12                 // Field capacity:I
       4: ireturn

  public void checkLimit(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #12                 // Field capacity:I
       5: if_icmple     44
       8: ldc           #40                 // String limit=%d is beyond capacity=%d
      10: iconst_2
      11: anewarray     #41                 // class java/lang/Object
      14: dup
      15: iconst_0
      16: iload_1
      17: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_1
      23: aload_0
      24: getfield      #12                 // Field capacity:I
      27: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: aastore
      31: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      34: astore_2
      35: new           #44                 // class java/lang/IndexOutOfBoundsException
      38: dup
      39: aload_2
      40: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      43: athrow
      44: return

  public boolean isExpandable();
    Code:
       0: iconst_0
       1: ireturn

  public void verifyAlignment();
    Code:
       0: lconst_0
       1: aload_0
       2: getfield      #11                 // Field addressOffset:J
       5: ldc2_w        #47                 // long 7l
       8: land
       9: lcmp
      10: ifeq          48
      13: new           #49                 // class java/lang/IllegalStateException
      16: dup
      17: ldc           #50                 // String AtomicBuffer is not correctly aligned: addressOffset=%d in not divisible by %d
      19: iconst_2
      20: anewarray     #41                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #11                 // Field addressOffset:J
      29: invokestatic  #51                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: dup
      34: iconst_1
      35: bipush        8
      37: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #52                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  public long getLong(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: invokevirtual #53                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      30: lstore_3
      31: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      34: aload_2
      35: if_acmpeq     43
      38: lload_3
      39: invokestatic  #55                 // Method java/lang/Long.reverseBytes:(J)J
      42: lstore_3
      43: lload_3
      44: lreturn

  public void putLong(int, long, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: lload_2
      14: lstore        5
      16: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      19: aload         4
      21: if_acmpeq     31
      24: lload         5
      26: invokestatic  #55                 // Method java/lang/Long.reverseBytes:(J)J
      29: lstore        5
      31: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      34: aload_0
      35: getfield      #13                 // Field byteArray:[B
      38: aload_0
      39: getfield      #11                 // Field addressOffset:J
      42: iload_1
      43: i2l
      44: ladd
      45: lload         5
      47: invokevirtual #56                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      50: return

  public long getLong(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: invokevirtual #53                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      30: lreturn

  public void putLong(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: invokevirtual #56                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      31: return

  public long getLongVolatile(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: invokevirtual #57                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      30: lreturn

  public void putLongVolatile(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: invokevirtual #58                 // Method sun/misc/Unsafe.putLongVolatile:(Ljava/lang/Object;JJ)V
      31: return

  public void putLongOrdered(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: invokevirtual #59                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      31: return

  public long addLongOrdered(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_0
      14: getfield      #11                 // Field addressOffset:J
      17: iload_1
      18: i2l
      19: ladd
      20: lstore        4
      22: aload_0
      23: getfield      #13                 // Field byteArray:[B
      26: astore        6
      28: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      31: aload         6
      33: lload         4
      35: invokevirtual #53                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      38: lstore        7
      40: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      43: aload         6
      45: lload         4
      47: lload         7
      49: lload_2
      50: ladd
      51: invokevirtual #59                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      54: lload         7
      56: lreturn

  public boolean compareAndSetLong(int, long, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: lload         4
      30: invokevirtual #60                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      33: ireturn

  public long getAndSetLong(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: invokevirtual #61                 // Method sun/misc/Unsafe.getAndSetLong:(Ljava/lang/Object;JJ)J
      31: lreturn

  public long getAndAddLong(int, long);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: lload_2
      28: invokevirtual #62                 // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
      31: lreturn

  public int getInt(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #63                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      29: istore_3
      30: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      33: aload_2
      34: if_acmpeq     42
      37: iload_3
      38: invokestatic  #64                 // Method java/lang/Integer.reverseBytes:(I)I
      41: istore_3
      42: iload_3
      43: ireturn

  public void putInt(int, int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: iload_2
      13: istore        4
      15: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload_3
      19: if_acmpeq     29
      22: iload         4
      24: invokestatic  #64                 // Method java/lang/Integer.reverseBytes:(I)I
      27: istore        4
      29: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      32: aload_0
      33: getfield      #13                 // Field byteArray:[B
      36: aload_0
      37: getfield      #11                 // Field addressOffset:J
      40: iload_1
      41: i2l
      42: ladd
      43: iload         4
      45: invokevirtual #65                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      48: return

  public int getInt(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #63                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      29: ireturn

  public void putInt(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #65                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      30: return

  public int getIntVolatile(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #66                 // Method sun/misc/Unsafe.getIntVolatile:(Ljava/lang/Object;J)I
      29: ireturn

  public void putIntVolatile(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #67                 // Method sun/misc/Unsafe.putIntVolatile:(Ljava/lang/Object;JI)V
      30: return

  public void putIntOrdered(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #68                 // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
      30: return

  public int addIntOrdered(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: aload_0
      13: getfield      #11                 // Field addressOffset:J
      16: iload_1
      17: i2l
      18: ladd
      19: lstore_3
      20: aload_0
      21: getfield      #13                 // Field byteArray:[B
      24: astore        5
      26: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      29: aload         5
      31: lload_3
      32: invokevirtual #63                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      35: istore        6
      37: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      40: aload         5
      42: lload_3
      43: iload         6
      45: iload_2
      46: iadd
      47: invokevirtual #68                 // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
      50: iload         6
      52: ireturn

  public boolean compareAndSetInt(int, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: iload_3
      28: invokevirtual #69                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      31: ireturn

  public int getAndSetInt(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #70                 // Method sun/misc/Unsafe.getAndSetInt:(Ljava/lang/Object;JI)I
      30: ireturn

  public int getAndAddInt(int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #71                 // Method sun/misc/Unsafe.getAndAddInt:(Ljava/lang/Object;JI)I
      30: ireturn

  public double getDouble(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      16: aload_2
      17: if_acmpeq     46
      20: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      23: aload_0
      24: getfield      #13                 // Field byteArray:[B
      27: aload_0
      28: getfield      #11                 // Field addressOffset:J
      31: iload_1
      32: i2l
      33: ladd
      34: invokevirtual #53                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      37: lstore_3
      38: lload_3
      39: invokestatic  #55                 // Method java/lang/Long.reverseBytes:(J)J
      42: invokestatic  #72                 // Method java/lang/Double.longBitsToDouble:(J)D
      45: dreturn
      46: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      49: aload_0
      50: getfield      #13                 // Field byteArray:[B
      53: aload_0
      54: getfield      #11                 // Field addressOffset:J
      57: iload_1
      58: i2l
      59: ladd
      60: invokevirtual #73                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      63: dreturn

  public void putDouble(int, double, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      16: aload         4
      18: if_acmpeq     52
      21: dload_2
      22: invokestatic  #74                 // Method java/lang/Double.doubleToRawLongBits:(D)J
      25: invokestatic  #55                 // Method java/lang/Long.reverseBytes:(J)J
      28: lstore        5
      30: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      33: aload_0
      34: getfield      #13                 // Field byteArray:[B
      37: aload_0
      38: getfield      #11                 // Field addressOffset:J
      41: iload_1
      42: i2l
      43: ladd
      44: lload         5
      46: invokevirtual #56                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      49: goto          70
      52: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      55: aload_0
      56: getfield      #13                 // Field byteArray:[B
      59: aload_0
      60: getfield      #11                 // Field addressOffset:J
      63: iload_1
      64: i2l
      65: ladd
      66: dload_2
      67: invokevirtual #75                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      70: return

  public double getDouble(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: invokevirtual #73                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      30: dreturn

  public void putDouble(int, double);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: iload_1
       8: bipush        8
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aload_0
      17: getfield      #13                 // Field byteArray:[B
      20: aload_0
      21: getfield      #11                 // Field addressOffset:J
      24: iload_1
      25: i2l
      26: ladd
      27: dload_2
      28: invokevirtual #75                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      31: return

  public float getFloat(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      15: aload_2
      16: if_acmpeq     45
      19: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      22: aload_0
      23: getfield      #13                 // Field byteArray:[B
      26: aload_0
      27: getfield      #11                 // Field addressOffset:J
      30: iload_1
      31: i2l
      32: ladd
      33: invokevirtual #63                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      36: istore_3
      37: iload_3
      38: invokestatic  #64                 // Method java/lang/Integer.reverseBytes:(I)I
      41: invokestatic  #76                 // Method java/lang/Float.intBitsToFloat:(I)F
      44: freturn
      45: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      48: aload_0
      49: getfield      #13                 // Field byteArray:[B
      52: aload_0
      53: getfield      #11                 // Field addressOffset:J
      56: iload_1
      57: i2l
      58: ladd
      59: invokevirtual #77                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      62: freturn

  public void putFloat(int, float, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      15: aload_3
      16: if_acmpeq     50
      19: fload_2
      20: invokestatic  #78                 // Method java/lang/Float.floatToRawIntBits:(F)I
      23: invokestatic  #64                 // Method java/lang/Integer.reverseBytes:(I)I
      26: istore        4
      28: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      31: aload_0
      32: getfield      #13                 // Field byteArray:[B
      35: aload_0
      36: getfield      #11                 // Field addressOffset:J
      39: iload_1
      40: i2l
      41: ladd
      42: iload         4
      44: invokevirtual #65                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      47: goto          68
      50: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      53: aload_0
      54: getfield      #13                 // Field byteArray:[B
      57: aload_0
      58: getfield      #11                 // Field addressOffset:J
      61: iload_1
      62: i2l
      63: ladd
      64: fload_2
      65: invokevirtual #79                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      68: return

  public float getFloat(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #77                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      29: freturn

  public void putFloat(int, float);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_4
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: fload_2
      27: invokevirtual #79                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      30: return

  public short getShort(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #80                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      29: istore_3
      30: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      33: aload_2
      34: if_acmpeq     42
      37: iload_3
      38: invokestatic  #81                 // Method java/lang/Short.reverseBytes:(S)S
      41: istore_3
      42: iload_3
      43: ireturn

  public void putShort(int, short, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: iload_2
      13: istore        4
      15: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload_3
      19: if_acmpeq     29
      22: iload         4
      24: invokestatic  #81                 // Method java/lang/Short.reverseBytes:(S)S
      27: istore        4
      29: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      32: aload_0
      33: getfield      #13                 // Field byteArray:[B
      36: aload_0
      37: getfield      #11                 // Field addressOffset:J
      40: iload_1
      41: i2l
      42: ladd
      43: iload         4
      45: invokevirtual #82                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      48: return

  public short getShort(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #80                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      29: ireturn

  public void putShort(int, short);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #82                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      30: return

  public short getShortVolatile(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #83                 // Method sun/misc/Unsafe.getShortVolatile:(Ljava/lang/Object;J)S
      29: ireturn

  public void putShortVolatile(int, short);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #84                 // Method sun/misc/Unsafe.putShortVolatile:(Ljava/lang/Object;JS)V
      30: return

  public byte getByte(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: iload_1
       8: invokespecial #85                 // Method boundsCheck:(I)V
      11: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getfield      #13                 // Field byteArray:[B
      18: aload_0
      19: getfield      #11                 // Field addressOffset:J
      22: iload_1
      23: i2l
      24: ladd
      25: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      28: ireturn

  public void putByte(int, byte);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: iload_1
       8: invokespecial #85                 // Method boundsCheck:(I)V
      11: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getfield      #13                 // Field byteArray:[B
      18: aload_0
      19: getfield      #11                 // Field addressOffset:J
      22: iload_1
      23: i2l
      24: ladd
      25: iload_2
      26: invokevirtual #38                 // Method sun/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
      29: return

  public byte getByteVolatile(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: iload_1
       8: invokespecial #85                 // Method boundsCheck:(I)V
      11: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getfield      #13                 // Field byteArray:[B
      18: aload_0
      19: getfield      #11                 // Field addressOffset:J
      22: iload_1
      23: i2l
      24: ladd
      25: invokevirtual #87                 // Method sun/misc/Unsafe.getByteVolatile:(Ljava/lang/Object;J)B
      28: ireturn

  public void putByteVolatile(int, byte);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: iload_1
       8: invokespecial #85                 // Method boundsCheck:(I)V
      11: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aload_0
      15: getfield      #13                 // Field byteArray:[B
      18: aload_0
      19: getfield      #11                 // Field addressOffset:J
      22: iload_1
      23: i2l
      24: ladd
      25: iload_2
      26: invokevirtual #88                 // Method sun/misc/Unsafe.putByteVolatile:(Ljava/lang/Object;JB)V
      29: return

  public void getBytes(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #89                 // Method getBytes:(I[BII)V
       9: return

  public void getBytes(int, byte[], int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: iload_1
       8: iload         4
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_2
      14: iload_3
      15: i2l
      16: iload         4
      18: invokestatic  #90                 // Method org/agrona/BufferUtil.boundsCheck:([BJI)V
      21: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aload_0
      25: getfield      #13                 // Field byteArray:[B
      28: aload_0
      29: getfield      #11                 // Field addressOffset:J
      32: iload_1
      33: i2l
      34: ladd
      35: aload_2
      36: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      39: iload_3
      40: i2l
      41: ladd
      42: iload         4
      44: i2l
      45: invokevirtual #91                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      48: return

  public void getBytes(int, org.agrona.MutableDirectBuffer, int, int);
    Code:
       0: aload_2
       1: iload_3
       2: aload_0
       3: iload_1
       4: iload         4
       6: invokeinterface #92,  5           // InterfaceMethod org/agrona/MutableDirectBuffer.putBytes:(ILorg/agrona/DirectBuffer;II)V
      11: return

  public void getBytes(int, java.nio.ByteBuffer, int);
    Code:
       0: aload_2
       1: invokevirtual #93                 // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: iload_1
       8: aload_2
       9: iload         4
      11: iload_3
      12: invokevirtual #94                 // Method getBytes:(ILjava/nio/ByteBuffer;II)V
      15: aload_2
      16: iload         4
      18: iload_3
      19: iadd
      20: invokevirtual #95                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: return

  public void getBytes(int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: iload_1
       8: iload         4
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_2
      14: iload_3
      15: i2l
      16: iload         4
      18: invokestatic  #96                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      21: aload_2
      22: invokevirtual #26                 // Method java/nio/ByteBuffer.isDirect:()Z
      25: ifeq          40
      28: aconst_null
      29: astore        5
      31: aload_2
      32: invokestatic  #27                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      35: lstore        6
      37: goto          57
      40: aload_2
      41: invokestatic  #28                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
      44: astore        5
      46: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      49: aload_2
      50: invokestatic  #29                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
      53: i2l
      54: ladd
      55: lstore        6
      57: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      60: aload_0
      61: getfield      #13                 // Field byteArray:[B
      64: aload_0
      65: getfield      #11                 // Field addressOffset:J
      68: iload_1
      69: i2l
      70: ladd
      71: aload         5
      73: lload         6
      75: iload_3
      76: i2l
      77: ladd
      78: iload         4
      80: i2l
      81: invokevirtual #91                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      84: return

  public void putBytes(int, byte[]);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: iconst_0
       4: aload_2
       5: arraylength
       6: invokevirtual #97                 // Method putBytes:(I[BII)V
       9: return

  public void putBytes(int, byte[], int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: iload_1
       8: iload         4
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_2
      14: iload_3
      15: i2l
      16: iload         4
      18: invokestatic  #90                 // Method org/agrona/BufferUtil.boundsCheck:([BJI)V
      21: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aload_2
      25: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      28: iload_3
      29: i2l
      30: ladd
      31: aload_0
      32: getfield      #13                 // Field byteArray:[B
      35: aload_0
      36: getfield      #11                 // Field addressOffset:J
      39: iload_1
      40: i2l
      41: ladd
      42: iload         4
      44: i2l
      45: invokevirtual #91                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      48: return

  public void putBytes(int, java.nio.ByteBuffer, int);
    Code:
       0: aload_2
       1: invokevirtual #93                 // Method java/nio/ByteBuffer.position:()I
       4: istore        4
       6: aload_0
       7: iload_1
       8: aload_2
       9: iload         4
      11: iload_3
      12: invokevirtual #98                 // Method putBytes:(ILjava/nio/ByteBuffer;II)V
      15: aload_2
      16: iload         4
      18: iload_3
      19: iadd
      20: invokevirtual #95                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      23: pop
      24: return

  public void putBytes(int, java.nio.ByteBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: iload_1
       8: iload         4
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_2
      14: iload_3
      15: i2l
      16: iload         4
      18: invokestatic  #96                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      21: aload_2
      22: invokevirtual #26                 // Method java/nio/ByteBuffer.isDirect:()Z
      25: ifeq          40
      28: aconst_null
      29: astore        5
      31: aload_2
      32: invokestatic  #27                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      35: lstore        6
      37: goto          57
      40: aload_2
      41: invokestatic  #28                 // Method org/agrona/BufferUtil.array:(Ljava/nio/ByteBuffer;)[B
      44: astore        5
      46: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      49: aload_2
      50: invokestatic  #29                 // Method org/agrona/BufferUtil.arrayOffset:(Ljava/nio/ByteBuffer;)I
      53: i2l
      54: ladd
      55: lstore        6
      57: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      60: aload         5
      62: lload         6
      64: iload_3
      65: i2l
      66: ladd
      67: aload_0
      68: getfield      #13                 // Field byteArray:[B
      71: aload_0
      72: getfield      #11                 // Field addressOffset:J
      75: iload_1
      76: i2l
      77: ladd
      78: iload         4
      80: i2l
      81: invokevirtual #91                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      84: return

  public void putBytes(int, org.agrona.DirectBuffer, int, int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          22
       6: aload_0
       7: iload_1
       8: iload         4
      10: invokespecial #36                 // Method boundsCheck0:(II)V
      13: aload_2
      14: iload_3
      15: iload         4
      17: invokeinterface #99,  3           // InterfaceMethod org/agrona/DirectBuffer.boundsCheck:(II)V
      22: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      25: aload_2
      26: invokeinterface #34,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
      31: aload_2
      32: invokeinterface #32,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
      37: iload_3
      38: i2l
      39: ladd
      40: aload_0
      41: getfield      #13                 // Field byteArray:[B
      44: aload_0
      45: getfield      #11                 // Field addressOffset:J
      48: iload_1
      49: i2l
      50: ladd
      51: iload         4
      53: i2l
      54: invokevirtual #91                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      57: return

  public char getChar(int, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #100                // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      29: istore_3
      30: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      33: aload_2
      34: if_acmpeq     44
      37: iload_3
      38: i2s
      39: invokestatic  #81                 // Method java/lang/Short.reverseBytes:(S)S
      42: i2c
      43: istore_3
      44: iload_3
      45: ireturn

  public void putChar(int, char, java.nio.ByteOrder);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: iload_2
      13: istore        4
      15: getstatic     #54                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload_3
      19: if_acmpeq     31
      22: iload         4
      24: i2s
      25: invokestatic  #81                 // Method java/lang/Short.reverseBytes:(S)S
      28: i2c
      29: istore        4
      31: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      34: aload_0
      35: getfield      #13                 // Field byteArray:[B
      38: aload_0
      39: getfield      #11                 // Field addressOffset:J
      42: iload_1
      43: i2l
      44: ladd
      45: iload         4
      47: invokevirtual #101                // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      50: return

  public char getChar(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #100                // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      29: ireturn

  public void putChar(int, char);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #101                // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      30: return

  public char getCharVolatile(int);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: invokevirtual #102                // Method sun/misc/Unsafe.getCharVolatile:(Ljava/lang/Object;J)C
      29: ireturn

  public void putCharVolatile(int, char);
    Code:
       0: getstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: iload_1
       8: iconst_2
       9: invokespecial #36                 // Method boundsCheck0:(II)V
      12: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aload_0
      16: getfield      #13                 // Field byteArray:[B
      19: aload_0
      20: getfield      #11                 // Field addressOffset:J
      23: iload_1
      24: i2l
      25: ladd
      26: iload_2
      27: invokevirtual #103                // Method sun/misc/Unsafe.putCharVolatile:(Ljava/lang/Object;JC)V
      30: return

  public java.lang.String getStringUtf8(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #104                // Method getInt:(I)I
       5: istore_2
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokevirtual #105                // Method getStringUtf8:(II)Ljava/lang/String;
      12: areturn

  public java.lang.String getStringUtf8(int, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokevirtual #106                // Method getInt:(ILjava/nio/ByteOrder;)I
       6: istore_3
       7: aload_0
       8: iload_1
       9: iload_3
      10: invokevirtual #105                // Method getStringUtf8:(II)Ljava/lang/String;
      13: areturn

  public java.lang.String getStringUtf8(int, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: iload_1
       6: iconst_4
       7: iadd
       8: aload_3
       9: invokevirtual #107                // Method getBytes:(I[B)V
      12: new           #108                // class java/lang/String
      15: dup
      16: aload_3
      17: getstatic     #109                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      20: invokespecial #110                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      23: areturn

  public int putStringUtf8(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: ldc           #112                // int 2147483647
       5: invokevirtual #113                // Method putStringUtf8:(ILjava/lang/String;I)I
       8: ireturn

  public int putStringUtf8(int, java.lang.String, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: ldc           #112                // int 2147483647
       6: invokevirtual #114                // Method putStringUtf8:(ILjava/lang/String;Ljava/nio/ByteOrder;I)I
       9: ireturn

  public int putStringUtf8(int, java.lang.String, int);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #109                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #115                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #116                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        4
      19: aload         4
      21: arraylength
      22: iload_3
      23: if_icmple     53
      26: new           #16                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #17                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #117                // String Encoded string larger than maximum size:
      39: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: iload_3
      43: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      52: athrow
      53: aload_0
      54: iload_1
      55: aload         4
      57: arraylength
      58: invokevirtual #118                // Method putInt:(II)V
      61: aload_0
      62: iload_1
      63: iconst_4
      64: iadd
      65: aload         4
      67: invokevirtual #119                // Method putBytes:(I[B)V
      70: iconst_4
      71: aload         4
      73: arraylength
      74: iadd
      75: ireturn

  public int putStringUtf8(int, java.lang.String, java.nio.ByteOrder, int);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #109                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #115                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #116                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        5
      19: aload         5
      21: arraylength
      22: iload         4
      24: if_icmple     55
      27: new           #16                 // class java/lang/IllegalArgumentException
      30: dup
      31: new           #17                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #117                // String Encoded string larger than maximum size:
      40: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload         4
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #24                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: iload_1
      57: aload         5
      59: arraylength
      60: aload_3
      61: invokevirtual #120                // Method putInt:(IILjava/nio/ByteOrder;)V
      64: aload_0
      65: iload_1
      66: iconst_4
      67: iadd
      68: aload         5
      70: invokevirtual #119                // Method putBytes:(I[B)V
      73: iconst_4
      74: aload         5
      76: arraylength
      77: iadd
      78: ireturn

  public java.lang.String getStringWithoutLengthUtf8(int, int);
    Code:
       0: iload_2
       1: newarray       byte
       3: astore_3
       4: aload_0
       5: iload_1
       6: aload_3
       7: invokevirtual #107                // Method getBytes:(I[B)V
      10: new           #108                // class java/lang/String
      13: dup
      14: aload_3
      15: getstatic     #109                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      18: invokespecial #110                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      21: areturn

  public int putStringWithoutLengthUtf8(int, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        14
       4: aload_2
       5: getstatic     #109                // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #115                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #116                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore_3
      18: aload_0
      19: iload_1
      20: aload_3
      21: invokevirtual #119                // Method putBytes:(I[B)V
      24: aload_3
      25: arraylength
      26: ireturn

  private void boundsCheck(int);
    Code:
       0: iload_1
       1: iflt          12
       4: iload_1
       5: aload_0
       6: getfield      #12                 // Field capacity:I
       9: if_icmplt     46
      12: new           #44                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: ldc           #121                // String index=%d, capacity=%d
      18: iconst_2
      19: anewarray     #41                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: iload_1
      25: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: aastore
      29: dup
      30: iconst_1
      31: aload_0
      32: getfield      #12                 // Field capacity:I
      35: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: aastore
      39: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      42: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      45: athrow
      46: return

  private void boundsCheck0(int, int);
    Code:
       0: iload_1
       1: i2l
       2: iload_2
       3: i2l
       4: ladd
       5: lstore_3
       6: iload_1
       7: iflt          20
      10: lload_3
      11: aload_0
      12: getfield      #12                 // Field capacity:I
      15: i2l
      16: lcmp
      17: ifle          61
      20: new           #44                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: ldc           #122                // String index=%d, length=%d, capacity=%d
      26: iconst_3
      27: anewarray     #41                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_1
      33: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_1
      39: iload_2
      40: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: aastore
      44: dup
      45: iconst_2
      46: aload_0
      47: getfield      #12                 // Field capacity:I
      50: invokestatic  #42                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #43                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      57: invokespecial #45                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      60: athrow
      61: return

  public void boundsCheck(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokespecial #36                 // Method boundsCheck0:(II)V
       6: return

  public int wrapAdjustment();
    Code:
       0: aload_0
       1: getfield      #13                 // Field byteArray:[B
       4: ifnull        13
       7: getstatic     #10                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      10: goto          20
      13: aload_0
      14: getfield      #14                 // Field byteBuffer:Ljava/nio/ByteBuffer;
      17: invokestatic  #27                 // Method org/agrona/BufferUtil.address:(Ljava/nio/ByteBuffer;)J
      20: lstore_1
      21: aload_0
      22: getfield      #11                 // Field addressOffset:J
      25: lload_1
      26: lsub
      27: l2i
      28: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #46                 // class org/agrona/concurrent/UnsafeBuffer
      28: astore_2
      29: aload_0
      30: getfield      #12                 // Field capacity:I
      33: aload_2
      34: getfield      #12                 // Field capacity:I
      37: if_icmpeq     42
      40: iconst_0
      41: ireturn
      42: aload_0
      43: getfield      #13                 // Field byteArray:[B
      46: astore_3
      47: aload_2
      48: getfield      #13                 // Field byteArray:[B
      51: astore        4
      53: aload_0
      54: getfield      #11                 // Field addressOffset:J
      57: lstore        5
      59: aload_2
      60: getfield      #11                 // Field addressOffset:J
      63: lstore        7
      65: iconst_0
      66: istore        9
      68: aload_0
      69: getfield      #12                 // Field capacity:I
      72: istore        10
      74: iload         9
      76: iload         10
      78: if_icmpge     119
      81: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      84: aload_3
      85: lload         5
      87: iload         9
      89: i2l
      90: ladd
      91: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      94: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      97: aload         4
      99: lload         7
     101: iload         9
     103: i2l
     104: ladd
     105: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
     108: if_icmpeq     113
     111: iconst_0
     112: ireturn
     113: iinc          9, 1
     116: goto          74
     119: iconst_1
     120: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: istore_1
       2: aload_0
       3: getfield      #13                 // Field byteArray:[B
       6: astore_2
       7: aload_0
       8: getfield      #11                 // Field addressOffset:J
      11: lstore_3
      12: iconst_0
      13: istore        5
      15: aload_0
      16: getfield      #12                 // Field capacity:I
      19: istore        6
      21: iload         5
      23: iload         6
      25: if_icmpge     52
      28: bipush        31
      30: iload_1
      31: imul
      32: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      35: aload_2
      36: lload_3
      37: iload         5
      39: i2l
      40: ladd
      41: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      44: iadd
      45: istore_1
      46: iinc          5, 1
      49: goto          21
      52: iload_1
      53: ireturn

  public int compareTo(org.agrona.DirectBuffer);
    Code:
       0: aload_0
       1: getfield      #12                 // Field capacity:I
       4: istore_2
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod org/agrona/DirectBuffer.capacity:()I
      11: istore_3
      12: aload_0
      13: getfield      #13                 // Field byteArray:[B
      16: astore        4
      18: aload_1
      19: invokeinterface #34,  1           // InterfaceMethod org/agrona/DirectBuffer.byteArray:()[B
      24: astore        5
      26: aload_0
      27: getfield      #11                 // Field addressOffset:J
      30: lstore        6
      32: aload_1
      33: invokeinterface #32,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
      38: lstore        8
      40: iconst_0
      41: istore        10
      43: iload_2
      44: iload_3
      45: invokestatic  #124                // Method java/lang/Math.min:(II)I
      48: istore        11
      50: iload         10
      52: iload         11
      54: if_icmpge     105
      57: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      60: aload         4
      62: lload         6
      64: iload         10
      66: i2l
      67: ladd
      68: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      71: getstatic     #37                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      74: aload         5
      76: lload         8
      78: iload         10
      80: i2l
      81: ladd
      82: invokevirtual #86                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      85: invokestatic  #125                // Method java/lang/Byte.compare:(BB)I
      88: istore        12
      90: iconst_0
      91: iload         12
      93: if_icmpeq     99
      96: iload         12
      98: ireturn
      99: iinc          10, 1
     102: goto          50
     105: iload_2
     106: iload_3
     107: if_icmpeq     114
     110: iload_2
     111: iload_3
     112: isub
     113: ireturn
     114: iconst_0
     115: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #126                // class org/agrona/DirectBuffer
       5: invokevirtual #127                // Method compareTo:(Lorg/agrona/DirectBuffer;)I
       8: ireturn

  static {};
    Code:
       0: ldc           #128                // String agrona.disable.bounds.checks
       2: invokestatic  #129                // Method java/lang/Boolean.getBoolean:(Ljava/lang/String;)Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #15                 // Field SHOULD_BOUNDS_CHECK:Z
      16: return
}
