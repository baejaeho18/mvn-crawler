Compiled from "MappedResizeableBuffer.java"
public class org.agrona.concurrent.MappedResizeableBuffer implements java.lang.AutoCloseable {
  private long addressOffset;

  private long capacity;

  private java.nio.channels.FileChannel fileChannel;

  public org.agrona.concurrent.MappedResizeableBuffer(java.nio.channels.FileChannel, long, long);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       9: aload_0
      10: lload_2
      11: lload         4
      13: invokespecial #5                  // Method map:(JJ)V
      16: return

  public void close();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method unmap:()V
       4: return

  public void resize(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifgt          33
       6: new           #7                  // class java/lang/IllegalArgumentException
       9: dup
      10: new           #8                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #10                 // String Length must be a positive long, but is:
      19: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: lload_1
      23: invokevirtual #12                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: aload_0
      34: invokespecial #6                  // Method unmap:()V
      37: aload_0
      38: lconst_0
      39: lload_1
      40: invokespecial #5                  // Method map:(JJ)V
      43: return

  public void wrap(long, long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #15                 // Field addressOffset:J
       5: lcmp
       6: ifne          19
       9: lload_3
      10: aload_0
      11: getfield      #16                 // Field capacity:J
      14: lcmp
      15: ifne          19
      18: return
      19: aload_0
      20: aload_0
      21: getfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      24: lload_1
      25: lload_3
      26: invokevirtual #17                 // Method wrap:(Ljava/nio/channels/FileChannel;JJ)V
      29: return

  public void wrap(java.nio.channels.FileChannel, long, long);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method unmap:()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       9: aload_0
      10: lload_2
      11: lload         4
      13: invokespecial #5                  // Method map:(JJ)V
      16: return

  public long addressOffset();
    Code:
       0: aload_0
       1: getfield      #15                 // Field addressOffset:J
       4: lreturn

  public java.nio.channels.FileChannel fileChannel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: areturn

  public void setMemory(long, int, byte);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iload_3
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: i2l
      24: iload         4
      26: invokevirtual #21                 // Method sun/misc/Unsafe.setMemory:(Ljava/lang/Object;JJB)V
      29: return

  public long capacity();
    Code:
       0: aload_0
       1: getfield      #16                 // Field capacity:J
       4: lreturn

  public void checkLimit(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #16                 // Field capacity:J
       5: lcmp
       6: ifle          45
       9: ldc           #22                 // String limit=%d is beyond capacity=%d
      11: iconst_2
      12: anewarray     #23                 // class java/lang/Object
      15: dup
      16: iconst_0
      17: lload_1
      18: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: aastore
      22: dup
      23: iconst_1
      24: aload_0
      25: getfield      #16                 // Field capacity:J
      28: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      35: astore_3
      36: new           #26                 // class java/lang/IndexOutOfBoundsException
      39: dup
      40: aload_3
      41: invokespecial #27                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  public void verifyAlignment();
    Code:
       0: lconst_0
       1: aload_0
       2: getfield      #15                 // Field addressOffset:J
       5: ldc2_w        #28                 // long 7l
       8: land
       9: lcmp
      10: ifeq          48
      13: new           #30                 // class java/lang/IllegalStateException
      16: dup
      17: ldc           #31                 // String AtomicBuffer is not correctly aligned: addressOffset=%d in not divisible by %d
      19: iconst_2
      20: anewarray     #23                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: aload_0
      26: getfield      #15                 // Field addressOffset:J
      29: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      32: aastore
      33: dup
      34: iconst_1
      35: bipush        8
      37: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #33                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: return

  public long getLong(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: invokevirtual #34                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      26: lstore        4
      28: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      31: aload_3
      32: if_acmpeq     42
      35: lload         4
      37: invokestatic  #36                 // Method java/lang/Long.reverseBytes:(J)J
      40: lstore        4
      42: lload         4
      44: lreturn

  public void putLong(long, long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: lload_3
      14: lstore        6
      16: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      19: aload         5
      21: if_acmpeq     31
      24: lload         6
      26: invokestatic  #36                 // Method java/lang/Long.reverseBytes:(J)J
      29: lstore        6
      31: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      34: aconst_null
      35: aload_0
      36: getfield      #15                 // Field addressOffset:J
      39: lload_1
      40: ladd
      41: lload         6
      43: invokevirtual #37                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      46: return

  public long getLong(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: invokevirtual #34                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      26: lreturn

  public void putLong(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: invokevirtual #37                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      27: return

  public long getLongVolatile(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: invokevirtual #38                 // Method sun/misc/Unsafe.getLongVolatile:(Ljava/lang/Object;J)J
      26: lreturn

  public void putLongVolatile(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: invokevirtual #39                 // Method sun/misc/Unsafe.putLongVolatile:(Ljava/lang/Object;JJ)V
      27: return

  public void putLongOrdered(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: invokevirtual #40                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      27: return

  public long addLongOrdered(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: aload_0
      14: getfield      #15                 // Field addressOffset:J
      17: lload_1
      18: ladd
      19: lstore        5
      21: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aconst_null
      25: lload         5
      27: invokevirtual #34                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      30: lstore        7
      32: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      35: aconst_null
      36: lload         5
      38: lload         7
      40: lload_3
      41: ladd
      42: invokevirtual #40                 // Method sun/misc/Unsafe.putOrderedLong:(Ljava/lang/Object;JJ)V
      45: lload         7
      47: lreturn

  public boolean compareAndSetLong(long, long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: lload         5
      26: invokevirtual #41                 // Method sun/misc/Unsafe.compareAndSwapLong:(Ljava/lang/Object;JJJ)Z
      29: ireturn

  public long getAndSetLong(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: invokevirtual #42                 // Method sun/misc/Unsafe.getAndSetLong:(Ljava/lang/Object;JJ)J
      27: lreturn

  public long getAndAddLong(long, long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: lload_3
      24: invokevirtual #43                 // Method sun/misc/Unsafe.getAndAddLong:(Ljava/lang/Object;JJ)J
      27: lreturn

  public int getInt(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #44                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      25: istore        4
      27: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      30: aload_3
      31: if_acmpeq     41
      34: iload         4
      36: invokestatic  #45                 // Method java/lang/Integer.reverseBytes:(I)I
      39: istore        4
      41: iload         4
      43: ireturn

  public void putInt(long, int, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: iload_3
      13: istore        5
      15: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload         4
      20: if_acmpeq     30
      23: iload         5
      25: invokestatic  #45                 // Method java/lang/Integer.reverseBytes:(I)I
      28: istore        5
      30: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      33: aconst_null
      34: aload_0
      35: getfield      #15                 // Field addressOffset:J
      38: lload_1
      39: ladd
      40: iload         5
      42: invokevirtual #46                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      45: return

  public int getInt(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #44                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      25: ireturn

  public void putInt(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #46                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      26: return

  public int getIntVolatile(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #47                 // Method sun/misc/Unsafe.getIntVolatile:(Ljava/lang/Object;J)I
      25: ireturn

  public void putIntVolatile(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #48                 // Method sun/misc/Unsafe.putIntVolatile:(Ljava/lang/Object;JI)V
      26: return

  public void putIntOrdered(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #49                 // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
      26: return

  public int addIntOrdered(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: aload_0
      13: getfield      #15                 // Field addressOffset:J
      16: lload_1
      17: ladd
      18: lstore        4
      20: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      23: aconst_null
      24: lload         4
      26: invokevirtual #44                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      29: istore        6
      31: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      34: aconst_null
      35: lload         4
      37: iload         6
      39: iload_3
      40: iadd
      41: invokevirtual #49                 // Method sun/misc/Unsafe.putOrderedInt:(Ljava/lang/Object;JI)V
      44: iload         6
      46: ireturn

  public boolean compareAndSetInt(long, int, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: iload         4
      25: invokevirtual #50                 // Method sun/misc/Unsafe.compareAndSwapInt:(Ljava/lang/Object;JII)Z
      28: ireturn

  public int getAndSetInt(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #51                 // Method sun/misc/Unsafe.getAndSetInt:(Ljava/lang/Object;JI)I
      26: ireturn

  public int getAndAddInt(long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #52                 // Method sun/misc/Unsafe.getAndAddInt:(Ljava/lang/Object;JI)I
      26: ireturn

  public double getDouble(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      16: aload_3
      17: if_acmpeq     44
      20: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      23: aconst_null
      24: aload_0
      25: getfield      #15                 // Field addressOffset:J
      28: lload_1
      29: ladd
      30: invokevirtual #34                 // Method sun/misc/Unsafe.getLong:(Ljava/lang/Object;J)J
      33: lstore        4
      35: lload         4
      37: invokestatic  #36                 // Method java/lang/Long.reverseBytes:(J)J
      40: invokestatic  #53                 // Method java/lang/Double.longBitsToDouble:(J)D
      43: dreturn
      44: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      47: aconst_null
      48: aload_0
      49: getfield      #15                 // Field addressOffset:J
      52: lload_1
      53: ladd
      54: invokevirtual #54                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      57: dreturn

  public void putDouble(long, double, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      16: aload         5
      18: if_acmpeq     48
      21: dload_3
      22: invokestatic  #55                 // Method java/lang/Double.doubleToRawLongBits:(D)J
      25: invokestatic  #36                 // Method java/lang/Long.reverseBytes:(J)J
      28: lstore        6
      30: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      33: aconst_null
      34: aload_0
      35: getfield      #15                 // Field addressOffset:J
      38: lload_1
      39: ladd
      40: lload         6
      42: invokevirtual #37                 // Method sun/misc/Unsafe.putLong:(Ljava/lang/Object;JJ)V
      45: goto          62
      48: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      51: aconst_null
      52: aload_0
      53: getfield      #15                 // Field addressOffset:J
      56: lload_1
      57: ladd
      58: dload_3
      59: invokevirtual #56                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      62: return

  public double getDouble(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: invokevirtual #54                 // Method sun/misc/Unsafe.getDouble:(Ljava/lang/Object;J)D
      26: dreturn

  public void putDouble(long, double);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          13
       6: aload_0
       7: lload_1
       8: bipush        8
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      16: aconst_null
      17: aload_0
      18: getfield      #15                 // Field addressOffset:J
      21: lload_1
      22: ladd
      23: dload_3
      24: invokevirtual #56                 // Method sun/misc/Unsafe.putDouble:(Ljava/lang/Object;JD)V
      27: return

  public float getFloat(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      15: aload_3
      16: if_acmpeq     43
      19: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      22: aconst_null
      23: aload_0
      24: getfield      #15                 // Field addressOffset:J
      27: lload_1
      28: ladd
      29: invokevirtual #44                 // Method sun/misc/Unsafe.getInt:(Ljava/lang/Object;J)I
      32: istore        4
      34: iload         4
      36: invokestatic  #45                 // Method java/lang/Integer.reverseBytes:(I)I
      39: invokestatic  #57                 // Method java/lang/Float.intBitsToFloat:(I)F
      42: freturn
      43: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      46: aconst_null
      47: aload_0
      48: getfield      #15                 // Field addressOffset:J
      51: lload_1
      52: ladd
      53: invokevirtual #58                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      56: freturn

  public void putFloat(long, float, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      15: aload         4
      17: if_acmpeq     47
      20: fload_3
      21: invokestatic  #59                 // Method java/lang/Float.floatToRawIntBits:(F)I
      24: invokestatic  #45                 // Method java/lang/Integer.reverseBytes:(I)I
      27: istore        5
      29: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      32: aconst_null
      33: aload_0
      34: getfield      #15                 // Field addressOffset:J
      37: lload_1
      38: ladd
      39: iload         5
      41: invokevirtual #46                 // Method sun/misc/Unsafe.putInt:(Ljava/lang/Object;JI)V
      44: goto          61
      47: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      50: aconst_null
      51: aload_0
      52: getfield      #15                 // Field addressOffset:J
      55: lload_1
      56: ladd
      57: fload_3
      58: invokevirtual #60                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      61: return

  public float getFloat(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #58                 // Method sun/misc/Unsafe.getFloat:(Ljava/lang/Object;J)F
      25: freturn

  public void putFloat(long, float);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_4
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: fload_3
      23: invokevirtual #60                 // Method sun/misc/Unsafe.putFloat:(Ljava/lang/Object;JF)V
      26: return

  public short getShort(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #61                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      25: istore        4
      27: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      30: aload_3
      31: if_acmpeq     41
      34: iload         4
      36: invokestatic  #62                 // Method java/lang/Short.reverseBytes:(S)S
      39: istore        4
      41: iload         4
      43: ireturn

  public void putShort(long, short, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: iload_3
      13: istore        5
      15: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload         4
      20: if_acmpeq     30
      23: iload         5
      25: invokestatic  #62                 // Method java/lang/Short.reverseBytes:(S)S
      28: istore        5
      30: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      33: aconst_null
      34: aload_0
      35: getfield      #15                 // Field addressOffset:J
      38: lload_1
      39: ladd
      40: iload         5
      42: invokevirtual #63                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      45: return

  public short getShort(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #61                 // Method sun/misc/Unsafe.getShort:(Ljava/lang/Object;J)S
      25: ireturn

  public void putShort(long, short);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #63                 // Method sun/misc/Unsafe.putShort:(Ljava/lang/Object;JS)V
      26: return

  public short getShortVolatile(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #64                 // Method sun/misc/Unsafe.getShortVolatile:(Ljava/lang/Object;J)S
      25: ireturn

  public void putShortVolatile(long, short);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #65                 // Method sun/misc/Unsafe.putShortVolatile:(Ljava/lang/Object;JS)V
      26: return

  public byte getByte(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: lload_1
       8: invokespecial #66                 // Method boundsCheck:(J)V
      11: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aconst_null
      15: aload_0
      16: getfield      #15                 // Field addressOffset:J
      19: lload_1
      20: ladd
      21: invokevirtual #67                 // Method sun/misc/Unsafe.getByte:(Ljava/lang/Object;J)B
      24: ireturn

  public void putByte(long, byte);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: lload_1
       8: invokespecial #66                 // Method boundsCheck:(J)V
      11: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aconst_null
      15: aload_0
      16: getfield      #15                 // Field addressOffset:J
      19: lload_1
      20: ladd
      21: iload_3
      22: invokevirtual #68                 // Method sun/misc/Unsafe.putByte:(Ljava/lang/Object;JB)V
      25: return

  public byte getByteVolatile(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: lload_1
       8: invokespecial #66                 // Method boundsCheck:(J)V
      11: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aconst_null
      15: aload_0
      16: getfield      #15                 // Field addressOffset:J
      19: lload_1
      20: ladd
      21: invokevirtual #69                 // Method sun/misc/Unsafe.getByteVolatile:(Ljava/lang/Object;J)B
      24: ireturn

  public void putByteVolatile(long, byte);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          11
       6: aload_0
       7: lload_1
       8: invokespecial #66                 // Method boundsCheck:(J)V
      11: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      14: aconst_null
      15: aload_0
      16: getfield      #15                 // Field addressOffset:J
      19: lload_1
      20: ladd
      21: iload_3
      22: invokevirtual #70                 // Method sun/misc/Unsafe.putByteVolatile:(Ljava/lang/Object;JB)V
      25: return

  public void getBytes(long, byte[]);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lconst_0
       4: aload_3
       5: arraylength
       6: invokevirtual #71                 // Method getBytes:(J[BJI)V
       9: return

  public void getBytes(long, byte[], long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: lload_1
       8: iload         6
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: aload_3
      14: lload         4
      16: iload         6
      18: invokestatic  #72                 // Method org/agrona/BufferUtil.boundsCheck:([BJI)V
      21: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aconst_null
      25: aload_0
      26: getfield      #15                 // Field addressOffset:J
      29: lload_1
      30: ladd
      31: aload_3
      32: getstatic     #73                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      35: lload         4
      37: ladd
      38: iload         6
      40: i2l
      41: invokevirtual #74                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      44: return

  public void getBytes(long, java.nio.ByteBuffer, int);
    Code:
       0: aload_3
       1: invokevirtual #75                 // Method java/nio/ByteBuffer.position:()I
       4: istore        5
       6: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       9: ifeq          28
      12: aload_0
      13: lload_1
      14: iload         4
      16: invokespecial #19                 // Method boundsCheck0:(JI)V
      19: aload_3
      20: iload         5
      22: i2l
      23: iload         4
      25: invokestatic  #76                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      28: aload_3
      29: invokevirtual #77                 // Method java/nio/ByteBuffer.hasArray:()Z
      32: ifeq          55
      35: aload_3
      36: invokevirtual #78                 // Method java/nio/ByteBuffer.array:()[B
      39: astore        6
      41: getstatic     #73                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      44: aload_3
      45: invokevirtual #79                 // Method java/nio/ByteBuffer.arrayOffset:()I
      48: i2l
      49: ladd
      50: lstore        7
      52: goto          69
      55: aconst_null
      56: astore        6
      58: aload_3
      59: checkcast     #80                 // class sun/nio/ch/DirectBuffer
      62: invokeinterface #81,  1           // InterfaceMethod sun/nio/ch/DirectBuffer.address:()J
      67: lstore        7
      69: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      72: aconst_null
      73: aload_0
      74: getfield      #15                 // Field addressOffset:J
      77: lload_1
      78: ladd
      79: aload         6
      81: lload         7
      83: iload         5
      85: i2l
      86: ladd
      87: iload         4
      89: i2l
      90: invokevirtual #74                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      93: aload_3
      94: aload_3
      95: invokevirtual #75                 // Method java/nio/ByteBuffer.position:()I
      98: iload         4
     100: iadd
     101: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     104: pop
     105: return

  public void putBytes(long, byte[]);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: lconst_0
       4: aload_3
       5: arraylength
       6: invokevirtual #83                 // Method putBytes:(J[BJI)V
       9: return

  public void putBytes(long, byte[], long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: lload_1
       8: iload         6
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: aload_3
      14: lload         4
      16: iload         6
      18: invokestatic  #72                 // Method org/agrona/BufferUtil.boundsCheck:([BJI)V
      21: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      24: aload_3
      25: getstatic     #73                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      28: lload         4
      30: ladd
      31: aconst_null
      32: aload_0
      33: getfield      #15                 // Field addressOffset:J
      36: lload_1
      37: ladd
      38: iload         6
      40: i2l
      41: invokevirtual #74                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      44: return

  public void putBytes(long, java.nio.ByteBuffer, int);
    Code:
       0: aload_3
       1: invokevirtual #75                 // Method java/nio/ByteBuffer.position:()I
       4: istore        5
       6: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       9: ifeq          28
      12: aload_0
      13: lload_1
      14: iload         4
      16: invokespecial #19                 // Method boundsCheck0:(JI)V
      19: aload_3
      20: iload         5
      22: i2l
      23: iload         4
      25: invokestatic  #76                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      28: aload_0
      29: lload_1
      30: aload_3
      31: iload         5
      33: i2l
      34: iload         4
      36: invokevirtual #84                 // Method putBytes:(JLjava/nio/ByteBuffer;JI)V
      39: aload_3
      40: iload         5
      42: iload         4
      44: iadd
      45: invokevirtual #82                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
      48: pop
      49: return

  public void putBytes(long, java.nio.ByteBuffer, long, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          21
       6: aload_0
       7: lload_1
       8: iload         6
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: aload_3
      14: lload         4
      16: iload         6
      18: invokestatic  #76                 // Method org/agrona/BufferUtil.boundsCheck:(Ljava/nio/ByteBuffer;JI)V
      21: aload_3
      22: invokevirtual #77                 // Method java/nio/ByteBuffer.hasArray:()Z
      25: ifeq          48
      28: aload_3
      29: invokevirtual #78                 // Method java/nio/ByteBuffer.array:()[B
      32: astore        7
      34: getstatic     #73                 // Field org/agrona/BufferUtil.ARRAY_BASE_OFFSET:J
      37: aload_3
      38: invokevirtual #79                 // Method java/nio/ByteBuffer.arrayOffset:()I
      41: i2l
      42: ladd
      43: lstore        8
      45: goto          62
      48: aconst_null
      49: astore        7
      51: aload_3
      52: checkcast     #80                 // class sun/nio/ch/DirectBuffer
      55: invokeinterface #81,  1           // InterfaceMethod sun/nio/ch/DirectBuffer.address:()J
      60: lstore        8
      62: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      65: aload         7
      67: lload         8
      69: lload         4
      71: ladd
      72: aconst_null
      73: aload_0
      74: getfield      #15                 // Field addressOffset:J
      77: lload_1
      78: ladd
      79: iload         6
      81: i2l
      82: invokevirtual #74                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      85: return

  public void putBytes(long, org.agrona.DirectBuffer, int, int);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          23
       6: aload_0
       7: lload_1
       8: iload         5
      10: invokespecial #19                 // Method boundsCheck0:(JI)V
      13: aload_3
      14: iload         4
      16: iload         5
      18: invokeinterface #85,  3           // InterfaceMethod org/agrona/DirectBuffer.boundsCheck:(II)V
      23: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      26: aconst_null
      27: aload_3
      28: invokeinterface #86,  1           // InterfaceMethod org/agrona/DirectBuffer.addressOffset:()J
      33: iload         4
      35: i2l
      36: ladd
      37: aconst_null
      38: aload_0
      39: getfield      #15                 // Field addressOffset:J
      42: lload_1
      43: ladd
      44: iload         5
      46: i2l
      47: invokevirtual #74                 // Method sun/misc/Unsafe.copyMemory:(Ljava/lang/Object;JLjava/lang/Object;JJ)V
      50: return

  public char getChar(long, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #87                 // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      25: istore        4
      27: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      30: aload_3
      31: if_acmpeq     43
      34: iload         4
      36: i2s
      37: invokestatic  #62                 // Method java/lang/Short.reverseBytes:(S)S
      40: i2c
      41: istore        4
      43: iload         4
      45: ireturn

  public void putChar(long, char, java.nio.ByteOrder);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: iload_3
      13: istore        5
      15: getstatic     #35                 // Field org/agrona/BufferUtil.NATIVE_BYTE_ORDER:Ljava/nio/ByteOrder;
      18: aload         4
      20: if_acmpeq     32
      23: iload         5
      25: i2s
      26: invokestatic  #62                 // Method java/lang/Short.reverseBytes:(S)S
      29: i2c
      30: istore        5
      32: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      35: aconst_null
      36: aload_0
      37: getfield      #15                 // Field addressOffset:J
      40: lload_1
      41: ladd
      42: iload         5
      44: invokevirtual #88                 // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      47: return

  public char getChar(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #87                 // Method sun/misc/Unsafe.getChar:(Ljava/lang/Object;J)C
      25: ireturn

  public void putChar(long, char);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #88                 // Method sun/misc/Unsafe.putChar:(Ljava/lang/Object;JC)V
      26: return

  public char getCharVolatile(long);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: invokevirtual #89                 // Method sun/misc/Unsafe.getCharVolatile:(Ljava/lang/Object;J)C
      25: ireturn

  public void putCharVolatile(long, char);
    Code:
       0: getstatic     #18                 // Field org/agrona/concurrent/UnsafeBuffer.SHOULD_BOUNDS_CHECK:Z
       3: ifeq          12
       6: aload_0
       7: lload_1
       8: iconst_2
       9: invokespecial #19                 // Method boundsCheck0:(JI)V
      12: getstatic     #20                 // Field org/agrona/UnsafeAccess.UNSAFE:Lsun/misc/Unsafe;
      15: aconst_null
      16: aload_0
      17: getfield      #15                 // Field addressOffset:J
      20: lload_1
      21: ladd
      22: iload_3
      23: invokevirtual #90                 // Method sun/misc/Unsafe.putCharVolatile:(Ljava/lang/Object;JC)V
      26: return

  public java.lang.String getStringUtf8(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokevirtual #91                 // Method getInt:(J)I
       5: istore_3
       6: aload_0
       7: lload_1
       8: iload_3
       9: invokevirtual #92                 // Method getStringUtf8:(JI)Ljava/lang/String;
      12: areturn

  public java.lang.String getStringUtf8(long, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #93                 // Method getInt:(JLjava/nio/ByteOrder;)I
       6: istore        4
       8: aload_0
       9: lload_1
      10: iload         4
      12: invokevirtual #92                 // Method getStringUtf8:(JI)Ljava/lang/String;
      15: areturn

  public java.lang.String getStringUtf8(long, int);
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_0
       6: lload_1
       7: ldc2_w        #94                 // long 4l
      10: ladd
      11: aload         4
      13: invokevirtual #96                 // Method getBytes:(J[B)V
      16: new           #97                 // class java/lang/String
      19: dup
      20: aload         4
      22: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      25: invokespecial #99                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      28: areturn

  public int putStringUtf8(long, java.lang.String);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: ldc           #101                // int 2147483647
       5: invokevirtual #102                // Method putStringUtf8:(JLjava/lang/String;I)I
       8: ireturn

  public int putStringUtf8(long, java.lang.String, java.nio.ByteOrder);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: aload         4
       5: ldc           #101                // int 2147483647
       7: invokevirtual #103                // Method putStringUtf8:(JLjava/lang/String;Ljava/nio/ByteOrder;I)I
      10: ireturn

  public int putStringUtf8(long, java.lang.String, int);
    Code:
       0: aload_3
       1: ifnull        14
       4: aload_3
       5: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #104                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #105                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        5
      19: aload         5
      21: arraylength
      22: iload         4
      24: if_icmple     55
      27: new           #7                  // class java/lang/IllegalArgumentException
      30: dup
      31: new           #8                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #106                // String Encoded string larger than maximum size:
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload         4
      45: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: lload_1
      57: aload         5
      59: arraylength
      60: invokevirtual #108                // Method putInt:(JI)V
      63: aload_0
      64: lload_1
      65: ldc2_w        #94                 // long 4l
      68: ladd
      69: aload         5
      71: invokevirtual #109                // Method putBytes:(J[B)V
      74: iconst_4
      75: aload         5
      77: arraylength
      78: iadd
      79: ireturn

  public int putStringUtf8(long, java.lang.String, java.nio.ByteOrder, int);
    Code:
       0: aload_3
       1: ifnull        14
       4: aload_3
       5: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #104                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #105                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        6
      19: aload         6
      21: arraylength
      22: iload         5
      24: if_icmple     55
      27: new           #7                  // class java/lang/IllegalArgumentException
      30: dup
      31: new           #8                  // class java/lang/StringBuilder
      34: dup
      35: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #106                // String Encoded string larger than maximum size:
      40: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: iload         5
      45: invokevirtual #107                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_0
      56: lload_1
      57: aload         6
      59: arraylength
      60: aload         4
      62: invokevirtual #110                // Method putInt:(JILjava/nio/ByteOrder;)V
      65: aload_0
      66: lload_1
      67: ldc2_w        #94                 // long 4l
      70: ladd
      71: aload         6
      73: invokevirtual #109                // Method putBytes:(J[B)V
      76: iconst_4
      77: aload         6
      79: arraylength
      80: iadd
      81: ireturn

  public java.lang.String getStringWithoutLengthUtf8(long, int);
    Code:
       0: iload_3
       1: newarray       byte
       3: astore        4
       5: aload_0
       6: lload_1
       7: aload         4
       9: invokevirtual #96                 // Method getBytes:(J[B)V
      12: new           #97                 // class java/lang/String
      15: dup
      16: aload         4
      18: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      21: invokespecial #99                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      24: areturn

  public int putStringWithoutLengthUtf8(long, java.lang.String);
    Code:
       0: aload_3
       1: ifnull        14
       4: aload_3
       5: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       8: invokevirtual #104                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      11: goto          17
      14: getstatic     #105                // Field org/agrona/BufferUtil.NULL_BYTES:[B
      17: astore        4
      19: aload_0
      20: lload_1
      21: aload         4
      23: invokevirtual #109                // Method putBytes:(J[B)V
      26: aload         4
      28: arraylength
      29: ireturn

  public void boundsCheck(long, int);
    Code:
       0: aload_0
       1: lload_1
       2: iload_3
       3: invokespecial #19                 // Method boundsCheck0:(JI)V
       6: return

  private void boundsCheck(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          15
       6: lload_1
       7: aload_0
       8: getfield      #16                 // Field capacity:J
      11: lcmp
      12: iflt          49
      15: new           #26                 // class java/lang/IndexOutOfBoundsException
      18: dup
      19: ldc           #111                // String index=%d, capacity=%d
      21: iconst_2
      22: anewarray     #23                 // class java/lang/Object
      25: dup
      26: iconst_0
      27: lload_1
      28: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: aastore
      32: dup
      33: iconst_1
      34: aload_0
      35: getfield      #16                 // Field capacity:J
      38: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      41: aastore
      42: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      45: invokespecial #27                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  private void boundsCheck0(long, int);
    Code:
       0: lload_1
       1: iload_3
       2: i2l
       3: ladd
       4: lstore        4
       6: lload_1
       7: lconst_0
       8: lcmp
       9: iflt          29
      12: lload         4
      14: aload_0
      15: getfield      #16                 // Field capacity:J
      18: lcmp
      19: ifgt          29
      22: lload         4
      24: lload_1
      25: lcmp
      26: ifge          70
      29: new           #26                 // class java/lang/IndexOutOfBoundsException
      32: dup
      33: ldc           #112                // String index=%d, length=%d, capacity=%d
      35: iconst_3
      36: anewarray     #23                 // class java/lang/Object
      39: dup
      40: iconst_0
      41: lload_1
      42: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      45: aastore
      46: dup
      47: iconst_1
      48: iload_3
      49: invokestatic  #32                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      52: aastore
      53: dup
      54: iconst_2
      55: aload_0
      56: getfield      #16                 // Field capacity:J
      59: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      62: aastore
      63: invokestatic  #25                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: invokespecial #27                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: return

  private void map(long, long);
    Code:
       0: aload_0
       1: lload_3
       2: putfield      #16                 // Field capacity:J
       5: aload_0
       6: aload_0
       7: getfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
      10: getstatic     #113                // Field java/nio/channels/FileChannel$MapMode.READ_WRITE:Ljava/nio/channels/FileChannel$MapMode;
      13: lload_1
      14: lload_3
      15: invokestatic  #114                // Method org/agrona/IoUtil.map:(Ljava/nio/channels/FileChannel;Ljava/nio/channels/FileChannel$MapMode;JJ)J
      18: putfield      #15                 // Field addressOffset:J
      21: return

  private void unmap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fileChannel:Ljava/nio/channels/FileChannel;
       4: aload_0
       5: getfield      #15                 // Field addressOffset:J
       8: aload_0
       9: getfield      #16                 // Field capacity:J
      12: invokestatic  #115                // Method org/agrona/IoUtil.unmap:(Ljava/nio/channels/FileChannel;JJ)V
      15: return
}
