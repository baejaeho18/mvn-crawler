Compiled from "AtomicBuffer.java"
public interface org.agrona.concurrent.AtomicBuffer extends org.agrona.MutableDirectBuffer {
  public abstract void verifyAlignment();

  public abstract long getLongVolatile(int);

  public abstract void putLongVolatile(int, long);

  public abstract void putLongOrdered(int, long);

  public abstract long addLongOrdered(int, long);

  public abstract boolean compareAndSetLong(int, long, long);

  public abstract long getAndSetLong(int, long);

  public abstract long getAndAddLong(int, long);

  public abstract int getIntVolatile(int);

  public abstract void putIntVolatile(int, int);

  public abstract void putIntOrdered(int, int);

  public abstract int addIntOrdered(int, int);

  public abstract boolean compareAndSetInt(int, int, int);

  public abstract int getAndSetInt(int, int);

  public abstract int getAndAddInt(int, int);

  public abstract short getShortVolatile(int);

  public abstract void putShortVolatile(int, short);

  public abstract char getCharVolatile(int);

  public abstract void putCharVolatile(int, char);

  public abstract byte getByteVolatile(int);

  public abstract void putByteVolatile(int, byte);
}
