Compiled from "BitUtil.java"
public class org.agrona.BitUtil {
  public static final int SIZE_OF_BYTE;

  public static final int SIZE_OF_BOOLEAN;

  public static final int SIZE_OF_CHAR;

  public static final int SIZE_OF_SHORT;

  public static final int SIZE_OF_INT;

  public static final int SIZE_OF_FLOAT;

  public static final int SIZE_OF_LONG;

  public static final int SIZE_OF_DOUBLE;

  public static final int CACHE_LINE_LENGTH;

  private static final byte[] HEX_DIGIT_TABLE;

  private static final byte[] FROM_HEX_DIGIT_TABLE;

  private static final int LAST_DIGIT_MASK;

  private static final java.nio.charset.Charset UTF8_CHARSET;

  public org.agrona.BitUtil();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int findNextPositivePowerOfTwo(int);
    Code:
       0: iconst_1
       1: bipush        32
       3: iload_0
       4: iconst_1
       5: isub
       6: invokestatic  #2                  // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       9: isub
      10: ishl
      11: ireturn

  public static int align(int, int);
    Code:
       0: iload_0
       1: iload_1
       2: iconst_1
       3: isub
       4: iadd
       5: iload_1
       6: iconst_1
       7: isub
       8: iconst_m1
       9: ixor
      10: iand
      11: ireturn

  public static byte[] fromHexByteArray(byte[]);
    Code:
       0: aload_0
       1: arraylength
       2: iconst_1
       3: ishr
       4: newarray       byte
       6: astore_1
       7: iconst_0
       8: istore_2
       9: iload_2
      10: aload_0
      11: arraylength
      12: if_icmpge     46
      15: aload_1
      16: iload_2
      17: iconst_1
      18: ishr
      19: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
      22: aload_0
      23: iload_2
      24: baload
      25: baload
      26: iconst_4
      27: ishl
      28: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
      31: aload_0
      32: iload_2
      33: iconst_1
      34: iadd
      35: baload
      36: baload
      37: ior
      38: i2b
      39: bastore
      40: iinc          2, 2
      43: goto          9
      46: aload_1
      47: areturn

  public static byte[] toHexByteArray(byte[]);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: arraylength
       4: invokestatic  #4                  // Method toHexByteArray:([BII)[B
       7: areturn

  public static byte[] toHexByteArray(byte[], int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: ishl
       3: newarray       byte
       5: astore_3
       6: iconst_0
       7: istore        4
       9: iload         4
      11: iload_2
      12: iconst_1
      13: ishl
      14: if_icmpge     63
      17: aload_0
      18: iload_1
      19: iload         4
      21: iconst_1
      22: ishr
      23: iadd
      24: baload
      25: istore        5
      27: aload_3
      28: iload         4
      30: getstatic     #5                  // Field HEX_DIGIT_TABLE:[B
      33: iload         5
      35: iconst_4
      36: ishr
      37: bipush        15
      39: iand
      40: baload
      41: bastore
      42: aload_3
      43: iload         4
      45: iconst_1
      46: iadd
      47: getstatic     #5                  // Field HEX_DIGIT_TABLE:[B
      50: iload         5
      52: bipush        15
      54: iand
      55: baload
      56: bastore
      57: iinc          4, 2
      60: goto          9
      63: aload_3
      64: areturn

  public static byte[] fromHex(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field UTF8_CHARSET:Ljava/nio/charset/Charset;
       4: invokevirtual #7                  // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
       7: invokestatic  #8                  // Method fromHexByteArray:([B)[B
      10: areturn

  public static java.lang.String toHex(byte[], int, int);
    Code:
       0: new           #9                  // class java/lang/String
       3: dup
       4: aload_0
       5: iload_1
       6: iload_2
       7: invokestatic  #4                  // Method toHexByteArray:([BII)[B
      10: getstatic     #6                  // Field UTF8_CHARSET:Ljava/nio/charset/Charset;
      13: invokespecial #10                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      16: areturn

  public static java.lang.String toHex(byte[]);
    Code:
       0: new           #9                  // class java/lang/String
       3: dup
       4: aload_0
       5: invokestatic  #11                 // Method toHexByteArray:([B)[B
       8: getstatic     #6                  // Field UTF8_CHARSET:Ljava/nio/charset/Charset;
      11: invokespecial #10                 // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
      14: areturn

  public static boolean isEven(int);
    Code:
       0: iload_0
       1: iconst_1
       2: iand
       3: ifne          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ireturn

  public static boolean isPowerOfTwo(int);
    Code:
       0: iload_0
       1: ifle          19
       4: iload_0
       5: iload_0
       6: iconst_m1
       7: ixor
       8: iconst_1
       9: iadd
      10: iand
      11: iload_0
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  public static int next(int, int);
    Code:
       0: iload_0
       1: iconst_1
       2: iadd
       3: istore_2
       4: iload_2
       5: iload_1
       6: if_icmpne     11
       9: iconst_0
      10: istore_2
      11: iload_2
      12: ireturn

  public static int previous(int, int);
    Code:
       0: iconst_0
       1: iload_0
       2: if_icmpne     9
       5: iload_1
       6: iconst_1
       7: isub
       8: ireturn
       9: iload_0
      10: iconst_1
      11: isub
      12: ireturn

  public static int calculateShiftForScale(int);
    Code:
       0: iconst_4
       1: iload_0
       2: if_icmpne     7
       5: iconst_2
       6: ireturn
       7: bipush        8
       9: iload_0
      10: if_icmpne     15
      13: iconst_3
      14: ireturn
      15: new           #13                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #14                 // String Unknown pointer size
      21: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow

  public static int generateRandomisedId();
    Code:
       0: invokestatic  #16                 // Method java/util/concurrent/ThreadLocalRandom.current:()Ljava/util/concurrent/ThreadLocalRandom;
       3: invokevirtual #17                 // Method java/util/concurrent/ThreadLocalRandom.nextInt:()I
       6: ireturn

  public static boolean isAligned(long, int);
    Code:
       0: iload_2
       1: invokestatic  #18                 // Method isPowerOfTwo:(I)Z
       4: ifne          34
       7: new           #13                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #19                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #21                 // String Alignment must be a power of 2: alignment=
      20: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_2
      24: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: lload_0
      35: iload_2
      36: iconst_1
      37: isub
      38: i2l
      39: land
      40: lconst_0
      41: lcmp
      42: ifne          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  static {};
    Code:
       0: bipush        16
       2: newarray       byte
       4: dup
       5: iconst_0
       6: bipush        48
       8: bastore
       9: dup
      10: iconst_1
      11: bipush        49
      13: bastore
      14: dup
      15: iconst_2
      16: bipush        50
      18: bastore
      19: dup
      20: iconst_3
      21: bipush        51
      23: bastore
      24: dup
      25: iconst_4
      26: bipush        52
      28: bastore
      29: dup
      30: iconst_5
      31: bipush        53
      33: bastore
      34: dup
      35: bipush        6
      37: bipush        54
      39: bastore
      40: dup
      41: bipush        7
      43: bipush        55
      45: bastore
      46: dup
      47: bipush        8
      49: bipush        56
      51: bastore
      52: dup
      53: bipush        9
      55: bipush        57
      57: bastore
      58: dup
      59: bipush        10
      61: bipush        97
      63: bastore
      64: dup
      65: bipush        11
      67: bipush        98
      69: bastore
      70: dup
      71: bipush        12
      73: bipush        99
      75: bastore
      76: dup
      77: bipush        13
      79: bipush        100
      81: bastore
      82: dup
      83: bipush        14
      85: bipush        101
      87: bastore
      88: dup
      89: bipush        15
      91: bipush        102
      93: bastore
      94: putstatic     #5                  // Field HEX_DIGIT_TABLE:[B
      97: sipush        128
     100: newarray       byte
     102: putstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     105: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     108: bipush        48
     110: iconst_0
     111: bastore
     112: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     115: bipush        49
     117: iconst_1
     118: bastore
     119: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     122: bipush        50
     124: iconst_2
     125: bastore
     126: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     129: bipush        51
     131: iconst_3
     132: bastore
     133: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     136: bipush        52
     138: iconst_4
     139: bastore
     140: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     143: bipush        53
     145: iconst_5
     146: bastore
     147: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     150: bipush        54
     152: bipush        6
     154: bastore
     155: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     158: bipush        55
     160: bipush        7
     162: bastore
     163: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     166: bipush        56
     168: bipush        8
     170: bastore
     171: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     174: bipush        57
     176: bipush        9
     178: bastore
     179: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     182: bipush        97
     184: bipush        10
     186: bastore
     187: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     190: bipush        65
     192: bipush        10
     194: bastore
     195: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     198: bipush        98
     200: bipush        11
     202: bastore
     203: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     206: bipush        66
     208: bipush        11
     210: bastore
     211: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     214: bipush        99
     216: bipush        12
     218: bastore
     219: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     222: bipush        67
     224: bipush        12
     226: bastore
     227: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     230: bipush        100
     232: bipush        13
     234: bastore
     235: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     238: bipush        68
     240: bipush        13
     242: bastore
     243: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     246: bipush        101
     248: bipush        14
     250: bastore
     251: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     254: bipush        69
     256: bipush        14
     258: bastore
     259: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     262: bipush        102
     264: bipush        15
     266: bastore
     267: getstatic     #3                  // Field FROM_HEX_DIGIT_TABLE:[B
     270: bipush        70
     272: bipush        15
     274: bastore
     275: ldc           #25                 // String UTF-8
     277: invokestatic  #26                 // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
     280: putstatic     #6                  // Field UTF8_CHARSET:Ljava/nio/charset/Charset;
     283: return
}
