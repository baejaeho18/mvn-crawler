Compiled from "Expectations.java"
public class org.hibernate.jdbc.Expectations$BasicParamExpectation extends org.hibernate.jdbc.Expectations$BasicExpectation {
  private final int parameterPosition;

  protected org.hibernate.jdbc.Expectations$BasicParamExpectation(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method org/hibernate/jdbc/Expectations$BasicExpectation."<init>":(I)V
       5: aload_0
       6: iload_2
       7: putfield      #2                  // Field parameterPosition:I
      10: return

  public int prepare(java.sql.PreparedStatement) throws java.sql.SQLException, org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method toCallableStatement:(Ljava/sql/PreparedStatement;)Ljava/sql/CallableStatement;
       5: aload_0
       6: getfield      #2                  // Field parameterPosition:I
       9: iconst_2
      10: invokeinterface #5,  3            // InterfaceMethod java/sql/CallableStatement.registerOutParameter:(II)V
      15: iconst_1
      16: ireturn

  public boolean canBeBatched();
    Code:
       0: iconst_0
       1: ireturn

  protected int determineRowCount(int, java.sql.PreparedStatement);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #3                  // Method toCallableStatement:(Ljava/sql/PreparedStatement;)Ljava/sql/CallableStatement;
       5: aload_0
       6: getfield      #2                  // Field parameterPosition:I
       9: invokeinterface #6,  2            // InterfaceMethod java/sql/CallableStatement.getInt:(I)I
      14: ireturn
      15: astore_3
      16: invokestatic  #8                  // Method org/hibernate/jdbc/Expectations.access$100:()Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      19: aload_3
      20: ldc           #9                  // String could not extract row counts from CallableStatement
      22: invokevirtual #10                 // Method org/hibernate/engine/jdbc/spi/SqlExceptionHelper.logExceptions:(Ljava/sql/SQLException;Ljava/lang/String;)V
      25: new           #11                 // class org/hibernate/exception/GenericJDBCException
      28: dup
      29: ldc           #9                  // String could not extract row counts from CallableStatement
      31: aload_3
      32: invokespecial #12                 // Method org/hibernate/exception/GenericJDBCException."<init>":(Ljava/lang/String;Ljava/sql/SQLException;)V
      35: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/sql/SQLException

  private java.sql.CallableStatement toCallableStatement(java.sql.PreparedStatement);
    Code:
       0: ldc           #13                 // class java/sql/CallableStatement
       2: aload_1
       3: invokevirtual #14                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       6: ifne          39
       9: new           #15                 // class org/hibernate/HibernateException
      12: dup
      13: new           #16                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #18                 // String BasicParamExpectation operates exclusively on CallableStatements :
      22: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #23                 // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_1
      40: checkcast     #13                 // class java/sql/CallableStatement
      43: areturn
}
