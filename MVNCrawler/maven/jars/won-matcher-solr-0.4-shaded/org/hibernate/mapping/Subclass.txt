Compiled from "Subclass.java"
public class org.hibernate.mapping.Subclass extends org.hibernate.mapping.PersistentClass {
  private org.hibernate.mapping.PersistentClass superclass;

  private java.lang.Class classPersisterClass;

  private final int subclassId;

  public org.hibernate.mapping.Subclass(org.hibernate.mapping.PersistentClass, org.hibernate.boot.spi.MetadataBuildingContext);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/hibernate/mapping/PersistentClass."<init>":(Lorg/hibernate/boot/spi/MetadataBuildingContext;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field superclass:Lorg/hibernate/mapping/PersistentClass;
      10: aload_0
      11: aload_1
      12: invokevirtual #3                  // Method org/hibernate/mapping/PersistentClass.nextSubclassId:()I
      15: putfield      #4                  // Field subclassId:I
      18: return

  int nextSubclassId();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #3                  // Method org/hibernate/mapping/PersistentClass.nextSubclassId:()I
       7: ireturn

  public int getSubclassId();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subclassId:I
       4: ireturn

  public java.lang.String getNaturalIdCacheRegionName();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #6                  // Method org/hibernate/mapping/PersistentClass.getNaturalIdCacheRegionName:()Ljava/lang/String;
       7: areturn

  public java.lang.String getCacheConcurrencyStrategy();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #7                  // Method org/hibernate/mapping/PersistentClass.getCacheConcurrencyStrategy:()Ljava/lang/String;
       7: areturn

  public org.hibernate.mapping.RootClass getRootClass();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #8                  // Method org/hibernate/mapping/PersistentClass.getRootClass:()Lorg/hibernate/mapping/RootClass;
       7: areturn

  public org.hibernate.mapping.PersistentClass getSuperclass();
    Code:
       0: aload_0
       1: getfield      #2                  // Field superclass:Lorg/hibernate/mapping/PersistentClass;
       4: areturn

  public org.hibernate.mapping.Property getIdentifierProperty();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #9                  // Method org/hibernate/mapping/PersistentClass.getIdentifierProperty:()Lorg/hibernate/mapping/Property;
       7: areturn

  public org.hibernate.mapping.Property getDeclaredIdentifierProperty();
    Code:
       0: aconst_null
       1: areturn

  public org.hibernate.mapping.KeyValue getIdentifier();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #10                 // Method org/hibernate/mapping/PersistentClass.getIdentifier:()Lorg/hibernate/mapping/KeyValue;
       7: areturn

  public boolean hasIdentifierProperty();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #11                 // Method org/hibernate/mapping/PersistentClass.hasIdentifierProperty:()Z
       7: ireturn

  public org.hibernate.mapping.Value getDiscriminator();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #12                 // Method org/hibernate/mapping/PersistentClass.getDiscriminator:()Lorg/hibernate/mapping/Value;
       7: areturn

  public boolean isMutable();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #13                 // Method org/hibernate/mapping/PersistentClass.isMutable:()Z
       7: ireturn

  public boolean isInherited();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isPolymorphic();
    Code:
       0: iconst_1
       1: ireturn

  public void addProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/hibernate/mapping/PersistentClass.addProperty:(Lorg/hibernate/mapping/Property;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #15                 // Method org/hibernate/mapping/PersistentClass.addSubclassProperty:(Lorg/hibernate/mapping/Property;)V
      13: return

  public void addMappedsuperclassProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #16                 // Method org/hibernate/mapping/PersistentClass.addMappedsuperclassProperty:(Lorg/hibernate/mapping/Property;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #15                 // Method org/hibernate/mapping/PersistentClass.addSubclassProperty:(Lorg/hibernate/mapping/Property;)V
      13: return

  public void addJoin(org.hibernate.mapping.Join);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/hibernate/mapping/PersistentClass.addJoin:(Lorg/hibernate/mapping/Join;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #18                 // Method org/hibernate/mapping/PersistentClass.addSubclassJoin:(Lorg/hibernate/mapping/Join;)V
      13: return

  public java.util.Iterator getPropertyClosureIterator();
    Code:
       0: new           #19                 // class org/hibernate/internal/util/collections/JoinedIterator
       3: dup
       4: iconst_2
       5: anewarray     #20                 // class java/util/Iterator
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      14: invokevirtual #21                 // Method org/hibernate/mapping/PersistentClass.getPropertyClosureIterator:()Ljava/util/Iterator;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: invokevirtual #22                 // Method getPropertyIterator:()Ljava/util/Iterator;
      24: aastore
      25: invokespecial #23                 // Method org/hibernate/internal/util/collections/JoinedIterator."<init>":([Ljava/util/Iterator;)V
      28: areturn

  public java.util.Iterator getTableClosureIterator();
    Code:
       0: new           #19                 // class org/hibernate/internal/util/collections/JoinedIterator
       3: dup
       4: iconst_2
       5: anewarray     #20                 // class java/util/Iterator
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      14: invokevirtual #24                 // Method org/hibernate/mapping/PersistentClass.getTableClosureIterator:()Ljava/util/Iterator;
      17: aastore
      18: dup
      19: iconst_1
      20: new           #25                 // class org/hibernate/internal/util/collections/SingletonIterator
      23: dup
      24: aload_0
      25: invokevirtual #26                 // Method getTable:()Lorg/hibernate/mapping/Table;
      28: invokespecial #27                 // Method org/hibernate/internal/util/collections/SingletonIterator."<init>":(Ljava/lang/Object;)V
      31: aastore
      32: invokespecial #23                 // Method org/hibernate/internal/util/collections/JoinedIterator."<init>":([Ljava/util/Iterator;)V
      35: areturn

  public java.util.Iterator getKeyClosureIterator();
    Code:
       0: new           #19                 // class org/hibernate/internal/util/collections/JoinedIterator
       3: dup
       4: iconst_2
       5: anewarray     #20                 // class java/util/Iterator
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      14: invokevirtual #28                 // Method org/hibernate/mapping/PersistentClass.getKeyClosureIterator:()Ljava/util/Iterator;
      17: aastore
      18: dup
      19: iconst_1
      20: new           #25                 // class org/hibernate/internal/util/collections/SingletonIterator
      23: dup
      24: aload_0
      25: invokevirtual #29                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
      28: invokespecial #27                 // Method org/hibernate/internal/util/collections/SingletonIterator."<init>":(Ljava/lang/Object;)V
      31: aastore
      32: invokespecial #23                 // Method org/hibernate/internal/util/collections/JoinedIterator."<init>":([Ljava/util/Iterator;)V
      35: areturn

  protected void addSubclassProperty(org.hibernate.mapping.Property);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/hibernate/mapping/PersistentClass.addSubclassProperty:(Lorg/hibernate/mapping/Property;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #15                 // Method org/hibernate/mapping/PersistentClass.addSubclassProperty:(Lorg/hibernate/mapping/Property;)V
      13: return

  protected void addSubclassJoin(org.hibernate.mapping.Join);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #18                 // Method org/hibernate/mapping/PersistentClass.addSubclassJoin:(Lorg/hibernate/mapping/Join;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #18                 // Method org/hibernate/mapping/PersistentClass.addSubclassJoin:(Lorg/hibernate/mapping/Join;)V
      13: return

  protected void addSubclassTable(org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method org/hibernate/mapping/PersistentClass.addSubclassTable:(Lorg/hibernate/mapping/Table;)V
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: aload_1
      10: invokevirtual #30                 // Method org/hibernate/mapping/PersistentClass.addSubclassTable:(Lorg/hibernate/mapping/Table;)V
      13: return

  public boolean isVersioned();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #31                 // Method org/hibernate/mapping/PersistentClass.isVersioned:()Z
       7: ireturn

  public org.hibernate.mapping.Property getVersion();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #32                 // Method org/hibernate/mapping/PersistentClass.getVersion:()Lorg/hibernate/mapping/Property;
       7: areturn

  public org.hibernate.mapping.Property getDeclaredVersion();
    Code:
       0: aconst_null
       1: areturn

  public boolean hasEmbeddedIdentifier();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #33                 // Method org/hibernate/mapping/PersistentClass.hasEmbeddedIdentifier:()Z
       7: ireturn

  public java.lang.Class getEntityPersisterClass();
    Code:
       0: aload_0
       1: getfield      #34                 // Field classPersisterClass:Ljava/lang/Class;
       4: ifnonnull     15
       7: aload_0
       8: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      11: invokevirtual #35                 // Method org/hibernate/mapping/PersistentClass.getEntityPersisterClass:()Ljava/lang/Class;
      14: areturn
      15: aload_0
      16: getfield      #34                 // Field classPersisterClass:Ljava/lang/Class;
      19: areturn

  public org.hibernate.mapping.Table getRootTable();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #36                 // Method org/hibernate/mapping/PersistentClass.getRootTable:()Lorg/hibernate/mapping/Table;
       7: areturn

  public org.hibernate.mapping.KeyValue getKey();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #10                 // Method org/hibernate/mapping/PersistentClass.getIdentifier:()Lorg/hibernate/mapping/KeyValue;
       7: areturn

  public boolean isExplicitPolymorphism();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #37                 // Method org/hibernate/mapping/PersistentClass.isExplicitPolymorphism:()Z
       7: ireturn

  public void setSuperclass(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field superclass:Lorg/hibernate/mapping/PersistentClass;
       5: return

  public java.lang.String getWhere();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #38                 // Method org/hibernate/mapping/PersistentClass.getWhere:()Ljava/lang/String;
       7: areturn

  public boolean isJoinedSubclass();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getTable:()Lorg/hibernate/mapping/Table;
       4: aload_0
       5: invokevirtual #39                 // Method getRootTable:()Lorg/hibernate/mapping/Table;
       8: if_acmpeq     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public void createForeignKey();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method isJoinedSubclass:()Z
       4: ifne          17
       7: new           #41                 // class org/hibernate/AssertionFailure
      10: dup
      11: ldc           #42                 // String not a joined-subclass
      13: invokespecial #43                 // Method org/hibernate/AssertionFailure."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #29                 // Method getKey:()Lorg/hibernate/mapping/KeyValue;
      21: aload_0
      22: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      25: invokevirtual #44                 // Method org/hibernate/mapping/PersistentClass.getEntityName:()Ljava/lang/String;
      28: invokeinterface #45,  2           // InterfaceMethod org/hibernate/mapping/KeyValue.createForeignKeyOfEntity:(Ljava/lang/String;)V
      33: return

  public void setEntityPersisterClass(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #34                 // Field classPersisterClass:Ljava/lang/Class;
       5: return

  public boolean isLazyPropertiesCacheable();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #46                 // Method org/hibernate/mapping/PersistentClass.isLazyPropertiesCacheable:()Z
       7: ireturn

  public int getJoinClosureSpan();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #47                 // Method org/hibernate/mapping/PersistentClass.getJoinClosureSpan:()I
       7: aload_0
       8: invokespecial #47                 // Method org/hibernate/mapping/PersistentClass.getJoinClosureSpan:()I
      11: iadd
      12: ireturn

  public int getPropertyClosureSpan();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #48                 // Method org/hibernate/mapping/PersistentClass.getPropertyClosureSpan:()I
       7: aload_0
       8: invokespecial #48                 // Method org/hibernate/mapping/PersistentClass.getPropertyClosureSpan:()I
      11: iadd
      12: ireturn

  public java.util.Iterator getJoinClosureIterator();
    Code:
       0: new           #19                 // class org/hibernate/internal/util/collections/JoinedIterator
       3: dup
       4: iconst_2
       5: anewarray     #20                 // class java/util/Iterator
       8: dup
       9: iconst_0
      10: aload_0
      11: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      14: invokevirtual #49                 // Method org/hibernate/mapping/PersistentClass.getJoinClosureIterator:()Ljava/util/Iterator;
      17: aastore
      18: dup
      19: iconst_1
      20: aload_0
      21: invokespecial #49                 // Method org/hibernate/mapping/PersistentClass.getJoinClosureIterator:()Ljava/util/Iterator;
      24: aastore
      25: invokespecial #23                 // Method org/hibernate/internal/util/collections/JoinedIterator."<init>":([Ljava/util/Iterator;)V
      28: areturn

  public boolean isClassOrSuperclassJoin(org.hibernate.mapping.Join);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #50                 // Method org/hibernate/mapping/PersistentClass.isClassOrSuperclassJoin:(Lorg/hibernate/mapping/Join;)Z
       5: ifne          19
       8: aload_0
       9: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      12: aload_1
      13: invokevirtual #50                 // Method org/hibernate/mapping/PersistentClass.isClassOrSuperclassJoin:(Lorg/hibernate/mapping/Join;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isClassOrSuperclassTable(org.hibernate.mapping.Table);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method org/hibernate/mapping/PersistentClass.isClassOrSuperclassTable:(Lorg/hibernate/mapping/Table;)Z
       5: ifne          19
       8: aload_0
       9: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      12: aload_1
      13: invokevirtual #51                 // Method org/hibernate/mapping/PersistentClass.isClassOrSuperclassTable:(Lorg/hibernate/mapping/Table;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public org.hibernate.mapping.Table getTable();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #52                 // Method org/hibernate/mapping/PersistentClass.getTable:()Lorg/hibernate/mapping/Table;
       7: areturn

  public boolean isForceDiscriminator();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #53                 // Method org/hibernate/mapping/PersistentClass.isForceDiscriminator:()Z
       7: ireturn

  public boolean isDiscriminatorInsertable();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #54                 // Method org/hibernate/mapping/PersistentClass.isDiscriminatorInsertable:()Z
       7: ireturn

  public java.util.Set getSynchronizedTables();
    Code:
       0: new           #55                 // class java/util/HashSet
       3: dup
       4: invokespecial #56                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #57                 // Field synchronizedTables:Ljava/util/Set;
      13: invokevirtual #58                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      16: pop
      17: aload_1
      18: aload_0
      19: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      22: invokevirtual #59                 // Method org/hibernate/mapping/PersistentClass.getSynchronizedTables:()Ljava/util/Set;
      25: invokevirtual #58                 // Method java/util/HashSet.addAll:(Ljava/util/Collection;)Z
      28: pop
      29: aload_1
      30: areturn

  public java.lang.Object accept(org.hibernate.mapping.PersistentClassVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #60,  2           // InterfaceMethod org/hibernate/mapping/PersistentClassVisitor.accept:(Lorg/hibernate/mapping/Subclass;)Ljava/lang/Object;
       7: areturn

  public java.util.List getFilters();
    Code:
       0: new           #61                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #62                 // Method org/hibernate/mapping/PersistentClass.getFilters:()Ljava/util/List;
       8: invokespecial #63                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: astore_1
      12: aload_1
      13: aload_0
      14: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      17: invokevirtual #62                 // Method org/hibernate/mapping/PersistentClass.getFilters:()Ljava/util/List;
      20: invokeinterface #64,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      25: pop
      26: aload_1
      27: areturn

  public boolean hasSubselectLoadableCollections();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method org/hibernate/mapping/PersistentClass.hasSubselectLoadableCollections:()Z
       4: ifne          17
       7: aload_0
       8: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      11: invokevirtual #65                 // Method org/hibernate/mapping/PersistentClass.hasSubselectLoadableCollections:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public java.lang.String getTuplizerImplClassName(org.hibernate.EntityMode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #66                 // Method org/hibernate/mapping/PersistentClass.getTuplizerImplClassName:(Lorg/hibernate/EntityMode;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     19
      10: aload_0
      11: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
      14: aload_1
      15: invokevirtual #66                 // Method org/hibernate/mapping/PersistentClass.getTuplizerImplClassName:(Lorg/hibernate/EntityMode;)Ljava/lang/String;
      18: astore_2
      19: aload_2
      20: areturn

  public java.util.Map getTuplizerMap();
    Code:
       0: aload_0
       1: invokespecial #67                 // Method org/hibernate/mapping/PersistentClass.getTuplizerMap:()Ljava/util/Map;
       4: astore_1
       5: aload_0
       6: invokevirtual #5                  // Method getSuperclass:()Lorg/hibernate/mapping/PersistentClass;
       9: invokevirtual #67                 // Method org/hibernate/mapping/PersistentClass.getTuplizerMap:()Ljava/util/Map;
      12: astore_2
      13: aload_1
      14: ifnonnull     23
      17: aload_2
      18: ifnonnull     23
      21: aconst_null
      22: areturn
      23: new           #68                 // class java/util/HashMap
      26: dup
      27: invokespecial #69                 // Method java/util/HashMap."<init>":()V
      30: astore_3
      31: aload_2
      32: ifnull        42
      35: aload_3
      36: aload_2
      37: invokeinterface #70,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      42: aload_1
      43: ifnull        53
      46: aload_3
      47: aload_1
      48: invokeinterface #70,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      53: aload_3
      54: invokestatic  #71                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      57: areturn

  public org.hibernate.mapping.Component getIdentifierMapper();
    Code:
       0: aload_0
       1: getfield      #2                  // Field superclass:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #72                 // Method org/hibernate/mapping/PersistentClass.getIdentifierMapper:()Lorg/hibernate/mapping/Component;
       7: areturn

  public org.hibernate.engine.OptimisticLockStyle getOptimisticLockStyle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field superclass:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #73                 // Method org/hibernate/mapping/PersistentClass.getOptimisticLockStyle:()Lorg/hibernate/engine/OptimisticLockStyle;
       7: areturn
}
