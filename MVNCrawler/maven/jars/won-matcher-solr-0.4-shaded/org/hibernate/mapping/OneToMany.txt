Compiled from "OneToMany.java"
public class org.hibernate.mapping.OneToMany implements org.hibernate.mapping.Value {
  private final org.hibernate.boot.spi.MetadataImplementor metadata;

  private final org.hibernate.mapping.Table referencingTable;

  private java.lang.String referencedEntityName;

  private org.hibernate.mapping.PersistentClass associatedClass;

  private boolean embedded;

  private boolean ignoreNotFound;

  public org.hibernate.mapping.OneToMany(org.hibernate.boot.spi.MetadataImplementor, org.hibernate.mapping.PersistentClass) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field metadata:Lorg/hibernate/boot/spi/MetadataImplementor;
       9: aload_0
      10: aload_2
      11: ifnonnull     18
      14: aconst_null
      15: goto          22
      18: aload_2
      19: invokevirtual #3                  // Method org/hibernate/mapping/PersistentClass.getTable:()Lorg/hibernate/mapping/Table;
      22: putfield      #4                  // Field referencingTable:Lorg/hibernate/mapping/Table;
      25: return

  public org.hibernate.service.ServiceRegistry getServiceRegistry();
    Code:
       0: aload_0
       1: getfield      #2                  // Field metadata:Lorg/hibernate/boot/spi/MetadataImplementor;
       4: invokeinterface #5,  1            // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getMetadataBuildingOptions:()Lorg/hibernate/boot/spi/MetadataBuildingOptions;
       9: invokeinterface #6,  1            // InterfaceMethod org/hibernate/boot/spi/MetadataBuildingOptions.getServiceRegistry:()Lorg/hibernate/boot/registry/StandardServiceRegistry;
      14: areturn

  private org.hibernate.type.EntityType getEntityType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field metadata:Lorg/hibernate/boot/spi/MetadataImplementor;
       4: invokeinterface #7,  1            // InterfaceMethod org/hibernate/boot/spi/MetadataImplementor.getTypeResolver:()Lorg/hibernate/type/TypeResolver;
       9: invokevirtual #8                  // Method org/hibernate/type/TypeResolver.getTypeFactory:()Lorg/hibernate/type/TypeFactory;
      12: aload_0
      13: invokevirtual #9                  // Method getReferencedEntityName:()Ljava/lang/String;
      16: iconst_1
      17: aconst_null
      18: iconst_0
      19: iconst_0
      20: aload_0
      21: invokevirtual #10                 // Method isIgnoreNotFound:()Z
      24: iconst_0
      25: invokevirtual #11                 // Method org/hibernate/type/TypeFactory.manyToOne:(Ljava/lang/String;ZLjava/lang/String;ZZZZ)Lorg/hibernate/type/EntityType;
      28: areturn

  public org.hibernate.mapping.PersistentClass getAssociatedClass();
    Code:
       0: aload_0
       1: getfield      #12                 // Field associatedClass:Lorg/hibernate/mapping/PersistentClass;
       4: areturn

  public void setAssociatedClass(org.hibernate.mapping.PersistentClass);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field associatedClass:Lorg/hibernate/mapping/PersistentClass;
       5: return

  public void createForeignKey();
    Code:
       0: return

  public java.util.Iterator<org.hibernate.mapping.Selectable> getColumnIterator();
    Code:
       0: aload_0
       1: getfield      #12                 // Field associatedClass:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #13                 // Method org/hibernate/mapping/PersistentClass.getKey:()Lorg/hibernate/mapping/KeyValue;
       7: invokeinterface #14,  1           // InterfaceMethod org/hibernate/mapping/KeyValue.getColumnIterator:()Ljava/util/Iterator;
      12: areturn

  public int getColumnSpan();
    Code:
       0: aload_0
       1: getfield      #12                 // Field associatedClass:Lorg/hibernate/mapping/PersistentClass;
       4: invokevirtual #13                 // Method org/hibernate/mapping/PersistentClass.getKey:()Lorg/hibernate/mapping/KeyValue;
       7: invokeinterface #15,  1           // InterfaceMethod org/hibernate/mapping/KeyValue.getColumnSpan:()I
      12: ireturn

  public org.hibernate.FetchMode getFetchMode();
    Code:
       0: getstatic     #16                 // Field org/hibernate/FetchMode.JOIN:Lorg/hibernate/FetchMode;
       3: areturn

  public org.hibernate.mapping.Table getTable();
    Code:
       0: aload_0
       1: getfield      #4                  // Field referencingTable:Lorg/hibernate/mapping/Table;
       4: areturn

  public org.hibernate.type.Type getType();
    Code:
       0: aload_0
       1: invokespecial #17                 // Method getEntityType:()Lorg/hibernate/type/EntityType;
       4: areturn

  public boolean isNullable();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isSimpleValue();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAlternateUniqueKey();
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasFormula();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isValid(org.hibernate.engine.spi.Mapping) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: getfield      #18                 // Field referencedEntityName:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #19                 // class org/hibernate/MappingException
      10: dup
      11: ldc           #20                 // String one to many association must specify the referenced entity
      13: invokespecial #21                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: iconst_1
      18: ireturn

  public java.lang.String getReferencedEntityName();
    Code:
       0: aload_0
       1: getfield      #18                 // Field referencedEntityName:Ljava/lang/String;
       4: areturn

  public void setReferencedEntityName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: ifnonnull     9
       5: aconst_null
       6: goto          13
       9: aload_1
      10: invokevirtual #22                 // Method java/lang/String.intern:()Ljava/lang/String;
      13: putfield      #18                 // Field referencedEntityName:Ljava/lang/String;
      16: return

  public void setTypeUsingReflection(java.lang.String, java.lang.String);
    Code:
       0: return

  public java.lang.Object accept(org.hibernate.mapping.ValueVisitor);
    Code:
       0: aload_1
       1: aload_0
       2: invokeinterface #23,  2           // InterfaceMethod org/hibernate/mapping/ValueVisitor.accept:(Lorg/hibernate/mapping/OneToMany;)Ljava/lang/Object;
       7: areturn

  public boolean[] getColumnInsertability();
    Code:
       0: new           #24                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #25                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean[] getColumnUpdateability();
    Code:
       0: new           #24                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #25                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public boolean isIgnoreNotFound();
    Code:
       0: aload_0
       1: getfield      #26                 // Field ignoreNotFound:Z
       4: ireturn

  public void setIgnoreNotFound(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field ignoreNotFound:Z
       5: return
}
