Compiled from "BindingTypeHelper.java"
public class org.hibernate.query.internal.BindingTypeHelper {
  public static final org.hibernate.query.internal.BindingTypeHelper INSTANCE;

  private org.hibernate.query.internal.BindingTypeHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.hibernate.type.BasicType determineTypeForTemporalType(javax.persistence.TemporalType, org.hibernate.type.Type, java.lang.Object);
    Code:
       0: aload_3
       1: ifnull        13
       4: aload_3
       5: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: astore        4
      10: goto          32
      13: aload_2
      14: ifnull        28
      17: aload_2
      18: invokeinterface #3,  1            // InterfaceMethod org/hibernate/type/Type.getReturnedClass:()Ljava/lang/Class;
      23: astore        4
      25: goto          32
      28: ldc           #4                  // class java/sql/Timestamp
      30: astore        4
      32: getstatic     #5                  // Field org/hibernate/query/internal/BindingTypeHelper$1.$SwitchMap$javax$persistence$TemporalType:[I
      35: aload_1
      36: invokevirtual #6                  // Method javax/persistence/TemporalType.ordinal:()I
      39: iaload
      40: tableswitch   { // 1 to 3
                     1: 68
                     2: 76
                     3: 84
               default: 92
          }
      68: aload_0
      69: aload         4
      71: aload_2
      72: invokevirtual #7                  // Method resolveTimestampTemporalTypeVariant:(Ljava/lang/Class;Lorg/hibernate/type/Type;)Lorg/hibernate/type/BasicType;
      75: areturn
      76: aload_0
      77: aload         4
      79: aload_2
      80: invokevirtual #8                  // Method resolveDateTemporalTypeVariant:(Ljava/lang/Class;Lorg/hibernate/type/Type;)Lorg/hibernate/type/BasicType;
      83: areturn
      84: aload_0
      85: aload         4
      87: aload_2
      88: invokevirtual #9                  // Method resolveTimeTemporalTypeVariant:(Ljava/lang/Class;Lorg/hibernate/type/Type;)Lorg/hibernate/type/BasicType;
      91: areturn
      92: new           #10                 // class java/lang/IllegalArgumentException
      95: dup
      96: new           #11                 // class java/lang/StringBuilder
      99: dup
     100: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     103: ldc           #13                 // String Unexpected TemporalType [
     105: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: aload_1
     109: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     112: ldc           #16                 // String ]; expecting TIMESTAMP, DATE or TIME
     114: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     120: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     123: athrow

  public org.hibernate.type.BasicType resolveTimestampTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type);
    Code:
       0: aload_2
       1: ifnull        16
       4: aload_2
       5: instanceof    #19                 // class org/hibernate/type/BasicType
       8: ifeq          16
      11: aload_2
      12: checkcast     #19                 // class org/hibernate/type/BasicType
      15: areturn
      16: ldc           #20                 // class java/util/Calendar
      18: aload_1
      19: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      22: ifeq          29
      25: getstatic     #22                 // Field org/hibernate/type/CalendarType.INSTANCE:Lorg/hibernate/type/CalendarType;
      28: areturn
      29: ldc           #23                 // class java/util/Date
      31: aload_1
      32: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      35: ifeq          42
      38: getstatic     #24                 // Field org/hibernate/type/TimestampType.INSTANCE:Lorg/hibernate/type/TimestampType;
      41: areturn
      42: ldc           #25                 // class java/time/Instant
      44: aload_1
      45: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      48: ifeq          55
      51: getstatic     #26                 // Field org/hibernate/type/InstantType.INSTANCE:Lorg/hibernate/type/InstantType;
      54: areturn
      55: ldc           #27                 // class java/time/OffsetDateTime
      57: aload_1
      58: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      61: ifeq          68
      64: getstatic     #28                 // Field org/hibernate/type/OffsetDateTimeType.INSTANCE:Lorg/hibernate/type/OffsetDateTimeType;
      67: areturn
      68: ldc           #29                 // class java/time/ZonedDateTime
      70: aload_1
      71: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      74: ifeq          81
      77: getstatic     #30                 // Field org/hibernate/type/ZonedDateTimeType.INSTANCE:Lorg/hibernate/type/ZonedDateTimeType;
      80: areturn
      81: ldc           #31                 // class java/time/OffsetTime
      83: aload_1
      84: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      87: ifeq          94
      90: getstatic     #32                 // Field org/hibernate/type/OffsetTimeType.INSTANCE:Lorg/hibernate/type/OffsetTimeType;
      93: areturn
      94: new           #10                 // class java/lang/IllegalArgumentException
      97: dup
      98: new           #11                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #33                 // String Unsure how to handle given Java type [
     107: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
     114: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #35                 // String ] as TemporalType#TIMESTAMP
     119: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     128: athrow

  public org.hibernate.type.BasicType resolveDateTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type);
    Code:
       0: aload_2
       1: ifnull        29
       4: aload_2
       5: instanceof    #19                 // class org/hibernate/type/BasicType
       8: ifeq          29
      11: aload_2
      12: invokeinterface #3,  1            // InterfaceMethod org/hibernate/type/Type.getReturnedClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      21: ifeq          29
      24: aload_2
      25: checkcast     #19                 // class org/hibernate/type/BasicType
      28: areturn
      29: ldc           #20                 // class java/util/Calendar
      31: aload_1
      32: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      35: ifeq          42
      38: getstatic     #36                 // Field org/hibernate/type/CalendarDateType.INSTANCE:Lorg/hibernate/type/CalendarDateType;
      41: areturn
      42: ldc           #23                 // class java/util/Date
      44: aload_1
      45: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      48: ifeq          55
      51: getstatic     #24                 // Field org/hibernate/type/TimestampType.INSTANCE:Lorg/hibernate/type/TimestampType;
      54: areturn
      55: ldc           #25                 // class java/time/Instant
      57: aload_1
      58: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      61: ifeq          68
      64: getstatic     #28                 // Field org/hibernate/type/OffsetDateTimeType.INSTANCE:Lorg/hibernate/type/OffsetDateTimeType;
      67: areturn
      68: ldc           #27                 // class java/time/OffsetDateTime
      70: aload_1
      71: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      74: ifeq          81
      77: getstatic     #28                 // Field org/hibernate/type/OffsetDateTimeType.INSTANCE:Lorg/hibernate/type/OffsetDateTimeType;
      80: areturn
      81: ldc           #29                 // class java/time/ZonedDateTime
      83: aload_1
      84: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      87: ifeq          94
      90: getstatic     #30                 // Field org/hibernate/type/ZonedDateTimeType.INSTANCE:Lorg/hibernate/type/ZonedDateTimeType;
      93: areturn
      94: new           #10                 // class java/lang/IllegalArgumentException
      97: dup
      98: new           #11                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #33                 // String Unsure how to handle given Java type [
     107: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_1
     111: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
     114: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #37                 // String ] as TemporalType#DATE
     119: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     128: athrow

  public org.hibernate.type.BasicType resolveTimeTemporalTypeVariant(java.lang.Class, org.hibernate.type.Type);
    Code:
       0: ldc           #20                 // class java/util/Calendar
       2: aload_1
       3: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       6: ifeq          13
       9: getstatic     #38                 // Field org/hibernate/type/CalendarTimeType.INSTANCE:Lorg/hibernate/type/CalendarTimeType;
      12: areturn
      13: ldc           #23                 // class java/util/Date
      15: aload_1
      16: invokevirtual #21                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifeq          26
      22: getstatic     #24                 // Field org/hibernate/type/TimestampType.INSTANCE:Lorg/hibernate/type/TimestampType;
      25: areturn
      26: new           #10                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #11                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #33                 // String Unsure how to handle given Java type [
      39: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #39                 // String ] as TemporalType#TIME
      51: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      60: athrow

  static {};
    Code:
       0: new           #40                 // class org/hibernate/query/internal/BindingTypeHelper
       3: dup
       4: invokespecial #41                 // Method "<init>":()V
       7: putstatic     #42                 // Field INSTANCE:Lorg/hibernate/query/internal/BindingTypeHelper;
      10: return
}
