Compiled from "QueryTranslator.java"
public interface org.hibernate.hql.spi.QueryTranslator {
  public static final java.lang.String ERROR_CANNOT_FETCH_WITH_ITERATE;

  public static final java.lang.String ERROR_NAMED_PARAMETER_DOES_NOT_APPEAR;

  public static final java.lang.String ERROR_CANNOT_DETERMINE_TYPE;

  public static final java.lang.String ERROR_CANNOT_FORMAT_LITERAL;

  public abstract void compile(java.util.Map, boolean) throws org.hibernate.QueryException, org.hibernate.MappingException;

  public abstract java.util.List list(org.hibernate.engine.spi.SharedSessionContractImplementor, org.hibernate.engine.spi.QueryParameters) throws org.hibernate.HibernateException;

  public abstract java.util.Iterator iterate(org.hibernate.engine.spi.QueryParameters, org.hibernate.event.spi.EventSource) throws org.hibernate.HibernateException;

  public abstract org.hibernate.query.spi.ScrollableResultsImplementor scroll(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor) throws org.hibernate.HibernateException;

  public abstract int executeUpdate(org.hibernate.engine.spi.QueryParameters, org.hibernate.engine.spi.SharedSessionContractImplementor) throws org.hibernate.HibernateException;

  public abstract java.util.Set<java.io.Serializable> getQuerySpaces();

  public abstract java.lang.String getQueryIdentifier();

  public abstract java.lang.String getSQLString();

  public abstract java.util.List<java.lang.String> collectSqlStrings();

  public abstract java.lang.String getQueryString();

  public abstract java.util.Map getEnabledFilters();

  public abstract org.hibernate.type.Type[] getReturnTypes();

  public abstract java.lang.String[] getReturnAliases();

  public abstract java.lang.String[][] getColumnNames();

  public abstract org.hibernate.hql.spi.ParameterTranslations getParameterTranslations();

  public abstract void validateScrollability() throws org.hibernate.HibernateException;

  public abstract boolean containsCollectionFetches();

  public abstract boolean isManipulationStatement();

  public abstract java.lang.Class getDynamicInstantiationResultType();
}
