Compiled from "NodeTraverser.java"
public class org.hibernate.hql.internal.ast.util.NodeTraverser {
  private final org.hibernate.hql.internal.ast.util.NodeTraverser$VisitationStrategy strategy;

  public org.hibernate.hql.internal.ast.util.NodeTraverser(org.hibernate.hql.internal.ast.util.NodeTraverser$VisitationStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field strategy:Lorg/hibernate/hql/internal/ast/util/NodeTraverser$VisitationStrategy;
       9: return

  public void traverseDepthFirst(antlr.collections.AST);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #4                  // String node to traverse cannot be null!
      10: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokeinterface #6,  1            // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      21: invokespecial #7                  // Method visitDepthFirst:(Lantlr/collections/AST;)V
      24: return

  private void visitDepthFirst(antlr.collections.AST);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: new           #8                  // class java/util/ArrayDeque
       8: dup
       9: invokespecial #9                  // Method java/util/ArrayDeque."<init>":()V
      12: astore_2
      13: aload_2
      14: aload_1
      15: invokeinterface #10,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      20: aload_2
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
      26: ifne          94
      29: aload_2
      30: invokeinterface #12,  1           // InterfaceMethod java/util/Deque.removeLast:()Ljava/lang/Object;
      35: checkcast     #13                 // class antlr/collections/AST
      38: astore_1
      39: aload_0
      40: getfield      #2                  // Field strategy:Lorg/hibernate/hql/internal/ast/util/NodeTraverser$VisitationStrategy;
      43: aload_1
      44: invokeinterface #14,  2           // InterfaceMethod org/hibernate/hql/internal/ast/util/NodeTraverser$VisitationStrategy.visit:(Lantlr/collections/AST;)V
      49: aload_1
      50: invokeinterface #15,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      55: ifnull        70
      58: aload_2
      59: aload_1
      60: invokeinterface #15,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      65: invokeinterface #10,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      70: aload_1
      71: invokeinterface #6,  1            // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      76: ifnull        20
      79: aload_2
      80: aload_1
      81: invokeinterface #6,  1            // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      86: invokeinterface #10,  2           // InterfaceMethod java/util/Deque.addLast:(Ljava/lang/Object;)V
      91: goto          20
      94: return
}
