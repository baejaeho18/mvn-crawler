Compiled from "BinaryType.java"
public class org.hibernate.type.BinaryType extends org.hibernate.type.AbstractSingleColumnStandardBasicType<byte[]> implements org.hibernate.type.VersionType<byte[]> {
  public static final org.hibernate.type.BinaryType INSTANCE;

  public java.lang.String getName();
    Code:
       0: ldc           #1                  // String binary
       2: areturn

  public org.hibernate.type.BinaryType();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/hibernate/type/descriptor/sql/VarbinaryTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/sql/VarbinaryTypeDescriptor;
       4: getstatic     #3                  // Field org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor;
       7: invokespecial #4                  // Method org/hibernate/type/AbstractSingleColumnStandardBasicType."<init>":(Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)V
      10: return

  public java.lang.String[] getRegistrationKeys();
    Code:
       0: iconst_3
       1: anewarray     #5                  // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #6                  // Method getName:()Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #7                  // String byte[]
      15: aastore
      16: dup
      17: iconst_2
      18: ldc           #8                  // class "[B"
      20: invokevirtual #9                  // Method java/lang/Class.getName:()Ljava/lang/String;
      23: aastore
      24: areturn

  public byte[] seed(org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aconst_null
       1: areturn

  public byte[] next(byte[], org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_1
       1: areturn

  public java.util.Comparator<byte[]> getComparator();
    Code:
       0: getstatic     #3                  // Field org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor;
       3: invokevirtual #10                 // Method org/hibernate/type/descriptor/java/PrimitiveByteArrayTypeDescriptor.getComparator:()Ljava/util/Comparator;
       6: areturn

  public java.lang.Object next(java.lang.Object, org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class "[B"
       5: aload_2
       6: invokevirtual #11                 // Method next:([BLorg/hibernate/engine/spi/SharedSessionContractImplementor;)[B
       9: areturn

  public java.lang.Object seed(org.hibernate.engine.spi.SharedSessionContractImplementor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method seed:(Lorg/hibernate/engine/spi/SharedSessionContractImplementor;)[B
       5: areturn

  static {};
    Code:
       0: new           #13                 // class org/hibernate/type/BinaryType
       3: dup
       4: invokespecial #14                 // Method "<init>":()V
       7: putstatic     #15                 // Field INSTANCE:Lorg/hibernate/type/BinaryType;
      10: return
}
