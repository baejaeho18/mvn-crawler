Compiled from "TypeResolver.java"
public class org.hibernate.type.TypeResolver implements java.io.Serializable {
  private final org.hibernate.type.BasicTypeRegistry basicTypeRegistry;

  private final org.hibernate.type.TypeFactory typeFactory;

  public org.hibernate.type.TypeResolver();
    Code:
       0: aload_0
       1: new           #1                  // class org/hibernate/type/BasicTypeRegistry
       4: dup
       5: invokespecial #2                  // Method org/hibernate/type/BasicTypeRegistry."<init>":()V
       8: new           #3                  // class org/hibernate/type/TypeFactory
      11: dup
      12: invokespecial #4                  // Method org/hibernate/type/TypeFactory."<init>":()V
      15: invokespecial #5                  // Method "<init>":(Lorg/hibernate/type/BasicTypeRegistry;Lorg/hibernate/type/TypeFactory;)V
      18: return

  public org.hibernate.type.TypeResolver(org.hibernate.type.BasicTypeRegistry, org.hibernate.type.TypeFactory);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #8                  // Field typeFactory:Lorg/hibernate/type/TypeFactory;
      14: return

  public org.hibernate.type.TypeResolver scope(org.hibernate.engine.spi.SessionFactoryImplementor);
    Code:
       0: aload_0
       1: getfield      #8                  // Field typeFactory:Lorg/hibernate/type/TypeFactory;
       4: aload_1
       5: invokevirtual #9                  // Method org/hibernate/type/TypeFactory.injectSessionFactory:(Lorg/hibernate/engine/spi/SessionFactoryImplementor;)V
       8: new           #10                 // class org/hibernate/type/TypeResolver
      11: dup
      12: aload_0
      13: getfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
      16: invokevirtual #11                 // Method org/hibernate/type/BasicTypeRegistry.shallowCopy:()Lorg/hibernate/type/BasicTypeRegistry;
      19: aload_0
      20: getfield      #8                  // Field typeFactory:Lorg/hibernate/type/TypeFactory;
      23: invokespecial #5                  // Method "<init>":(Lorg/hibernate/type/BasicTypeRegistry;Lorg/hibernate/type/TypeFactory;)V
      26: areturn

  public void registerTypeOverride(org.hibernate.type.BasicType);
    Code:
       0: aload_0
       1: getfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
       4: aload_1
       5: invokevirtual #12                 // Method org/hibernate/type/BasicTypeRegistry.register:(Lorg/hibernate/type/BasicType;)V
       8: return

  public void registerTypeOverride(org.hibernate.usertype.UserType, java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method org/hibernate/type/BasicTypeRegistry.register:(Lorg/hibernate/usertype/UserType;[Ljava/lang/String;)V
       9: return

  public void registerTypeOverride(org.hibernate.usertype.CompositeUserType, java.lang.String[]);
    Code:
       0: aload_0
       1: getfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
       4: aload_1
       5: aload_2
       6: invokevirtual #14                 // Method org/hibernate/type/BasicTypeRegistry.register:(Lorg/hibernate/usertype/CompositeUserType;[Ljava/lang/String;)V
       9: return

  public org.hibernate.type.TypeFactory getTypeFactory();
    Code:
       0: aload_0
       1: getfield      #8                  // Field typeFactory:Lorg/hibernate/type/TypeFactory;
       4: areturn

  public org.hibernate.type.BasicType basic(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field basicTypeRegistry:Lorg/hibernate/type/BasicTypeRegistry;
       4: aload_1
       5: invokevirtual #15                 // Method org/hibernate/type/BasicTypeRegistry.getRegisteredType:(Ljava/lang/String;)Lorg/hibernate/type/BasicType;
       8: areturn

  public org.hibernate.type.Type heuristicType(java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #16                 // Method heuristicType:(Ljava/lang/String;Ljava/util/Properties;)Lorg/hibernate/type/Type;
       6: areturn

  public org.hibernate.type.Type heuristicType(java.lang.String, java.util.Properties) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method basic:(Ljava/lang/String;)Lorg/hibernate/type/BasicType;
       5: astore_3
       6: aload_3
       7: ifnull        12
      10: aload_3
      11: areturn
      12: aload_1
      13: invokestatic  #18                 // Method org/hibernate/internal/util/ReflectHelper.classForName:(Ljava/lang/String;)Ljava/lang/Class;
      16: astore        4
      18: aload         4
      20: ifnull        34
      23: aload_0
      24: getfield      #8                  // Field typeFactory:Lorg/hibernate/type/TypeFactory;
      27: aload         4
      29: aload_2
      30: invokevirtual #19                 // Method org/hibernate/type/TypeFactory.byClass:(Ljava/lang/Class;Ljava/util/Properties;)Lorg/hibernate/type/Type;
      33: areturn
      34: goto          39
      37: astore        4
      39: aconst_null
      40: areturn
    Exception table:
       from    to  target type
          12    33    37   Class java/lang/ClassNotFoundException
}
