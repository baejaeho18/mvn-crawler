Compiled from "DateType.java"
public class org.hibernate.type.DateType extends org.hibernate.type.AbstractSingleColumnStandardBasicType<java.util.Date> implements org.hibernate.type.IdentifierType<java.util.Date>, org.hibernate.type.LiteralType<java.util.Date> {
  public static final org.hibernate.type.DateType INSTANCE;

  public org.hibernate.type.DateType();
    Code:
       0: aload_0
       1: getstatic     #1                  // Field org/hibernate/type/descriptor/sql/DateTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/sql/DateTypeDescriptor;
       4: getstatic     #2                  // Field org/hibernate/type/descriptor/java/JdbcDateTypeDescriptor.INSTANCE:Lorg/hibernate/type/descriptor/java/JdbcDateTypeDescriptor;
       7: invokespecial #3                  // Method org/hibernate/type/AbstractSingleColumnStandardBasicType."<init>":(Lorg/hibernate/type/descriptor/sql/SqlTypeDescriptor;Lorg/hibernate/type/descriptor/java/JavaTypeDescriptor;)V
      10: return

  public java.lang.String getName();
    Code:
       0: ldc           #4                  // String date
       2: areturn

  public java.lang.String[] getRegistrationKeys();
    Code:
       0: iconst_2
       1: anewarray     #5                  // class java/lang/String
       4: dup
       5: iconst_0
       6: aload_0
       7: invokevirtual #6                  // Method getName:()Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: ldc           #7                  // class java/sql/Date
      15: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      18: aastore
      19: areturn

  public java.lang.String objectToSQLString(java.util.Date, org.hibernate.dialect.Dialect) throws java.lang.Exception;
    Code:
       0: ldc           #7                  // class java/sql/Date
       2: aload_1
       3: invokevirtual #9                  // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       6: ifeq          16
       9: aload_1
      10: checkcast     #7                  // class java/sql/Date
      13: goto          27
      16: new           #7                  // class java/sql/Date
      19: dup
      20: aload_1
      21: invokevirtual #10                 // Method java/util/Date.getTime:()J
      24: invokespecial #11                 // Method java/sql/Date."<init>":(J)V
      27: astore_3
      28: getstatic     #12                 // Field org/hibernate/type/StringType.INSTANCE:Lorg/hibernate/type/StringType;
      31: aload_3
      32: invokevirtual #13                 // Method java/sql/Date.toString:()Ljava/lang/String;
      35: aload_2
      36: invokevirtual #14                 // Method org/hibernate/type/StringType.objectToSQLString:(Ljava/lang/String;Lorg/hibernate/dialect/Dialect;)Ljava/lang/String;
      39: areturn

  public java.util.Date stringToObject(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method fromString:(Ljava/lang/String;)Ljava/lang/Object;
       5: checkcast     #16                 // class java/util/Date
       8: areturn

  public java.lang.Object stringToObject(java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method stringToObject:(Ljava/lang/String;)Ljava/util/Date;
       5: areturn

  public java.lang.String objectToSQLString(java.lang.Object, org.hibernate.dialect.Dialect) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #16                 // class java/util/Date
       5: aload_2
       6: invokevirtual #18                 // Method objectToSQLString:(Ljava/util/Date;Lorg/hibernate/dialect/Dialect;)Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: new           #19                 // class org/hibernate/type/DateType
       3: dup
       4: invokespecial #20                 // Method "<init>":()V
       7: putstatic     #21                 // Field INSTANCE:Lorg/hibernate/type/DateType;
      10: return
}
