Compiled from "FetchGraphLoadPlanBuildingStrategy.java"
public class org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy extends org.hibernate.loader.plan.build.internal.AbstractEntityGraphVisitationStrategy {
  private final org.hibernate.graph.spi.GraphNodeImplementor rootEntityGraph;

  public org.hibernate.loader.plan.build.internal.FetchGraphLoadPlanBuildingStrategy(org.hibernate.engine.spi.SessionFactoryImplementor, org.hibernate.engine.spi.LoadQueryInfluencers, org.hibernate.LockMode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/hibernate/loader/plan/build/internal/AbstractEntityGraphVisitationStrategy."<init>":(Lorg/hibernate/engine/spi/SessionFactoryImplementor;Lorg/hibernate/engine/spi/LoadQueryInfluencers;Lorg/hibernate/LockMode;)V
       7: aload_0
       8: aload_2
       9: invokevirtual #2                  // Method org/hibernate/engine/spi/LoadQueryInfluencers.getFetchGraph:()Ljavax/persistence/EntityGraph;
      12: checkcast     #3                  // class org/hibernate/graph/spi/GraphNodeImplementor
      15: putfield      #4                  // Field rootEntityGraph:Lorg/hibernate/graph/spi/GraphNodeImplementor;
      18: return

  protected org.hibernate.graph.spi.GraphNodeImplementor getRootEntityGraph();
    Code:
       0: aload_0
       1: getfield      #4                  // Field rootEntityGraph:Lorg/hibernate/graph/spi/GraphNodeImplementor;
       4: areturn

  protected org.hibernate.engine.FetchStrategy resolveImplicitFetchStrategyFromEntityGraph(org.hibernate.persister.walking.spi.AssociationAttributeDefinition);
    Code:
       0: getstatic     #5                  // Field DEFAULT_LAZY:Lorg/hibernate/engine/FetchStrategy;
       3: areturn
}
