Compiled from "TransactionImpl.java"
public class org.hibernate.engine.transaction.internal.TransactionImpl implements org.hibernate.engine.transaction.spi.TransactionImplementor {
  private static final org.jboss.logging.Logger LOG;

  private final org.hibernate.resource.transaction.spi.TransactionCoordinator transactionCoordinator;

  private final org.hibernate.engine.spi.ExceptionConverter exceptionConverter;

  private org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver transactionDriverControl;

  public org.hibernate.engine.transaction.internal.TransactionImpl(org.hibernate.resource.transaction.spi.TransactionCoordinator, org.hibernate.engine.spi.ExceptionConverter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field exceptionConverter:Lorg/hibernate/engine/spi/ExceptionConverter;
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      21: putfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      24: return

  public void begin();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: invokeinterface #6,  1            // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.isActive:()Z
       9: ifne          22
      12: new           #7                  // class org/hibernate/TransactionException
      15: dup
      16: ldc           #8                  // String Cannot begin Transaction on closed Session/EntityManager
      18: invokespecial #9                  // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: aload_0
      23: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      26: ifnonnull     42
      29: aload_0
      30: aload_0
      31: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      34: invokeinterface #4,  1            // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      39: putfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      42: aload_0
      43: invokevirtual #10                 // Method isActive:()Z
      46: ifeq          59
      49: new           #11                 // class java/lang/IllegalStateException
      52: dup
      53: ldc           #12                 // String Transaction already active
      55: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: getstatic     #14                 // Field LOG:Lorg/jboss/logging/Logger;
      62: ldc           #15                 // String begin
      64: invokevirtual #16                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      67: aload_0
      68: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      71: invokeinterface #17,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.begin:()V
      76: return

  public void commit();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method isActive:()Z
       4: ifne          17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #18                 // String Transaction not successfully started
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: getstatic     #14                 // Field LOG:Lorg/jboss/logging/Logger;
      20: ldc           #19                 // String committing
      22: invokevirtual #16                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      25: aload_0
      26: invokevirtual #20                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      29: invokeinterface #21,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.commit:()V
      34: goto          49
      37: astore_1
      38: aload_0
      39: getfield      #3                  // Field exceptionConverter:Lorg/hibernate/engine/spi/ExceptionConverter;
      42: aload_1
      43: invokeinterface #23,  2           // InterfaceMethod org/hibernate/engine/spi/ExceptionConverter.convertCommitException:(Ljava/lang/RuntimeException;)Ljava/lang/RuntimeException;
      48: athrow
      49: return
    Exception table:
       from    to  target type
          25    34    37   Class java/lang/RuntimeException

  public org.hibernate.resource.transaction.spi.TransactionCoordinator$TransactionDriver internalGetTransactionDriverControl();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     17
       7: new           #11                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #24                 // String Transaction was not properly begun/started
      13: invokespecial #13                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      21: areturn

  public void rollback();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       4: astore_1
       5: aload_1
       6: getstatic     #26                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.ROLLED_BACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       9: if_acmpeq     19
      12: aload_1
      13: getstatic     #27                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.NOT_ACTIVE:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      16: if_acmpne     28
      19: getstatic     #14                 // Field LOG:Lorg/jboss/logging/Logger;
      22: ldc           #28                 // String rollback() called on an inactive transaction
      24: invokevirtual #16                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      27: return
      28: aload_1
      29: invokevirtual #29                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.canRollback:()Z
      32: ifne          70
      35: new           #7                  // class org/hibernate/TransactionException
      38: dup
      39: new           #30                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #32                 // String Cannot rollback transaction in current status [
      48: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #34                 // Method org/hibernate/resource/transaction/spi/TransactionStatus.name:()Ljava/lang/String;
      55: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #35                 // String ]
      60: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #9                  // Method org/hibernate/TransactionException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: getstatic     #14                 // Field LOG:Lorg/jboss/logging/Logger;
      73: ldc           #37                 // String rolling back
      75: invokevirtual #16                 // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      78: aload_1
      79: getstatic     #38                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.FAILED_COMMIT:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      82: if_acmpne     92
      85: aload_0
      86: invokevirtual #39                 // Method allowFailedCommitToPhysicallyRollback:()Z
      89: ifeq          101
      92: aload_0
      93: invokevirtual #20                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      96: invokeinterface #40,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.rollback:()V
     101: return

  public boolean isActive();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #41                 // Method isActive:(Z)Z
       5: ireturn

  public boolean isActive(boolean);
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      12: invokeinterface #4,  1            // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      17: putfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      20: aload_0
      21: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      24: iload_1
      25: invokeinterface #42,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.isActive:(Z)Z
      30: ireturn

  public org.hibernate.resource.transaction.spi.TransactionStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: ifnonnull     20
       7: aload_0
       8: aload_0
       9: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
      12: invokeinterface #4,  1            // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      17: putfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      20: aload_0
      21: getfield      #5                  // Field transactionDriverControl:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
      24: invokeinterface #43,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
      29: areturn

  public void registerSynchronization(javax.transaction.Synchronization) throws org.hibernate.HibernateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: invokeinterface #44,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getLocalSynchronizations:()Lorg/hibernate/resource/transaction/spi/SynchronizationRegistry;
       9: aload_1
      10: invokeinterface #45,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/SynchronizationRegistry.registerSynchronization:(Ljavax/transaction/Synchronization;)V
      15: return

  public void setTimeout(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: iload_1
       5: invokeinterface #46,  2           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.setTimeOut:(I)V
      10: return

  public int getTimeout();
    Code:
       0: aload_0
       1: getfield      #2                  // Field transactionCoordinator:Lorg/hibernate/resource/transaction/spi/TransactionCoordinator;
       4: invokeinterface #47,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator.getTimeOut:()I
       9: ireturn

  public void setRollbackOnly();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method internalGetTransactionDriverControl:()Lorg/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver;
       4: invokeinterface #48,  1           // InterfaceMethod org/hibernate/resource/transaction/spi/TransactionCoordinator$TransactionDriver.markRollbackOnly:()V
       9: return

  public boolean getRollbackOnly();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getStatus:()Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       4: getstatic     #49                 // Field org/hibernate/resource/transaction/spi/TransactionStatus.MARKED_ROLLBACK:Lorg/hibernate/resource/transaction/spi/TransactionStatus;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  protected boolean allowFailedCommitToPhysicallyRollback();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #50                 // class org/hibernate/engine/transaction/internal/TransactionImpl
       2: invokestatic  #51                 // Method org/hibernate/internal/CoreLogging.logger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #14                 // Field LOG:Lorg/jboss/logging/Logger;
       8: return
}
