Compiled from "SessionFactoryImplementor.java"
public interface org.hibernate.engine.spi.SessionFactoryImplementor extends org.hibernate.engine.spi.Mapping,org.hibernate.SessionFactory,org.hibernate.query.spi.QueryParameterBindingTypeResolver {
  public abstract java.lang.String getUuid();

  public abstract java.lang.String getName();

  public abstract org.hibernate.engine.spi.SessionBuilderImplementor withOptions();

  public abstract org.hibernate.Session openTemporarySession() throws org.hibernate.HibernateException;

  public abstract org.hibernate.engine.spi.CacheImplementor getCache();

  public abstract org.hibernate.stat.spi.StatisticsImplementor getStatistics();

  public abstract org.hibernate.service.spi.ServiceRegistryImplementor getServiceRegistry();

  public abstract org.hibernate.Interceptor getInterceptor();

  public abstract org.hibernate.engine.query.spi.QueryPlanCache getQueryPlanCache();

  public abstract org.hibernate.query.spi.NamedQueryRepository getNamedQueryRepository();

  public abstract org.hibernate.engine.profile.FetchProfile getFetchProfile(java.lang.String);

  public abstract org.hibernate.type.TypeResolver getTypeResolver();

  public abstract org.hibernate.id.IdentifierGenerator getIdentifierGenerator(java.lang.String);

  public abstract org.hibernate.proxy.EntityNotFoundDelegate getEntityNotFoundDelegate();

  public abstract org.hibernate.dialect.function.SQLFunctionRegistry getSqlFunctionRegistry();

  public abstract void addObserver(org.hibernate.SessionFactoryObserver);

  public abstract org.hibernate.CustomEntityDirtinessStrategy getCustomEntityDirtinessStrategy();

  public abstract org.hibernate.context.spi.CurrentTenantIdentifierResolver getCurrentTenantIdentifierResolver();

  public default java.lang.Iterable<org.hibernate.EntityNameResolver> iterateEntityNameResolvers();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: invokeinterface #2,  1            // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getEntityNameResolvers:()Ljava/util/Collection;
      11: areturn

  public abstract org.hibernate.engine.spi.SessionFactoryImplementor$DeserializationResolver getDeserializationResolver();

  public default org.hibernate.type.Type[] getReturnTypes(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #4                  // String Concept of query return org.hibernate.type.Types is no longer supported
       6: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public default java.lang.String[] getReturnAliases(java.lang.String);
    Code:
       0: new           #3                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String Access to of query return aliases via Sessionfactory is no longer supported
       6: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public default org.hibernate.stat.spi.StatisticsImplementor getStatisticsImplementor();
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod getStatistics:()Lorg/hibernate/stat/spi/StatisticsImplementor;
       6: areturn

  public default org.hibernate.engine.spi.NamedQueryDefinition getNamedQuery(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod getNamedQueryRepository:()Lorg/hibernate/query/spi/NamedQueryRepository;
       6: aload_1
       7: invokevirtual #9                  // Method org/hibernate/query/spi/NamedQueryRepository.getNamedQueryDefinition:(Ljava/lang/String;)Lorg/hibernate/engine/spi/NamedQueryDefinition;
      10: areturn

  public default void registerNamedQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedQueryDefinition);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod getNamedQueryRepository:()Lorg/hibernate/query/spi/NamedQueryRepository;
       6: aload_1
       7: aload_2
       8: invokevirtual #10                 // Method org/hibernate/query/spi/NamedQueryRepository.registerNamedQueryDefinition:(Ljava/lang/String;Lorg/hibernate/engine/spi/NamedQueryDefinition;)V
      11: return

  public default org.hibernate.engine.spi.NamedSQLQueryDefinition getNamedSQLQuery(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod getNamedQueryRepository:()Lorg/hibernate/query/spi/NamedQueryRepository;
       6: aload_1
       7: invokevirtual #11                 // Method org/hibernate/query/spi/NamedQueryRepository.getNamedSQLQueryDefinition:(Ljava/lang/String;)Lorg/hibernate/engine/spi/NamedSQLQueryDefinition;
      10: areturn

  public default void registerNamedSQLQueryDefinition(java.lang.String, org.hibernate.engine.spi.NamedSQLQueryDefinition);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod getNamedQueryRepository:()Lorg/hibernate/query/spi/NamedQueryRepository;
       6: aload_1
       7: aload_2
       8: invokevirtual #12                 // Method org/hibernate/query/spi/NamedQueryRepository.registerNamedSQLQueryDefinition:(Ljava/lang/String;Lorg/hibernate/engine/spi/NamedSQLQueryDefinition;)V
      11: return

  public default org.hibernate.engine.ResultSetMappingDefinition getResultSetMapping(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod getNamedQueryRepository:()Lorg/hibernate/query/spi/NamedQueryRepository;
       6: aload_1
       7: invokevirtual #13                 // Method org/hibernate/query/spi/NamedQueryRepository.getResultSetMappingDefinition:(Ljava/lang/String;)Lorg/hibernate/engine/ResultSetMappingDefinition;
      10: areturn

  public abstract org.hibernate.engine.jdbc.spi.JdbcServices getJdbcServices();

  public default org.hibernate.dialect.Dialect getDialect();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getServiceRegistry:()Lorg/hibernate/service/spi/ServiceRegistryImplementor;
       6: ifnonnull     19
       9: new           #15                 // class java/lang/IllegalStateException
      12: dup
      13: ldc           #16                 // String Cannot determine dialect because serviceRegistry is null.
      15: invokespecial #17                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: invokeinterface #14,  1           // InterfaceMethod getServiceRegistry:()Lorg/hibernate/service/spi/ServiceRegistryImplementor;
      25: ldc           #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      27: invokeinterface #19,  2           // InterfaceMethod org/hibernate/service/spi/ServiceRegistryImplementor.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      32: checkcast     #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      35: invokeinterface #20,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getDialect:()Lorg/hibernate/dialect/Dialect;
      40: areturn

  public default org.hibernate.exception.spi.SQLExceptionConverter getSQLExceptionConverter();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getServiceRegistry:()Lorg/hibernate/service/spi/ServiceRegistryImplementor;
       6: ldc           #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
       8: invokeinterface #19,  2           // InterfaceMethod org/hibernate/service/spi/ServiceRegistryImplementor.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      13: checkcast     #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      16: invokeinterface #21,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getSqlExceptionHelper:()Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      21: invokevirtual #22                 // Method org/hibernate/engine/jdbc/spi/SqlExceptionHelper.getSqlExceptionConverter:()Lorg/hibernate/exception/spi/SQLExceptionConverter;
      24: areturn

  public default org.hibernate.engine.jdbc.spi.SqlExceptionHelper getSQLExceptionHelper();
    Code:
       0: aload_0
       1: invokeinterface #14,  1           // InterfaceMethod getServiceRegistry:()Lorg/hibernate/service/spi/ServiceRegistryImplementor;
       6: ldc           #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
       8: invokeinterface #19,  2           // InterfaceMethod org/hibernate/service/spi/ServiceRegistryImplementor.getService:(Ljava/lang/Class;)Lorg/hibernate/service/Service;
      13: checkcast     #18                 // class org/hibernate/engine/jdbc/spi/JdbcServices
      16: invokeinterface #21,  1           // InterfaceMethod org/hibernate/engine/jdbc/spi/JdbcServices.getSqlExceptionHelper:()Lorg/hibernate/engine/jdbc/spi/SqlExceptionHelper;
      21: areturn

  public abstract org.hibernate.cfg.Settings getSettings();

  public abstract org.hibernate.metamodel.spi.MetamodelImplementor getMetamodel();

  public default org.hibernate.persister.entity.EntityPersister getEntityPersister(java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #23,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.entityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      12: areturn

  public default java.util.Map<java.lang.String, org.hibernate.persister.entity.EntityPersister> getEntityPersisters();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: invokeinterface #24,  1           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.entityPersisters:()Ljava/util/Map;
      11: areturn

  public default org.hibernate.persister.collection.CollectionPersister getCollectionPersister(java.lang.String) throws org.hibernate.MappingException;
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #25,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.collectionPersister:(Ljava/lang/String;)Lorg/hibernate/persister/collection/CollectionPersister;
      12: areturn

  public default java.util.Map<java.lang.String, org.hibernate.persister.collection.CollectionPersister> getCollectionPersisters();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: invokeinterface #26,  1           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.collectionPersisters:()Ljava/util/Map;
      11: areturn

  public default java.util.Set<java.lang.String> getCollectionRolesByEntityParticipant(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #27,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getCollectionRolesByEntityParticipant:(Ljava/lang/String;)Ljava/util/Set;
      12: areturn

  public default org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.Class);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #28,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.locateEntityPersister:(Ljava/lang/Class;)Lorg/hibernate/persister/entity/EntityPersister;
      12: areturn

  public default org.hibernate.persister.entity.EntityPersister locateEntityPersister(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #29,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.locateEntityPersister:(Ljava/lang/String;)Lorg/hibernate/persister/entity/EntityPersister;
      12: areturn

  public default java.lang.String[] getImplementors(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #30,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getImplementors:(Ljava/lang/String;)[Ljava/lang/String;
      12: areturn

  public default java.lang.String getImportedClassName(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: aload_1
       7: invokeinterface #31,  2           // InterfaceMethod org/hibernate/metamodel/spi/MetamodelImplementor.getImportedClassName:(Ljava/lang/String;)Ljava/lang/String;
      12: areturn

  public abstract javax.persistence.EntityGraph findEntityGraphByName(java.lang.String);

  public default org.hibernate.cache.spi.Region getSecondLevelCacheRegion(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: aload_1
       7: invokeinterface #33,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getEntityRegionAccess:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/EntityRegionAccessStrategy;
      12: astore_2
      13: aload_2
      14: ifnull        24
      17: aload_2
      18: invokeinterface #34,  1           // InterfaceMethod org/hibernate/cache/spi/access/EntityRegionAccessStrategy.getRegion:()Lorg/hibernate/cache/spi/EntityRegion;
      23: areturn
      24: aload_0
      25: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
      30: aload_1
      31: invokeinterface #35,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getCollectionRegionAccess:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/CollectionRegionAccessStrategy;
      36: astore_3
      37: aload_3
      38: ifnull        48
      41: aload_3
      42: invokeinterface #36,  1           // InterfaceMethod org/hibernate/cache/spi/access/CollectionRegionAccessStrategy.getRegion:()Lorg/hibernate/cache/spi/CollectionRegion;
      47: areturn
      48: aconst_null
      49: areturn

  public default org.hibernate.cache.spi.access.RegionAccessStrategy getSecondLevelCacheRegionAccessStrategy(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: aload_1
       7: invokeinterface #33,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getEntityRegionAccess:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/EntityRegionAccessStrategy;
      12: astore_2
      13: aload_2
      14: ifnull        19
      17: aload_2
      18: areturn
      19: aload_0
      20: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
      25: aload_1
      26: invokeinterface #35,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getCollectionRegionAccess:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/CollectionRegionAccessStrategy;
      31: astore_3
      32: aload_3
      33: ifnull        38
      36: aload_3
      37: areturn
      38: aconst_null
      39: areturn

  public default org.hibernate.cache.spi.Region getNaturalIdCacheRegion(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: aload_1
       7: invokeinterface #37,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getNaturalIdCacheRegionAccessStrategy:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/NaturalIdRegionAccessStrategy;
      12: invokeinterface #38,  1           // InterfaceMethod org/hibernate/cache/spi/access/NaturalIdRegionAccessStrategy.getRegion:()Lorg/hibernate/cache/spi/NaturalIdRegion;
      17: areturn

  public default org.hibernate.cache.spi.access.RegionAccessStrategy getNaturalIdCacheRegionAccessStrategy(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: aload_1
       7: invokeinterface #37,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getNaturalIdCacheRegionAccessStrategy:(Ljava/lang/String;)Lorg/hibernate/cache/spi/access/NaturalIdRegionAccessStrategy;
      12: areturn

  public abstract java.util.Map getAllSecondLevelCacheRegions();

  public default org.hibernate.cache.spi.QueryCache getQueryCache();
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: invokeinterface #39,  1           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getDefaultQueryCache:()Lorg/hibernate/cache/spi/QueryCache;
      11: areturn

  public default org.hibernate.cache.spi.QueryCache getQueryCache(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: aload_1
       7: invokeinterface #40,  2           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getQueryCache:(Ljava/lang/String;)Lorg/hibernate/cache/spi/QueryCache;
      12: areturn

  public default org.hibernate.cache.spi.UpdateTimestampsCache getUpdateTimestampsCache();
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: invokeinterface #41,  1           // InterfaceMethod org/hibernate/engine/spi/CacheImplementor.getUpdateTimestampsCache:()Lorg/hibernate/cache/spi/UpdateTimestampsCache;
      11: areturn

  public default org.hibernate.Cache getCache();
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: areturn

  public default org.hibernate.stat.Statistics getStatistics();
    Code:
       0: aload_0
       1: invokeinterface #7,  1            // InterfaceMethod getStatistics:()Lorg/hibernate/stat/spi/StatisticsImplementor;
       6: areturn

  public default org.hibernate.SessionBuilder withOptions();
    Code:
       0: aload_0
       1: invokeinterface #42,  1           // InterfaceMethod withOptions:()Lorg/hibernate/engine/spi/SessionBuilderImplementor;
       6: areturn

  public default javax.persistence.Cache getCache();
    Code:
       0: aload_0
       1: invokeinterface #32,  1           // InterfaceMethod getCache:()Lorg/hibernate/engine/spi/CacheImplementor;
       6: areturn

  public default javax.persistence.metamodel.Metamodel getMetamodel();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: areturn

  public default org.hibernate.Metamodel getMetamodel();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getMetamodel:()Lorg/hibernate/metamodel/spi/MetamodelImplementor;
       6: areturn
}
