Compiled from "CacheImplementor.java"
public interface org.hibernate.engine.spi.CacheImplementor extends org.hibernate.service.Service,org.hibernate.Cache,java.io.Serializable {
  public abstract void close();

  public abstract org.hibernate.cache.spi.QueryCache getQueryCache(java.lang.String) throws org.hibernate.HibernateException;

  public default org.hibernate.cache.spi.QueryCache getQueryCache();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod getDefaultQueryCache:()Lorg/hibernate/cache/spi/QueryCache;
       6: areturn

  public abstract org.hibernate.cache.spi.QueryCache getDefaultQueryCache();

  public abstract org.hibernate.cache.spi.UpdateTimestampsCache getUpdateTimestampsCache();

  public abstract void evictQueries() throws org.hibernate.HibernateException;

  public abstract org.hibernate.cache.spi.RegionFactory getRegionFactory();

  public abstract java.lang.String qualifyRegionName(java.lang.String);

  public abstract java.lang.String[] getSecondLevelCacheRegionNames();

  public abstract org.hibernate.cache.spi.access.EntityRegionAccessStrategy getEntityRegionAccess(java.lang.String);

  public abstract org.hibernate.cache.spi.access.CollectionRegionAccessStrategy getCollectionRegionAccess(java.lang.String);

  public abstract org.hibernate.cache.spi.access.NaturalIdRegionAccessStrategy getNaturalIdCacheRegionAccessStrategy(java.lang.String);

  public abstract org.hibernate.cache.spi.access.EntityRegionAccessStrategy determineEntityRegionAccessStrategy(org.hibernate.mapping.PersistentClass);

  public abstract org.hibernate.cache.spi.access.NaturalIdRegionAccessStrategy determineNaturalIdRegionAccessStrategy(org.hibernate.mapping.PersistentClass);

  public abstract org.hibernate.cache.spi.access.CollectionRegionAccessStrategy determineCollectionRegionAccessStrategy(org.hibernate.mapping.Collection);
}
