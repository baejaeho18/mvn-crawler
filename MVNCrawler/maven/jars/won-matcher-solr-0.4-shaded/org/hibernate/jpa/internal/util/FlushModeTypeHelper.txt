Compiled from "FlushModeTypeHelper.java"
public class org.hibernate.jpa.internal.util.FlushModeTypeHelper {
  private static final org.jboss.logging.Logger log;

  private org.hibernate.jpa.internal.util.FlushModeTypeHelper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static javax.persistence.FlushModeType getFlushModeType(org.hibernate.FlushMode);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field org/hibernate/FlushMode.ALWAYS:Lorg/hibernate/FlushMode;
       4: if_acmpne     19
       7: getstatic     #3                  // Field log:Lorg/jboss/logging/Logger;
      10: ldc           #4                  // String Interpreting Hibernate FlushMode#ALWAYS to JPA FlushModeType#AUTO; may cause problems if relying on FlushMode#ALWAYS-specific behavior
      12: invokevirtual #5                  // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      15: getstatic     #6                  // Field javax/persistence/FlushModeType.AUTO:Ljavax/persistence/FlushModeType;
      18: areturn
      19: aload_0
      20: getstatic     #7                  // Field org/hibernate/FlushMode.MANUAL:Lorg/hibernate/FlushMode;
      23: if_acmpne     38
      26: getstatic     #3                  // Field log:Lorg/jboss/logging/Logger;
      29: ldc           #8                  // String Interpreting Hibernate FlushMode#MANUAL to JPA FlushModeType#COMMIT; may cause problems if relying on FlushMode#MANUAL-specific behavior
      31: invokevirtual #5                  // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      34: getstatic     #9                  // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      37: areturn
      38: aload_0
      39: getstatic     #10                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
      42: if_acmpne     49
      45: getstatic     #9                  // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      48: areturn
      49: aload_0
      50: getstatic     #11                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
      53: if_acmpne     60
      56: getstatic     #6                  // Field javax/persistence/FlushModeType.AUTO:Ljavax/persistence/FlushModeType;
      59: areturn
      60: new           #12                 // class org/hibernate/AssertionFailure
      63: dup
      64: new           #13                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #15                 // String unhandled FlushMode
      73: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      80: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      83: invokespecial #19                 // Method org/hibernate/AssertionFailure."<init>":(Ljava/lang/String;)V
      86: athrow

  public static org.hibernate.FlushMode getFlushMode(javax.persistence.FlushModeType);
    Code:
       0: aload_0
       1: getstatic     #6                  // Field javax/persistence/FlushModeType.AUTO:Ljavax/persistence/FlushModeType;
       4: if_acmpne     11
       7: getstatic     #11                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
      10: areturn
      11: aload_0
      12: getstatic     #9                  // Field javax/persistence/FlushModeType.COMMIT:Ljavax/persistence/FlushModeType;
      15: if_acmpne     22
      18: getstatic     #10                 // Field org/hibernate/FlushMode.COMMIT:Lorg/hibernate/FlushMode;
      21: areturn
      22: new           #12                 // class org/hibernate/AssertionFailure
      25: dup
      26: new           #13                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #20                 // String unhandled FlushModeType
      35: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #19                 // Method org/hibernate/AssertionFailure."<init>":(Ljava/lang/String;)V
      48: athrow

  public static org.hibernate.FlushMode interpretFlushMode(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #11                 // Field org/hibernate/FlushMode.AUTO:Lorg/hibernate/FlushMode;
       7: areturn
       8: ldc           #21                 // class org/hibernate/FlushMode
      10: aload_0
      11: invokevirtual #22                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      14: ifeq          22
      17: aload_0
      18: checkcast     #21                 // class org/hibernate/FlushMode
      21: areturn
      22: ldc           #23                 // class javax/persistence/FlushModeType
      24: aload_0
      25: invokevirtual #22                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      28: ifeq          39
      31: aload_0
      32: checkcast     #23                 // class javax/persistence/FlushModeType
      35: invokestatic  #24                 // Method getFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/FlushMode;
      38: areturn
      39: ldc           #25                 // class java/lang/String
      41: aload_0
      42: invokevirtual #22                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      45: ifeq          56
      48: aload_0
      49: checkcast     #25                 // class java/lang/String
      52: invokestatic  #26                 // Method interpretExternalSetting:(Ljava/lang/String;)Lorg/hibernate/FlushMode;
      55: areturn
      56: new           #27                 // class java/lang/IllegalArgumentException
      59: dup
      60: new           #13                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #28                 // String Unknown FlushMode source :
      69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      82: athrow

  public static org.hibernate.FlushMode interpretExternalSetting(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: getstatic     #3                  // Field log:Lorg/jboss/logging/Logger;
       9: new           #13                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #30                 // String Attempting to interpret external setting [
      18: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: aload_0
      22: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #31                 // String ] as FlushMode name
      27: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokevirtual #5                  // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      36: aload_0
      37: getstatic     #32                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      40: invokevirtual #33                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
      43: invokestatic  #34                 // Method org/hibernate/FlushMode.valueOf:(Ljava/lang/String;)Lorg/hibernate/FlushMode;
      46: areturn
      47: astore_1
      48: getstatic     #3                  // Field log:Lorg/jboss/logging/Logger;
      51: new           #13                 // class java/lang/StringBuilder
      54: dup
      55: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      58: ldc           #30                 // String Attempting to interpret external setting [
      60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_0
      64: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: ldc           #35                 // String ] as FlushModeType name
      69: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: invokevirtual #5                  // Method org/jboss/logging/Logger.debug:(Ljava/lang/Object;)V
      78: aload_0
      79: getstatic     #32                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
      82: invokevirtual #36                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      85: invokestatic  #37                 // Method javax/persistence/FlushModeType.valueOf:(Ljava/lang/String;)Ljavax/persistence/FlushModeType;
      88: invokestatic  #24                 // Method getFlushMode:(Ljavax/persistence/FlushModeType;)Lorg/hibernate/FlushMode;
      91: areturn
      92: astore_1
      93: new           #38                 // class org/hibernate/MappingException
      96: dup
      97: new           #13                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #39                 // String unknown FlushMode :
     106: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload_0
     110: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokespecial #40                 // Method org/hibernate/MappingException."<init>":(Ljava/lang/String;)V
     119: athrow
    Exception table:
       from    to  target type
           6    46    47   Class java/lang/IllegalArgumentException
          78    91    92   Class java/lang/IllegalArgumentException

  static {};
    Code:
       0: ldc           #41                 // class org/hibernate/jpa/internal/util/FlushModeTypeHelper
       2: invokestatic  #42                 // Method org/jboss/logging/Logger.getLogger:(Ljava/lang/Class;)Lorg/jboss/logging/Logger;
       5: putstatic     #3                  // Field log:Lorg/jboss/logging/Logger;
       8: return
}
