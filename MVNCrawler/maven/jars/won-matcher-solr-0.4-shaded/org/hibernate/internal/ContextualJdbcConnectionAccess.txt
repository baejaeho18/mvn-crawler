Compiled from "ContextualJdbcConnectionAccess.java"
public class org.hibernate.internal.ContextualJdbcConnectionAccess implements org.hibernate.engine.jdbc.connections.spi.JdbcConnectionAccess,java.io.Serializable {
  private final java.lang.String tenantIdentifier;

  private final org.hibernate.SessionEventListener listener;

  private final org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider connectionProvider;

  public org.hibernate.internal.ContextualJdbcConnectionAccess(java.lang.String, org.hibernate.SessionEventListener, org.hibernate.engine.jdbc.connections.spi.MultiTenantConnectionProvider);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field tenantIdentifier:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field connectionProvider:Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;
      19: return

  public java.sql.Connection obtainConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tenantIdentifier:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #5                  // class org/hibernate/HibernateException
      10: dup
      11: ldc           #6                  // String Tenant identifier required!
      13: invokespecial #7                  // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      21: invokeinterface #8,  1            // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionAcquisitionStart:()V
      26: aload_0
      27: getfield      #4                  // Field connectionProvider:Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;
      30: aload_0
      31: getfield      #2                  // Field tenantIdentifier:Ljava/lang/String;
      34: invokeinterface #9,  2            // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider.getConnection:(Ljava/lang/String;)Ljava/sql/Connection;
      39: astore_1
      40: aload_0
      41: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      44: invokeinterface #10,  1           // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionAcquisitionEnd:()V
      49: aload_1
      50: areturn
      51: astore_2
      52: aload_0
      53: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      56: invokeinterface #10,  1           // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionAcquisitionEnd:()V
      61: aload_2
      62: athrow
    Exception table:
       from    to  target type
          17    40    51   any

  public void releaseConnection(java.sql.Connection) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field tenantIdentifier:Ljava/lang/String;
       4: ifnonnull     17
       7: new           #5                  // class org/hibernate/HibernateException
      10: dup
      11: ldc           #6                  // String Tenant identifier required!
      13: invokespecial #7                  // Method org/hibernate/HibernateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      21: invokeinterface #11,  1           // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionReleaseStart:()V
      26: aload_0
      27: getfield      #4                  // Field connectionProvider:Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;
      30: aload_0
      31: getfield      #2                  // Field tenantIdentifier:Ljava/lang/String;
      34: aload_1
      35: invokeinterface #12,  3           // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider.releaseConnection:(Ljava/lang/String;Ljava/sql/Connection;)V
      40: aload_0
      41: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      44: invokeinterface #13,  1           // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionReleaseEnd:()V
      49: goto          64
      52: astore_2
      53: aload_0
      54: getfield      #3                  // Field listener:Lorg/hibernate/SessionEventListener;
      57: invokeinterface #13,  1           // InterfaceMethod org/hibernate/SessionEventListener.jdbcConnectionReleaseEnd:()V
      62: aload_2
      63: athrow
      64: return
    Exception table:
       from    to  target type
          17    40    52   any

  public boolean supportsAggressiveRelease();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionProvider:Lorg/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider;
       4: invokeinterface #14,  1           // InterfaceMethod org/hibernate/engine/jdbc/connections/spi/MultiTenantConnectionProvider.supportsAggressiveRelease:()Z
       9: ireturn
}
