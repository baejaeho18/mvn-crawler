Compiled from "DB2400Dialect.java"
final class org.hibernate.dialect.DB2400Dialect$1 extends org.hibernate.dialect.pagination.AbstractLimitHandler {
  org.hibernate.dialect.DB2400Dialect$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/hibernate/dialect/pagination/AbstractLimitHandler."<init>":()V
       4: return

  public java.lang.String processSql(java.lang.String, org.hibernate.engine.spi.RowSelection);
    Code:
       0: aload_2
       1: invokestatic  #2                  // Method org/hibernate/dialect/pagination/LimitHelper.hasFirstRow:(Lorg/hibernate/engine/spi/RowSelection;)Z
       4: ifeq          57
       7: new           #3                  // class java/lang/StringBuilder
      10: dup
      11: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      14: ldc           #5                  // String select * from ( select inner2_.*, rownumber() over(order by order of inner2_) as rownumber_ from (
      16: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #7                  // String  fetch first
      25: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: aload_2
      30: invokevirtual #8                  // Method getMaxOrLimit:(Lorg/hibernate/engine/spi/RowSelection;)I
      33: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: ldc           #10                 // String  rows only ) as inner2_ ) as inner1_ where rownumber_ >
      38: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #11                 // Method org/hibernate/engine/spi/RowSelection.getFirstRow:()Ljava/lang/Integer;
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      48: ldc           #13                 // String  order by rownumber_
      50: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: areturn
      57: new           #3                  // class java/lang/StringBuilder
      60: dup
      61: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      64: aload_1
      65: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: ldc           #7                  // String  fetch first
      70: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: aload_2
      75: invokevirtual #8                  // Method getMaxOrLimit:(Lorg/hibernate/engine/spi/RowSelection;)I
      78: invokevirtual #9                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: ldc           #15                 // String  rows only
      83: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: areturn

  public boolean supportsLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean useMaxForLimit();
    Code:
       0: iconst_1
       1: ireturn

  public boolean supportsVariableLimit();
    Code:
       0: iconst_0
       1: ireturn
}
