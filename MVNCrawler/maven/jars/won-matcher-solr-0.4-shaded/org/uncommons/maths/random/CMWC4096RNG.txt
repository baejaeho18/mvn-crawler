Compiled from "CMWC4096RNG.java"
public class org.uncommons.maths.random.CMWC4096RNG extends java.util.Random implements org.uncommons.maths.random.RepeatableRNG {
  private static final int SEED_SIZE_BYTES;

  private static final long A;

  private final byte[] seed;

  private final int[] state;

  private int carry;

  private int index;

  private final java.util.concurrent.locks.ReentrantLock lock;

  public org.uncommons.maths.random.CMWC4096RNG();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/uncommons/maths/random/DefaultSeedGenerator.getInstance:()Lorg/uncommons/maths/random/DefaultSeedGenerator;
       4: sipush        16384
       7: invokevirtual #2                  // Method org/uncommons/maths/random/DefaultSeedGenerator.generateSeed:(I)[B
      10: invokespecial #3                  // Method "<init>":([B)V
      13: return

  public org.uncommons.maths.random.CMWC4096RNG(org.uncommons.maths.random.SeedGenerator) throws org.uncommons.maths.random.SeedException;
    Code:
       0: aload_0
       1: aload_1
       2: sipush        16384
       5: invokeinterface #4,  2            // InterfaceMethod org/uncommons/maths/random/SeedGenerator.generateSeed:(I)[B
      10: invokespecial #3                  // Method "<init>":([B)V
      13: return

  public org.uncommons.maths.random.CMWC4096RNG(byte[]);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/Random."<init>":()V
       4: aload_0
       5: ldc           #6                  // int 362436
       7: putfield      #7                  // Field carry:I
      10: aload_0
      11: sipush        4095
      14: putfield      #8                  // Field index:I
      17: aload_0
      18: new           #9                  // class java/util/concurrent/locks/ReentrantLock
      21: dup
      22: invokespecial #10                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      25: putfield      #11                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      28: aload_1
      29: ifnull        40
      32: aload_1
      33: arraylength
      34: sipush        16384
      37: if_icmpeq     50
      40: new           #12                 // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #13                 // String CMWC RNG requires 16kb of seed data.
      46: invokespecial #14                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: invokevirtual #15                 // Method "[B".clone:()Ljava/lang/Object;
      55: checkcast     #16                 // class "[B"
      58: putfield      #17                 // Field seed:[B
      61: aload_0
      62: aload_1
      63: invokestatic  #18                 // Method org/uncommons/maths/binary/BinaryUtils.convertBytesToInts:([B)[I
      66: putfield      #19                 // Field state:[I
      69: return

  public byte[] getSeed();
    Code:
       0: aload_0
       1: getfield      #17                 // Field seed:[B
       4: invokevirtual #20                 // Method "[B".clone:()Ljava/lang/Object;
       7: checkcast     #16                 // class "[B"
      10: areturn

  protected int next(int);
    Code:
       0: aload_0
       1: getfield      #11                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #21                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: aload_0
       9: getfield      #8                  // Field index:I
      12: iconst_1
      13: iadd
      14: sipush        4095
      17: iand
      18: putfield      #8                  // Field index:I
      21: ldc2_w        #22                 // long 18782l
      24: aload_0
      25: getfield      #19                 // Field state:[I
      28: aload_0
      29: getfield      #8                  // Field index:I
      32: iaload
      33: i2l
      34: ldc2_w        #24                 // long 4294967295l
      37: land
      38: lmul
      39: aload_0
      40: getfield      #7                  // Field carry:I
      43: i2l
      44: ladd
      45: lstore_2
      46: aload_0
      47: lload_2
      48: bipush        32
      50: lshr
      51: l2i
      52: putfield      #7                  // Field carry:I
      55: lload_2
      56: l2i
      57: aload_0
      58: getfield      #7                  // Field carry:I
      61: iadd
      62: istore        4
      64: iload         4
      66: aload_0
      67: getfield      #7                  // Field carry:I
      70: if_icmpge     86
      73: iinc          4, 1
      76: aload_0
      77: dup
      78: getfield      #7                  // Field carry:I
      81: iconst_1
      82: iadd
      83: putfield      #7                  // Field carry:I
      86: aload_0
      87: getfield      #19                 // Field state:[I
      90: aload_0
      91: getfield      #8                  // Field index:I
      94: bipush        -2
      96: iload         4
      98: isub
      99: iastore
     100: aload_0
     101: getfield      #19                 // Field state:[I
     104: aload_0
     105: getfield      #8                  // Field index:I
     108: iaload
     109: bipush        32
     111: iload_1
     112: isub
     113: iushr
     114: istore        5
     116: aload_0
     117: getfield      #11                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     120: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     123: iload         5
     125: ireturn
     126: astore        6
     128: aload_0
     129: getfield      #11                 // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     132: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     135: aload         6
     137: athrow
    Exception table:
       from    to  target type
           0   116   126   any
         126   128   126   any
}
