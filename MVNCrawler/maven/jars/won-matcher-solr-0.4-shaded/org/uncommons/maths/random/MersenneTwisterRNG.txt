Compiled from "MersenneTwisterRNG.java"
public class org.uncommons.maths.random.MersenneTwisterRNG extends java.util.Random implements org.uncommons.maths.random.RepeatableRNG {
  private static final int SEED_SIZE_BYTES;

  private static final int N;

  private static final int M;

  private static final int[] MAG01;

  private static final int UPPER_MASK;

  private static final int LOWER_MASK;

  private static final int BOOTSTRAP_SEED;

  private static final int BOOTSTRAP_FACTOR;

  private static final int SEED_FACTOR1;

  private static final int SEED_FACTOR2;

  private static final int GENERATE_MASK1;

  private static final int GENERATE_MASK2;

  private final byte[] seed;

  private final java.util.concurrent.locks.ReentrantLock lock;

  private final int[] mt;

  private int mtIndex;

  public org.uncommons.maths.random.MersenneTwisterRNG();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/uncommons/maths/random/DefaultSeedGenerator.getInstance:()Lorg/uncommons/maths/random/DefaultSeedGenerator;
       4: bipush        16
       6: invokevirtual #2                  // Method org/uncommons/maths/random/DefaultSeedGenerator.generateSeed:(I)[B
       9: invokespecial #3                  // Method "<init>":([B)V
      12: return

  public org.uncommons.maths.random.MersenneTwisterRNG(org.uncommons.maths.random.SeedGenerator) throws org.uncommons.maths.random.SeedException;
    Code:
       0: aload_0
       1: aload_1
       2: bipush        16
       4: invokeinterface #4,  2            // InterfaceMethod org/uncommons/maths/random/SeedGenerator.generateSeed:(I)[B
       9: invokespecial #3                  // Method "<init>":([B)V
      12: return

  public org.uncommons.maths.random.MersenneTwisterRNG(byte[]);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/util/Random."<init>":()V
       4: aload_0
       5: new           #6                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: invokespecial #7                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      12: putfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      15: aload_0
      16: sipush        624
      19: newarray       int
      21: putfield      #9                  // Field mt:[I
      24: aload_0
      25: iconst_0
      26: putfield      #10                 // Field mtIndex:I
      29: aload_1
      30: ifnull        40
      33: aload_1
      34: arraylength
      35: bipush        16
      37: if_icmpeq     50
      40: new           #11                 // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #12                 // String Mersenne Twister RNG requires a 128-bit (16-byte) seed.
      46: invokespecial #13                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: aload_1
      52: invokevirtual #14                 // Method "[B".clone:()Ljava/lang/Object;
      55: checkcast     #15                 // class "[B"
      58: putfield      #16                 // Field seed:[B
      61: aload_0
      62: getfield      #16                 // Field seed:[B
      65: invokestatic  #17                 // Method org/uncommons/maths/binary/BinaryUtils.convertBytesToInts:([B)[I
      68: astore_2
      69: aload_0
      70: getfield      #9                  // Field mt:[I
      73: iconst_0
      74: ldc           #18                 // int 19650218
      76: iastore
      77: aload_0
      78: iconst_1
      79: putfield      #10                 // Field mtIndex:I
      82: aload_0
      83: getfield      #10                 // Field mtIndex:I
      86: sipush        624
      89: if_icmpge     148
      92: aload_0
      93: getfield      #9                  // Field mt:[I
      96: aload_0
      97: getfield      #10                 // Field mtIndex:I
     100: ldc           #19                 // int 1812433253
     102: aload_0
     103: getfield      #9                  // Field mt:[I
     106: aload_0
     107: getfield      #10                 // Field mtIndex:I
     110: iconst_1
     111: isub
     112: iaload
     113: aload_0
     114: getfield      #9                  // Field mt:[I
     117: aload_0
     118: getfield      #10                 // Field mtIndex:I
     121: iconst_1
     122: isub
     123: iaload
     124: bipush        30
     126: iushr
     127: ixor
     128: imul
     129: aload_0
     130: getfield      #10                 // Field mtIndex:I
     133: iadd
     134: iastore
     135: aload_0
     136: dup
     137: getfield      #10                 // Field mtIndex:I
     140: iconst_1
     141: iadd
     142: putfield      #10                 // Field mtIndex:I
     145: goto          82
     148: iconst_1
     149: istore_3
     150: iconst_0
     151: istore        4
     153: sipush        624
     156: aload_2
     157: arraylength
     158: invokestatic  #20                 // Method java/lang/Math.max:(II)I
     161: istore        5
     163: iload         5
     165: ifle          257
     168: aload_0
     169: getfield      #9                  // Field mt:[I
     172: iload_3
     173: aload_0
     174: getfield      #9                  // Field mt:[I
     177: iload_3
     178: iaload
     179: aload_0
     180: getfield      #9                  // Field mt:[I
     183: iload_3
     184: iconst_1
     185: isub
     186: iaload
     187: aload_0
     188: getfield      #9                  // Field mt:[I
     191: iload_3
     192: iconst_1
     193: isub
     194: iaload
     195: bipush        30
     197: iushr
     198: ixor
     199: ldc           #21                 // int 1664525
     201: imul
     202: ixor
     203: aload_2
     204: iload         4
     206: iaload
     207: iadd
     208: iload         4
     210: iadd
     211: iastore
     212: iinc          3, 1
     215: iinc          4, 1
     218: iload_3
     219: sipush        624
     222: if_icmplt     241
     225: aload_0
     226: getfield      #9                  // Field mt:[I
     229: iconst_0
     230: aload_0
     231: getfield      #9                  // Field mt:[I
     234: sipush        623
     237: iaload
     238: iastore
     239: iconst_1
     240: istore_3
     241: iload         4
     243: aload_2
     244: arraylength
     245: if_icmplt     251
     248: iconst_0
     249: istore        4
     251: iinc          5, -1
     254: goto          163
     257: sipush        623
     260: istore        5
     262: iload         5
     264: ifle          337
     267: aload_0
     268: getfield      #9                  // Field mt:[I
     271: iload_3
     272: aload_0
     273: getfield      #9                  // Field mt:[I
     276: iload_3
     277: iaload
     278: aload_0
     279: getfield      #9                  // Field mt:[I
     282: iload_3
     283: iconst_1
     284: isub
     285: iaload
     286: aload_0
     287: getfield      #9                  // Field mt:[I
     290: iload_3
     291: iconst_1
     292: isub
     293: iaload
     294: bipush        30
     296: iushr
     297: ixor
     298: ldc           #22                 // int 1566083941
     300: imul
     301: ixor
     302: iload_3
     303: isub
     304: iastore
     305: iinc          3, 1
     308: iload_3
     309: sipush        624
     312: if_icmplt     331
     315: aload_0
     316: getfield      #9                  // Field mt:[I
     319: iconst_0
     320: aload_0
     321: getfield      #9                  // Field mt:[I
     324: sipush        623
     327: iaload
     328: iastore
     329: iconst_1
     330: istore_3
     331: iinc          5, -1
     334: goto          262
     337: aload_0
     338: getfield      #9                  // Field mt:[I
     341: iconst_0
     342: ldc           #23                 // int -2147483648
     344: iastore
     345: return

  public byte[] getSeed();
    Code:
       0: aload_0
       1: getfield      #16                 // Field seed:[B
       4: invokevirtual #24                 // Method "[B".clone:()Ljava/lang/Object;
       7: checkcast     #15                 // class "[B"
      10: areturn

  protected final int next(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #10                 // Field mtIndex:I
      11: sipush        624
      14: if_icmplt     200
      17: iconst_0
      18: istore_3
      19: iload_3
      20: sipush        227
      23: if_icmpge     82
      26: aload_0
      27: getfield      #9                  // Field mt:[I
      30: iload_3
      31: iaload
      32: ldc           #23                 // int -2147483648
      34: iand
      35: aload_0
      36: getfield      #9                  // Field mt:[I
      39: iload_3
      40: iconst_1
      41: iadd
      42: iaload
      43: ldc           #26                 // int 2147483647
      45: iand
      46: ior
      47: istore_2
      48: aload_0
      49: getfield      #9                  // Field mt:[I
      52: iload_3
      53: aload_0
      54: getfield      #9                  // Field mt:[I
      57: iload_3
      58: sipush        397
      61: iadd
      62: iaload
      63: iload_2
      64: iconst_1
      65: iushr
      66: ixor
      67: getstatic     #27                 // Field MAG01:[I
      70: iload_2
      71: iconst_1
      72: iand
      73: iaload
      74: ixor
      75: iastore
      76: iinc          3, 1
      79: goto          19
      82: iload_3
      83: sipush        623
      86: if_icmpge     145
      89: aload_0
      90: getfield      #9                  // Field mt:[I
      93: iload_3
      94: iaload
      95: ldc           #23                 // int -2147483648
      97: iand
      98: aload_0
      99: getfield      #9                  // Field mt:[I
     102: iload_3
     103: iconst_1
     104: iadd
     105: iaload
     106: ldc           #26                 // int 2147483647
     108: iand
     109: ior
     110: istore_2
     111: aload_0
     112: getfield      #9                  // Field mt:[I
     115: iload_3
     116: aload_0
     117: getfield      #9                  // Field mt:[I
     120: iload_3
     121: sipush        -227
     124: iadd
     125: iaload
     126: iload_2
     127: iconst_1
     128: iushr
     129: ixor
     130: getstatic     #27                 // Field MAG01:[I
     133: iload_2
     134: iconst_1
     135: iand
     136: iaload
     137: ixor
     138: iastore
     139: iinc          3, 1
     142: goto          82
     145: aload_0
     146: getfield      #9                  // Field mt:[I
     149: sipush        623
     152: iaload
     153: ldc           #23                 // int -2147483648
     155: iand
     156: aload_0
     157: getfield      #9                  // Field mt:[I
     160: iconst_0
     161: iaload
     162: ldc           #26                 // int 2147483647
     164: iand
     165: ior
     166: istore_2
     167: aload_0
     168: getfield      #9                  // Field mt:[I
     171: sipush        623
     174: aload_0
     175: getfield      #9                  // Field mt:[I
     178: sipush        396
     181: iaload
     182: iload_2
     183: iconst_1
     184: iushr
     185: ixor
     186: getstatic     #27                 // Field MAG01:[I
     189: iload_2
     190: iconst_1
     191: iand
     192: iaload
     193: ixor
     194: iastore
     195: aload_0
     196: iconst_0
     197: putfield      #10                 // Field mtIndex:I
     200: aload_0
     201: getfield      #9                  // Field mt:[I
     204: aload_0
     205: dup
     206: getfield      #10                 // Field mtIndex:I
     209: dup_x1
     210: iconst_1
     211: iadd
     212: putfield      #10                 // Field mtIndex:I
     215: iaload
     216: istore_2
     217: aload_0
     218: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     221: invokevirtual #28                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     224: goto          239
     227: astore        4
     229: aload_0
     230: getfield      #8                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     233: invokevirtual #28                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     236: aload         4
     238: athrow
     239: iload_2
     240: iload_2
     241: bipush        11
     243: iushr
     244: ixor
     245: istore_2
     246: iload_2
     247: iload_2
     248: bipush        7
     250: ishl
     251: ldc           #29                 // int -1658038656
     253: iand
     254: ixor
     255: istore_2
     256: iload_2
     257: iload_2
     258: bipush        15
     260: ishl
     261: ldc           #30                 // int -272236544
     263: iand
     264: ixor
     265: istore_2
     266: iload_2
     267: iload_2
     268: bipush        18
     270: iushr
     271: ixor
     272: istore_2
     273: iload_2
     274: bipush        32
     276: iload_1
     277: isub
     278: iushr
     279: ireturn
    Exception table:
       from    to  target type
           0   217   227   any
         227   229   227   any

  static {};
    Code:
       0: iconst_2
       1: newarray       int
       3: dup
       4: iconst_0
       5: iconst_0
       6: iastore
       7: dup
       8: iconst_1
       9: ldc           #31                 // int -1727483681
      11: iastore
      12: putstatic     #27                 // Field MAG01:[I
      15: return
}
