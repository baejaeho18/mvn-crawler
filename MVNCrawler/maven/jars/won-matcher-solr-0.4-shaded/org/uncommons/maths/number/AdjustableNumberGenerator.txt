Compiled from "AdjustableNumberGenerator.java"
public class org.uncommons.maths.number.AdjustableNumberGenerator<T extends java.lang.Number> implements org.uncommons.maths.number.NumberGenerator<T> {
  private final java.util.concurrent.locks.ReadWriteLock lock;

  private T value;

  public org.uncommons.maths.number.AdjustableNumberGenerator(T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field value:Ljava/lang/Number;
      20: return

  public void setValue(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field value:Ljava/lang/Number;
      19: aload_0
      20: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      23: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      28: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      33: goto          53
      36: astore_2
      37: aload_0
      38: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      41: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      46: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      51: aload_2
      52: athrow
      53: return
    Exception table:
       from    to  target type
           0    19    36   any
          36    37    36   any

  public T nextValue();
    Code:
       0: aload_0
       1: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      14: aload_0
      15: getfield      #5                  // Field value:Ljava/lang/Number;
      18: astore_1
      19: aload_0
      20: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      23: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      28: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      33: aload_1
      34: areturn
      35: astore_2
      36: aload_0
      37: getfield      #4                  // Field lock:Ljava/util/concurrent/locks/ReadWriteLock;
      40: invokeinterface #9,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      45: invokeinterface #8,  1            // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: aload_2
      51: athrow
    Exception table:
       from    to  target type
           0    19    35   any
          35    36    35   any
}
