Compiled from "Rational.java"
public final class org.uncommons.maths.number.Rational extends java.lang.Number implements java.lang.Comparable<org.uncommons.maths.number.Rational> {
  public static final org.uncommons.maths.number.Rational ZERO;

  public static final org.uncommons.maths.number.Rational QUARTER;

  public static final org.uncommons.maths.number.Rational THIRD;

  public static final org.uncommons.maths.number.Rational HALF;

  public static final org.uncommons.maths.number.Rational TWO_THIRDS;

  public static final org.uncommons.maths.number.Rational THREE_QUARTERS;

  public static final org.uncommons.maths.number.Rational ONE;

  private final long numerator;

  private final long denominator;

  public org.uncommons.maths.number.Rational(long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: lload_3
       5: lconst_1
       6: lcmp
       7: ifge          20
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: ldc           #3                  // String Denominator must be non-zero and positive.
      16: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: lload_1
      21: lload_3
      22: invokestatic  #5                  // Method org/uncommons/maths/Maths.greatestCommonDivisor:(JJ)J
      25: lstore        5
      27: aload_0
      28: lload_1
      29: lload         5
      31: ldiv
      32: putfield      #6                  // Field numerator:J
      35: aload_0
      36: lload_3
      37: lload         5
      39: ldiv
      40: putfield      #7                  // Field denominator:J
      43: return

  public org.uncommons.maths.number.Rational(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_1
       3: invokespecial #8                  // Method "<init>":(JJ)V
       6: return

  public org.uncommons.maths.number.Rational(java.math.BigDecimal);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_1
       5: invokevirtual #9                  // Method java/math/BigDecimal.stripTrailingZeros:()Ljava/math/BigDecimal;
       8: astore_2
       9: getstatic     #10                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
      12: aload_2
      13: invokevirtual #11                 // Method java/math/BigDecimal.scale:()I
      16: invokevirtual #12                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      19: astore_3
      20: aload_2
      21: invokevirtual #13                 // Method java/math/BigDecimal.unscaledValue:()Ljava/math/BigInteger;
      24: astore        4
      26: aload         4
      28: aload_3
      29: invokevirtual #14                 // Method java/math/BigInteger.gcd:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      32: astore        5
      34: aload_0
      35: aload         4
      37: aload         5
      39: invokevirtual #15                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      42: invokevirtual #16                 // Method java/math/BigInteger.longValue:()J
      45: putfield      #6                  // Field numerator:J
      48: aload_0
      49: aload_3
      50: aload         5
      52: invokevirtual #15                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: invokevirtual #16                 // Method java/math/BigInteger.longValue:()J
      58: putfield      #7                  // Field denominator:J
      61: return

  public long getNumerator();
    Code:
       0: aload_0
       1: getfield      #6                  // Field numerator:J
       4: lreturn

  public long getDenominator();
    Code:
       0: aload_0
       1: getfield      #7                  // Field denominator:J
       4: lreturn

  public org.uncommons.maths.number.Rational add(org.uncommons.maths.number.Rational);
    Code:
       0: aload_0
       1: getfield      #7                  // Field denominator:J
       4: aload_1
       5: invokevirtual #17                 // Method getDenominator:()J
       8: lcmp
       9: ifne          33
      12: new           #18                 // class org/uncommons/maths/number/Rational
      15: dup
      16: aload_0
      17: getfield      #6                  // Field numerator:J
      20: aload_1
      21: invokevirtual #19                 // Method getNumerator:()J
      24: ladd
      25: aload_0
      26: getfield      #7                  // Field denominator:J
      29: invokespecial #8                  // Method "<init>":(JJ)V
      32: areturn
      33: new           #18                 // class org/uncommons/maths/number/Rational
      36: dup
      37: aload_0
      38: getfield      #6                  // Field numerator:J
      41: aload_1
      42: invokevirtual #17                 // Method getDenominator:()J
      45: lmul
      46: aload_1
      47: invokevirtual #19                 // Method getNumerator:()J
      50: aload_0
      51: getfield      #7                  // Field denominator:J
      54: lmul
      55: ladd
      56: aload_0
      57: getfield      #7                  // Field denominator:J
      60: aload_1
      61: invokevirtual #17                 // Method getDenominator:()J
      64: lmul
      65: invokespecial #8                  // Method "<init>":(JJ)V
      68: areturn

  public org.uncommons.maths.number.Rational subtract(org.uncommons.maths.number.Rational);
    Code:
       0: aload_0
       1: getfield      #7                  // Field denominator:J
       4: aload_1
       5: invokevirtual #17                 // Method getDenominator:()J
       8: lcmp
       9: ifne          33
      12: new           #18                 // class org/uncommons/maths/number/Rational
      15: dup
      16: aload_0
      17: getfield      #6                  // Field numerator:J
      20: aload_1
      21: invokevirtual #19                 // Method getNumerator:()J
      24: lsub
      25: aload_0
      26: getfield      #7                  // Field denominator:J
      29: invokespecial #8                  // Method "<init>":(JJ)V
      32: areturn
      33: new           #18                 // class org/uncommons/maths/number/Rational
      36: dup
      37: aload_0
      38: getfield      #6                  // Field numerator:J
      41: aload_1
      42: invokevirtual #17                 // Method getDenominator:()J
      45: lmul
      46: aload_1
      47: invokevirtual #19                 // Method getNumerator:()J
      50: aload_0
      51: getfield      #7                  // Field denominator:J
      54: lmul
      55: lsub
      56: aload_0
      57: getfield      #7                  // Field denominator:J
      60: aload_1
      61: invokevirtual #17                 // Method getDenominator:()J
      64: lmul
      65: invokespecial #8                  // Method "<init>":(JJ)V
      68: areturn

  public org.uncommons.maths.number.Rational multiply(org.uncommons.maths.number.Rational);
    Code:
       0: new           #18                 // class org/uncommons/maths/number/Rational
       3: dup
       4: aload_0
       5: getfield      #6                  // Field numerator:J
       8: aload_1
       9: invokevirtual #19                 // Method getNumerator:()J
      12: lmul
      13: aload_0
      14: getfield      #7                  // Field denominator:J
      17: aload_1
      18: invokevirtual #17                 // Method getDenominator:()J
      21: lmul
      22: invokespecial #8                  // Method "<init>":(JJ)V
      25: areturn

  public org.uncommons.maths.number.Rational divide(org.uncommons.maths.number.Rational);
    Code:
       0: new           #18                 // class org/uncommons/maths/number/Rational
       3: dup
       4: aload_0
       5: getfield      #6                  // Field numerator:J
       8: aload_1
       9: invokevirtual #17                 // Method getDenominator:()J
      12: lmul
      13: aload_0
      14: getfield      #7                  // Field denominator:J
      17: aload_1
      18: invokevirtual #19                 // Method getNumerator:()J
      21: lmul
      22: invokespecial #8                  // Method "<init>":(JJ)V
      25: areturn

  public int intValue();
    Code:
       0: aload_0
       1: invokevirtual #20                 // Method longValue:()J
       4: l2i
       5: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method doubleValue:()D
       4: d2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: invokevirtual #21                 // Method doubleValue:()D
       4: d2f
       5: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #6                  // Field numerator:J
       4: l2d
       5: aload_0
       6: getfield      #7                  // Field denominator:J
       9: l2d
      10: ddiv
      11: dreturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #18                 // class org/uncommons/maths/number/Rational
      28: astore_2
      29: aload_0
      30: getfield      #7                  // Field denominator:J
      33: aload_2
      34: invokevirtual #17                 // Method getDenominator:()J
      37: lcmp
      38: ifne          57
      41: aload_0
      42: getfield      #6                  // Field numerator:J
      45: aload_2
      46: invokevirtual #19                 // Method getNumerator:()J
      49: lcmp
      50: ifne          57
      53: iconst_1
      54: goto          58
      57: iconst_0
      58: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #6                  // Field numerator:J
       4: aload_0
       5: getfield      #6                  // Field numerator:J
       8: bipush        32
      10: lushr
      11: lxor
      12: l2i
      13: istore_1
      14: bipush        31
      16: iload_1
      17: imul
      18: aload_0
      19: getfield      #7                  // Field denominator:J
      22: aload_0
      23: getfield      #7                  // Field denominator:J
      26: bipush        32
      28: lushr
      29: lxor
      30: l2i
      31: iadd
      32: istore_1
      33: iload_1
      34: ireturn

  public java.lang.String toString();
    Code:
       0: new           #23                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field numerator:J
      13: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      16: pop
      17: aload_0
      18: getfield      #7                  // Field denominator:J
      21: lconst_1
      22: lcmp
      23: ifeq          42
      26: aload_1
      27: bipush        47
      29: invokevirtual #26                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      32: pop
      33: aload_1
      34: aload_0
      35: getfield      #7                  // Field denominator:J
      38: invokevirtual #25                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      41: pop
      42: aload_1
      43: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  public int compareTo(org.uncommons.maths.number.Rational);
    Code:
       0: aload_0
       1: getfield      #7                  // Field denominator:J
       4: aload_1
       5: invokevirtual #17                 // Method getDenominator:()J
       8: lcmp
       9: ifne          30
      12: aload_0
      13: getfield      #6                  // Field numerator:J
      16: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: aload_1
      20: invokevirtual #19                 // Method getNumerator:()J
      23: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: invokevirtual #29                 // Method java/lang/Long.compareTo:(Ljava/lang/Long;)I
      29: ireturn
      30: aload_0
      31: getfield      #6                  // Field numerator:J
      34: aload_1
      35: invokevirtual #17                 // Method getDenominator:()J
      38: lmul
      39: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      42: astore_2
      43: aload_1
      44: invokevirtual #19                 // Method getNumerator:()J
      47: aload_0
      48: getfield      #7                  // Field denominator:J
      51: lmul
      52: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      55: astore_3
      56: aload_2
      57: aload_3
      58: invokevirtual #29                 // Method java/lang/Long.compareTo:(Ljava/lang/Long;)I
      61: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #18                 // class org/uncommons/maths/number/Rational
       5: invokevirtual #30                 // Method compareTo:(Lorg/uncommons/maths/number/Rational;)I
       8: ireturn

  static {};
    Code:
       0: new           #18                 // class org/uncommons/maths/number/Rational
       3: dup
       4: lconst_0
       5: invokespecial #31                 // Method "<init>":(J)V
       8: putstatic     #32                 // Field ZERO:Lorg/uncommons/maths/number/Rational;
      11: new           #18                 // class org/uncommons/maths/number/Rational
      14: dup
      15: lconst_1
      16: ldc2_w        #33                 // long 4l
      19: invokespecial #8                  // Method "<init>":(JJ)V
      22: putstatic     #35                 // Field QUARTER:Lorg/uncommons/maths/number/Rational;
      25: new           #18                 // class org/uncommons/maths/number/Rational
      28: dup
      29: lconst_1
      30: ldc2_w        #36                 // long 3l
      33: invokespecial #8                  // Method "<init>":(JJ)V
      36: putstatic     #38                 // Field THIRD:Lorg/uncommons/maths/number/Rational;
      39: new           #18                 // class org/uncommons/maths/number/Rational
      42: dup
      43: lconst_1
      44: ldc2_w        #39                 // long 2l
      47: invokespecial #8                  // Method "<init>":(JJ)V
      50: putstatic     #41                 // Field HALF:Lorg/uncommons/maths/number/Rational;
      53: new           #18                 // class org/uncommons/maths/number/Rational
      56: dup
      57: ldc2_w        #39                 // long 2l
      60: ldc2_w        #36                 // long 3l
      63: invokespecial #8                  // Method "<init>":(JJ)V
      66: putstatic     #42                 // Field TWO_THIRDS:Lorg/uncommons/maths/number/Rational;
      69: new           #18                 // class org/uncommons/maths/number/Rational
      72: dup
      73: ldc2_w        #36                 // long 3l
      76: ldc2_w        #33                 // long 4l
      79: invokespecial #8                  // Method "<init>":(JJ)V
      82: putstatic     #43                 // Field THREE_QUARTERS:Lorg/uncommons/maths/number/Rational;
      85: new           #18                 // class org/uncommons/maths/number/Rational
      88: dup
      89: lconst_1
      90: invokespecial #31                 // Method "<init>":(J)V
      93: putstatic     #44                 // Field ONE:Lorg/uncommons/maths/number/Rational;
      96: return
}
