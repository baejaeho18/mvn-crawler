Compiled from "BitString.java"
public final class org.uncommons.maths.binary.BitString implements java.lang.Cloneable,java.io.Serializable {
  private static final int WORD_LENGTH;

  private final int length;

  private int[] data;

  public org.uncommons.maths.binary.BitString(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #2                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #3                  // String Length must be non-negative.
      14: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: iload_1
      20: putfield      #5                  // Field length:I
      23: aload_0
      24: iload_1
      25: bipush        32
      27: iadd
      28: iconst_1
      29: isub
      30: bipush        32
      32: idiv
      33: newarray       int
      35: putfield      #6                  // Field data:[I
      38: return

  public org.uncommons.maths.binary.BitString(int, java.util.Random);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #7                  // Method "<init>":(I)V
       5: iconst_0
       6: istore_3
       7: iload_3
       8: aload_0
       9: getfield      #6                  // Field data:[I
      12: arraylength
      13: if_icmpge     32
      16: aload_0
      17: getfield      #6                  // Field data:[I
      20: iload_3
      21: aload_2
      22: invokevirtual #8                  // Method java/util/Random.nextInt:()I
      25: iastore
      26: iinc          3, 1
      29: goto          7
      32: iload_1
      33: bipush        32
      35: irem
      36: istore_3
      37: iload_3
      38: bipush        32
      40: if_icmpge     72
      43: bipush        32
      45: iload_3
      46: isub
      47: istore        4
      49: iconst_m1
      50: iload         4
      52: iushr
      53: istore        5
      55: aload_0
      56: getfield      #6                  // Field data:[I
      59: aload_0
      60: getfield      #6                  // Field data:[I
      63: arraylength
      64: iconst_1
      65: isub
      66: dup2
      67: iaload
      68: iload         5
      70: iand
      71: iastore
      72: return

  public org.uncommons.maths.binary.BitString(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method java/lang/String.length:()I
       5: invokespecial #7                  // Method "<init>":(I)V
       8: iconst_0
       9: istore_2
      10: iload_2
      11: aload_1
      12: invokevirtual #9                  // Method java/lang/String.length:()I
      15: if_icmpge     87
      18: aload_1
      19: iload_2
      20: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      23: bipush        49
      25: if_icmpne     44
      28: aload_0
      29: aload_1
      30: invokevirtual #9                  // Method java/lang/String.length:()I
      33: iload_2
      34: iconst_1
      35: iadd
      36: isub
      37: iconst_1
      38: invokevirtual #11                 // Method setBit:(IZ)V
      41: goto          81
      44: aload_1
      45: iload_2
      46: invokevirtual #10                 // Method java/lang/String.charAt:(I)C
      49: bipush        48
      51: if_icmpeq     81
      54: new           #2                  // class java/lang/IllegalArgumentException
      57: dup
      58: new           #12                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #14                 // String Illegal character at position
      67: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_2
      71: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: iinc          2, 1
      84: goto          10
      87: return

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: ireturn

  public boolean getBit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #18                 // Method assertValidIndex:(I)V
       5: iload_1
       6: bipush        32
       8: idiv
       9: istore_2
      10: iload_1
      11: bipush        32
      13: irem
      14: istore_3
      15: aload_0
      16: getfield      #6                  // Field data:[I
      19: iload_2
      20: iaload
      21: iconst_1
      22: iload_3
      23: ishl
      24: iand
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public void setBit(int, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #18                 // Method assertValidIndex:(I)V
       5: iload_1
       6: bipush        32
       8: idiv
       9: istore_3
      10: iload_1
      11: bipush        32
      13: irem
      14: istore        4
      16: iload_2
      17: ifeq          36
      20: aload_0
      21: getfield      #6                  // Field data:[I
      24: iload_3
      25: dup2
      26: iaload
      27: iconst_1
      28: iload         4
      30: ishl
      31: ior
      32: iastore
      33: goto          51
      36: aload_0
      37: getfield      #6                  // Field data:[I
      40: iload_3
      41: dup2
      42: iaload
      43: iconst_1
      44: iload         4
      46: ishl
      47: iconst_m1
      48: ixor
      49: iand
      50: iastore
      51: return

  public void flipBit(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #18                 // Method assertValidIndex:(I)V
       5: iload_1
       6: bipush        32
       8: idiv
       9: istore_2
      10: iload_1
      11: bipush        32
      13: irem
      14: istore_3
      15: aload_0
      16: getfield      #6                  // Field data:[I
      19: iload_2
      20: dup2
      21: iaload
      22: iconst_1
      23: iload_3
      24: ishl
      25: ixor
      26: iastore
      27: return

  private void assertValidIndex(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #5                  // Field length:I
       5: if_icmpge     12
       8: iload_1
       9: ifge          56
      12: new           #19                 // class java/lang/IndexOutOfBoundsException
      15: dup
      16: new           #12                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #20                 // String Invalid index:
      25: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: iload_1
      29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      32: ldc           #21                 // String  (length:
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: aload_0
      38: getfield      #5                  // Field length:I
      41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: ldc           #22                 // String )
      46: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #23                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: return

  public int countSetBits();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field data:[I
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     51
      19: aload_2
      20: iload         4
      22: iaload
      23: istore        5
      25: iload         5
      27: ifeq          45
      30: iload         5
      32: iload         5
      34: iconst_1
      35: isub
      36: iand
      37: istore        5
      39: iinc          1, 1
      42: goto          25
      45: iinc          4, 1
      48: goto          13
      51: iload_1
      52: ireturn

  public int countUnsetBits();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: aload_0
       5: invokevirtual #24                 // Method countSetBits:()I
       8: isub
       9: ireturn

  public java.math.BigInteger toNumber();
    Code:
       0: new           #25                 // class java/math/BigInteger
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method toString:()Ljava/lang/String;
       8: iconst_2
       9: invokespecial #27                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      12: areturn

  public void swapSubstring(org.uncommons.maths.binary.BitString, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #18                 // Method assertValidIndex:(I)V
       5: aload_1
       6: iload_2
       7: invokespecial #18                 // Method assertValidIndex:(I)V
      10: iload_2
      11: bipush        32
      13: idiv
      14: istore        4
      16: bipush        32
      18: iload_2
      19: isub
      20: bipush        32
      22: irem
      23: istore        5
      25: iload         5
      27: ifle          47
      30: aload_0
      31: aload_1
      32: iload         4
      34: iconst_m1
      35: bipush        32
      37: iload         5
      39: isub
      40: ishl
      41: invokespecial #28                 // Method swapBits:(Lorg/uncommons/maths/binary/BitString;II)V
      44: iinc          4, 1
      47: iload_3
      48: iload         5
      50: isub
      51: istore        6
      53: iload         6
      55: bipush        32
      57: idiv
      58: istore        7
      60: iload         4
      62: istore        8
      64: iload         8
      66: iload         7
      68: if_icmpge     109
      71: aload_0
      72: getfield      #6                  // Field data:[I
      75: iload         8
      77: iaload
      78: istore        9
      80: aload_0
      81: getfield      #6                  // Field data:[I
      84: iload         8
      86: aload_1
      87: getfield      #6                  // Field data:[I
      90: iload         8
      92: iaload
      93: iastore
      94: aload_1
      95: getfield      #6                  // Field data:[I
      98: iload         8
     100: iload         9
     102: iastore
     103: iinc          8, 1
     106: goto          64
     109: iload         6
     111: bipush        32
     113: irem
     114: istore        6
     116: iload         6
     118: ifle          135
     121: aload_0
     122: aload_1
     123: iload         4
     125: iconst_m1
     126: bipush        32
     128: iload         6
     130: isub
     131: iushr
     132: invokespecial #28                 // Method swapBits:(Lorg/uncommons/maths/binary/BitString;II)V
     135: return

  private void swapBits(org.uncommons.maths.binary.BitString, int, int);
    Code:
       0: iload_3
       1: iconst_m1
       2: ixor
       3: istore        4
       5: aload_0
       6: getfield      #6                  // Field data:[I
       9: iload_2
      10: iaload
      11: iload         4
      13: iand
      14: istore        5
      16: aload_1
      17: getfield      #6                  // Field data:[I
      20: iload_2
      21: iaload
      22: iload         4
      24: iand
      25: istore        6
      27: aload_0
      28: getfield      #6                  // Field data:[I
      31: iload_2
      32: iaload
      33: iload_3
      34: iand
      35: istore        7
      37: aload_1
      38: getfield      #6                  // Field data:[I
      41: iload_2
      42: iaload
      43: iload_3
      44: iand
      45: istore        8
      47: aload_0
      48: getfield      #6                  // Field data:[I
      51: iload_2
      52: iload         5
      54: iload         8
      56: ior
      57: iastore
      58: aload_1
      59: getfield      #6                  // Field data:[I
      62: iload_2
      63: iload         6
      65: iload         7
      67: ior
      68: iastore
      69: return

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #5                  // Field length:I
      12: iconst_1
      13: isub
      14: istore_2
      15: iload_2
      16: iflt          45
      19: aload_1
      20: aload_0
      21: iload_2
      22: invokevirtual #29                 // Method getBit:(I)Z
      25: ifeq          33
      28: bipush        49
      30: goto          35
      33: bipush        48
      35: invokevirtual #30                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      38: pop
      39: iinc          2, -1
      42: goto          15
      45: aload_1
      46: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: areturn

  public org.uncommons.maths.binary.BitString clone();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #32                 // class org/uncommons/maths/binary/BitString
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #6                  // Field data:[I
      13: invokevirtual #33                 // Method "[I".clone:()Ljava/lang/Object;
      16: checkcast     #34                 // class "[I"
      19: putfield      #6                  // Field data:[I
      22: aload_1
      23: areturn
      24: astore_1
      25: new           #36                 // class java/lang/InternalError
      28: dup
      29: ldc           #37                 // String Cloning failed.
      31: invokespecial #38                 // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      34: aload_1
      35: invokevirtual #39                 // Method java/lang/InternalError.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      38: checkcast     #40                 // class java/lang/Error
      41: athrow
    Exception table:
       from    to  target type
           0    23    24   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #32                 // class org/uncommons/maths/binary/BitString
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field length:I
      33: aload_2
      34: getfield      #5                  // Field length:I
      37: if_icmpne     58
      40: aload_0
      41: getfield      #6                  // Field data:[I
      44: aload_2
      45: getfield      #6                  // Field data:[I
      48: invokestatic  #42                 // Method java/util/Arrays.equals:([I[I)Z
      51: ifeq          58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #5                  // Field length:I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #6                  // Field data:[I
      13: invokestatic  #43                 // Method java/util/Arrays.hashCode:([I)I
      16: iadd
      17: istore_1
      18: iload_1
      19: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method clone:()Lorg/uncommons/maths/binary/BitString;
       4: areturn
}
