Compiled from "OracleSqlStatementBuilder.java"
public class org.flywaydb.core.internal.dbsupport.oracle.OracleSqlStatementBuilder extends org.flywaydb.core.internal.dbsupport.SqlStatementBuilder {
  private static final java.util.regex.Pattern KEYWORDS_BEFORE_STRING_LITERAL_REGEX;

  private static final java.util.regex.Pattern KEYWORDS_AFTER_STRING_LITERAL_REGEX;

  private static final org.flywaydb.core.internal.dbsupport.Delimiter PLSQL_DELIMITER;

  private java.lang.String statementStart;

  public org.flywaydb.core.internal.dbsupport.oracle.OracleSqlStatementBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/flywaydb/core/internal/dbsupport/SqlStatementBuilder."<init>":()V
       4: aload_0
       5: ldc           #2                  // String
       7: putfield      #3                  // Field statementStart:Ljava/lang/String;
      10: return

  protected org.flywaydb.core.internal.dbsupport.Delimiter changeDelimiterIfNecessary(java.lang.String, org.flywaydb.core.internal.dbsupport.Delimiter);
    Code:
       0: aload_1
       1: ldc           #4                  // String DECLARE|DECLARE\\s.*
       3: invokevirtual #5                  // Method java/lang/String.matches:(Ljava/lang/String;)Z
       6: ifne          18
       9: aload_1
      10: ldc           #6                  // String BEGIN|BEGIN\\s.*
      12: invokevirtual #5                  // Method java/lang/String.matches:(Ljava/lang/String;)Z
      15: ifeq          22
      18: getstatic     #7                  // Field PLSQL_DELIMITER:Lorg/flywaydb/core/internal/dbsupport/Delimiter;
      21: areturn
      22: aload_0
      23: getfield      #3                  // Field statementStart:Ljava/lang/String;
      26: ldc           #8                  // String
      28: invokestatic  #9                  // Method org/flywaydb/core/internal/util/StringUtils.countOccurrencesOf:(Ljava/lang/String;Ljava/lang/String;)I
      31: bipush        8
      33: if_icmpge     102
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_0
      44: dup_x1
      45: getfield      #3                  // Field statementStart:Ljava/lang/String;
      48: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_1
      52: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: putfield      #3                  // Field statementStart:Ljava/lang/String;
      61: new           #10                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      68: aload_0
      69: dup_x1
      70: getfield      #3                  // Field statementStart:Ljava/lang/String;
      73: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #8                  // String
      78: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      84: putfield      #3                  // Field statementStart:Ljava/lang/String;
      87: aload_0
      88: aload_0
      89: getfield      #3                  // Field statementStart:Ljava/lang/String;
      92: ldc           #14                 // String \\s+
      94: ldc           #8                  // String
      96: invokevirtual #15                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      99: putfield      #3                  // Field statementStart:Ljava/lang/String;
     102: aload_0
     103: getfield      #3                  // Field statementStart:Ljava/lang/String;
     106: ldc           #16                 // String CREATE( OR REPLACE)? (FUNCTION|PROCEDURE|PACKAGE|TYPE|TRIGGER).*
     108: invokevirtual #5                  // Method java/lang/String.matches:(Ljava/lang/String;)Z
     111: ifne          126
     114: aload_0
     115: getfield      #3                  // Field statementStart:Ljava/lang/String;
     118: ldc           #17                 // String CREATE( OR REPLACE)?( AND (RESOLVE|COMPILE))?( NOFORCE)? JAVA (SOURCE|RESOURCE|CLASS).*
     120: invokevirtual #5                  // Method java/lang/String.matches:(Ljava/lang/String;)Z
     123: ifeq          130
     126: getstatic     #7                  // Field PLSQL_DELIMITER:Lorg/flywaydb/core/internal/dbsupport/Delimiter;
     129: areturn
     130: aload_2
     131: areturn

  protected java.lang.String cleanToken(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #18                 // String \'
       3: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          20
       9: aload_1
      10: ldc           #18                 // String \'
      12: invokevirtual #20                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      15: ifeq          20
      18: aload_1
      19: areturn
      20: getstatic     #21                 // Field KEYWORDS_BEFORE_STRING_LITERAL_REGEX:Ljava/util/regex/Pattern;
      23: aload_1
      24: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      27: astore_2
      28: aload_2
      29: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z
      32: ifeq          41
      35: aload_2
      36: iconst_2
      37: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      40: astore_1
      41: getstatic     #25                 // Field KEYWORDS_AFTER_STRING_LITERAL_REGEX:Ljava/util/regex/Pattern;
      44: aload_1
      45: invokevirtual #22                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      48: astore_3
      49: aload_3
      50: invokevirtual #23                 // Method java/util/regex/Matcher.find:()Z
      53: ifeq          62
      56: aload_3
      57: iconst_1
      58: invokevirtual #24                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      61: astore_1
      62: aload_1
      63: areturn

  protected java.lang.String simplifyLine(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #26                 // String q\'(
       3: ldc           #27                 // String q\'[
       5: invokestatic  #28                 // Method org/flywaydb/core/internal/util/StringUtils.replaceAll:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       8: ldc           #29                 // String )\'
      10: ldc           #30                 // String ]\'
      12: invokestatic  #28                 // Method org/flywaydb/core/internal/util/StringUtils.replaceAll:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokespecial #31                 // Method org/flywaydb/core/internal/dbsupport/SqlStatementBuilder.simplifyLine:(Ljava/lang/String;)Ljava/lang/String;
      21: areturn

  protected java.lang.String extractAlternateOpenQuote(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String Q\'
       3: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          24
       9: aload_1
      10: invokevirtual #33                 // Method java/lang/String.length:()I
      13: iconst_3
      14: if_icmplt     24
      17: aload_1
      18: iconst_0
      19: iconst_3
      20: invokevirtual #34                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      23: areturn
      24: aconst_null
      25: areturn

  protected java.lang.String computeAlternateCloseQuote(java.lang.String);
    Code:
       0: aload_1
       1: iconst_2
       2: invokevirtual #35                 // Method java/lang/String.charAt:(I)C
       5: istore_2
       6: iload_2
       7: lookupswitch  { // 4
                    40: 51
                    60: 57
                    91: 48
                   123: 54
               default: 60
          }
      48: ldc           #30                 // String ]\'
      50: areturn
      51: ldc           #29                 // String )\'
      53: areturn
      54: ldc           #36                 // String }\'
      56: areturn
      57: ldc           #37                 // String >\'
      59: areturn
      60: new           #10                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      67: iload_2
      68: invokevirtual #38                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      71: ldc           #18                 // String \'
      73: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: areturn

  public boolean canDiscard();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/flywaydb/core/internal/dbsupport/SqlStatementBuilder.canDiscard:()Z
       4: ifne          19
       7: aload_0
       8: getfield      #3                  // Field statementStart:Ljava/lang/String;
      11: ldc           #40                 // String SET DEFINE OFF
      13: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  static {};
    Code:
       0: ldc           #41                 // String ^(N|IF|ELSIF|SELECT|IMMEDIATE|RETURN|IS)(\'.*)
       2: invokestatic  #42                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #21                 // Field KEYWORDS_BEFORE_STRING_LITERAL_REGEX:Ljava/util/regex/Pattern;
       8: ldc           #43                 // String (.*\')(USING|THEN|FROM|AND|OR)(?!.)
      10: invokestatic  #42                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #25                 // Field KEYWORDS_AFTER_STRING_LITERAL_REGEX:Ljava/util/regex/Pattern;
      16: new           #44                 // class org/flywaydb/core/internal/dbsupport/Delimiter
      19: dup
      20: ldc           #45                 // String /
      22: iconst_1
      23: invokespecial #46                 // Method org/flywaydb/core/internal/dbsupport/Delimiter."<init>":(Ljava/lang/String;Z)V
      26: putstatic     #7                  // Field PLSQL_DELIMITER:Lorg/flywaydb/core/internal/dbsupport/Delimiter;
      29: return
}
