Compiled from "RedshiftDbSupport.java"
public abstract class org.flywaydb.core.internal.dbsupport.redshift.RedshiftDbSupport extends org.flywaydb.core.internal.dbsupport.DbSupport {
  private static final org.flywaydb.core.internal.util.logging.Log LOG;

  public org.flywaydb.core.internal.dbsupport.redshift.RedshiftDbSupport(org.flywaydb.core.internal.dbsupport.JdbcTemplate);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/flywaydb/core/internal/dbsupport/DbSupport."<init>":(Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;)V
       5: return

  public java.lang.String getDbName();
    Code:
       0: ldc           #2                  // String redshift
       2: areturn

  public java.lang.String getCurrentUserFunction();
    Code:
       0: ldc           #3                  // String current_user
       2: areturn

  public org.flywaydb.core.internal.dbsupport.Schema getOriginalSchema();
    Code:
       0: aload_0
       1: getfield      #4                  // Field originalSchema:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #4                  // Field originalSchema:Ljava/lang/String;
      13: aload_0
      14: ldc           #5                  // String $user
      16: invokevirtual #6                  // Method doQuote:(Ljava/lang/String;)Ljava/lang/String;
      19: ldc           #7                  // String
      21: invokevirtual #8                  // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      24: invokevirtual #9                  // Method java/lang/String.trim:()Ljava/lang/String;
      27: astore_1
      28: aload_1
      29: ldc           #10                 // String ,
      31: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      34: ifeq          43
      37: aload_1
      38: iconst_2
      39: invokevirtual #12                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      42: astore_1
      43: aload_1
      44: ldc           #10                 // String ,
      46: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      49: ifeq          68
      52: aload_0
      53: aload_1
      54: iconst_0
      55: aload_1
      56: ldc           #10                 // String ,
      58: invokevirtual #14                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      61: invokevirtual #15                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      64: invokevirtual #16                 // Method getSchema:(Ljava/lang/String;)Lorg/flywaydb/core/internal/dbsupport/Schema;
      67: areturn
      68: aload_0
      69: aload_1
      70: invokevirtual #16                 // Method getSchema:(Ljava/lang/String;)Lorg/flywaydb/core/internal/dbsupport/Schema;
      73: areturn

  protected java.lang.String doGetCurrentSchemaName() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
       4: ldc           #18                 // String SHOW search_path
       6: iconst_0
       7: anewarray     #19                 // class java/lang/String
      10: invokevirtual #20                 // Method org/flywaydb/core/internal/dbsupport/JdbcTemplate.queryForString:(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;
      13: astore_1
      14: aload_1
      15: invokestatic  #21                 // Method org/flywaydb/core/internal/util/StringUtils.hasText:(Ljava/lang/String;)Z
      18: ifeq          65
      21: aload_1
      22: ldc           #22                 // String unset
      24: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifne          65
      30: aload_1
      31: ldc           #5                  // String $user
      33: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      36: ifeq          65
      39: aload_1
      40: aload_0
      41: ldc           #5                  // String $user
      43: invokevirtual #6                  // Method doQuote:(Ljava/lang/String;)Ljava/lang/String;
      46: invokevirtual #13                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      49: ifne          65
      52: aload_1
      53: ldc           #5                  // String $user
      55: aload_0
      56: ldc           #5                  // String $user
      58: invokevirtual #6                  // Method doQuote:(Ljava/lang/String;)Ljava/lang/String;
      61: invokevirtual #8                  // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      64: astore_1
      65: aload_1
      66: areturn

  public void changeCurrentSchemaTo(org.flywaydb.core.internal.dbsupport.Schema);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method org/flywaydb/core/internal/dbsupport/Schema.getName:()Ljava/lang/String;
       4: aload_0
       5: getfield      #4                  // Field originalSchema:Ljava/lang/String;
       8: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          53
      14: aload_0
      15: getfield      #4                  // Field originalSchema:Ljava/lang/String;
      18: new           #25                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      25: aload_1
      26: invokevirtual #24                 // Method org/flywaydb/core/internal/dbsupport/Schema.getName:()Ljava/lang/String;
      29: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #10                 // String ,
      34: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokevirtual #11                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      43: ifne          53
      46: aload_1
      47: invokevirtual #29                 // Method org/flywaydb/core/internal/dbsupport/Schema.exists:()Z
      50: ifne          54
      53: return
      54: aload_0
      55: getfield      #4                  // Field originalSchema:Ljava/lang/String;
      58: invokestatic  #21                 // Method org/flywaydb/core/internal/util/StringUtils.hasText:(Ljava/lang/String;)Z
      61: ifeq          112
      64: aload_0
      65: getfield      #4                  // Field originalSchema:Ljava/lang/String;
      68: ldc           #22                 // String unset
      70: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      73: ifne          112
      76: aload_0
      77: new           #25                 // class java/lang/StringBuilder
      80: dup
      81: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      84: aload_1
      85: invokevirtual #30                 // Method org/flywaydb/core/internal/dbsupport/Schema.toString:()Ljava/lang/String;
      88: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: ldc           #10                 // String ,
      93: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: aload_0
      97: getfield      #4                  // Field originalSchema:Ljava/lang/String;
     100: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokevirtual #31                 // Method doChangeCurrentSchemaTo:(Ljava/lang/String;)V
     109: goto          120
     112: aload_0
     113: aload_1
     114: invokevirtual #30                 // Method org/flywaydb/core/internal/dbsupport/Schema.toString:()Ljava/lang/String;
     117: invokevirtual #31                 // Method doChangeCurrentSchemaTo:(Ljava/lang/String;)V
     120: goto          152
     123: astore_2
     124: new           #33                 // class org/flywaydb/core/api/FlywayException
     127: dup
     128: new           #25                 // class java/lang/StringBuilder
     131: dup
     132: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     135: ldc           #34                 // String Error setting current schema to
     137: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: aload_1
     141: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     144: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     147: aload_2
     148: invokespecial #36                 // Method org/flywaydb/core/api/FlywayException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     151: athrow
     152: return
    Exception table:
       from    to  target type
          54   120   123   Class java/sql/SQLException

  protected void doChangeCurrentSchemaTo(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokestatic  #37                 // Method org/flywaydb/core/internal/util/StringUtils.hasLength:(Ljava/lang/String;)Z
       4: ifeq          16
       7: aload_1
       8: ldc           #22                 // String unset
      10: invokevirtual #23                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          30
      16: aload_0
      17: getfield      #17                 // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
      20: ldc           #38                 // String SELECT set_config(\'search_path\', \'\', false)
      22: iconst_0
      23: anewarray     #39                 // class java/lang/Object
      26: invokevirtual #40                 // Method org/flywaydb/core/internal/dbsupport/JdbcTemplate.execute:(Ljava/lang/String;[Ljava/lang/Object;)V
      29: return
      30: aload_0
      31: getfield      #17                 // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
      34: new           #25                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #41                 // String SET search_path =
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: iconst_0
      54: anewarray     #39                 // class java/lang/Object
      57: invokevirtual #40                 // Method org/flywaydb/core/internal/dbsupport/JdbcTemplate.execute:(Ljava/lang/String;[Ljava/lang/Object;)V
      60: return

  public boolean supportsDdlTransactions();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getBooleanTrue();
    Code:
       0: ldc           #42                 // String TRUE
       2: areturn

  public java.lang.String getBooleanFalse();
    Code:
       0: ldc           #43                 // String FALSE
       2: areturn

  public org.flywaydb.core.internal.dbsupport.SqlStatementBuilder createSqlStatementBuilder();
    Code:
       0: new           #44                 // class org/flywaydb/core/internal/dbsupport/postgresql/PostgreSQLSqlStatementBuilder
       3: dup
       4: invokespecial #45                 // Method org/flywaydb/core/internal/dbsupport/postgresql/PostgreSQLSqlStatementBuilder."<init>":()V
       7: areturn

  public java.lang.String doQuote(java.lang.String);
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #46                 // String \"
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: ldc           #46                 // String \"
      15: ldc           #47                 // String \"\"
      17: invokestatic  #48                 // Method org/flywaydb/core/internal/util/StringUtils.replaceAll:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      20: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #46                 // String \"
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: areturn

  public org.flywaydb.core.internal.dbsupport.Schema getSchema(java.lang.String);
    Code:
       0: new           #49                 // class org/flywaydb/core/internal/dbsupport/redshift/RedshiftSchema
       3: dup
       4: aload_0
       5: getfield      #17                 // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
       8: aload_0
       9: aload_1
      10: invokespecial #50                 // Method org/flywaydb/core/internal/dbsupport/redshift/RedshiftSchema."<init>":(Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;Lorg/flywaydb/core/internal/dbsupport/redshift/RedshiftDbSupport;Ljava/lang/String;)V
      13: areturn

  public boolean catalogIsSchema();
    Code:
       0: iconst_0
       1: ireturn

  public boolean detect();
    Code:
       0: aload_0
       1: getfield      #17                 // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
       4: ldc           #51                 // String select count(*) from information_schema.tables where table_schema = \'pg_catalog\' and table_name = \'stl_s3client\'
       6: iconst_0
       7: anewarray     #19                 // class java/lang/String
      10: invokevirtual #52                 // Method org/flywaydb/core/internal/dbsupport/JdbcTemplate.queryForInt:(Ljava/lang/String;[Ljava/lang/String;)I
      13: ifle          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
      22: astore_1
      23: getstatic     #53                 // Field LOG:Lorg/flywaydb/core/internal/util/logging/Log;
      26: ldc           #54                 // String Unable to check whether this is a Redshift database
      28: aload_1
      29: invokeinterface #55,  3           // InterfaceMethod org/flywaydb/core/internal/util/logging/Log.error:(Ljava/lang/String;Ljava/lang/Exception;)V
      34: iconst_0
      35: ireturn
    Exception table:
       from    to  target type
           0    21    22   Class java/sql/SQLException

  static {};
    Code:
       0: ldc           #56                 // class org/flywaydb/core/internal/dbsupport/redshift/RedshiftDbSupport
       2: invokestatic  #57                 // Method org/flywaydb/core/internal/util/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/flywaydb/core/internal/util/logging/Log;
       5: putstatic     #53                 // Field LOG:Lorg/flywaydb/core/internal/util/logging/Log;
       8: return
}
