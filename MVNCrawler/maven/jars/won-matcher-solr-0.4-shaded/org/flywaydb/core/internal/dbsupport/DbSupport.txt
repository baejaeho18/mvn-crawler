Compiled from "DbSupport.java"
public abstract class org.flywaydb.core.internal.dbsupport.DbSupport {
  protected final org.flywaydb.core.internal.dbsupport.JdbcTemplate jdbcTemplate;

  protected final java.lang.String originalSchema;

  public org.flywaydb.core.internal.dbsupport.DbSupport(org.flywaydb.core.internal.dbsupport.JdbcTemplate);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method org/flywaydb/core/internal/dbsupport/JdbcTemplate.getConnection:()Ljava/sql/Connection;
      14: ifnonnull     21
      17: aconst_null
      18: goto          25
      21: aload_0
      22: invokevirtual #4                  // Method getCurrentSchemaName:()Ljava/lang/String;
      25: putfield      #5                  // Field originalSchema:Ljava/lang/String;
      28: return

  public org.flywaydb.core.internal.dbsupport.JdbcTemplate getJdbcTemplate();
    Code:
       0: aload_0
       1: getfield      #2                  // Field jdbcTemplate:Lorg/flywaydb/core/internal/dbsupport/JdbcTemplate;
       4: areturn

  public abstract org.flywaydb.core.internal.dbsupport.Schema getSchema(java.lang.String);

  public abstract org.flywaydb.core.internal.dbsupport.SqlStatementBuilder createSqlStatementBuilder();

  public abstract java.lang.String getDbName();

  public org.flywaydb.core.internal.dbsupport.Schema getOriginalSchema();
    Code:
       0: aload_0
       1: getfield      #5                  // Field originalSchema:Ljava/lang/String;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_0
      11: getfield      #5                  // Field originalSchema:Ljava/lang/String;
      14: invokevirtual #6                  // Method getSchema:(Ljava/lang/String;)Lorg/flywaydb/core/internal/dbsupport/Schema;
      17: areturn

  public java.lang.String getCurrentSchemaName();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method doGetCurrentSchemaName:()Ljava/lang/String;
       4: areturn
       5: astore_1
       6: new           #9                  // class org/flywaydb/core/api/FlywayException
       9: dup
      10: ldc           #10                 // String Unable to retrieve the current schema for the connection
      12: aload_1
      13: invokespecial #11                 // Method org/flywaydb/core/api/FlywayException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      16: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/sql/SQLException

  protected abstract java.lang.String doGetCurrentSchemaName() throws java.sql.SQLException;

  public void changeCurrentSchemaTo(org.flywaydb.core.internal.dbsupport.Schema);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method org/flywaydb/core/internal/dbsupport/Schema.getName:()Ljava/lang/String;
       4: aload_0
       5: getfield      #5                  // Field originalSchema:Ljava/lang/String;
       8: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          21
      14: aload_1
      15: invokevirtual #14                 // Method org/flywaydb/core/internal/dbsupport/Schema.exists:()Z
      18: ifne          22
      21: return
      22: aload_0
      23: aload_1
      24: invokevirtual #15                 // Method org/flywaydb/core/internal/dbsupport/Schema.toString:()Ljava/lang/String;
      27: invokevirtual #16                 // Method doChangeCurrentSchemaTo:(Ljava/lang/String;)V
      30: goto          62
      33: astore_2
      34: new           #9                  // class org/flywaydb/core/api/FlywayException
      37: dup
      38: new           #17                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #19                 // String Error setting current schema to
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: aload_2
      58: invokespecial #11                 // Method org/flywaydb/core/api/FlywayException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      61: athrow
      62: return
    Exception table:
       from    to  target type
          22    30    33   Class java/sql/SQLException

  public void restoreCurrentSchema();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field originalSchema:Ljava/lang/String;
       5: invokevirtual #16                 // Method doChangeCurrentSchemaTo:(Ljava/lang/String;)V
       8: goto          23
      11: astore_1
      12: new           #9                  // class org/flywaydb/core/api/FlywayException
      15: dup
      16: ldc           #23                 // String Error restoring current schema to its original setting
      18: aload_1
      19: invokespecial #11                 // Method org/flywaydb/core/api/FlywayException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: athrow
      23: return
    Exception table:
       from    to  target type
           0     8    11   Class java/sql/SQLException

  protected abstract void doChangeCurrentSchemaTo(java.lang.String) throws java.sql.SQLException;

  public abstract java.lang.String getCurrentUserFunction();

  public abstract boolean supportsDdlTransactions();

  public abstract java.lang.String getBooleanTrue();

  public abstract java.lang.String getBooleanFalse();

  public java.lang.String quote(java.lang.String...);
    Code:
       0: ldc           #24                 // String
       2: astore_2
       3: iconst_1
       4: istore_3
       5: aload_1
       6: astore        4
       8: aload         4
      10: arraylength
      11: istore        5
      13: iconst_0
      14: istore        6
      16: iload         6
      18: iload         5
      20: if_icmpge     86
      23: aload         4
      25: iload         6
      27: aaload
      28: astore        7
      30: iload_3
      31: ifne          54
      34: new           #17                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_2
      42: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #25                 // String .
      47: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: astore_2
      54: iconst_0
      55: istore_3
      56: new           #17                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      63: aload_2
      64: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: aload         7
      70: invokevirtual #26                 // Method doQuote:(Ljava/lang/String;)Ljava/lang/String;
      73: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: astore_2
      80: iinc          6, 1
      83: goto          16
      86: aload_2
      87: areturn

  protected abstract java.lang.String doQuote(java.lang.String);

  public abstract boolean catalogIsSchema();

  public void executePgCopy(java.sql.Connection, java.lang.String) throws java.sql.SQLException;
    Code:
       0: return
}
