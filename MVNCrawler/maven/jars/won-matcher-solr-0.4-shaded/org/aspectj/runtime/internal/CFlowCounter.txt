Compiled from "CFlowCounter.java"
public class org.aspectj.runtime.internal.CFlowCounter {
  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory tsFactory;

  private org.aspectj.runtime.internal.cflowstack.ThreadCounter flowHeightHandler;

  public org.aspectj.runtime.internal.CFlowCounter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
       8: invokeinterface #3,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadStackFactory.getNewThreadCounter:()Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
      13: putfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
      16: return

  public void inc();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
       4: invokeinterface #5,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadCounter.inc:()V
       9: return

  public void dec();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
       4: invokeinterface #6,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadCounter.dec:()V
       9: aload_0
      10: getfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
      13: invokeinterface #7,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadCounter.isNotZero:()Z
      18: ifne          30
      21: aload_0
      22: getfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
      25: invokeinterface #8,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadCounter.removeThreadCounter:()V
      30: return

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #4                  // Field flowHeightHandler:Lorg/aspectj/runtime/internal/cflowstack/ThreadCounter;
       4: invokeinterface #7,  1            // InterfaceMethod org/aspectj/runtime/internal/cflowstack/ThreadCounter.isNotZero:()Z
       9: ireturn

  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactory();
    Code:
       0: new           #9                  // class org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl
       3: dup
       4: invokespecial #10                 // Method org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl."<init>":()V
       7: areturn

  private static org.aspectj.runtime.internal.cflowstack.ThreadStackFactory getThreadLocalStackFactoryFor11();
    Code:
       0: new           #11                 // class org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11
       3: dup
       4: invokespecial #12                 // Method org/aspectj/runtime/internal/cflowstack/ThreadStackFactoryImpl11."<init>":()V
       7: areturn

  private static void selectFactoryForVMVersion();
    Code:
       0: ldc           #13                 // String aspectj.runtime.cflowstack.usethreadlocal
       2: ldc           #14                 // String unspecified
       4: invokestatic  #15                 // Method getSystemPropertyWithoutSecurityException:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: astore_0
       8: iconst_0
       9: istore_1
      10: aload_0
      11: ldc           #14                 // String unspecified
      13: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          45
      19: ldc           #17                 // String java.class.version
      21: ldc           #18                 // String 0.0
      23: invokestatic  #19                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      26: astore_2
      27: aload_2
      28: ldc           #20                 // String 46.0
      30: invokevirtual #21                 // Method java/lang/String.compareTo:(Ljava/lang/String;)I
      33: iflt          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: istore_1
      42: goto          69
      45: aload_0
      46: ldc           #22                 // String yes
      48: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifne          63
      54: aload_0
      55: ldc           #23                 // String true
      57: invokevirtual #16                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: istore_1
      69: iload_1
      70: ifeq          82
      73: invokestatic  #24                 // Method getThreadLocalStackFactory:()Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      76: putstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      79: goto          88
      82: invokestatic  #25                 // Method getThreadLocalStackFactoryFor11:()Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      85: putstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
      88: return

  private static java.lang.String getSystemPropertyWithoutSecurityException(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #19                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       5: areturn
       6: astore_2
       7: aload_1
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/SecurityException

  public static java.lang.String getThreadStackFactoryClassName();
    Code:
       0: getstatic     #2                  // Field tsFactory:Lorg/aspectj/runtime/internal/cflowstack/ThreadStackFactory;
       3: invokevirtual #27                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: invokevirtual #28                 // Method java/lang/Class.getName:()Ljava/lang/String;
       9: areturn

  static {};
    Code:
       0: invokestatic  #29                 // Method selectFactoryForVMVersion:()V
       3: return
}
