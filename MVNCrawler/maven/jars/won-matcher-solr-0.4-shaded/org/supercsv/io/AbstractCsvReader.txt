Compiled from "AbstractCsvReader.java"
public abstract class org.supercsv.io.AbstractCsvReader implements org.supercsv.io.ICsvReader {
  private final org.supercsv.io.ITokenizer tokenizer;

  private final org.supercsv.prefs.CsvPreference preferences;

  private final java.util.List<java.lang.String> columns;

  private int rowNumber;

  public org.supercsv.io.AbstractCsvReader(java.io.Reader, org.supercsv.prefs.CsvPreference);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field columns:Ljava/util/List;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field rowNumber:I
      20: aload_1
      21: ifnonnull     34
      24: new           #6                  // class java/lang/NullPointerException
      27: dup
      28: ldc           #7                  // String reader should not be null
      30: invokespecial #8                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_2
      35: ifnonnull     48
      38: new           #6                  // class java/lang/NullPointerException
      41: dup
      42: ldc           #9                  // String preferences should not be null
      44: invokespecial #8                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_2
      50: putfield      #10                 // Field preferences:Lorg/supercsv/prefs/CsvPreference;
      53: aload_0
      54: new           #11                 // class org/supercsv/io/Tokenizer
      57: dup
      58: aload_1
      59: aload_2
      60: invokespecial #12                 // Method org/supercsv/io/Tokenizer."<init>":(Ljava/io/Reader;Lorg/supercsv/prefs/CsvPreference;)V
      63: putfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
      66: return

  public org.supercsv.io.AbstractCsvReader(org.supercsv.io.ITokenizer, org.supercsv.prefs.CsvPreference);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field columns:Ljava/util/List;
      15: aload_0
      16: iconst_0
      17: putfield      #5                  // Field rowNumber:I
      20: aload_1
      21: ifnonnull     34
      24: new           #6                  // class java/lang/NullPointerException
      27: dup
      28: ldc           #14                 // String tokenizer should not be null
      30: invokespecial #8                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_2
      35: ifnonnull     48
      38: new           #6                  // class java/lang/NullPointerException
      41: dup
      42: ldc           #9                  // String preferences should not be null
      44: invokespecial #8                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: aload_2
      50: putfield      #10                 // Field preferences:Lorg/supercsv/prefs/CsvPreference;
      53: aload_0
      54: aload_1
      55: putfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
      58: return

  public void close() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
       4: invokeinterface #15,  1           // InterfaceMethod org/supercsv/io/ITokenizer.close:()V
       9: return

  public java.lang.String get(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field columns:Ljava/util/List;
       4: iload_1
       5: iconst_1
       6: isub
       7: invokeinterface #16,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      12: checkcast     #17                 // class java/lang/String
      15: areturn

  public java.lang.String[] getHeader(boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: ifeq          48
       4: aload_0
       5: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
       8: invokeinterface #18,  1           // InterfaceMethod org/supercsv/io/ITokenizer.getLineNumber:()I
      13: ifeq          48
      16: new           #19                 // class org/supercsv/exception/SuperCsvException
      19: dup
      20: ldc           #20                 // String CSV header must be fetched as the first read operation, but %d lines have already been read
      22: iconst_1
      23: anewarray     #21                 // class java/lang/Object
      26: dup
      27: iconst_0
      28: aload_0
      29: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
      32: invokeinterface #18,  1           // InterfaceMethod org/supercsv/io/ITokenizer.getLineNumber:()I
      37: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      40: aastore
      41: invokestatic  #23                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      44: invokespecial #24                 // Method org/supercsv/exception/SuperCsvException."<init>":(Ljava/lang/String;)V
      47: athrow
      48: aload_0
      49: invokevirtual #25                 // Method readRow:()Z
      52: ifeq          80
      55: aload_0
      56: getfield      #4                  // Field columns:Ljava/util/List;
      59: aload_0
      60: getfield      #4                  // Field columns:Ljava/util/List;
      63: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
      68: anewarray     #17                 // class java/lang/String
      71: invokeinterface #27,  2           // InterfaceMethod java/util/List.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      76: checkcast     #28                 // class "[Ljava/lang/String;"
      79: areturn
      80: aconst_null
      81: areturn

  public int getLineNumber();
    Code:
       0: aload_0
       1: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
       4: invokeinterface #18,  1           // InterfaceMethod org/supercsv/io/ITokenizer.getLineNumber:()I
       9: ireturn

  public java.lang.String getUntokenizedRow();
    Code:
       0: aload_0
       1: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
       4: invokeinterface #29,  1           // InterfaceMethod org/supercsv/io/ITokenizer.getUntokenizedRow:()Ljava/lang/String;
       9: areturn

  public int getRowNumber();
    Code:
       0: aload_0
       1: getfield      #5                  // Field rowNumber:I
       4: ireturn

  public int length();
    Code:
       0: aload_0
       1: getfield      #4                  // Field columns:Ljava/util/List;
       4: invokeinterface #26,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  protected java.util.List<java.lang.String> getColumns();
    Code:
       0: aload_0
       1: getfield      #4                  // Field columns:Ljava/util/List;
       4: areturn

  protected org.supercsv.prefs.CsvPreference getPreferences();
    Code:
       0: aload_0
       1: getfield      #10                 // Field preferences:Lorg/supercsv/prefs/CsvPreference;
       4: areturn

  protected boolean readRow() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field tokenizer:Lorg/supercsv/io/ITokenizer;
       4: aload_0
       5: getfield      #4                  // Field columns:Ljava/util/List;
       8: invokeinterface #30,  2           // InterfaceMethod org/supercsv/io/ITokenizer.readColumns:(Ljava/util/List;)Z
      13: ifeq          28
      16: aload_0
      17: dup
      18: getfield      #5                  // Field rowNumber:I
      21: iconst_1
      22: iadd
      23: putfield      #5                  // Field rowNumber:I
      26: iconst_1
      27: ireturn
      28: iconst_0
      29: ireturn

  protected java.util.List<java.lang.Object> executeProcessors(java.util.List<java.lang.Object>, org.supercsv.cellprocessor.ift.CellProcessor[]);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #31                 // Method getColumns:()Ljava/util/List;
       5: aload_2
       6: aload_0
       7: invokevirtual #32                 // Method getLineNumber:()I
      10: aload_0
      11: invokevirtual #33                 // Method getRowNumber:()I
      14: invokestatic  #34                 // Method org/supercsv/util/Util.executeCellProcessors:(Ljava/util/List;Ljava/util/List;[Lorg/supercsv/cellprocessor/ift/CellProcessor;II)V
      17: aload_1
      18: areturn
}
