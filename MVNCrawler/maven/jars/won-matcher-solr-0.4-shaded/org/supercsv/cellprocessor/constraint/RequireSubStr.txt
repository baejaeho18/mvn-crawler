Compiled from "RequireSubStr.java"
public class org.supercsv.cellprocessor.constraint.RequireSubStr extends org.supercsv.cellprocessor.CellProcessorAdaptor implements org.supercsv.cellprocessor.ift.StringCellProcessor {
  private final java.util.List<java.lang.String> requiredSubStrings;

  public org.supercsv.cellprocessor.constraint.RequireSubStr(java.lang.String...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/supercsv/cellprocessor/CellProcessorAdaptor."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      15: aload_1
      16: invokestatic  #5                  // Method checkPreconditions:([Ljava/lang/String;)V
      19: aload_0
      20: aload_1
      21: invokespecial #6                  // Method checkAndAddRequiredSubStrings:([Ljava/lang/String;)V
      24: return

  public org.supercsv.cellprocessor.constraint.RequireSubStr(java.util.List<java.lang.String>, org.supercsv.cellprocessor.ift.CellProcessor);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #7                  // Method org/supercsv/cellprocessor/CellProcessorAdaptor."<init>":(Lorg/supercsv/cellprocessor/ift/CellProcessor;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      16: aload_1
      17: invokestatic  #8                  // Method checkPreconditions:(Ljava/util/List;)V
      20: aload_0
      21: aload_1
      22: invokespecial #9                  // Method checkAndAddRequiredSubStrings:(Ljava/util/List;)V
      25: return

  public org.supercsv.cellprocessor.constraint.RequireSubStr(java.lang.String, org.supercsv.cellprocessor.ift.CellProcessor);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #7                  // Method org/supercsv/cellprocessor/CellProcessorAdaptor."<init>":(Lorg/supercsv/cellprocessor/ift/CellProcessor;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      16: iconst_1
      17: anewarray     #10                 // class java/lang/String
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: invokestatic  #5                  // Method checkPreconditions:([Ljava/lang/String;)V
      27: aload_0
      28: iconst_1
      29: anewarray     #10                 // class java/lang/String
      32: dup
      33: iconst_0
      34: aload_1
      35: aastore
      36: invokespecial #6                  // Method checkAndAddRequiredSubStrings:([Ljava/lang/String;)V
      39: return

  public org.supercsv.cellprocessor.constraint.RequireSubStr(java.lang.String[], org.supercsv.cellprocessor.ift.CellProcessor);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #7                  // Method org/supercsv/cellprocessor/CellProcessorAdaptor."<init>":(Lorg/supercsv/cellprocessor/ift/CellProcessor;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      16: aload_1
      17: invokestatic  #5                  // Method checkPreconditions:([Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: invokespecial #6                  // Method checkAndAddRequiredSubStrings:([Ljava/lang/String;)V
      25: return

  private static void checkPreconditions(java.lang.String...);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #12                 // String requiredSubStrings array should not be null
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: arraylength
      16: ifne          29
      19: new           #14                 // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #15                 // String requiredSubStrings array should not be empty
      25: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: return

  private static void checkPreconditions(java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #17                 // String requiredSubStrings List should not be null
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokeinterface #18,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      20: ifeq          33
      23: new           #14                 // class java/lang/IllegalArgumentException
      26: dup
      27: ldc           #19                 // String requiredSubStrings List should not be empty
      29: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      32: athrow
      33: return

  private void checkAndAddRequiredSubStrings(java.util.List<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          54
      16: aload_2
      17: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #10                 // class java/lang/String
      25: astore_3
      26: aload_3
      27: ifnonnull     40
      30: new           #11                 // class java/lang/NullPointerException
      33: dup
      34: ldc           #23                 // String required substring should not be null
      36: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: getfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      44: aload_3
      45: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          7
      54: return

  private void checkAndAddRequiredSubStrings(java.lang.String...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #25                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #9                  // Method checkAndAddRequiredSubStrings:(Ljava/util/List;)V
       8: return

  public java.lang.Object execute(java.lang.Object, org.supercsv.util.CsvContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #26                 // Method validateInputNotNull:(Ljava/lang/Object;Lorg/supercsv/util/CsvContext;)V
       6: aload_1
       7: invokevirtual #27                 // Method java/lang/Object.toString:()Ljava/lang/String;
      10: astore_3
      11: aload_0
      12: getfield      #4                  // Field requiredSubStrings:Ljava/util/List;
      15: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      20: astore        4
      22: aload         4
      24: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          68
      32: aload         4
      34: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #10                 // class java/lang/String
      42: astore        5
      44: aload_3
      45: aload         5
      47: invokevirtual #28                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      50: ifeq          65
      53: aload_0
      54: getfield      #29                 // Field next:Lorg/supercsv/cellprocessor/ift/CellProcessor;
      57: aload_1
      58: aload_2
      59: invokeinterface #30,  3           // InterfaceMethod org/supercsv/cellprocessor/ift/CellProcessor.execute:(Ljava/lang/Object;Lorg/supercsv/util/CsvContext;)Ljava/lang/Object;
      64: areturn
      65: goto          22
      68: new           #31                 // class org/supercsv/exception/SuperCsvConstraintViolationException
      71: dup
      72: ldc           #32                 // String \'%s\' does not contain any of the required substrings
      74: iconst_1
      75: anewarray     #33                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload_1
      81: aastore
      82: invokestatic  #34                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      85: aload_2
      86: aload_0
      87: invokespecial #35                 // Method org/supercsv/exception/SuperCsvConstraintViolationException."<init>":(Ljava/lang/String;Lorg/supercsv/util/CsvContext;Lorg/supercsv/cellprocessor/ift/CellProcessor;)V
      90: athrow
}
