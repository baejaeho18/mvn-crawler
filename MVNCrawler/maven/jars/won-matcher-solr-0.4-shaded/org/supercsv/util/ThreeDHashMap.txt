Compiled from "ThreeDHashMap.java"
public class org.supercsv.util.ThreeDHashMap<K1, K2, K3, V> {
  private final java.util.HashMap<K1, java.util.HashMap<K2, java.util.HashMap<K3, V>>> map;

  public org.supercsv.util.ThreeDHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/HashMap;
      15: return

  public boolean containsKey(K1, K2);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_3
      19: aload_2
      20: invokevirtual #6                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      23: ireturn

  public boolean containsKey(K1, K2, K3);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore        4
      13: aload         4
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload         4
      22: aload_2
      23: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #2                  // class java/util/HashMap
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: iconst_0
      37: ireturn
      38: aload         5
      40: aload_3
      41: invokevirtual #6                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      44: ireturn

  public java.util.HashMap<K2, java.util.HashMap<K3, V>> get(K1);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: areturn

  public org.supercsv.util.TwoDHashMap<K2, K3, V> getAs2d(K1);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_2
      12: aload_2
      13: ifnull        25
      16: new           #7                  // class org/supercsv/util/TwoDHashMap
      19: dup
      20: aload_2
      21: invokespecial #8                  // Method org/supercsv/util/TwoDHashMap."<init>":(Ljava/util/HashMap;)V
      24: areturn
      25: new           #7                  // class org/supercsv/util/TwoDHashMap
      28: dup
      29: invokespecial #9                  // Method org/supercsv/util/TwoDHashMap."<init>":()V
      32: areturn

  public java.util.HashMap<K3, V> get(K1, K2);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_3
      19: aload_2
      20: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #2                  // class java/util/HashMap
      26: areturn

  public V get(K1, K2, K3);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore        4
      13: aload         4
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload         4
      22: aload_2
      23: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #2                  // class java/util/HashMap
      29: astore        5
      31: aload         5
      33: ifnonnull     38
      36: aconst_null
      37: areturn
      38: aload         5
      40: aload_3
      41: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn

  public java.lang.Object set(K1, K2, K3, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore        5
      13: aload         5
      15: ifnonnull     38
      18: new           #2                  // class java/util/HashMap
      21: dup
      22: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      25: astore        5
      27: aload_0
      28: getfield      #4                  // Field map:Ljava/util/HashMap;
      31: aload_1
      32: aload         5
      34: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload         5
      40: aload_2
      41: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      44: checkcast     #2                  // class java/util/HashMap
      47: astore        6
      49: aload         6
      51: ifnonnull     72
      54: new           #2                  // class java/util/HashMap
      57: dup
      58: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      61: astore        6
      63: aload         5
      65: aload_2
      66: aload         6
      68: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload         6
      74: aload_3
      75: aload         4
      77: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #11                 // Method java/util/HashMap.size:()I
       7: ireturn

  public int size(K1);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_2
      19: invokevirtual #11                 // Method java/util/HashMap.size:()I
      22: ireturn

  public int size(K1, K2);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_3
      19: aload_2
      20: invokevirtual #5                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #2                  // class java/util/HashMap
      26: astore        4
      28: aload         4
      30: ifnonnull     35
      33: iconst_0
      34: ireturn
      35: aload         4
      37: invokevirtual #11                 // Method java/util/HashMap.size:()I
      40: ireturn

  public java.util.Set<K1> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #12                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: areturn
}
