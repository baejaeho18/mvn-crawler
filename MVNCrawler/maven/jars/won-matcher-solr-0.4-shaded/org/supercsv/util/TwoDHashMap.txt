Compiled from "TwoDHashMap.java"
public class org.supercsv.util.TwoDHashMap<K1, K2, V> {
  private final java.util.HashMap<K1, java.util.HashMap<K2, V>> map;

  public org.supercsv.util.TwoDHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field map:Ljava/util/HashMap;
      15: return

  public org.supercsv.util.TwoDHashMap(java.util.HashMap<K1, java.util.HashMap<K2, V>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #5                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #6                  // String map should not be null
      14: invokespecial #7                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #4                  // Field map:Ljava/util/HashMap;
      23: return

  public boolean containsKey(K1, K2);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_3
      19: aload_2
      20: invokevirtual #9                  // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      23: ireturn

  public V get(K1, K2);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_3
      12: aload_3
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_3
      19: aload_2
      20: invokevirtual #8                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      23: areturn

  public java.lang.Object set(K1, K2, V);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore        4
      13: aload         4
      15: ifnonnull     38
      18: new           #2                  // class java/util/HashMap
      21: dup
      22: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      25: astore        4
      27: aload_0
      28: getfield      #4                  // Field map:Ljava/util/HashMap;
      31: aload_1
      32: aload         4
      34: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload         4
      40: aload_2
      41: aload_3
      42: invokevirtual #10                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      45: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #11                 // Method java/util/HashMap.size:()I
       7: ireturn

  public int size(K1);
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #2                  // class java/util/HashMap
      11: astore_2
      12: aload_2
      13: ifnonnull     18
      16: iconst_0
      17: ireturn
      18: aload_2
      19: invokevirtual #11                 // Method java/util/HashMap.size:()I
      22: ireturn

  public java.util.Set<K1> keySet();
    Code:
       0: aload_0
       1: getfield      #4                  // Field map:Ljava/util/HashMap;
       4: invokevirtual #12                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: areturn
}
