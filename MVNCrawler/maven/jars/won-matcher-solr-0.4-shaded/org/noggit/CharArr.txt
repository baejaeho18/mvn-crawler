Compiled from "CharArr.java"
public class org.noggit.CharArr implements java.lang.CharSequence,java.lang.Appendable {
  protected char[] buf;

  protected int start;

  protected int end;

  public org.noggit.CharArr();
    Code:
       0: aload_0
       1: bipush        32
       3: invokespecial #1                  // Method "<init>":(I)V
       6: return

  public org.noggit.CharArr(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: newarray       char
       8: putfield      #3                  // Field buf:[C
      11: return

  public org.noggit.CharArr(char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: iload_2
       7: iload_3
       8: invokevirtual #4                  // Method set:([CII)V
      11: return

  public void setStart(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field start:I
       5: return

  public void setEnd(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field end:I
       5: return

  public void set(char[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field buf:[C
       5: aload_0
       6: iload_2
       7: putfield      #5                  // Field start:I
      10: aload_0
      11: iload_3
      12: putfield      #6                  // Field end:I
      15: return

  public char[] getArray();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: areturn

  public int getStart();
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: ireturn

  public int getEnd();
    Code:
       0: aload_0
       1: getfield      #6                  // Field end:I
       4: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field end:I
       4: aload_0
       5: getfield      #5                  // Field start:I
       8: isub
       9: ireturn

  public int length();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method size:()I
       4: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: arraylength
       5: ireturn

  public char charAt(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: aload_0
       5: getfield      #5                  // Field start:I
       8: iload_1
       9: iadd
      10: caload
      11: ireturn

  public org.noggit.CharArr subSequence(int, int);
    Code:
       0: new           #8                  // class org/noggit/CharArr
       3: dup
       4: aload_0
       5: getfield      #3                  // Field buf:[C
       8: aload_0
       9: getfield      #5                  // Field start:I
      12: iload_1
      13: iadd
      14: aload_0
      15: getfield      #5                  // Field start:I
      18: iload_2
      19: iadd
      20: invokespecial #9                  // Method "<init>":([CII)V
      23: areturn

  public int read() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field start:I
       4: aload_0
       5: getfield      #6                  // Field end:I
       8: if_icmplt     13
      11: iconst_m1
      12: ireturn
      13: aload_0
      14: getfield      #3                  // Field buf:[C
      17: aload_0
      18: dup
      19: getfield      #5                  // Field start:I
      22: dup_x1
      23: iconst_1
      24: iadd
      25: putfield      #5                  // Field start:I
      28: caload
      29: ireturn

  public int read(char[], int, int);
    Code:
       0: iconst_0
       1: ireturn

  public void unsafeWrite(char);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: aload_0
       5: dup
       6: getfield      #6                  // Field end:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #6                  // Field end:I
      15: iload_1
      16: castore
      17: return

  public void unsafeWrite(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2c
       3: invokevirtual #10                 // Method unsafeWrite:(C)V
       6: return

  public void unsafeWrite(char[], int, int);
    Code:
       0: aload_1
       1: iload_2
       2: aload_0
       3: getfield      #3                  // Field buf:[C
       6: aload_0
       7: getfield      #6                  // Field end:I
      10: iload_3
      11: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      14: aload_0
      15: dup
      16: getfield      #6                  // Field end:I
      19: iload_3
      20: iadd
      21: putfield      #6                  // Field end:I
      24: return

  protected void resize(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buf:[C
       4: arraylength
       5: iconst_1
       6: ishl
       7: iload_1
       8: invokestatic  #12                 // Method java/lang/Math.max:(II)I
      11: newarray       char
      13: astore_2
      14: aload_0
      15: getfield      #3                  // Field buf:[C
      18: aload_0
      19: getfield      #5                  // Field start:I
      22: aload_2
      23: iconst_0
      24: aload_0
      25: invokevirtual #7                  // Method size:()I
      28: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      31: aload_0
      32: aload_2
      33: putfield      #3                  // Field buf:[C
      36: return

  public void reserve(int);
    Code:
       0: aload_0
       1: getfield      #6                  // Field end:I
       4: iload_1
       5: iadd
       6: aload_0
       7: getfield      #3                  // Field buf:[C
      10: arraylength
      11: if_icmple     24
      14: aload_0
      15: aload_0
      16: getfield      #6                  // Field end:I
      19: iload_1
      20: iadd
      21: invokevirtual #13                 // Method resize:(I)V
      24: return

  public void write(char);
    Code:
       0: aload_0
       1: getfield      #6                  // Field end:I
       4: aload_0
       5: getfield      #3                  // Field buf:[C
       8: arraylength
       9: if_icmplt     22
      12: aload_0
      13: aload_0
      14: getfield      #6                  // Field end:I
      17: iconst_1
      18: iadd
      19: invokevirtual #13                 // Method resize:(I)V
      22: aload_0
      23: iload_1
      24: invokevirtual #10                 // Method unsafeWrite:(C)V
      27: return

  public final void write(int);
    Code:
       0: aload_0
       1: iload_1
       2: i2c
       3: invokevirtual #14                 // Method write:(C)V
       6: return

  public final void write(char[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #15                 // Method write:([CII)V
       8: return

  public void write(char[], int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #16                 // Method reserve:(I)V
       5: aload_0
       6: aload_1
       7: iload_2
       8: iload_3
       9: invokevirtual #17                 // Method unsafeWrite:([CII)V
      12: return

  public final void write(org.noggit.CharArr);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #3                  // Field buf:[C
       5: aload_0
       6: getfield      #5                  // Field start:I
       9: aload_0
      10: getfield      #6                  // Field end:I
      13: aload_0
      14: getfield      #5                  // Field start:I
      17: isub
      18: invokevirtual #15                 // Method write:([CII)V
      21: return

  public final void write(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #18                 // Method java/lang/String.length:()I
       7: invokevirtual #19                 // Method write:(Ljava/lang/String;II)V
      10: return

  public void write(java.lang.String, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #16                 // Method reserve:(I)V
       5: aload_1
       6: iload_2
       7: iload_3
       8: aload_0
       9: getfield      #3                  // Field buf:[C
      12: aload_0
      13: getfield      #6                  // Field end:I
      16: invokevirtual #20                 // Method java/lang/String.getChars:(II[CI)V
      19: aload_0
      20: dup
      21: getfield      #6                  // Field end:I
      24: iload_3
      25: iadd
      26: putfield      #6                  // Field end:I
      29: return

  public void flush();
    Code:
       0: return

  public final void reset();
    Code:
       0: aload_0
       1: aload_0
       2: iconst_0
       3: dup_x1
       4: putfield      #6                  // Field end:I
       7: putfield      #5                  // Field start:I
      10: return

  public void close();
    Code:
       0: return

  public char[] toCharArray();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method size:()I
       4: newarray       char
       6: astore_1
       7: aload_0
       8: getfield      #3                  // Field buf:[C
      11: aload_0
      12: getfield      #5                  // Field start:I
      15: aload_1
      16: iconst_0
      17: aload_0
      18: invokevirtual #7                  // Method size:()I
      21: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      24: aload_1
      25: areturn

  public java.lang.String toString();
    Code:
       0: new           #21                 // class java/lang/String
       3: dup
       4: aload_0
       5: getfield      #3                  // Field buf:[C
       8: aload_0
       9: getfield      #5                  // Field start:I
      12: aload_0
      13: invokevirtual #7                  // Method size:()I
      16: invokespecial #22                 // Method java/lang/String."<init>":([CII)V
      19: areturn

  public int read(java.nio.CharBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method size:()I
       4: istore_2
       5: iload_2
       6: ifle          23
       9: aload_1
      10: aload_0
      11: getfield      #3                  // Field buf:[C
      14: aload_0
      15: getfield      #5                  // Field start:I
      18: iload_2
      19: invokevirtual #23                 // Method java/nio/CharBuffer.put:([CII)Ljava/nio/CharBuffer;
      22: pop
      23: aload_0
      24: aload_0
      25: getfield      #6                  // Field end:I
      28: putfield      #5                  // Field start:I
      31: aload_0
      32: invokevirtual #24                 // Method fill:()I
      35: pop
      36: aload_0
      37: invokevirtual #7                  // Method size:()I
      40: istore_3
      41: iload_3
      42: ifne          55
      45: iload_2
      46: ifne          53
      49: iconst_m1
      50: goto          54
      53: iload_2
      54: ireturn
      55: iload_2
      56: iload_3
      57: iadd
      58: istore_2
      59: aload_1
      60: aload_0
      61: getfield      #3                  // Field buf:[C
      64: aload_0
      65: getfield      #5                  // Field start:I
      68: iload_3
      69: invokevirtual #23                 // Method java/nio/CharBuffer.put:([CII)Ljava/nio/CharBuffer;
      72: pop
      73: goto          31

  public int fill() throws java.io.IOException;
    Code:
       0: iconst_0
       1: ireturn

  public final java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokeinterface #25,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       9: invokevirtual #26                 // Method append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;
      12: areturn

  public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokeinterface #27,  3           // InterfaceMethod java/lang/CharSequence.subSequence:(II)Ljava/lang/CharSequence;
       9: invokevirtual #28                 // Method java/lang/Object.toString:()Ljava/lang/String;
      12: invokevirtual #29                 // Method write:(Ljava/lang/String;)V
      15: aconst_null
      16: areturn

  public final java.lang.Appendable append(char) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #14                 // Method write:(C)V
       5: aload_0
       6: areturn

  public java.lang.CharSequence subSequence(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokevirtual #30                 // Method subSequence:(II)Lorg/noggit/CharArr;
       6: areturn
}
