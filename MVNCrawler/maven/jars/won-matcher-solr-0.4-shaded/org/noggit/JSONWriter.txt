Compiled from "JSONWriter.java"
public class org.noggit.JSONWriter {
  protected int level;

  protected int indent;

  protected final org.noggit.CharArr out;

  public org.noggit.JSONWriter(org.noggit.CharArr, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field out:Lorg/noggit/CharArr;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field indent:I
      14: return

  public org.noggit.JSONWriter(org.noggit.CharArr);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_2
       3: invokespecial #4                  // Method "<init>":(Lorg/noggit/CharArr;I)V
       6: return

  public void setIndentSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field indent:I
       5: return

  public void indent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field indent:I
       4: iflt          63
       7: aload_0
       8: getfield      #2                  // Field out:Lorg/noggit/CharArr;
      11: bipush        10
      13: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
      16: aload_0
      17: getfield      #3                  // Field indent:I
      20: ifle          63
      23: aload_0
      24: getfield      #6                  // Field level:I
      27: aload_0
      28: getfield      #3                  // Field indent:I
      31: imul
      32: istore_1
      33: aload_0
      34: getfield      #2                  // Field out:Lorg/noggit/CharArr;
      37: iload_1
      38: invokevirtual #7                  // Method org/noggit/CharArr.reserve:(I)V
      41: iconst_0
      42: istore_2
      43: iload_2
      44: iload_1
      45: if_icmpge     63
      48: aload_0
      49: getfield      #2                  // Field out:Lorg/noggit/CharArr;
      52: bipush        32
      54: invokevirtual #8                  // Method org/noggit/CharArr.unsafeWrite:(C)V
      57: iinc          2, 1
      60: goto          43
      63: return

  public void write(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     11
       4: aload_0
       5: invokevirtual #9                  // Method writeNull:()V
       8: goto          390
      11: aload_1
      12: instanceof    #10                 // class java/lang/CharSequence
      15: ifeq          29
      18: aload_0
      19: aload_1
      20: checkcast     #10                 // class java/lang/CharSequence
      23: invokevirtual #11                 // Method writeString:(Ljava/lang/CharSequence;)V
      26: goto          390
      29: aload_1
      30: instanceof    #12                 // class java/lang/Number
      33: ifeq          116
      36: aload_1
      37: instanceof    #13                 // class java/lang/Integer
      40: ifne          50
      43: aload_1
      44: instanceof    #14                 // class java/lang/Long
      47: ifeq          64
      50: aload_0
      51: aload_1
      52: checkcast     #12                 // class java/lang/Number
      55: invokevirtual #15                 // Method java/lang/Number.longValue:()J
      58: invokevirtual #16                 // Method write:(J)V
      61: goto          390
      64: aload_1
      65: instanceof    #17                 // class java/lang/Float
      68: ifne          78
      71: aload_1
      72: instanceof    #18                 // class java/lang/Double
      75: ifeq          92
      78: aload_0
      79: aload_1
      80: checkcast     #12                 // class java/lang/Number
      83: invokevirtual #19                 // Method java/lang/Number.doubleValue:()D
      86: invokevirtual #20                 // Method write:(D)V
      89: goto          390
      92: new           #21                 // class org/noggit/CharArr
      95: dup
      96: invokespecial #22                 // Method org/noggit/CharArr."<init>":()V
      99: astore_2
     100: aload_2
     101: aload_1
     102: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
     105: invokevirtual #24                 // Method org/noggit/CharArr.write:(Ljava/lang/String;)V
     108: aload_0
     109: aload_2
     110: invokevirtual #25                 // Method writeNumber:(Lorg/noggit/CharArr;)V
     113: goto          390
     116: aload_1
     117: instanceof    #26                 // class java/util/Map
     120: ifeq          134
     123: aload_0
     124: aload_1
     125: checkcast     #26                 // class java/util/Map
     128: invokevirtual #27                 // Method write:(Ljava/util/Map;)V
     131: goto          390
     134: aload_1
     135: instanceof    #28                 // class java/util/Collection
     138: ifeq          152
     141: aload_0
     142: aload_1
     143: checkcast     #28                 // class java/util/Collection
     146: invokevirtual #29                 // Method write:(Ljava/util/Collection;)V
     149: goto          390
     152: aload_1
     153: instanceof    #30                 // class "[Ljava/lang/Object;"
     156: ifeq          176
     159: aload_0
     160: aload_1
     161: checkcast     #30                 // class "[Ljava/lang/Object;"
     164: checkcast     #30                 // class "[Ljava/lang/Object;"
     167: invokestatic  #31                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     170: invokevirtual #29                 // Method write:(Ljava/util/Collection;)V
     173: goto          390
     176: aload_1
     177: instanceof    #32                 // class java/lang/Boolean
     180: ifeq          197
     183: aload_0
     184: aload_1
     185: checkcast     #32                 // class java/lang/Boolean
     188: invokevirtual #33                 // Method java/lang/Boolean.booleanValue:()Z
     191: invokevirtual #34                 // Method write:(Z)V
     194: goto          390
     197: aload_1
     198: instanceof    #35                 // class org/noggit/JSONWriter$Writable
     201: ifeq          217
     204: aload_1
     205: checkcast     #35                 // class org/noggit/JSONWriter$Writable
     208: aload_0
     209: invokeinterface #36,  2           // InterfaceMethod org/noggit/JSONWriter$Writable.write:(Lorg/noggit/JSONWriter;)V
     214: goto          390
     217: aload_1
     218: instanceof    #37                 // class "[I"
     221: ifeq          238
     224: aload_0
     225: aload_1
     226: checkcast     #37                 // class "[I"
     229: checkcast     #37                 // class "[I"
     232: invokevirtual #38                 // Method write:([I)V
     235: goto          390
     238: aload_1
     239: instanceof    #39                 // class "[F"
     242: ifeq          259
     245: aload_0
     246: aload_1
     247: checkcast     #39                 // class "[F"
     250: checkcast     #39                 // class "[F"
     253: invokevirtual #40                 // Method write:([F)V
     256: goto          390
     259: aload_1
     260: instanceof    #41                 // class "[J"
     263: ifeq          280
     266: aload_0
     267: aload_1
     268: checkcast     #41                 // class "[J"
     271: checkcast     #41                 // class "[J"
     274: invokevirtual #42                 // Method write:([J)V
     277: goto          390
     280: aload_1
     281: instanceof    #43                 // class "[D"
     284: ifeq          301
     287: aload_0
     288: aload_1
     289: checkcast     #43                 // class "[D"
     292: checkcast     #43                 // class "[D"
     295: invokevirtual #44                 // Method write:([D)V
     298: goto          390
     301: aload_1
     302: instanceof    #45                 // class "[S"
     305: ifeq          322
     308: aload_0
     309: aload_1
     310: checkcast     #45                 // class "[S"
     313: checkcast     #45                 // class "[S"
     316: invokevirtual #46                 // Method write:([S)V
     319: goto          390
     322: aload_1
     323: instanceof    #47                 // class "[Z"
     326: ifeq          343
     329: aload_0
     330: aload_1
     331: checkcast     #47                 // class "[Z"
     334: checkcast     #47                 // class "[Z"
     337: invokevirtual #48                 // Method write:([Z)V
     340: goto          390
     343: aload_1
     344: instanceof    #49                 // class "[C"
     347: ifeq          364
     350: aload_0
     351: aload_1
     352: checkcast     #49                 // class "[C"
     355: checkcast     #49                 // class "[C"
     358: invokevirtual #50                 // Method write:([C)V
     361: goto          390
     364: aload_1
     365: instanceof    #51                 // class "[B"
     368: ifeq          385
     371: aload_0
     372: aload_1
     373: checkcast     #51                 // class "[B"
     376: checkcast     #51                 // class "[B"
     379: invokevirtual #52                 // Method write:([B)V
     382: goto          390
     385: aload_0
     386: aload_1
     387: invokevirtual #53                 // Method handleUnknownClass:(Ljava/lang/Object;)V
     390: return

  public void handleUnknownClass(java.lang.Object);
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokevirtual #54                 // Method org/noggit/CharArr.toString:()Ljava/lang/String;
       8: invokevirtual #11                 // Method writeString:(Ljava/lang/CharSequence;)V
      11: return

  public void write(java.util.Map<?, ?>);
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method startObject:()V
       4: aload_1
       5: invokeinterface #56,  1           // InterfaceMethod java/util/Map.size:()I
      10: istore_2
      11: iconst_1
      12: istore_3
      13: aload_1
      14: invokeinterface #57,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      19: invokeinterface #58,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      24: astore        4
      26: aload         4
      28: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          102
      36: aload         4
      38: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #61                 // class java/util/Map$Entry
      46: astore        5
      48: iload_3
      49: ifeq          57
      52: iconst_0
      53: istore_3
      54: goto          61
      57: aload_0
      58: invokevirtual #62                 // Method writeValueSeparator:()V
      61: iload_2
      62: iconst_1
      63: if_icmple     70
      66: aload_0
      67: invokevirtual #63                 // Method indent:()V
      70: aload_0
      71: aload         5
      73: invokeinterface #64,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      78: invokevirtual #23                 // Method java/lang/Object.toString:()Ljava/lang/String;
      81: invokevirtual #11                 // Method writeString:(Ljava/lang/CharSequence;)V
      84: aload_0
      85: invokevirtual #65                 // Method writeNameSeparator:()V
      88: aload_0
      89: aload         5
      91: invokeinterface #66,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      96: invokevirtual #67                 // Method write:(Ljava/lang/Object;)V
      99: goto          26
     102: aload_0
     103: invokevirtual #68                 // Method endObject:()V
     106: return

  public void write(java.util.Collection<?>);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: aload_1
       5: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.size:()I
      10: istore_2
      11: iconst_1
      12: istore_3
      13: aload_1
      14: invokeinterface #71,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      19: astore        4
      21: aload         4
      23: invokeinterface #59,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          71
      31: aload         4
      33: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: astore        5
      40: iload_3
      41: ifeq          49
      44: iconst_0
      45: istore_3
      46: goto          53
      49: aload_0
      50: invokevirtual #62                 // Method writeValueSeparator:()V
      53: iload_2
      54: iconst_1
      55: if_icmple     62
      58: aload_0
      59: invokevirtual #63                 // Method indent:()V
      62: aload_0
      63: aload         5
      65: invokevirtual #67                 // Method write:(Ljava/lang/Object;)V
      68: goto          21
      71: aload_0
      72: invokevirtual #72                 // Method endArray:()V
      75: return

  public void write(byte[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     54
      22: aload_3
      23: iload         5
      25: baload
      26: i2s
      27: istore        6
      29: iload_2
      30: ifeq          38
      33: iconst_0
      34: istore_2
      35: goto          42
      38: aload_0
      39: invokevirtual #62                 // Method writeValueSeparator:()V
      42: aload_0
      43: iload         6
      45: invokevirtual #73                 // Method write:(S)V
      48: iinc          5, 1
      51: goto          15
      54: aload_0
      55: invokevirtual #72                 // Method endArray:()V
      58: return

  public void write(short[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: saload
      26: istore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: iload         6
      44: invokevirtual #73                 // Method write:(S)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(int[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: iaload
      26: istore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: iload         6
      44: invokevirtual #74                 // Method write:(I)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(long[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: laload
      26: lstore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: lload         6
      44: invokevirtual #16                 // Method write:(J)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(float[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: faload
      26: fstore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: fload         6
      44: invokevirtual #75                 // Method write:(F)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(double[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: daload
      26: dstore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: dload         6
      44: invokevirtual #20                 // Method write:(D)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(boolean[]);
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method startArray:()V
       4: iconst_1
       5: istore_2
       6: aload_1
       7: astore_3
       8: aload_3
       9: arraylength
      10: istore        4
      12: iconst_0
      13: istore        5
      15: iload         5
      17: iload         4
      19: if_icmpge     53
      22: aload_3
      23: iload         5
      25: baload
      26: istore        6
      28: iload_2
      29: ifeq          37
      32: iconst_0
      33: istore_2
      34: goto          41
      37: aload_0
      38: invokevirtual #62                 // Method writeValueSeparator:()V
      41: aload_0
      42: iload         6
      44: invokevirtual #34                 // Method write:(Z)V
      47: iinc          5, 1
      50: goto          15
      53: aload_0
      54: invokevirtual #72                 // Method endArray:()V
      57: return

  public void write(short);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #74                 // Method write:(I)V
       5: return

  public void write(byte);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #74                 // Method write:(I)V
       5: return

  public void writeNull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: invokestatic  #76                 // Method org/noggit/JSONUtil.writeNull:(Lorg/noggit/CharArr;)V
       7: return

  public void writeString(java.lang.CharSequence);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_1
       3: invokeinterface #77,  1           // InterfaceMethod java/lang/CharSequence.length:()I
       8: aload_0
       9: getfield      #2                  // Field out:Lorg/noggit/CharArr;
      12: invokestatic  #78                 // Method org/noggit/JSONUtil.writeString:(Ljava/lang/CharSequence;IILorg/noggit/CharArr;)V
      15: return

  public void writeString(org.noggit.CharArr);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #79                 // Method org/noggit/JSONUtil.writeString:(Lorg/noggit/CharArr;Lorg/noggit/CharArr;)V
       8: return

  public void writeStringStart();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        34
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: return

  public void writeStringChars(org.noggit.CharArr);
    Code:
       0: aload_1
       1: invokevirtual #80                 // Method org/noggit/CharArr.getArray:()[C
       4: aload_1
       5: invokevirtual #81                 // Method org/noggit/CharArr.getStart:()I
       8: aload_1
       9: invokevirtual #82                 // Method org/noggit/CharArr.getEnd:()I
      12: aload_0
      13: getfield      #2                  // Field out:Lorg/noggit/CharArr;
      16: invokestatic  #83                 // Method org/noggit/JSONUtil.writeStringPart:([CIILorg/noggit/CharArr;)V
      19: return

  public void writeStringEnd();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        34
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: return

  public void write(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #84                 // Method org/noggit/JSONUtil.writeNumber:(JLorg/noggit/CharArr;)V
       8: return

  public void write(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #85                 // Method org/noggit/JSONUtil.writeNumber:(ILorg/noggit/CharArr;)V
       8: return

  public void write(double);
    Code:
       0: dload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #86                 // Method org/noggit/JSONUtil.writeNumber:(DLorg/noggit/CharArr;)V
       8: return

  public void write(float);
    Code:
       0: fload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #87                 // Method org/noggit/JSONUtil.writeNumber:(FLorg/noggit/CharArr;)V
       8: return

  public void write(boolean);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       5: invokestatic  #88                 // Method org/noggit/JSONUtil.writeBoolean:(ZLorg/noggit/CharArr;)V
       8: return

  public void write(char[]);
    Code:
       0: aload_1
       1: iconst_0
       2: aload_1
       3: arraylength
       4: aload_0
       5: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       8: invokestatic  #89                 // Method org/noggit/JSONUtil.writeString:([CIILorg/noggit/CharArr;)V
      11: return

  public void writeNumber(org.noggit.CharArr);
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: aload_1
       5: invokevirtual #90                 // Method org/noggit/CharArr.write:(Lorg/noggit/CharArr;)V
       8: return

  public void writePartialNumber(org.noggit.CharArr);
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: aload_1
       5: invokevirtual #90                 // Method org/noggit/CharArr.write:(Lorg/noggit/CharArr;)V
       8: return

  public void startObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        123
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: aload_0
      10: dup
      11: getfield      #6                  // Field level:I
      14: iconst_1
      15: iadd
      16: putfield      #6                  // Field level:I
      19: return

  public void endObject();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        125
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: aload_0
      10: dup
      11: getfield      #6                  // Field level:I
      14: iconst_1
      15: isub
      16: putfield      #6                  // Field level:I
      19: return

  public void startArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        91
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: aload_0
      10: dup
      11: getfield      #6                  // Field level:I
      14: iconst_1
      15: iadd
      16: putfield      #6                  // Field level:I
      19: return

  public void endArray();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        93
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: aload_0
      10: dup
      11: getfield      #6                  // Field level:I
      14: iconst_1
      15: isub
      16: putfield      #6                  // Field level:I
      19: return

  public void writeValueSeparator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        44
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: return

  public void writeNameSeparator();
    Code:
       0: aload_0
       1: getfield      #2                  // Field out:Lorg/noggit/CharArr;
       4: bipush        58
       6: invokevirtual #5                  // Method org/noggit/CharArr.write:(C)V
       9: return
}
