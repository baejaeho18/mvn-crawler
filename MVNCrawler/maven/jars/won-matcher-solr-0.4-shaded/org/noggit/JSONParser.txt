Compiled from "JSONParser.java"
public class org.noggit.JSONParser {
  public static final int STRING;

  public static final int LONG;

  public static final int NUMBER;

  public static final int BIGNUMBER;

  public static final int BOOLEAN;

  public static final int NULL;

  public static final int OBJECT_START;

  public static final int OBJECT_END;

  public static final int ARRAY_START;

  public static final int ARRAY_END;

  public static final int EOF;

  public static final int ALLOW_COMMENTS;

  public static final int ALLOW_SINGLE_QUOTES;

  public static final int ALLOW_BACKSLASH_ESCAPING_ANY_CHARACTER;

  public static final int ALLOW_UNQUOTED_KEYS;

  public static final int ALLOW_UNQUOTED_STRING_VALUES;

  public static final int FLAGS_STRICT;

  private static final org.noggit.CharArr devNull;

  int flags;

  final char[] buf;

  int start;

  int end;

  final java.io.Reader in;

  boolean eof;

  long gpos;

  int event;

  int stringTerm;

  private final org.noggit.CharArr out;

  private byte[] stack;

  private int ptr;

  private byte state;

  private static final byte DID_OBJSTART;

  private static final byte DID_ARRSTART;

  private static final byte DID_ARRELEM;

  private static final byte DID_MEMNAME;

  private static final byte DID_MEMVAL;

  private int valstate;

  private boolean bool;

  private long lval;

  private int nstate;

  private static final int HAS_FRACTION;

  private static final int HAS_EXPONENT;

  private final org.noggit.CharArr tmp;

  public static java.lang.String getEventString(int);
    Code:
       0: iload_0
       1: tableswitch   { // 1 to 11
                     1: 60
                     2: 63
                     3: 66
                     4: 69
                     5: 72
                     6: 75
                     7: 78
                     8: 81
                     9: 84
                    10: 87
                    11: 90
               default: 93
          }
      60: ldc           #1                  // String STRING
      62: areturn
      63: ldc           #2                  // String LONG
      65: areturn
      66: ldc           #3                  // String NUMBER
      68: areturn
      69: ldc           #4                  // String BIGNUMBER
      71: areturn
      72: ldc           #5                  // String BOOLEAN
      74: areturn
      75: ldc           #6                  // String NULL
      77: areturn
      78: ldc           #7                  // String OBJECT_START
      80: areturn
      81: ldc           #8                  // String OBJECT_END
      83: areturn
      84: ldc           #9                  // String ARRAY_START
      86: areturn
      87: ldc           #10                 // String ARRAY_END
      89: areturn
      90: ldc           #11                 // String EOF
      92: areturn
      93: new           #12                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #14                 // String Unknown:
     102: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: iload_0
     106: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     109: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     112: areturn

  public org.noggit.JSONParser(java.io.Reader);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: newarray       char
       7: invokespecial #18                 // Method "<init>":(Ljava/io/Reader;[C)V
      10: return

  public org.noggit.JSONParser(java.io.Reader, char[]);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        31
       7: putfield      #20                 // Field flags:I
      10: aload_0
      11: iconst_0
      12: putfield      #21                 // Field eof:Z
      15: aload_0
      16: new           #22                 // class org/noggit/CharArr
      19: dup
      20: bipush        64
      22: invokespecial #23                 // Method org/noggit/CharArr."<init>":(I)V
      25: putfield      #24                 // Field out:Lorg/noggit/CharArr;
      28: aload_0
      29: bipush        16
      31: newarray       byte
      33: putfield      #25                 // Field stack:[B
      36: aload_0
      37: iconst_0
      38: putfield      #26                 // Field ptr:I
      41: aload_0
      42: iconst_0
      43: putfield      #27                 // Field state:B
      46: aload_0
      47: new           #22                 // class org/noggit/CharArr
      50: dup
      51: aconst_null
      52: iconst_0
      53: iconst_0
      54: invokespecial #28                 // Method org/noggit/CharArr."<init>":([CII)V
      57: putfield      #29                 // Field tmp:Lorg/noggit/CharArr;
      60: aload_0
      61: aload_1
      62: putfield      #30                 // Field in:Ljava/io/Reader;
      65: aload_0
      66: aload_2
      67: putfield      #31                 // Field buf:[C
      70: return

  public org.noggit.JSONParser(char[], int, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        31
       7: putfield      #20                 // Field flags:I
      10: aload_0
      11: iconst_0
      12: putfield      #21                 // Field eof:Z
      15: aload_0
      16: new           #22                 // class org/noggit/CharArr
      19: dup
      20: bipush        64
      22: invokespecial #23                 // Method org/noggit/CharArr."<init>":(I)V
      25: putfield      #24                 // Field out:Lorg/noggit/CharArr;
      28: aload_0
      29: bipush        16
      31: newarray       byte
      33: putfield      #25                 // Field stack:[B
      36: aload_0
      37: iconst_0
      38: putfield      #26                 // Field ptr:I
      41: aload_0
      42: iconst_0
      43: putfield      #27                 // Field state:B
      46: aload_0
      47: new           #22                 // class org/noggit/CharArr
      50: dup
      51: aconst_null
      52: iconst_0
      53: iconst_0
      54: invokespecial #28                 // Method org/noggit/CharArr."<init>":([CII)V
      57: putfield      #29                 // Field tmp:Lorg/noggit/CharArr;
      60: aload_0
      61: aconst_null
      62: putfield      #30                 // Field in:Ljava/io/Reader;
      65: aload_0
      66: aload_1
      67: putfield      #31                 // Field buf:[C
      70: aload_0
      71: iload_2
      72: putfield      #32                 // Field start:I
      75: aload_0
      76: iload_3
      77: putfield      #33                 // Field end:I
      80: return

  public org.noggit.JSONParser(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: invokevirtual #34                 // Method java/lang/String.length:()I
       7: invokespecial #35                 // Method "<init>":(Ljava/lang/String;II)V
      10: return

  public org.noggit.JSONParser(java.lang.String, int, int);
    Code:
       0: aload_0
       1: invokespecial #19                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: bipush        31
       7: putfield      #20                 // Field flags:I
      10: aload_0
      11: iconst_0
      12: putfield      #21                 // Field eof:Z
      15: aload_0
      16: new           #22                 // class org/noggit/CharArr
      19: dup
      20: bipush        64
      22: invokespecial #23                 // Method org/noggit/CharArr."<init>":(I)V
      25: putfield      #24                 // Field out:Lorg/noggit/CharArr;
      28: aload_0
      29: bipush        16
      31: newarray       byte
      33: putfield      #25                 // Field stack:[B
      36: aload_0
      37: iconst_0
      38: putfield      #26                 // Field ptr:I
      41: aload_0
      42: iconst_0
      43: putfield      #27                 // Field state:B
      46: aload_0
      47: new           #22                 // class org/noggit/CharArr
      50: dup
      51: aconst_null
      52: iconst_0
      53: iconst_0
      54: invokespecial #28                 // Method org/noggit/CharArr."<init>":([CII)V
      57: putfield      #29                 // Field tmp:Lorg/noggit/CharArr;
      60: aload_0
      61: aconst_null
      62: putfield      #30                 // Field in:Ljava/io/Reader;
      65: aload_0
      66: iload_2
      67: putfield      #32                 // Field start:I
      70: aload_0
      71: iload_3
      72: putfield      #33                 // Field end:I
      75: aload_0
      76: iload_3
      77: iload_2
      78: isub
      79: newarray       char
      81: putfield      #31                 // Field buf:[C
      84: aload_1
      85: iload_2
      86: iload_3
      87: aload_0
      88: getfield      #31                 // Field buf:[C
      91: iconst_0
      92: invokevirtual #36                 // Method java/lang/String.getChars:(II[CI)V
      95: return

  public int getFlags();
    Code:
       0: aload_0
       1: getfield      #20                 // Field flags:I
       4: ireturn

  public int setFlags(int);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: iload_1
       4: putfield      #20                 // Field flags:I
       7: iload_2
       8: ireturn

  private final void push();
    Code:
       0: aload_0
       1: getfield      #26                 // Field ptr:I
       4: aload_0
       5: getfield      #25                 // Field stack:[B
       8: arraylength
       9: if_icmplt     42
      12: aload_0
      13: getfield      #25                 // Field stack:[B
      16: arraylength
      17: iconst_1
      18: ishl
      19: newarray       byte
      21: astore_1
      22: aload_0
      23: getfield      #25                 // Field stack:[B
      26: iconst_0
      27: aload_1
      28: iconst_0
      29: aload_0
      30: getfield      #25                 // Field stack:[B
      33: arraylength
      34: invokestatic  #37                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      37: aload_0
      38: aload_1
      39: putfield      #25                 // Field stack:[B
      42: aload_0
      43: getfield      #25                 // Field stack:[B
      46: aload_0
      47: dup
      48: getfield      #26                 // Field ptr:I
      51: dup_x1
      52: iconst_1
      53: iadd
      54: putfield      #26                 // Field ptr:I
      57: aload_0
      58: getfield      #27                 // Field state:B
      61: bastore
      62: return

  private final void pop();
    Code:
       0: aload_0
       1: dup
       2: getfield      #26                 // Field ptr:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #26                 // Field ptr:I
      11: ifge          21
      14: aload_0
      15: ldc           #38                 // String Unbalanced container
      17: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      20: athrow
      21: aload_0
      22: aload_0
      23: getfield      #25                 // Field stack:[B
      26: aload_0
      27: getfield      #26                 // Field ptr:I
      30: baload
      31: putfield      #27                 // Field state:B
      34: return

  protected void fill() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #30                 // Field in:Ljava/io/Reader;
       4: ifnull        57
       7: aload_0
       8: dup
       9: getfield      #40                 // Field gpos:J
      12: aload_0
      13: getfield      #33                 // Field end:I
      16: i2l
      17: ladd
      18: putfield      #40                 // Field gpos:J
      21: aload_0
      22: iconst_0
      23: putfield      #32                 // Field start:I
      26: aload_0
      27: getfield      #30                 // Field in:Ljava/io/Reader;
      30: aload_0
      31: getfield      #31                 // Field buf:[C
      34: iconst_0
      35: aload_0
      36: getfield      #31                 // Field buf:[C
      39: arraylength
      40: invokevirtual #41                 // Method java/io/Reader.read:([CII)I
      43: istore_1
      44: aload_0
      45: iload_1
      46: iflt          53
      49: iload_1
      50: goto          54
      53: iconst_0
      54: putfield      #33                 // Field end:I
      57: aload_0
      58: getfield      #32                 // Field start:I
      61: aload_0
      62: getfield      #33                 // Field end:I
      65: if_icmplt     73
      68: aload_0
      69: iconst_1
      70: putfield      #21                 // Field eof:Z
      73: return

  private void getMore() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method fill:()V
       4: aload_0
       5: getfield      #32                 // Field start:I
       8: aload_0
       9: getfield      #33                 // Field end:I
      12: if_icmplt     21
      15: aload_0
      16: aconst_null
      17: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      20: athrow
      21: return

  protected int getChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #32                 // Field start:I
       4: aload_0
       5: getfield      #33                 // Field end:I
       8: if_icmplt     28
      11: aload_0
      12: invokevirtual #42                 // Method fill:()V
      15: aload_0
      16: getfield      #32                 // Field start:I
      19: aload_0
      20: getfield      #33                 // Field end:I
      23: if_icmplt     28
      26: iconst_m1
      27: ireturn
      28: aload_0
      29: getfield      #31                 // Field buf:[C
      32: aload_0
      33: dup
      34: getfield      #32                 // Field start:I
      37: dup_x1
      38: iconst_1
      39: iadd
      40: putfield      #32                 // Field start:I
      43: caload
      44: ireturn

  protected int getCharNWS() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getChar:()I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 6
                     9: 64
                    10: 64
                    13: 64
                    32: 64
                    35: 67
                    47: 74
               default: 81
          }
      64: goto          0
      67: aload_0
      68: invokevirtual #44                 // Method getNewlineComment:()V
      71: goto          0
      74: aload_0
      75: invokevirtual #45                 // Method getSlashComment:()V
      78: goto          0
      81: iload_1
      82: ireturn

  protected int getCharNWS(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 6
                     9: 60
                    10: 60
                    13: 60
                    32: 60
                    35: 63
                    47: 70
               default: 77
          }
      60: goto          79
      63: aload_0
      64: invokevirtual #44                 // Method getNewlineComment:()V
      67: goto          79
      70: aload_0
      71: invokevirtual #45                 // Method getSlashComment:()V
      74: goto          79
      77: iload_1
      78: ireturn
      79: aload_0
      80: invokevirtual #43                 // Method getChar:()I
      83: istore_1
      84: goto          0

  protected void getNewlineComment() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getChar:()I
       4: istore_1
       5: iload_1
       6: bipush        10
       8: if_icmpeq     22
      11: iload_1
      12: bipush        13
      14: if_icmpeq     22
      17: iload_1
      18: iconst_m1
      19: if_icmpne     23
      22: return
      23: goto          0

  protected void getSlashComment() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getChar:()I
       4: istore_1
       5: iload_1
       6: bipush        47
       8: if_icmpne     16
      11: aload_0
      12: invokevirtual #44                 // Method getNewlineComment:()V
      15: return
      16: iload_1
      17: bipush        42
      19: if_icmpeq     29
      22: aload_0
      23: ldc           #46                 // String Invalid comment: expected //, /*, or #
      25: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      28: athrow
      29: aload_0
      30: invokevirtual #43                 // Method getChar:()I
      33: istore_1
      34: iload_1
      35: bipush        42
      37: if_icmpne     61
      40: aload_0
      41: invokevirtual #43                 // Method getChar:()I
      44: istore_1
      45: iload_1
      46: bipush        47
      48: if_icmpne     52
      51: return
      52: iload_1
      53: bipush        42
      55: if_icmpne     61
      58: goto          34
      61: iload_1
      62: iconst_m1
      63: if_icmpne     67
      66: return
      67: aload_0
      68: invokevirtual #43                 // Method getChar:()I
      71: istore_1
      72: goto          34

  private boolean matchBareWord(char[]) throws java.io.IOException;
    Code:
       0: iconst_1
       1: istore_2
       2: iload_2
       3: aload_1
       4: arraylength
       5: if_icmpge     108
       8: aload_0
       9: invokevirtual #43                 // Method getChar:()I
      12: istore_3
      13: iload_3
      14: aload_1
      15: iload_2
      16: caload
      17: if_icmpeq     102
      20: aload_0
      21: getfield      #20                 // Field flags:I
      24: bipush        16
      26: iand
      27: ifne          61
      30: aload_0
      31: new           #12                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #47                 // String Expected
      40: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: new           #48                 // class java/lang/String
      46: dup
      47: aload_1
      48: invokespecial #49                 // Method java/lang/String."<init>":([C)V
      51: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      60: athrow
      61: aload_0
      62: iconst_0
      63: putfield      #50                 // Field stringTerm:I
      66: aload_0
      67: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      70: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
      73: aload_0
      74: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      77: aload_1
      78: iconst_0
      79: iload_2
      80: invokevirtual #52                 // Method org/noggit/CharArr.write:([CII)V
      83: aload_0
      84: getfield      #21                 // Field eof:Z
      87: ifne          100
      90: aload_0
      91: dup
      92: getfield      #32                 // Field start:I
      95: iconst_1
      96: isub
      97: putfield      #32                 // Field start:I
     100: iconst_0
     101: ireturn
     102: iinc          2, 1
     105: goto          2
     108: aload_0
     109: getfield      #20                 // Field flags:I
     112: bipush        16
     114: iand
     115: ifne          120
     118: iconst_1
     119: ireturn
     120: aload_0
     121: invokevirtual #43                 // Method getChar:()I
     124: istore_2
     125: aload_0
     126: getfield      #21                 // Field eof:Z
     129: ifeq          134
     132: iconst_1
     133: ireturn
     134: iload_2
     135: invokestatic  #53                 // Method isUnquotedStringChar:(I)Z
     138: ifne          153
     141: aload_0
     142: dup
     143: getfield      #32                 // Field start:I
     146: iconst_1
     147: isub
     148: putfield      #32                 // Field start:I
     151: iconst_1
     152: ireturn
     153: aload_0
     154: iconst_0
     155: putfield      #50                 // Field stringTerm:I
     158: aload_0
     159: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     162: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     165: aload_0
     166: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     169: aload_1
     170: iconst_0
     171: aload_1
     172: arraylength
     173: invokevirtual #54                 // Method org/noggit/CharArr.unsafeWrite:([CII)V
     176: aload_0
     177: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     180: iload_2
     181: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     184: iconst_0
     185: ireturn

  protected org.noggit.JSONParser$ParseException err(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #21                 // Field eof:Z
       4: ifne          24
       7: aload_0
       8: getfield      #32                 // Field start:I
      11: ifle          24
      14: aload_0
      15: dup
      16: getfield      #32                 // Field start:I
      19: iconst_1
      20: isub
      21: putfield      #32                 // Field start:I
      24: new           #12                 // class java/lang/StringBuilder
      27: dup
      28: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      31: ldc           #56                 // String char=
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #32                 // Field start:I
      40: aload_0
      41: getfield      #33                 // Field end:I
      44: if_icmplt     52
      47: ldc           #57                 // String (EOF)
      49: goto          79
      52: new           #12                 // class java/lang/StringBuilder
      55: dup
      56: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      59: ldc           #58                 // String
      61: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #31                 // Field buf:[C
      68: aload_0
      69: getfield      #32                 // Field start:I
      72: caload
      73: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: astore_2
      86: new           #12                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc           #60                 // String position=
      95: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_0
      99: getfield      #40                 // Field gpos:J
     102: aload_0
     103: getfield      #32                 // Field start:I
     106: i2l
     107: ladd
     108: invokevirtual #61                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     111: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: astore_3
     115: new           #12                 // class java/lang/StringBuilder
     118: dup
     119: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     122: aload_2
     123: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: bipush        44
     128: invokevirtual #59                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     131: aload_3
     132: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: aload_0
     136: invokespecial #62                 // Method getContext:()Ljava/lang/String;
     139: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: astore        4
     147: aload_1
     148: ifnonnull     171
     151: aload_0
     152: getfield      #32                 // Field start:I
     155: aload_0
     156: getfield      #33                 // Field end:I
     159: if_icmplt     168
     162: ldc           #63                 // String Unexpected EOF
     164: astore_1
     165: goto          171
     168: ldc           #64                 // String JSON Parse Error
     170: astore_1
     171: new           #65                 // class org/noggit/JSONParser$ParseException
     174: dup
     175: new           #12                 // class java/lang/StringBuilder
     178: dup
     179: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
     182: aload_1
     183: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: ldc           #66                 // String :
     188: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload         4
     193: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokespecial #67                 // Method org/noggit/JSONParser$ParseException."<init>":(Ljava/lang/String;)V
     202: areturn

  private java.lang.String getContext();
    Code:
       0: ldc           #58                 // String
       2: astore_1
       3: aload_0
       4: getfield      #32                 // Field start:I
       7: iflt          59
      10: new           #12                 // class java/lang/StringBuilder
      13: dup
      14: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      17: aload_1
      18: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #68                 // String  BEFORE=\'
      23: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: aload_0
      28: getfield      #32                 // Field start:I
      31: bipush        60
      33: isub
      34: iconst_0
      35: invokestatic  #69                 // Method java/lang/Math.max:(II)I
      38: aload_0
      39: getfield      #32                 // Field start:I
      42: iconst_1
      43: iadd
      44: invokespecial #70                 // Method errEscape:(II)Ljava/lang/String;
      47: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: ldc           #71                 // String \'
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: astore_1
      59: aload_0
      60: getfield      #32                 // Field start:I
      63: aload_0
      64: getfield      #33                 // Field end:I
      67: if_icmpge     115
      70: new           #12                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      77: aload_1
      78: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #72                 // String  AFTER=\'
      83: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_0
      87: aload_0
      88: getfield      #32                 // Field start:I
      91: iconst_1
      92: iadd
      93: aload_0
      94: getfield      #32                 // Field start:I
      97: bipush        40
      99: iadd
     100: invokespecial #70                 // Method errEscape:(II)Ljava/lang/String;
     103: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: ldc           #71                 // String \'
     108: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: astore_1
     115: aload_1
     116: areturn

  private java.lang.String errEscape(int, int);
    Code:
       0: iload_2
       1: aload_0
       2: getfield      #33                 // Field end:I
       5: invokestatic  #73                 // Method java/lang/Math.min:(II)I
       8: istore_2
       9: iload_1
      10: iload_2
      11: if_icmplt     17
      14: ldc           #58                 // String
      16: areturn
      17: new           #48                 // class java/lang/String
      20: dup
      21: aload_0
      22: getfield      #31                 // Field buf:[C
      25: iload_1
      26: iload_2
      27: iload_1
      28: isub
      29: invokespecial #74                 // Method java/lang/String."<init>":([CII)V
      32: ldc           #75                 // String \\s+
      34: ldc           #76                 // String
      36: invokevirtual #77                 // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      39: areturn

  private long readNumber(int, boolean) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #24                 // Field out:Lorg/noggit/CharArr;
       4: iload_1
       5: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
       8: bipush        48
      10: iload_1
      11: isub
      12: i2l
      13: lstore_3
      14: iconst_0
      15: istore        5
      17: iload         5
      19: bipush        17
      21: if_icmpge     272
      24: aload_0
      25: invokevirtual #43                 // Method getChar:()I
      28: istore        6
      30: iload         6
      32: lookupswitch  { // 13
                    46: 173
                    48: 148
                    49: 148
                    50: 148
                    51: 148
                    52: 148
                    53: 148
                    54: 148
                    55: 148
                    56: 148
                    57: 148
                    69: 201
                   101: 201
               default: 234
          }
     148: lload_3
     149: ldc2_w        #78                 // long 10l
     152: lmul
     153: iload         6
     155: bipush        48
     157: isub
     158: i2l
     159: lsub
     160: lstore_3
     161: aload_0
     162: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     165: iload         6
     167: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     170: goto          266
     173: aload_0
     174: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     177: bipush        46
     179: invokevirtual #80                 // Method org/noggit/CharArr.unsafeWrite:(C)V
     182: aload_0
     183: aload_0
     184: aload_0
     185: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     188: bipush        22
     190: iload         5
     192: isub
     193: invokespecial #81                 // Method readFrac:(Lorg/noggit/CharArr;I)I
     196: putfield      #82                 // Field valstate:I
     199: lconst_0
     200: lreturn
     201: aload_0
     202: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     205: iload         6
     207: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     210: aload_0
     211: iconst_0
     212: putfield      #83                 // Field nstate:I
     215: aload_0
     216: aload_0
     217: aload_0
     218: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     221: bipush        22
     223: iload         5
     225: isub
     226: invokespecial #84                 // Method readExp:(Lorg/noggit/CharArr;I)I
     229: putfield      #82                 // Field valstate:I
     232: lconst_0
     233: lreturn
     234: iload         6
     236: iconst_m1
     237: if_icmpeq     250
     240: aload_0
     241: dup
     242: getfield      #32                 // Field start:I
     245: iconst_1
     246: isub
     247: putfield      #32                 // Field start:I
     250: aload_0
     251: iconst_2
     252: putfield      #82                 // Field valstate:I
     255: iload_2
     256: ifeq          263
     259: lload_3
     260: goto          265
     263: lload_3
     264: lneg
     265: lreturn
     266: iinc          5, 1
     269: goto          17
     272: iconst_0
     273: istore        6
     275: iload_2
     276: ifeq          285
     279: ldc2_w        #85                 // long -9223372036854775808l
     282: goto          288
     285: ldc2_w        #87                 // long -9223372036854775807l
     288: lstore        7
     290: iload         5
     292: bipush        22
     294: if_icmpge     584
     297: aload_0
     298: invokevirtual #43                 // Method getChar:()I
     301: istore        9
     303: iload         9
     305: lookupswitch  { // 13
                    46: 476
                    48: 420
                    49: 420
                    50: 420
                    51: 420
                    52: 420
                    53: 420
                    54: 420
                    55: 420
                    56: 420
                    57: 420
                    69: 504
                   101: 504
               default: 537
          }
     420: lload_3
     421: ldc2_w        #89                 // long -922337203685477580l
     424: lcmp
     425: ifge          431
     428: iconst_1
     429: istore        6
     431: lload_3
     432: ldc2_w        #78                 // long 10l
     435: lmul
     436: lstore_3
     437: iload         9
     439: bipush        48
     441: isub
     442: istore        10
     444: lload_3
     445: lload         7
     447: iload         10
     449: i2l
     450: ladd
     451: lcmp
     452: ifge          458
     455: iconst_1
     456: istore        6
     458: lload_3
     459: iload         10
     461: i2l
     462: lsub
     463: lstore_3
     464: aload_0
     465: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     468: iload         9
     470: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     473: goto          578
     476: aload_0
     477: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     480: bipush        46
     482: invokevirtual #80                 // Method org/noggit/CharArr.unsafeWrite:(C)V
     485: aload_0
     486: aload_0
     487: aload_0
     488: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     491: bipush        22
     493: iload         5
     495: isub
     496: invokespecial #81                 // Method readFrac:(Lorg/noggit/CharArr;I)I
     499: putfield      #82                 // Field valstate:I
     502: lconst_0
     503: lreturn
     504: aload_0
     505: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     508: iload         9
     510: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     513: aload_0
     514: iconst_0
     515: putfield      #83                 // Field nstate:I
     518: aload_0
     519: aload_0
     520: aload_0
     521: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     524: bipush        22
     526: iload         5
     528: isub
     529: invokespecial #84                 // Method readExp:(Lorg/noggit/CharArr;I)I
     532: putfield      #82                 // Field valstate:I
     535: lconst_0
     536: lreturn
     537: iload         9
     539: iconst_m1
     540: if_icmpeq     553
     543: aload_0
     544: dup
     545: getfield      #32                 // Field start:I
     548: iconst_1
     549: isub
     550: putfield      #32                 // Field start:I
     553: aload_0
     554: iload         6
     556: ifeq          563
     559: iconst_4
     560: goto          564
     563: iconst_2
     564: putfield      #82                 // Field valstate:I
     567: iload_2
     568: ifeq          575
     571: lload_3
     572: goto          577
     575: lload_3
     576: lneg
     577: lreturn
     578: iinc          5, 1
     581: goto          290
     584: aload_0
     585: iconst_0
     586: putfield      #83                 // Field nstate:I
     589: aload_0
     590: iconst_4
     591: putfield      #82                 // Field valstate:I
     594: lconst_0
     595: lreturn

  private int readFrac(org.noggit.CharArr, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #83                 // Field nstate:I
       5: iinc          2, -1
       8: iload_2
       9: iflt          81
      12: aload_0
      13: invokevirtual #43                 // Method getChar:()I
      16: istore_3
      17: iload_3
      18: bipush        48
      20: if_icmplt     37
      23: iload_3
      24: bipush        57
      26: if_icmpgt     37
      29: aload_1
      30: iload_3
      31: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      34: goto          78
      37: iload_3
      38: bipush        101
      40: if_icmpeq     49
      43: iload_3
      44: bipush        69
      46: if_icmpne     61
      49: aload_1
      50: iload_3
      51: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      54: aload_0
      55: aload_1
      56: iload_2
      57: invokespecial #84                 // Method readExp:(Lorg/noggit/CharArr;I)I
      60: ireturn
      61: iload_3
      62: iconst_m1
      63: if_icmpeq     76
      66: aload_0
      67: dup
      68: getfield      #32                 // Field start:I
      71: iconst_1
      72: isub
      73: putfield      #32                 // Field start:I
      76: iconst_3
      77: ireturn
      78: goto          5
      81: iconst_4
      82: ireturn

  private int readExp(org.noggit.CharArr, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: dup
       2: getfield      #83                 // Field nstate:I
       5: iconst_2
       6: ior
       7: putfield      #83                 // Field nstate:I
      10: aload_0
      11: invokevirtual #43                 // Method getChar:()I
      14: istore_3
      15: iinc          2, -1
      18: iload_3
      19: bipush        43
      21: if_icmpeq     30
      24: iload_3
      25: bipush        45
      27: if_icmpne     43
      30: aload_1
      31: iload_3
      32: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      35: aload_0
      36: invokevirtual #43                 // Method getChar:()I
      39: istore_3
      40: iinc          2, -1
      43: iload_3
      44: bipush        48
      46: if_icmplt     55
      49: iload_3
      50: bipush        57
      52: if_icmple     62
      55: aload_0
      56: ldc           #92                 // String missing exponent number
      58: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      61: athrow
      62: aload_1
      63: iload_3
      64: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      67: aload_0
      68: aload_1
      69: iload_2
      70: invokespecial #93                 // Method readExpDigits:(Lorg/noggit/CharArr;I)I
      73: ireturn

  private int readExpDigits(org.noggit.CharArr, int) throws java.io.IOException;
    Code:
       0: iinc          2, -1
       3: iload_2
       4: iflt          52
       7: aload_0
       8: invokevirtual #43                 // Method getChar:()I
      11: istore_3
      12: iload_3
      13: bipush        48
      15: if_icmplt     32
      18: iload_3
      19: bipush        57
      21: if_icmpgt     32
      24: aload_1
      25: iload_3
      26: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      29: goto          49
      32: iload_3
      33: iconst_m1
      34: if_icmpeq     47
      37: aload_0
      38: dup
      39: getfield      #32                 // Field start:I
      42: iconst_1
      43: isub
      44: putfield      #32                 // Field start:I
      47: iconst_3
      48: ireturn
      49: goto          0
      52: iconst_4
      53: ireturn

  private void continueNumber(org.noggit.CharArr) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field out:Lorg/noggit/CharArr;
       5: if_acmpeq     16
       8: aload_1
       9: aload_0
      10: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      13: invokevirtual #94                 // Method org/noggit/CharArr.write:(Lorg/noggit/CharArr;)V
      16: aload_0
      17: getfield      #83                 // Field nstate:I
      20: iconst_2
      21: iand
      22: ifeq          34
      25: aload_0
      26: aload_1
      27: ldc           #95                 // int 2147483647
      29: invokespecial #93                 // Method readExpDigits:(Lorg/noggit/CharArr;I)I
      32: pop
      33: return
      34: aload_0
      35: getfield      #83                 // Field nstate:I
      38: ifeq          50
      41: aload_0
      42: aload_1
      43: ldc           #95                 // int 2147483647
      45: invokespecial #81                 // Method readFrac:(Lorg/noggit/CharArr;I)I
      48: pop
      49: return
      50: aload_0
      51: invokevirtual #43                 // Method getChar:()I
      54: istore_2
      55: iload_2
      56: bipush        48
      58: if_icmplt     75
      61: iload_2
      62: bipush        57
      64: if_icmpgt     75
      67: aload_1
      68: iload_2
      69: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      72: goto          137
      75: iload_2
      76: bipush        46
      78: if_icmpne     95
      81: aload_1
      82: iload_2
      83: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      86: aload_0
      87: aload_1
      88: ldc           #95                 // int 2147483647
      90: invokespecial #81                 // Method readFrac:(Lorg/noggit/CharArr;I)I
      93: pop
      94: return
      95: iload_2
      96: bipush        101
      98: if_icmpeq     107
     101: iload_2
     102: bipush        69
     104: if_icmpne     121
     107: aload_1
     108: iload_2
     109: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
     112: aload_0
     113: aload_1
     114: ldc           #95                 // int 2147483647
     116: invokespecial #84                 // Method readExp:(Lorg/noggit/CharArr;I)I
     119: pop
     120: return
     121: iload_2
     122: iconst_m1
     123: if_icmpeq     136
     126: aload_0
     127: dup
     128: getfield      #32                 // Field start:I
     131: iconst_1
     132: isub
     133: putfield      #32                 // Field start:I
     136: return
     137: goto          50

  private int hexval(int);
    Code:
       0: iload_1
       1: bipush        48
       3: if_icmplt     17
       6: iload_1
       7: bipush        57
       9: if_icmpgt     17
      12: iload_1
      13: bipush        48
      15: isub
      16: ireturn
      17: iload_1
      18: bipush        65
      20: if_icmplt     34
      23: iload_1
      24: bipush        70
      26: if_icmpgt     34
      29: iload_1
      30: bipush        -55
      32: iadd
      33: ireturn
      34: iload_1
      35: bipush        97
      37: if_icmplt     51
      40: iload_1
      41: bipush        102
      43: if_icmpgt     51
      46: iload_1
      47: bipush        -87
      49: iadd
      50: ireturn
      51: aload_0
      52: ldc           #96                 // String invalid hex digit
      54: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      57: athrow

  private char readEscapedChar() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getChar:()I
       4: istore_1
       5: iload_1
       6: lookupswitch  { // 10
                    34: 96
                    39: 99
                    47: 105
                    92: 102
                    98: 120
                   102: 117
                   110: 108
                   114: 111
                   116: 114
                   117: 123
               default: 168
          }
      96: bipush        34
      98: ireturn
      99: bipush        39
     101: ireturn
     102: bipush        92
     104: ireturn
     105: bipush        47
     107: ireturn
     108: bipush        10
     110: ireturn
     111: bipush        13
     113: ireturn
     114: bipush        9
     116: ireturn
     117: bipush        12
     119: ireturn
     120: bipush        8
     122: ireturn
     123: aload_0
     124: aload_0
     125: invokevirtual #43                 // Method getChar:()I
     128: invokespecial #97                 // Method hexval:(I)I
     131: bipush        12
     133: ishl
     134: aload_0
     135: aload_0
     136: invokevirtual #43                 // Method getChar:()I
     139: invokespecial #97                 // Method hexval:(I)I
     142: bipush        8
     144: ishl
     145: ior
     146: aload_0
     147: aload_0
     148: invokevirtual #43                 // Method getChar:()I
     151: invokespecial #97                 // Method hexval:(I)I
     154: iconst_4
     155: ishl
     156: ior
     157: aload_0
     158: aload_0
     159: invokevirtual #43                 // Method getChar:()I
     162: invokespecial #97                 // Method hexval:(I)I
     165: ior
     166: i2c
     167: ireturn
     168: aload_0
     169: getfield      #20                 // Field flags:I
     172: iconst_4
     173: iand
     174: ifeq          186
     177: iload_1
     178: bipush        11
     180: if_icmpeq     186
     183: iload_1
     184: i2c
     185: ireturn
     186: aload_0
     187: ldc           #98                 // String Invalid character escape
     189: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     192: athrow

  private org.noggit.CharArr readStringChars() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field stringTerm:I
       4: ifne          20
       7: aload_0
       8: aload_0
       9: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      12: invokespecial #99                 // Method readStringBare:(Lorg/noggit/CharArr;)V
      15: aload_0
      16: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      19: areturn
      20: aload_0
      21: getfield      #50                 // Field stringTerm:I
      24: i2c
      25: istore_1
      26: aload_0
      27: getfield      #32                 // Field start:I
      30: istore_2
      31: iload_2
      32: aload_0
      33: getfield      #33                 // Field end:I
      36: if_icmpge     94
      39: aload_0
      40: getfield      #31                 // Field buf:[C
      43: iload_2
      44: caload
      45: istore_3
      46: iload_3
      47: iload_1
      48: if_icmpne     79
      51: aload_0
      52: getfield      #29                 // Field tmp:Lorg/noggit/CharArr;
      55: aload_0
      56: getfield      #31                 // Field buf:[C
      59: aload_0
      60: getfield      #32                 // Field start:I
      63: iload_2
      64: invokevirtual #100                // Method org/noggit/CharArr.set:([CII)V
      67: aload_0
      68: iload_2
      69: iconst_1
      70: iadd
      71: putfield      #32                 // Field start:I
      74: aload_0
      75: getfield      #29                 // Field tmp:Lorg/noggit/CharArr;
      78: areturn
      79: iload_3
      80: bipush        92
      82: if_icmpne     88
      85: goto          94
      88: iinc          2, 1
      91: goto          31
      94: aload_0
      95: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      98: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     101: aload_0
     102: aload_0
     103: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     106: iload_2
     107: invokespecial #101                // Method readStringChars2:(Lorg/noggit/CharArr;I)V
     110: aload_0
     111: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     114: areturn

  private void readStringChars2(org.noggit.CharArr, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #50                 // Field stringTerm:I
       4: ifne          13
       7: aload_0
       8: aload_1
       9: invokespecial #99                 // Method readStringBare:(Lorg/noggit/CharArr;)V
      12: return
      13: aload_0
      14: getfield      #50                 // Field stringTerm:I
      17: i2c
      18: istore_3
      19: iload_2
      20: aload_0
      21: getfield      #33                 // Field end:I
      24: if_icmplt     59
      27: aload_1
      28: aload_0
      29: getfield      #31                 // Field buf:[C
      32: aload_0
      33: getfield      #32                 // Field start:I
      36: iload_2
      37: aload_0
      38: getfield      #32                 // Field start:I
      41: isub
      42: invokevirtual #52                 // Method org/noggit/CharArr.write:([CII)V
      45: aload_0
      46: iload_2
      47: putfield      #32                 // Field start:I
      50: aload_0
      51: invokespecial #102                // Method getMore:()V
      54: aload_0
      55: getfield      #32                 // Field start:I
      58: istore_2
      59: aload_0
      60: getfield      #31                 // Field buf:[C
      63: iload_2
      64: iinc          2, 1
      67: caload
      68: istore        4
      70: iload         4
      72: iload_3
      73: if_icmpne     111
      76: iload_2
      77: aload_0
      78: getfield      #32                 // Field start:I
      81: isub
      82: iconst_1
      83: isub
      84: istore        5
      86: iload         5
      88: ifle          105
      91: aload_1
      92: aload_0
      93: getfield      #31                 // Field buf:[C
      96: aload_0
      97: getfield      #32                 // Field start:I
     100: iload         5
     102: invokevirtual #52                 // Method org/noggit/CharArr.write:([CII)V
     105: aload_0
     106: iload_2
     107: putfield      #32                 // Field start:I
     110: return
     111: iload         4
     113: bipush        92
     115: if_icmpne     165
     118: iload_2
     119: aload_0
     120: getfield      #32                 // Field start:I
     123: isub
     124: iconst_1
     125: isub
     126: istore        5
     128: iload         5
     130: ifle          147
     133: aload_1
     134: aload_0
     135: getfield      #31                 // Field buf:[C
     138: aload_0
     139: getfield      #32                 // Field start:I
     142: iload         5
     144: invokevirtual #52                 // Method org/noggit/CharArr.write:([CII)V
     147: aload_0
     148: iload_2
     149: putfield      #32                 // Field start:I
     152: aload_1
     153: aload_0
     154: invokespecial #103                // Method readEscapedChar:()C
     157: invokevirtual #104                // Method org/noggit/CharArr.write:(C)V
     160: aload_0
     161: getfield      #32                 // Field start:I
     164: istore_2
     165: goto          19

  private void readStringBare(org.noggit.CharArr) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #24                 // Field out:Lorg/noggit/CharArr;
       5: if_acmpeq     17
       8: aload_1
       9: aload_0
      10: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      13: invokevirtual #105                // Method org/noggit/CharArr.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;
      16: pop
      17: aload_0
      18: invokevirtual #43                 // Method getChar:()I
      21: istore_2
      22: iload_2
      23: invokestatic  #53                 // Method isUnquotedStringChar:(I)Z
      26: ifne          67
      29: iload_2
      30: iconst_m1
      31: if_icmpne     37
      34: goto          92
      37: iload_2
      38: bipush        92
      40: if_icmpne     54
      43: aload_1
      44: aload_0
      45: invokespecial #103                // Method readEscapedChar:()C
      48: invokevirtual #104                // Method org/noggit/CharArr.write:(C)V
      51: goto          17
      54: aload_0
      55: dup
      56: getfield      #32                 // Field start:I
      59: iconst_1
      60: isub
      61: putfield      #32                 // Field start:I
      64: goto          92
      67: iload_2
      68: bipush        92
      70: if_icmpne     84
      73: aload_1
      74: aload_0
      75: invokespecial #103                // Method readEscapedChar:()C
      78: invokevirtual #104                // Method org/noggit/CharArr.write:(C)V
      81: goto          17
      84: aload_1
      85: iload_2
      86: invokevirtual #91                 // Method org/noggit/CharArr.write:(I)V
      89: goto          17
      92: return

  private void handleNonDoubleQuoteString(int, boolean) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        39
       3: if_icmpne     27
       6: aload_0
       7: iload_1
       8: putfield      #50                 // Field stringTerm:I
      11: aload_0
      12: getfield      #20                 // Field flags:I
      15: iconst_2
      16: iand
      17: ifne          112
      20: aload_0
      21: ldc           #106                // String Single quoted strings not allowed
      23: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      26: athrow
      27: iload_2
      28: ifeq          41
      31: aload_0
      32: getfield      #20                 // Field flags:I
      35: bipush        8
      37: iand
      38: ifeq          62
      41: iload_2
      42: ifne          55
      45: aload_0
      46: getfield      #20                 // Field flags:I
      49: bipush        16
      51: iand
      52: ifeq          62
      55: aload_0
      56: getfield      #21                 // Field eof:Z
      59: ifeq          79
      62: iload_2
      63: ifeq          73
      66: aload_0
      67: ldc           #107                // String Expected quoted string
      69: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      72: athrow
      73: aload_0
      74: aconst_null
      75: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      78: athrow
      79: iload_1
      80: invokestatic  #108                // Method isUnquotedStringStart:(I)Z
      83: ifne          92
      86: aload_0
      87: aconst_null
      88: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      91: athrow
      92: aload_0
      93: iconst_0
      94: putfield      #50                 // Field stringTerm:I
      97: aload_0
      98: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     101: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     104: aload_0
     105: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     108: iload_1
     109: invokevirtual #55                 // Method org/noggit/CharArr.unsafeWrite:(I)V
     112: return

  private static boolean isUnquotedStringStart(int);
    Code:
       0: iload_0
       1: invokestatic  #109                // Method java/lang/Character.isJavaIdentifierStart:(I)Z
       4: ireturn

  private static boolean isUnquotedStringChar(int);
    Code:
       0: iload_0
       1: invokestatic  #110                // Method java/lang/Character.isJavaIdentifierPart:(I)Z
       4: ifne          25
       7: iload_0
       8: bipush        46
      10: if_icmpeq     25
      13: iload_0
      14: bipush        45
      16: if_icmpeq     25
      19: iload_0
      20: bipush        47
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  private int next(int) throws java.io.IOException;
    Code:
       0: iload_1
       1: lookupswitch  { // 25
                    -1: 555
                     9: 212
                    10: 212
                    13: 212
                    32: 212
                    34: 221
                    35: 212
                    39: 234
                    45: 408
                    47: 212
                    48: 287
                    49: 386
                    50: 386
                    51: 386
                    52: 386
                    53: 386
                    54: 386
                    55: 386
                    56: 386
                    57: 386
                    91: 275
                   102: 495
                   110: 527
                   116: 463
                   123: 263
               default: 572
          }
     212: aload_0
     213: iload_1
     214: invokevirtual #111                // Method getCharNWS:(I)I
     217: istore_1
     218: goto          0
     221: aload_0
     222: bipush        34
     224: putfield      #50                 // Field stringTerm:I
     227: aload_0
     228: iconst_1
     229: putfield      #82                 // Field valstate:I
     232: iconst_1
     233: ireturn
     234: aload_0
     235: getfield      #20                 // Field flags:I
     238: iconst_2
     239: iand
     240: ifne          250
     243: aload_0
     244: ldc           #106                // String Single quoted strings not allowed
     246: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     249: athrow
     250: aload_0
     251: bipush        39
     253: putfield      #50                 // Field stringTerm:I
     256: aload_0
     257: iconst_1
     258: putfield      #82                 // Field valstate:I
     261: iconst_1
     262: ireturn
     263: aload_0
     264: invokespecial #112                // Method push:()V
     267: aload_0
     268: iconst_1
     269: putfield      #27                 // Field state:B
     272: bipush        7
     274: ireturn
     275: aload_0
     276: invokespecial #112                // Method push:()V
     279: aload_0
     280: iconst_2
     281: putfield      #27                 // Field state:B
     284: bipush        9
     286: ireturn
     287: aload_0
     288: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     291: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     294: aload_0
     295: invokevirtual #43                 // Method getChar:()I
     298: istore_1
     299: iload_1
     300: bipush        46
     302: if_icmpne     331
     305: aload_0
     306: dup
     307: getfield      #32                 // Field start:I
     310: iconst_1
     311: isub
     312: putfield      #32                 // Field start:I
     315: bipush        48
     317: istore_1
     318: aload_0
     319: bipush        48
     321: iconst_0
     322: invokespecial #113                // Method readNumber:(IZ)J
     325: pop2
     326: aload_0
     327: getfield      #82                 // Field valstate:I
     330: ireturn
     331: iload_1
     332: bipush        57
     334: if_icmpgt     343
     337: iload_1
     338: bipush        48
     340: if_icmpge     379
     343: aload_0
     344: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     347: bipush        48
     349: invokevirtual #80                 // Method org/noggit/CharArr.unsafeWrite:(C)V
     352: iload_1
     353: iconst_m1
     354: if_icmpeq     367
     357: aload_0
     358: dup
     359: getfield      #32                 // Field start:I
     362: iconst_1
     363: isub
     364: putfield      #32                 // Field start:I
     367: aload_0
     368: lconst_0
     369: putfield      #114                // Field lval:J
     372: aload_0
     373: iconst_2
     374: putfield      #82                 // Field valstate:I
     377: iconst_2
     378: ireturn
     379: aload_0
     380: ldc           #115                // String Leading zeros not allowed
     382: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     385: athrow
     386: aload_0
     387: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     390: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     393: aload_0
     394: aload_0
     395: iload_1
     396: iconst_0
     397: invokespecial #113                // Method readNumber:(IZ)J
     400: putfield      #114                // Field lval:J
     403: aload_0
     404: getfield      #82                 // Field valstate:I
     407: ireturn
     408: aload_0
     409: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     412: invokevirtual #51                 // Method org/noggit/CharArr.reset:()V
     415: aload_0
     416: getfield      #24                 // Field out:Lorg/noggit/CharArr;
     419: bipush        45
     421: invokevirtual #80                 // Method org/noggit/CharArr.unsafeWrite:(C)V
     424: aload_0
     425: invokevirtual #43                 // Method getChar:()I
     428: istore_1
     429: iload_1
     430: bipush        48
     432: if_icmplt     441
     435: iload_1
     436: bipush        57
     438: if_icmple     448
     441: aload_0
     442: ldc           #116                // String expected digit after \'-\'
     444: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     447: athrow
     448: aload_0
     449: aload_0
     450: iload_1
     451: iconst_1
     452: invokespecial #113                // Method readNumber:(IZ)J
     455: putfield      #114                // Field lval:J
     458: aload_0
     459: getfield      #82                 // Field valstate:I
     462: ireturn
     463: aload_0
     464: getstatic     #117                // Field org/noggit/JSONUtil.TRUE_CHARS:[C
     467: invokespecial #118                // Method matchBareWord:([C)Z
     470: ifeq          488
     473: aload_0
     474: iconst_1
     475: putfield      #119                // Field bool:Z
     478: aload_0
     479: iconst_5
     480: putfield      #82                 // Field valstate:I
     483: aload_0
     484: getfield      #82                 // Field valstate:I
     487: ireturn
     488: aload_0
     489: iconst_1
     490: putfield      #82                 // Field valstate:I
     493: iconst_1
     494: ireturn
     495: aload_0
     496: getstatic     #120                // Field org/noggit/JSONUtil.FALSE_CHARS:[C
     499: invokespecial #118                // Method matchBareWord:([C)Z
     502: ifeq          520
     505: aload_0
     506: iconst_0
     507: putfield      #119                // Field bool:Z
     510: aload_0
     511: iconst_5
     512: putfield      #82                 // Field valstate:I
     515: aload_0
     516: getfield      #82                 // Field valstate:I
     519: ireturn
     520: aload_0
     521: iconst_1
     522: putfield      #82                 // Field valstate:I
     525: iconst_1
     526: ireturn
     527: aload_0
     528: getstatic     #121                // Field org/noggit/JSONUtil.NULL_CHARS:[C
     531: invokespecial #118                // Method matchBareWord:([C)Z
     534: ifeq          548
     537: aload_0
     538: bipush        6
     540: putfield      #82                 // Field valstate:I
     543: aload_0
     544: getfield      #82                 // Field valstate:I
     547: ireturn
     548: aload_0
     549: iconst_1
     550: putfield      #82                 // Field valstate:I
     553: iconst_1
     554: ireturn
     555: aload_0
     556: invokevirtual #122                // Method getLevel:()I
     559: ifle          569
     562: aload_0
     563: ldc           #123                // String Premature EOF
     565: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     568: athrow
     569: bipush        11
     571: ireturn
     572: aload_0
     573: iload_1
     574: iconst_0
     575: invokespecial #124                // Method handleNonDoubleQuoteString:(IZ)V
     578: aload_0
     579: iconst_1
     580: putfield      #82                 // Field valstate:I
     583: iconst_1
     584: ireturn

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #125                // String start=
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #32                 // Field start:I
      16: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #126                // String ,end=
      21: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #33                 // Field end:I
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: ldc           #127                // String ,state=
      33: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #27                 // Field state:B
      40: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: ldc           #128                // String valstate=
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: getfield      #82                 // Field valstate:I
      52: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      55: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: areturn

  public int nextEvent() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #82                 // Field valstate:I
       4: iconst_1
       5: if_icmpne     22
       8: aload_0
       9: getstatic     #129                // Field devNull:Lorg/noggit/CharArr;
      12: aload_0
      13: getfield      #32                 // Field start:I
      16: invokespecial #101                // Method readStringChars2:(Lorg/noggit/CharArr;I)V
      19: goto          37
      22: aload_0
      23: getfield      #82                 // Field valstate:I
      26: iconst_4
      27: if_icmpne     37
      30: aload_0
      31: getstatic     #129                // Field devNull:Lorg/noggit/CharArr;
      34: invokespecial #130                // Method continueNumber:(Lorg/noggit/CharArr;)V
      37: aload_0
      38: iconst_0
      39: putfield      #82                 // Field valstate:I
      42: aload_0
      43: getfield      #27                 // Field state:B
      46: tableswitch   { // 0 to 5
                     0: 84
                     1: 98
                     2: 273
                     3: 312
                     4: 158
                     5: 195
               default: 362
          }
      84: aload_0
      85: aload_0
      86: aload_0
      87: invokevirtual #131                // Method getCharNWS:()I
      90: invokespecial #132                // Method next:(I)I
      93: dup_x1
      94: putfield      #133                // Field event:I
      97: ireturn
      98: aload_0
      99: invokevirtual #131                // Method getCharNWS:()I
     102: istore_1
     103: iload_1
     104: bipush        125
     106: if_icmpne     121
     109: aload_0
     110: invokespecial #134                // Method pop:()V
     113: aload_0
     114: bipush        8
     116: dup_x1
     117: putfield      #133                // Field event:I
     120: ireturn
     121: iload_1
     122: bipush        34
     124: if_icmpne     135
     127: aload_0
     128: iload_1
     129: putfield      #50                 // Field stringTerm:I
     132: goto          141
     135: aload_0
     136: iload_1
     137: iconst_1
     138: invokespecial #124                // Method handleNonDoubleQuoteString:(IZ)V
     141: aload_0
     142: iconst_4
     143: putfield      #27                 // Field state:B
     146: aload_0
     147: iconst_1
     148: putfield      #82                 // Field valstate:I
     151: aload_0
     152: iconst_1
     153: dup_x1
     154: putfield      #133                // Field event:I
     157: ireturn
     158: aload_0
     159: invokevirtual #131                // Method getCharNWS:()I
     162: istore_1
     163: iload_1
     164: bipush        58
     166: if_icmpeq     176
     169: aload_0
     170: ldc           #135                // String Expected key,value separator \':\'
     172: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     175: athrow
     176: aload_0
     177: iconst_5
     178: putfield      #27                 // Field state:B
     181: aload_0
     182: aload_0
     183: aload_0
     184: invokevirtual #43                 // Method getChar:()I
     187: invokespecial #132                // Method next:(I)I
     190: dup_x1
     191: putfield      #133                // Field event:I
     194: ireturn
     195: aload_0
     196: invokevirtual #131                // Method getCharNWS:()I
     199: istore_1
     200: iload_1
     201: bipush        125
     203: if_icmpne     218
     206: aload_0
     207: invokespecial #134                // Method pop:()V
     210: aload_0
     211: bipush        8
     213: dup_x1
     214: putfield      #133                // Field event:I
     217: ireturn
     218: iload_1
     219: bipush        44
     221: if_icmpeq     231
     224: aload_0
     225: ldc           #136                // String Expected \',\' or \'}\'
     227: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     230: athrow
     231: aload_0
     232: invokevirtual #131                // Method getCharNWS:()I
     235: istore_1
     236: iload_1
     237: bipush        34
     239: if_icmpne     250
     242: aload_0
     243: iload_1
     244: putfield      #50                 // Field stringTerm:I
     247: goto          256
     250: aload_0
     251: iload_1
     252: iconst_1
     253: invokespecial #124                // Method handleNonDoubleQuoteString:(IZ)V
     256: aload_0
     257: iconst_4
     258: putfield      #27                 // Field state:B
     261: aload_0
     262: iconst_1
     263: putfield      #82                 // Field valstate:I
     266: aload_0
     267: iconst_1
     268: dup_x1
     269: putfield      #133                // Field event:I
     272: ireturn
     273: aload_0
     274: invokevirtual #131                // Method getCharNWS:()I
     277: istore_1
     278: iload_1
     279: bipush        93
     281: if_icmpne     296
     284: aload_0
     285: invokespecial #134                // Method pop:()V
     288: aload_0
     289: bipush        10
     291: dup_x1
     292: putfield      #133                // Field event:I
     295: ireturn
     296: aload_0
     297: iconst_3
     298: putfield      #27                 // Field state:B
     301: aload_0
     302: aload_0
     303: iload_1
     304: invokespecial #132                // Method next:(I)I
     307: dup_x1
     308: putfield      #133                // Field event:I
     311: ireturn
     312: aload_0
     313: invokevirtual #131                // Method getCharNWS:()I
     316: istore_1
     317: iload_1
     318: bipush        93
     320: if_icmpne     335
     323: aload_0
     324: invokespecial #134                // Method pop:()V
     327: aload_0
     328: bipush        10
     330: dup_x1
     331: putfield      #133                // Field event:I
     334: ireturn
     335: iload_1
     336: bipush        44
     338: if_icmpeq     348
     341: aload_0
     342: ldc           #137                // String Expected \',\' or \']\'
     344: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
     347: athrow
     348: aload_0
     349: aload_0
     350: aload_0
     351: invokevirtual #43                 // Method getChar:()I
     354: invokespecial #132                // Method next:(I)I
     357: dup_x1
     358: putfield      #133                // Field event:I
     361: ireturn
     362: iconst_0
     363: ireturn

  public int lastEvent();
    Code:
       0: aload_0
       1: getfield      #133                // Field event:I
       4: ireturn

  public boolean wasKey();
    Code:
       0: aload_0
       1: getfield      #27                 // Field state:B
       4: iconst_4
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  private void goTo(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #82                 // Field valstate:I
       4: iload_1
       5: if_icmpne     14
       8: aload_0
       9: iconst_0
      10: putfield      #82                 // Field valstate:I
      13: return
      14: aload_0
      15: getfield      #82                 // Field valstate:I
      18: ifne          49
      21: aload_0
      22: invokevirtual #138                // Method nextEvent:()I
      25: pop
      26: aload_0
      27: getfield      #82                 // Field valstate:I
      30: iload_1
      31: if_icmpeq     41
      34: aload_0
      35: ldc           #139                // String type mismatch
      37: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      40: athrow
      41: aload_0
      42: iconst_0
      43: putfield      #82                 // Field valstate:I
      46: goto          56
      49: aload_0
      50: ldc           #139                // String type mismatch
      52: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      55: athrow
      56: return

  public java.lang.String getString() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #140                // Method getStringChars:()Lorg/noggit/CharArr;
       4: invokevirtual #141                // Method org/noggit/CharArr.toString:()Ljava/lang/String;
       7: areturn

  public org.noggit.CharArr getStringChars() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #142                // Method goTo:(I)V
       5: aload_0
       6: invokespecial #143                // Method readStringChars:()Lorg/noggit/CharArr;
       9: areturn

  public void getString(org.noggit.CharArr) throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #142                // Method goTo:(I)V
       5: aload_0
       6: aload_1
       7: aload_0
       8: getfield      #32                 // Field start:I
      11: invokespecial #101                // Method readStringChars2:(Lorg/noggit/CharArr;I)V
      14: return

  public long getLong() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #142                // Method goTo:(I)V
       5: aload_0
       6: getfield      #114                // Field lval:J
       9: lreturn

  public double getDouble() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokevirtual #144                // Method getNumberChars:()Lorg/noggit/CharArr;
       4: invokevirtual #141                // Method org/noggit/CharArr.toString:()Ljava/lang/String;
       7: invokestatic  #145                // Method java/lang/Double.parseDouble:(Ljava/lang/String;)D
      10: dreturn

  public org.noggit.CharArr getNumberChars() throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #82                 // Field valstate:I
       6: ifne          14
       9: aload_0
      10: invokevirtual #138                // Method nextEvent:()I
      13: istore_1
      14: aload_0
      15: getfield      #82                 // Field valstate:I
      18: iconst_2
      19: if_icmpeq     30
      22: aload_0
      23: getfield      #82                 // Field valstate:I
      26: iconst_3
      27: if_icmpne     40
      30: aload_0
      31: iconst_0
      32: putfield      #82                 // Field valstate:I
      35: aload_0
      36: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      39: areturn
      40: aload_0
      41: getfield      #82                 // Field valstate:I
      44: iconst_4
      45: if_icmpne     66
      48: aload_0
      49: aload_0
      50: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      53: invokespecial #130                // Method continueNumber:(Lorg/noggit/CharArr;)V
      56: aload_0
      57: iconst_0
      58: putfield      #82                 // Field valstate:I
      61: aload_0
      62: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      65: areturn
      66: aload_0
      67: new           #12                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #146                // String Unexpected
      76: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: iload_1
      80: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      83: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      89: athrow

  public void getNumberChars(org.noggit.CharArr) throws java.io.IOException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #82                 // Field valstate:I
       6: ifne          14
       9: aload_0
      10: invokevirtual #138                // Method nextEvent:()I
      13: istore_2
      14: aload_0
      15: getfield      #82                 // Field valstate:I
      18: iconst_2
      19: if_icmpeq     30
      22: aload_0
      23: getfield      #82                 // Field valstate:I
      26: iconst_3
      27: if_icmpne     41
      30: aload_1
      31: aload_0
      32: getfield      #24                 // Field out:Lorg/noggit/CharArr;
      35: invokevirtual #94                 // Method org/noggit/CharArr.write:(Lorg/noggit/CharArr;)V
      38: goto          81
      41: aload_0
      42: getfield      #82                 // Field valstate:I
      45: iconst_4
      46: if_icmpne     57
      49: aload_0
      50: aload_1
      51: invokespecial #130                // Method continueNumber:(Lorg/noggit/CharArr;)V
      54: goto          81
      57: aload_0
      58: new           #12                 // class java/lang/StringBuilder
      61: dup
      62: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      65: ldc           #146                // String Unexpected
      67: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: iload_2
      71: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      74: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokevirtual #39                 // Method err:(Ljava/lang/String;)Lorg/noggit/JSONParser$ParseException;
      80: athrow
      81: aload_0
      82: iconst_0
      83: putfield      #82                 // Field valstate:I
      86: return

  public boolean getBoolean() throws java.io.IOException;
    Code:
       0: aload_0
       1: iconst_5
       2: invokespecial #142                // Method goTo:(I)V
       5: aload_0
       6: getfield      #119                // Field bool:Z
       9: ireturn

  public void getNull() throws java.io.IOException;
    Code:
       0: aload_0
       1: bipush        6
       3: invokespecial #142                // Method goTo:(I)V
       6: return

  public int getLevel();
    Code:
       0: aload_0
       1: getfield      #26                 // Field ptr:I
       4: ireturn

  public long getPosition();
    Code:
       0: aload_0
       1: getfield      #40                 // Field gpos:J
       4: aload_0
       5: getfield      #32                 // Field start:I
       8: i2l
       9: ladd
      10: lreturn

  static {};
    Code:
       0: new           #147                // class org/noggit/NullCharArr
       3: dup
       4: invokespecial #148                // Method org/noggit/NullCharArr."<init>":()V
       7: putstatic     #129                // Field devNull:Lorg/noggit/CharArr;
      10: return
}
