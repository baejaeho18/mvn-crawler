Compiled from "StripedReadWriteLockSync.java"
public class net.sf.ehcache.concurrent.StripedReadWriteLockSync implements net.sf.ehcache.concurrent.StripedReadWriteLock {
  public static final int DEFAULT_NUMBER_OF_MUTEXES;

  private final net.sf.ehcache.concurrent.ReadWriteLockSync[] mutexes;

  private final java.util.List<net.sf.ehcache.concurrent.ReadWriteLockSync> mutexesAsList;

  public net.sf.ehcache.concurrent.StripedReadWriteLockSync();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method "<init>":(I)V
       7: return

  public net.sf.ehcache.concurrent.StripedReadWriteLockSync(int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: iload_1
       6: iconst_1
       7: isub
       8: iand
       9: ifeq          22
      12: new           #3                  // class net/sf/ehcache/CacheException
      15: dup
      16: ldc           #4                  // String Cannot create a CacheLockProvider with a non power-of-two number of stripes
      18: invokespecial #5                  // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;)V
      21: athrow
      22: iload_1
      23: ifne          36
      26: new           #3                  // class net/sf/ehcache/CacheException
      29: dup
      30: ldc           #6                  // String A zero size CacheLockProvider does not have useful semantics.
      32: invokespecial #5                  // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: iload_1
      38: anewarray     #7                  // class net/sf/ehcache/concurrent/ReadWriteLockSync
      41: putfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      44: iconst_0
      45: istore_2
      46: iload_2
      47: aload_0
      48: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      51: arraylength
      52: if_icmpge     74
      55: aload_0
      56: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      59: iload_2
      60: new           #7                  // class net/sf/ehcache/concurrent/ReadWriteLockSync
      63: dup
      64: invokespecial #9                  // Method net/sf/ehcache/concurrent/ReadWriteLockSync."<init>":()V
      67: aastore
      68: iinc          2, 1
      71: goto          46
      74: aload_0
      75: aload_0
      76: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      79: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      82: invokestatic  #11                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      85: putfield      #12                 // Field mutexesAsList:Ljava/util/List;
      88: return

  public net.sf.ehcache.concurrent.ReadWriteLockSync getSyncForKey(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
       5: arraylength
       6: invokestatic  #13                 // Method net/sf/ehcache/concurrent/ConcurrencyUtil.selectLock:(Ljava/lang/Object;I)I
       9: istore_2
      10: aload_0
      11: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      14: iload_2
      15: aaload
      16: areturn

  public java.util.concurrent.locks.ReadWriteLock getLockForKey(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
       5: arraylength
       6: invokestatic  #13                 // Method net/sf/ehcache/concurrent/ConcurrencyUtil.selectLock:(Ljava/lang/Object;I)I
       9: istore_2
      10: aload_0
      11: getfield      #8                  // Field mutexes:[Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
      14: iload_2
      15: aaload
      16: invokevirtual #14                 // Method net/sf/ehcache/concurrent/ReadWriteLockSync.getReadWriteLock:()Ljava/util/concurrent/locks/ReadWriteLock;
      19: areturn

  public java.util.List<net.sf.ehcache.concurrent.ReadWriteLockSync> getAllSyncs();
    Code:
       0: aload_0
       1: getfield      #12                 // Field mutexesAsList:Ljava/util/List;
       4: areturn

  public net.sf.ehcache.concurrent.Sync getSyncForKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getSyncForKey:(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/ReadWriteLockSync;
       5: areturn
}
