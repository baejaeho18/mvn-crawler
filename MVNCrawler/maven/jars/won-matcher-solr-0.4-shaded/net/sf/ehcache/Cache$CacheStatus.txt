Compiled from "Cache.java"
class net.sf.ehcache.Cache$CacheStatus {
  private volatile net.sf.ehcache.Status status;

  private final java.util.concurrent.atomic.AtomicBoolean clusterRejoinInProgress;

  private net.sf.ehcache.Cache$CacheStatus();
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #5                  // Field net/sf/ehcache/Status.STATUS_UNINITIALISED:Lnet/sf/ehcache/Status;
       8: putfield      #6                  // Field status:Lnet/sf/ehcache/Status;
      11: aload_0
      12: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      15: dup
      16: iconst_0
      17: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      20: putfield      #9                  // Field clusterRejoinInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      23: return

  private void clusterRejoinComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field clusterRejoinInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public void checkAlive(net.sf.ehcache.config.CacheConfiguration);
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: astore_2
       5: aload_2
       6: getstatic     #11                 // Field net/sf/ehcache/Status.STATUS_ALIVE:Lnet/sf/ehcache/Status;
       9: if_acmpeq     56
      12: new           #12                 // class java/lang/IllegalStateException
      15: dup
      16: new           #13                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #15                 // String The
      25: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #17                 // Method net/sf/ehcache/config/CacheConfiguration.getName:()Ljava/lang/String;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #18                 // String  Cache is not alive (
      37: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #20                 // String )
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: return

  private void clusterRejoinInProgress();
    Code:
       0: aload_0
       1: getfield      #9                  // Field clusterRejoinInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public boolean canInitialize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: getstatic     #5                  // Field net/sf/ehcache/Status.STATUS_UNINITIALISED:Lnet/sf/ehcache/Status;
       7: if_acmpeq     20
      10: aload_0
      11: getfield      #9                  // Field clusterRejoinInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      14: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void changeState(net.sf.ehcache.Status);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       5: return

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: areturn

  public boolean isAlive();
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: getstatic     #11                 // Field net/sf/ehcache/Status.STATUS_ALIVE:Lnet/sf/ehcache/Status;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: getstatic     #24                 // Field net/sf/ehcache/Status.STATUS_SHUTDOWN:Lnet/sf/ehcache/Status;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isUninitialized();
    Code:
       0: aload_0
       1: getfield      #6                  // Field status:Lnet/sf/ehcache/Status;
       4: getstatic     #5                  // Field net/sf/ehcache/Status.STATUS_UNINITIALISED:Lnet/sf/ehcache/Status;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  net.sf.ehcache.Cache$CacheStatus(net.sf.ehcache.Cache$1);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method "<init>":()V
       4: return

  static void access$300(net.sf.ehcache.Cache$CacheStatus);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method clusterRejoinInProgress:()V
       4: return

  static void access$400(net.sf.ehcache.Cache$CacheStatus);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method clusterRejoinComplete:()V
       4: return
}
