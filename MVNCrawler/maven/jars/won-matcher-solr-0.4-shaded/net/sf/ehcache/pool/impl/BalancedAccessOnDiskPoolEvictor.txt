Compiled from "BalancedAccessOnDiskPoolEvictor.java"
public class net.sf.ehcache.pool.impl.BalancedAccessOnDiskPoolEvictor extends net.sf.ehcache.pool.impl.AbstractBalancedAccessEvictor<net.sf.ehcache.pool.PoolableStore> {
  public net.sf.ehcache.pool.impl.BalancedAccessOnDiskPoolEvictor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/sf/ehcache/pool/impl/AbstractBalancedAccessEvictor."<init>":()V
       4: return

  protected boolean evict(net.sf.ehcache.pool.PoolableStore, int, long);
    Code:
       0: aload_1
       1: iload_2
       2: lload_3
       3: invokeinterface #2,  4            // InterfaceMethod net/sf/ehcache/pool/PoolableStore.evictFromOnDisk:(IJ)Z
       8: ireturn

  protected long countSize(net.sf.ehcache.pool.PoolableStore);
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod net/sf/ehcache/pool/PoolableStore.getApproximateDiskCountSize:()J
       6: lreturn

  protected long byteSize(net.sf.ehcache.pool.PoolableStore);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod net/sf/ehcache/pool/PoolableStore.getApproximateDiskByteSize:()J
       6: lreturn

  protected float hitRate(net.sf.ehcache.pool.PoolableStore);
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod net/sf/ehcache/pool/PoolableStore.getApproximateDiskHitRate:()F
       6: freturn

  protected float missRate(net.sf.ehcache.pool.PoolableStore);
    Code:
       0: aload_1
       1: invokeinterface #6,  1            // InterfaceMethod net/sf/ehcache/pool/PoolableStore.getApproximateDiskMissRate:()F
       6: freturn

  protected long byteSize(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class net/sf/ehcache/pool/PoolableStore
       5: invokevirtual #8                  // Method byteSize:(Lnet/sf/ehcache/pool/PoolableStore;)J
       8: lreturn

  protected long countSize(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class net/sf/ehcache/pool/PoolableStore
       5: invokevirtual #9                  // Method countSize:(Lnet/sf/ehcache/pool/PoolableStore;)J
       8: lreturn

  protected float missRate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class net/sf/ehcache/pool/PoolableStore
       5: invokevirtual #10                 // Method missRate:(Lnet/sf/ehcache/pool/PoolableStore;)F
       8: freturn

  protected float hitRate(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class net/sf/ehcache/pool/PoolableStore
       5: invokevirtual #11                 // Method hitRate:(Lnet/sf/ehcache/pool/PoolableStore;)F
       8: freturn

  protected boolean evict(java.lang.Object, int, long);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class net/sf/ehcache/pool/PoolableStore
       5: iload_2
       6: lload_3
       7: invokevirtual #12                 // Method evict:(Lnet/sf/ehcache/pool/PoolableStore;IJ)Z
      10: ireturn
}
