Compiled from "AnnotationSizeOfFilter.java"
public final class net.sf.ehcache.pool.sizeof.filter.AnnotationSizeOfFilter implements net.sf.ehcache.pool.sizeof.filter.SizeOfFilter {
  private static final java.lang.String IGNORE_SIZE_OF_VM_ARGUMENT;

  private static final org.slf4j.Logger LOG;

  private static final java.lang.String IGNORE_SIZE_OF_DEFAULT_REGEXP;

  private static final java.util.regex.Pattern IGNORE_SIZE_OF_PATTERN;

  public net.sf.ehcache.pool.sizeof.filter.AnnotationSizeOfFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.util.Collection<java.lang.reflect.Field> filterFields(java.lang.Class<?>, java.util.Collection<java.lang.reflect.Field>);
    Code:
       0: aload_2
       1: invokeinterface #2,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          58
      16: aload_3
      17: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #5                  // class java/lang/reflect/Field
      25: astore        4
      27: aload_0
      28: aload         4
      30: ldc_w         #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      33: getstatic     #7                  // Field IGNORE_SIZE_OF_PATTERN:Ljava/util/regex/Pattern;
      36: invokespecial #8                  // Method getAnnotationOn:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/regex/Pattern;)Ljava/lang/annotation/Annotation;
      39: checkcast     #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      42: astore        5
      44: aload         5
      46: ifnull        55
      49: aload_3
      50: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.remove:()V
      55: goto          7
      58: aload_2
      59: areturn

  public boolean filterClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #10                 // Method isAnnotationPresentOrInherited:(Ljava/lang/Class;)Z
       5: istore_2
       6: aload_1
       7: invokevirtual #11                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      10: astore_3
      11: aload_3
      12: ifnonnull     19
      15: aconst_null
      16: goto          33
      19: aload_0
      20: aload_3
      21: ldc_w         #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      24: getstatic     #7                  // Field IGNORE_SIZE_OF_PATTERN:Ljava/util/regex/Pattern;
      27: invokespecial #8                  // Method getAnnotationOn:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/regex/Pattern;)Ljava/lang/annotation/Annotation;
      30: checkcast     #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      33: astore        4
      35: aload         4
      37: ifnull        44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: istore        5
      47: iload_2
      48: ifne          60
      51: iload         5
      53: ifne          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  private boolean isAnnotationPresentOrInherited(java.lang.Class<?>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        49
       6: aload_0
       7: aload_2
       8: ldc_w         #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      11: getstatic     #7                  // Field IGNORE_SIZE_OF_PATTERN:Ljava/util/regex/Pattern;
      14: invokespecial #8                  // Method getAnnotationOn:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;Ljava/util/regex/Pattern;)Ljava/lang/annotation/Annotation;
      17: checkcast     #6                  // class net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf
      20: astore_3
      21: aload_3
      22: ifnull        41
      25: aload_2
      26: aload_1
      27: if_acmpeq     39
      30: aload_3
      31: invokeinterface #12,  1           // InterfaceMethod net/sf/ehcache/pool/sizeof/annotations/IgnoreSizeOf.inherited:()Z
      36: ifeq          41
      39: iconst_1
      40: ireturn
      41: aload_2
      42: invokevirtual #13                 // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      45: astore_2
      46: goto          2
      49: iconst_0
      50: ireturn

  private boolean validateCustomAnnotationPattern(java.lang.String, java.util.regex.Pattern);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #14                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
       5: astore_3
       6: aload_3
       7: invokevirtual #15                 // Method java/util/regex/Matcher.matches:()Z
      10: istore        4
      12: iload         4
      14: ifeq          50
      17: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      20: new           #17                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_1
      28: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #20                 // String  matched IgnoreSizeOf annotation pattern
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: getstatic     #7                  // Field IGNORE_SIZE_OF_PATTERN:Ljava/util/regex/Pattern;
      39: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokeinterface #23,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      50: iload         4
      52: ireturn

  private <T extends java.lang.annotation.Annotation> T getAnnotationOn(java.lang.reflect.AnnotatedElement, java.lang.Class<T>, java.util.regex.Pattern);
    Code:
       0: aconst_null
       1: astore        4
       3: aload_1
       4: invokeinterface #24,  1           // InterfaceMethod java/lang/reflect/AnnotatedElement.getAnnotations:()[Ljava/lang/annotation/Annotation;
       9: astore        5
      11: aload         5
      13: astore        6
      15: aload         6
      17: arraylength
      18: istore        7
      20: iconst_0
      21: istore        8
      23: iload         8
      25: iload         7
      27: if_icmpge     116
      30: aload         6
      32: iload         8
      34: aaload
      35: astore        9
      37: aload_0
      38: aload         9
      40: invokeinterface #25,  1           // InterfaceMethod java/lang/annotation/Annotation.annotationType:()Ljava/lang/Class;
      45: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      48: aload_3
      49: invokespecial #27                 // Method validateCustomAnnotationPattern:(Ljava/lang/String;Ljava/util/regex/Pattern;)Z
      52: ifeq          110
      55: aload         4
      57: ifnull        102
      60: new           #28                 // class java/lang/IllegalStateException
      63: dup
      64: new           #17                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #29                 // String You are not allowed to use more than one @
      73: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_2
      77: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
      80: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #30                 // String  annotations for the same element :
      85: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #31                 // Method java/lang/Object.toString:()Ljava/lang/String;
      92: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokespecial #32                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     101: athrow
     102: aload         9
     104: aload_2
     105: invokestatic  #33                 // Method net/sf/ehcache/pool/sizeof/filter/AnnotationProxyFactory.getAnnotationProxy:(Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     108: astore        4
     110: iinc          8, 1
     113: goto          23
     116: aload         4
     118: areturn

  static {};
    Code:
       0: ldc_w         #34                 // class net/sf/ehcache/pool/sizeof/filter/AnnotationSizeOfFilter
       3: invokevirtual #26                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #35                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
       9: putstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      12: ldc           #36                 // String net.sf.ehcache.pool.sizeof.ignore.pattern
      14: invokestatic  #37                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      17: astore_0
      18: aload_0
      19: ifnull        26
      22: aload_0
      23: goto          28
      26: ldc           #38                 // String ^.*cache\\..*IgnoreSizeOf$
      28: astore_1
      29: aload_1
      30: invokestatic  #39                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      33: astore_2
      34: getstatic     #16                 // Field LOG:Lorg/slf4j/Logger;
      37: new           #17                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #40                 // String Using regular expression provided through VM argument net.sf.ehcache.pool.sizeof.ignore.pattern for IgnoreSizeOf annotation :
      46: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #41,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      61: goto          105
      64: astore_3
      65: new           #43                 // class java/lang/IllegalArgumentException
      68: dup
      69: new           #17                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #44                 // String Invalid regular expression provided through VM argument net.sf.ehcache.pool.sizeof.ignore.pattern : \n
      78: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_3
      82: invokevirtual #45                 // Method java/util/regex/PatternSyntaxException.getMessage:()Ljava/lang/String;
      85: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: ldc           #46                 // String \n using default regular expression for IgnoreSizeOf annotation :
      90: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: ldc           #38                 // String ^.*cache\\..*IgnoreSizeOf$
      95: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_2
     106: putstatic     #7                  // Field IGNORE_SIZE_OF_PATTERN:Ljava/util/regex/Pattern;
     109: return
    Exception table:
       from    to  target type
          29    61    64   Class java/util/regex/PatternSyntaxException
}
