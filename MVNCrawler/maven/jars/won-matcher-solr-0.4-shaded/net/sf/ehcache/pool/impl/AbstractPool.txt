Compiled from "AbstractPool.java"
public abstract class net.sf.ehcache.pool.impl.AbstractPool<T> implements net.sf.ehcache.pool.Pool<T> {
  private volatile long maximumPoolSize;

  private final net.sf.ehcache.pool.PoolEvictor<T> evictor;

  private final java.util.List<net.sf.ehcache.pool.PoolAccessor<? extends T>> poolAccessors;

  private final net.sf.ehcache.pool.SizeOfEngine defaultSizeOfEngine;

  public net.sf.ehcache.pool.impl.AbstractPool(long, net.sf.ehcache.pool.PoolEvictor<T>, net.sf.ehcache.pool.SizeOfEngine);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field maximumPoolSize:J
       9: aload_0
      10: aload_3
      11: putfield      #3                  // Field evictor:Lnet/sf/ehcache/pool/PoolEvictor;
      14: aload_0
      15: aload         4
      17: putfield      #4                  // Field defaultSizeOfEngine:Lnet/sf/ehcache/pool/SizeOfEngine;
      20: aload_0
      21: new           #5                  // class java/util/concurrent/CopyOnWriteArrayList
      24: dup
      25: invokespecial #6                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      28: putfield      #7                  // Field poolAccessors:Ljava/util/List;
      31: return

  public long getSize();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: getfield      #7                  // Field poolAccessors:Ljava/util/List;
       6: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          45
      21: aload_3
      22: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #11                 // class net/sf/ehcache/pool/PoolAccessor
      30: astore        4
      32: lload_1
      33: aload         4
      35: invokeinterface #12,  1           // InterfaceMethod net/sf/ehcache/pool/PoolAccessor.getSize:()J
      40: ladd
      41: lstore_1
      42: goto          12
      45: lload_1
      46: lreturn

  public long getMaxSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maximumPoolSize:J
       4: lreturn

  public void setMaxSize(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field maximumPoolSize:J
       4: lstore_3
       5: aload_0
       6: lload_1
       7: putfield      #2                  // Field maximumPoolSize:J
      10: lload_3
      11: lload_1
      12: lsub
      13: lstore        5
      15: lload         5
      17: lconst_0
      18: lcmp
      19: ifle          38
      22: aload_0
      23: getfield      #3                  // Field evictor:Lnet/sf/ehcache/pool/PoolEvictor;
      26: aload_0
      27: invokevirtual #13                 // Method getPoolableStores:()Ljava/util/Collection;
      30: lload         5
      32: invokeinterface #14,  4           // InterfaceMethod net/sf/ehcache/pool/PoolEvictor.freeSpace:(Ljava/util/Collection;J)Z
      37: pop
      38: return

  public net.sf.ehcache.pool.PoolAccessor<T> createPoolAccessor(T, int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #4                  // Field defaultSizeOfEngine:Lnet/sf/ehcache/pool/SizeOfEngine;
       6: iload_2
       7: iload_3
       8: invokeinterface #15,  3           // InterfaceMethod net/sf/ehcache/pool/SizeOfEngine.copyWith:(IZ)Lnet/sf/ehcache/pool/SizeOfEngine;
      13: invokevirtual #16                 // Method createPoolAccessor:(Ljava/lang/Object;Lnet/sf/ehcache/pool/SizeOfEngine;)Lnet/sf/ehcache/pool/PoolAccessor;
      16: areturn

  public void registerPoolAccessor(net.sf.ehcache.pool.PoolAccessor<? extends T>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field poolAccessors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removePoolAccessor(net.sf.ehcache.pool.PoolAccessor);
    Code:
       0: aload_0
       1: getfield      #7                  // Field poolAccessors:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Collection<T> getPoolableStores();
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: aload_0
       5: getfield      #7                  // Field poolAccessors:Ljava/util/List;
       8: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      13: invokespecial #21                 // Method java/util/ArrayList."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #7                  // Field poolAccessors:Ljava/util/List;
      21: invokeinterface #8,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          62
      36: aload_2
      37: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #11                 // class net/sf/ehcache/pool/PoolAccessor
      45: astore_3
      46: aload_1
      47: aload_3
      48: invokeinterface #22,  1           // InterfaceMethod net/sf/ehcache/pool/PoolAccessor.getStore:()Ljava/lang/Object;
      53: invokeinterface #23,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      58: pop
      59: goto          27
      62: aload_1
      63: areturn

  public net.sf.ehcache.pool.PoolEvictor<T> getEvictor();
    Code:
       0: aload_0
       1: getfield      #3                  // Field evictor:Lnet/sf/ehcache/pool/PoolEvictor;
       4: areturn
}
