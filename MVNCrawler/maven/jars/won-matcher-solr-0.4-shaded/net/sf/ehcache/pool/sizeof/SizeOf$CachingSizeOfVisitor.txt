Compiled from "SizeOf.java"
class net.sf.ehcache.pool.sizeof.SizeOf$CachingSizeOfVisitor implements net.sf.ehcache.pool.sizeof.ObjectGraphWalker$Visitor {
  private final net.sf.ehcache.util.WeakIdentityConcurrentMap<java.lang.Class<?>, java.lang.Long> cache;

  final net.sf.ehcache.pool.sizeof.SizeOf this$0;

  private net.sf.ehcache.pool.sizeof.SizeOf$CachingSizeOfVisitor(net.sf.ehcache.pool.sizeof.SizeOf);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lnet/sf/ehcache/pool/sizeof/SizeOf;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class net/sf/ehcache/util/WeakIdentityConcurrentMap
      13: dup
      14: invokespecial #5                  // Method net/sf/ehcache/util/WeakIdentityConcurrentMap."<init>":()V
      17: putfield      #6                  // Field cache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
      20: return

  public long visit(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field cache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
       9: aload_2
      10: invokevirtual #8                  // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #9                  // class java/lang/Long
      16: astore_3
      17: aload_3
      18: ifnonnull     64
      21: aload_2
      22: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
      25: ifeq          37
      28: aload_0
      29: getfield      #2                  // Field this$0:Lnet/sf/ehcache/pool/sizeof/SizeOf;
      32: aload_1
      33: invokevirtual #11                 // Method net/sf/ehcache/pool/sizeof/SizeOf.sizeOf:(Ljava/lang/Object;)J
      36: lreturn
      37: aload_0
      38: getfield      #2                  // Field this$0:Lnet/sf/ehcache/pool/sizeof/SizeOf;
      41: aload_1
      42: invokevirtual #11                 // Method net/sf/ehcache/pool/sizeof/SizeOf.sizeOf:(Ljava/lang/Object;)J
      45: lstore        4
      47: aload_0
      48: getfield      #6                  // Field cache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
      51: aload_2
      52: lload         4
      54: invokestatic  #12                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      57: invokevirtual #13                 // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: lload         4
      63: lreturn
      64: aload_3
      65: invokevirtual #14                 // Method java/lang/Long.longValue:()J
      68: lreturn

  net.sf.ehcache.pool.sizeof.SizeOf$CachingSizeOfVisitor(net.sf.ehcache.pool.sizeof.SizeOf, net.sf.ehcache.pool.sizeof.SizeOf$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method "<init>":(Lnet/sf/ehcache/pool/sizeof/SizeOf;)V
       5: return
}
