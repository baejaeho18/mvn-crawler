Compiled from "ObjectGraphWalker.java"
final class net.sf.ehcache.pool.sizeof.ObjectGraphWalker {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String TC_INTERNAL_FIELD_PREFIX;

  private static final java.lang.String VERBOSE_DEBUG_LOGGING;

  private static final java.lang.String CONTINUE_MESSAGE;

  private static final java.lang.String ABORT_MESSAGE;

  private static final boolean USE_VERBOSE_DEBUG_LOGGING;

  private final net.sf.ehcache.util.WeakIdentityConcurrentMap<java.lang.Class<?>, java.lang.ref.SoftReference<java.util.Collection<java.lang.reflect.Field>>> fieldCache;

  private final net.sf.ehcache.util.WeakIdentityConcurrentMap<java.lang.Class<?>, java.lang.Boolean> classCache;

  private final net.sf.ehcache.pool.sizeof.filter.SizeOfFilter sizeOfFilter;

  private final net.sf.ehcache.pool.sizeof.ObjectGraphWalker$Visitor visitor;

  net.sf.ehcache.pool.sizeof.ObjectGraphWalker(net.sf.ehcache.pool.sizeof.ObjectGraphWalker$Visitor, net.sf.ehcache.pool.sizeof.filter.SizeOfFilter);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class net/sf/ehcache/util/WeakIdentityConcurrentMap
       8: dup
       9: invokespecial #3                  // Method net/sf/ehcache/util/WeakIdentityConcurrentMap."<init>":()V
      12: putfield      #4                  // Field fieldCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
      15: aload_0
      16: new           #2                  // class net/sf/ehcache/util/WeakIdentityConcurrentMap
      19: dup
      20: invokespecial #3                  // Method net/sf/ehcache/util/WeakIdentityConcurrentMap."<init>":()V
      23: putfield      #5                  // Field classCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
      26: aload_0
      27: aload_1
      28: putfield      #6                  // Field visitor:Lnet/sf/ehcache/pool/sizeof/ObjectGraphWalker$Visitor;
      31: aload_0
      32: aload_2
      33: putfield      #7                  // Field sizeOfFilter:Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;
      36: return

  private static boolean getVerboseSizeOfDebugLogging();
    Code:
       0: ldc           #8                  // String net.sf.ehcache.sizeof.verboseDebugLogging
       2: ldc           #9                  // String false
       4: invokestatic  #10                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       7: invokevirtual #11                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      10: astore_0
      11: aload_0
      12: ldc           #12                 // String true
      14: invokevirtual #13                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ireturn

  long walk(int, boolean, java.lang.Object...);
    Code:
       0: aconst_null
       1: astore        4
       3: lconst_0
       4: lstore        5
       6: iconst_0
       7: istore        7
       9: new           #14                 // class java/util/Stack
      12: dup
      13: invokespecial #15                 // Method java/util/Stack."<init>":()V
      16: astore        8
      18: new           #16                 // class java/util/IdentityHashMap
      21: dup
      22: invokespecial #17                 // Method java/util/IdentityHashMap."<init>":()V
      25: astore        9
      27: aload_3
      28: ifnull        192
      31: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
      34: ifeq          65
      37: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      40: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      45: ifeq          65
      48: new           #21                 // class java/lang/StringBuilder
      51: dup
      52: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      55: astore        4
      57: aload         4
      59: ldc           #23                 // String visiting
      61: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: pop
      65: aload_3
      66: astore        10
      68: aload         10
      70: arraylength
      71: istore        11
      73: iconst_0
      74: istore        12
      76: iload         12
      78: iload         11
      80: if_icmpge     157
      83: aload         10
      85: iload         12
      87: aaload
      88: astore        13
      90: aload         8
      92: aload         13
      94: invokestatic  #25                 // Method nullSafeAdd:(Ljava/util/Stack;Ljava/lang/Object;)V
      97: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
     100: ifeq          151
     103: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     106: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     111: ifeq          151
     114: aload         13
     116: ifnull        151
     119: aload         4
     121: aload         13
     123: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     126: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
     129: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: ldc           #28                 // String @
     134: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: aload         13
     139: invokestatic  #29                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     142: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: ldc           #31                 // String ,
     147: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: pop
     151: iinc          12, 1
     154: goto          76
     157: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
     160: ifeq          192
     163: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     166: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     171: ifeq          192
     174: aload         4
     176: aload         4
     178: invokevirtual #32                 // Method java/lang/StringBuilder.length:()I
     181: iconst_2
     182: isub
     183: invokevirtual #33                 // Method java/lang/StringBuilder.deleteCharAt:(I)Ljava/lang/StringBuilder;
     186: ldc           #34                 // String \n
     188: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: pop
     192: aload         8
     194: invokevirtual #35                 // Method java/util/Stack.isEmpty:()Z
     197: ifne          522
     200: aload_0
     201: iload_1
     202: iload_2
     203: iload         7
     205: aload         9
     207: invokespecial #36                 // Method checkMaxDepth:(IZZLjava/util/IdentityHashMap;)Z
     210: istore        7
     212: aload         8
     214: invokevirtual #37                 // Method java/util/Stack.pop:()Ljava/lang/Object;
     217: astore        10
     219: aload         9
     221: aload         10
     223: invokevirtual #38                 // Method java/util/IdentityHashMap.containsKey:(Ljava/lang/Object;)Z
     226: ifeq          232
     229: goto          192
     232: aload         10
     234: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     237: astore        11
     239: aload         10
     241: invokestatic  #39                 // Method isSharedFlyweight:(Ljava/lang/Object;)Z
     244: ifne          456
     247: aload_0
     248: aload         11
     250: invokespecial #40                 // Method shouldWalkClass:(Ljava/lang/Class;)Z
     253: ifeq          456
     256: aload         11
     258: invokevirtual #41                 // Method java/lang/Class.isArray:()Z
     261: ifeq          309
     264: aload         11
     266: invokevirtual #42                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
     269: invokevirtual #43                 // Method java/lang/Class.isPrimitive:()Z
     272: ifne          309
     275: iconst_0
     276: istore        12
     278: iload         12
     280: aload         10
     282: invokestatic  #44                 // Method java/lang/reflect/Array.getLength:(Ljava/lang/Object;)I
     285: if_icmpge     306
     288: aload         8
     290: aload         10
     292: iload         12
     294: invokestatic  #45                 // Method java/lang/reflect/Array.get:(Ljava/lang/Object;I)Ljava/lang/Object;
     297: invokestatic  #25                 // Method nullSafeAdd:(Ljava/util/Stack;Ljava/lang/Object;)V
     300: iinc          12, 1
     303: goto          278
     306: goto          374
     309: aload_0
     310: aload         11
     312: invokespecial #46                 // Method getFilteredFields:(Ljava/lang/Class;)Ljava/util/Collection;
     315: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     320: astore        12
     322: aload         12
     324: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     329: ifeq          374
     332: aload         12
     334: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     339: checkcast     #50                 // class java/lang/reflect/Field
     342: astore        13
     344: aload         8
     346: aload         13
     348: aload         10
     350: invokevirtual #51                 // Method java/lang/reflect/Field.get:(Ljava/lang/Object;)Ljava/lang/Object;
     353: invokestatic  #25                 // Method nullSafeAdd:(Ljava/util/Stack;Ljava/lang/Object;)V
     356: goto          371
     359: astore        14
     361: new           #53                 // class java/lang/RuntimeException
     364: dup
     365: aload         14
     367: invokespecial #54                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
     370: athrow
     371: goto          322
     374: aload_0
     375: aload         10
     377: invokespecial #55                 // Method calculateSize:(Ljava/lang/Object;)J
     380: lstore        12
     382: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
     385: ifeq          446
     388: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     391: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     396: ifeq          446
     399: aload         4
     401: ldc           #56                 // String
     403: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     406: lload         12
     408: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     411: ldc           #58                 // String b\t\t
     413: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     416: aload         10
     418: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     421: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
     424: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     427: ldc           #28                 // String @
     429: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     432: aload         10
     434: invokestatic  #29                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     437: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     440: ldc           #34                 // String \n
     442: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     445: pop
     446: lload         5
     448: lload         12
     450: ladd
     451: lstore        5
     453: goto          510
     456: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
     459: ifeq          510
     462: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     465: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     470: ifeq          510
     473: aload         4
     475: ldc           #59                 // String   ignored\t
     477: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     480: aload         10
     482: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     485: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
     488: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     491: ldc           #28                 // String @
     493: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     496: aload         10
     498: invokestatic  #29                 // Method java/lang/System.identityHashCode:(Ljava/lang/Object;)I
     501: invokevirtual #30                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     504: ldc           #34                 // String \n
     506: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     509: pop
     510: aload         9
     512: aload         10
     514: aconst_null
     515: invokevirtual #60                 // Method java/util/IdentityHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     518: pop
     519: goto          192
     522: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
     525: ifeq          570
     528: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     531: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     536: ifeq          570
     539: aload         4
     541: ldc           #61                 // String Total size:
     543: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     546: lload         5
     548: invokevirtual #57                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     551: ldc           #62                 // String  bytes\n
     553: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     556: pop
     557: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     560: aload         4
     562: invokevirtual #63                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     565: invokeinterface #64,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     570: lload         5
     572: lreturn
     573: astore        8
     575: aload         8
     577: lload         5
     579: invokevirtual #66                 // Method net/sf/ehcache/pool/sizeof/MaxDepthExceededException.addToMeasuredSize:(J)V
     582: aload         8
     584: athrow
    Exception table:
       from    to  target type
         344   356   359   Class java/lang/IllegalAccessException
           9   572   573   Class net/sf/ehcache/pool/sizeof/MaxDepthExceededException

  private long calculateSize(java.lang.Object);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_1
       3: ifnonnull     8
       6: lconst_0
       7: lreturn
       8: aload_0
       9: getfield      #6                  // Field visitor:Lnet/sf/ehcache/pool/sizeof/ObjectGraphWalker$Visitor;
      12: aload_1
      13: invokeinterface #67,  2           // InterfaceMethod net/sf/ehcache/pool/sizeof/ObjectGraphWalker$Visitor.visit:(Ljava/lang/Object;)J
      18: lstore_2
      19: lload_2
      20: lreturn

  private boolean checkMaxDepth(int, boolean, boolean, java.util.IdentityHashMap<java.lang.Object, java.lang.Object>);
    Code:
       0: aload         4
       2: invokevirtual #68                 // Method java/util/IdentityHashMap.size:()I
       5: iload_1
       6: if_icmplt     67
       9: iload_2
      10: ifeq          37
      13: new           #65                 // class net/sf/ehcache/pool/sizeof/MaxDepthExceededException
      16: dup
      17: ldc           #69                 // String The configured limit of {0} object references was reached while attempting to calculate the size of the object graph. This can be avoided by adding stop points with @IgnoreSizeOf annotations. Since the CacheManger or Cache <sizeOfPolicy> element\'s maxDepthExceededBehavior is set to \"abort\", the sizing operation has stopped and the reported cache size is not accurate. If performance degradation is NOT an issue at the configured limit, raise the limit value using the CacheManager or Cache <sizeOfPolicy> element\'s maxDepth attribute. For more information, see the Ehcache configuration documentation.
      19: iconst_1
      20: anewarray     #70                 // class java/lang/Object
      23: dup
      24: iconst_0
      25: iload_1
      26: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: aastore
      30: invokestatic  #72                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      33: invokespecial #73                 // Method net/sf/ehcache/pool/sizeof/MaxDepthExceededException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_3
      38: ifne          67
      41: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #74                 // String The configured limit of {0} object references was reached while attempting to calculate the size of the object graph. Severe performance degradation could occur if the sizing operation continues. This can be avoided by setting the CacheManger or Cache <sizeOfPolicy> element\'s maxDepthExceededBehavior to \"abort\" or adding stop points with @IgnoreSizeOf annotations. If performance degradation is NOT an issue at the configured limit, raise the limit value using the CacheManager or Cache <sizeOfPolicy> element\'s maxDepth attribute. For more information, see the Ehcache configuration documentation.
      46: iconst_1
      47: anewarray     #70                 // class java/lang/Object
      50: dup
      51: iconst_0
      52: iload_1
      53: invokestatic  #71                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: aastore
      57: invokestatic  #72                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      60: invokeinterface #75,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      65: iconst_1
      66: istore_3
      67: iload_3
      68: ireturn

  private java.util.Collection<java.lang.reflect.Field> getFilteredFields(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fieldCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
       4: aload_1
       5: invokevirtual #76                 // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #77                 // class java/lang/ref/SoftReference
      11: astore_2
      12: aload_2
      13: ifnull        26
      16: aload_2
      17: invokevirtual #78                 // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
      20: checkcast     #79                 // class java/util/Collection
      23: goto          27
      26: aconst_null
      27: astore_3
      28: aload_3
      29: ifnull        34
      32: aload_3
      33: areturn
      34: aload_0
      35: getfield      #7                  // Field sizeOfFilter:Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;
      38: aload_1
      39: aload_1
      40: invokestatic  #80                 // Method getAllFields:(Ljava/lang/Class;)Ljava/util/Collection;
      43: invokeinterface #81,  3           // InterfaceMethod net/sf/ehcache/pool/sizeof/filter/SizeOfFilter.filterFields:(Ljava/lang/Class;Ljava/util/Collection;)Ljava/util/Collection;
      48: astore        4
      50: getstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
      53: ifeq          131
      56: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      59: invokeinterface #20,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      64: ifeq          131
      67: aload         4
      69: invokeinterface #47,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      74: astore        5
      76: aload         5
      78: invokeinterface #48,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          131
      86: aload         5
      88: invokeinterface #49,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      93: checkcast     #50                 // class java/lang/reflect/Field
      96: astore        6
      98: aload         6
     100: invokevirtual #82                 // Method java/lang/reflect/Field.getModifiers:()I
     103: invokestatic  #83                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
     106: ifeq          128
     109: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
     112: ldc           #84                 // String SizeOf engine walking transient field \'{}\' of class {}
     114: aload         6
     116: invokevirtual #85                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     119: aload_1
     120: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
     123: invokeinterface #86,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     128: goto          76
     131: aload_0
     132: getfield      #4                  // Field fieldCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
     135: aload_1
     136: new           #77                 // class java/lang/ref/SoftReference
     139: dup
     140: aload         4
     142: invokespecial #87                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
     145: invokevirtual #88                 // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     148: pop
     149: aload         4
     151: areturn

  private boolean shouldWalkClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field classCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
       4: aload_1
       5: invokevirtual #76                 // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #89                 // class java/lang/Boolean
      11: astore_2
      12: aload_2
      13: ifnonnull     40
      16: aload_0
      17: getfield      #7                  // Field sizeOfFilter:Lnet/sf/ehcache/pool/sizeof/filter/SizeOfFilter;
      20: aload_1
      21: invokeinterface #90,  2           // InterfaceMethod net/sf/ehcache/pool/sizeof/filter/SizeOfFilter.filterClass:(Ljava/lang/Class;)Z
      26: invokestatic  #91                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      29: astore_2
      30: aload_0
      31: getfield      #5                  // Field classCache:Lnet/sf/ehcache/util/WeakIdentityConcurrentMap;
      34: aload_1
      35: aload_2
      36: invokevirtual #88                 // Method net/sf/ehcache/util/WeakIdentityConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      39: pop
      40: aload_2
      41: invokevirtual #92                 // Method java/lang/Boolean.booleanValue:()Z
      44: ireturn

  private static void nullSafeAdd(java.util.Stack<java.lang.Object>, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_0
       5: aload_1
       6: invokevirtual #93                 // Method java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  private static java.util.Collection<java.lang.reflect.Field> getAllFields(java.lang.Class<?>);
    Code:
       0: new           #94                 // class java/util/ArrayList
       3: dup
       4: invokespecial #95                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: astore_2
      10: aload_2
      11: ifnull        125
      14: aload_2
      15: invokevirtual #96                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
      18: astore_3
      19: aload_3
      20: arraylength
      21: istore        4
      23: iconst_0
      24: istore        5
      26: iload         5
      28: iload         4
      30: if_icmpge     117
      33: aload_3
      34: iload         5
      36: aaload
      37: astore        6
      39: aload         6
      41: invokevirtual #82                 // Method java/lang/reflect/Field.getModifiers:()I
      44: invokestatic  #97                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      47: ifne          111
      50: aload         6
      52: invokevirtual #98                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      55: invokevirtual #43                 // Method java/lang/Class.isPrimitive:()Z
      58: ifne          111
      61: aload         6
      63: invokevirtual #85                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
      66: ldc           #99                 // String $__tc_
      68: invokevirtual #100                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      71: ifne          111
      74: aload         6
      76: iconst_1
      77: invokevirtual #101                // Method java/lang/reflect/Field.setAccessible:(Z)V
      80: goto          102
      83: astore        7
      85: getstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
      88: ldc           #103                // String Security settings prevent Ehcache from accessing the subgraph beneath \'{}\' - cache sizes may be underestimated as a result
      90: aload         6
      92: aload         7
      94: invokeinterface #104,  4          // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      99: goto          111
     102: aload_1
     103: aload         6
     105: invokeinterface #105,  2          // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     110: pop
     111: iinc          5, 1
     114: goto          26
     117: aload_2
     118: invokevirtual #106                // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
     121: astore_2
     122: goto          10
     125: aload_1
     126: areturn
    Exception table:
       from    to  target type
          74    80    83   Class java/lang/SecurityException

  private static boolean isSharedFlyweight(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokestatic  #107                // Method net/sf/ehcache/pool/sizeof/FlyweightType.getFlyweightType:(Ljava/lang/Class;)Lnet/sf/ehcache/pool/sizeof/FlyweightType;
       7: astore_1
       8: aload_1
       9: ifnull        24
      12: aload_1
      13: aload_0
      14: invokevirtual #108                // Method net/sf/ehcache/pool/sizeof/FlyweightType.isShared:(Ljava/lang/Object;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  static {};
    Code:
       0: ldc_w         #109                // class net/sf/ehcache/pool/sizeof/ObjectGraphWalker
       3: invokestatic  #110                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #19                 // Field LOG:Lorg/slf4j/Logger;
       9: invokestatic  #111                // Method getVerboseSizeOfDebugLogging:()Z
      12: putstatic     #18                 // Field USE_VERBOSE_DEBUG_LOGGING:Z
      15: return
}
