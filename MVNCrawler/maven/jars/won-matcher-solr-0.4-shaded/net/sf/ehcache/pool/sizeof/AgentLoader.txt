Compiled from "AgentLoader.java"
final class net.sf.ehcache.pool.sizeof.AgentLoader {
  private static final org.slf4j.Logger LOGGER;

  private static final java.lang.String INSTRUMENTATION_INSTANCE_SYSTEM_PROPERTY_NAME;

  private static final java.lang.String SIZEOF_AGENT_CLASSNAME;

  private static final java.lang.String VIRTUAL_MACHINE_CLASSNAME;

  private static final java.lang.reflect.Method VIRTUAL_MACHINE_ATTACH;

  private static final java.lang.reflect.Method VIRTUAL_MACHINE_DETACH;

  private static final java.lang.reflect.Method VIRTUAL_MACHINE_LOAD_AGENT;

  private static volatile java.lang.instrument.Instrumentation instrumentation;

  net.sf.ehcache.pool.sizeof.AgentLoader();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Class<?> getVirtualMachineClass() throws java.lang.ClassNotFoundException;
    Code:
       0: new           #4                  // class net/sf/ehcache/pool/sizeof/AgentLoader$1
       3: dup
       4: invokespecial #5                  // Method net/sf/ehcache/pool/sizeof/AgentLoader$1."<init>":()V
       7: invokestatic  #6                  // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedExceptionAction;)Ljava/lang/Object;
      10: checkcast     #7                  // class java/lang/Class
      13: areturn
      14: astore_0
      15: aload_0
      16: invokevirtual #9                  // Method java/security/PrivilegedActionException.getCause:()Ljava/lang/Throwable;
      19: astore_1
      20: aload_1
      21: instanceof    #10                 // class java/lang/ClassNotFoundException
      24: ifeq          32
      27: aload_1
      28: checkcast     #10                 // class java/lang/ClassNotFoundException
      31: athrow
      32: new           #11                 // class java/lang/AssertionError
      35: dup
      36: new           #12                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #14                 // String Unexpected checked exception :
      45: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #18                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      58: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/security/PrivilegedActionException

  private static java.util.List<java.io.File> getPossibleToolsJars();
    Code:
       0: new           #19                 // class java/util/ArrayList
       3: dup
       4: invokespecial #20                 // Method java/util/ArrayList."<init>":()V
       7: astore_0
       8: new           #21                 // class java/io/File
      11: dup
      12: ldc           #22                 // String java.home
      14: invokestatic  #23                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      17: invokespecial #24                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      20: astore_1
      21: new           #21                 // class java/io/File
      24: dup
      25: aload_1
      26: ldc           #25                 // String lib/tools.jar
      28: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      31: astore_2
      32: aload_2
      33: invokevirtual #27                 // Method java/io/File.exists:()Z
      36: ifeq          47
      39: aload_0
      40: aload_2
      41: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      46: pop
      47: ldc           #29                 // String jre
      49: aload_1
      50: invokevirtual #30                 // Method java/io/File.getName:()Ljava/lang/String;
      53: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      56: ifeq          99
      59: new           #21                 // class java/io/File
      62: dup
      63: aload_1
      64: ldc           #32                 // String ../
      66: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      69: astore_3
      70: new           #21                 // class java/io/File
      73: dup
      74: aload_3
      75: ldc           #25                 // String lib/tools.jar
      77: invokespecial #26                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      80: astore        4
      82: aload         4
      84: invokevirtual #27                 // Method java/io/File.exists:()Z
      87: ifeq          99
      90: aload_0
      91: aload         4
      93: invokeinterface #28,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_0
     100: areturn

  static boolean loadAgent();
    Code:
       0: ldc_w         #33                 // class net/sf/ehcache/pool/sizeof/AgentLoader
       3: invokevirtual #34                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #35                 // Method java/lang/String.intern:()Ljava/lang/String;
       9: dup
      10: astore_0
      11: monitorenter
      12: invokestatic  #36                 // Method agentIsAvailable:()Z
      15: ifne          181
      18: getstatic     #37                 // Field VIRTUAL_MACHINE_LOAD_AGENT:Ljava/lang/reflect/Method;
      21: ifnull        181
      24: invokestatic  #38                 // Method warnIfOSX:()V
      27: invokestatic  #39                 // Method java/lang/management/ManagementFactory.getRuntimeMXBean:()Ljava/lang/management/RuntimeMXBean;
      30: invokeinterface #40,  1           // InterfaceMethod java/lang/management/RuntimeMXBean.getName:()Ljava/lang/String;
      35: astore_1
      36: getstatic     #41                 // Field VIRTUAL_MACHINE_ATTACH:Ljava/lang/reflect/Method;
      39: aconst_null
      40: iconst_1
      41: anewarray     #42                 // class java/lang/Object
      44: dup
      45: iconst_0
      46: aload_1
      47: iconst_0
      48: aload_1
      49: bipush        64
      51: invokevirtual #43                 // Method java/lang/String.indexOf:(I)I
      54: invokevirtual #44                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      57: aastore
      58: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      61: astore_2
      62: invokestatic  #46                 // Method getAgentFile:()Ljava/io/File;
      65: astore_3
      66: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      69: ldc           #47                 // String Trying to load agent @ {}
      71: aload_3
      72: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      77: aload_3
      78: ifnull        100
      81: getstatic     #37                 // Field VIRTUAL_MACHINE_LOAD_AGENT:Ljava/lang/reflect/Method;
      84: aload_2
      85: iconst_1
      86: anewarray     #42                 // class java/lang/Object
      89: dup
      90: iconst_0
      91: aload_3
      92: invokevirtual #49                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      95: aastore
      96: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      99: pop
     100: getstatic     #50                 // Field VIRTUAL_MACHINE_DETACH:Ljava/lang/reflect/Method;
     103: aload_2
     104: iconst_0
     105: anewarray     #42                 // class java/lang/Object
     108: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     111: pop
     112: goto          132
     115: astore        4
     117: getstatic     #50                 // Field VIRTUAL_MACHINE_DETACH:Ljava/lang/reflect/Method;
     120: aload_2
     121: iconst_0
     122: anewarray     #42                 // class java/lang/Object
     125: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
     128: pop
     129: aload         4
     131: athrow
     132: goto          181
     135: astore_1
     136: aload_1
     137: invokevirtual #52                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
     140: astore_2
     141: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
     144: ldc           #53                 // String Failed to attach to VM and load the agent: {}: {}
     146: aload_2
     147: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     150: aload_2
     151: invokevirtual #55                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     154: invokeinterface #56,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     159: goto          181
     162: astore_1
     163: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
     166: ldc           #53                 // String Failed to attach to VM and load the agent: {}: {}
     168: aload_1
     169: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     172: aload_1
     173: invokevirtual #55                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
     176: invokeinterface #56,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     181: invokestatic  #36                 // Method agentIsAvailable:()Z
     184: aload_0
     185: monitorexit
     186: ireturn
     187: astore        5
     189: aload_0
     190: monitorexit
     191: aload         5
     193: athrow
    Exception table:
       from    to  target type
          62   100   115   any
         115   117   115   any
          24   132   135   Class java/lang/reflect/InvocationTargetException
          24   132   162   Class java/lang/Throwable
          12   186   187   any
         187   191   187   any

  private static void warnIfOSX();
    Code:
       0: invokestatic  #58                 // Method net/sf/ehcache/pool/sizeof/JvmInformation.isOSX:()Z
       3: ifeq          24
       6: ldc           #59                 // String java.io.tmpdir
       8: invokestatic  #23                 // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      11: ifnull        24
      14: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      17: ldc           #60                 // String Loading the SizeOfAgent will probably fail, as you are running on Apple OS X and have a value set for java.io.tmpdir\nThey both result in a bug, not yet fixed by Apple, that won\'t let us attach to the VM and load the agent.\nMost probably, you\'ll also get a full thread-dump after this because of the failure... Nothing to worry about!\nYou can bypass trying to load the Agent entirely by setting the System property \'net.sf.ehcache.pool.sizeof.AgentSizeOf.bypass\'  to true
      19: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      24: return

  private static java.io.File getAgentFile() throws java.io.IOException;
    Code:
       0: ldc_w         #33                 // class net/sf/ehcache/pool/sizeof/AgentLoader
       3: ldc           #62                 // String sizeof-agent.jar
       5: invokevirtual #63                 // Method java/lang/Class.getResource:(Ljava/lang/String;)Ljava/net/URL;
       8: astore_0
       9: aload_0
      10: ifnonnull     15
      13: aconst_null
      14: areturn
      15: aload_0
      16: invokevirtual #64                 // Method java/net/URL.getProtocol:()Ljava/lang/String;
      19: ldc           #65                 // String file
      21: invokevirtual #31                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          39
      27: new           #21                 // class java/io/File
      30: dup
      31: aload_0
      32: invokevirtual #66                 // Method java/net/URL.getFile:()Ljava/lang/String;
      35: invokespecial #24                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      38: areturn
      39: ldc           #67                 // String ehcache-sizeof-agent
      41: ldc           #68                 // String .jar
      43: invokestatic  #69                 // Method java/io/File.createTempFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      46: astore_1
      47: new           #70                 // class java/io/FileOutputStream
      50: dup
      51: aload_1
      52: invokespecial #71                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      55: astore_2
      56: aload_0
      57: invokevirtual #72                 // Method java/net/URL.openStream:()Ljava/io/InputStream;
      60: astore_3
      61: getstatic     #73                 // Field net/sf/ehcache/config/MemoryUnit.KILOBYTES:Lnet/sf/ehcache/config/MemoryUnit;
      64: lconst_1
      65: invokevirtual #74                 // Method net/sf/ehcache/config/MemoryUnit.toBytes:(J)J
      68: l2i
      69: newarray       byte
      71: astore        4
      73: aload_3
      74: aload         4
      76: invokevirtual #75                 // Method java/io/InputStream.read:([B)I
      79: istore        5
      81: iload         5
      83: ifge          89
      86: goto          101
      89: aload_2
      90: aload         4
      92: iconst_0
      93: iload         5
      95: invokevirtual #76                 // Method java/io/FileOutputStream.write:([BII)V
      98: goto          73
     101: aload_3
     102: invokevirtual #77                 // Method java/io/InputStream.close:()V
     105: goto          117
     108: astore        6
     110: aload_3
     111: invokevirtual #77                 // Method java/io/InputStream.close:()V
     114: aload         6
     116: athrow
     117: aload_2
     118: invokevirtual #78                 // Method java/io/FileOutputStream.close:()V
     121: goto          133
     124: astore        7
     126: aload_2
     127: invokevirtual #78                 // Method java/io/FileOutputStream.close:()V
     130: aload         7
     132: athrow
     133: aload_1
     134: invokevirtual #79                 // Method java/io/File.deleteOnExit:()V
     137: goto          149
     140: astore        8
     142: aload_1
     143: invokevirtual #79                 // Method java/io/File.deleteOnExit:()V
     146: aload         8
     148: athrow
     149: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
     152: ldc           #80                 // String Extracted agent jar to temporary file {}
     154: aload_1
     155: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
     160: aload_1
     161: areturn
    Exception table:
       from    to  target type
          61   101   108   any
         108   110   108   any
          56   117   124   any
         124   126   124   any
          47   133   140   any
         140   142   140   any

  static boolean agentIsAvailable();
    Code:
       0: getstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
       3: ifnonnull     20
       6: invokestatic  #82                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
       9: ldc           #83                 // String net.sf.ehcache.sizeof.agent.instrumentation
      11: invokevirtual #84                 // Method java/util/Properties.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #85                 // class java/lang/instrument/Instrumentation
      17: putstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
      20: getstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
      23: ifnonnull     61
      26: invokestatic  #86                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      29: ldc           #87                 // String net.sf.ehcache.pool.sizeof.SizeOfAgent
      31: invokevirtual #88                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      34: astore_0
      35: aload_0
      36: ldc           #89                 // String getInstrumentation
      38: iconst_0
      39: anewarray     #7                  // class java/lang/Class
      42: invokevirtual #90                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      45: astore_1
      46: aload_1
      47: aload_0
      48: iconst_0
      49: anewarray     #42                 // class java/lang/Object
      52: invokevirtual #45                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #85                 // class java/lang/instrument/Instrumentation
      58: putstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
      61: getstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
      64: ifnull        71
      67: iconst_1
      68: goto          72
      71: iconst_0
      72: ireturn
      73: astore_0
      74: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      77: ldc           #92                 // String Couldn\'t access the system classloader because of the security policies applied by the security manager. You either want to loosen these, so ClassLoader.getSystemClassLoader() and reflection API calls are permitted or the sizing will be done using some other mechanism.\nAlternatively, set the system property net.sf.ehcache.sizeof.agent.instrumentationSystemProperty to true to have the agent put the required instances in the System Properties for the loader to access.
      79: invokeinterface #61,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      84: iconst_0
      85: ireturn
      86: astore_0
      87: iconst_0
      88: ireturn
    Exception table:
       from    to  target type
           0    72    73   Class java/lang/SecurityException
           0    72    86   Class java/lang/Throwable

  static long agentSizeOf(java.lang.Object);
    Code:
       0: getstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
       3: ifnonnull     16
       6: new           #93                 // class java/lang/UnsupportedOperationException
       9: dup
      10: ldc           #94                 // String Sizeof agent is not available
      12: invokespecial #95                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      15: athrow
      16: getstatic     #81                 // Field instrumentation:Ljava/lang/instrument/Instrumentation;
      19: aload_0
      20: invokeinterface #96,  2           // InterfaceMethod java/lang/instrument/Instrumentation.getObjectSize:(Ljava/lang/Object;)J
      25: lreturn

  static java.util.List access$000();
    Code:
       0: invokestatic  #2                  // Method getPossibleToolsJars:()Ljava/util/List;
       3: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
       3: areturn

  static {};
    Code:
       0: ldc_w         #33                 // class net/sf/ehcache/pool/sizeof/AgentLoader
       3: invokestatic  #97                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
       9: aconst_null
      10: astore_0
      11: aconst_null
      12: astore_1
      13: aconst_null
      14: astore_2
      15: invokestatic  #98                 // Method getVirtualMachineClass:()Ljava/lang/Class;
      18: astore_3
      19: aload_3
      20: ldc           #99                 // String attach
      22: iconst_1
      23: anewarray     #7                  // class java/lang/Class
      26: dup
      27: iconst_0
      28: ldc_w         #100                // class java/lang/String
      31: aastore
      32: invokevirtual #90                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      35: astore_0
      36: aload_3
      37: ldc           #101                // String detach
      39: iconst_0
      40: anewarray     #7                  // class java/lang/Class
      43: invokevirtual #90                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      46: astore_1
      47: aload_3
      48: ldc           #102                // String loadAgent
      50: iconst_1
      51: anewarray     #7                  // class java/lang/Class
      54: dup
      55: iconst_0
      56: ldc_w         #100                // class java/lang/String
      59: aastore
      60: invokevirtual #90                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      63: astore_2
      64: goto          82
      67: astore_3
      68: getstatic     #1                  // Field LOGGER:Lorg/slf4j/Logger;
      71: ldc           #103                // String Unavailable or unrecognised attach API : {}
      73: aload_3
      74: invokevirtual #104                // Method java/lang/Throwable.toString:()Ljava/lang/String;
      77: invokeinterface #48,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      82: aload_0
      83: putstatic     #41                 // Field VIRTUAL_MACHINE_ATTACH:Ljava/lang/reflect/Method;
      86: aload_1
      87: putstatic     #50                 // Field VIRTUAL_MACHINE_DETACH:Ljava/lang/reflect/Method;
      90: aload_2
      91: putstatic     #37                 // Field VIRTUAL_MACHINE_LOAD_AGENT:Ljava/lang/reflect/Method;
      94: return
    Exception table:
       from    to  target type
          15    64    67   Class java/lang/Throwable
}
