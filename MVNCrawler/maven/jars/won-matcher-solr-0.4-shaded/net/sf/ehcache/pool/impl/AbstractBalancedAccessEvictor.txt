Compiled from "AbstractBalancedAccessEvictor.java"
public abstract class net.sf.ehcache.pool.impl.AbstractBalancedAccessEvictor<T> implements net.sf.ehcache.pool.PoolEvictor<T> {
  private static final double ALPHA;

  private static final int SAMPLE_SIZE;

  public net.sf.ehcache.pool.impl.AbstractBalancedAccessEvictor();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  protected abstract boolean evict(T, int, long);

  protected abstract float hitRate(T);

  protected abstract float missRate(T);

  protected abstract long countSize(T);

  protected abstract long byteSize(T);

  public boolean freeSpace(java.util.Collection<T>, long);
    Code:
       0: aload_1
       1: ifnull        13
       4: aload_1
       5: invokeinterface #3,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifeq          15
      13: iconst_0
      14: ireturn
      15: new           #4                  // class java/util/ArrayList
      18: dup
      19: aload_1
      20: invokespecial #5                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      23: astore        4
      25: aload         4
      27: invokestatic  #6                  // Method java/util/Collections.shuffle:(Ljava/util/List;)V
      30: iconst_0
      31: istore        5
      33: iload         5
      35: aload         4
      37: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      42: if_icmpge     199
      45: aload         4
      47: iload         5
      49: iconst_5
      50: iload         5
      52: iadd
      53: aload         4
      55: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      60: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      63: invokeinterface #9,  3            // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      68: astore        6
      70: aload         6
      72: new           #10                 // class net/sf/ehcache/pool/impl/AbstractBalancedAccessEvictor$EvictionCostComparator
      75: dup
      76: aload_0
      77: aload_0
      78: aload         6
      80: invokespecial #11                 // Method getDesiredUnloadedSize:(Ljava/util/Collection;)J
      83: aload         6
      85: invokeinterface #7,  1            // InterfaceMethod java/util/List.size:()I
      90: iconst_1
      91: iadd
      92: invokespecial #12                 // Method net/sf/ehcache/pool/impl/AbstractBalancedAccessEvictor$EvictionCostComparator."<init>":(Lnet/sf/ehcache/pool/impl/AbstractBalancedAccessEvictor;JI)V
      95: invokestatic  #13                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      98: aload         6
     100: invokeinterface #14,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
     105: astore        7
     107: aload         7
     109: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     114: ifeq          193
     117: aload         7
     119: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     124: astore        8
     126: aload_0
     127: aload         8
     129: invokevirtual #17                 // Method byteSize:(Ljava/lang/Object;)J
     132: lstore        10
     134: aload_0
     135: aload         8
     137: invokevirtual #18                 // Method countSize:(Ljava/lang/Object;)J
     140: lstore        12
     142: lload         12
     144: lconst_0
     145: lcmp
     146: ifeq          156
     149: lload         10
     151: lconst_0
     152: lcmp
     153: ifne          162
     156: iconst_1
     157: istore        9
     159: goto          176
     162: lload_2
     163: lload         12
     165: lmul
     166: lload         10
     168: ldiv
     169: lconst_1
     170: invokestatic  #19                 // Method java/lang/Math.max:(JJ)J
     173: l2i
     174: istore        9
     176: aload_0
     177: aload         8
     179: iload         9
     181: lload_2
     182: invokevirtual #20                 // Method evict:(Ljava/lang/Object;IJ)Z
     185: ifeq          190
     188: iconst_1
     189: ireturn
     190: goto          107
     193: iinc          5, 5
     196: goto          33
     199: iconst_0
     200: ireturn

  private float evictionCost(T, long);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #21                 // Method hitRate:(Ljava/lang/Object;)F
       5: fstore        4
       7: aload_0
       8: aload_1
       9: invokevirtual #22                 // Method missRate:(Ljava/lang/Object;)F
      12: fstore        5
      14: aload_0
      15: aload_1
      16: invokevirtual #18                 // Method countSize:(Ljava/lang/Object;)J
      19: lstore        6
      21: fload         4
      23: fload         5
      25: fadd
      26: fstore        8
      28: fload         8
      30: fconst_0
      31: fcmpl
      32: ifne          51
      35: aload_0
      36: aload_1
      37: invokevirtual #17                 // Method byteSize:(Ljava/lang/Object;)J
      40: lload_2
      41: lcmp
      42: ifle          48
      45: ldc           #23                 // float -Infinityf
      47: freturn
      48: ldc           #24                 // float Infinityf
      50: freturn
      51: fload         4
      53: fconst_0
      54: fcmpl
      55: ifne          61
      58: ldc           #24                 // float Infinityf
      60: freturn
      61: fload         4
      63: lload         6
      65: l2f
      66: fdiv
      67: fload         4
      69: fload         8
      71: fdiv
      72: invokestatic  #25                 // Method hitDistributionFunction:(F)F
      75: fmul
      76: fstore        9
      78: fload         9
      80: invokestatic  #26                 // Method java/lang/Float.isNaN:(F)Z
      83: ifeq          127
      86: new           #27                 // class java/lang/AssertionError
      89: dup
      90: ldc           #28                 // String NaN Eviction Cost [hit:%f miss:%f size:%d]
      92: iconst_3
      93: anewarray     #29                 // class java/lang/Object
      96: dup
      97: iconst_0
      98: fload         4
     100: invokestatic  #30                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     103: aastore
     104: dup
     105: iconst_1
     106: fload         5
     108: invokestatic  #30                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
     111: aastore
     112: dup
     113: iconst_2
     114: lload         6
     116: invokestatic  #31                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: aastore
     120: invokestatic  #32                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     123: invokespecial #33                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     126: athrow
     127: fload         9
     129: freturn

  private static float hitDistributionFunction(float);
    Code:
       0: fload_0
       1: f2d
       2: ldc2_w        #34                 // double -1.0d
       5: invokestatic  #36                 // Method java/lang/Math.pow:(DD)D
       8: d2f
       9: freturn

  private long getDesiredUnloadedSize(java.util.Collection<T>);
    Code:
       0: lconst_0
       1: lstore_2
       2: aload_1
       3: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore        4
      10: aload         4
      12: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      17: ifeq          41
      20: aload         4
      22: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: astore        5
      29: lload_2
      30: aload_0
      31: aload         5
      33: invokevirtual #17                 // Method byteSize:(Ljava/lang/Object;)J
      36: ladd
      37: lstore_2
      38: goto          10
      41: lload_2
      42: aload_1
      43: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.size:()I
      48: i2l
      49: ldiv
      50: lreturn

  static float access$000(net.sf.ehcache.pool.impl.AbstractBalancedAccessEvictor, java.lang.Object, long);
    Code:
       0: aload_0
       1: aload_1
       2: lload_2
       3: invokespecial #1                  // Method evictionCost:(Ljava/lang/Object;J)F
       6: freturn
}
