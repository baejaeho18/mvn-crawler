Compiled from "AATreeSet.java"
final class net.sf.ehcache.store.disk.ods.AATreeSet$TreeNode<E extends java.lang.Comparable> extends net.sf.ehcache.store.disk.ods.AATreeSet$AbstractTreeNode<E> {
  private E payload;

  public net.sf.ehcache.store.disk.ods.AATreeSet$TreeNode(E);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/sf/ehcache/store/disk/ods/AATreeSet$AbstractTreeNode."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field payload:Ljava/lang/Comparable;
       9: return

  public int compareTo(E);
    Code:
       0: aload_0
       1: getfield      #2                  // Field payload:Ljava/lang/Comparable;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/lang/Comparable.compareTo:(Ljava/lang/Object;)I
      10: ireturn

  public void swapPayload(net.sf.ehcache.store.disk.ods.AATreeSet$Node<E>);
    Code:
       0: aload_1
       1: instanceof    #4                  // class net/sf/ehcache/store/disk/ods/AATreeSet$TreeNode
       4: ifeq          33
       7: aload_1
       8: checkcast     #4                  // class net/sf/ehcache/store/disk/ods/AATreeSet$TreeNode
      11: astore_2
      12: aload_2
      13: getfield      #2                  // Field payload:Ljava/lang/Comparable;
      16: astore_3
      17: aload_2
      18: aload_0
      19: getfield      #2                  // Field payload:Ljava/lang/Comparable;
      22: putfield      #2                  // Field payload:Ljava/lang/Comparable;
      25: aload_0
      26: aload_3
      27: putfield      #2                  // Field payload:Ljava/lang/Comparable;
      30: goto          41
      33: new           #5                  // class java/lang/IllegalArgumentException
      36: dup
      37: invokespecial #6                  // Method java/lang/IllegalArgumentException."<init>":()V
      40: athrow
      41: return

  public E getPayload();
    Code:
       0: aload_0
       1: getfield      #2                  // Field payload:Ljava/lang/Comparable;
       4: areturn

  public java.lang.Object getPayload();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method getPayload:()Ljava/lang/Comparable;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #8                  // class java/lang/Comparable
       5: invokevirtual #9                  // Method compareTo:(Ljava/lang/Comparable;)I
       8: ireturn
}
