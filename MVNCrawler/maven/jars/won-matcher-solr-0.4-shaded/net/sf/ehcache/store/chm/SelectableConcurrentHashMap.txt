Compiled from "SelectableConcurrentHashMap.java"
public class net.sf.ehcache.store.chm.SelectableConcurrentHashMap {
  protected static final net.sf.ehcache.Element DUMMY_PINNED_ELEMENT;

  static final int DEFAULT_INITIAL_CAPACITY;

  static final float DEFAULT_LOAD_FACTOR;

  private static final int MAXIMUM_CAPACITY;

  private static final int MAX_SEGMENTS;

  private static final int RETRIES_BEFORE_LOCK;

  private final int segmentMask;

  private final int segmentShift;

  private final net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment[] segments;

  private final java.util.Random rndm;

  private final net.sf.ehcache.pool.PoolAccessor poolAccessor;

  private final boolean elementPinningEnabled;

  private volatile long maxSize;

  private volatile net.sf.ehcache.store.chm.SelectableConcurrentHashMap$PinnedKeySet pinnedKeySet;

  private final net.sf.ehcache.event.RegisteredEventListeners cacheEventNotificationService;

  private java.util.Set<java.lang.Object> keySet;

  private java.util.Set<java.util.Map$Entry<java.lang.Object, net.sf.ehcache.Element>> entrySet;

  private java.util.Collection<net.sf.ehcache.Element> values;

  public net.sf.ehcache.store.chm.SelectableConcurrentHashMap(net.sf.ehcache.pool.PoolAccessor, boolean, int, long, net.sf.ehcache.event.RegisteredEventListeners);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: bipush        16
       5: ldc           #5                  // float 0.75f
       7: iload_3
       8: lload         4
      10: aload         6
      12: invokespecial #6                  // Method "<init>":(Lnet/sf/ehcache/pool/PoolAccessor;ZIFIJLnet/sf/ehcache/event/RegisteredEventListeners;)V
      15: return

  public net.sf.ehcache.store.chm.SelectableConcurrentHashMap(net.sf.ehcache.pool.PoolAccessor, boolean, int, float, int, long, net.sf.ehcache.event.RegisteredEventListeners);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #8                  // class java/util/Random
       8: dup
       9: invokespecial #9                  // Method java/util/Random."<init>":()V
      12: putfield      #10                 // Field rndm:Ljava/util/Random;
      15: fload         4
      17: fconst_0
      18: fcmpl
      19: ifle          31
      22: iload_3
      23: iflt          31
      26: iload         5
      28: ifgt          39
      31: new           #11                 // class java/lang/IllegalArgumentException
      34: dup
      35: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":()V
      38: athrow
      39: iload         5
      41: ldc           #13                 // int 65536
      43: if_icmple     50
      46: ldc           #13                 // int 65536
      48: istore        5
      50: iconst_0
      51: istore        9
      53: iconst_1
      54: istore        10
      56: iload         10
      58: iload         5
      60: if_icmpge     75
      63: iinc          9, 1
      66: iload         10
      68: iconst_1
      69: ishl
      70: istore        10
      72: goto          56
      75: aload_0
      76: bipush        32
      78: iload         9
      80: isub
      81: putfield      #14                 // Field segmentShift:I
      84: aload_0
      85: iload         10
      87: iconst_1
      88: isub
      89: putfield      #15                 // Field segmentMask:I
      92: aload_0
      93: iload         10
      95: anewarray     #16                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment
      98: putfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
     101: iload_3
     102: ldc           #17                 // int 1073741824
     104: if_icmple     110
     107: ldc           #17                 // int 1073741824
     109: istore_3
     110: iload_3
     111: iload         10
     113: idiv
     114: istore        11
     116: iload         11
     118: iload         10
     120: imul
     121: iload_3
     122: if_icmpge     128
     125: iinc          11, 1
     128: iconst_1
     129: istore        12
     131: iload         12
     133: iload         11
     135: if_icmpge     147
     138: iload         12
     140: iconst_1
     141: ishl
     142: istore        12
     144: goto          131
     147: iconst_0
     148: istore        13
     150: iload         13
     152: aload_0
     153: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
     156: arraylength
     157: if_icmpge     181
     160: aload_0
     161: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
     164: iload         13
     166: aload_0
     167: iload         12
     169: fload         4
     171: invokevirtual #18                 // Method createSegment:(IF)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
     174: aastore
     175: iinc          13, 1
     178: goto          150
     181: aload_0
     182: aload_1
     183: putfield      #4                  // Field poolAccessor:Lnet/sf/ehcache/pool/PoolAccessor;
     186: aload_0
     187: iload_2
     188: putfield      #19                 // Field elementPinningEnabled:Z
     191: aload_0
     192: lload         6
     194: putfield      #3                  // Field maxSize:J
     197: aload_0
     198: aload         8
     200: putfield      #2                  // Field cacheEventNotificationService:Lnet/sf/ehcache/event/RegisteredEventListeners;
     203: aload_0
     204: new           #20                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet
     207: dup
     208: aload_0
     209: aconst_null
     210: invokespecial #21                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$1;)V
     213: putfield      #22                 // Field pinnedKeySet:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet;
     216: return

  public void setMaxSize(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field maxSize:J
       5: return

  public net.sf.ehcache.Element[] getRandomValues(int, java.lang.Object);
    Code:
       0: new           #23                 // class java/util/ArrayList
       3: dup
       4: iload_1
       5: iconst_2
       6: imul
       7: invokespecial #24                 // Method java/util/ArrayList."<init>":(I)V
      10: astore_3
      11: aload_0
      12: getfield      #10                 // Field rndm:Ljava/util/Random;
      15: invokevirtual #25                 // Method java/util/Random.nextInt:()I
      18: istore        4
      20: aload_2
      21: ifnonnull     41
      24: iload         4
      26: aload_0
      27: getfield      #14                 // Field segmentShift:I
      30: iushr
      31: aload_0
      32: getfield      #15                 // Field segmentMask:I
      35: iand
      36: istore        5
      38: goto          60
      41: aload_2
      42: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
      45: invokestatic  #27                 // Method hash:(I)I
      48: aload_0
      49: getfield      #14                 // Field segmentShift:I
      52: iushr
      53: aload_0
      54: getfield      #15                 // Field segmentMask:I
      57: iand
      58: istore        5
      60: iload         5
      62: istore        6
      64: aload_0
      65: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      68: iload         6
      70: aaload
      71: getfield      #28                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.table:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry;
      74: astore        7
      76: iload         4
      78: aload         7
      80: arraylength
      81: iconst_1
      82: isub
      83: iand
      84: istore        8
      86: iload         8
      88: istore        9
      90: aload         7
      92: iload         9
      94: aaload
      95: astore        10
      97: aload         10
      99: ifnull        154
     102: aload         10
     104: getfield      #29                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry.value:Lnet/sf/ehcache/Element;
     107: astore        11
     109: aload         11
     111: ifnull        144
     114: aload         10
     116: getfield      #30                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry.pinned:Z
     119: ifeq          137
     122: aload_0
     123: getfield      #19                 // Field elementPinningEnabled:Z
     126: ifeq          137
     129: aload         11
     131: invokevirtual #31                 // Method net/sf/ehcache/Element.isExpired:()Z
     134: ifeq          144
     137: aload_3
     138: aload         11
     140: invokevirtual #32                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     143: pop
     144: aload         10
     146: getfield      #33                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry.next:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry;
     149: astore        10
     151: goto          97
     154: aload_3
     155: invokevirtual #34                 // Method java/util/ArrayList.size:()I
     158: iload_1
     159: if_icmplt     177
     162: aload_3
     163: aload_3
     164: invokevirtual #34                 // Method java/util/ArrayList.size:()I
     167: anewarray     #35                 // class net/sf/ehcache/Element
     170: invokevirtual #36                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     173: checkcast     #37                 // class "[Lnet/sf/ehcache/Element;"
     176: areturn
     177: iload         9
     179: iconst_1
     180: iadd
     181: aload         7
     183: arraylength
     184: iconst_1
     185: isub
     186: iand
     187: istore        9
     189: iload         9
     191: iload         8
     193: if_icmpne     90
     196: iload         6
     198: iconst_1
     199: iadd
     200: aload_0
     201: getfield      #15                 // Field segmentMask:I
     204: iand
     205: istore        6
     207: iload         6
     209: iload         5
     211: if_icmpne     64
     214: aload_3
     215: aload_3
     216: invokevirtual #34                 // Method java/util/ArrayList.size:()I
     219: anewarray     #35                 // class net/sf/ehcache/Element
     222: invokevirtual #36                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
     225: checkcast     #37                 // class "[Lnet/sf/ehcache/Element;"
     228: areturn

  public java.lang.Object storedObject(net.sf.ehcache.Element);
    Code:
       0: new           #38                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry
       3: dup
       4: aconst_null
       5: iconst_0
       6: aconst_null
       7: aload_1
       8: lconst_0
       9: iconst_0
      10: invokespecial #39                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry."<init>":(Ljava/lang/Object;ILnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$HashEntry;Lnet/sf/ehcache/Element;JZ)V
      13: areturn

  public int quickSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: astore_1
       5: lconst_0
       6: lstore_2
       7: aload_1
       8: astore        4
      10: aload         4
      12: arraylength
      13: istore        5
      15: iconst_0
      16: istore        6
      18: iload         6
      20: iload         5
      22: if_icmpge     53
      25: aload         4
      27: iload         6
      29: aaload
      30: astore        7
      32: lload_2
      33: aload         7
      35: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
      38: aload         7
      40: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
      43: isub
      44: i2l
      45: ladd
      46: lstore_2
      47: iinc          6, 1
      50: goto          18
      53: lload_2
      54: ldc2_w        #42                 // long 2147483647l
      57: lcmp
      58: ifle          64
      61: ldc           #44                 // int 2147483647
      63: ireturn
      64: lload_2
      65: l2i
      66: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: astore_1
       5: aload_1
       6: arraylength
       7: newarray       int
       9: astore_2
      10: iconst_0
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: aload_1
      18: arraylength
      19: if_icmpge     55
      22: aload_1
      23: iload         4
      25: aaload
      26: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
      29: ifeq          34
      32: iconst_0
      33: ireturn
      34: iload_3
      35: aload_2
      36: iload         4
      38: aload_1
      39: iload         4
      41: aaload
      42: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
      45: dup_x2
      46: iastore
      47: iadd
      48: istore_3
      49: iinc          4, 1
      52: goto          15
      55: iload_3
      56: ifeq          101
      59: iconst_0
      60: istore        4
      62: iload         4
      64: aload_1
      65: arraylength
      66: if_icmpge     101
      69: aload_1
      70: iload         4
      72: aaload
      73: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
      76: ifne          93
      79: aload_2
      80: iload         4
      82: iaload
      83: aload_1
      84: iload         4
      86: aaload
      87: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
      90: if_icmpeq     95
      93: iconst_0
      94: ireturn
      95: iinc          4, 1
      98: goto          62
     101: iconst_1
     102: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iconst_2
       9: if_icmpge     174
      12: aload_1
      13: arraylength
      14: newarray       int
      16: astore_3
      17: lconst_0
      18: lstore        4
      20: lconst_0
      21: lstore        6
      23: iconst_0
      24: istore        8
      26: iconst_0
      27: istore        9
      29: iload         9
      31: aload_1
      32: arraylength
      33: if_icmpge     80
      36: lload         6
      38: aload_1
      39: iload         9
      41: aaload
      42: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
      45: aload_1
      46: iload         9
      48: aaload
      49: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
      52: isub
      53: i2l
      54: ladd
      55: lstore        6
      57: iload         8
      59: aload_3
      60: iload         9
      62: aload_1
      63: iload         9
      65: aaload
      66: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
      69: dup_x2
      70: iastore
      71: iadd
      72: istore        8
      74: iinc          9, 1
      77: goto          29
      80: iload         8
      82: ifeq          144
      85: iconst_0
      86: istore        9
      88: iload         9
      90: aload_1
      91: arraylength
      92: if_icmpge     144
      95: lload         4
      97: aload_1
      98: iload         9
     100: aaload
     101: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
     104: aload_1
     105: iload         9
     107: aaload
     108: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
     111: isub
     112: i2l
     113: ladd
     114: lstore        4
     116: aload_3
     117: iload         9
     119: iaload
     120: aload_1
     121: iload         9
     123: aaload
     124: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
     127: if_icmpeq     138
     130: ldc2_w        #46                 // long -1l
     133: lstore        4
     135: goto          144
     138: iinc          9, 1
     141: goto          88
     144: lload         4
     146: lload         6
     148: lcmp
     149: ifne          168
     152: lload         6
     154: ldc2_w        #42                 // long 2147483647l
     157: lcmp
     158: ifle          164
     161: ldc           #44                 // int 2147483647
     163: ireturn
     164: lload         6
     166: l2i
     167: ireturn
     168: iinc          2, 1
     171: goto          7
     174: lconst_0
     175: lstore_2
     176: iconst_0
     177: istore        4
     179: iload         4
     181: aload_1
     182: arraylength
     183: if_icmpge     202
     186: aload_1
     187: iload         4
     189: aaload
     190: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     193: invokevirtual #49                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     196: iinc          4, 1
     199: goto          179
     202: iconst_0
     203: istore        4
     205: iload         4
     207: aload_1
     208: arraylength
     209: if_icmpge     237
     212: lload_2
     213: aload_1
     214: iload         4
     216: aaload
     217: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
     220: aload_1
     221: iload         4
     223: aaload
     224: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
     227: isub
     228: i2l
     229: ladd
     230: lstore_2
     231: iinc          4, 1
     234: goto          205
     237: iconst_0
     238: istore        4
     240: iload         4
     242: aload_1
     243: arraylength
     244: if_icmpge     263
     247: aload_1
     248: iload         4
     250: aaload
     251: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     254: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     257: iinc          4, 1
     260: goto          240
     263: goto          297
     266: astore        10
     268: iconst_0
     269: istore        11
     271: iload         11
     273: aload_1
     274: arraylength
     275: if_icmpge     294
     278: aload_1
     279: iload         11
     281: aaload
     282: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     285: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     288: iinc          11, 1
     291: goto          271
     294: aload         10
     296: athrow
     297: lload_2
     298: ldc2_w        #42                 // long 2147483647l
     301: lcmp
     302: ifle          308
     305: ldc           #44                 // int 2147483647
     307: ireturn
     308: lload_2
     309: l2i
     310: ireturn
    Exception table:
       from    to  target type
         202   237   266   any
         266   268   266   any

  public int pinnedSize();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iload_2
       8: iconst_2
       9: if_icmpge     174
      12: aload_1
      13: arraylength
      14: newarray       int
      16: astore_3
      17: lconst_0
      18: lstore        4
      20: lconst_0
      21: lstore        6
      23: iconst_0
      24: istore        8
      26: iconst_0
      27: istore        9
      29: iload         9
      31: aload_1
      32: arraylength
      33: if_icmpge     80
      36: lload         6
      38: aload_1
      39: iload         9
      41: aaload
      42: getfield      #51                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.pinnedCount:I
      45: aload_1
      46: iload         9
      48: aaload
      49: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
      52: isub
      53: i2l
      54: ladd
      55: lstore        6
      57: iload         8
      59: aload_3
      60: iload         9
      62: aload_1
      63: iload         9
      65: aaload
      66: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
      69: dup_x2
      70: iastore
      71: iadd
      72: istore        8
      74: iinc          9, 1
      77: goto          29
      80: iload         8
      82: ifeq          144
      85: iconst_0
      86: istore        9
      88: iload         9
      90: aload_1
      91: arraylength
      92: if_icmpge     144
      95: lload         4
      97: aload_1
      98: iload         9
     100: aaload
     101: getfield      #51                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.pinnedCount:I
     104: aload_1
     105: iload         9
     107: aaload
     108: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
     111: isub
     112: i2l
     113: ladd
     114: lstore        4
     116: aload_3
     117: iload         9
     119: iaload
     120: aload_1
     121: iload         9
     123: aaload
     124: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
     127: if_icmpeq     138
     130: ldc2_w        #46                 // long -1l
     133: lstore        4
     135: goto          144
     138: iinc          9, 1
     141: goto          88
     144: lload         4
     146: lload         6
     148: lcmp
     149: ifne          168
     152: lload         6
     154: ldc2_w        #42                 // long 2147483647l
     157: lcmp
     158: ifle          164
     161: ldc           #44                 // int 2147483647
     163: ireturn
     164: lload         6
     166: l2i
     167: ireturn
     168: iinc          2, 1
     171: goto          7
     174: lconst_0
     175: lstore_2
     176: iconst_0
     177: istore        4
     179: iload         4
     181: aload_1
     182: arraylength
     183: if_icmpge     202
     186: aload_1
     187: iload         4
     189: aaload
     190: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     193: invokevirtual #49                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     196: iinc          4, 1
     199: goto          179
     202: iconst_0
     203: istore        4
     205: iload         4
     207: aload_1
     208: arraylength
     209: if_icmpge     237
     212: lload_2
     213: aload_1
     214: iload         4
     216: aaload
     217: getfield      #51                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.pinnedCount:I
     220: aload_1
     221: iload         4
     223: aaload
     224: getfield      #41                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.numDummyPinnedKeys:I
     227: isub
     228: i2l
     229: ladd
     230: lstore_2
     231: iinc          4, 1
     234: goto          205
     237: iconst_0
     238: istore        4
     240: iload         4
     242: aload_1
     243: arraylength
     244: if_icmpge     263
     247: aload_1
     248: iload         4
     250: aaload
     251: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     254: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     257: iinc          4, 1
     260: goto          240
     263: goto          297
     266: astore        10
     268: iconst_0
     269: istore        11
     271: iload         11
     273: aload_1
     274: arraylength
     275: if_icmpge     294
     278: aload_1
     279: iload         11
     281: aaload
     282: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     285: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     288: iinc          11, 1
     291: goto          271
     294: aload         10
     296: athrow
     297: lload_2
     298: ldc2_w        #42                 // long 2147483647l
     301: lcmp
     302: ifle          308
     305: ldc           #44                 // int 2147483647
     307: ireturn
     308: lload_2
     309: l2i
     310: ireturn
    Exception table:
       from    to  target type
         202   237   266   any
         266   268   266   any

  public java.util.concurrent.locks.ReentrantReadWriteLock lockFor(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: areturn

  public java.util.concurrent.locks.ReentrantReadWriteLock[] locks();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: areturn

  public net.sf.ehcache.Element get(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: invokevirtual #53                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.get:(Ljava/lang/Object;I)Lnet/sf/ehcache/Element;
      18: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: invokevirtual #54                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.containsKey:(Ljava/lang/Object;I)Z
      18: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     12
       4: new           #55                 // class java/lang/NullPointerException
       7: dup
       8: invokespecial #56                 // Method java/lang/NullPointerException."<init>":()V
      11: athrow
      12: aload_0
      13: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      16: astore_2
      17: aload_2
      18: arraylength
      19: newarray       int
      21: astore_3
      22: iconst_0
      23: istore        4
      25: iload         4
      27: iconst_2
      28: if_icmpge     158
      31: iconst_0
      32: istore        5
      34: iconst_0
      35: istore        6
      37: iconst_0
      38: istore        7
      40: iload         7
      42: aload_2
      43: arraylength
      44: if_icmpge     92
      47: aload_2
      48: iload         7
      50: aaload
      51: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
      54: istore        8
      56: iload         6
      58: aload_3
      59: iload         7
      61: aload_2
      62: iload         7
      64: aaload
      65: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
      68: dup_x2
      69: iastore
      70: iadd
      71: istore        6
      73: aload_2
      74: iload         7
      76: aaload
      77: aload_1
      78: invokevirtual #57                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.containsValue:(Ljava/lang/Object;)Z
      81: ifeq          86
      84: iconst_1
      85: ireturn
      86: iinc          7, 1
      89: goto          40
      92: iconst_1
      93: istore        7
      95: iload         6
      97: ifeq          145
     100: iconst_0
     101: istore        8
     103: iload         8
     105: aload_2
     106: arraylength
     107: if_icmpge     145
     110: aload_2
     111: iload         8
     113: aaload
     114: getfield      #40                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.count:I
     117: istore        9
     119: aload_3
     120: iload         8
     122: iaload
     123: aload_2
     124: iload         8
     126: aaload
     127: getfield      #45                 // Field net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.modCount:I
     130: if_icmpeq     139
     133: iconst_0
     134: istore        7
     136: goto          145
     139: iinc          8, 1
     142: goto          103
     145: iload         7
     147: ifeq          152
     150: iconst_0
     151: ireturn
     152: iinc          4, 1
     155: goto          25
     158: iconst_0
     159: istore        4
     161: iload         4
     163: aload_2
     164: arraylength
     165: if_icmpge     184
     168: aload_2
     169: iload         4
     171: aaload
     172: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     175: invokevirtual #49                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
     178: iinc          4, 1
     181: goto          161
     184: iconst_0
     185: istore        4
     187: iload         4
     189: aload_2
     190: arraylength
     191: if_icmpge     243
     194: aload_2
     195: iload         4
     197: aaload
     198: aload_1
     199: invokevirtual #57                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.containsValue:(Ljava/lang/Object;)Z
     202: ifeq          237
     205: iconst_1
     206: istore        5
     208: iconst_0
     209: istore        6
     211: iload         6
     213: aload_2
     214: arraylength
     215: if_icmpge     234
     218: aload_2
     219: iload         6
     221: aaload
     222: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     225: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     228: iinc          6, 1
     231: goto          211
     234: iload         5
     236: ireturn
     237: iinc          4, 1
     240: goto          187
     243: iconst_0
     244: istore        4
     246: iload         4
     248: aload_2
     249: arraylength
     250: if_icmpge     269
     253: aload_2
     254: iload         4
     256: aaload
     257: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     260: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     263: iinc          4, 1
     266: goto          246
     269: goto          303
     272: astore        10
     274: iconst_0
     275: istore        11
     277: iload         11
     279: aload_2
     280: arraylength
     281: if_icmpge     300
     284: aload_2
     285: iload         11
     287: aaload
     288: invokevirtual #48                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
     291: invokevirtual #50                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
     294: iinc          11, 1
     297: goto          277
     300: aload         10
     302: athrow
     303: iconst_0
     304: ireturn
    Exception table:
       from    to  target type
         184   208   272   any
         237   243   272   any
         272   274   272   any

  public net.sf.ehcache.Element put(java.lang.Object, net.sf.ehcache.Element, long);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore        5
       9: aload_0
      10: iload         5
      12: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      15: aload_1
      16: iload         5
      18: aload_2
      19: lload_3
      20: iconst_0
      21: iconst_0
      22: iconst_1
      23: invokevirtual #58                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.put:(Ljava/lang/Object;ILnet/sf/ehcache/Element;JZZZ)Lnet/sf/ehcache/Element;
      26: areturn

  public net.sf.ehcache.Element putIfAbsent(java.lang.Object, net.sf.ehcache.Element, long);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore        5
       9: aload_0
      10: iload         5
      12: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      15: aload_1
      16: iload         5
      18: aload_2
      19: lload_3
      20: iconst_1
      21: iconst_0
      22: iconst_1
      23: invokevirtual #58                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.put:(Ljava/lang/Object;ILnet/sf/ehcache/Element;JZZZ)Lnet/sf/ehcache/Element;
      26: areturn

  public net.sf.ehcache.Element remove(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: aconst_null
      16: invokevirtual #59                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;)Lnet/sf/ehcache/Element;
      19: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_3
       8: aload_2
       9: ifnonnull     14
      12: iconst_0
      13: ireturn
      14: aload_0
      15: iload_3
      16: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      19: aload_1
      20: iload_3
      21: aload_2
      22: invokevirtual #59                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.remove:(Ljava/lang/Object;ILjava/lang/Object;)Lnet/sf/ehcache/Element;
      25: ifnull        32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public void clear();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       7: arraylength
       8: if_icmpge     26
      11: aload_0
      12: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      15: iload_1
      16: aaload
      17: invokevirtual #60                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.clear:()V
      20: iinc          1, 1
      23: goto          2
      26: return

  public void unpinAll();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #61                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.unpinAll:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_3
       8: aload_0
       9: iload_3
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #62                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.setPinned:(Ljava/lang/Object;ZI)V
      19: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: invokevirtual #63                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.isPinned:(Ljava/lang/Object;I)Z
      18: ireturn

  public java.util.Set<java.lang.Object> keySet();
    Code:
       0: aload_0
       1: getfield      #64                 // Field keySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          26
      13: aload_0
      14: new           #65                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$KeySet
      17: dup
      18: aload_0
      19: invokespecial #66                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$KeySet."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;)V
      22: dup_x1
      23: putfield      #64                 // Field keySet:Ljava/util/Set;
      26: areturn

  public java.util.Collection<net.sf.ehcache.Element> values();
    Code:
       0: aload_0
       1: getfield      #67                 // Field values:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          26
      13: aload_0
      14: new           #68                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Values
      17: dup
      18: aload_0
      19: invokespecial #69                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Values."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;)V
      22: dup_x1
      23: putfield      #67                 // Field values:Ljava/util/Collection;
      26: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.Object, net.sf.ehcache.Element>> entrySet();
    Code:
       0: aload_0
       1: getfield      #70                 // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          26
      13: aload_0
      14: new           #71                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$EntrySet
      17: dup
      18: aload_0
      19: invokespecial #72                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$EntrySet."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;)V
      22: dup_x1
      23: putfield      #70                 // Field entrySet:Ljava/util/Set;
      26: areturn

  protected net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment createSegment(int, float);
    Code:
       0: new           #16                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment
       3: dup
       4: aload_0
       5: iload_1
       6: fload_2
       7: invokespecial #73                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;IF)V
      10: areturn

  public boolean evict();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method getRandomSegment:()Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: invokevirtual #75                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.evict:()Z
       7: ireturn

  private net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment getRandomSegment();
    Code:
       0: aload_0
       1: getfield      #10                 // Field rndm:Ljava/util/Random;
       4: invokevirtual #25                 // Method java/util/Random.nextInt:()I
       7: istore_1
       8: aload_0
       9: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      12: iload_1
      13: aload_0
      14: getfield      #14                 // Field segmentShift:I
      17: iushr
      18: aload_0
      19: getfield      #15                 // Field segmentMask:I
      22: iand
      23: aaload
      24: areturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/Object.hashCode:()I
       4: invokestatic  #27                 // Method hash:(I)I
       7: istore_2
       8: aload_0
       9: iload_2
      10: invokevirtual #52                 // Method segmentFor:(I)Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
      13: aload_1
      14: iload_2
      15: invokevirtual #76                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment.recalculateSize:(Ljava/lang/Object;I)V
      18: return

  public java.util.Set pinnedKeySet();
    Code:
       0: aload_0
       1: getfield      #22                 // Field pinnedKeySet:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          27
      13: aload_0
      14: new           #20                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet
      17: dup
      18: aload_0
      19: aconst_null
      20: invokespecial #21                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$1;)V
      23: dup_x1
      24: putfield      #22                 // Field pinnedKeySet:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$PinnedKeySet;
      27: areturn

  protected final net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment segmentFor(int);
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: iload_1
       5: aload_0
       6: getfield      #14                 // Field segmentShift:I
       9: iushr
      10: aload_0
      11: getfield      #15                 // Field segmentMask:I
      14: iand
      15: aaload
      16: areturn

  protected final java.util.List<net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment> segments();
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: invokestatic  #77                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: invokestatic  #78                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      10: areturn

  protected static int hash(int);
    Code:
       0: iload_0
       1: iload_0
       2: bipush        15
       4: ishl
       5: sipush        -12931
       8: ixor
       9: iadd
      10: istore_0
      11: iload_0
      12: iload_0
      13: bipush        10
      15: iushr
      16: ixor
      17: istore_0
      18: iload_0
      19: iload_0
      20: iconst_3
      21: ishl
      22: iadd
      23: istore_0
      24: iload_0
      25: iload_0
      26: bipush        6
      28: iushr
      29: ixor
      30: istore_0
      31: iload_0
      32: iload_0
      33: iconst_2
      34: ishl
      35: iload_0
      36: bipush        14
      38: ishl
      39: iadd
      40: iadd
      41: istore_0
      42: iload_0
      43: iload_0
      44: bipush        16
      46: iushr
      47: ixor
      48: ireturn

  static net.sf.ehcache.pool.PoolAccessor access$100(net.sf.ehcache.store.chm.SelectableConcurrentHashMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field poolAccessor:Lnet/sf/ehcache/pool/PoolAccessor;
       4: areturn

  static long access$200(net.sf.ehcache.store.chm.SelectableConcurrentHashMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field maxSize:J
       4: lreturn

  static net.sf.ehcache.event.RegisteredEventListeners access$300(net.sf.ehcache.store.chm.SelectableConcurrentHashMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cacheEventNotificationService:Lnet/sf/ehcache/event/RegisteredEventListeners;
       4: areturn

  static net.sf.ehcache.store.chm.SelectableConcurrentHashMap$Segment[] access$500(net.sf.ehcache.store.chm.SelectableConcurrentHashMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field segments:[Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap$Segment;
       4: areturn

  static {};
    Code:
       0: new           #35                 // class net/sf/ehcache/Element
       3: dup
       4: new           #79                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedKey
       7: dup
       8: invokespecial #80                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedKey."<init>":()V
      11: new           #81                 // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedValue
      14: dup
      15: invokespecial #82                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$DummyPinnedValue."<init>":()V
      18: invokespecial #83                 // Method net/sf/ehcache/Element."<init>":(Ljava/io/Serializable;Ljava/io/Serializable;)V
      21: putstatic     #84                 // Field DUMMY_PINNED_ELEMENT:Lnet/sf/ehcache/Element;
      24: return
}
