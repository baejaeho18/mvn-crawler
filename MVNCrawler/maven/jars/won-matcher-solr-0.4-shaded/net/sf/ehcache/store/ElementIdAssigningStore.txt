Compiled from "ElementIdAssigningStore.java"
public class net.sf.ehcache.store.ElementIdAssigningStore implements net.sf.ehcache.store.Store {
  private final net.sf.ehcache.store.Store delegate;

  private final net.sf.ehcache.util.LongSequence elementIdSequence;

  public net.sf.ehcache.store.ElementIdAssigningStore(net.sf.ehcache.store.Store, net.sf.ehcache.util.LongSequence);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field elementIdSequence:Lnet/sf/ehcache/util/LongSequence;
      14: return

  private void setId(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #3                  // Field elementIdSequence:Lnet/sf/ehcache/util/LongSequence;
       4: invokeinterface #4,  1            // InterfaceMethod net/sf/ehcache/util/LongSequence.next:()J
       9: lstore_2
      10: lload_2
      11: lconst_0
      12: lcmp
      13: ifgt          26
      16: new           #5                  // class net/sf/ehcache/CacheException
      19: dup
      20: ldc           #6                  // String Element ID must be > 0
      22: invokespecial #7                  // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: aload_1
      27: lload_2
      28: invokestatic  #8                  // Method net/sf/ehcache/ElementIdHelper.setId:(Lnet/sf/ehcache/Element;J)V
      31: return

  public void unpinAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #9,  1            // InterfaceMethod net/sf/ehcache/store/Store.unpinAll:()V
       9: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/store/Store.isPinned:(Ljava/lang/Object;)Z
      10: ireturn

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: iload_2
       6: invokeinterface #11,  3           // InterfaceMethod net/sf/ehcache/store/Store.setPinned:(Ljava/lang/Object;Z)V
      11: return

  public void addStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod net/sf/ehcache/store/Store.addStoreListener:(Lnet/sf/ehcache/store/StoreListener;)V
      10: return

  public void removeStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod net/sf/ehcache/store/Store.removeStoreListener:(Lnet/sf/ehcache/store/StoreListener;)V
      10: return

  public boolean put(net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
       5: aload_0
       6: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_1
      10: invokeinterface #15,  2           // InterfaceMethod net/sf/ehcache/store/Store.put:(Lnet/sf/ehcache/Element;)Z
      15: ireturn

  public void putAll(java.util.Collection<net.sf.ehcache.Element>) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #19                 // class net/sf/ehcache/Element
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
      31: goto          7
      34: aload_0
      35: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
      38: aload_1
      39: invokeinterface #20,  2           // InterfaceMethod net/sf/ehcache/store/Store.putAll:(Ljava/util/Collection;)V
      44: return

  public boolean putWithWriter(net.sf.ehcache.Element, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
       5: aload_0
       6: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_1
      10: aload_2
      11: invokeinterface #21,  3           // InterfaceMethod net/sf/ehcache/store/Store.putWithWriter:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
      16: ireturn

  public net.sf.ehcache.Element get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod net/sf/ehcache/store/Store.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      10: areturn

  public net.sf.ehcache.Element getQuiet(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod net/sf/ehcache/store/Store.getQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      10: areturn

  public java.util.List getKeys();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #24,  1           // InterfaceMethod net/sf/ehcache/store/Store.getKeys:()Ljava/util/List;
       9: areturn

  public net.sf.ehcache.Element remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod net/sf/ehcache/store/Store.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      10: areturn

  public void removeAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #26,  2           // InterfaceMethod net/sf/ehcache/store/Store.removeAll:(Ljava/util/Collection;)V
      10: return

  public net.sf.ehcache.Element removeWithWriter(java.lang.Object, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: aload_2
       6: invokeinterface #27,  3           // InterfaceMethod net/sf/ehcache/store/Store.removeWithWriter:(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
      11: areturn

  public void removeAll() throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #28,  1           // InterfaceMethod net/sf/ehcache/store/Store.removeAll:()V
       9: return

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
       5: aload_0
       6: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_1
      10: invokeinterface #29,  2           // InterfaceMethod net/sf/ehcache/store/Store.putIfAbsent:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      15: areturn

  public net.sf.ehcache.Element removeElement(net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: aload_2
       6: invokeinterface #30,  3           // InterfaceMethod net/sf/ehcache/store/Store.removeElement:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
      11: areturn

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
       5: aload_0
       6: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_1
      10: aload_2
      11: aload_3
      12: invokeinterface #31,  4           // InterfaceMethod net/sf/ehcache/store/Store.replace:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
      17: ireturn

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method setId:(Lnet/sf/ehcache/Element;)V
       5: aload_0
       6: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       9: aload_1
      10: invokeinterface #32,  2           // InterfaceMethod net/sf/ehcache/store/Store.replace:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      15: areturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #33,  1           // InterfaceMethod net/sf/ehcache/store/Store.dispose:()V
       9: return

  public int getSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #34,  1           // InterfaceMethod net/sf/ehcache/store/Store.getSize:()I
       9: ireturn

  public int getInMemorySize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #35,  1           // InterfaceMethod net/sf/ehcache/store/Store.getInMemorySize:()I
       9: ireturn

  public int getOffHeapSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #36,  1           // InterfaceMethod net/sf/ehcache/store/Store.getOffHeapSize:()I
       9: ireturn

  public int getOnDiskSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #37,  1           // InterfaceMethod net/sf/ehcache/store/Store.getOnDiskSize:()I
       9: ireturn

  public int getTerracottaClusteredSize();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #38,  1           // InterfaceMethod net/sf/ehcache/store/Store.getTerracottaClusteredSize:()I
       9: ireturn

  public long getInMemorySizeInBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #39,  1           // InterfaceMethod net/sf/ehcache/store/Store.getInMemorySizeInBytes:()J
       9: lreturn

  public long getOffHeapSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #40,  1           // InterfaceMethod net/sf/ehcache/store/Store.getOffHeapSizeInBytes:()J
       9: lreturn

  public long getOnDiskSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #41,  1           // InterfaceMethod net/sf/ehcache/store/Store.getOnDiskSizeInBytes:()J
       9: lreturn

  public boolean hasAbortedSizeOf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #42,  1           // InterfaceMethod net/sf/ehcache/store/Store.hasAbortedSizeOf:()Z
       9: ireturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #43,  1           // InterfaceMethod net/sf/ehcache/store/Store.getStatus:()Lnet/sf/ehcache/Status;
       9: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #44,  2           // InterfaceMethod net/sf/ehcache/store/Store.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeyOnDisk(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #45,  2           // InterfaceMethod net/sf/ehcache/store/Store.containsKeyOnDisk:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeyOffHeap(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod net/sf/ehcache/store/Store.containsKeyOffHeap:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeyInMemory(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod net/sf/ehcache/store/Store.containsKeyInMemory:(Ljava/lang/Object;)Z
      10: ireturn

  public void expireElements();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #48,  1           // InterfaceMethod net/sf/ehcache/store/Store.expireElements:()V
       9: return

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #49,  1           // InterfaceMethod net/sf/ehcache/store/Store.flush:()V
       9: return

  public boolean bufferFull();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #50,  1           // InterfaceMethod net/sf/ehcache/store/Store.bufferFull:()Z
       9: ireturn

  public net.sf.ehcache.store.Policy getInMemoryEvictionPolicy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #51,  1           // InterfaceMethod net/sf/ehcache/store/Store.getInMemoryEvictionPolicy:()Lnet/sf/ehcache/store/Policy;
       9: areturn

  public void setInMemoryEvictionPolicy(net.sf.ehcache.store.Policy);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod net/sf/ehcache/store/Store.setInMemoryEvictionPolicy:(Lnet/sf/ehcache/store/Policy;)V
      10: return

  public java.lang.Object getInternalContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #53,  1           // InterfaceMethod net/sf/ehcache/store/Store.getInternalContext:()Ljava/lang/Object;
       9: areturn

  public boolean isCacheCoherent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #54,  1           // InterfaceMethod net/sf/ehcache/store/Store.isCacheCoherent:()Z
       9: ireturn

  public boolean isClusterCoherent() throws net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #55,  1           // InterfaceMethod net/sf/ehcache/store/Store.isClusterCoherent:()Z
       9: ireturn

  public boolean isNodeCoherent() throws net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #56,  1           // InterfaceMethod net/sf/ehcache/store/Store.isNodeCoherent:()Z
       9: ireturn

  public void setNodeCoherent(boolean) throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: iload_1
       5: invokeinterface #57,  2           // InterfaceMethod net/sf/ehcache/store/Store.setNodeCoherent:(Z)V
      10: return

  public void waitUntilClusterCoherent() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #58,  1           // InterfaceMethod net/sf/ehcache/store/Store.waitUntilClusterCoherent:()V
       9: return

  public java.lang.Object getMBean();
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: invokeinterface #59,  1           // InterfaceMethod net/sf/ehcache/store/Store.getMBean:()Ljava/lang/Object;
       9: areturn

  public void setAttributeExtractors(java.util.Map<java.lang.String, net.sf.ehcache.search.attribute.AttributeExtractor>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #60,  2           // InterfaceMethod net/sf/ehcache/store/Store.setAttributeExtractors:(Ljava/util/Map;)V
      10: return

  public net.sf.ehcache.search.Results executeQuery(net.sf.ehcache.store.StoreQuery) throws net.sf.ehcache.search.SearchException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #61,  2           // InterfaceMethod net/sf/ehcache/store/Store.executeQuery:(Lnet/sf/ehcache/store/StoreQuery;)Lnet/sf/ehcache/search/Results;
      10: areturn

  public <T> net.sf.ehcache.search.Attribute<T> getSearchAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #62,  2           // InterfaceMethod net/sf/ehcache/store/Store.getSearchAttribute:(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
      10: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAllQuiet(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #63,  2           // InterfaceMethod net/sf/ehcache/store/Store.getAllQuiet:(Ljava/util/Collection;)Ljava/util/Map;
      10: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #64,  2           // InterfaceMethod net/sf/ehcache/store/Store.getAll:(Ljava/util/Collection;)Ljava/util/Map;
      10: areturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field delegate:Lnet/sf/ehcache/store/Store;
       4: aload_1
       5: invokeinterface #65,  2           // InterfaceMethod net/sf/ehcache/store/Store.recalculateSize:(Ljava/lang/Object;)V
      10: return
}
