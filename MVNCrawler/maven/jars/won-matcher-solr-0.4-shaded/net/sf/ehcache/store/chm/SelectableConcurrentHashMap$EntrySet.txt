Compiled from "SelectableConcurrentHashMap.java"
final class net.sf.ehcache.store.chm.SelectableConcurrentHashMap$EntrySet extends java.util.AbstractSet<java.util.Map$Entry<java.lang.Object, net.sf.ehcache.Element>> {
  final net.sf.ehcache.store.chm.SelectableConcurrentHashMap this$0;

  net.sf.ehcache.store.chm.SelectableConcurrentHashMap$EntrySet(net.sf.ehcache.store.chm.SelectableConcurrentHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/util/AbstractSet."<init>":()V
       9: return

  public java.util.Iterator<java.util.Map$Entry<java.lang.Object, net.sf.ehcache.Element>> iterator();
    Code:
       0: new           #3                  // class net/sf/ehcache/store/chm/SelectableConcurrentHashMap$EntryIterator
       3: dup
       4: aload_0
       5: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
       8: invokespecial #4                  // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap$EntryIterator."<init>":(Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;)V
      11: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
       4: invokevirtual #5                  // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap.size:()I
       7: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
       4: invokevirtual #6                  // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap.isEmpty:()Z
       7: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #7                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: invokevirtual #9                  // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      27: astore_3
      28: aload_3
      29: ifnull        49
      32: aload_3
      33: aload_2
      34: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      39: invokevirtual #11                 // Method net/sf/ehcache/Element.equals:(Ljava/lang/Object;)Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #7                  // class java/util/Map$Entry
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: checkcast     #7                  // class java/util/Map$Entry
      13: astore_2
      14: aload_0
      15: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
      18: aload_2
      19: invokeinterface #8,  1            // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      24: aload_2
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      30: invokevirtual #12                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/sf/ehcache/store/chm/SelectableConcurrentHashMap;
       4: invokevirtual #13                 // Method net/sf/ehcache/store/chm/SelectableConcurrentHashMap.clear:()V
       7: return

  public java.lang.Object[] toArray();
    Code:
       0: new           #14                 // class java/util/ArrayList
       3: dup
       4: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #16                 // Method iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          40
      22: aload_2
      23: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore_3
      29: aload_1
      30: aload_3
      31: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      36: pop
      37: goto          13
      40: aload_1
      41: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      46: areturn

  public <T> T[] toArray(T[]);
    Code:
       0: new           #14                 // class java/util/ArrayList
       3: dup
       4: invokespecial #15                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: invokevirtual #16                 // Method iterator:()Ljava/util/Iterator;
      12: astore_3
      13: aload_3
      14: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          42
      22: aload_3
      23: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore        4
      30: aload_2
      31: aload         4
      33: invokeinterface #19,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      38: pop
      39: goto          13
      42: aload_2
      43: aload_1
      44: invokeinterface #21,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      49: areturn
}
