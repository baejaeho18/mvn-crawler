Compiled from "FrontEndCacheTier.java"
public abstract class net.sf.ehcache.store.FrontEndCacheTier<T extends net.sf.ehcache.store.TierableStore, U extends net.sf.ehcache.store.TierableStore> extends net.sf.ehcache.store.AbstractStore {
  private static final int DEFAULT_LOCK_STRIPE_COUNT;

  protected final T cache;

  protected final U authority;

  private final net.sf.ehcache.concurrent.StripedReadWriteLock masterLocks;

  private final boolean copyOnRead;

  private final boolean copyOnWrite;

  private final net.sf.ehcache.store.compound.ReadWriteCopyStrategy<net.sf.ehcache.Element> copyStrategy;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, net.sf.ehcache.store.FrontEndCacheTier$Fault> faults;

  public net.sf.ehcache.store.FrontEndCacheTier(T, U, net.sf.ehcache.store.compound.ReadWriteCopyStrategy<net.sf.ehcache.Element>, net.sf.ehcache.search.impl.SearchManager, boolean, boolean);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #1                  // Method net/sf/ehcache/store/AbstractStore."<init>":(Lnet/sf/ehcache/search/impl/SearchManager;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      14: putfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: aload_1
      19: putfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      22: aload_0
      23: aload_2
      24: putfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      27: aload_0
      28: aload_3
      29: putfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      32: aload_0
      33: iload         5
      35: putfield      #8                  // Field copyOnWrite:Z
      38: aload_0
      39: iload         6
      41: putfield      #9                  // Field copyOnRead:Z
      44: aload_2
      45: instanceof    #10                 // class net/sf/ehcache/store/StripedReadWriteLockProvider
      48: ifeq          67
      51: aload_0
      52: aload_2
      53: checkcast     #10                 // class net/sf/ehcache/store/StripedReadWriteLockProvider
      56: invokeinterface #11,  1           // InterfaceMethod net/sf/ehcache/store/StripedReadWriteLockProvider.createStripedReadWriteLock:()Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
      61: putfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
      64: goto          81
      67: aload_0
      68: new           #13                 // class net/sf/ehcache/concurrent/StripedReadWriteLockSync
      71: dup
      72: sipush        128
      75: invokespecial #14                 // Method net/sf/ehcache/concurrent/StripedReadWriteLockSync."<init>":(I)V
      78: putfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
      81: return

  public void unpinAll();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method writeLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #16,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.unpinAll:()V
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #16,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.unpinAll:()V
      22: aload_0
      23: invokespecial #17                 // Method writeUnlock:()V
      26: goto          36
      29: astore_1
      30: aload_0
      31: invokespecial #17                 // Method writeUnlock:()V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    22    29   any
          29    30    29   any

  public boolean isPinned(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      10: astore_2
      11: aload_2
      12: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      17: aload_0
      18: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      21: aload_1
      22: invokeinterface #21,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.isPinned:(Ljava/lang/Object;)Z
      27: ifne          43
      30: aload_0
      31: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      34: aload_1
      35: invokeinterface #21,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.isPinned:(Ljava/lang/Object;)Z
      40: ifeq          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore_3
      49: aload_2
      50: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: iload_3
      56: ireturn
      57: astore        4
      59: aload_2
      60: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload         4
      67: athrow
    Exception table:
       from    to  target type
          17    49    57   any
          57    59    57   any

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      10: astore_3
      11: aload_3
      12: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      17: aload_0
      18: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      21: aload_1
      22: iload_2
      23: invokeinterface #24,  3           // InterfaceMethod net/sf/ehcache/store/TierableStore.setPinned:(Ljava/lang/Object;Z)V
      28: aload_0
      29: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      32: aload_1
      33: iload_2
      34: invokeinterface #24,  3           // InterfaceMethod net/sf/ehcache/store/TierableStore.setPinned:(Ljava/lang/Object;Z)V
      39: aload_3
      40: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      45: goto          59
      48: astore        4
      50: aload_3
      51: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      56: aload         4
      58: athrow
      59: return
    Exception table:
       from    to  target type
          17    39    48   any
          48    50    48   any

  protected net.sf.ehcache.Element copyElementForReadIfNeeded(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #9                  // Field copyOnRead:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field copyOnWrite:Z
      11: ifeq          28
      14: aload_0
      15: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      18: aload_1
      19: invokeinterface #25,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForRead:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #26                 // class net/sf/ehcache/Element
      27: areturn
      28: aload_0
      29: getfield      #9                  // Field copyOnRead:Z
      32: ifeq          58
      35: aload_0
      36: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      39: aload_0
      40: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      43: aload_1
      44: invokeinterface #27,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForWrite:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokeinterface #25,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForRead:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #26                 // class net/sf/ehcache/Element
      57: areturn
      58: aload_1
      59: areturn

  protected net.sf.ehcache.Element copyElementForWriteIfNeeded(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #9                  // Field copyOnRead:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field copyOnWrite:Z
      11: ifeq          28
      14: aload_0
      15: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      18: aload_1
      19: invokeinterface #27,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForWrite:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #26                 // class net/sf/ehcache/Element
      27: areturn
      28: aload_0
      29: getfield      #8                  // Field copyOnWrite:Z
      32: ifeq          58
      35: aload_0
      36: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      39: aload_0
      40: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      43: aload_1
      44: invokeinterface #27,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForWrite:(Ljava/lang/Object;)Ljava/lang/Object;
      49: invokeinterface #25,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForRead:(Ljava/lang/Object;)Ljava/lang/Object;
      54: checkcast     #26                 // class net/sf/ehcache/Element
      57: areturn
      58: aload_1
      59: areturn

  private net.sf.ehcache.Element copyElementForRemovalIfNeeded(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #9                  // Field copyOnRead:Z
       4: ifeq          28
       7: aload_0
       8: getfield      #8                  // Field copyOnWrite:Z
      11: ifeq          28
      14: aload_0
      15: getfield      #7                  // Field copyStrategy:Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
      18: aload_1
      19: invokeinterface #27,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForWrite:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #26                 // class net/sf/ehcache/Element
      27: areturn
      28: aload_1
      29: areturn

  public net.sf.ehcache.Element get(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #28,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      33: astore_3
      34: aload_3
      35: ifnonnull     215
      38: aload_0
      39: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
      42: aload_1
      43: new           #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
      46: dup
      47: aconst_null
      48: invokespecial #30                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault."<init>":(Lnet/sf/ehcache/store/FrontEndCacheTier$1;)V
      51: invokeinterface #31,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
      59: astore        4
      61: aload         4
      63: ifnonnull     195
      66: aload_0
      67: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      70: aload_1
      71: invokeinterface #28,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      76: astore_3
      77: aload_3
      78: ifnull        114
      81: aload_0
      82: aload_3
      83: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      86: astore        5
      88: aload_0
      89: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
      92: aload_1
      93: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      98: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
     101: aload_3
     102: invokevirtual #34                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.complete:(Lnet/sf/ehcache/Element;)V
     105: aload_2
     106: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     111: aload         5
     113: areturn
     114: aload_0
     115: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
     118: aload_1
     119: invokeinterface #28,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
     124: astore_3
     125: aload_3
     126: ifnull        140
     129: aload_0
     130: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
     133: aload_3
     134: invokeinterface #35,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.put:(Lnet/sf/ehcache/Element;)Z
     139: pop
     140: aload_0
     141: aload_3
     142: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
     145: astore        5
     147: aload_0
     148: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
     151: aload_1
     152: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     157: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
     160: aload_3
     161: invokevirtual #34                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.complete:(Lnet/sf/ehcache/Element;)V
     164: aload_2
     165: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     170: aload         5
     172: areturn
     173: astore        6
     175: aload_0
     176: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
     179: aload_1
     180: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     185: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
     188: aload_3
     189: invokevirtual #34                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.complete:(Lnet/sf/ehcache/Element;)V
     192: aload         6
     194: athrow
     195: aload_0
     196: aload         4
     198: invokevirtual #36                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.get:()Lnet/sf/ehcache/Element;
     201: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
     204: astore        5
     206: aload_2
     207: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     212: aload         5
     214: areturn
     215: aload_0
     216: aload_3
     217: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
     220: astore        4
     222: aload_2
     223: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     228: aload         4
     230: areturn
     231: astore        7
     233: aload_2
     234: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     239: aload         7
     241: athrow
    Exception table:
       from    to  target type
          66    88   173   any
         114   147   173   any
         173   175   173   any
          23   105   231   any
         114   164   231   any
         173   206   231   any
         215   222   231   any
         231   233   231   any

  public net.sf.ehcache.Element getQuiet(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #37,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.getQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      33: astore_3
      34: aload_3
      35: ifnonnull     143
      38: aload_0
      39: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
      42: aload_1
      43: new           #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
      46: dup
      47: aconst_null
      48: invokespecial #30                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault."<init>":(Lnet/sf/ehcache/store/FrontEndCacheTier$1;)V
      51: invokeinterface #31,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
      59: astore        4
      61: aload         4
      63: ifnonnull     137
      66: aload_0
      67: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      70: aload_1
      71: invokeinterface #37,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.getQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      76: astore_3
      77: aload_3
      78: ifnull        92
      81: aload_0
      82: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      85: aload_3
      86: invokeinterface #35,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.put:(Lnet/sf/ehcache/Element;)Z
      91: pop
      92: aload_0
      93: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
      96: aload_1
      97: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     102: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
     105: aload_3
     106: invokevirtual #34                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.complete:(Lnet/sf/ehcache/Element;)V
     109: goto          134
     112: astore        5
     114: aload_0
     115: getfield      #4                  // Field faults:Ljava/util/concurrent/ConcurrentMap;
     118: aload_1
     119: invokeinterface #33,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     124: checkcast     #29                 // class net/sf/ehcache/store/FrontEndCacheTier$Fault
     127: aload_3
     128: invokevirtual #34                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.complete:(Lnet/sf/ehcache/Element;)V
     131: aload         5
     133: athrow
     134: goto          143
     137: aload         4
     139: invokevirtual #36                 // Method net/sf/ehcache/store/FrontEndCacheTier$Fault.get:()Lnet/sf/ehcache/Element;
     142: astore_3
     143: aload_0
     144: aload_3
     145: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
     148: astore        4
     150: aload_2
     151: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     156: aload         4
     158: areturn
     159: astore        6
     161: aload_2
     162: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     167: aload         6
     169: athrow
    Exception table:
       from    to  target type
          66    92   112   any
         112   114   112   any
          23   150   159   any
         159   161   159   any

  public boolean put(net.sf.ehcache.Element);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
      10: astore_2
      11: aload_0
      12: aload_2
      13: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      16: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      21: astore_3
      22: aload_3
      23: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      28: aload_0
      29: aload_1
      30: invokevirtual #39                 // Method copyElementForWriteIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      33: astore        4
      35: aload_0
      36: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      39: aload         4
      41: invokeinterface #35,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.put:(Lnet/sf/ehcache/Element;)Z
      46: istore        5
      48: aload_0
      49: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      52: aload         4
      54: invokeinterface #40,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.fill:(Lnet/sf/ehcache/Element;)V
      59: goto          81
      62: astore        6
      64: aload_0
      65: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      68: aload_1
      69: invokevirtual #42                 // Method net/sf/ehcache/Element.getKey:()Ljava/io/Serializable;
      72: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      77: pop
      78: aload         6
      80: athrow
      81: iload         5
      83: istore        6
      85: aload_3
      86: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      91: iload         6
      93: ireturn
      94: astore        7
      96: aload_3
      97: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     102: aload         7
     104: athrow
    Exception table:
       from    to  target type
          48    59    62   Class java/lang/OutOfMemoryError
          28    85    94   any
          94    96    94   any

  public boolean putWithWriter(net.sf.ehcache.Element, net.sf.ehcache.writer.CacheWriterManager);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_1
       5: ireturn
       6: aload_1
       7: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      16: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      21: astore        4
      23: aload         4
      25: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      30: aload_0
      31: aload_1
      32: invokevirtual #39                 // Method copyElementForWriteIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      35: astore        5
      37: aload_0
      38: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      41: aload         5
      43: aload_2
      44: invokeinterface #44,  3           // InterfaceMethod net/sf/ehcache/store/TierableStore.putWithWriter:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/writer/CacheWriterManager;)Z
      49: istore        6
      51: aload_0
      52: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      55: aload         5
      57: invokeinterface #40,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.fill:(Lnet/sf/ehcache/Element;)V
      62: goto          84
      65: astore        7
      67: aload_0
      68: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      71: aload_1
      72: invokevirtual #42                 // Method net/sf/ehcache/Element.getKey:()Ljava/io/Serializable;
      75: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      80: pop
      81: aload         7
      83: athrow
      84: iload         6
      86: istore        7
      88: aload         4
      90: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      95: iload         7
      97: ireturn
      98: astore        8
     100: aload         4
     102: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     107: aload         8
     109: athrow
    Exception table:
       from    to  target type
          51    62    65   Class java/lang/OutOfMemoryError
          30    88    98   any
          98   100    98   any

  public net.sf.ehcache.Element remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      33: astore_3
      34: aload_3
      35: ifnonnull     63
      38: aload_0
      39: aload_0
      40: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      43: aload_1
      44: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      49: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      52: astore        4
      54: aload_2
      55: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      60: aload         4
      62: areturn
      63: aload_0
      64: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      67: aload_1
      68: invokeinterface #45,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeNoReturn:(Ljava/lang/Object;)V
      73: aload_0
      74: aload_3
      75: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      78: astore        4
      80: aload_2
      81: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      86: aload         4
      88: areturn
      89: astore        5
      91: aload_2
      92: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      97: aload         5
      99: athrow
    Exception table:
       from    to  target type
          23    54    89   any
          63    80    89   any
          89    91    89   any

  public net.sf.ehcache.Element removeWithWriter(java.lang.Object, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_3
      17: aload_3
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      33: pop
      34: aload_0
      35: aload_0
      36: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      39: aload_1
      40: aload_2
      41: invokeinterface #46,  3           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeWithWriter:(Ljava/lang/Object;Lnet/sf/ehcache/writer/CacheWriterManager;)Lnet/sf/ehcache/Element;
      46: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      49: astore        4
      51: aload_3
      52: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: aload         4
      59: areturn
      60: astore        5
      62: aload_3
      63: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      68: aload         5
      70: athrow
    Exception table:
       from    to  target type
          23    51    60   any
          60    62    60   any

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      15: astore_3
      16: aload_3
      17: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: aload_1
      24: invokevirtual #39                 // Method copyElementForWriteIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      27: astore        4
      29: aload_0
      30: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      33: aload         4
      35: invokeinterface #47,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.putIfAbsent:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      40: astore        5
      42: aload         5
      44: ifnonnull     81
      47: aload_0
      48: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      51: aload         4
      53: invokeinterface #40,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.fill:(Lnet/sf/ehcache/Element;)V
      58: goto          81
      61: astore        6
      63: aload_0
      64: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      67: aload         4
      69: invokevirtual #42                 // Method net/sf/ehcache/Element.getKey:()Ljava/io/Serializable;
      72: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      77: pop
      78: aload         6
      80: athrow
      81: aload_0
      82: aload         5
      84: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      87: astore        6
      89: aload_3
      90: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      95: aload         6
      97: areturn
      98: astore        7
     100: aload_3
     101: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     106: aload         7
     108: athrow
    Exception table:
       from    to  target type
          47    58    61   Class java/lang/OutOfMemoryError
          22    89    98   any
          98   100    98   any

  public net.sf.ehcache.Element removeElement(net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
       4: astore_3
       5: aload_0
       6: aload_3
       7: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      15: astore        4
      17: aload         4
      19: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      24: aload_0
      25: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      28: aload_1
      29: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
      32: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      37: pop
      38: aload_0
      39: aload_0
      40: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      43: aload_0
      44: aload_1
      45: invokespecial #48                 // Method copyElementForRemovalIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      48: aload_2
      49: invokeinterface #49,  3           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeElement:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Lnet/sf/ehcache/Element;
      54: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      57: astore        5
      59: aload         4
      61: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      66: aload         5
      68: areturn
      69: astore        6
      71: aload         4
      73: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      78: aload         6
      80: athrow
    Exception table:
       from    to  target type
          24    59    69   any
          69    71    69   any

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
       4: astore        4
       6: aload_0
       7: aload         4
       9: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      12: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      17: astore        5
      19: aload         5
      21: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      26: aload_0
      27: aload_2
      28: invokevirtual #39                 // Method copyElementForWriteIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      31: astore        6
      33: aload_0
      34: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      37: aload_1
      38: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
      41: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      46: pop
      47: aload_0
      48: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      51: aload_0
      52: aload_1
      53: invokespecial #48                 // Method copyElementForRemovalIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      56: aload         6
      58: aload_3
      59: invokeinterface #50,  4           // InterfaceMethod net/sf/ehcache/store/TierableStore.replace:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;Lnet/sf/ehcache/store/ElementValueComparator;)Z
      64: istore        7
      66: aload         5
      68: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      73: iload         7
      75: ireturn
      76: astore        8
      78: aload         5
      80: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      85: aload         8
      87: athrow
    Exception table:
       from    to  target type
          26    66    76   any
          76    78    76   any

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: aload_2
       7: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      10: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      15: astore_3
      16: aload_3
      17: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      22: aload_0
      23: aload_1
      24: invokevirtual #39                 // Method copyElementForWriteIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      27: astore        4
      29: aload_0
      30: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      33: aload_1
      34: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
      37: invokeinterface #43,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      42: pop
      43: aload_0
      44: aload_0
      45: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      48: aload         4
      50: invokeinterface #51,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.replace:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      55: invokevirtual #32                 // Method copyElementForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      58: astore        5
      60: aload_3
      61: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      66: aload         5
      68: areturn
      69: astore        6
      71: aload_3
      72: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      77: aload         6
      79: athrow
    Exception table:
       from    to  target type
          22    60    69   any
          69    71    69   any

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #52,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKey:(Ljava/lang/Object;)Z
      33: ifne          49
      36: aload_0
      37: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      40: aload_1
      41: invokeinterface #52,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKey:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore_3
      55: aload_2
      56: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: iload_3
      62: ireturn
      63: astore        4
      65: aload_2
      66: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          23    55    63   any
          63    65    63   any

  public boolean containsKeyOnDisk(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #53,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyOnDisk:(Ljava/lang/Object;)Z
      33: ifne          49
      36: aload_0
      37: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      40: aload_1
      41: invokeinterface #53,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyOnDisk:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore_3
      55: aload_2
      56: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: iload_3
      62: ireturn
      63: astore        4
      65: aload_2
      66: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          23    55    63   any
          63    65    63   any

  public boolean containsKeyOffHeap(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #54,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyOffHeap:(Ljava/lang/Object;)Z
      33: ifne          49
      36: aload_0
      37: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      40: aload_1
      41: invokeinterface #54,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyOffHeap:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore_3
      55: aload_2
      56: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: iload_3
      62: ireturn
      63: astore        4
      65: aload_2
      66: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          23    55    63   any
          63    65    63   any

  public boolean containsKeyInMemory(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: iconst_0
       5: ireturn
       6: aload_0
       7: aload_1
       8: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      11: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      16: astore_2
      17: aload_2
      18: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      23: aload_0
      24: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      27: aload_1
      28: invokeinterface #55,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyInMemory:(Ljava/lang/Object;)Z
      33: ifne          49
      36: aload_0
      37: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      40: aload_1
      41: invokeinterface #55,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKeyInMemory:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore_3
      55: aload_2
      56: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: iload_3
      62: ireturn
      63: astore        4
      65: aload_2
      66: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      71: aload         4
      73: athrow
    Exception table:
       from    to  target type
          23    55    63   any
          63    65    63   any

  public java.util.List<?> getKeys();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #57,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.isTierPinned:()Z
      13: ifeq          44
      16: aload_0
      17: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      20: invokeinterface #58,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.isPersistent:()Z
      25: ifne          44
      28: aload_0
      29: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      32: invokeinterface #59,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getKeys:()Ljava/util/List;
      37: astore_1
      38: aload_0
      39: invokespecial #60                 // Method readUnlock:()V
      42: aload_1
      43: areturn
      44: new           #61                 // class net/sf/ehcache/util/SetAsList
      47: dup
      48: new           #62                 // class net/sf/ehcache/store/CacheKeySet
      51: dup
      52: iconst_2
      53: anewarray     #63                 // class java/util/Collection
      56: dup
      57: iconst_0
      58: aload_0
      59: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      62: invokeinterface #59,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getKeys:()Ljava/util/List;
      67: aastore
      68: dup
      69: iconst_1
      70: aload_0
      71: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      74: invokeinterface #57,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.isTierPinned:()Z
      79: ifeq          94
      82: aload_0
      83: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      86: invokeinterface #59,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getKeys:()Ljava/util/List;
      91: goto          103
      94: aload_0
      95: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      98: invokeinterface #64,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getPresentPinnedKeys:()Ljava/util/Set;
     103: aastore
     104: invokespecial #65                 // Method net/sf/ehcache/store/CacheKeySet."<init>":([Ljava/util/Collection;)V
     107: invokespecial #66                 // Method net/sf/ehcache/util/SetAsList."<init>":(Ljava/util/Set;)V
     110: astore_1
     111: aload_0
     112: invokespecial #60                 // Method readUnlock:()V
     115: aload_1
     116: areturn
     117: astore_2
     118: aload_0
     119: invokespecial #60                 // Method readUnlock:()V
     122: aload_2
     123: athrow
    Exception table:
       from    to  target type
           4    38   117   any
          44   111   117   any
         117   118   117   any

  public void removeAll() throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method writeLock:()V
       4: aload_0
       5: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #67,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeAll:()V
      13: aload_0
      14: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #67,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeAll:()V
      22: aload_0
      23: invokespecial #17                 // Method writeUnlock:()V
      26: goto          36
      29: astore_1
      30: aload_0
      31: invokespecial #17                 // Method writeUnlock:()V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    22    29   any
          29    30    29   any

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #68,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.dispose:()V
       9: aload_0
      10: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      13: invokeinterface #68,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.dispose:()V
      18: return

  public int getSize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #69,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getSize:()I
      13: aload_0
      14: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #69,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getSize:()I
      22: invokestatic  #70                 // Method java/lang/Math.max:(II)I
      25: istore_1
      26: aload_0
      27: invokespecial #60                 // Method readUnlock:()V
      30: iload_1
      31: ireturn
      32: astore_2
      33: aload_0
      34: invokespecial #60                 // Method readUnlock:()V
      37: aload_2
      38: athrow
    Exception table:
       from    to  target type
           4    26    32   any
          32    33    32   any

  public int getInMemorySize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #71,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getInMemorySize:()I
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #71,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getInMemorySize:()I
      22: iadd
      23: istore_1
      24: aload_0
      25: invokespecial #60                 // Method readUnlock:()V
      28: iload_1
      29: ireturn
      30: astore_2
      31: aload_0
      32: invokespecial #60                 // Method readUnlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           4    24    30   any
          30    31    30   any

  public int getOffHeapSize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #72,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOffHeapSize:()I
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #72,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOffHeapSize:()I
      22: iadd
      23: istore_1
      24: aload_0
      25: invokespecial #60                 // Method readUnlock:()V
      28: iload_1
      29: ireturn
      30: astore_2
      31: aload_0
      32: invokespecial #60                 // Method readUnlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           4    24    30   any
          30    31    30   any

  public int getOnDiskSize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #73,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOnDiskSize:()I
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #73,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOnDiskSize:()I
      22: iadd
      23: istore_1
      24: aload_0
      25: invokespecial #60                 // Method readUnlock:()V
      28: iload_1
      29: ireturn
      30: astore_2
      31: aload_0
      32: invokespecial #60                 // Method readUnlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           4    24    30   any
          30    31    30   any

  public int getTerracottaClusteredSize();
    Code:
       0: aload_0
       1: invokespecial #56                 // Method readLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #74,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getTerracottaClusteredSize:()I
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #74,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getTerracottaClusteredSize:()I
      22: iadd
      23: istore_1
      24: aload_0
      25: invokespecial #60                 // Method readUnlock:()V
      28: iload_1
      29: ireturn
      30: astore_2
      31: aload_0
      32: invokespecial #60                 // Method readUnlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           4    24    30   any
          30    31    30   any

  public long getInMemorySizeInBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #75,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getInMemorySizeInBytes:()J
       9: aload_0
      10: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      13: invokeinterface #75,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getInMemorySizeInBytes:()J
      18: ladd
      19: lreturn

  public long getOffHeapSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #76,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOffHeapSizeInBytes:()J
       9: aload_0
      10: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      13: invokeinterface #76,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOffHeapSizeInBytes:()J
      18: ladd
      19: lreturn

  public long getOnDiskSizeInBytes();
    Code:
       0: aload_0
       1: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #77,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOnDiskSizeInBytes:()J
       9: aload_0
      10: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      13: invokeinterface #77,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getOnDiskSizeInBytes:()J
      18: ladd
      19: lreturn

  public void expireElements();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method writeLock:()V
       4: aload_0
       5: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       8: invokeinterface #78,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.expireElements:()V
      13: aload_0
      14: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      17: invokeinterface #78,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.expireElements:()V
      22: aload_0
      23: invokespecial #17                 // Method writeUnlock:()V
      26: goto          36
      29: astore_1
      30: aload_0
      31: invokespecial #17                 // Method writeUnlock:()V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           4    22    29   any
          29    30    29   any

  public void flush() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #79,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.flush:()V
       9: aload_0
      10: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      13: invokeinterface #79,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.flush:()V
      18: return

  public boolean bufferFull();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #80,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.bufferFull:()Z
       9: ifne          24
      12: aload_0
      13: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      16: invokeinterface #80,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.bufferFull:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  private void readLock();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getAllLocks:()Ljava/util/List;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #85                 // class net/sf/ehcache/concurrent/ReadWriteLockSync
      28: astore_2
      29: aload_2
      30: getstatic     #86                 // Field net/sf/ehcache/concurrent/LockType.READ:Lnet/sf/ehcache/concurrent/LockType;
      33: invokevirtual #87                 // Method net/sf/ehcache/concurrent/ReadWriteLockSync.lock:(Lnet/sf/ehcache/concurrent/LockType;)V
      36: goto          10
      39: return

  private void readUnlock();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getAllLocks:()Ljava/util/List;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #85                 // class net/sf/ehcache/concurrent/ReadWriteLockSync
      28: astore_2
      29: aload_2
      30: getstatic     #86                 // Field net/sf/ehcache/concurrent/LockType.READ:Lnet/sf/ehcache/concurrent/LockType;
      33: invokevirtual #88                 // Method net/sf/ehcache/concurrent/ReadWriteLockSync.unlock:(Lnet/sf/ehcache/concurrent/LockType;)V
      36: goto          10
      39: return

  private void writeLock();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getAllLocks:()Ljava/util/List;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #85                 // class net/sf/ehcache/concurrent/ReadWriteLockSync
      28: astore_2
      29: aload_2
      30: getstatic     #89                 // Field net/sf/ehcache/concurrent/LockType.WRITE:Lnet/sf/ehcache/concurrent/LockType;
      33: invokevirtual #87                 // Method net/sf/ehcache/concurrent/ReadWriteLockSync.lock:(Lnet/sf/ehcache/concurrent/LockType;)V
      36: goto          10
      39: return

  private void writeUnlock();
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getAllLocks:()Ljava/util/List;
       4: invokeinterface #82,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #83,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          39
      19: aload_1
      20: invokeinterface #84,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #85                 // class net/sf/ehcache/concurrent/ReadWriteLockSync
      28: astore_2
      29: aload_2
      30: getstatic     #89                 // Field net/sf/ehcache/concurrent/LockType.WRITE:Lnet/sf/ehcache/concurrent/LockType;
      33: invokevirtual #88                 // Method net/sf/ehcache/concurrent/ReadWriteLockSync.unlock:(Lnet/sf/ehcache/concurrent/LockType;)V
      36: goto          10
      39: return

  public java.util.concurrent.locks.ReadWriteLock getLockFor(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
       4: aload_1
       5: invokeinterface #90,  2           // InterfaceMethod net/sf/ehcache/concurrent/StripedReadWriteLock.getLockForKey:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      10: areturn

  protected java.util.List<net.sf.ehcache.concurrent.ReadWriteLockSync> getAllLocks();
    Code:
       0: aload_0
       1: getfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
       4: invokeinterface #91,  1           // InterfaceMethod net/sf/ehcache/concurrent/StripedReadWriteLock.getAllSyncs:()Ljava/util/List;
       9: areturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #92,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getStatus:()Lnet/sf/ehcache/Status;
       9: areturn

  public net.sf.ehcache.store.Policy getInMemoryEvictionPolicy();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #93,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.getInMemoryEvictionPolicy:()Lnet/sf/ehcache/store/Policy;
       9: areturn

  public void setInMemoryEvictionPolicy(net.sf.ehcache.store.Policy);
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: aload_1
       5: invokeinterface #94,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.setInMemoryEvictionPolicy:(Lnet/sf/ehcache/store/Policy;)V
      10: return

  public final java.lang.Object getInternalContext();
    Code:
       0: aload_0
       1: getfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
       4: areturn

  public boolean isEvictionCandidate(net.sf.ehcache.Element);
    Code:
       0: aload_1
       1: invokevirtual #38                 // Method net/sf/ehcache/Element.getObjectKey:()Ljava/lang/Object;
       4: astore_2
       5: aload_0
       6: getfield      #12                 // Field masterLocks:Lnet/sf/ehcache/concurrent/StripedReadWriteLock;
       9: aload_2
      10: invokeinterface #90,  2           // InterfaceMethod net/sf/ehcache/concurrent/StripedReadWriteLock.getLockForKey:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
      15: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      20: astore_3
      21: aload_3
      22: invokeinterface #95,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
      27: ifeq          64
      30: aload_0
      31: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      34: aload_2
      35: invokeinterface #96,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.removeIfNotPinned:(Ljava/lang/Object;)Z
      40: pop
      41: iconst_1
      42: istore        4
      44: aload_3
      45: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      50: iload         4
      52: ireturn
      53: astore        5
      55: aload_3
      56: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: aload         5
      63: athrow
      64: iconst_0
      65: ireturn
    Exception table:
       from    to  target type
          30    44    53   any
          53    55    53   any

  public boolean isCached(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #19,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      10: astore_2
      11: aload_2
      12: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      17: aload_0
      18: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      21: aload_1
      22: invokeinterface #52,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.containsKey:(Ljava/lang/Object;)Z
      27: istore_3
      28: aload_2
      29: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      34: iload_3
      35: ireturn
      36: astore        4
      38: aload_2
      39: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: aload         4
      46: athrow
    Exception table:
       from    to  target type
          17    28    36   any
          36    38    36   any

  public boolean notifyEvictionFromCache(java.io.Serializable);
    Code:
       0: iconst_0
       1: ireturn

  public boolean hasAbortedSizeOf();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
       4: invokeinterface #97,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.hasAbortedSizeOf:()Z
       9: ifne          24
      12: aload_0
      13: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      16: invokeinterface #97,  1           // InterfaceMethod net/sf/ehcache/store/TierableStore.hasAbortedSizeOf:()Z
      21: ifeq          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method getLockFor:(Ljava/lang/Object;)Ljava/util/concurrent/locks/ReadWriteLock;
       5: invokeinterface #23,  1           // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      10: astore_2
      11: aload_2
      12: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      17: aload_0
      18: getfield      #6                  // Field authority:Lnet/sf/ehcache/store/TierableStore;
      21: aload_1
      22: invokeinterface #98,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.recalculateSize:(Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #5                  // Field cache:Lnet/sf/ehcache/store/TierableStore;
      31: aload_1
      32: invokeinterface #98,  2           // InterfaceMethod net/sf/ehcache/store/TierableStore.recalculateSize:(Ljava/lang/Object;)V
      37: aload_2
      38: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: goto          55
      46: astore_3
      47: aload_2
      48: invokeinterface #22,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_3
      54: athrow
      55: return
    Exception table:
       from    to  target type
          17    37    46   any
          46    47    46   any
}
