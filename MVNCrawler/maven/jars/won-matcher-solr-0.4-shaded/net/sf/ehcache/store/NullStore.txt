Compiled from "NullStore.java"
public final class net.sf.ehcache.store.NullStore extends net.sf.ehcache.store.AbstractStore implements net.sf.ehcache.store.TierableStore {
  private net.sf.ehcache.store.NullStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/sf/ehcache/store/AbstractStore."<init>":()V
       4: return

  public static net.sf.ehcache.store.NullStore create();
    Code:
       0: new           #2                  // class net/sf/ehcache/store/NullStore
       3: dup
       4: invokespecial #3                  // Method "<init>":()V
       7: areturn

  public void unpinAll();
    Code:
       0: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: return

  public boolean put(net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean putWithWriter(net.sf.ehcache.Element, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element get(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element getQuiet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public java.util.List getKeys();
    Code:
       0: invokestatic  #4                  // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public net.sf.ehcache.Element remove(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public void removeNoReturn(java.lang.Object);
    Code:
       0: return

  public boolean isTierPinned();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Set getPresentPinnedKeys();
    Code:
       0: invokestatic  #5                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public boolean isPersistent();
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element removeWithWriter(java.lang.Object, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aconst_null
       1: areturn

  public void removeAll() throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element removeElement(net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public void dispose();
    Code:
       0: return

  public int getSize();
    Code:
       0: iconst_0
       1: ireturn

  public int getInMemorySize();
    Code:
       0: iconst_0
       1: ireturn

  public int getOffHeapSize();
    Code:
       0: iconst_0
       1: ireturn

  public int getOnDiskSize();
    Code:
       0: iconst_0
       1: ireturn

  public int getTerracottaClusteredSize();
    Code:
       0: iconst_0
       1: ireturn

  public long getInMemorySizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public long getOffHeapSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public long getOnDiskSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aconst_null
       1: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyOnDisk(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyOffHeap(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyInMemory(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void expireElements();
    Code:
       0: return

  public void flush() throws java.io.IOException;
    Code:
       0: return

  public boolean bufferFull();
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.store.Policy getInMemoryEvictionPolicy();
    Code:
       0: aconst_null
       1: areturn

  public void setInMemoryEvictionPolicy(net.sf.ehcache.store.Policy);
    Code:
       0: return

  public java.lang.Object getInternalContext();
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object getMBean();
    Code:
       0: aconst_null
       1: areturn

  public void fill(net.sf.ehcache.Element);
    Code:
       0: return

  public boolean removeIfNotPinned(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #6                  // Method remove:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: return
}
