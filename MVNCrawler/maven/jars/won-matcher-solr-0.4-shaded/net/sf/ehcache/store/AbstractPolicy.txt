Compiled from "AbstractPolicy.java"
public abstract class net.sf.ehcache.store.AbstractPolicy implements net.sf.ehcache.store.Policy {
  static final int DEFAULT_SAMPLE_SIZE;

  static final java.util.Random RANDOM;

  public net.sf.ehcache.store.AbstractPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int calculateSampleSize(int);
    Code:
       0: iload_0
       1: bipush        30
       3: if_icmpge     8
       6: iload_0
       7: ireturn
       8: bipush        30
      10: ireturn

  public net.sf.ehcache.Element selectedBasedOnPolicy(net.sf.ehcache.Element[], net.sf.ehcache.Element);
    Code:
       0: aload_1
       1: arraylength
       2: iconst_1
       3: if_icmpne     10
       6: aload_1
       7: iconst_0
       8: aaload
       9: areturn
      10: aconst_null
      11: astore_3
      12: aload_1
      13: astore        4
      15: aload         4
      17: arraylength
      18: istore        5
      20: iconst_0
      21: istore        6
      23: iload         6
      25: iload         5
      27: if_icmpge     92
      30: aload         4
      32: iload         6
      34: aaload
      35: astore        7
      37: aload         7
      39: ifnonnull     45
      42: goto          86
      45: aload_3
      46: ifnonnull     64
      49: aload         7
      51: aload_2
      52: invokevirtual #2                  // Method net/sf/ehcache/Element.equals:(Ljava/lang/Object;)Z
      55: ifne          86
      58: aload         7
      60: astore_3
      61: goto          86
      64: aload_0
      65: aload_3
      66: aload         7
      68: invokevirtual #3                  // Method compare:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
      71: ifeq          86
      74: aload         7
      76: aload_2
      77: invokevirtual #2                  // Method net/sf/ehcache/Element.equals:(Ljava/lang/Object;)Z
      80: ifne          86
      83: aload         7
      85: astore_3
      86: iinc          6, 1
      89: goto          23
      92: aload_3
      93: areturn

  public static int[] generateRandomSample(int);
    Code:
       0: iload_0
       1: invokestatic  #4                  // Method calculateSampleSize:(I)I
       4: istore_1
       5: iload_1
       6: newarray       int
       8: astore_2
       9: iload_1
      10: ifeq          45
      13: iconst_0
      14: istore_3
      15: iload_0
      16: iload_1
      17: idiv
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_1
      25: if_icmpge     45
      28: aload_2
      29: iload         4
      31: getstatic     #5                  // Field RANDOM:Ljava/util/Random;
      34: iload_3
      35: invokevirtual #6                  // Method java/util/Random.nextInt:(I)I
      38: iastore
      39: iinc          4, 1
      42: goto          22
      45: aload_2
      46: areturn

  static {};
    Code:
       0: new           #7                  // class java/util/Random
       3: dup
       4: invokespecial #8                  // Method java/util/Random."<init>":()V
       7: putstatic     #5                  // Field RANDOM:Ljava/util/Random;
      10: return
}
