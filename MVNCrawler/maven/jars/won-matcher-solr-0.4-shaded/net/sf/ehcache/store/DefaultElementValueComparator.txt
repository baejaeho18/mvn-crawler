Compiled from "DefaultElementValueComparator.java"
public class net.sf.ehcache.store.DefaultElementValueComparator implements net.sf.ehcache.store.ElementValueComparator {
  private final net.sf.ehcache.config.CacheConfiguration cacheConfiguration;

  public net.sf.ehcache.store.DefaultElementValueComparator(net.sf.ehcache.config.CacheConfiguration);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       9: return

  public boolean equals(net.sf.ehcache.Element, net.sf.ehcache.Element);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: aload_2
       5: ifnonnull     10
       8: iconst_1
       9: ireturn
      10: aload_1
      11: ifnull        62
      14: aload_1
      15: aload_2
      16: invokevirtual #3                  // Method net/sf/ehcache/Element.equals:(Ljava/lang/Object;)Z
      19: ifeq          62
      22: aload_1
      23: invokevirtual #4                  // Method net/sf/ehcache/Element.getObjectValue:()Ljava/lang/Object;
      26: ifnonnull     42
      29: aload_2
      30: invokevirtual #4                  // Method net/sf/ehcache/Element.getObjectValue:()Ljava/lang/Object;
      33: ifnonnull     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn
      42: aload_0
      43: aload_1
      44: invokespecial #5                  // Method copyForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      47: invokevirtual #4                  // Method net/sf/ehcache/Element.getObjectValue:()Ljava/lang/Object;
      50: aload_0
      51: aload_2
      52: invokespecial #5                  // Method copyForReadIfNeeded:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      55: invokevirtual #4                  // Method net/sf/ehcache/Element.getObjectValue:()Ljava/lang/Object;
      58: invokestatic  #6                  // Method compareValues:(Ljava/lang/Object;Ljava/lang/Object;)Z
      61: ireturn
      62: iconst_0
      63: ireturn

  private static boolean compareValues(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: ifnull        48
       4: aload_1
       5: ifnull        48
       8: aload_0
       9: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #8                  // Method java/lang/Class.isArray:()Z
      15: ifeq          48
      18: aload_1
      19: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #8                  // Method java/lang/Class.isArray:()Z
      25: ifeq          48
      28: iconst_1
      29: anewarray     #9                  // class java/lang/Object
      32: dup
      33: iconst_0
      34: aload_0
      35: aastore
      36: iconst_1
      37: anewarray     #9                  // class java/lang/Object
      40: dup
      41: iconst_0
      42: aload_1
      43: aastore
      44: invokestatic  #10                 // Method java/util/Arrays.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z
      47: ireturn
      48: aload_0
      49: ifnonnull     62
      52: aload_1
      53: ifnonnull     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: aload_0
      63: aload_1
      64: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      67: ireturn

  private net.sf.ehcache.Element copyForReadIfNeeded(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #12                 // Method net/sf/ehcache/config/CacheConfiguration.getCopyStrategy:()Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
       7: astore_2
       8: aload_2
       9: ifnull        19
      12: aload_0
      13: invokespecial #13                 // Method skipCopyForRead:()Z
      16: ifeq          21
      19: aload_1
      20: areturn
      21: aload_2
      22: aload_1
      23: invokeinterface #14,  2           // InterfaceMethod net/sf/ehcache/store/compound/ReadWriteCopyStrategy.copyForRead:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #15                 // class net/sf/ehcache/Element
      31: areturn

  private boolean skipCopyForRead();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #16                 // Method net/sf/ehcache/config/CacheConfiguration.isCopyOnRead:()Z
       7: ifeq          20
      10: aload_0
      11: getfield      #2                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
      14: invokevirtual #17                 // Method net/sf/ehcache/config/CacheConfiguration.isCopyOnWrite:()Z
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn
}
