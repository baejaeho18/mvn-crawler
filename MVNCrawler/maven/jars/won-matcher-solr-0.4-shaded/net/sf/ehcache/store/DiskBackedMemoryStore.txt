Compiled from "DiskBackedMemoryStore.java"
public final class net.sf.ehcache.store.DiskBackedMemoryStore extends net.sf.ehcache.store.FrontEndCacheTier<net.sf.ehcache.store.MemoryStore, net.sf.ehcache.store.disk.DiskStore> {
  private net.sf.ehcache.store.DiskBackedMemoryStore(net.sf.ehcache.config.CacheConfiguration, net.sf.ehcache.store.MemoryStore, net.sf.ehcache.store.disk.DiskStore, net.sf.ehcache.search.impl.SearchManager);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: aload_1
       4: invokevirtual #1                  // Method net/sf/ehcache/config/CacheConfiguration.getCopyStrategy:()Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;
       7: aload         4
       9: aload_1
      10: invokevirtual #2                  // Method net/sf/ehcache/config/CacheConfiguration.isCopyOnWrite:()Z
      13: aload_1
      14: invokevirtual #3                  // Method net/sf/ehcache/config/CacheConfiguration.isCopyOnRead:()Z
      17: invokespecial #4                  // Method net/sf/ehcache/store/FrontEndCacheTier."<init>":(Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/TierableStore;Lnet/sf/ehcache/store/compound/ReadWriteCopyStrategy;Lnet/sf/ehcache/search/impl/SearchManager;ZZ)V
      20: return

  public static net.sf.ehcache.store.Store create(net.sf.ehcache.Ehcache, net.sf.ehcache.pool.Pool, net.sf.ehcache.pool.Pool);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method createMemoryStore:(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/MemoryStore;
       5: astore_3
       6: aload_0
       7: aload_1
       8: aload_2
       9: invokestatic  #6                  // Method createDiskStore:(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/disk/DiskStore;
      12: astore        4
      14: new           #7                  // class net/sf/ehcache/store/DiskBackedMemoryStore
      17: dup
      18: aload_0
      19: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      24: aload_3
      25: aload         4
      27: aconst_null
      28: invokespecial #9                  // Method "<init>":(Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/store/MemoryStore;Lnet/sf/ehcache/store/disk/DiskStore;Lnet/sf/ehcache/search/impl/SearchManager;)V
      31: areturn

  private static net.sf.ehcache.store.MemoryStore createMemoryStore(net.sf.ehcache.Ehcache, net.sf.ehcache.pool.Pool);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #10                 // Method net/sf/ehcache/store/MemoryStore.create:(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/MemoryStore;
       5: areturn

  private static net.sf.ehcache.store.disk.DiskStore createDiskStore(net.sf.ehcache.Ehcache, net.sf.ehcache.pool.Pool, net.sf.ehcache.pool.Pool);
    Code:
       0: aload_0
       1: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
       6: astore_3
       7: aload_3
       8: invokevirtual #11                 // Method net/sf/ehcache/config/CacheConfiguration.isOverflowToDisk:()Z
      11: ifeq          21
      14: aload_0
      15: aload_1
      16: aload_2
      17: invokestatic  #12                 // Method net/sf/ehcache/store/disk/DiskStore.create:(Lnet/sf/ehcache/Ehcache;Lnet/sf/ehcache/pool/Pool;Lnet/sf/ehcache/pool/Pool;)Lnet/sf/ehcache/store/disk/DiskStore;
      20: areturn
      21: new           #13                 // class net/sf/ehcache/CacheException
      24: dup
      25: ldc           #14                 // String DiskBackedMemoryStore can only be used when cache overflows to disk or is disk persistent
      27: invokespecial #15                 // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;)V
      30: athrow

  public java.lang.Object getMBean();
    Code:
       0: aconst_null
       1: areturn

  public boolean notifyEvictionFromCache(java.io.Serializable);
    Code:
       0: aload_0
       1: getfield      #16                 // Field authority:Lnet/sf/ehcache/store/TierableStore;
       4: checkcast     #17                 // class net/sf/ehcache/store/disk/DiskStore
       7: aload_1
       8: invokevirtual #18                 // Method net/sf/ehcache/store/disk/DiskStore.cleanUpFailedMarker:(Ljava/io/Serializable;)Z
      11: ireturn
}
