Compiled from "Cache.java"
class net.sf.ehcache.Cache$NonstopActiveDelegateHolderImpl implements net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder {
  private final net.sf.ehcache.Cache cache;

  private volatile net.sf.ehcache.constructs.nonstop.store.NonstopStoreImpl nonstopStore;

  private volatile net.sf.ehcache.store.TerracottaStore underlyingTerracottaStore;

  private volatile net.sf.ehcache.constructs.nonstop.NonstopExecutorService nonstopExecutorService;

  private volatile net.sf.ehcache.concurrent.CacheLockProvider underlyingCacheLockProvider;

  private volatile boolean nodeBulkLoadEnabled;

  private volatile net.sf.ehcache.event.CacheEventListener cacheEventReplicator;

  public net.sf.ehcache.Cache$NonstopActiveDelegateHolderImpl(net.sf.ehcache.Cache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
       9: return

  public void nodeBulkLoadChanged(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field nodeBulkLoadEnabled:Z
       5: return

  public net.sf.ehcache.constructs.nonstop.store.RejoinAwareNonstopStore getNonstopStore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nonstopStore:Lnet/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl;
       4: ifnull        12
       7: aload_0
       8: getfield      #4                  // Field nonstopStore:Lnet/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl;
      11: areturn
      12: aload_0
      13: invokespecial #5                  // Method initializeNonstopStore:()V
      16: aload_0
      17: getfield      #4                  // Field nonstopStore:Lnet/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl;
      20: areturn

  private synchronized void initializeNonstopStore();
    Code:
       0: aload_0
       1: getfield      #4                  // Field nonstopStore:Lnet/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl;
       4: ifnonnull     105
       7: aload_0
       8: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      11: invokevirtual #6                  // Method net/sf/ehcache/Cache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      14: invokevirtual #7                  // Method net/sf/ehcache/config/CacheConfiguration.isTerracottaClustered:()Z
      17: ifne          30
      20: new           #8                  // class java/lang/AssertionError
      23: dup
      24: ldc           #9                  // String NonstopStore supported for Terracotta clustered caches only
      26: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      29: athrow
      30: aload_0
      31: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      34: invokevirtual #6                  // Method net/sf/ehcache/Cache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      37: invokevirtual #11                 // Method net/sf/ehcache/config/CacheConfiguration.getTerracottaConfiguration:()Lnet/sf/ehcache/config/TerracottaConfiguration;
      40: invokevirtual #12                 // Method net/sf/ehcache/config/TerracottaConfiguration.isNonstopEnabled:()Z
      43: ifne          56
      46: new           #8                  // class java/lang/AssertionError
      49: dup
      50: ldc           #13                 // String Nonstop is not enabled
      52: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      55: athrow
      56: aload_0
      57: new           #14                 // class net/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl
      60: dup
      61: aload_0
      62: aload_0
      63: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      66: invokestatic  #15                 // Method net/sf/ehcache/Cache.access$500:(Lnet/sf/ehcache/Cache;)Lnet/sf/ehcache/cluster/CacheCluster;
      69: aload_0
      70: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      73: invokevirtual #6                  // Method net/sf/ehcache/Cache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      76: invokevirtual #11                 // Method net/sf/ehcache/config/CacheConfiguration.getTerracottaConfiguration:()Lnet/sf/ehcache/config/TerracottaConfiguration;
      79: invokevirtual #16                 // Method net/sf/ehcache/config/TerracottaConfiguration.getNonstopConfiguration:()Lnet/sf/ehcache/config/NonstopConfiguration;
      82: aload_0
      83: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      86: invokevirtual #6                  // Method net/sf/ehcache/Cache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      89: invokevirtual #17                 // Method net/sf/ehcache/config/CacheConfiguration.getTransactionalMode:()Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;
      92: aload_0
      93: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      96: invokevirtual #18                 // Method net/sf/ehcache/Cache.getTransactionManagerLookup:()Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;
      99: invokespecial #19                 // Method net/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl."<init>":(Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;Lnet/sf/ehcache/cluster/CacheCluster;Lnet/sf/ehcache/config/NonstopConfiguration;Lnet/sf/ehcache/config/CacheConfiguration$TransactionalMode;Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
     102: putfield      #4                  // Field nonstopStore:Lnet/sf/ehcache/constructs/nonstop/store/NonstopStoreImpl;
     105: return

  public synchronized void terracottaStoreInitialized(net.sf.ehcache.store.TerracottaStore);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field underlyingTerracottaStore:Lnet/sf/ehcache/store/TerracottaStore;
       5: aload_0
       6: getfield      #3                  // Field nodeBulkLoadEnabled:Z
       9: ifeq          55
      12: invokestatic  #21                 // Method net/sf/ehcache/Cache.access$200:()Lorg/slf4j/Logger;
      15: new           #22                 // class java/lang/StringBuilder
      18: dup
      19: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      22: ldc           #24                 // String Enabling bulk-load for
      24: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      31: invokevirtual #26                 // Method net/sf/ehcache/Cache.getName:()Ljava/lang/String;
      34: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #28,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      45: aload_0
      46: getfield      #20                 // Field underlyingTerracottaStore:Lnet/sf/ehcache/store/TerracottaStore;
      49: iconst_0
      50: invokeinterface #29,  2           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.setNodeCoherent:(Z)V
      55: aload_0
      56: aload_0
      57: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      60: invokevirtual #30                 // Method net/sf/ehcache/Cache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
      63: invokevirtual #31                 // Method net/sf/ehcache/CacheManager.getNonstopExecutorService:()Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
      66: putfield      #32                 // Field nonstopExecutorService:Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
      69: aload_0
      70: getfield      #20                 // Field underlyingTerracottaStore:Lnet/sf/ehcache/store/TerracottaStore;
      73: invokeinterface #33,  1           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.getInternalContext:()Ljava/lang/Object;
      78: astore_2
      79: aload_2
      80: instanceof    #34                 // class net/sf/ehcache/concurrent/CacheLockProvider
      83: ifeq          97
      86: aload_0
      87: aload_2
      88: checkcast     #34                 // class net/sf/ehcache/concurrent/CacheLockProvider
      91: putfield      #35                 // Field underlyingCacheLockProvider:Lnet/sf/ehcache/concurrent/CacheLockProvider;
      94: goto          139
      97: new           #8                  // class java/lang/AssertionError
     100: dup
     101: new           #22                 // class java/lang/StringBuilder
     104: dup
     105: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     108: ldc           #36                 // String TerracottaStore.getInternalContext() is not correct -
     110: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_2
     114: ifnonnull     122
     117: ldc           #37                 // String NULL
     119: goto          129
     122: aload_2
     123: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     126: invokevirtual #39                 // Method java/lang/Class.getName:()Ljava/lang/String;
     129: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokespecial #10                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     138: athrow
     139: aload_0
     140: aload_0
     141: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
     144: invokevirtual #30                 // Method net/sf/ehcache/Cache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
     147: aload_0
     148: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
     151: invokevirtual #40                 // Method net/sf/ehcache/CacheManager.getClusteredInstanceFactory:(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;
     154: aload_0
     155: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
     158: invokeinterface #41,  2           // InterfaceMethod net/sf/ehcache/terracotta/ClusteredInstanceFactory.createEventReplicator:(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/event/CacheEventListener;
     163: putfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
     166: return

  public net.sf.ehcache.store.TerracottaStore getUnderlyingTerracottaStore();
    Code:
       0: aload_0
       1: getfield      #20                 // Field underlyingTerracottaStore:Lnet/sf/ehcache/store/TerracottaStore;
       4: areturn

  public net.sf.ehcache.constructs.nonstop.NonstopExecutorService getNonstopExecutorService();
    Code:
       0: aload_0
       1: getfield      #32                 // Field nonstopExecutorService:Lnet/sf/ehcache/constructs/nonstop/NonstopExecutorService;
       4: areturn

  public net.sf.ehcache.concurrent.CacheLockProvider getUnderlyingCacheLockProvider();
    Code:
       0: aload_0
       1: getfield      #35                 // Field underlyingCacheLockProvider:Lnet/sf/ehcache/concurrent/CacheLockProvider;
       4: areturn

  public net.sf.ehcache.event.CacheEventListener getCacheEventReplicator();
    Code:
       0: aload_0
       1: getfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
       4: ifnull        12
       7: aload_0
       8: getfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
      11: areturn
      12: aload_0
      13: dup
      14: astore_1
      15: monitorenter
      16: aload_0
      17: getfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
      20: ifnonnull     50
      23: aload_0
      24: aload_0
      25: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      28: invokevirtual #30                 // Method net/sf/ehcache/Cache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
      31: aload_0
      32: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      35: invokevirtual #40                 // Method net/sf/ehcache/CacheManager.getClusteredInstanceFactory:(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/terracotta/ClusteredInstanceFactory;
      38: aload_0
      39: getfield      #2                  // Field cache:Lnet/sf/ehcache/Cache;
      42: invokeinterface #41,  2           // InterfaceMethod net/sf/ehcache/terracotta/ClusteredInstanceFactory.createEventReplicator:(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/event/CacheEventListener;
      47: putfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
      50: aload_0
      51: getfield      #42                 // Field cacheEventReplicator:Lnet/sf/ehcache/event/CacheEventListener;
      54: aload_1
      55: monitorexit
      56: areturn
      57: astore_2
      58: aload_1
      59: monitorexit
      60: aload_2
      61: athrow
    Exception table:
       from    to  target type
          16    56    57   any
          57    60    57   any

  public net.sf.ehcache.constructs.nonstop.store.NonstopStore getNonstopStore();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getNonstopStore:()Lnet/sf/ehcache/constructs/nonstop/store/RejoinAwareNonstopStore;
       4: areturn
}
