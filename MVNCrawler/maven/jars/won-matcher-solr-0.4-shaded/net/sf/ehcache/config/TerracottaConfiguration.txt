Compiled from "TerracottaConfiguration.java"
public class net.sf.ehcache.config.TerracottaConfiguration implements java.lang.Cloneable {
  public static final boolean DEFAULT_CLUSTERED;

  public static final net.sf.ehcache.config.TerracottaConfiguration$ValueMode DEFAULT_VALUE_MODE;

  public static final boolean DEFAULT_COHERENT_READS;

  public static final boolean DEFAULT_CACHE_XA;

  public static final boolean DEFAULT_ORPHAN_EVICTION;

  public static final int DEFAULT_ORPHAN_EVICTION_PERIOD;

  public static final boolean DEFAULT_LOCAL_KEY_CACHE;

  public static final int DEFAULT_LOCAL_KEY_CACHE_SIZE;

  public static final boolean DEFAULT_COPY_ON_READ;

  public static final boolean DEFAULT_COMPRESSION_ENABLED;

  public static final net.sf.ehcache.config.NonstopConfiguration DEFAULT_NON_STOP_CONFIGURATION;

  public static final boolean DEFAULT_CACHE_COHERENT;

  public static final net.sf.ehcache.config.TerracottaConfiguration$Consistency DEFAULT_CONSISTENCY_TYPE;

  public static final boolean DEFAULT_SYNCHRONOUS_WRITES;

  public static final int DEFAULT_CONCURRENCY;

  public static final boolean DEFAULT_LOCAL_CACHE_ENABLED;

  private static final org.slf4j.Logger LOG;

  private boolean clustered;

  private net.sf.ehcache.config.TerracottaConfiguration$ValueMode valueMode;

  private boolean coherentReads;

  private boolean orphanEviction;

  private int orphanEvictionPeriod;

  private boolean localKeyCache;

  private int localKeyCacheSize;

  private boolean isCopyOnRead;

  private boolean cacheXA;

  private boolean synchronousWrites;

  private int concurrency;

  private net.sf.ehcache.config.NonstopConfiguration nonStopConfiguration;

  private boolean copyOnReadSet;

  private net.sf.ehcache.config.TerracottaConfiguration$Consistency consistency;

  private volatile boolean localCacheEnabled;

  private volatile boolean compressionEnabled;

  public net.sf.ehcache.config.TerracottaConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field clustered:Z
       9: aload_0
      10: getstatic     #3                  // Field DEFAULT_VALUE_MODE:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
      13: putfield      #4                  // Field valueMode:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field coherentReads:Z
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field orphanEviction:Z
      26: aload_0
      27: iconst_4
      28: putfield      #7                  // Field orphanEvictionPeriod:I
      31: aload_0
      32: iconst_0
      33: putfield      #8                  // Field localKeyCache:Z
      36: aload_0
      37: ldc           #9                  // int 300000
      39: putfield      #10                 // Field localKeyCacheSize:I
      42: aload_0
      43: iconst_0
      44: putfield      #11                 // Field isCopyOnRead:Z
      47: aload_0
      48: iconst_0
      49: putfield      #12                 // Field cacheXA:Z
      52: aload_0
      53: iconst_0
      54: putfield      #13                 // Field synchronousWrites:Z
      57: aload_0
      58: iconst_0
      59: putfield      #14                 // Field concurrency:I
      62: aload_0
      63: invokestatic  #15                 // Method makeDefaultNonstopConfiguration:()Lnet/sf/ehcache/config/NonstopConfiguration;
      66: putfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
      69: aload_0
      70: getstatic     #17                 // Field DEFAULT_CONSISTENCY_TYPE:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      73: putfield      #18                 // Field consistency:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      76: aload_0
      77: iconst_1
      78: putfield      #19                 // Field localCacheEnabled:Z
      81: aload_0
      82: iconst_0
      83: putfield      #20                 // Field compressionEnabled:Z
      86: return

  public net.sf.ehcache.config.TerracottaConfiguration clone();
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #22                 // class net/sf/ehcache/config/TerracottaConfiguration
       7: astore_1
       8: aload_0
       9: getfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
      12: ifnull        27
      15: aload_1
      16: aload_0
      17: getfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
      20: invokevirtual #23                 // Method net/sf/ehcache/config/NonstopConfiguration.clone:()Lnet/sf/ehcache/config/NonstopConfiguration;
      23: invokevirtual #24                 // Method nonstop:(Lnet/sf/ehcache/config/NonstopConfiguration;)Lnet/sf/ehcache/config/TerracottaConfiguration;
      26: pop
      27: aload_1
      28: areturn
      29: astore_1
      30: new           #26                 // class java/lang/RuntimeException
      33: dup
      34: aload_1
      35: invokespecial #27                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      38: athrow
    Exception table:
       from    to  target type
           0    28    29   Class java/lang/CloneNotSupportedException

  private void assertArgumentNotNull(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     31
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #29                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #32                 // String  cannot be null
      21: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #33                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  public void setClustered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field clustered:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration clustered(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method setClustered:(Z)V
       5: aload_0
       6: areturn

  public boolean isClustered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field clustered:Z
       4: ireturn

  public void setCopyOnRead(boolean);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #37                 // String copyOnRead is deprecated on the <terracotta /> element, please use the copyOnRead attribute on <cache /> or <defaultCache />
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: aload_0
      11: iconst_1
      12: putfield      #39                 // Field copyOnReadSet:Z
      15: aload_0
      16: iload_1
      17: putfield      #11                 // Field isCopyOnRead:Z
      20: return

  public void setCompressionEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field compressionEnabled:Z
       5: return

  boolean isCopyOnReadSet();
    Code:
       0: aload_0
       1: getfield      #39                 // Field copyOnReadSet:Z
       4: ireturn

  public net.sf.ehcache.config.TerracottaConfiguration copyOnRead(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #40                 // Method setCopyOnRead:(Z)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.TerracottaConfiguration compressionEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method setCompressionEnabled:(Z)V
       5: aload_0
       6: areturn

  public boolean isCacheXA();
    Code:
       0: aload_0
       1: getfield      #12                 // Field cacheXA:Z
       4: ireturn

  public void setCacheXA(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field cacheXA:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration cacheXA(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method setCacheXA:(Z)V
       5: aload_0
       6: areturn

  public boolean isCopyOnRead();
    Code:
       0: aload_0
       1: getfield      #11                 // Field isCopyOnRead:Z
       4: ireturn

  public boolean isCompressionEnabled();
    Code:
       0: aload_0
       1: getfield      #20                 // Field compressionEnabled:Z
       4: ireturn

  public void setCoherentReads(boolean);
    Code:
       0: getstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
       3: ldc           #43                 // String The attribute \"coherentReads\" in \"terracotta\" element is deprecated. Please use the new \"coherent\" attribute instead.
       5: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;)V
      10: aload_0
      11: iload_1
      12: putfield      #5                  // Field coherentReads:Z
      15: return

  public net.sf.ehcache.config.TerracottaConfiguration coherentReads(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #44                 // Method setCoherentReads:(Z)V
       5: aload_0
       6: areturn

  public boolean getCoherentReads();
    Code:
       0: aload_0
       1: getfield      #5                  // Field coherentReads:Z
       4: ireturn

  public void setValueMode(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #45                 // String Value Mode
       3: aload_1
       4: invokespecial #46                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: ldc_w         #47                 // class net/sf/ehcache/config/TerracottaConfiguration$ValueMode
      11: aload_1
      12: invokevirtual #48                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      15: invokestatic  #49                 // Method net/sf/ehcache/config/TerracottaConfiguration$ValueMode.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      18: checkcast     #47                 // class net/sf/ehcache/config/TerracottaConfiguration$ValueMode
      21: putfield      #4                  // Field valueMode:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
      24: return

  public net.sf.ehcache.config.TerracottaConfiguration valueMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method setValueMode:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.TerracottaConfiguration valueMode(net.sf.ehcache.config.TerracottaConfiguration$ValueMode);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #51                 // String Value mode must be non-null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field valueMode:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
      19: aload_0
      20: areturn

  public net.sf.ehcache.config.TerracottaConfiguration$ValueMode getValueMode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field valueMode:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
       4: areturn

  public void setOrphanEviction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field orphanEviction:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration orphanEviction(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #52                 // Method setOrphanEviction:(Z)V
       5: aload_0
       6: areturn

  public boolean getOrphanEviction();
    Code:
       0: aload_0
       1: getfield      #6                  // Field orphanEviction:Z
       4: ireturn

  public void setOrphanEvictionPeriod(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field orphanEvictionPeriod:I
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration orphanEvictionPeriod(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #53                 // Method setOrphanEvictionPeriod:(I)V
       5: aload_0
       6: areturn

  public int getOrphanEvictionPeriod();
    Code:
       0: aload_0
       1: getfield      #7                  // Field orphanEvictionPeriod:I
       4: ireturn

  public void setLocalKeyCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field localKeyCache:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration localKeyCache(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #54                 // Method setLocalKeyCache:(Z)V
       5: aload_0
       6: areturn

  public boolean getLocalKeyCache();
    Code:
       0: aload_0
       1: getfield      #8                  // Field localKeyCache:Z
       4: ireturn

  public void setLocalKeyCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #10                 // Field localKeyCacheSize:I
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration localKeyCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #55                 // Method setLocalKeyCacheSize:(I)V
       5: aload_0
       6: areturn

  public int getLocalKeyCacheSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field localKeyCacheSize:I
       4: ireturn

  public void setCoherent(boolean);
    Code:
       0: iload_1
       1: ifeq          10
       4: getstatic     #56                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.STRONG:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       7: goto          13
      10: getstatic     #57                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.EVENTUAL:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #58                 // Method consistency:(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)Lnet/sf/ehcache/config/TerracottaConfiguration;
      19: pop
      20: return

  public net.sf.ehcache.config.TerracottaConfiguration coherent(boolean);
    Code:
       0: iload_1
       1: ifeq          10
       4: getstatic     #56                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.STRONG:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       7: goto          13
      10: getstatic     #57                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.EVENTUAL:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      13: astore_2
      14: aload_0
      15: aload_2
      16: invokevirtual #58                 // Method consistency:(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)Lnet/sf/ehcache/config/TerracottaConfiguration;
      19: pop
      20: aload_0
      21: areturn

  public boolean isCoherent();
    Code:
       0: aload_0
       1: getfield      #18                 // Field consistency:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       4: getstatic     #56                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.STRONG:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isSynchronousWrites();
    Code:
       0: aload_0
       1: getfield      #13                 // Field synchronousWrites:Z
       4: ireturn

  public void setSynchronousWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field synchronousWrites:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration synchronousWrites(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #59                 // Method setSynchronousWrites:(Z)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.TerracottaConfiguration concurrency(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setConcurrency:(I)V
       5: aload_0
       6: areturn

  public void setConcurrency(int);
    Code:
       0: iload_1
       1: ifge          14
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #61                 // String Only non-negative integers allowed
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: iload_1
      16: putfield      #14                 // Field concurrency:I
      19: return

  public int getConcurrency();
    Code:
       0: aload_0
       1: getfield      #14                 // Field concurrency:I
       4: ireturn

  public void addNonstop(net.sf.ehcache.config.NonstopConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration nonstop(net.sf.ehcache.config.NonstopConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method addNonstop:(Lnet/sf/ehcache/config/NonstopConfiguration;)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.NonstopConfiguration getNonstopConfiguration();
    Code:
       0: aload_0
       1: getfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
       4: areturn

  public boolean isNonstopEnabled();
    Code:
       0: aload_0
       1: getfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
       4: ifnull        21
       7: aload_0
       8: getfield      #16                 // Field nonStopConfiguration:Lnet/sf/ehcache/config/NonstopConfiguration;
      11: invokevirtual #63                 // Method net/sf/ehcache/config/NonstopConfiguration.isEnabled:()Z
      14: ifeq          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public net.sf.ehcache.config.TerracottaConfiguration consistency(net.sf.ehcache.config.TerracottaConfiguration$Consistency);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #64                 // Method setConsistency:(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)V
       5: aload_0
       6: areturn

  public void setConsistency(net.sf.ehcache.config.TerracottaConfiguration$Consistency);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field consistency:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       5: return

  public void setConsistency(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #28                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #65                 // String Consistency cannot be null
      10: invokespecial #34                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: invokevirtual #48                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      19: invokestatic  #66                 // Method net/sf/ehcache/config/TerracottaConfiguration$Consistency.valueOf:(Ljava/lang/String;)Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      22: invokevirtual #64                 // Method setConsistency:(Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;)V
      25: return

  public net.sf.ehcache.config.TerracottaConfiguration$Consistency getConsistency();
    Code:
       0: aload_0
       1: getfield      #18                 // Field consistency:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       4: areturn

  public boolean isLocalCacheEnabled();
    Code:
       0: aload_0
       1: getfield      #19                 // Field localCacheEnabled:Z
       4: ireturn

  public void setLocalCacheEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field localCacheEnabled:Z
       5: return

  public net.sf.ehcache.config.TerracottaConfiguration localCacheEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #67                 // Method setLocalCacheEnabled:(Z)V
       5: aload_0
       6: areturn

  private static net.sf.ehcache.config.NonstopConfiguration makeDefaultNonstopConfiguration();
    Code:
       0: new           #68                 // class net/sf/ehcache/config/NonstopConfiguration
       3: dup
       4: invokespecial #69                 // Method net/sf/ehcache/config/NonstopConfiguration."<init>":()V
       7: iconst_0
       8: invokevirtual #70                 // Method net/sf/ehcache/config/NonstopConfiguration.enabled:(Z)Lnet/sf/ehcache/config/NonstopConfiguration;
      11: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #71                 // Method clone:()Lnet/sf/ehcache/config/TerracottaConfiguration;
       4: areturn

  static {};
    Code:
       0: getstatic     #72                 // Field net/sf/ehcache/config/TerracottaConfiguration$ValueMode.SERIALIZATION:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
       3: putstatic     #3                  // Field DEFAULT_VALUE_MODE:Lnet/sf/ehcache/config/TerracottaConfiguration$ValueMode;
       6: invokestatic  #15                 // Method makeDefaultNonstopConfiguration:()Lnet/sf/ehcache/config/NonstopConfiguration;
       9: putstatic     #73                 // Field DEFAULT_NON_STOP_CONFIGURATION:Lnet/sf/ehcache/config/NonstopConfiguration;
      12: getstatic     #57                 // Field net/sf/ehcache/config/TerracottaConfiguration$Consistency.EVENTUAL:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      15: putstatic     #17                 // Field DEFAULT_CONSISTENCY_TYPE:Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
      18: ldc_w         #22                 // class net/sf/ehcache/config/TerracottaConfiguration
      21: invokevirtual #74                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokestatic  #75                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/String;)Lorg/slf4j/Logger;
      27: putstatic     #36                 // Field LOG:Lorg/slf4j/Logger;
      30: return
}
