Compiled from "CacheWriterConfiguration.java"
public class net.sf.ehcache.config.CacheWriterConfiguration implements java.lang.Cloneable {
  public static final net.sf.ehcache.config.CacheWriterConfiguration$WriteMode DEFAULT_WRITE_MODE;

  public static final boolean DEFAULT_NOTIFY_LISTENERS_ON_EXCEPTION;

  public static final int DEFAULT_MIN_WRITE_DELAY;

  public static final int DEFAULT_MAX_WRITE_DELAY;

  public static final int DEFAULT_RATE_LIMIT_PER_SECOND;

  public static final boolean DEFAULT_WRITE_COALESCING;

  public static final boolean DEFAULT_WRITE_BATCHING;

  public static final int DEFAULT_WRITE_BATCH_SIZE;

  public static final int DEFAULT_RETRY_ATTEMPTS;

  public static final int DEFAULT_RETRY_ATTEMPT_DELAY_SECONDS;

  public static final int DEFAULT_WRITE_BEHIND_CONCURRENCY;

  public static final int DEFAULT_WRITE_BEHIND_MAX_QUEUE_SIZE;

  private net.sf.ehcache.config.CacheWriterConfiguration$WriteMode writeMode;

  private boolean notifyListenersOnException;

  private int minWriteDelay;

  private int maxWriteDelay;

  private int rateLimitPerSecond;

  private boolean writeCoalescing;

  private boolean writeBatching;

  private int writeBatchSize;

  private int retryAttempts;

  private int retryAttemptDelaySeconds;

  private int writeBehindConcurrency;

  private int writeBehindMaxQueueSize;

  private net.sf.ehcache.config.CacheWriterConfiguration$CacheWriterFactoryConfiguration cacheWriterFactoryConfiguration;

  public net.sf.ehcache.config.CacheWriterConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field DEFAULT_WRITE_MODE:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       8: putfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field notifyListenersOnException:Z
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field minWriteDelay:I
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field maxWriteDelay:I
      26: aload_0
      27: iconst_0
      28: putfield      #7                  // Field rateLimitPerSecond:I
      31: aload_0
      32: iconst_0
      33: putfield      #8                  // Field writeCoalescing:Z
      36: aload_0
      37: iconst_0
      38: putfield      #9                  // Field writeBatching:Z
      41: aload_0
      42: iconst_1
      43: putfield      #10                 // Field writeBatchSize:I
      46: aload_0
      47: iconst_0
      48: putfield      #11                 // Field retryAttempts:I
      51: aload_0
      52: iconst_1
      53: putfield      #12                 // Field retryAttemptDelaySeconds:I
      56: aload_0
      57: iconst_1
      58: putfield      #13                 // Field writeBehindConcurrency:I
      61: aload_0
      62: iconst_0
      63: putfield      #14                 // Field writeBehindMaxQueueSize:I
      66: return

  public net.sf.ehcache.config.CacheWriterConfiguration clone();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #16                 // class net/sf/ehcache/config/CacheWriterConfiguration
       7: astore_1
       8: goto          21
      11: astore_2
      12: new           #18                 // class java/lang/RuntimeException
      15: dup
      16: aload_2
      17: invokespecial #19                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/Throwable;)V
      20: athrow
      21: aload_0
      22: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      25: ifnull        42
      28: aload_1
      29: aload_0
      30: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      33: invokevirtual #21                 // Method net/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration.clone:()Lnet/sf/ehcache/config/FactoryConfiguration;
      36: checkcast     #22                 // class net/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration
      39: putfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      42: aload_1
      43: areturn
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/CloneNotSupportedException

  public void setWriteMode(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #23                 // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #24                 // String WriteMode can\'t be null
      10: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: ldc_w         #26                 // class net/sf/ehcache/config/CacheWriterConfiguration$WriteMode
      18: aload_1
      19: bipush        45
      21: bipush        95
      23: invokevirtual #27                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      26: invokevirtual #28                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      29: invokestatic  #29                 // Method net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      32: checkcast     #26                 // class net/sf/ehcache/config/CacheWriterConfiguration$WriteMode
      35: putfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
      38: return

  public net.sf.ehcache.config.CacheWriterConfiguration writeMode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #30                 // Method setWriteMode:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.CacheWriterConfiguration writeMode(net.sf.ehcache.config.CacheWriterConfiguration$WriteMode);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #23                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #24                 // String WriteMode can\'t be null
      11: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: aload_0
      16: aload_1
      17: putfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
      20: aload_0
      21: areturn

  public net.sf.ehcache.config.CacheWriterConfiguration$WriteMode getWriteMode();
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       4: areturn

  public void setNotifyListenersOnException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field notifyListenersOnException:Z
       5: return

  public net.sf.ehcache.config.CacheWriterConfiguration notifyListenersOnException(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #31                 // Method setNotifyListenersOnException:(Z)V
       5: aload_0
       6: areturn

  public boolean getNotifyListenersOnException();
    Code:
       0: aload_0
       1: getfield      #4                  // Field notifyListenersOnException:Z
       4: ireturn

  public void setMinWriteDelay(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #5                  // Field minWriteDelay:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #5                  // Field minWriteDelay:I
      17: return

  public net.sf.ehcache.config.CacheWriterConfiguration minWriteDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #32                 // Method setMinWriteDelay:(I)V
       5: aload_0
       6: areturn

  public int getMinWriteDelay();
    Code:
       0: aload_0
       1: getfield      #5                  // Field minWriteDelay:I
       4: ireturn

  public void setMaxWriteDelay(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #6                  // Field maxWriteDelay:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #6                  // Field maxWriteDelay:I
      17: return

  public net.sf.ehcache.config.CacheWriterConfiguration maxWriteDelay(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #33                 // Method setMaxWriteDelay:(I)V
       5: aload_0
       6: areturn

  public int getMaxWriteDelay();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxWriteDelay:I
       4: ireturn

  public void setRateLimitPerSecond(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #7                  // Field rateLimitPerSecond:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #7                  // Field rateLimitPerSecond:I
      17: return

  public net.sf.ehcache.config.CacheWriterConfiguration rateLimitPerSecond(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #34                 // Method setRateLimitPerSecond:(I)V
       5: aload_0
       6: areturn

  public int getRateLimitPerSecond();
    Code:
       0: aload_0
       1: getfield      #7                  // Field rateLimitPerSecond:I
       4: ireturn

  public void setWriteCoalescing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field writeCoalescing:Z
       5: return

  public net.sf.ehcache.config.CacheWriterConfiguration writeCoalescing(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #35                 // Method setWriteCoalescing:(Z)V
       5: aload_0
       6: areturn

  public boolean getWriteCoalescing();
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeCoalescing:Z
       4: ireturn

  public void setWriteBatching(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #9                  // Field writeBatching:Z
       5: return

  public net.sf.ehcache.config.CacheWriterConfiguration writeBatching(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #36                 // Method setWriteBatching:(Z)V
       5: aload_0
       6: areturn

  public boolean getWriteBatching();
    Code:
       0: aload_0
       1: getfield      #9                  // Field writeBatching:Z
       4: ireturn

  public void setWriteBatchSize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     13
       5: aload_0
       6: iconst_1
       7: putfield      #10                 // Field writeBatchSize:I
      10: goto          18
      13: aload_0
      14: iload_1
      15: putfield      #10                 // Field writeBatchSize:I
      18: return

  public net.sf.ehcache.config.CacheWriterConfiguration writeBatchSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method setWriteBatchSize:(I)V
       5: aload_0
       6: areturn

  public int getWriteBatchSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field writeBatchSize:I
       4: ireturn

  public void setRetryAttempts(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #11                 // Field retryAttempts:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #11                 // Field retryAttempts:I
      17: return

  public net.sf.ehcache.config.CacheWriterConfiguration retryAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #38                 // Method setRetryAttempts:(I)V
       5: aload_0
       6: areturn

  public int getRetryAttempts();
    Code:
       0: aload_0
       1: getfield      #11                 // Field retryAttempts:I
       4: ireturn

  public void setRetryAttemptDelaySeconds(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #12                 // Field retryAttemptDelaySeconds:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #12                 // Field retryAttemptDelaySeconds:I
      17: return

  public net.sf.ehcache.config.CacheWriterConfiguration retryAttemptDelaySeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #39                 // Method setRetryAttemptDelaySeconds:(I)V
       5: aload_0
       6: areturn

  public int getRetryAttemptDelaySeconds();
    Code:
       0: aload_0
       1: getfield      #12                 // Field retryAttemptDelaySeconds:I
       4: ireturn

  public final void addCacheWriterFactory(net.sf.ehcache.config.CacheWriterConfiguration$CacheWriterFactoryConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
       5: return

  public net.sf.ehcache.config.CacheWriterConfiguration cacheWriterFactory(net.sf.ehcache.config.CacheWriterConfiguration$CacheWriterFactoryConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method addCacheWriterFactory:(Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;)V
       5: aload_0
       6: areturn

  public net.sf.ehcache.config.CacheWriterConfiguration$CacheWriterFactoryConfiguration getCacheWriterFactoryConfiguration();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
       4: areturn

  public void setWriteBehindConcurrency(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpge     13
       5: aload_0
       6: iconst_1
       7: putfield      #13                 // Field writeBehindConcurrency:I
      10: goto          18
      13: aload_0
      14: iload_1
      15: putfield      #13                 // Field writeBehindConcurrency:I
      18: return

  public net.sf.ehcache.config.CacheWriterConfiguration writeBehindConcurrency(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #41                 // Method setWriteBehindConcurrency:(I)V
       5: aload_0
       6: areturn

  public int getWriteBehindConcurrency();
    Code:
       0: aload_0
       1: getfield      #13                 // Field writeBehindConcurrency:I
       4: ireturn

  public void setWriteBehindMaxQueueSize(int);
    Code:
       0: iload_1
       1: ifge          12
       4: aload_0
       5: iconst_0
       6: putfield      #14                 // Field writeBehindMaxQueueSize:I
       9: goto          17
      12: aload_0
      13: iload_1
      14: putfield      #14                 // Field writeBehindMaxQueueSize:I
      17: return

  public int getWriteBehindMaxQueueSize();
    Code:
       0: aload_0
       1: getfield      #14                 // Field writeBehindMaxQueueSize:I
       4: ireturn

  public net.sf.ehcache.config.CacheWriterConfiguration writeBehindMaxQueueSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #42                 // Method setWriteBehindMaxQueueSize:(I)V
       5: aload_0
       6: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: sipush        1231
       6: istore_2
       7: sipush        1237
      10: istore_3
      11: iconst_1
      12: istore        4
      14: bipush        31
      16: iload         4
      18: imul
      19: aload_0
      20: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      23: ifnonnull     30
      26: iconst_0
      27: goto          37
      30: aload_0
      31: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      34: invokevirtual #43                 // Method net/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration.hashCode:()I
      37: iadd
      38: istore        4
      40: bipush        31
      42: iload         4
      44: imul
      45: aload_0
      46: getfield      #6                  // Field maxWriteDelay:I
      49: iadd
      50: istore        4
      52: bipush        31
      54: iload         4
      56: imul
      57: aload_0
      58: getfield      #5                  // Field minWriteDelay:I
      61: iadd
      62: istore        4
      64: bipush        31
      66: iload         4
      68: imul
      69: aload_0
      70: getfield      #4                  // Field notifyListenersOnException:Z
      73: ifeq          82
      76: sipush        1231
      79: goto          85
      82: sipush        1237
      85: iadd
      86: istore        4
      88: bipush        31
      90: iload         4
      92: imul
      93: aload_0
      94: getfield      #7                  // Field rateLimitPerSecond:I
      97: iadd
      98: istore        4
     100: bipush        31
     102: iload         4
     104: imul
     105: aload_0
     106: getfield      #12                 // Field retryAttemptDelaySeconds:I
     109: iadd
     110: istore        4
     112: bipush        31
     114: iload         4
     116: imul
     117: aload_0
     118: getfield      #11                 // Field retryAttempts:I
     121: iadd
     122: istore        4
     124: bipush        31
     126: iload         4
     128: imul
     129: aload_0
     130: getfield      #10                 // Field writeBatchSize:I
     133: iadd
     134: istore        4
     136: bipush        31
     138: iload         4
     140: imul
     141: aload_0
     142: getfield      #9                  // Field writeBatching:Z
     145: ifeq          154
     148: sipush        1231
     151: goto          157
     154: sipush        1237
     157: iadd
     158: istore        4
     160: bipush        31
     162: iload         4
     164: imul
     165: aload_0
     166: getfield      #8                  // Field writeCoalescing:Z
     169: ifeq          178
     172: sipush        1231
     175: goto          181
     178: sipush        1237
     181: iadd
     182: istore        4
     184: bipush        31
     186: iload         4
     188: imul
     189: aload_0
     190: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     193: ifnonnull     200
     196: iconst_0
     197: goto          207
     200: aload_0
     201: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     204: invokevirtual #44                 // Method net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.hashCode:()I
     207: iadd
     208: istore        4
     210: bipush        31
     212: iload         4
     214: imul
     215: aload_0
     216: getfield      #13                 // Field writeBehindConcurrency:I
     219: iadd
     220: istore        4
     222: iload         4
     224: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #45                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #16                 // class net/sf/ehcache/config/CacheWriterConfiguration
      30: astore_2
      31: aload_0
      32: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      51: aload_2
      52: getfield      #20                 // Field cacheWriterFactoryConfiguration:Lnet/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration;
      55: invokevirtual #46                 // Method net/sf/ehcache/config/CacheWriterConfiguration$CacheWriterFactoryConfiguration.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #6                  // Field maxWriteDelay:I
      67: aload_2
      68: getfield      #6                  // Field maxWriteDelay:I
      71: if_icmpeq     76
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #5                  // Field minWriteDelay:I
      80: aload_2
      81: getfield      #5                  // Field minWriteDelay:I
      84: if_icmpeq     89
      87: iconst_0
      88: ireturn
      89: aload_0
      90: getfield      #4                  // Field notifyListenersOnException:Z
      93: aload_2
      94: getfield      #4                  // Field notifyListenersOnException:Z
      97: if_icmpeq     102
     100: iconst_0
     101: ireturn
     102: aload_0
     103: getfield      #7                  // Field rateLimitPerSecond:I
     106: aload_2
     107: getfield      #7                  // Field rateLimitPerSecond:I
     110: if_icmpeq     115
     113: iconst_0
     114: ireturn
     115: aload_0
     116: getfield      #12                 // Field retryAttemptDelaySeconds:I
     119: aload_2
     120: getfield      #12                 // Field retryAttemptDelaySeconds:I
     123: if_icmpeq     128
     126: iconst_0
     127: ireturn
     128: aload_0
     129: getfield      #11                 // Field retryAttempts:I
     132: aload_2
     133: getfield      #11                 // Field retryAttempts:I
     136: if_icmpeq     141
     139: iconst_0
     140: ireturn
     141: aload_0
     142: getfield      #10                 // Field writeBatchSize:I
     145: aload_2
     146: getfield      #10                 // Field writeBatchSize:I
     149: if_icmpeq     154
     152: iconst_0
     153: ireturn
     154: aload_0
     155: getfield      #9                  // Field writeBatching:Z
     158: aload_2
     159: getfield      #9                  // Field writeBatching:Z
     162: if_icmpeq     167
     165: iconst_0
     166: ireturn
     167: aload_0
     168: getfield      #8                  // Field writeCoalescing:Z
     171: aload_2
     172: getfield      #8                  // Field writeCoalescing:Z
     175: if_icmpeq     180
     178: iconst_0
     179: ireturn
     180: aload_0
     181: getfield      #13                 // Field writeBehindConcurrency:I
     184: aload_2
     185: getfield      #13                 // Field writeBehindConcurrency:I
     188: if_icmpeq     193
     191: iconst_0
     192: ireturn
     193: aload_0
     194: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     197: ifnonnull     209
     200: aload_2
     201: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     204: ifnull        225
     207: iconst_0
     208: ireturn
     209: aload_0
     210: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     213: aload_2
     214: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
     217: invokevirtual #47                 // Method net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.equals:(Ljava/lang/Object;)Z
     220: ifne          225
     223: iconst_0
     224: ireturn
     225: iconst_1
     226: ireturn

  public void validate(java.util.Collection<net.sf.ehcache.config.ConfigError>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field writeMode:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       4: getstatic     #48                 // Field net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.WRITE_BEHIND:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       7: invokevirtual #47                 // Method net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.equals:(Ljava/lang/Object;)Z
      10: ifeq          44
      13: aload_0
      14: invokevirtual #49                 // Method getWriteBatching:()Z
      17: ifne          44
      20: aload_0
      21: invokevirtual #50                 // Method getWriteBatchSize:()I
      24: iconst_1
      25: if_icmpeq     44
      28: aload_1
      29: new           #51                 // class net/sf/ehcache/config/ConfigError
      32: dup
      33: ldc           #52                 // String Write Batch Size !=1 with Write Batching turned off.
      35: invokespecial #53                 // Method net/sf/ehcache/config/ConfigError."<init>":(Ljava/lang/String;)V
      38: invokeinterface #54,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      43: pop
      44: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method clone:()Lnet/sf/ehcache/config/CacheWriterConfiguration;
       4: areturn

  static {};
    Code:
       0: getstatic     #56                 // Field net/sf/ehcache/config/CacheWriterConfiguration$WriteMode.WRITE_THROUGH:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       3: putstatic     #2                  // Field DEFAULT_WRITE_MODE:Lnet/sf/ehcache/config/CacheWriterConfiguration$WriteMode;
       6: return
}
