Compiled from "Configuration.java"
public final class net.sf.ehcache.config.Configuration {
  public static final boolean DEFAULT_DYNAMIC_CONFIG;

  public static final boolean DEFAULT_UPDATE_CHECK;

  public static final int DEFAULT_TRANSACTION_TIMEOUT;

  public static final long DEFAULT_MAX_BYTES_ON_HEAP;

  public static final long DEFAULT_MAX_BYTES_OFF_HEAP;

  public static final long DEFAULT_MAX_BYTES_ON_DISK;

  public static final net.sf.ehcache.config.Configuration$Monitoring DEFAULT_MONITORING;

  public static final net.sf.ehcache.config.SizeOfPolicyConfiguration DEFAULT_SIZEOF_POLICY_CONFIGURATION;

  public static final net.sf.ehcache.config.FactoryConfiguration DEFAULT_TRANSACTION_MANAGER_LOOKUP_CONFIG;

  private static final int HUNDRED;

  private static final org.slf4j.Logger LOG;

  private volatile net.sf.ehcache.config.Configuration$RuntimeCfg cfg;

  private final java.util.List<java.beans.PropertyChangeListener> propertyChangeListeners;

  private java.lang.String cacheManagerName;

  private boolean updateCheck;

  private int defaultTransactionTimeoutInSeconds;

  private net.sf.ehcache.config.Configuration$Monitoring monitoring;

  private net.sf.ehcache.config.DiskStoreConfiguration diskStoreConfiguration;

  private net.sf.ehcache.config.CacheConfiguration defaultCacheConfiguration;

  private final java.util.List<net.sf.ehcache.config.FactoryConfiguration> cacheManagerPeerProviderFactoryConfiguration;

  private final java.util.List<net.sf.ehcache.config.FactoryConfiguration> cacheManagerPeerListenerFactoryConfiguration;

  private net.sf.ehcache.config.SizeOfPolicyConfiguration sizeOfPolicyConfiguration;

  private net.sf.ehcache.config.FactoryConfiguration transactionManagerLookupConfiguration;

  private net.sf.ehcache.config.FactoryConfiguration cacheManagerEventListenerFactoryConfiguration;

  private net.sf.ehcache.config.TerracottaClientConfiguration terracottaConfigConfiguration;

  private net.sf.ehcache.config.ManagementRESTServiceConfiguration managementRESTService;

  private final java.util.Map<java.lang.String, net.sf.ehcache.config.CacheConfiguration> cacheConfigurations;

  private net.sf.ehcache.config.generator.ConfigurationSource configurationSource;

  private boolean dynamicConfig;

  private java.lang.Long maxBytesLocalHeap;

  private java.lang.String maxBytesLocalHeapInput;

  private java.lang.Long maxBytesLocalOffHeap;

  private java.lang.String maxBytesLocalOffHeapInput;

  private java.lang.Long maxBytesLocalDisk;

  private java.lang.String maxBytesLocalDiskInput;

  public net.sf.ehcache.config.Configuration();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #7                  // class java/util/concurrent/CopyOnWriteArrayList
       8: dup
       9: invokespecial #8                  // Method java/util/concurrent/CopyOnWriteArrayList."<init>":()V
      12: putfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
      15: aload_0
      16: iconst_1
      17: putfield      #9                  // Field updateCheck:Z
      20: aload_0
      21: bipush        15
      23: putfield      #10                 // Field defaultTransactionTimeoutInSeconds:I
      26: aload_0
      27: getstatic     #11                 // Field DEFAULT_MONITORING:Lnet/sf/ehcache/config/Configuration$Monitoring;
      30: putfield      #12                 // Field monitoring:Lnet/sf/ehcache/config/Configuration$Monitoring;
      33: aload_0
      34: new           #13                 // class java/util/ArrayList
      37: dup
      38: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      41: putfield      #15                 // Field cacheManagerPeerProviderFactoryConfiguration:Ljava/util/List;
      44: aload_0
      45: new           #13                 // class java/util/ArrayList
      48: dup
      49: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      52: putfield      #16                 // Field cacheManagerPeerListenerFactoryConfiguration:Ljava/util/List;
      55: aload_0
      56: new           #17                 // class java/util/concurrent/ConcurrentHashMap
      59: dup
      60: invokespecial #18                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      63: putfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
      66: aload_0
      67: iconst_1
      68: putfield      #19                 // Field dynamicConfig:Z
      71: return

  static java.util.Set<net.sf.ehcache.Cache> getAllActiveCaches(net.sf.ehcache.CacheManager);
    Code:
       0: new           #20                 // class java/util/HashSet
       3: dup
       4: invokespecial #21                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #22                 // Method net/sf/ehcache/CacheManager.getCacheNames:()[Ljava/lang/String;
      12: astore_2
      13: aload_2
      14: arraylength
      15: istore_3
      16: iconst_0
      17: istore        4
      19: iload         4
      21: iload_3
      22: if_icmpge     59
      25: aload_2
      26: iload         4
      28: aaload
      29: astore        5
      31: aload_0
      32: aload         5
      34: invokevirtual #23                 // Method net/sf/ehcache/CacheManager.getCache:(Ljava/lang/String;)Lnet/sf/ehcache/Cache;
      37: astore        6
      39: aload         6
      41: ifnull        53
      44: aload_1
      45: aload         6
      47: invokeinterface #24,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      52: pop
      53: iinc          4, 1
      56: goto          19
      59: aload_1
      60: areturn

  public net.sf.ehcache.config.Configuration$RuntimeCfg setupFor(net.sf.ehcache.CacheManager, java.lang.String) throws net.sf.ehcache.config.InvalidConfigurationException;
    Code:
       0: aload_0
       1: getfield      #25                 // Field cfg:Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
       4: ifnull        12
       7: aload_0
       8: getfield      #25                 // Field cfg:Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
      11: areturn
      12: aload_0
      13: invokevirtual #26                 // Method validate:()Ljava/util/Collection;
      16: astore_3
      17: aload_3
      18: invokeinterface #27,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      23: ifne          35
      26: new           #28                 // class net/sf/ehcache/config/InvalidConfigurationException
      29: dup
      30: aload_3
      31: invokespecial #29                 // Method net/sf/ehcache/config/InvalidConfigurationException."<init>":(Ljava/util/Collection;)V
      34: athrow
      35: aload_0
      36: new           #30                 // class net/sf/ehcache/config/Configuration$RuntimeCfg
      39: dup
      40: aload_0
      41: aload_1
      42: aload_2
      43: invokespecial #31                 // Method net/sf/ehcache/config/Configuration$RuntimeCfg."<init>":(Lnet/sf/ehcache/config/Configuration;Lnet/sf/ehcache/CacheManager;Ljava/lang/String;)V
      46: putfield      #25                 // Field cfg:Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
      49: aload_0
      50: getfield      #25                 // Field cfg:Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
      53: areturn

  public java.util.Collection<net.sf.ehcache.config.ConfigError> validate();
    Code:
       0: new           #13                 // class java/util/ArrayList
       3: dup
       4: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          57
      32: aload_2
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #36                 // class net/sf/ehcache/config/CacheConfiguration
      41: astore_3
      42: aload_1
      43: aload_3
      44: aload_0
      45: invokevirtual #37                 // Method net/sf/ehcache/config/CacheConfiguration.validate:(Lnet/sf/ehcache/config/Configuration;)Ljava/util/Collection;
      48: invokeinterface #38,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: goto          23
      57: aload_1
      58: areturn

  public boolean isMaxBytesLocalDiskSet();
    Code:
       0: aload_0
       1: getfield      #39                 // Field maxBytesLocalDisk:Ljava/lang/Long;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isMaxBytesLocalOffHeapSet();
    Code:
       0: aload_0
       1: getfield      #40                 // Field maxBytesLocalOffHeap:Ljava/lang/Long;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean isMaxBytesLocalHeapSet();
    Code:
       0: aload_0
       1: getfield      #41                 // Field maxBytesLocalHeap:Ljava/lang/Long;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private static net.sf.ehcache.config.FactoryConfiguration getDefaultTransactionManagerLookupConfiguration();
    Code:
       0: new           #42                 // class net/sf/ehcache/config/FactoryConfiguration
       3: dup
       4: invokespecial #43                 // Method net/sf/ehcache/config/FactoryConfiguration."<init>":()V
       7: astore_0
       8: aload_0
       9: ldc_w         #44                 // class net/sf/ehcache/transaction/manager/DefaultTransactionManagerLookup
      12: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      15: invokevirtual #46                 // Method net/sf/ehcache/config/FactoryConfiguration.setClass:(Ljava/lang/String;)V
      18: aload_0
      19: areturn

  public final net.sf.ehcache.config.Configuration name(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #47                 // Method setName:(Ljava/lang/String;)V
       5: aload_0
       6: areturn

  public final void setName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #48                 // String name
       3: aload_1
       4: invokespecial #49                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: ldc           #50                 // String cacheManagerName
       9: astore_2
      10: aload_0
      11: ldc           #50                 // String cacheManagerName
      13: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      16: istore_3
      17: aload_0
      18: getfield      #4                  // Field cacheManagerName:Ljava/lang/String;
      21: astore        4
      23: aload_0
      24: aload_1
      25: putfield      #4                  // Field cacheManagerName:Ljava/lang/String;
      28: iload_3
      29: ifeq          41
      32: aload_0
      33: ldc           #50                 // String cacheManagerName
      35: aload         4
      37: aload_1
      38: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      41: return

  private void assertArgumentNotNull(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: ifnonnull     31
       4: new           #53                 // class java/lang/IllegalArgumentException
       7: dup
       8: new           #54                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_1
      16: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #57                 // String  cannot be null
      21: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      30: athrow
      31: return

  public final java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheManagerName:Ljava/lang/String;
       4: areturn

  public final net.sf.ehcache.config.Configuration updateCheck(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #60                 // Method setUpdateCheck:(Z)V
       5: aload_0
       6: areturn

  public final void setUpdateCheck(boolean);
    Code:
       0: ldc           #61                 // String updateCheck
       2: astore_2
       3: aload_0
       4: aload_2
       5: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       8: istore_3
       9: aload_0
      10: getfield      #9                  // Field updateCheck:Z
      13: istore        4
      15: aload_0
      16: iload_1
      17: putfield      #9                  // Field updateCheck:Z
      20: iload_3
      21: ifeq          38
      24: aload_0
      25: aload_2
      26: iload         4
      28: invokestatic  #62                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: iload_1
      32: invokestatic  #62                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: return

  public final boolean getUpdateCheck();
    Code:
       0: aload_0
       1: getfield      #9                  // Field updateCheck:Z
       4: ireturn

  public final net.sf.ehcache.config.Configuration defaultTransactionTimeoutInSeconds(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #63                 // Method setDefaultTransactionTimeoutInSeconds:(I)V
       5: aload_0
       6: areturn

  public final void setDefaultTransactionTimeoutInSeconds(int);
    Code:
       0: ldc           #64                 // String defaultTransactionTimeoutInSeconds
       2: astore_2
       3: aload_0
       4: ldc           #64                 // String defaultTransactionTimeoutInSeconds
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aload_0
      11: getfield      #10                 // Field defaultTransactionTimeoutInSeconds:I
      14: istore        4
      16: aload_0
      17: iload_1
      18: putfield      #10                 // Field defaultTransactionTimeoutInSeconds:I
      21: iload_3
      22: ifeq          40
      25: aload_0
      26: ldc           #64                 // String defaultTransactionTimeoutInSeconds
      28: iload         4
      30: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: iload_1
      34: invokestatic  #65                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      37: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: return

  public final int getDefaultTransactionTimeoutInSeconds();
    Code:
       0: aload_0
       1: getfield      #10                 // Field defaultTransactionTimeoutInSeconds:I
       4: ireturn

  public final net.sf.ehcache.config.Configuration monitoring(net.sf.ehcache.config.Configuration$Monitoring);
    Code:
       0: aconst_null
       1: aload_1
       2: if_acmpne     15
       5: new           #53                 // class java/lang/IllegalArgumentException
       8: dup
       9: ldc           #66                 // String Monitoring value must be non-null
      11: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      14: athrow
      15: ldc           #67                 // String monitoring
      17: astore_2
      18: aload_0
      19: ldc           #67                 // String monitoring
      21: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      24: istore_3
      25: aload_0
      26: getfield      #12                 // Field monitoring:Lnet/sf/ehcache/config/Configuration$Monitoring;
      29: astore        4
      31: aload_0
      32: aload_1
      33: putfield      #12                 // Field monitoring:Lnet/sf/ehcache/config/Configuration$Monitoring;
      36: iload_3
      37: ifeq          49
      40: aload_0
      41: ldc           #67                 // String monitoring
      43: aload         4
      45: aload_1
      46: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_0
      50: areturn

  public final void setMonitoring(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #68                 // String Monitoring
       3: aload_1
       4: invokespecial #49                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: ldc_w         #69                 // class net/sf/ehcache/config/Configuration$Monitoring
      11: aload_1
      12: invokevirtual #70                 // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      15: invokestatic  #71                 // Method net/sf/ehcache/config/Configuration$Monitoring.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
      18: checkcast     #69                 // class net/sf/ehcache/config/Configuration$Monitoring
      21: invokevirtual #72                 // Method monitoring:(Lnet/sf/ehcache/config/Configuration$Monitoring;)Lnet/sf/ehcache/config/Configuration;
      24: pop
      25: return

  public final net.sf.ehcache.config.Configuration$Monitoring getMonitoring();
    Code:
       0: aload_0
       1: getfield      #12                 // Field monitoring:Lnet/sf/ehcache/config/Configuration$Monitoring;
       4: areturn

  public final net.sf.ehcache.config.Configuration dynamicConfig(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #73                 // Method setDynamicConfig:(Z)V
       5: aload_0
       6: areturn

  public final void setDynamicConfig(boolean);
    Code:
       0: ldc           #74                 // String dynamicConfig
       2: astore_2
       3: aload_0
       4: ldc           #74                 // String dynamicConfig
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aload_0
      11: getfield      #19                 // Field dynamicConfig:Z
      14: istore        4
      16: aload_0
      17: iload_1
      18: putfield      #19                 // Field dynamicConfig:Z
      21: iload_3
      22: ifeq          40
      25: aload_0
      26: ldc           #74                 // String dynamicConfig
      28: iload         4
      30: invokestatic  #62                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      33: iload_1
      34: invokestatic  #62                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      40: return

  public final boolean getDynamicConfig();
    Code:
       0: aload_0
       1: getfield      #19                 // Field dynamicConfig:Z
       4: ireturn

  public long getMaxBytesLocalHeap();
    Code:
       0: aload_0
       1: getfield      #41                 // Field maxBytesLocalHeap:Ljava/lang/Long;
       4: ifnonnull     11
       7: lconst_0
       8: goto          18
      11: aload_0
      12: getfield      #41                 // Field maxBytesLocalHeap:Ljava/lang/Long;
      15: invokevirtual #75                 // Method java/lang/Long.longValue:()J
      18: lreturn

  public void setMaxBytesLocalHeap(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #76                 // String MaxBytesLocalHeap
       3: aload_1
       4: invokespecial #49                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: invokespecial #77                 // Method isPercentage:(Ljava/lang/String;)Z
      12: ifeq          48
      15: invokestatic  #78                 // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      18: invokevirtual #79                 // Method java/lang/Runtime.maxMemory:()J
      21: lstore_2
      22: lload_2
      23: ldc2_w        #80                 // long 100l
      26: ldiv
      27: aload_0
      28: aload_1
      29: invokespecial #82                 // Method parsePercentage:(Ljava/lang/String;)I
      32: i2l
      33: lmul
      34: lstore        4
      36: aload_0
      37: lload         4
      39: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      42: invokevirtual #84                 // Method setMaxBytesLocalHeap:(Ljava/lang/Long;)V
      45: goto          59
      48: aload_0
      49: aload_1
      50: invokestatic  #85                 // Method net/sf/ehcache/config/MemoryUnit.parseSizeInBytes:(Ljava/lang/String;)J
      53: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: invokevirtual #84                 // Method setMaxBytesLocalHeap:(Ljava/lang/Long;)V
      59: aload_0
      60: aload_1
      61: putfield      #86                 // Field maxBytesLocalHeapInput:Ljava/lang/String;
      64: return

  public java.lang.String getMaxBytesLocalHeapAsString();
    Code:
       0: aload_0
       1: getfield      #86                 // Field maxBytesLocalHeapInput:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #86                 // Field maxBytesLocalHeapInput:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: invokevirtual #87                 // Method getMaxBytesLocalHeap:()J
      18: invokestatic  #88                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      21: areturn

  private int parsePercentage(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: iconst_0
       7: aload_2
       8: invokevirtual #90                 // Method java/lang/String.length:()I
      11: iconst_1
      12: isub
      13: invokevirtual #91                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      16: invokestatic  #92                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      19: istore_3
      20: iload_3
      21: bipush        100
      23: if_icmpgt     30
      26: iload_3
      27: ifge          57
      30: new           #53                 // class java/lang/IllegalArgumentException
      33: dup
      34: new           #54                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      41: ldc           #93                 // String Percentage need values need to be between 0 and 100 inclusive, but got :
      43: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: iload_3
      47: invokevirtual #94                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      50: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: iload_3
      58: ireturn

  private boolean isPercentage(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method java/lang/String.trim:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: aload_2
       7: invokevirtual #90                 // Method java/lang/String.length:()I
      10: iconst_1
      11: isub
      12: invokevirtual #95                 // Method java/lang/String.charAt:(I)C
      15: bipush        37
      17: if_icmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public void setMaxBytesLocalHeap(java.lang.Long);
    Code:
       0: ldc           #96                 // String maxBytesLocalHeap
       2: astore_2
       3: aload_0
       4: aload_1
       5: ldc           #96                 // String maxBytesLocalHeap
       7: invokespecial #97                 // Method verifyGreaterThanZero:(Ljava/lang/Long;Ljava/lang/String;)V
      10: aload_0
      11: ldc           #96                 // String maxBytesLocalHeap
      13: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      16: istore_3
      17: aload_0
      18: getfield      #41                 // Field maxBytesLocalHeap:Ljava/lang/Long;
      21: astore        4
      23: aload_0
      24: aload_1
      25: putfield      #41                 // Field maxBytesLocalHeap:Ljava/lang/Long;
      28: iload_3
      29: ifeq          41
      32: aload_0
      33: ldc           #96                 // String maxBytesLocalHeap
      35: aload         4
      37: aload_1
      38: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      41: return

  public net.sf.ehcache.config.Configuration maxBytesLocalHeap(long, net.sf.ehcache.config.MemoryUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #98                 // Method net/sf/ehcache/config/MemoryUnit.toBytes:(J)J
       6: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #84                 // Method setMaxBytesLocalHeap:(Ljava/lang/Long;)V
      12: aload_0
      13: areturn

  public long getMaxBytesLocalOffHeap();
    Code:
       0: aload_0
       1: getfield      #40                 // Field maxBytesLocalOffHeap:Ljava/lang/Long;
       4: ifnonnull     11
       7: lconst_0
       8: goto          18
      11: aload_0
      12: getfield      #40                 // Field maxBytesLocalOffHeap:Ljava/lang/Long;
      15: invokevirtual #75                 // Method java/lang/Long.longValue:()J
      18: lreturn

  public void setMaxBytesLocalOffHeap(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #99                 // String MaxBytesLocalOffHeap
       3: aload_1
       4: invokespecial #49                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: invokespecial #77                 // Method isPercentage:(Ljava/lang/String;)Z
      12: ifeq          46
      15: aload_0
      16: invokespecial #100                // Method getOffHeapLimit:()J
      19: lstore_2
      20: lload_2
      21: ldc2_w        #80                 // long 100l
      24: ldiv
      25: aload_0
      26: aload_1
      27: invokespecial #82                 // Method parsePercentage:(Ljava/lang/String;)I
      30: i2l
      31: lmul
      32: lstore        4
      34: aload_0
      35: lload         4
      37: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      40: invokevirtual #101                // Method setMaxBytesLocalOffHeap:(Ljava/lang/Long;)V
      43: goto          57
      46: aload_0
      47: aload_1
      48: invokestatic  #85                 // Method net/sf/ehcache/config/MemoryUnit.parseSizeInBytes:(Ljava/lang/String;)J
      51: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      54: invokevirtual #101                // Method setMaxBytesLocalOffHeap:(Ljava/lang/Long;)V
      57: aload_0
      58: aload_1
      59: putfield      #102                // Field maxBytesLocalOffHeapInput:Ljava/lang/String;
      62: return

  public java.lang.String getMaxBytesLocalOffHeapAsString();
    Code:
       0: aload_0
       1: getfield      #102                // Field maxBytesLocalOffHeapInput:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #102                // Field maxBytesLocalOffHeapInput:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: invokevirtual #103                // Method getMaxBytesLocalOffHeap:()J
      18: invokestatic  #88                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      21: areturn

  public long getTotalConfiguredOffheap();
    Code:
       0: aload_0
       1: invokevirtual #103                // Method getMaxBytesLocalOffHeap:()J
       4: lstore_1
       5: aload_0
       6: invokevirtual #104                // Method getCacheConfigurationsKeySet:()Ljava/util/Set;
       9: invokeinterface #105,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          62
      24: aload_3
      25: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #106                // class java/lang/String
      33: astore        4
      35: aload_0
      36: invokevirtual #107                // Method getCacheConfigurations:()Ljava/util/Map;
      39: aload         4
      41: invokeinterface #108,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #36                 // class net/sf/ehcache/config/CacheConfiguration
      49: astore        5
      51: lload_1
      52: aload         5
      54: invokevirtual #109                // Method net/sf/ehcache/config/CacheConfiguration.getMaxBytesLocalOffHeap:()J
      57: ladd
      58: lstore_1
      59: goto          15
      62: lload_1
      63: lreturn

  private long getOffHeapLimit();
    Code:
       0: ldc           #110                // String net.sf.ehcache.EnterpriseFeaturesManager
       2: invokestatic  #111                // Method net/sf/ehcache/util/ClassLoaderUtil.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       5: astore_1
       6: aload_1
       7: ldc           #112                // String getMaxBytesAllocatable
       9: iconst_0
      10: anewarray     #113                // class java/lang/Class
      13: invokevirtual #114                // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      16: aconst_null
      17: iconst_0
      18: anewarray     #115                // class java/lang/Object
      21: invokevirtual #116                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #117                // class java/lang/Long
      27: invokevirtual #75                 // Method java/lang/Long.longValue:()J
      30: lreturn
      31: astore_2
      32: new           #119                // class net/sf/ehcache/CacheException
      35: dup
      36: new           #54                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #120                // String Cache:
      45: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_0
      49: invokevirtual #121                // Method getName:()Ljava/lang/String;
      52: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #122                // String  cannot find static factory
      57: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #123                // String  method create(Ehcache, String)
      62: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: ldc           #124                // String  in store class
      67: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      70: ldc           #110                // String net.sf.ehcache.EnterpriseFeaturesManager
      72: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: aload_2
      79: invokespecial #125                // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      82: athrow
      83: astore_2
      84: aload_2
      85: invokevirtual #127                // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      88: astore_3
      89: new           #119                // class net/sf/ehcache/CacheException
      92: dup
      93: new           #54                 // class java/lang/StringBuilder
      96: dup
      97: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     100: ldc           #120                // String Cache:
     102: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     105: aload_0
     106: invokevirtual #121                // Method getName:()Ljava/lang/String;
     109: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: ldc           #128                // String  cannot instantiate store
     114: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     117: ldc           #110                // String net.sf.ehcache.EnterpriseFeaturesManager
     119: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     125: aload_3
     126: invokespecial #125                // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     129: athrow
     130: astore_2
     131: new           #119                // class net/sf/ehcache/CacheException
     134: dup
     135: new           #54                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #120                // String Cache:
     144: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_0
     148: invokevirtual #121                // Method getName:()Ljava/lang/String;
     151: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #128                // String  cannot instantiate store
     156: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: ldc           #110                // String net.sf.ehcache.EnterpriseFeaturesManager
     161: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: aload_2
     168: invokespecial #125                // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     171: athrow
     172: astore_1
     173: new           #119                // class net/sf/ehcache/CacheException
     176: dup
     177: new           #54                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #131                // String Cache
     186: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload_0
     190: invokevirtual #121                // Method getName:()Ljava/lang/String;
     193: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: ldc           #132                // String  cannot be configured because the off-heap store class could not be found.
     198: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: ldc           #133                // String You must use an enterprise version of Ehcache to successfully enable overflowToOffHeap.
     203: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     206: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     209: invokespecial #134                // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/String;)V
     212: athrow
    Exception table:
       from    to  target type
           6    30    31   Class java/lang/NoSuchMethodException
           6    30    83   Class java/lang/reflect/InvocationTargetException
           6    30   130   Class java/lang/IllegalAccessException
           0    30   172   Class java/lang/ClassNotFoundException
          31   172   172   Class java/lang/ClassNotFoundException

  public void setMaxBytesLocalOffHeap(java.lang.Long);
    Code:
       0: ldc           #135                // String maxBytesLocalOffHeap
       2: astore_2
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokespecial #97                 // Method verifyGreaterThanZero:(Ljava/lang/Long;Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      14: istore_3
      15: aload_0
      16: getfield      #40                 // Field maxBytesLocalOffHeap:Ljava/lang/Long;
      19: astore        4
      21: aload_0
      22: aload_1
      23: putfield      #40                 // Field maxBytesLocalOffHeap:Ljava/lang/Long;
      26: iload_3
      27: ifeq          38
      30: aload_0
      31: aload_2
      32: aload         4
      34: aload_1
      35: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: return

  public net.sf.ehcache.config.Configuration maxBytesLocalOffHeap(long, net.sf.ehcache.config.MemoryUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #98                 // Method net/sf/ehcache/config/MemoryUnit.toBytes:(J)J
       6: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #101                // Method setMaxBytesLocalOffHeap:(Ljava/lang/Long;)V
      12: aload_0
      13: areturn

  public long getMaxBytesLocalDisk();
    Code:
       0: aload_0
       1: getfield      #39                 // Field maxBytesLocalDisk:Ljava/lang/Long;
       4: ifnonnull     11
       7: lconst_0
       8: goto          18
      11: aload_0
      12: getfield      #39                 // Field maxBytesLocalDisk:Ljava/lang/Long;
      15: invokevirtual #75                 // Method java/lang/Long.longValue:()J
      18: lreturn

  public void setMaxBytesLocalDisk(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #136                // String MaxBytesLocalDisk
       3: aload_1
       4: invokespecial #49                 // Method assertArgumentNotNull:(Ljava/lang/String;Ljava/lang/Object;)V
       7: aload_0
       8: aload_1
       9: invokestatic  #85                 // Method net/sf/ehcache/config/MemoryUnit.parseSizeInBytes:(Ljava/lang/String;)J
      12: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      15: invokevirtual #137                // Method setMaxBytesLocalDisk:(Ljava/lang/Long;)V
      18: aload_0
      19: aload_1
      20: putfield      #138                // Field maxBytesLocalDiskInput:Ljava/lang/String;
      23: return

  public java.lang.String getMaxBytesLocalDiskAsString();
    Code:
       0: aload_0
       1: getfield      #138                // Field maxBytesLocalDiskInput:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #138                // Field maxBytesLocalDiskInput:Ljava/lang/String;
      11: goto          21
      14: aload_0
      15: invokevirtual #139                // Method getMaxBytesLocalDisk:()J
      18: invokestatic  #88                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
      21: areturn

  public void setMaxBytesLocalDisk(java.lang.Long);
    Code:
       0: ldc           #140                // String maxBytesLocalDisk
       2: astore_2
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokespecial #97                 // Method verifyGreaterThanZero:(Ljava/lang/Long;Ljava/lang/String;)V
       9: aload_0
      10: aload_2
      11: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      14: istore_3
      15: aload_0
      16: getfield      #39                 // Field maxBytesLocalDisk:Ljava/lang/Long;
      19: astore        4
      21: aload_0
      22: aload_1
      23: putfield      #39                 // Field maxBytesLocalDisk:Ljava/lang/Long;
      26: iload_3
      27: ifeq          38
      30: aload_0
      31: aload_2
      32: aload         4
      34: aload_1
      35: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      38: return

  public net.sf.ehcache.config.Configuration maxBytesLocalDisk(long, net.sf.ehcache.config.MemoryUnit);
    Code:
       0: aload_0
       1: aload_3
       2: lload_1
       3: invokevirtual #98                 // Method net/sf/ehcache/config/MemoryUnit.toBytes:(J)J
       6: invokestatic  #83                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       9: invokevirtual #137                // Method setMaxBytesLocalDisk:(Ljava/lang/Long;)V
      12: aload_0
      13: areturn

  private void verifyGreaterThanZero(java.lang.Long, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        40
       4: aload_1
       5: invokevirtual #75                 // Method java/lang/Long.longValue:()J
       8: lconst_1
       9: lcmp
      10: ifge          40
      13: new           #53                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #54                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_2
      25: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc           #141                // String  has to be larger than 0
      30: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokespecial #59                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: return

  public final net.sf.ehcache.config.Configuration diskStore(net.sf.ehcache.config.DiskStoreConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #142                // Method addDiskStore:(Lnet/sf/ehcache/config/DiskStoreConfiguration;)V
       5: aload_0
       6: areturn

  public final void addDiskStore(net.sf.ehcache.config.DiskStoreConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: getfield      #143                // Field diskStoreConfiguration:Lnet/sf/ehcache/config/DiskStoreConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #145                // String The Disk Store has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #147                // String diskStoreConfiguration
      19: astore_2
      20: aload_0
      21: ldc           #147                // String diskStoreConfiguration
      23: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      26: istore_3
      27: aload_0
      28: getfield      #143                // Field diskStoreConfiguration:Lnet/sf/ehcache/config/DiskStoreConfiguration;
      31: astore        4
      33: aload_0
      34: aload_1
      35: putfield      #143                // Field diskStoreConfiguration:Lnet/sf/ehcache/config/DiskStoreConfiguration;
      38: iload_3
      39: ifeq          54
      42: aload_0
      43: ldc           #147                // String diskStoreConfiguration
      45: aload         4
      47: aload_0
      48: getfield      #143                // Field diskStoreConfiguration:Lnet/sf/ehcache/config/DiskStoreConfiguration;
      51: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      54: return

  public final net.sf.ehcache.config.Configuration sizeOfPolicy(net.sf.ehcache.config.SizeOfPolicyConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #148                // Method addSizeOfPolicy:(Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;)V
       5: aload_0
       6: areturn

  public final void addSizeOfPolicy(net.sf.ehcache.config.SizeOfPolicyConfiguration);
    Code:
       0: aload_0
       1: getfield      #149                // Field sizeOfPolicyConfiguration:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #150                // String The SizeOfPolicy class has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #149                // Field sizeOfPolicyConfiguration:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
      22: return

  public final net.sf.ehcache.config.Configuration transactionManagerLookup(net.sf.ehcache.config.FactoryConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #151                // Method addTransactionManagerLookup:(Lnet/sf/ehcache/config/FactoryConfiguration;)V
       5: aload_0
       6: areturn

  public final void addTransactionManagerLookup(net.sf.ehcache.config.FactoryConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: getfield      #152                // Field transactionManagerLookupConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #153                // String The TransactionManagerLookup class has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #154                // String transactionManagerLookupConfiguration
      19: astore_2
      20: aload_0
      21: ldc           #154                // String transactionManagerLookupConfiguration
      23: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      26: istore_3
      27: aload_0
      28: getfield      #152                // Field transactionManagerLookupConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
      31: astore        4
      33: aload_0
      34: aload_1
      35: putfield      #152                // Field transactionManagerLookupConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
      38: iload_3
      39: ifeq          51
      42: aload_0
      43: ldc           #154                // String transactionManagerLookupConfiguration
      45: aload         4
      47: aload_1
      48: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: return

  public final net.sf.ehcache.config.Configuration cacheManagerEventListenerFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #155                // Method addCacheManagerEventListenerFactory:(Lnet/sf/ehcache/config/FactoryConfiguration;)V
       5: aload_0
       6: areturn

  public final void addCacheManagerEventListenerFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: ldc           #156                // String cacheManagerEventListenerFactoryConfiguration
       2: astore_2
       3: aload_0
       4: ldc           #156                // String cacheManagerEventListenerFactoryConfiguration
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aload_0
      11: getfield      #157                // Field cacheManagerEventListenerFactoryConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
      14: ifnonnull     34
      17: aload_0
      18: aload_1
      19: putfield      #157                // Field cacheManagerEventListenerFactoryConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
      22: iload_3
      23: ifeq          34
      26: aload_0
      27: ldc           #156                // String cacheManagerEventListenerFactoryConfiguration
      29: aconst_null
      30: aload_1
      31: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return

  public final net.sf.ehcache.config.Configuration cacheManagerPeerProviderFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #158                // Method addCacheManagerPeerProviderFactory:(Lnet/sf/ehcache/config/FactoryConfiguration;)V
       5: aload_0
       6: areturn

  public final void addCacheManagerPeerProviderFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: ldc           #159                // String cacheManagerPeerProviderFactoryConfiguration
       2: astore_2
       3: aload_0
       4: ldc           #159                // String cacheManagerPeerProviderFactoryConfiguration
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aconst_null
      11: astore        4
      13: iload_3
      14: ifeq          30
      17: new           #13                 // class java/util/ArrayList
      20: dup
      21: aload_0
      22: getfield      #15                 // Field cacheManagerPeerProviderFactoryConfiguration:Ljava/util/List;
      25: invokespecial #160                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      28: astore        4
      30: aload_0
      31: getfield      #15                 // Field cacheManagerPeerProviderFactoryConfiguration:Ljava/util/List;
      34: aload_1
      35: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: iload_3
      42: ifeq          57
      45: aload_0
      46: ldc           #159                // String cacheManagerPeerProviderFactoryConfiguration
      48: aload         4
      50: aload_0
      51: getfield      #15                 // Field cacheManagerPeerProviderFactoryConfiguration:Ljava/util/List;
      54: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      57: return

  public final net.sf.ehcache.config.Configuration cacheManagerPeerListenerFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #162                // Method addCacheManagerPeerListenerFactory:(Lnet/sf/ehcache/config/FactoryConfiguration;)V
       5: aload_0
       6: areturn

  public final void addCacheManagerPeerListenerFactory(net.sf.ehcache.config.FactoryConfiguration);
    Code:
       0: ldc           #163                // String cacheManagerPeerListenerFactoryConfiguration
       2: astore_2
       3: aload_0
       4: ldc           #163                // String cacheManagerPeerListenerFactoryConfiguration
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aconst_null
      11: astore        4
      13: iload_3
      14: ifeq          30
      17: new           #13                 // class java/util/ArrayList
      20: dup
      21: aload_0
      22: getfield      #16                 // Field cacheManagerPeerListenerFactoryConfiguration:Ljava/util/List;
      25: invokespecial #160                // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      28: astore        4
      30: aload_0
      31: getfield      #16                 // Field cacheManagerPeerListenerFactoryConfiguration:Ljava/util/List;
      34: aload_1
      35: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: iload_3
      42: ifeq          57
      45: aload_0
      46: ldc           #163                // String cacheManagerPeerListenerFactoryConfiguration
      48: aload         4
      50: aload_0
      51: getfield      #16                 // Field cacheManagerPeerListenerFactoryConfiguration:Ljava/util/List;
      54: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      57: return

  public final net.sf.ehcache.config.Configuration terracotta(net.sf.ehcache.config.TerracottaClientConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #164                // Method addTerracottaConfig:(Lnet/sf/ehcache/config/TerracottaClientConfiguration;)V
       5: aload_0
       6: areturn

  public final void addTerracottaConfig(net.sf.ehcache.config.TerracottaClientConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: getfield      #165                // Field terracottaConfigConfiguration:Lnet/sf/ehcache/config/TerracottaClientConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #166                // String The TerracottaConfig has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #167                // String terracottaConfigConfiguration
      19: astore_2
      20: aload_0
      21: ldc           #167                // String terracottaConfigConfiguration
      23: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      26: istore_3
      27: aload_0
      28: getfield      #165                // Field terracottaConfigConfiguration:Lnet/sf/ehcache/config/TerracottaClientConfiguration;
      31: astore        4
      33: aload_0
      34: aload_1
      35: putfield      #165                // Field terracottaConfigConfiguration:Lnet/sf/ehcache/config/TerracottaClientConfiguration;
      38: iload_3
      39: ifeq          51
      42: aload_0
      43: ldc           #167                // String terracottaConfigConfiguration
      45: aload         4
      47: aload_1
      48: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: return

  public final net.sf.ehcache.config.Configuration managementRESTService(net.sf.ehcache.config.ManagementRESTServiceConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #168                // Method addManagementRESTService:(Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;)V
       5: aload_0
       6: areturn

  public final void addManagementRESTService(net.sf.ehcache.config.ManagementRESTServiceConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: getfield      #169                // Field managementRESTService:Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #170                // String The ManagementRESTService has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: ldc           #171                // String managementRESTService
      19: astore_2
      20: aload_0
      21: ldc           #171                // String managementRESTService
      23: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      26: istore_3
      27: aload_0
      28: getfield      #169                // Field managementRESTService:Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;
      31: astore        4
      33: aload_0
      34: aload_1
      35: putfield      #169                // Field managementRESTService:Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;
      38: iload_3
      39: ifeq          51
      42: aload_0
      43: ldc           #171                // String managementRESTService
      45: aload         4
      47: aload_1
      48: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      51: return

  public final net.sf.ehcache.config.Configuration defaultCache(net.sf.ehcache.config.CacheConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #172                // Method setDefaultCacheConfiguration:(Lnet/sf/ehcache/config/CacheConfiguration;)V
       5: aload_0
       6: areturn

  public final void addDefaultCache(net.sf.ehcache.config.CacheConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultCacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: ifnull        17
       7: new           #144                // class net/sf/ehcache/ObjectExistsException
      10: dup
      11: ldc           #173                // String The Default Cache has already been configured
      13: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: invokevirtual #172                // Method setDefaultCacheConfiguration:(Lnet/sf/ehcache/config/CacheConfiguration;)V
      22: return

  public final net.sf.ehcache.config.Configuration cache(net.sf.ehcache.config.CacheConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #174                // Method addCache:(Lnet/sf/ehcache/config/CacheConfiguration;)V
       5: aload_0
       6: areturn

  public final void addCache(net.sf.ehcache.config.CacheConfiguration) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokevirtual #175                // Method addCache:(Lnet/sf/ehcache/config/CacheConfiguration;Z)V
       6: return

  void addCache(net.sf.ehcache.config.CacheConfiguration, boolean) throws net.sf.ehcache.ObjectExistsException;
    Code:
       0: ldc           #176                // String cacheConfigurations
       2: astore_3
       3: aconst_null
       4: astore        4
       6: iload_2
       7: ifeq          23
      10: aload_0
      11: ldc           #176                // String cacheConfigurations
      13: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: istore        5
      26: iload         5
      28: ifeq          44
      31: new           #177                // class java/util/HashMap
      34: dup
      35: aload_0
      36: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
      39: invokespecial #178                // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      42: astore        4
      44: aload_0
      45: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
      48: aload_1
      49: getfield      #179                // Field net/sf/ehcache/config/CacheConfiguration.name:Ljava/lang/String;
      52: invokeinterface #108,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      57: ifnull        95
      60: new           #144                // class net/sf/ehcache/ObjectExistsException
      63: dup
      64: new           #54                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #180                // String Cannot create cache:
      73: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_1
      77: getfield      #179                // Field net/sf/ehcache/config/CacheConfiguration.name:Ljava/lang/String;
      80: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #181                // String  with the same name as an existing one.
      85: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_1
      96: getfield      #179                // Field net/sf/ehcache/config/CacheConfiguration.name:Ljava/lang/String;
      99: ldc           #182                // String default
     101: invokevirtual #183                // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
     104: ifeq          117
     107: new           #144                // class net/sf/ehcache/ObjectExistsException
     110: dup
     111: ldc           #173                // String The Default Cache has already been configured
     113: invokespecial #146                // Method net/sf/ehcache/ObjectExistsException."<init>":(Ljava/lang/String;)V
     116: athrow
     117: aload_0
     118: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
     121: aload_1
     122: getfield      #179                // Field net/sf/ehcache/config/CacheConfiguration.name:Ljava/lang/String;
     125: aload_1
     126: invokeinterface #184,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: iload         5
     134: ifeq          149
     137: aload_0
     138: ldc           #176                // String cacheConfigurations
     140: aload         4
     142: aload_0
     143: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
     146: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     149: return

  private boolean checkDynChange(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
       4: invokeinterface #185,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          72
      12: aload_0
      13: getfield      #25                 // Field cfg:Lnet/sf/ehcache/config/Configuration$RuntimeCfg;
      16: ifnull        24
      19: aload_1
      20: invokestatic  #186                // Method net/sf/ehcache/config/Configuration$DynamicProperty.valueOf:(Ljava/lang/String;)Lnet/sf/ehcache/config/Configuration$DynamicProperty;
      23: pop
      24: goto          70
      27: astore_2
      28: new           #187                // class java/lang/IllegalStateException
      31: dup
      32: new           #54                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #55                 // Method java/lang/StringBuilder."<init>":()V
      39: aload_0
      40: invokevirtual #188                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      43: invokevirtual #45                 // Method java/lang/Class.getName:()Ljava/lang/String;
      46: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: ldc           #189                // String .
      51: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #190                // String  can\'t be changed dynamically
      60: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #191                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      69: athrow
      70: iconst_1
      71: ireturn
      72: iconst_0
      73: ireturn
    Exception table:
       from    to  target type
          12    24    27   Class java/lang/IllegalArgumentException

  public final java.util.Set<java.lang.String> getCacheConfigurationsKeySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
       4: invokeinterface #192,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public final net.sf.ehcache.config.CacheConfiguration getDefaultCacheConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultCacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: areturn

  public final void setDefaultCacheConfiguration(net.sf.ehcache.config.CacheConfiguration);
    Code:
       0: ldc           #193                // String defaultCacheConfiguration
       2: astore_2
       3: aload_0
       4: ldc           #193                // String defaultCacheConfiguration
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aload_0
      11: getfield      #2                  // Field defaultCacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
      14: astore        4
      16: aload_0
      17: aload_1
      18: putfield      #2                  // Field defaultCacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
      21: iload_3
      22: ifeq          34
      25: aload_0
      26: ldc           #193                // String defaultCacheConfiguration
      28: aload         4
      30: aload_1
      31: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return

  public final net.sf.ehcache.config.DiskStoreConfiguration getDiskStoreConfiguration();
    Code:
       0: aload_0
       1: getfield      #143                // Field diskStoreConfiguration:Lnet/sf/ehcache/config/DiskStoreConfiguration;
       4: areturn

  public final net.sf.ehcache.config.SizeOfPolicyConfiguration getSizeOfPolicyConfiguration();
    Code:
       0: aload_0
       1: getfield      #149                // Field sizeOfPolicyConfiguration:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
       4: ifnonnull     11
       7: getstatic     #194                // Field DEFAULT_SIZEOF_POLICY_CONFIGURATION:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
      10: areturn
      11: aload_0
      12: getfield      #149                // Field sizeOfPolicyConfiguration:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
      15: areturn

  public final net.sf.ehcache.config.FactoryConfiguration getTransactionManagerLookupConfiguration();
    Code:
       0: aload_0
       1: getfield      #152                // Field transactionManagerLookupConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
       4: ifnonnull     11
       7: invokestatic  #195                // Method getDefaultTransactionManagerLookupConfiguration:()Lnet/sf/ehcache/config/FactoryConfiguration;
      10: areturn
      11: aload_0
      12: getfield      #152                // Field transactionManagerLookupConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
      15: areturn

  public final java.util.List<net.sf.ehcache.config.FactoryConfiguration> getCacheManagerPeerProviderFactoryConfiguration();
    Code:
       0: aload_0
       1: getfield      #15                 // Field cacheManagerPeerProviderFactoryConfiguration:Ljava/util/List;
       4: areturn

  public final java.util.List<net.sf.ehcache.config.FactoryConfiguration> getCacheManagerPeerListenerFactoryConfigurations();
    Code:
       0: aload_0
       1: getfield      #16                 // Field cacheManagerPeerListenerFactoryConfiguration:Ljava/util/List;
       4: areturn

  public final net.sf.ehcache.config.ManagementRESTServiceConfiguration getManagementRESTService();
    Code:
       0: aload_0
       1: getfield      #169                // Field managementRESTService:Lnet/sf/ehcache/config/ManagementRESTServiceConfiguration;
       4: areturn

  public final net.sf.ehcache.config.FactoryConfiguration getCacheManagerEventListenerFactoryConfiguration();
    Code:
       0: aload_0
       1: getfield      #157                // Field cacheManagerEventListenerFactoryConfiguration:Lnet/sf/ehcache/config/FactoryConfiguration;
       4: areturn

  public final net.sf.ehcache.config.TerracottaClientConfiguration getTerracottaConfiguration();
    Code:
       0: aload_0
       1: getfield      #165                // Field terracottaConfigConfiguration:Lnet/sf/ehcache/config/TerracottaClientConfiguration;
       4: areturn

  public final java.util.Map<java.lang.String, net.sf.ehcache.config.CacheConfiguration> getCacheConfigurations();
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
       4: areturn

  public final net.sf.ehcache.config.Configuration source(net.sf.ehcache.config.generator.ConfigurationSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #196                // Method setSource:(Lnet/sf/ehcache/config/generator/ConfigurationSource;)V
       5: aload_0
       6: areturn

  public final void setSource(net.sf.ehcache.config.generator.ConfigurationSource);
    Code:
       0: ldc           #197                // String configurationSource
       2: astore_2
       3: aload_0
       4: ldc           #197                // String configurationSource
       6: invokespecial #51                 // Method checkDynChange:(Ljava/lang/String;)Z
       9: istore_3
      10: aload_0
      11: getfield      #198                // Field configurationSource:Lnet/sf/ehcache/config/generator/ConfigurationSource;
      14: astore        4
      16: aload_0
      17: aload_1
      18: putfield      #198                // Field configurationSource:Lnet/sf/ehcache/config/generator/ConfigurationSource;
      21: iload_3
      22: ifeq          34
      25: aload_0
      26: ldc           #197                // String configurationSource
      28: aload         4
      30: aload_1
      31: invokespecial #52                 // Method firePropertyChange:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: return

  public final net.sf.ehcache.config.generator.ConfigurationSource getConfigurationSource();
    Code:
       0: aload_0
       1: getfield      #198                // Field configurationSource:Lnet/sf/ehcache/config/generator/ConfigurationSource;
       4: areturn

  public boolean addPropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #161,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean removePropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
       4: aload_1
       5: invokeinterface #199,  2          // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      10: ireturn

  private <T> void firePropertyChange(java.lang.String, T, T);
    Code:
       0: aload_2
       1: ifnull        12
       4: aload_2
       5: aload_3
       6: invokevirtual #200                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          16
      12: aload_3
      13: ifnull        70
      16: aload_0
      17: getfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
      20: invokeinterface #201,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      25: astore        4
      27: aload         4
      29: invokeinterface #34,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          70
      37: aload         4
      39: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #202                // class java/beans/PropertyChangeListener
      47: astore        5
      49: aload         5
      51: new           #203                // class java/beans/PropertyChangeEvent
      54: dup
      55: aload_0
      56: aload_1
      57: aload_2
      58: aload_3
      59: invokespecial #204                // Method java/beans/PropertyChangeEvent."<init>":(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      62: invokeinterface #205,  2          // InterfaceMethod java/beans/PropertyChangeListener.propertyChange:(Ljava/beans/PropertyChangeEvent;)V
      67: goto          27
      70: return

  static org.slf4j.Logger access$200();
    Code:
       0: getstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static java.lang.String access$400(net.sf.ehcache.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cacheManagerName:Ljava/lang/String;
       4: areturn

  static java.util.List access$500(net.sf.ehcache.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #3                  // Field propertyChangeListeners:Ljava/util/List;
       4: areturn

  static net.sf.ehcache.config.CacheConfiguration access$600(net.sf.ehcache.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultCacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: areturn

  static java.util.Map access$700(net.sf.ehcache.config.Configuration);
    Code:
       0: aload_0
       1: getfield      #1                  // Field cacheConfigurations:Ljava/util/Map;
       4: areturn

  static {};
    Code:
       0: getstatic     #206                // Field net/sf/ehcache/config/Configuration$Monitoring.AUTODETECT:Lnet/sf/ehcache/config/Configuration$Monitoring;
       3: putstatic     #11                 // Field DEFAULT_MONITORING:Lnet/sf/ehcache/config/Configuration$Monitoring;
       6: new           #207                // class net/sf/ehcache/config/SizeOfPolicyConfiguration
       9: dup
      10: invokespecial #208                // Method net/sf/ehcache/config/SizeOfPolicyConfiguration."<init>":()V
      13: putstatic     #194                // Field DEFAULT_SIZEOF_POLICY_CONFIGURATION:Lnet/sf/ehcache/config/SizeOfPolicyConfiguration;
      16: invokestatic  #195                // Method getDefaultTransactionManagerLookupConfiguration:()Lnet/sf/ehcache/config/FactoryConfiguration;
      19: putstatic     #209                // Field DEFAULT_TRANSACTION_MANAGER_LOOKUP_CONFIG:Lnet/sf/ehcache/config/FactoryConfiguration;
      22: ldc_w         #210                // class net/sf/ehcache/config/Configuration
      25: invokestatic  #211                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      28: putstatic     #5                  // Field LOG:Lorg/slf4j/Logger;
      31: return
}
