Compiled from "Ehcache.java"
public interface net.sf.ehcache.Ehcache extends java.lang.Cloneable {
  public abstract void unpinAll();

  public abstract boolean isPinned(java.lang.Object);

  public abstract void setPinned(java.lang.Object, boolean);

  public abstract void put(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void putAll(java.util.Collection<net.sf.ehcache.Element>) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void put(net.sf.ehcache.Element, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void putQuiet(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void putWithWriter(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;

  public abstract net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element, boolean) throws java.lang.NullPointerException;

  public abstract boolean removeElement(net.sf.ehcache.Element) throws java.lang.NullPointerException;

  public abstract boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;

  public abstract net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;

  public abstract net.sf.ehcache.Element get(java.io.Serializable) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract net.sf.ehcache.Element get(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAll(java.util.Collection<?>) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException, java.lang.NullPointerException;

  public abstract net.sf.ehcache.Element getQuiet(java.io.Serializable) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract net.sf.ehcache.Element getQuiet(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract java.util.List getKeys() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract java.util.List getKeysWithExpiryCheck() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract java.util.List getKeysNoDuplicateCheck() throws java.lang.IllegalStateException;

  public abstract boolean remove(java.io.Serializable) throws java.lang.IllegalStateException;

  public abstract boolean remove(java.lang.Object) throws java.lang.IllegalStateException;

  public abstract void removeAll(java.util.Collection<?>) throws java.lang.IllegalStateException, java.lang.NullPointerException;

  public abstract void removeAll(java.util.Collection<?>, boolean) throws java.lang.IllegalStateException, java.lang.NullPointerException;

  public abstract boolean remove(java.io.Serializable, boolean) throws java.lang.IllegalStateException;

  public abstract boolean remove(java.lang.Object, boolean) throws java.lang.IllegalStateException;

  public abstract boolean removeQuiet(java.io.Serializable) throws java.lang.IllegalStateException;

  public abstract boolean removeQuiet(java.lang.Object) throws java.lang.IllegalStateException;

  public abstract boolean removeWithWriter(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void removeAll() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void removeAll(boolean) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract void flush() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract int getSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract int getSizeBasedOnAccuracy(int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract long calculateInMemorySize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract long calculateOffHeapSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract long calculateOnDiskSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;

  public abstract boolean hasAbortedSizeOf();

  public abstract long getMemoryStoreSize() throws java.lang.IllegalStateException;

  public abstract long getOffHeapStoreSize() throws java.lang.IllegalStateException;

  public abstract int getDiskStoreSize() throws java.lang.IllegalStateException;

  public abstract net.sf.ehcache.Status getStatus();

  public abstract java.lang.String getName();

  public abstract void setName(java.lang.String);

  public abstract java.lang.String toString();

  public abstract boolean isExpired(net.sf.ehcache.Element) throws java.lang.IllegalStateException, java.lang.NullPointerException;

  public abstract java.lang.Object clone() throws java.lang.CloneNotSupportedException;

  public abstract net.sf.ehcache.event.RegisteredEventListeners getCacheEventNotificationService();

  public abstract boolean isElementInMemory(java.io.Serializable);

  public abstract boolean isElementInMemory(java.lang.Object);

  public abstract boolean isElementOnDisk(java.io.Serializable);

  public abstract boolean isElementOnDisk(java.lang.Object);

  public abstract java.lang.String getGuid();

  public abstract net.sf.ehcache.CacheManager getCacheManager();

  public abstract void clearStatistics();

  public abstract int getStatisticsAccuracy();

  public abstract void setStatisticsAccuracy(int);

  public abstract void evictExpiredElements();

  public abstract boolean isKeyInCache(java.lang.Object);

  public abstract boolean isValueInCache(java.lang.Object);

  public abstract net.sf.ehcache.Statistics getStatistics() throws java.lang.IllegalStateException;

  public abstract net.sf.ehcache.statistics.LiveCacheStatistics getLiveCacheStatistics() throws java.lang.IllegalStateException;

  public abstract void registerCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;

  public abstract void removeCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;

  public abstract void setCacheManager(net.sf.ehcache.CacheManager);

  public abstract net.sf.ehcache.bootstrap.BootstrapCacheLoader getBootstrapCacheLoader();

  public abstract void setBootstrapCacheLoader(net.sf.ehcache.bootstrap.BootstrapCacheLoader) throws net.sf.ehcache.CacheException;

  public abstract void initialise();

  public abstract void bootstrap();

  public abstract void dispose() throws java.lang.IllegalStateException;

  public abstract net.sf.ehcache.config.CacheConfiguration getCacheConfiguration();

  public abstract void registerCacheExtension(net.sf.ehcache.extension.CacheExtension);

  public abstract void unregisterCacheExtension(net.sf.ehcache.extension.CacheExtension);

  public abstract java.util.List<net.sf.ehcache.extension.CacheExtension> getRegisteredCacheExtensions();

  public abstract float getAverageGetTime();

  public abstract void setCacheExceptionHandler(net.sf.ehcache.exceptionhandler.CacheExceptionHandler);

  public abstract net.sf.ehcache.exceptionhandler.CacheExceptionHandler getCacheExceptionHandler();

  public abstract void registerCacheLoader(net.sf.ehcache.loader.CacheLoader);

  public abstract void unregisterCacheLoader(net.sf.ehcache.loader.CacheLoader);

  public abstract java.util.List<net.sf.ehcache.loader.CacheLoader> getRegisteredCacheLoaders();

  public abstract void registerDynamicAttributesExtractor(net.sf.ehcache.search.attribute.DynamicAttributesExtractor);

  public abstract void registerCacheWriter(net.sf.ehcache.writer.CacheWriter);

  public abstract void unregisterCacheWriter();

  public abstract net.sf.ehcache.writer.CacheWriter getRegisteredCacheWriter();

  public abstract net.sf.ehcache.Element getWithLoader(java.lang.Object, net.sf.ehcache.loader.CacheLoader, java.lang.Object) throws net.sf.ehcache.CacheException;

  public abstract java.util.Map getAllWithLoader(java.util.Collection, java.lang.Object) throws net.sf.ehcache.CacheException;

  public abstract void load(java.lang.Object) throws net.sf.ehcache.CacheException;

  public abstract void loadAll(java.util.Collection, java.lang.Object) throws net.sf.ehcache.CacheException;

  public abstract boolean isDisabled();

  public abstract void setDisabled(boolean);

  public abstract boolean isStatisticsEnabled();

  public abstract void setStatisticsEnabled(boolean);

  public abstract net.sf.ehcache.statistics.sampled.SampledCacheStatistics getSampledCacheStatistics();

  public abstract void setSampledStatisticsEnabled(boolean);

  public abstract boolean isSampledStatisticsEnabled();

  public abstract java.lang.Object getInternalContext();

  public abstract void disableDynamicFeatures();

  public abstract net.sf.ehcache.writer.CacheWriterManager getWriterManager();

  public abstract boolean isClusterCoherent() throws net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract boolean isNodeCoherent() throws net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract void setNodeCoherent(boolean) throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract void waitUntilClusterCoherent() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract void setTransactionManagerLookup(net.sf.ehcache.transaction.manager.TransactionManagerLookup);

  public abstract void addPropertyChangeListener(java.beans.PropertyChangeListener);

  public abstract void removePropertyChangeListener(java.beans.PropertyChangeListener);

  public abstract <T> net.sf.ehcache.search.Attribute<T> getSearchAttribute(java.lang.String) throws net.sf.ehcache.CacheException;

  public abstract net.sf.ehcache.search.Query createQuery();

  public abstract boolean isSearchable();

  public abstract long getAverageSearchTime();

  public abstract long getSearchesPerSecond();

  public abstract void acquireReadLockOnKey(java.lang.Object);

  public abstract void acquireWriteLockOnKey(java.lang.Object);

  public abstract boolean tryReadLockOnKey(java.lang.Object, long) throws java.lang.InterruptedException;

  public abstract boolean tryWriteLockOnKey(java.lang.Object, long) throws java.lang.InterruptedException;

  public abstract void releaseReadLockOnKey(java.lang.Object);

  public abstract void releaseWriteLockOnKey(java.lang.Object);

  public abstract boolean isReadLockedByCurrentThread(java.lang.Object) throws java.lang.UnsupportedOperationException;

  public abstract boolean isWriteLockedByCurrentThread(java.lang.Object) throws java.lang.UnsupportedOperationException;

  public abstract boolean isClusterBulkLoadEnabled() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract boolean isNodeBulkLoadEnabled() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract void setNodeBulkLoadEnabled(boolean) throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;

  public abstract void waitUntilClusterBulkLoadComplete() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
}
