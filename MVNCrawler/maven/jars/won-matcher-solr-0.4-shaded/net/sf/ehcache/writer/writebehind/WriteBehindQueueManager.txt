Compiled from "WriteBehindQueueManager.java"
public class net.sf.ehcache.writer.writebehind.WriteBehindQueueManager implements net.sf.ehcache.writer.writebehind.WriteBehind {
  private final java.util.concurrent.locks.ReentrantReadWriteLock rwLock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock readLock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock writeLock;

  private final java.util.List<net.sf.ehcache.writer.writebehind.WriteBehind> queues;

  protected net.sf.ehcache.writer.writebehind.WriteBehindQueueManager(net.sf.ehcache.config.CacheConfiguration, net.sf.ehcache.writer.writebehind.WriteBehindQueueManager$WriteBehindQueueFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      12: putfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      15: aload_0
      16: aload_0
      17: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      20: invokevirtual #5                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      23: putfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      26: aload_0
      27: aload_0
      28: getfield      #4                  // Field rwLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock;
      31: invokevirtual #7                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      34: putfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      37: aload_0
      38: new           #9                  // class java/util/ArrayList
      41: dup
      42: invokespecial #10                 // Method java/util/ArrayList."<init>":()V
      45: putfield      #11                 // Field queues:Ljava/util/List;
      48: aload_1
      49: invokevirtual #12                 // Method net/sf/ehcache/config/CacheConfiguration.getCacheWriterConfiguration:()Lnet/sf/ehcache/config/CacheWriterConfiguration;
      52: astore_3
      53: aload_3
      54: invokevirtual #13                 // Method net/sf/ehcache/config/CacheWriterConfiguration.getWriteBehindConcurrency:()I
      57: istore        4
      59: iconst_0
      60: istore        5
      62: iload         5
      64: iload         4
      66: if_icmpge     92
      69: aload_0
      70: getfield      #11                 // Field queues:Ljava/util/List;
      73: aload_2
      74: iload         5
      76: aload_1
      77: invokevirtual #14                 // Method net/sf/ehcache/writer/writebehind/WriteBehindQueueManager$WriteBehindQueueFactory.createQueue:(ILnet/sf/ehcache/config/CacheConfiguration;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
      80: invokeinterface #15,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      85: pop
      86: iinc          5, 1
      89: goto          62
      92: return

  public net.sf.ehcache.writer.writebehind.WriteBehindQueueManager(net.sf.ehcache.config.CacheConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: new           #16                 // class net/sf/ehcache/writer/writebehind/WriteBehindQueueManager$WriteBehindQueueFactory
       5: dup
       6: invokespecial #17                 // Method net/sf/ehcache/writer/writebehind/WriteBehindQueueManager$WriteBehindQueueFactory."<init>":()V
       9: invokespecial #18                 // Method "<init>":(Lnet/sf/ehcache/config/CacheConfiguration;Lnet/sf/ehcache/writer/writebehind/WriteBehindQueueManager$WriteBehindQueueFactory;)V
      12: return

  public void start(net.sf.ehcache.writer.CacheWriter) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
       7: aload_0
       8: getfield      #11                 // Field queues:Ljava/util/List;
      11: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_2
      27: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #23                 // class net/sf/ehcache/writer/writebehind/WriteBehind
      35: astore_3
      36: aload_3
      37: aload_1
      38: invokeinterface #24,  2           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.start:(Lnet/sf/ehcache/writer/CacheWriter;)V
      43: goto          17
      46: aload_0
      47: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      50: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      53: goto          68
      56: astore        4
      58: aload_0
      59: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      62: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      65: aload         4
      67: athrow
      68: return
    Exception table:
       from    to  target type
           7    46    56   any
          56    58    56   any

  public void write(net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #27                 // Method net/sf/ehcache/Element.getKey:()Ljava/io/Serializable;
      12: invokespecial #28                 // Method getQueue:(Ljava/lang/Object;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
      15: aload_1
      16: invokeinterface #29,  2           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.write:(Lnet/sf/ehcache/Element;)V
      21: aload_0
      22: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      25: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      28: goto          41
      31: astore_2
      32: aload_0
      33: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      36: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    21    31   any
          31    32    31   any

  private net.sf.ehcache.writer.writebehind.WriteBehind getQueue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field queues:Ljava/util/List;
       4: aload_1
       5: invokevirtual #31                 // Method java/lang/Object.hashCode:()I
       8: aload_0
       9: getfield      #11                 // Field queues:Ljava/util/List;
      12: invokeinterface #32,  1           // InterfaceMethod java/util/List.size:()I
      17: irem
      18: invokestatic  #33                 // Method java/lang/Math.abs:(I)I
      21: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      26: checkcast     #23                 // class net/sf/ehcache/writer/writebehind/WriteBehind
      29: areturn

  public void delete(net.sf.ehcache.CacheEntry);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: aload_1
       9: invokevirtual #35                 // Method net/sf/ehcache/CacheEntry.getKey:()Ljava/lang/Object;
      12: invokespecial #28                 // Method getQueue:(Ljava/lang/Object;)Lnet/sf/ehcache/writer/writebehind/WriteBehind;
      15: aload_1
      16: invokeinterface #36,  2           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.delete:(Lnet/sf/ehcache/CacheEntry;)V
      21: aload_0
      22: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      25: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      28: goto          41
      31: astore_2
      32: aload_0
      33: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      36: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
           7    21    31   any
          31    32    31   any

  public void setOperationsFilter(net.sf.ehcache.writer.writebehind.OperationsFilter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       4: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       7: aload_0
       8: getfield      #11                 // Field queues:Ljava/util/List;
      11: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          46
      26: aload_2
      27: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #23                 // class net/sf/ehcache/writer/writebehind/WriteBehind
      35: astore_3
      36: aload_3
      37: aload_1
      38: invokeinterface #37,  2           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.setOperationsFilter:(Lnet/sf/ehcache/writer/writebehind/OperationsFilter;)V
      43: goto          17
      46: aload_0
      47: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      50: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      53: goto          68
      56: astore        4
      58: aload_0
      59: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      62: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      65: aload         4
      67: athrow
      68: return
    Exception table:
       from    to  target type
           7    46    56   any
          56    58    56   any

  public void stop() throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
       4: invokevirtual #19                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
       7: aload_0
       8: getfield      #11                 // Field queues:Ljava/util/List;
      11: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      16: astore_1
      17: aload_1
      18: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          45
      26: aload_1
      27: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #23                 // class net/sf/ehcache/writer/writebehind/WriteBehind
      35: astore_2
      36: aload_2
      37: invokeinterface #38,  1           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.stop:()V
      42: goto          17
      45: aload_0
      46: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      49: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      52: goto          65
      55: astore_3
      56: aload_0
      57: getfield      #8                  // Field writeLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      60: invokevirtual #25                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      63: aload_3
      64: athrow
      65: return
    Exception table:
       from    to  target type
           7    45    55   any
          55    56    55   any

  public long getQueueSize();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
       6: invokevirtual #26                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
       9: aload_0
      10: getfield      #11                 // Field queues:Ljava/util/List;
      13: invokeinterface #20,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          52
      28: aload_2
      29: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #23                 // class net/sf/ehcache/writer/writebehind/WriteBehind
      37: astore_3
      38: iload_1
      39: i2l
      40: aload_3
      41: invokeinterface #39,  1           // InterfaceMethod net/sf/ehcache/writer/writebehind/WriteBehind.getQueueSize:()J
      46: ladd
      47: l2i
      48: istore_1
      49: goto          19
      52: aload_0
      53: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      56: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      59: goto          74
      62: astore        4
      64: aload_0
      65: getfield      #6                  // Field readLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      68: invokevirtual #30                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      71: aload         4
      73: athrow
      74: iload_1
      75: i2l
      76: lreturn
    Exception table:
       from    to  target type
           9    52    62   any
          62    64    62   any
}
