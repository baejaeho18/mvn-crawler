Compiled from "NullLiveCacheStatisticsData.java"
public class net.sf.ehcache.statistics.NullLiveCacheStatisticsData implements net.sf.ehcache.statistics.LiveCacheStatistics,net.sf.ehcache.statistics.LiveCacheStatisticsData {
  public net.sf.ehcache.statistics.NullLiveCacheStatisticsData();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.String getCacheName();
    Code:
       0: ldc           #2                  // String _unknown_
       2: areturn

  public float getAverageGetTimeMillis();
    Code:
       0: fconst_0
       1: freturn

  public long getCacheHitCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getCacheMissCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getInMemoryMissCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getOffHeapMissCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getOnDiskMissCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getCacheMissCountExpired();
    Code:
       0: lconst_0
       1: lreturn

  public long getEvictedCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getExpiredCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getInMemoryHitCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getInMemorySize();
    Code:
       0: lconst_0
       1: lreturn

  public long getOffHeapHitCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getOffHeapSize();
    Code:
       0: lconst_0
       1: lreturn

  public long getOnDiskHitCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getOnDiskSize();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalHeapSize();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalOffHeapSize();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalDiskSize();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalHeapSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalOffHeapSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public long getLocalDiskSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public long getPutCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getRemovedCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getSize();
    Code:
       0: lconst_0
       1: lreturn

  public int getStatisticsAccuracy();
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String getStatisticsAccuracyDescription();
    Code:
       0: ldc           #3                  // String None
       2: areturn

  public long getUpdateCount();
    Code:
       0: lconst_0
       1: lreturn

  public boolean isStatisticsEnabled();
    Code:
       0: iconst_0
       1: ireturn

  public void addGetTimeMillis(long);
    Code:
       0: return

  public void cacheHitInMemory();
    Code:
       0: return

  public void cacheHitOffHeap();
    Code:
       0: return

  public void cacheHitOnDisk();
    Code:
       0: return

  public void cacheMissExpired();
    Code:
       0: return

  public void xaCommit();
    Code:
       0: return

  public void xaRollback();
    Code:
       0: return

  public void xaRecovered(int);
    Code:
       0: return

  public void cacheMissNotFound();
    Code:
       0: return

  public void cacheMissInMemory();
    Code:
       0: return

  public void cacheMissOffHeap();
    Code:
       0: return

  public void cacheMissOnDisk();
    Code:
       0: return

  public void clearStatistics();
    Code:
       0: return

  public void registerCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;
    Code:
       0: return

  public void removeCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;
    Code:
       0: return

  public void setStatisticsAccuracy(int);
    Code:
       0: return

  public void setStatisticsEnabled(boolean);
    Code:
       0: return

  public void dispose();
    Code:
       0: return

  public void notifyElementEvicted(net.sf.ehcache.Ehcache, net.sf.ehcache.Element);
    Code:
       0: return

  public void notifyElementExpired(net.sf.ehcache.Ehcache, net.sf.ehcache.Element);
    Code:
       0: return

  public void notifyElementPut(net.sf.ehcache.Ehcache, net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public void notifyElementRemoved(net.sf.ehcache.Ehcache, net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public void notifyElementUpdated(net.sf.ehcache.Ehcache, net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public void notifyRemoveAll(net.sf.ehcache.Ehcache);
    Code:
       0: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: pop
       5: aload_0
       6: areturn

  public long getMaxGetTimeMillis();
    Code:
       0: lconst_0
       1: lreturn

  public long getWriterQueueLength();
    Code:
       0: lconst_0
       1: lreturn

  public long getXaCommitCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getXaRollbackCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getXaRecoveredCount();
    Code:
       0: lconst_0
       1: lreturn

  public long getMinGetTimeMillis();
    Code:
       0: lconst_0
       1: lreturn

  public void addGetTimeNanos(long);
    Code:
       0: return

  public int getCacheHitRatio();
    Code:
       0: iconst_0
       1: ireturn

  public long getAverageGetTimeNanos();
    Code:
       0: lconst_0
       1: lreturn

  public long getMaxGetTimeNanos();
    Code:
       0: lconst_0
       1: lreturn

  public long getMinGetTimeNanos();
    Code:
       0: lconst_0
       1: lreturn
}
