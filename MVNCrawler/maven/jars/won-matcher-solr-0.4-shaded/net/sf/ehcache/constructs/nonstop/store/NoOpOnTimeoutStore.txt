Compiled from "NoOpOnTimeoutStore.java"
public final class net.sf.ehcache.constructs.nonstop.store.NoOpOnTimeoutStore implements net.sf.ehcache.constructs.nonstop.store.NonstopStore {
  public static final net.sf.ehcache.constructs.nonstop.NonstopTimeoutBehaviorFactory FACTORY;

  private static final net.sf.ehcache.constructs.nonstop.store.NoOpOnTimeoutStore INSTANCE;

  private net.sf.ehcache.constructs.nonstop.store.NoOpOnTimeoutStore();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static net.sf.ehcache.constructs.nonstop.store.NoOpOnTimeoutStore getInstance();
    Code:
       0: getstatic     #2                  // Field INSTANCE:Lnet/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore;
       3: areturn

  public void unpinAll();
    Code:
       0: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: return

  public void addStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: return

  public boolean bufferFull();
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyInMemory(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyOffHeap(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyOnDisk(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void dispose();
    Code:
       0: return

  public net.sf.ehcache.search.Results executeQuery(net.sf.ehcache.store.StoreQuery);
    Code:
       0: getstatic     #3                  // Field net/sf/ehcache/search/NullResults.INSTANCE:Lnet/sf/ehcache/search/NullResults;
       3: areturn

  public void expireElements();
    Code:
       0: return

  public void flush() throws java.io.IOException;
    Code:
       0: return

  public net.sf.ehcache.Element get(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.store.Policy getInMemoryEvictionPolicy();
    Code:
       0: aconst_null
       1: areturn

  public int getInMemorySize();
    Code:
       0: iconst_0
       1: ireturn

  public long getInMemorySizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public java.lang.Object getInternalContext();
    Code:
       0: aconst_null
       1: areturn

  public java.util.List getKeys();
    Code:
       0: getstatic     #4                  // Field java/util/Collections.EMPTY_LIST:Ljava/util/List;
       3: areturn

  public java.lang.Object getMBean();
    Code:
       0: aconst_null
       1: areturn

  public int getOffHeapSize();
    Code:
       0: iconst_0
       1: ireturn

  public long getOffHeapSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public int getOnDiskSize();
    Code:
       0: iconst_0
       1: ireturn

  public long getOnDiskSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public boolean hasAbortedSizeOf();
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element getQuiet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAllQuiet(java.util.Collection<?>);
    Code:
       0: new           #5                  // class java/util/HashMap
       3: dup
       4: invokespecial #6                  // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          45
      24: aload_3
      25: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_2
      33: aload         4
      35: aconst_null
      36: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: goto          15
      45: aload_2
      46: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method getAllQuiet:(Ljava/util/Collection;)Ljava/util/Map;
       5: areturn

  public int getSize();
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aconst_null
       1: areturn

  public int getTerracottaClusteredSize();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isCacheCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClusterCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNodeCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean put(net.sf.ehcache.Element) throws net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public void putAll(java.util.Collection<net.sf.ehcache.Element>) throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element);
    Code:
       0: aconst_null
       1: areturn

  public boolean putWithWriter(net.sf.ehcache.Element, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element remove(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public void removeAll(java.util.Collection<?>);
    Code:
       0: return

  public void removeAll() throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public net.sf.ehcache.Element removeElement(net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator);
    Code:
       0: aconst_null
       1: areturn

  public void removeStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: return

  public net.sf.ehcache.Element removeWithWriter(java.lang.Object, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aconst_null
       1: areturn

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator);
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element);
    Code:
       0: aconst_null
       1: areturn

  public void setAttributeExtractors(java.util.Map<java.lang.String, net.sf.ehcache.search.attribute.AttributeExtractor>);
    Code:
       0: return

  public void setInMemoryEvictionPolicy(net.sf.ehcache.store.Policy);
    Code:
       0: return

  public void setNodeCoherent(boolean) throws java.lang.UnsupportedOperationException;
    Code:
       0: return

  public void waitUntilClusterCoherent() throws java.lang.UnsupportedOperationException;
    Code:
       0: return

  public <T> net.sf.ehcache.search.Attribute<T> getSearchAttribute(java.lang.String);
    Code:
       0: new           #12                 // class net/sf/ehcache/search/Attribute
       3: dup
       4: aload_1
       5: invokespecial #13                 // Method net/sf/ehcache/search/Attribute."<init>":(Ljava/lang/String;)V
       8: areturn

  public java.util.Set getLocalKeys();
    Code:
       0: getstatic     #14                 // Field java/util/Collections.EMPTY_SET:Ljava/util/Set;
       3: areturn

  public net.sf.ehcache.config.CacheConfiguration$TransactionalMode getTransactionalMode();
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element unlockedGet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element unlockedGetQuiet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element unsafeGet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element unsafeGetQuiet(java.lang.Object);
    Code:
       0: aconst_null
       1: areturn

  public <V> V executeClusterOperation(net.sf.ehcache.constructs.nonstop.ClusterOperation<V>);
    Code:
       0: aload_1
       1: getstatic     #15                 // Field net/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType.NOOP:Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;
       4: invokeinterface #16,  2           // InterfaceMethod net/sf/ehcache/constructs/nonstop/ClusterOperation.performClusterOperationTimedOut:(Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;)Ljava/lang/Object;
       9: areturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: new           #17                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #18                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: new           #19                 // class net/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore$1
       3: dup
       4: invokespecial #20                 // Method net/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore$1."<init>":()V
       7: putstatic     #21                 // Field FACTORY:Lnet/sf/ehcache/constructs/nonstop/NonstopTimeoutBehaviorFactory;
      10: new           #22                 // class net/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore
      13: dup
      14: invokespecial #23                 // Method "<init>":()V
      17: putstatic     #2                  // Field INSTANCE:Lnet/sf/ehcache/constructs/nonstop/store/NoOpOnTimeoutStore;
      20: return
}
