Compiled from "NonstopThreadPool.java"
class net.sf.ehcache.constructs.nonstop.NonstopThreadPool$1 extends net.sf.ehcache.util.lang.VicariousThreadLocal<net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WorkerThreadLocal> {
  final net.sf.ehcache.constructs.nonstop.NonstopThreadPool this$0;

  net.sf.ehcache.constructs.nonstop.NonstopThreadPool$1(net.sf.ehcache.constructs.nonstop.NonstopThreadPool);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
       5: aload_0
       6: invokespecial #2                  // Method net/sf/ehcache/util/lang/VicariousThreadLocal."<init>":()V
       9: return

  protected net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WorkerThreadLocal initialValue();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
       4: invokestatic  #3                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$000:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)Ljava/lang/Object;
       7: dup
       8: astore_1
       9: monitorenter
      10: aload_0
      11: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
      14: invokestatic  #4                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$100:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)Ljava/util/concurrent/atomic/AtomicReference;
      17: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      20: getstatic     #6                  // Field net/sf/ehcache/constructs/nonstop/NonstopThreadPool$State.SHUTDOWN:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$State;
      23: if_acmpne     33
      26: aload_0
      27: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
      30: invokestatic  #7                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$200:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)V
      33: new           #8                  // class net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal
      36: dup
      37: aload_0
      38: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
      41: invokestatic  #9                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$300:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)Ljava/util/concurrent/ThreadFactory;
      44: aload_0
      45: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
      48: invokestatic  #10                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$400:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)Ljava/lang/ref/ReferenceQueue;
      51: invokespecial #11                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal."<init>":(Ljava/util/concurrent/ThreadFactory;Ljava/lang/ref/ReferenceQueue;)V
      54: astore_2
      55: aload_0
      56: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;
      59: invokestatic  #12                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool.access$500:(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool;)Ljava/util/Map;
      62: invokestatic  #13                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      65: aload_2
      66: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload_2
      73: aload_1
      74: monitorexit
      75: areturn
      76: astore_3
      77: aload_1
      78: monitorexit
      79: aload_3
      80: athrow
    Exception table:
       from    to  target type
          10    75    76   any
          76    79    76   any

  protected java.lang.Object initialValue();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method initialValue:()Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal;
       4: areturn
}
