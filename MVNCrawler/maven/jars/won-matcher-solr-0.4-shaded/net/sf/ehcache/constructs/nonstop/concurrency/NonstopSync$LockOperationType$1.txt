Compiled from "NonstopSync.java"
final class net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType$1 extends net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType {
  net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType$1(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType."<init>":(Ljava/lang/String;ILnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$1;)V
       7: return

  public boolean performOperation(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, long, net.sf.ehcache.concurrent.LockType, net.sf.ehcache.config.NonstopConfiguration) throws java.lang.Exception;
    Code:
       0: aload         7
       2: invokevirtual #2                  // Method net/sf/ehcache/config/NonstopConfiguration.getTimeoutMillis:()J
       5: lload         4
       7: invokestatic  #3                  // Method java/lang/Math.min:(JJ)J
      10: lstore        4
      12: aload_2
      13: invokeinterface #4,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingCacheLockProvider:()Lnet/sf/ehcache/concurrent/CacheLockProvider;
      18: aload_3
      19: invokeinterface #5,  2            // InterfaceMethod net/sf/ehcache/concurrent/CacheLockProvider.getSyncForKey:(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
      24: aload         6
      26: lload         4
      28: invokeinterface #6,  4            // InterfaceMethod net/sf/ehcache/concurrent/Sync.tryLock:(Lnet/sf/ehcache/concurrent/LockType;J)Z
      33: istore        8
      35: iload         8
      37: ifeq          49
      40: aload_1
      41: invokestatic  #7                  // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopThreadUniqueIdProvider.getCurrentNonstopThreadUniqueId:()J
      44: invokeinterface #8,  3            // InterfaceMethod net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext.lockAcquired:(J)V
      49: iload         8
      51: ireturn

  public void rollback(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, net.sf.ehcache.concurrent.LockType, boolean);
    Code:
       0: iload         5
       2: ifeq          30
       5: aload_2
       6: invokeinterface #4,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingCacheLockProvider:()Lnet/sf/ehcache/concurrent/CacheLockProvider;
      11: aload_3
      12: invokeinterface #5,  2            // InterfaceMethod net/sf/ehcache/concurrent/CacheLockProvider.getSyncForKey:(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
      17: aload         4
      19: invokeinterface #9,  2            // InterfaceMethod net/sf/ehcache/concurrent/Sync.unlock:(Lnet/sf/ehcache/concurrent/LockType;)V
      24: aload_1
      25: invokeinterface #10,  1           // InterfaceMethod net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext.lockReleased:()V
      30: return
}
