Compiled from "ExecutorServiceStore.java"
class net.sf.ehcache.constructs.nonstop.store.ExecutorServiceStore$14 implements java.util.concurrent.Callable<java.util.Map<java.lang.Object, net.sf.ehcache.Element>> {
  final java.util.Collection val$keys;

  final net.sf.ehcache.constructs.nonstop.store.ExecutorServiceStore this$0;

  net.sf.ehcache.constructs.nonstop.store.ExecutorServiceStore$14(net.sf.ehcache.constructs.nonstop.store.ExecutorServiceStore, java.util.Collection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$keys:Ljava/util/Collection;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: return

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lnet/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore;
       4: invokestatic  #4                  // Method net/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore.access$000:(Lnet/sf/ehcache/constructs/nonstop/store/ExecutorServiceStore;)Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       7: invokeinterface #5,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
      12: aload_0
      13: getfield      #2                  // Field val$keys:Ljava/util/Collection;
      16: invokeinterface #6,  2            // InterfaceMethod net/sf/ehcache/store/TerracottaStore.getAllQuiet:(Ljava/util/Collection;)Ljava/util/Map;
      21: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method call:()Ljava/util/Map;
       4: areturn
}
