Compiled from "NonstopSync.java"
final class net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType$2 extends net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType {
  net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType$2(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aconst_null
       4: invokespecial #1                  // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType."<init>":(Ljava/lang/String;ILnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$1;)V
       7: return

  public boolean performOperation(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, long, net.sf.ehcache.concurrent.LockType, net.sf.ehcache.config.NonstopConfiguration) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopThreadUniqueIdProvider.getCurrentNonstopThreadUniqueId:()J
       4: invokeinterface #3,  3            // InterfaceMethod net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext.areLocksAcquiredByOtherThreads:(J)Z
       9: ifeq          20
      12: new           #4                  // class net/sf/ehcache/constructs/nonstop/concurrency/InvalidLockStateAfterRejoinException
      15: dup
      16: invokespecial #5                  // Method net/sf/ehcache/constructs/nonstop/concurrency/InvalidLockStateAfterRejoinException."<init>":()V
      19: athrow
      20: aload_2
      21: invokeinterface #6,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingCacheLockProvider:()Lnet/sf/ehcache/concurrent/CacheLockProvider;
      26: aload_3
      27: invokeinterface #7,  2            // InterfaceMethod net/sf/ehcache/concurrent/CacheLockProvider.getSyncForKey:(Ljava/lang/Object;)Lnet/sf/ehcache/concurrent/Sync;
      32: aload         6
      34: invokeinterface #8,  2            // InterfaceMethod net/sf/ehcache/concurrent/Sync.unlock:(Lnet/sf/ehcache/concurrent/LockType;)V
      39: aload_1
      40: invokeinterface #9,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext.lockReleased:()V
      45: goto          59
      48: astore        8
      50: aload_1
      51: invokeinterface #9,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/concurrency/ExplicitLockingContext.lockReleased:()V
      56: aload         8
      58: athrow
      59: iconst_1
      60: ireturn
    Exception table:
       from    to  target type
           0    39    48   any
          48    50    48   any

  public void rollback(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, net.sf.ehcache.concurrent.LockType, boolean);
    Code:
       0: return
}
