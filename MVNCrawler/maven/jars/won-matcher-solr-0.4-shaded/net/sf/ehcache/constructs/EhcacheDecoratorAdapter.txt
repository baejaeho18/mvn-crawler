Compiled from "EhcacheDecoratorAdapter.java"
public class net.sf.ehcache.constructs.EhcacheDecoratorAdapter implements net.sf.ehcache.terracotta.InternalEhcache {
  protected final net.sf.ehcache.Ehcache underlyingCache;

  public net.sf.ehcache.constructs.EhcacheDecoratorAdapter(net.sf.ehcache.Ehcache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       9: return

  public net.sf.ehcache.Element get(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod net/sf/ehcache/Ehcache.get:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      10: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAll(java.util.Collection<?>) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod net/sf/ehcache/Ehcache.getAll:(Ljava/util/Collection;)Ljava/util/Map;
      10: areturn

  public net.sf.ehcache.Element get(java.io.Serializable) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod net/sf/ehcache/Ehcache.get:(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
      10: areturn

  public net.sf.ehcache.Element getQuiet(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod net/sf/ehcache/Ehcache.getQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      10: areturn

  public net.sf.ehcache.Element getQuiet(java.io.Serializable) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod net/sf/ehcache/Ehcache.getQuiet:(Ljava/io/Serializable;)Lnet/sf/ehcache/Element;
      10: areturn

  public void put(net.sf.ehcache.Element, boolean) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #8,  3            // InterfaceMethod net/sf/ehcache/Ehcache.put:(Lnet/sf/ehcache/Element;Z)V
      11: return

  public void put(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod net/sf/ehcache/Ehcache.put:(Lnet/sf/ehcache/Element;)V
      10: return

  public void putAll(java.util.Collection<net.sf.ehcache.Element>) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/Ehcache.putAll:(Ljava/util/Collection;)V
      10: return

  public void putQuiet(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod net/sf/ehcache/Ehcache.putQuiet:(Lnet/sf/ehcache/Element;)V
      10: return

  public void putWithWriter(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod net/sf/ehcache/Ehcache.putWithWriter:(Lnet/sf/ehcache/Element;)V
      10: return

  public boolean remove(java.lang.Object, boolean) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #13,  3           // InterfaceMethod net/sf/ehcache/Ehcache.remove:(Ljava/lang/Object;Z)Z
      11: ireturn

  public boolean remove(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod net/sf/ehcache/Ehcache.remove:(Ljava/lang/Object;)Z
      10: ireturn

  public void removeAll(java.util.Collection<?>) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeAll:(Ljava/util/Collection;)V
      10: return

  public void removeAll(java.util.Collection<?>, boolean) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #16,  3           // InterfaceMethod net/sf/ehcache/Ehcache.removeAll:(Ljava/util/Collection;Z)V
      11: return

  public boolean remove(java.io.Serializable, boolean) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #17,  3           // InterfaceMethod net/sf/ehcache/Ehcache.remove:(Ljava/io/Serializable;Z)Z
      11: ireturn

  public boolean remove(java.io.Serializable) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod net/sf/ehcache/Ehcache.remove:(Ljava/io/Serializable;)Z
      10: ireturn

  public void removeAll() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #19,  1           // InterfaceMethod net/sf/ehcache/Ehcache.removeAll:()V
       9: return

  public void removeAll(boolean) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #20,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeAll:(Z)V
      10: return

  public void bootstrap();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #21,  1           // InterfaceMethod net/sf/ehcache/Ehcache.bootstrap:()V
       9: return

  public long calculateInMemorySize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #22,  1           // InterfaceMethod net/sf/ehcache/Ehcache.calculateInMemorySize:()J
       9: lreturn

  public long calculateOffHeapSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #23,  1           // InterfaceMethod net/sf/ehcache/Ehcache.calculateOffHeapSize:()J
       9: lreturn

  public long calculateOnDiskSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #24,  1           // InterfaceMethod net/sf/ehcache/Ehcache.calculateOnDiskSize:()J
       9: lreturn

  public boolean hasAbortedSizeOf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #25,  1           // InterfaceMethod net/sf/ehcache/Ehcache.hasAbortedSizeOf:()Z
       9: ireturn

  public void clearStatistics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #26,  1           // InterfaceMethod net/sf/ehcache/Ehcache.clearStatistics:()V
       9: return

  public void disableDynamicFeatures();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #27,  1           // InterfaceMethod net/sf/ehcache/Ehcache.disableDynamicFeatures:()V
       9: return

  public void dispose() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #28,  1           // InterfaceMethod net/sf/ehcache/Ehcache.dispose:()V
       9: return

  public void evictExpiredElements();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #29,  1           // InterfaceMethod net/sf/ehcache/Ehcache.evictExpiredElements:()V
       9: return

  public void flush() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #30,  1           // InterfaceMethod net/sf/ehcache/Ehcache.flush:()V
       9: return

  public net.sf.ehcache.Element getWithLoader(java.lang.Object, net.sf.ehcache.loader.CacheLoader, java.lang.Object) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #31,  4           // InterfaceMethod net/sf/ehcache/Ehcache.getWithLoader:(Ljava/lang/Object;Lnet/sf/ehcache/loader/CacheLoader;Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      12: areturn

  public java.util.Map getAllWithLoader(java.util.Collection, java.lang.Object) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: aload_2
       6: invokeinterface #32,  3           // InterfaceMethod net/sf/ehcache/Ehcache.getAllWithLoader:(Ljava/util/Collection;Ljava/lang/Object;)Ljava/util/Map;
      11: areturn

  public void registerCacheLoader(net.sf.ehcache.loader.CacheLoader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod net/sf/ehcache/Ehcache.registerCacheLoader:(Lnet/sf/ehcache/loader/CacheLoader;)V
      10: return

  public void unregisterCacheLoader(net.sf.ehcache.loader.CacheLoader);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod net/sf/ehcache/Ehcache.unregisterCacheLoader:(Lnet/sf/ehcache/loader/CacheLoader;)V
      10: return

  public void load(java.lang.Object) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #35,  2           // InterfaceMethod net/sf/ehcache/Ehcache.load:(Ljava/lang/Object;)V
      10: return

  public void loadAll(java.util.Collection, java.lang.Object) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: aload_2
       6: invokeinterface #36,  3           // InterfaceMethod net/sf/ehcache/Ehcache.loadAll:(Ljava/util/Collection;Ljava/lang/Object;)V
      11: return

  public float getAverageGetTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #37,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getAverageGetTime:()F
       9: freturn

  public net.sf.ehcache.bootstrap.BootstrapCacheLoader getBootstrapCacheLoader();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #38,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getBootstrapCacheLoader:()Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;
       9: areturn

  public net.sf.ehcache.config.CacheConfiguration getCacheConfiguration();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #39,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
       9: areturn

  public net.sf.ehcache.event.RegisteredEventListeners getCacheEventNotificationService();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #40,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getCacheEventNotificationService:()Lnet/sf/ehcache/event/RegisteredEventListeners;
       9: areturn

  public net.sf.ehcache.exceptionhandler.CacheExceptionHandler getCacheExceptionHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #41,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getCacheExceptionHandler:()Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;
       9: areturn

  public net.sf.ehcache.CacheManager getCacheManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #42,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
       9: areturn

  public long getOffHeapStoreSize() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #43,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getOffHeapStoreSize:()J
       9: lreturn

  public int getDiskStoreSize() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #44,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getDiskStoreSize:()I
       9: ireturn

  public java.lang.String getGuid();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #45,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getGuid:()Ljava/lang/String;
       9: areturn

  public java.lang.Object getInternalContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #46,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getInternalContext:()Ljava/lang/Object;
       9: areturn

  public java.util.List getKeys() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #47,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getKeys:()Ljava/util/List;
       9: areturn

  public java.util.List getKeysNoDuplicateCheck() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #48,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getKeysNoDuplicateCheck:()Ljava/util/List;
       9: areturn

  public java.util.List getKeysWithExpiryCheck() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #49,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getKeysWithExpiryCheck:()Ljava/util/List;
       9: areturn

  public net.sf.ehcache.statistics.LiveCacheStatistics getLiveCacheStatistics() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #50,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getLiveCacheStatistics:()Lnet/sf/ehcache/statistics/LiveCacheStatistics;
       9: areturn

  public long getMemoryStoreSize() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #51,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getMemoryStoreSize:()J
       9: lreturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #52,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
       9: areturn

  public java.util.List<net.sf.ehcache.extension.CacheExtension> getRegisteredCacheExtensions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #53,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getRegisteredCacheExtensions:()Ljava/util/List;
       9: areturn

  public java.util.List<net.sf.ehcache.loader.CacheLoader> getRegisteredCacheLoaders();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #54,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getRegisteredCacheLoaders:()Ljava/util/List;
       9: areturn

  public net.sf.ehcache.writer.CacheWriter getRegisteredCacheWriter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #55,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getRegisteredCacheWriter:()Lnet/sf/ehcache/writer/CacheWriter;
       9: areturn

  public net.sf.ehcache.statistics.sampled.SampledCacheStatistics getSampledCacheStatistics();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #56,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getSampledCacheStatistics:()Lnet/sf/ehcache/statistics/sampled/SampledCacheStatistics;
       9: areturn

  public int getSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #57,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getSize:()I
       9: ireturn

  public int getSizeBasedOnAccuracy(int) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #58,  2           // InterfaceMethod net/sf/ehcache/Ehcache.getSizeBasedOnAccuracy:(I)I
      10: ireturn

  public net.sf.ehcache.Statistics getStatistics() throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #59,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getStatistics:()Lnet/sf/ehcache/Statistics;
       9: areturn

  public int getStatisticsAccuracy();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #60,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getStatisticsAccuracy:()I
       9: ireturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #61,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getStatus:()Lnet/sf/ehcache/Status;
       9: areturn

  public net.sf.ehcache.writer.CacheWriterManager getWriterManager();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #62,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getWriterManager:()Lnet/sf/ehcache/writer/CacheWriterManager;
       9: areturn

  public void initialise();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #63,  1           // InterfaceMethod net/sf/ehcache/Ehcache.initialise:()V
       9: return

  public boolean isClusterCoherent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #64,  1           // InterfaceMethod net/sf/ehcache/Ehcache.isClusterCoherent:()Z
       9: ireturn

  public boolean isDisabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #65,  1           // InterfaceMethod net/sf/ehcache/Ehcache.isDisabled:()Z
       9: ireturn

  public boolean isElementInMemory(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isElementInMemory:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isElementInMemory(java.io.Serializable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #67,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isElementInMemory:(Ljava/io/Serializable;)Z
      10: ireturn

  public boolean isElementOnDisk(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #68,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isElementOnDisk:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isElementOnDisk(java.io.Serializable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #69,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isElementOnDisk:(Ljava/io/Serializable;)Z
      10: ireturn

  public boolean isExpired(net.sf.ehcache.Element) throws java.lang.IllegalStateException, java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isExpired:(Lnet/sf/ehcache/Element;)Z
      10: ireturn

  public boolean isKeyInCache(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #71,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isKeyInCache:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isNodeCoherent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #72,  1           // InterfaceMethod net/sf/ehcache/Ehcache.isNodeCoherent:()Z
       9: ireturn

  public boolean isSampledStatisticsEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #73,  1           // InterfaceMethod net/sf/ehcache/Ehcache.isSampledStatisticsEnabled:()Z
       9: ireturn

  public boolean isStatisticsEnabled();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #74,  1           // InterfaceMethod net/sf/ehcache/Ehcache.isStatisticsEnabled:()Z
       9: ireturn

  public boolean isValueInCache(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #75,  2           // InterfaceMethod net/sf/ehcache/Ehcache.isValueInCache:(Ljava/lang/Object;)Z
      10: ireturn

  public void registerCacheExtension(net.sf.ehcache.extension.CacheExtension);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #76,  2           // InterfaceMethod net/sf/ehcache/Ehcache.registerCacheExtension:(Lnet/sf/ehcache/extension/CacheExtension;)V
      10: return

  public void registerCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #77,  2           // InterfaceMethod net/sf/ehcache/Ehcache.registerCacheUsageListener:(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
      10: return

  public void registerCacheWriter(net.sf.ehcache.writer.CacheWriter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #78,  2           // InterfaceMethod net/sf/ehcache/Ehcache.registerCacheWriter:(Lnet/sf/ehcache/writer/CacheWriter;)V
      10: return

  public void registerDynamicAttributesExtractor(net.sf.ehcache.search.attribute.DynamicAttributesExtractor);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #79,  2           // InterfaceMethod net/sf/ehcache/Ehcache.registerDynamicAttributesExtractor:(Lnet/sf/ehcache/search/attribute/DynamicAttributesExtractor;)V
      10: return

  public void removeCacheUsageListener(net.sf.ehcache.statistics.CacheUsageListener) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #80,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeCacheUsageListener:(Lnet/sf/ehcache/statistics/CacheUsageListener;)V
      10: return

  public boolean removeQuiet(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #81,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeQuiet:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean removeQuiet(java.io.Serializable) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeQuiet:(Ljava/io/Serializable;)Z
      10: ireturn

  public boolean removeWithWriter(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #83,  2           // InterfaceMethod net/sf/ehcache/Ehcache.removeWithWriter:(Ljava/lang/Object;)Z
      10: ireturn

  public void setBootstrapCacheLoader(net.sf.ehcache.bootstrap.BootstrapCacheLoader) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #84,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setBootstrapCacheLoader:(Lnet/sf/ehcache/bootstrap/BootstrapCacheLoader;)V
      10: return

  public void setCacheExceptionHandler(net.sf.ehcache.exceptionhandler.CacheExceptionHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #85,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setCacheExceptionHandler:(Lnet/sf/ehcache/exceptionhandler/CacheExceptionHandler;)V
      10: return

  public void setCacheManager(net.sf.ehcache.CacheManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setCacheManager:(Lnet/sf/ehcache/CacheManager;)V
      10: return

  public void setDisabled(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #87,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setDisabled:(Z)V
      10: return

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setName:(Ljava/lang/String;)V
      10: return

  public void setNodeCoherent(boolean) throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #89,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setNodeCoherent:(Z)V
      10: return

  public void setSampledStatisticsEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #90,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setSampledStatisticsEnabled:(Z)V
      10: return

  public void setStatisticsAccuracy(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #91,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setStatisticsAccuracy:(I)V
      10: return

  public void setStatisticsEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #92,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setStatisticsEnabled:(Z)V
      10: return

  public void setTransactionManagerLookup(net.sf.ehcache.transaction.manager.TransactionManagerLookup);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #93,  2           // InterfaceMethod net/sf/ehcache/Ehcache.setTransactionManagerLookup:(Lnet/sf/ehcache/transaction/manager/TransactionManagerLookup;)V
      10: return

  public void unregisterCacheExtension(net.sf.ehcache.extension.CacheExtension);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #94,  2           // InterfaceMethod net/sf/ehcache/Ehcache.unregisterCacheExtension:(Lnet/sf/ehcache/extension/CacheExtension;)V
      10: return

  public void unregisterCacheWriter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #95,  1           // InterfaceMethod net/sf/ehcache/Ehcache.unregisterCacheWriter:()V
       9: return

  public void waitUntilClusterCoherent() throws java.lang.UnsupportedOperationException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #96,  1           // InterfaceMethod net/sf/ehcache/Ehcache.waitUntilClusterCoherent:()V
       9: return

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #97                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: areturn

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #98,  2           // InterfaceMethod net/sf/ehcache/Ehcache.putIfAbsent:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      10: areturn

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element, boolean) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #99,  3           // InterfaceMethod net/sf/ehcache/Ehcache.putIfAbsent:(Lnet/sf/ehcache/Element;Z)Lnet/sf/ehcache/Element;
      11: areturn

  public boolean removeElement(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #100,  2          // InterfaceMethod net/sf/ehcache/Ehcache.removeElement:(Lnet/sf/ehcache/Element;)Z
      10: ireturn

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: aload_2
       6: invokeinterface #101,  3          // InterfaceMethod net/sf/ehcache/Ehcache.replace:(Lnet/sf/ehcache/Element;Lnet/sf/ehcache/Element;)Z
      11: ireturn

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #102,  2          // InterfaceMethod net/sf/ehcache/Ehcache.replace:(Lnet/sf/ehcache/Element;)Lnet/sf/ehcache/Element;
      10: areturn

  public void addPropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #103,  2          // InterfaceMethod net/sf/ehcache/Ehcache.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
      10: return

  public void removePropertyChangeListener(java.beans.PropertyChangeListener);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #103,  2          // InterfaceMethod net/sf/ehcache/Ehcache.addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
      10: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #104,  1          // InterfaceMethod net/sf/ehcache/Ehcache.toString:()Ljava/lang/String;
       9: areturn

  public net.sf.ehcache.search.Query createQuery();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #105,  1          // InterfaceMethod net/sf/ehcache/Ehcache.createQuery:()Lnet/sf/ehcache/search/Query;
       9: areturn

  public <T> net.sf.ehcache.search.Attribute<T> getSearchAttribute(java.lang.String) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #106,  2          // InterfaceMethod net/sf/ehcache/Ehcache.getSearchAttribute:(Ljava/lang/String;)Lnet/sf/ehcache/search/Attribute;
      10: areturn

  public boolean isSearchable();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #107,  1          // InterfaceMethod net/sf/ehcache/Ehcache.isSearchable:()Z
       9: ireturn

  public long getAverageSearchTime();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #108,  1          // InterfaceMethod net/sf/ehcache/Ehcache.getAverageSearchTime:()J
       9: lreturn

  public long getSearchesPerSecond();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #109,  1          // InterfaceMethod net/sf/ehcache/Ehcache.getSearchesPerSecond:()J
       9: lreturn

  public void acquireReadLockOnKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #110,  2          // InterfaceMethod net/sf/ehcache/Ehcache.acquireReadLockOnKey:(Ljava/lang/Object;)V
      10: return

  public void acquireWriteLockOnKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #111,  2          // InterfaceMethod net/sf/ehcache/Ehcache.acquireWriteLockOnKey:(Ljava/lang/Object;)V
      10: return

  public void releaseReadLockOnKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #112,  2          // InterfaceMethod net/sf/ehcache/Ehcache.releaseReadLockOnKey:(Ljava/lang/Object;)V
      10: return

  public void releaseWriteLockOnKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod net/sf/ehcache/Ehcache.releaseWriteLockOnKey:(Ljava/lang/Object;)V
      10: return

  public boolean tryReadLockOnKey(java.lang.Object, long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: lload_2
       6: invokeinterface #114,  4          // InterfaceMethod net/sf/ehcache/Ehcache.tryReadLockOnKey:(Ljava/lang/Object;J)Z
      11: ireturn

  public boolean tryWriteLockOnKey(java.lang.Object, long) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: lload_2
       6: invokeinterface #115,  4          // InterfaceMethod net/sf/ehcache/Ehcache.tryWriteLockOnKey:(Ljava/lang/Object;J)Z
      11: ireturn

  public boolean isReadLockedByCurrentThread(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #116,  2          // InterfaceMethod net/sf/ehcache/Ehcache.isReadLockedByCurrentThread:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isWriteLockedByCurrentThread(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #117,  2          // InterfaceMethod net/sf/ehcache/Ehcache.isWriteLockedByCurrentThread:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean isClusterBulkLoadEnabled() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #118,  1          // InterfaceMethod net/sf/ehcache/Ehcache.isClusterBulkLoadEnabled:()Z
       9: ireturn

  public boolean isNodeBulkLoadEnabled() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #119,  1          // InterfaceMethod net/sf/ehcache/Ehcache.isNodeBulkLoadEnabled:()Z
       9: ireturn

  public void setNodeBulkLoadEnabled(boolean) throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: iload_1
       5: invokeinterface #120,  2          // InterfaceMethod net/sf/ehcache/Ehcache.setNodeBulkLoadEnabled:(Z)V
      10: return

  public void waitUntilClusterBulkLoadComplete() throws java.lang.UnsupportedOperationException, net.sf.ehcache.terracotta.TerracottaNotRunningException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #121,  1          // InterfaceMethod net/sf/ehcache/Ehcache.waitUntilClusterBulkLoadComplete:()V
       9: return

  public void unpinAll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #122,  1          // InterfaceMethod net/sf/ehcache/Ehcache.unpinAll:()V
       9: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: invokeinterface #123,  2          // InterfaceMethod net/sf/ehcache/Ehcache.isPinned:(Ljava/lang/Object;)Z
      10: ireturn

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: aload_1
       5: iload_2
       6: invokeinterface #124,  3          // InterfaceMethod net/sf/ehcache/Ehcache.setPinned:(Ljava/lang/Object;Z)V
      11: return

  private net.sf.ehcache.terracotta.InternalEhcache asInternalEhcache();
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: checkcast     #125                // class net/sf/ehcache/terracotta/InternalEhcache
       7: areturn

  public net.sf.ehcache.Element removeAndReturnElement(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: instanceof    #125                // class net/sf/ehcache/terracotta/InternalEhcache
       7: ifeq          21
      10: aload_0
      11: invokespecial #126                // Method asInternalEhcache:()Lnet/sf/ehcache/terracotta/InternalEhcache;
      14: aload_1
      15: invokeinterface #127,  2          // InterfaceMethod net/sf/ehcache/terracotta/InternalEhcache.removeAndReturnElement:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      20: areturn
      21: new           #128                // class java/lang/UnsupportedOperationException
      24: dup
      25: invokespecial #129                // Method java/lang/UnsupportedOperationException."<init>":()V
      28: athrow

  public void recalculateSize(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field underlyingCache:Lnet/sf/ehcache/Ehcache;
       4: instanceof    #125                // class net/sf/ehcache/terracotta/InternalEhcache
       7: ifeq          23
      10: aload_0
      11: invokespecial #126                // Method asInternalEhcache:()Lnet/sf/ehcache/terracotta/InternalEhcache;
      14: aload_1
      15: invokeinterface #130,  2          // InterfaceMethod net/sf/ehcache/terracotta/InternalEhcache.recalculateSize:(Ljava/lang/Object;)V
      20: goto          31
      23: new           #128                // class java/lang/UnsupportedOperationException
      26: dup
      27: invokespecial #129                // Method java/lang/UnsupportedOperationException."<init>":()V
      30: athrow
      31: return
}
