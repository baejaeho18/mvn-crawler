Compiled from "NonstopThreadPool.java"
class net.sf.ehcache.constructs.nonstop.NonstopThreadPool$Worker implements java.lang.Runnable {
  private static final java.lang.StackTraceElement[] EMPTY_STACK_TRACE;

  private final net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WorkerTaskHolder workerTaskHolder;

  private volatile boolean shutdown;

  private volatile java.lang.Thread workerThread;

  private volatile boolean runningTask;

  public net.sf.ehcache.constructs.nonstop.NonstopThreadPool$Worker();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder
       8: dup
       9: aconst_null
      10: invokespecial #3                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder."<init>":(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$1;)V
      13: putfield      #4                  // Field workerTaskHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder;
      16: return

  public java.lang.StackTraceElement[] getStackTrace();
    Code:
       0: aload_0
       1: getfield      #5                  // Field workerThread:Ljava/lang/Thread;
       4: ifnonnull     11
       7: getstatic     #6                  // Field EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
      10: areturn
      11: aload_0
      12: getfield      #5                  // Field workerThread:Ljava/lang/Thread;
      15: invokevirtual #7                  // Method java/lang/Thread.getStackTrace:()[Ljava/lang/StackTraceElement;
      18: areturn

  public void run();
    Code:
       0: aload_0
       1: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #5                  // Field workerThread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #9                  // Field shutdown:Z
      11: ifne          101
      14: aload_0
      15: invokespecial #10                 // Method waitUntilTaskAvailable:()V
      18: aload_0
      19: getfield      #9                  // Field shutdown:Z
      22: ifeq          28
      25: goto          101
      28: aload_0
      29: getfield      #4                  // Field workerTaskHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder;
      32: invokevirtual #11                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder.consumeTask:()Ljava/lang/Runnable;
      35: astore_1
      36: aload_1
      37: ifnull        98
      40: aload_0
      41: dup
      42: astore_2
      43: monitorenter
      44: aload_0
      45: iconst_1
      46: putfield      #12                 // Field runningTask:Z
      49: aload_0
      50: getfield      #9                  // Field shutdown:Z
      53: ifeq          61
      56: aload_2
      57: monitorexit
      58: goto          101
      61: aload_2
      62: monitorexit
      63: goto          71
      66: astore_3
      67: aload_2
      68: monitorexit
      69: aload_3
      70: athrow
      71: aload_1
      72: invokeinterface #13,  1           // InterfaceMethod java/lang/Runnable.run:()V
      77: aload_0
      78: dup
      79: astore_2
      80: monitorenter
      81: aload_0
      82: iconst_0
      83: putfield      #12                 // Field runningTask:Z
      86: aload_2
      87: monitorexit
      88: goto          98
      91: astore        4
      93: aload_2
      94: monitorexit
      95: aload         4
      97: athrow
      98: goto          7
     101: return
    Exception table:
       from    to  target type
          44    58    66   any
          61    63    66   any
          66    69    66   any
          81    88    91   any
          91    95    91   any

  public void shutdownNow();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #9                  // Field shutdown:Z
       5: aload_0
       6: dup
       7: astore_1
       8: monitorenter
       9: aload_0
      10: invokevirtual #14                 // Method java/lang/Object.notifyAll:()V
      13: aload_0
      14: getfield      #12                 // Field runningTask:Z
      17: ifeq          27
      20: aload_0
      21: getfield      #5                  // Field workerThread:Ljava/lang/Thread;
      24: invokevirtual #15                 // Method java/lang/Thread.interrupt:()V
      27: aload_1
      28: monitorexit
      29: goto          37
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
      37: return
    Exception table:
       from    to  target type
           9    29    32   any
          32    35    32   any

  public void addTask(java.lang.Runnable);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field workerTaskHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder;
       8: aload_1
       9: invokevirtual #16                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder.addTask:(Ljava/lang/Runnable;)V
      12: aload_0
      13: invokevirtual #14                 // Method java/lang/Object.notifyAll:()V
      16: aload_2
      17: monitorexit
      18: goto          26
      21: astore_3
      22: aload_2
      23: monitorexit
      24: aload_3
      25: athrow
      26: return
    Exception table:
       from    to  target type
           4    18    21   any
          21    24    21   any

  private void waitUntilTaskAvailable();
    Code:
       0: aload_0
       1: dup
       2: astore_1
       3: monitorenter
       4: aload_0
       5: getfield      #4                  // Field workerTaskHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder;
       8: invokevirtual #17                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerTaskHolder.isTaskAvailable:()Z
      11: ifne          35
      14: aload_0
      15: getfield      #9                  // Field shutdown:Z
      18: ifeq          24
      21: aload_1
      22: monitorexit
      23: return
      24: aload_0
      25: invokevirtual #18                 // Method java/lang/Object.wait:()V
      28: goto          4
      31: astore_2
      32: goto          4
      35: aload_1
      36: monitorexit
      37: goto          45
      40: astore_3
      41: aload_1
      42: monitorexit
      43: aload_3
      44: athrow
      45: return
    Exception table:
       from    to  target type
          24    28    31   Class java/lang/InterruptedException
           4    23    40   any
          24    37    40   any
          40    43    40   any

  static {};
    Code:
       0: iconst_0
       1: anewarray     #20                 // class java/lang/StackTraceElement
       4: putstatic     #6                  // Field EMPTY_STACK_TRACE:[Ljava/lang/StackTraceElement;
       7: return
}
