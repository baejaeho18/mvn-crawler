Compiled from "InvalidLockStateAfterRejoinException.java"
public class net.sf.ehcache.constructs.nonstop.concurrency.InvalidLockStateAfterRejoinException extends net.sf.ehcache.constructs.nonstop.NonStopCacheException {
  public net.sf.ehcache.constructs.nonstop.concurrency.InvalidLockStateAfterRejoinException();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/Throwable;)V
       5: return

  public net.sf.ehcache.constructs.nonstop.concurrency.InvalidLockStateAfterRejoinException(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #2                  // String Invalid lock state as locks are flushed after rejoin. The cluster rejoined and locks were acquired before rejoin.
       3: aload_1
       4: invokespecial #3                  // Method "<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       7: return

  public net.sf.ehcache.constructs.nonstop.concurrency.InvalidLockStateAfterRejoinException(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #4                  // Method net/sf/ehcache/constructs/nonstop/NonStopCacheException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
       6: return
}
