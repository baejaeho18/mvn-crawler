Compiled from "ExplicitLockingContextThreadLocal.java"
class net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContextThreadLocal$ExplicitLockingContextImpl implements net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext {
  private volatile boolean locksAcquired;

  private final java.util.LinkedList<java.lang.Long> lockAcquisitionStack;

  private net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContextThreadLocal$ExplicitLockingContextImpl();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/LinkedList
       8: dup
       9: invokespecial #4                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
      15: return

  public boolean areAnyExplicitLocksAcquired();
    Code:
       0: aload_0
       1: getfield      #6                  // Field locksAcquired:Z
       4: ireturn

  public void lockAcquired(long);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #6                  // Field locksAcquired:Z
       5: aload_0
       6: getfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
       9: lload_1
      10: invokestatic  #7                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      13: invokevirtual #8                  // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
      16: return

  public void lockReleased();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
       4: invokevirtual #9                  // Method java/util/LinkedList.peek:()Ljava/lang/Object;
       7: ifnull        18
      10: aload_0
      11: getfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
      14: invokevirtual #10                 // Method java/util/LinkedList.removeFirst:()Ljava/lang/Object;
      17: pop
      18: aload_0
      19: getfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
      22: invokevirtual #9                  // Method java/util/LinkedList.peek:()Ljava/lang/Object;
      25: ifnonnull     33
      28: aload_0
      29: iconst_0
      30: putfield      #6                  // Field locksAcquired:Z
      33: return

  public boolean areLocksAcquiredByOtherThreads(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field lockAcquisitionStack:Ljava/util/LinkedList;
       4: invokevirtual #11                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_3
       8: aload_3
       9: invokeinterface #12,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          43
      17: aload_3
      18: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #14                 // class java/lang/Long
      26: astore        4
      28: aload         4
      30: invokevirtual #15                 // Method java/lang/Long.longValue:()J
      33: lload_1
      34: lcmp
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: goto          8
      43: iconst_0
      44: ireturn

  net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContextThreadLocal$ExplicitLockingContextImpl(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContextThreadLocal$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
