Compiled from "LocalReadsOnTimeoutStore.java"
public class net.sf.ehcache.constructs.nonstop.store.LocalReadsOnTimeoutStore implements net.sf.ehcache.constructs.nonstop.store.NonstopStore {
  public static final net.sf.ehcache.constructs.nonstop.NonstopTimeoutBehaviorFactory FACTORY;

  private final net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder nonstopActiveDelegateHolder;

  public net.sf.ehcache.constructs.nonstop.store.LocalReadsOnTimeoutStore(net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       9: return

  public void unpinAll();
    Code:
       0: return

  public boolean isPinned(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void setPinned(java.lang.Object, boolean);
    Code:
       0: return

  public net.sf.ehcache.Element get(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method getQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
       5: areturn

  public java.util.List getKeys() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: new           #4                  // class java/util/ArrayList
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       8: invokespecial #6                  // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      11: invokestatic  #7                  // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      14: areturn

  private java.util.Set getUnderlyingLocalKeys();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       4: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
       9: invokeinterface #9,  1            // InterfaceMethod net/sf/ehcache/store/TerracottaStore.getLocalKeys:()Ljava/util/Set;
      14: areturn

  public net.sf.ehcache.Element getQuiet(java.lang.Object) throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       4: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
       9: aload_1
      10: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.unsafeGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      15: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAllQuiet(java.util.Collection<?>);
    Code:
       0: new           #11                 // class java/util/HashMap
       3: dup
       4: invokespecial #12                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #13,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_3
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore        4
      32: aload_2
      33: aload         4
      35: aload_0
      36: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
      39: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
      44: aload         4
      46: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.unsafeGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      51: invokeinterface #16,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: goto          15
      60: aload_2
      61: areturn

  public java.util.Map<java.lang.Object, net.sf.ehcache.Element> getAll(java.util.Collection<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method getAllQuiet:(Ljava/util/Collection;)Ljava/util/Map;
       5: areturn

  public boolean put(net.sf.ehcache.Element) throws java.lang.IllegalArgumentException, java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public void putAll(java.util.Collection<net.sf.ehcache.Element>) throws net.sf.ehcache.CacheException;
    Code:
       0: return

  public net.sf.ehcache.Element remove(java.lang.Object) throws java.lang.IllegalStateException;
    Code:
       0: aconst_null
       1: areturn

  public void removeAll(java.util.Collection<?>) throws java.lang.IllegalStateException;
    Code:
       0: return

  public void removeAll() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: return

  public void flush() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: return

  public java.lang.Object getInternalContext();
    Code:
       0: aconst_null
       1: areturn

  public int getSize() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public net.sf.ehcache.Element putIfAbsent(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element replace(net.sf.ehcache.Element) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public void addStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: return

  public boolean bufferFull();
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #19                 // Method containsKeyInMemory:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean containsKeyInMemory(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       4: aload_1
       5: invokeinterface #20,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeyOffHeap(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public boolean containsKeyOnDisk(java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public void dispose();
    Code:
       0: return

  public net.sf.ehcache.search.Results executeQuery(net.sf.ehcache.store.StoreQuery);
    Code:
       0: getstatic     #21                 // Field net/sf/ehcache/search/NullResults.INSTANCE:Lnet/sf/ehcache/search/NullResults;
       3: areturn

  public void expireElements();
    Code:
       0: return

  public net.sf.ehcache.store.Policy getInMemoryEvictionPolicy();
    Code:
       0: aconst_null
       1: areturn

  public int getInMemorySize();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public long getInMemorySizeInBytes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       4: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
       9: invokeinterface #22,  1           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.getInMemorySizeInBytes:()J
      14: lreturn

  public java.lang.Object getMBean();
    Code:
       0: aconst_null
       1: areturn

  public int getOffHeapSize();
    Code:
       0: iconst_0
       1: ireturn

  public long getOffHeapSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public int getOnDiskSize();
    Code:
       0: iconst_0
       1: ireturn

  public long getOnDiskSizeInBytes();
    Code:
       0: lconst_0
       1: lreturn

  public boolean hasAbortedSizeOf();
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Status getStatus();
    Code:
       0: aconst_null
       1: areturn

  public int getTerracottaClusteredSize();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public boolean isCacheCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isClusterCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isNodeCoherent();
    Code:
       0: iconst_0
       1: ireturn

  public boolean putWithWriter(net.sf.ehcache.Element, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.Element removeElement(net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException;
    Code:
       0: aconst_null
       1: areturn

  public void removeStoreListener(net.sf.ehcache.store.StoreListener);
    Code:
       0: return

  public net.sf.ehcache.Element removeWithWriter(java.lang.Object, net.sf.ehcache.writer.CacheWriterManager) throws net.sf.ehcache.CacheException;
    Code:
       0: aconst_null
       1: areturn

  public boolean replace(net.sf.ehcache.Element, net.sf.ehcache.Element, net.sf.ehcache.store.ElementValueComparator) throws java.lang.NullPointerException, java.lang.IllegalArgumentException;
    Code:
       0: iconst_0
       1: ireturn

  public void setAttributeExtractors(java.util.Map<java.lang.String, net.sf.ehcache.search.attribute.AttributeExtractor>);
    Code:
       0: return

  public void setInMemoryEvictionPolicy(net.sf.ehcache.store.Policy);
    Code:
       0: return

  public void setNodeCoherent(boolean) throws java.lang.UnsupportedOperationException;
    Code:
       0: return

  public void waitUntilClusterCoherent() throws java.lang.UnsupportedOperationException;
    Code:
       0: return

  public <T> net.sf.ehcache.search.Attribute<T> getSearchAttribute(java.lang.String);
    Code:
       0: new           #23                 // class net/sf/ehcache/search/Attribute
       3: dup
       4: aload_1
       5: invokespecial #24                 // Method net/sf/ehcache/search/Attribute."<init>":(Ljava/lang/String;)V
       8: areturn

  public java.util.Set getLocalKeys();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method getUnderlyingLocalKeys:()Ljava/util/Set;
       4: areturn

  public net.sf.ehcache.config.CacheConfiguration$TransactionalMode getTransactionalMode();
    Code:
       0: aconst_null
       1: areturn

  public net.sf.ehcache.Element unlockedGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #25                 // Method unlockedGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
       5: areturn

  public net.sf.ehcache.Element unlockedGetQuiet(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       4: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
       9: aload_1
      10: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.unsafeGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      15: areturn

  public net.sf.ehcache.Element unsafeGet(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method unsafeGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
       5: areturn

  public net.sf.ehcache.Element unsafeGetQuiet(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field nonstopActiveDelegateHolder:Lnet/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder;
       4: invokeinterface #8,  1            // InterfaceMethod net/sf/ehcache/constructs/nonstop/NonstopActiveDelegateHolder.getUnderlyingTerracottaStore:()Lnet/sf/ehcache/store/TerracottaStore;
       9: aload_1
      10: invokeinterface #10,  2           // InterfaceMethod net/sf/ehcache/store/TerracottaStore.unsafeGetQuiet:(Ljava/lang/Object;)Lnet/sf/ehcache/Element;
      15: areturn

  public <V> V executeClusterOperation(net.sf.ehcache.constructs.nonstop.ClusterOperation<V>);
    Code:
       0: aload_1
       1: getstatic     #27                 // Field net/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType.LOCAL_READS:Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;
       4: invokeinterface #28,  2           // InterfaceMethod net/sf/ehcache/constructs/nonstop/ClusterOperation.performClusterOperationTimedOut:(Lnet/sf/ehcache/config/TimeoutBehaviorConfiguration$TimeoutBehaviorType;)Ljava/lang/Object;
       9: areturn

  public void recalculateSize(java.lang.Object);
    Code:
       0: new           #29                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #30                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  static {};
    Code:
       0: new           #31                 // class net/sf/ehcache/constructs/nonstop/store/LocalReadsOnTimeoutStore$1
       3: dup
       4: invokespecial #32                 // Method net/sf/ehcache/constructs/nonstop/store/LocalReadsOnTimeoutStore$1."<init>":()V
       7: putstatic     #33                 // Field FACTORY:Lnet/sf/ehcache/constructs/nonstop/NonstopTimeoutBehaviorFactory;
      10: return
}
