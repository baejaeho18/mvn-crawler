Compiled from "NonstopThreadPool.java"
class net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WorkerThreadLocal {
  private final net.sf.ehcache.constructs.nonstop.NonstopThreadPool$Worker worker;

  private final net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WeakWorkerReference appThreadReference;

  public net.sf.ehcache.constructs.nonstop.NonstopThreadPool$WorkerThreadLocal(java.util.concurrent.ThreadFactory, java.lang.ref.ReferenceQueue<java.lang.Thread>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class net/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker
       8: dup
       9: invokespecial #3                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker."<init>":()V
      12: putfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
      20: invokeinterface #5,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      25: invokevirtual #6                  // Method java/lang/Thread.start:()V
      28: aload_0
      29: new           #7                  // class net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WeakWorkerReference
      32: dup
      33: aload_0
      34: getfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
      37: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      40: aload_2
      41: invokespecial #9                  // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WeakWorkerReference."<init>":(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;Ljava/lang/Thread;Ljava/lang/ref/ReferenceQueue;)V
      44: putfield      #10                 // Field appThreadReference:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WeakWorkerReference;
      47: return

  public java.lang.StackTraceElement[] getStackTrace();
    Code:
       0: aload_0
       1: getfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
       4: invokevirtual #11                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker.getStackTrace:()[Ljava/lang/StackTraceElement;
       7: areturn

  public void shutdownNow();
    Code:
       0: aload_0
       1: getfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
       4: invokevirtual #12                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker.shutdownNow:()V
       7: return

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: invokestatic  #8                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #13                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_2
       7: new           #14                 // class net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal$1
      10: dup
      11: aload_0
      12: aload_1
      13: aload_2
      14: invokespecial #15                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal$1."<init>":(Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$WorkerThreadLocal;Ljava/util/concurrent/Callable;Ljava/lang/ClassLoader;)V
      17: astore_3
      18: aload_0
      19: getfield      #4                  // Field worker:Lnet/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker;
      22: aload_3
      23: invokevirtual #16                 // Method net/sf/ehcache/constructs/nonstop/NonstopThreadPool$Worker.addTask:(Ljava/lang/Runnable;)V
      26: aload_3
      27: areturn
}
