Compiled from "CountingThreadFactory.java"
public class net.sf.ehcache.constructs.nonstop.util.CountingThreadFactory implements java.util.concurrent.ThreadFactory {
  private final java.util.concurrent.atomic.AtomicInteger count;

  private final java.util.concurrent.ThreadFactory actualFactory;

  public net.sf.ehcache.constructs.nonstop.util.CountingThreadFactory(java.util.concurrent.ThreadFactory);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicInteger
       8: dup
       9: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      12: putfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field actualFactory:Ljava/util/concurrent/ThreadFactory;
      20: return

  public java.lang.Thread newThread(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field actualFactory:Ljava/util/concurrent/ThreadFactory;
       4: new           #7                  // class net/sf/ehcache/constructs/nonstop/util/CountingThreadFactory$RunnableWithLifeCycle
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #8                  // Method net/sf/ehcache/constructs/nonstop/util/CountingThreadFactory$RunnableWithLifeCycle."<init>":(Lnet/sf/ehcache/constructs/nonstop/util/CountingThreadFactory;Ljava/lang/Runnable;)V
      13: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ThreadFactory.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;
      18: astore_2
      19: aload_2
      20: ifnull        31
      23: aload_0
      24: getfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
      27: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
      30: pop
      31: aload_2
      32: areturn

  public int getNumberOfThreads();
    Code:
       0: aload_0
       1: getfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  private void threadExecutionComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field count:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
       7: pop
       8: return

  static void access$000(net.sf.ehcache.constructs.nonstop.util.CountingThreadFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method threadExecutionComplete:()V
       4: return
}
