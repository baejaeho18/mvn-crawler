Compiled from "NonstopSync.java"
abstract class net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType extends java.lang.Enum<net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType> {
  public static final net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType TRY_LOCK;

  public static final net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType UNLOCK;

  private static final net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType[] $VALUES;

  public static net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType[] values();
    Code:
       0: getstatic     #2                  // Field $VALUES:[Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
       3: invokevirtual #3                  // Method "[Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;".clone:()Ljava/lang/Object;
       6: checkcast     #4                  // class "[Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;"
       9: areturn

  public static net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType valueOf(java.lang.String);
    Code:
       0: ldc_w         #5                  // class net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType
       3: aload_0
       4: invokestatic  #6                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       7: checkcast     #5                  // class net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType
      10: areturn

  private net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #7                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public abstract boolean performOperation(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, long, net.sf.ehcache.concurrent.LockType, net.sf.ehcache.config.NonstopConfiguration) throws java.lang.Exception;

  public abstract void rollback(net.sf.ehcache.constructs.nonstop.concurrency.ExplicitLockingContext, net.sf.ehcache.constructs.nonstop.NonstopActiveDelegateHolder, java.lang.Object, net.sf.ehcache.concurrent.LockType, boolean);

  net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$LockOperationType(java.lang.String, int, net.sf.ehcache.constructs.nonstop.concurrency.NonstopSync$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method "<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #8                  // class net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType$1
       3: dup
       4: ldc           #9                  // String TRY_LOCK
       6: iconst_0
       7: invokespecial #10                 // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType$1."<init>":(Ljava/lang/String;I)V
      10: putstatic     #11                 // Field TRY_LOCK:Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
      13: new           #12                 // class net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType$2
      16: dup
      17: ldc           #13                 // String UNLOCK
      19: iconst_1
      20: invokespecial #14                 // Method net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType$2."<init>":(Ljava/lang/String;I)V
      23: putstatic     #15                 // Field UNLOCK:Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
      26: iconst_2
      27: anewarray     #5                  // class net/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType
      30: dup
      31: iconst_0
      32: getstatic     #11                 // Field TRY_LOCK:Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
      35: aastore
      36: dup
      37: iconst_1
      38: getstatic     #15                 // Field UNLOCK:Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
      41: aastore
      42: putstatic     #2                  // Field $VALUES:[Lnet/sf/ehcache/constructs/nonstop/concurrency/NonstopSync$LockOperationType;
      45: return
}
