Compiled from "CacheConfiguration.java"
public class net.sf.ehcache.management.CacheConfiguration implements net.sf.ehcache.management.CacheConfigurationMBean,java.io.Serializable {
  private static final long serialVersionUID;

  private final transient net.sf.ehcache.config.CacheConfiguration cacheConfiguration;

  private final javax.management.ObjectName objectName;

  public net.sf.ehcache.management.CacheConfiguration(net.sf.ehcache.Ehcache);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokeinterface #2,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
      11: putfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
      14: aload_0
      15: aload_1
      16: invokeinterface #4,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
      21: invokevirtual #5                  // Method net/sf/ehcache/CacheManager.toString:()Ljava/lang/String;
      24: aload_1
      25: invokeinterface #6,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
      30: invokestatic  #7                  // Method createObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      33: putfield      #8                  // Field objectName:Ljavax/management/ObjectName;
      36: return

  static javax.management.ObjectName createObjectName(java.lang.String, java.lang.String);
    Code:
       0: new           #9                  // class javax/management/ObjectName
       3: dup
       4: new           #10                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #12                 // String net.sf.ehcache:type=CacheConfiguration,CacheManager=
      13: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #14                 // String ,name=
      22: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokestatic  #15                 // Method net/sf/ehcache/hibernate/management/impl/EhcacheHibernateMbeanNames.mbeanSafe:(Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #17                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: goto          52
      42: astore_3
      43: new           #19                 // class net/sf/ehcache/CacheException
      46: dup
      47: aload_3
      48: invokespecial #20                 // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/Throwable;)V
      51: athrow
      52: aload_2
      53: areturn
    Exception table:
       from    to  target type
           0    39    42   Class javax/management/MalformedObjectNameException

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #21                 // Method net/sf/ehcache/config/CacheConfiguration.getName:()Ljava/lang/String;
       7: areturn

  public boolean isLoggingEnabled();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #22                 // Method net/sf/ehcache/config/CacheConfiguration.getLogging:()Z
       7: ireturn

  public void setLoggingEnabled(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #23                 // Method net/sf/ehcache/config/CacheConfiguration.setLogging:(Z)V
       8: return

  public int getMaxElementsInMemory();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #24                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxElementsInMemory:()I
       7: ireturn

  public void setMaxElementsInMemory(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #25                 // Method net/sf/ehcache/config/CacheConfiguration.setMaxElementsInMemory:(I)V
       8: return

  public int getMaxElementsOnDisk();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #26                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxElementsOnDisk:()I
       7: ireturn

  public void setMaxElementsOnDisk(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #27                 // Method net/sf/ehcache/config/CacheConfiguration.setMaxElementsOnDisk:(I)V
       8: return

  public java.lang.String getMemoryStoreEvictionPolicy();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #28                 // Method net/sf/ehcache/config/CacheConfiguration.getMemoryStoreEvictionPolicy:()Lnet/sf/ehcache/store/MemoryStoreEvictionPolicy;
       7: invokevirtual #29                 // Method net/sf/ehcache/store/MemoryStoreEvictionPolicy.toString:()Ljava/lang/String;
      10: areturn

  public void setMemoryStoreEvictionPolicy(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: aload_1
       5: invokevirtual #30                 // Method net/sf/ehcache/config/CacheConfiguration.setMemoryStoreEvictionPolicy:(Ljava/lang/String;)V
       8: return

  public boolean isEternal();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #31                 // Method net/sf/ehcache/config/CacheConfiguration.isEternal:()Z
       7: ireturn

  public void setEternal(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #32                 // Method net/sf/ehcache/config/CacheConfiguration.setEternal:(Z)V
       8: return

  public long getTimeToIdleSeconds();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #33                 // Method net/sf/ehcache/config/CacheConfiguration.getTimeToIdleSeconds:()J
       7: lreturn

  public void setTimeToIdleSeconds(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: lload_1
       5: invokevirtual #34                 // Method net/sf/ehcache/config/CacheConfiguration.setTimeToIdleSeconds:(J)V
       8: return

  public long getTimeToLiveSeconds();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #35                 // Method net/sf/ehcache/config/CacheConfiguration.getTimeToLiveSeconds:()J
       7: lreturn

  public void setTimeToLiveSeconds(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: lload_1
       5: invokevirtual #36                 // Method net/sf/ehcache/config/CacheConfiguration.setTimeToLiveSeconds:(J)V
       8: return

  public boolean isOverflowToDisk();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #37                 // Method net/sf/ehcache/config/CacheConfiguration.isOverflowToDisk:()Z
       7: ireturn

  public void setOverflowToDisk(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #38                 // Method net/sf/ehcache/config/CacheConfiguration.setOverflowToDisk:(Z)V
       8: return

  public boolean isDiskPersistent();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #39                 // Method net/sf/ehcache/config/CacheConfiguration.isDiskPersistent:()Z
       7: ireturn

  public void setDiskPersistent(boolean);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #40                 // Method net/sf/ehcache/config/CacheConfiguration.setDiskPersistent:(Z)V
       8: return

  public int getDiskSpoolBufferSizeMB();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #41                 // Method net/sf/ehcache/config/CacheConfiguration.getDiskSpoolBufferSizeMB:()I
       7: ireturn

  public void setDiskSpoolBufferSizeMB(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: iload_1
       5: invokevirtual #42                 // Method net/sf/ehcache/config/CacheConfiguration.setDiskSpoolBufferSizeMB:(I)V
       8: return

  public long getDiskExpiryThreadIntervalSeconds();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #43                 // Method net/sf/ehcache/config/CacheConfiguration.getDiskExpiryThreadIntervalSeconds:()J
       7: lreturn

  public final void setDiskExpiryThreadIntervalSeconds(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: lload_1
       5: invokevirtual #44                 // Method net/sf/ehcache/config/CacheConfiguration.setDiskExpiryThreadIntervalSeconds:(J)V
       8: return

  public boolean isTerracottaClustered();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #45                 // Method net/sf/ehcache/config/CacheConfiguration.isTerracottaClustered:()Z
       7: ireturn

  public java.lang.String getTerracottaConsistency();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #46                 // Method net/sf/ehcache/config/CacheConfiguration.getTerracottaConsistency:()Lnet/sf/ehcache/config/TerracottaConfiguration$Consistency;
       7: astore_1
       8: aload_1
       9: ifnull        19
      12: aload_1
      13: invokevirtual #47                 // Method net/sf/ehcache/config/TerracottaConfiguration$Consistency.name:()Ljava/lang/String;
      16: goto          21
      19: ldc           #48                 // String na
      21: areturn

  javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #8                  // Field objectName:Ljavax/management/ObjectName;
       4: areturn

  public boolean isOverflowToOffHeap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #49                 // Method net/sf/ehcache/config/CacheConfiguration.isOverflowToOffHeap:()Z
       7: ireturn

  public long getMaxMemoryOffHeapInBytes();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #50                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxMemoryOffHeapInBytes:()J
       7: lreturn

  public long getMaxEntriesLocalDisk();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #51                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxEntriesLocalDisk:()J
       7: lreturn

  public long getMaxEntriesLocalHeap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #52                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxEntriesLocalHeap:()J
       7: lreturn

  public void setMaxEntriesLocalDisk(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: lload_1
       5: invokevirtual #53                 // Method net/sf/ehcache/config/CacheConfiguration.setMaxEntriesLocalDisk:(J)V
       8: return

  public void setMaxEntriesLocalHeap(long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: lload_1
       5: invokevirtual #54                 // Method net/sf/ehcache/config/CacheConfiguration.setMaxEntriesLocalHeap:(J)V
       8: return

  public long getMaxBytesLocalDisk();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #55                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxBytesLocalDisk:()J
       7: lreturn

  public long getMaxBytesLocalHeap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #56                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxBytesLocalHeap:()J
       7: lreturn

  public long getMaxBytesLocalOffHeap();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheConfiguration:Lnet/sf/ehcache/config/CacheConfiguration;
       4: invokevirtual #57                 // Method net/sf/ehcache/config/CacheConfiguration.getMaxBytesLocalOffHeap:()J
       7: lreturn
}
