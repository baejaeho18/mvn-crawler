Compiled from "Cache.java"
public class net.sf.ehcache.management.Cache implements net.sf.ehcache.management.CacheMBean,java.io.Serializable {
  private static final long serialVersionUID;

  private transient net.sf.ehcache.Ehcache cache;

  private javax.management.ObjectName objectName;

  public net.sf.ehcache.management.Cache(net.sf.ehcache.Ehcache) throws net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getCacheManager:()Lnet/sf/ehcache/CacheManager;
      16: invokevirtual #4                  // Method net/sf/ehcache/CacheManager.toString:()Ljava/lang/String;
      19: aload_1
      20: invokeinterface #5,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
      25: invokestatic  #6                  // Method createObjectName:(Ljava/lang/String;Ljava/lang/String;)Ljavax/management/ObjectName;
      28: putfield      #7                  // Field objectName:Ljavax/management/ObjectName;
      31: return

  static javax.management.ObjectName createObjectName(java.lang.String, java.lang.String);
    Code:
       0: new           #8                  // class javax/management/ObjectName
       3: dup
       4: new           #9                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #10                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #11                 // String net.sf.ehcache:type=Cache,CacheManager=
      13: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #13                 // String ,name=
      22: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_1
      26: invokestatic  #14                 // Method net/sf/ehcache/hibernate/management/impl/EhcacheHibernateMbeanNames.mbeanSafe:(Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #16                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      38: astore_2
      39: goto          52
      42: astore_3
      43: new           #18                 // class net/sf/ehcache/CacheException
      46: dup
      47: aload_3
      48: invokespecial #19                 // Method net/sf/ehcache/CacheException."<init>":(Ljava/lang/Throwable;)V
      51: athrow
      52: aload_2
      53: areturn
    Exception table:
       from    to  target type
           0    39    42   Class javax/management/MalformedObjectNameException

  public void removeAll() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokestatic  #20                 // Method net/sf/ehcache/util/CacheTransactionHelper.beginTransactionIfNeeded:(Lnet/sf/ehcache/Ehcache;)V
       7: aload_0
       8: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
      11: invokeinterface #21,  1           // InterfaceMethod net/sf/ehcache/Ehcache.removeAll:()V
      16: aload_0
      17: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
      20: invokestatic  #22                 // Method net/sf/ehcache/util/CacheTransactionHelper.commitTransactionIfNeeded:(Lnet/sf/ehcache/Ehcache;)V
      23: goto          36
      26: astore_1
      27: aload_0
      28: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
      31: invokestatic  #22                 // Method net/sf/ehcache/util/CacheTransactionHelper.commitTransactionIfNeeded:(Lnet/sf/ehcache/Ehcache;)V
      34: aload_1
      35: athrow
      36: return
    Exception table:
       from    to  target type
           7    16    26   any
          26    27    26   any

  public void flush() throws java.lang.IllegalStateException, net.sf.ehcache.CacheException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #23,  1           // InterfaceMethod net/sf/ehcache/Ehcache.flush:()V
       9: return

  public java.lang.String getStatus();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #24,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getStatus:()Lnet/sf/ehcache/Status;
       9: invokevirtual #25                 // Method net/sf/ehcache/Status.toString:()Ljava/lang/String;
      12: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #5,  1            // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
       9: areturn

  public boolean isTerracottaClustered();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #26,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getCacheConfiguration:()Lnet/sf/ehcache/config/CacheConfiguration;
       9: invokevirtual #27                 // Method net/sf/ehcache/config/CacheConfiguration.isTerracottaClustered:()Z
      12: ireturn

  public boolean hasAbortedSizeOf();
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokeinterface #28,  1           // InterfaceMethod net/sf/ehcache/Ehcache.hasAbortedSizeOf:()Z
       9: ireturn

  public net.sf.ehcache.management.CacheConfiguration getCacheConfiguration();
    Code:
       0: new           #29                 // class net/sf/ehcache/management/CacheConfiguration
       3: dup
       4: aload_0
       5: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       8: invokespecial #30                 // Method net/sf/ehcache/management/CacheConfiguration."<init>":(Lnet/sf/ehcache/Ehcache;)V
      11: areturn

  public net.sf.ehcache.management.CacheStatistics getStatistics();
    Code:
       0: new           #31                 // class net/sf/ehcache/management/CacheStatistics
       3: dup
       4: aload_0
       5: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       8: invokespecial #32                 // Method net/sf/ehcache/management/CacheStatistics."<init>":(Lnet/sf/ehcache/Ehcache;)V
      11: areturn

  net.sf.ehcache.management.Store getStore() throws javax.management.NotCompliantMBeanException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field cache:Lnet/sf/ehcache/Ehcache;
       4: invokestatic  #33                 // Method net/sf/ehcache/management/Store.getBean:(Lnet/sf/ehcache/Ehcache;)Lnet/sf/ehcache/management/Store;
       7: areturn

  javax.management.ObjectName getObjectName();
    Code:
       0: aload_0
       1: getfield      #7                  // Field objectName:Ljavax/management/ObjectName;
       4: areturn
}
