Compiled from "RotatingSnapshotFile.java"
class net.sf.ehcache.terracotta.RotatingSnapshotFile {
  private static final org.slf4j.Logger LOG;

  private static final java.lang.String SUFFIX_OK;

  private static final java.lang.String SUFFIX_PROGRESS;

  private static final java.lang.String SUFFIX_MOVE;

  private volatile boolean shutdownOnThreadInterrupted;

  private final java.lang.String cacheName;

  private final java.util.concurrent.locks.Lock readLock;

  private final java.util.concurrent.locks.Lock writeLock;

  private final net.sf.ehcache.DiskStorePathManager diskStorePathManager;

  net.sf.ehcache.terracotta.RotatingSnapshotFile(net.sf.ehcache.DiskStorePathManager, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: new           #2                  // class java/util/concurrent/locks/ReentrantReadWriteLock
       7: dup
       8: invokespecial #3                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.readLock:()Ljava/util/concurrent/locks/Lock;
      19: putfield      #5                  // Field readLock:Ljava/util/concurrent/locks/Lock;
      22: aload_0
      23: aload_3
      24: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/locks/ReadWriteLock.writeLock:()Ljava/util/concurrent/locks/Lock;
      29: putfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      32: aload_0
      33: aload_1
      34: putfield      #8                  // Field diskStorePathManager:Lnet/sf/ehcache/DiskStorePathManager;
      37: aload_0
      38: aload_2
      39: putfield      #9                  // Field cacheName:Ljava/lang/String;
      42: return

  void writeAll(java.lang.Iterable) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: lconst_0
      10: lstore_2
      11: aload_0
      12: invokevirtual #11                 // Method newSnapshotFile:()Ljava/io/File;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokespecial #12                 // Method cleanUp:(Ljava/io/File;)V
      23: aload         4
      25: invokevirtual #13                 // Method java/io/File.createNewFile:()Z
      28: ifne          67
      31: new           #14                 // class java/lang/AssertionError
      34: dup
      35: new           #15                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #17                 // String The file \'
      44: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         4
      49: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      52: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #20                 // String \' exists already!
      57: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: invokespecial #22                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      66: athrow
      67: new           #23                 // class java/io/FileOutputStream
      70: dup
      71: aload         4
      73: invokespecial #24                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      76: astore        5
      78: new           #25                 // class java/io/ObjectOutputStream
      81: dup
      82: aload         5
      84: invokespecial #26                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      87: astore        6
      89: aload_1
      90: invokeinterface #27,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      95: astore        7
      97: aload         7
      99: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     104: ifeq          193
     107: aload         7
     109: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: astore        8
     116: aload_0
     117: getfield      #30                 // Field shutdownOnThreadInterrupted:Z
     120: ifeq          179
     123: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     126: invokevirtual #32                 // Method java/lang/Thread.isInterrupted:()Z
     129: ifeq          179
     132: aload         5
     134: invokevirtual #33                 // Method java/io/FileOutputStream.close:()V
     137: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     140: new           #15                 // class java/lang/StringBuilder
     143: dup
     144: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     147: ldc           #35                 // String Did a snapshot of
     149: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: lload_2
     153: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     156: ldc           #37                 // String  local keys
     158: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     164: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     169: aload_0
     170: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
     173: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     178: return
     179: aload         6
     181: aload         8
     183: invokevirtual #40                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     186: lload_2
     187: lconst_1
     188: ladd
     189: lstore_2
     190: goto          97
     193: aload         5
     195: invokevirtual #33                 // Method java/io/FileOutputStream.close:()V
     198: goto          211
     201: astore        9
     203: aload         5
     205: invokevirtual #33                 // Method java/io/FileOutputStream.close:()V
     208: aload         9
     210: athrow
     211: aload_0
     212: aload         4
     214: invokespecial #41                 // Method swapForOldWithNewSnapshot:(Ljava/io/File;)V
     217: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     220: new           #15                 // class java/lang/StringBuilder
     223: dup
     224: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     227: ldc           #35                 // String Did a snapshot of
     229: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: lload_2
     233: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     236: ldc           #37                 // String  local keys
     238: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     241: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     244: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     249: aload_0
     250: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
     253: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     258: goto          307
     261: astore        10
     263: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     266: new           #15                 // class java/lang/StringBuilder
     269: dup
     270: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     273: ldc           #35                 // String Did a snapshot of
     275: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     278: lload_2
     279: invokevirtual #36                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     282: ldc           #37                 // String  local keys
     284: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     287: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     290: invokeinterface #38,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     295: aload_0
     296: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
     299: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     304: aload         10
     306: athrow
     307: return
    Exception table:
       from    to  target type
          89   132   201   any
         179   193   201   any
         201   203   201   any
          11   137   261   any
         179   217   261   any
         261   263   261   any

  <T> java.util.Set<T> readAll() throws java.io.IOException;
    Code:
       0: aload_0
       1: invokespecial #42                 // Method cleanUp:()V
       4: aload_0
       5: getfield      #5                  // Field readLock:Ljava/util/concurrent/locks/Lock;
       8: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      13: aload_0
      14: invokevirtual #43                 // Method currentSnapshotFile:()Ljava/io/File;
      17: astore_1
      18: aload_1
      19: invokevirtual #44                 // Method java/io/File.exists:()Z
      22: ifne          40
      25: invokestatic  #45                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      28: astore_2
      29: aload_0
      30: getfield      #5                  // Field readLock:Ljava/util/concurrent/locks/Lock;
      33: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      38: aload_2
      39: areturn
      40: new           #46                 // class java/util/HashSet
      43: dup
      44: invokespecial #47                 // Method java/util/HashSet."<init>":()V
      47: astore_2
      48: new           #48                 // class java/io/FileInputStream
      51: dup
      52: aload_1
      53: invokespecial #49                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      56: astore_3
      57: new           #50                 // class net/sf/ehcache/util/PreferTCCLObjectInputStream
      60: dup
      61: aload_3
      62: invokespecial #51                 // Method net/sf/ehcache/util/PreferTCCLObjectInputStream."<init>":(Ljava/io/InputStream;)V
      65: astore        4
      67: iconst_0
      68: istore        5
      70: iload         5
      72: ifne          106
      75: aload_2
      76: aload         4
      78: invokevirtual #52                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      81: invokeinterface #53,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      86: pop
      87: goto          70
      90: astore        6
      92: aload         6
      94: instanceof    #55                 // class java/io/EOFException
      97: ifeq          103
     100: iconst_1
     101: istore        5
     103: goto          70
     106: aload         4
     108: invokevirtual #56                 // Method java/io/ObjectInputStream.close:()V
     111: goto          134
     114: astore        6
     116: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
     119: ldc           #58                 // String Error closing ObjectInputStream
     121: aload         6
     123: invokeinterface #59,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
     128: aload_0
     129: aload_3
     130: aload_1
     131: invokespecial #60                 // Method closeAndDeleteAssociatedFileOnFailure:(Ljava/io/FileInputStream;Ljava/io/File;)V
     134: goto          145
     137: astore        4
     139: aload_0
     140: aload_3
     141: aload_1
     142: invokespecial #60                 // Method closeAndDeleteAssociatedFileOnFailure:(Ljava/io/FileInputStream;Ljava/io/File;)V
     145: aload_2
     146: invokestatic  #61                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     149: astore        4
     151: aload_0
     152: getfield      #5                  // Field readLock:Ljava/util/concurrent/locks/Lock;
     155: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     160: aload         4
     162: areturn
     163: astore        7
     165: aload_0
     166: getfield      #5                  // Field readLock:Ljava/util/concurrent/locks/Lock;
     169: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     174: aload         7
     176: athrow
    Exception table:
       from    to  target type
          75    87    90   Class java/lang/Exception
         106   111   114   Class java/io/IOException
          57   134   137   Class java/io/IOException
          13    29   163   any
          40   151   163   any
         163   165   163   any

  private void cleanUp();
    Code:
       0: aload_0
       1: invokespecial #62                 // Method requiresCleanUp:()Z
       4: ifeq          48
       7: aload_0
       8: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_0
      18: invokevirtual #11                 // Method newSnapshotFile:()Ljava/io/File;
      21: invokespecial #12                 // Method cleanUp:(Ljava/io/File;)V
      24: aload_0
      25: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      28: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      33: goto          48
      36: astore_1
      37: aload_0
      38: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      41: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      46: aload_1
      47: athrow
      48: return
    Exception table:
       from    to  target type
          16    24    36   any
          36    37    36   any

  private void cleanUp(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #62                 // Method requiresCleanUp:()Z
       4: ifeq          150
       7: aload_0
       8: invokevirtual #43                 // Method currentSnapshotFile:()Ljava/io/File;
      11: astore_2
      12: aload_2
      13: invokevirtual #44                 // Method java/io/File.exists:()Z
      16: ifeq          56
      19: aload_1
      20: invokevirtual #63                 // Method java/io/File.delete:()Z
      23: ifne          56
      26: new           #64                 // class java/lang/RuntimeException
      29: dup
      30: new           #15                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #65                 // String Couldn\'t cleanup old file
      39: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      46: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: invokevirtual #67                 // Method tempSnapshotFile:()Ljava/io/File;
      60: astore_3
      61: aload_3
      62: invokevirtual #44                 // Method java/io/File.exists:()Z
      65: ifeq          105
      68: aload_3
      69: invokevirtual #63                 // Method java/io/File.delete:()Z
      72: ifne          105
      75: new           #64                 // class java/lang/RuntimeException
      78: dup
      79: new           #15                 // class java/lang/StringBuilder
      82: dup
      83: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      86: ldc           #68                 // String Couldn\'t cleanup temp file
      88: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: aload_3
      92: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      95: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: aload_1
     106: invokevirtual #44                 // Method java/io/File.exists:()Z
     109: ifeq          150
     112: aload_1
     113: aload_2
     114: invokevirtual #69                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
     117: ifne          150
     120: new           #64                 // class java/lang/RuntimeException
     123: dup
     124: new           #15                 // class java/lang/StringBuilder
     127: dup
     128: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     131: ldc           #70                 // String Couldn\'t rename new snapshot:
     133: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_2
     137: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     140: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: return

  private boolean requiresCleanUp();
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method newSnapshotFile:()Ljava/io/File;
       4: invokevirtual #44                 // Method java/io/File.exists:()Z
       7: ireturn

  private void swapForOldWithNewSnapshot(java.io.File);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method currentSnapshotFile:()Ljava/io/File;
       4: astore_2
       5: aload_0
       6: invokevirtual #67                 // Method tempSnapshotFile:()Ljava/io/File;
       9: astore_3
      10: aload_2
      11: invokevirtual #44                 // Method java/io/File.exists:()Z
      14: ifeq          55
      17: aload_2
      18: aload_3
      19: invokevirtual #69                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      22: ifne          55
      25: new           #64                 // class java/lang/RuntimeException
      28: dup
      29: new           #15                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #71                 // String Couldn\'t rename previous snapshot:
      38: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_2
      42: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      45: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: aload_1
      56: aload_2
      57: invokevirtual #69                 // Method java/io/File.renameTo:(Ljava/io/File;)Z
      60: ifne          93
      63: new           #64                 // class java/lang/RuntimeException
      66: dup
      67: new           #15                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #70                 // String Couldn\'t rename new snapshot:
      76: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_2
      80: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      83: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_3
      94: invokevirtual #44                 // Method java/io/File.exists:()Z
      97: ifeq          137
     100: aload_3
     101: invokevirtual #63                 // Method java/io/File.delete:()Z
     104: ifne          137
     107: new           #64                 // class java/lang/RuntimeException
     110: dup
     111: new           #15                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     118: ldc           #72                 // String Couldn\'t delete temp file
     120: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_3
     124: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
     127: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     133: invokespecial #66                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
     136: athrow
     137: return

  java.io.File currentSnapshotFile();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diskStorePathManager:Lnet/sf/ehcache/DiskStorePathManager;
       4: aload_0
       5: getfield      #9                  // Field cacheName:Ljava/lang/String;
       8: ldc           #73                 // String .keySet
      10: invokevirtual #74                 // Method net/sf/ehcache/DiskStorePathManager.getFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      13: areturn

  java.io.File newSnapshotFile();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diskStorePathManager:Lnet/sf/ehcache/DiskStorePathManager;
       4: aload_0
       5: getfield      #9                  // Field cacheName:Ljava/lang/String;
       8: ldc           #75                 // String .keySet.temp
      10: invokevirtual #74                 // Method net/sf/ehcache/DiskStorePathManager.getFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      13: areturn

  java.io.File tempSnapshotFile();
    Code:
       0: aload_0
       1: getfield      #8                  // Field diskStorePathManager:Lnet/sf/ehcache/DiskStorePathManager;
       4: aload_0
       5: getfield      #9                  // Field cacheName:Ljava/lang/String;
       8: ldc           #76                 // String .keySet.old
      10: invokevirtual #74                 // Method net/sf/ehcache/DiskStorePathManager.getFile:(Ljava/lang/String;Ljava/lang/String;)Ljava/io/File;
      13: areturn

  void setShutdownOnThreadInterrupted(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #30                 // Field shutdownOnThreadInterrupted:Z
       5: return

  private void closeAndDeleteAssociatedFileOnFailure(java.io.FileInputStream, java.io.File);
    Code:
       0: aload_1
       1: invokevirtual #77                 // Method java/io/FileInputStream.close:()V
       4: goto          52
       7: astore_3
       8: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      11: ldc           #78                 // String Couldn\'t close FileInputStream on {}, deleting the file!
      13: aload_2
      14: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      17: aload_3
      18: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      23: aload_2
      24: invokevirtual #44                 // Method java/io/File.exists:()Z
      27: ifeq          52
      30: aload_2
      31: invokevirtual #63                 // Method java/io/File.delete:()Z
      34: ifne          52
      37: getstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
      40: ldc           #80                 // String Couldn\'t delete file {}
      42: aload_2
      43: invokevirtual #19                 // Method java/io/File.getAbsolutePath:()Ljava/lang/String;
      46: aload_3
      47: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      52: return
    Exception table:
       from    to  target type
           0     4     7   Class java/io/IOException

  void snapshotNowOrWaitForCurrentToFinish(java.util.Set) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #81,  1           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:()Z
       9: ifeq          44
      12: aload_0
      13: aload_1
      14: invokevirtual #82                 // Method writeAll:(Ljava/lang/Iterable;)V
      17: aload_0
      18: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      21: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      26: goto          41
      29: astore_2
      30: aload_0
      31: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      34: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      39: aload_2
      40: athrow
      41: goto          62
      44: aload_0
      45: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      53: aload_0
      54: getfield      #7                  // Field writeLock:Ljava/util/concurrent/locks/Lock;
      57: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      62: return
    Exception table:
       from    to  target type
          12    17    29   any
          29    30    29   any

  static {};
    Code:
       0: ldc_w         #83                 // class net/sf/ehcache/terracotta/RotatingSnapshotFile
       3: invokestatic  #84                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #34                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
