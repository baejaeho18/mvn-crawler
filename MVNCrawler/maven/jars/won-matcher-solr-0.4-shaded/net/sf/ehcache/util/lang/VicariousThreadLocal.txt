Compiled from "VicariousThreadLocal.java"
public class net.sf.ehcache.util.lang.VicariousThreadLocal<T> extends java.lang.ThreadLocal<T> {
  private static final java.lang.ThreadLocal<java.lang.ref.WeakReference<java.lang.Thread>> weakThread;

  private static final java.lang.Object UNINITIALISED;

  private final java.lang.ThreadLocal<java.lang.ref.WeakReference<net.sf.ehcache.util.lang.VicariousThreadLocal$Holder>> local;

  private volatile net.sf.ehcache.util.lang.VicariousThreadLocal$Holder strongRefs;

  private static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<net.sf.ehcache.util.lang.VicariousThreadLocal, net.sf.ehcache.util.lang.VicariousThreadLocal$Holder> strongRefsUpdater;

  private final java.lang.ref.ReferenceQueue<java.lang.Object> queue;

  static java.lang.ref.WeakReference<java.lang.Thread> currentThreadRef();
    Code:
       0: getstatic     #2                  // Field weakThread:Ljava/lang/ThreadLocal;
       3: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #4                  // class java/lang/ref/WeakReference
       9: astore_0
      10: aload_0
      11: ifnonnull     32
      14: new           #4                  // class java/lang/ref/WeakReference
      17: dup
      18: invokestatic  #5                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      21: invokespecial #6                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      24: astore_0
      25: getstatic     #2                  // Field weakThread:Ljava/lang/ThreadLocal;
      28: aload_0
      29: invokevirtual #7                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      32: aload_0
      33: areturn

  public net.sf.ehcache.util.lang.VicariousThreadLocal();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/ThreadLocal."<init>":()V
       4: aload_0
       5: new           #9                  // class java/lang/ThreadLocal
       8: dup
       9: invokespecial #8                  // Method java/lang/ThreadLocal."<init>":()V
      12: putfield      #10                 // Field local:Ljava/lang/ThreadLocal;
      15: aload_0
      16: new           #11                 // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #12                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #13                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      26: return

  public T get();
    Code:
       0: aload_0
       1: getfield      #10                 // Field local:Ljava/lang/ThreadLocal;
       4: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #4                  // class java/lang/ref/WeakReference
      10: astore_2
      11: aload_2
      12: ifnull        40
      15: aload_2
      16: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      19: checkcast     #15                 // class net/sf/ehcache/util/lang/VicariousThreadLocal$Holder
      22: astore_1
      23: aload_1
      24: getfield      #16                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.value:Ljava/lang/Object;
      27: astore_3
      28: aload_3
      29: getstatic     #1                  // Field UNINITIALISED:Ljava/lang/Object;
      32: if_acmpeq     37
      35: aload_3
      36: areturn
      37: goto          45
      40: aload_0
      41: invokespecial #17                 // Method createHolder:()Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      44: astore_1
      45: aload_0
      46: invokevirtual #18                 // Method initialValue:()Ljava/lang/Object;
      49: astore_3
      50: aload_1
      51: aload_3
      52: putfield      #16                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.value:Ljava/lang/Object;
      55: aload_3
      56: areturn

  public void set(T);
    Code:
       0: aload_0
       1: getfield      #10                 // Field local:Ljava/lang/ThreadLocal;
       4: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #4                  // class java/lang/ref/WeakReference
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_2
      16: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      19: checkcast     #15                 // class net/sf/ehcache/util/lang/VicariousThreadLocal$Holder
      22: goto          29
      25: aload_0
      26: invokespecial #17                 // Method createHolder:()Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      29: astore_3
      30: aload_3
      31: aload_1
      32: putfield      #16                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.value:Ljava/lang/Object;
      35: return

  private net.sf.ehcache.util.lang.VicariousThreadLocal$Holder createHolder();
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method poll:()V
       4: new           #15                 // class net/sf/ehcache/util/lang/VicariousThreadLocal$Holder
       7: dup
       8: aload_0
       9: getfield      #13                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      12: invokespecial #20                 // Method net/sf/ehcache/util/lang/VicariousThreadLocal$Holder."<init>":(Ljava/lang/ref/ReferenceQueue;)V
      15: astore_1
      16: new           #4                  // class java/lang/ref/WeakReference
      19: dup
      20: aload_1
      21: invokespecial #6                  // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
      24: astore_2
      25: aload_0
      26: getfield      #21                 // Field strongRefs:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      29: astore_3
      30: aload_1
      31: aload_3
      32: putfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      35: getstatic     #23                 // Field strongRefsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      38: aload_0
      39: aload_3
      40: aload_1
      41: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          25
      47: aload_0
      48: getfield      #10                 // Field local:Ljava/lang/ThreadLocal;
      51: aload_2
      52: invokevirtual #7                  // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      55: aload_1
      56: areturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #10                 // Field local:Ljava/lang/ThreadLocal;
       4: invokevirtual #3                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       7: checkcast     #4                  // class java/lang/ref/WeakReference
      10: astore_1
      11: aload_1
      12: ifnull        28
      15: aload_1
      16: invokevirtual #14                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      19: checkcast     #15                 // class net/sf/ehcache/util/lang/VicariousThreadLocal$Holder
      22: getstatic     #1                  // Field UNINITIALISED:Ljava/lang/Object;
      25: putfield      #16                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.value:Ljava/lang/Object;
      28: return

  public void poll();
    Code:
       0: aload_0
       1: getfield      #13                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #13                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: invokevirtual #25                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      14: ifnonnull     20
      17: aload_1
      18: monitorexit
      19: return
      20: aload_0
      21: getfield      #13                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      24: invokevirtual #25                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      27: ifnull        33
      30: goto          20
      33: aload_0
      34: getfield      #21                 // Field strongRefs:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      37: astore_2
      38: aload_2
      39: ifnonnull     45
      42: aload_1
      43: monitorexit
      44: return
      45: aload_2
      46: astore_3
      47: aload_3
      48: getfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      51: astore        4
      53: aload         4
      55: ifnull        95
      58: aload         4
      60: invokevirtual #26                 // Method net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.get:()Ljava/lang/Object;
      63: ifnonnull     82
      66: aload         4
      68: getfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      71: astore        4
      73: aload_3
      74: aload         4
      76: putfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      79: goto          53
      82: aload         4
      84: astore_3
      85: aload         4
      87: getfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
      90: astore        4
      92: goto          53
      95: aload_2
      96: invokevirtual #26                 // Method net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.get:()Ljava/lang/Object;
      99: ifnonnull     122
     102: getstatic     #23                 // Field strongRefsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     105: aload_0
     106: aload_2
     107: aload_2
     108: getfield      #22                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.next:Lnet/sf/ehcache/util/lang/VicariousThreadLocal$Holder;
     111: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.weakCompareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     114: ifne          122
     117: aload_2
     118: aconst_null
     119: putfield      #16                 // Field net/sf/ehcache/util/lang/VicariousThreadLocal$Holder.value:Ljava/lang/Object;
     122: aload_1
     123: monitorexit
     124: goto          134
     127: astore        5
     129: aload_1
     130: monitorexit
     131: aload         5
     133: athrow
     134: return
    Exception table:
       from    to  target type
           7    19   127   any
          20    44   127   any
          45   124   127   any
         127   131   127   any

  static java.lang.Object access$000();
    Code:
       0: getstatic     #1                  // Field UNINITIALISED:Ljava/lang/Object;
       3: areturn

  static {};
    Code:
       0: new           #9                  // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #8                  // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #2                  // Field weakThread:Ljava/lang/ThreadLocal;
      10: new           #28                 // class java/lang/Object
      13: dup
      14: invokespecial #29                 // Method java/lang/Object."<init>":()V
      17: putstatic     #1                  // Field UNINITIALISED:Ljava/lang/Object;
      20: ldc_w         #30                 // class net/sf/ehcache/util/lang/VicariousThreadLocal
      23: ldc_w         #15                 // class net/sf/ehcache/util/lang/VicariousThreadLocal$Holder
      26: ldc           #31                 // String strongRefs
      28: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: putstatic     #23                 // Field strongRefsUpdater:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: return
}
