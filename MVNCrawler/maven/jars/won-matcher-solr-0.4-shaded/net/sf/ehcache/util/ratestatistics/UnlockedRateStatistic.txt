Compiled from "UnlockedRateStatistic.java"
public class net.sf.ehcache.util.ratestatistics.UnlockedRateStatistic extends net.sf.ehcache.util.ratestatistics.AbstractRateStatistic {
  private volatile long count;

  private volatile long rateSampleTime;

  private volatile float rateSample;

  private volatile long sampleRateMask;

  private volatile long previousSample;

  public net.sf.ehcache.util.ratestatistics.UnlockedRateStatistic(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokespecial #1                  // Method net/sf/ehcache/util/ratestatistics/AbstractRateStatistic."<init>":(JLjava/util/concurrent/TimeUnit;)V
       6: aload_0
       7: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
      10: putfield      #3                  // Field rateSampleTime:J
      13: aload_0
      14: fconst_0
      15: putfield      #4                  // Field rateSample:F
      18: return

  public void event();
    Code:
       0: aload_0
       1: dup
       2: getfield      #5                  // Field count:J
       5: lconst_1
       6: ladd
       7: dup2_x1
       8: putfield      #5                  // Field count:J
      11: lstore_1
      12: lload_1
      13: aload_0
      14: getfield      #6                  // Field sampleRateMask:J
      17: land
      18: lconst_0
      19: lcmp
      20: ifne          129
      23: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
      26: lstore_3
      27: aload_0
      28: getfield      #3                  // Field rateSampleTime:J
      31: lstore        5
      33: lload_3
      34: lload         5
      36: lcmp
      37: ifeq          129
      40: lload_1
      41: aload_0
      42: getfield      #7                  // Field previousSample:J
      45: lcmp
      46: ifle          129
      49: aload_0
      50: lload_3
      51: putfield      #3                  // Field rateSampleTime:J
      54: lload_1
      55: aload_0
      56: getfield      #7                  // Field previousSample:J
      59: lsub
      60: l2f
      61: lload_3
      62: lload         5
      64: lsub
      65: l2f
      66: fdiv
      67: fstore        7
      69: aload_0
      70: lload_1
      71: putfield      #7                  // Field previousSample:J
      74: aload_0
      75: aload_0
      76: fload         7
      78: lload_3
      79: aload_0
      80: getfield      #4                  // Field rateSample:F
      83: lload         5
      85: invokevirtual #8                  // Method iterateMovingAverage:(FJFJ)F
      88: putfield      #4                  // Field rateSample:F
      91: lconst_1
      92: aload_0
      93: invokevirtual #9                  // Method getRateAveragePeriod:()J
      96: l2f
      97: aload_0
      98: getfield      #4                  // Field rateSample:F
     101: fmul
     102: f2l
     103: invokestatic  #10                 // Method java/lang/Math.max:(JJ)J
     106: invokestatic  #11                 // Method java/lang/Long.highestOneBit:(J)J
     109: lconst_1
     110: lsub
     111: lstore        8
     113: lload         8
     115: aload_0
     116: getfield      #6                  // Field sampleRateMask:J
     119: lcmp
     120: ifeq          129
     123: aload_0
     124: lload         8
     126: putfield      #6                  // Field sampleRateMask:J
     129: return

  public long getCount();
    Code:
       0: aload_0
       1: getfield      #5                  // Field count:J
       4: lreturn

  public float getRate();
    Code:
       0: aload_0
       1: getfield      #3                  // Field rateSampleTime:J
       4: lstore_1
       5: aload_0
       6: getfield      #7                  // Field previousSample:J
       9: lstore_3
      10: aload_0
      11: getfield      #4                  // Field rateSample:F
      14: fstore        5
      16: invokestatic  #2                  // Method java/lang/System.nanoTime:()J
      19: lstore        6
      21: lload         6
      23: lload_1
      24: lcmp
      25: ifne          31
      28: fload         5
      30: freturn
      31: aload_0
      32: getfield      #5                  // Field count:J
      35: lload_3
      36: lsub
      37: l2f
      38: lload         6
      40: lload_1
      41: lsub
      42: l2f
      43: fdiv
      44: fstore        8
      46: aload_0
      47: fload         8
      49: lload         6
      51: fload         5
      53: lload_1
      54: invokevirtual #8                  // Method iterateMovingAverage:(FJFJ)F
      57: getstatic     #12                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      60: lconst_1
      61: invokevirtual #13                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
      64: l2f
      65: fmul
      66: fstore        9
      68: fload         9
      70: invokestatic  #14                 // Method java/lang/Float.isNaN:(F)Z
      73: ifeq          89
      76: fload         5
      78: invokestatic  #14                 // Method java/lang/Float.isNaN:(F)Z
      81: ifeq          86
      84: fconst_0
      85: freturn
      86: fload         5
      88: freturn
      89: fload         9
      91: freturn
}
