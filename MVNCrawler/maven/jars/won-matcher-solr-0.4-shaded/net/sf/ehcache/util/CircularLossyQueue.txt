Compiled from "CircularLossyQueue.java"
public class net.sf.ehcache.util.CircularLossyQueue<T> {
  private final java.util.concurrent.atomic.AtomicReference<T>[] circularArray;

  private final int maxSize;

  private final java.util.concurrent.atomic.AtomicLong currentIndex;

  public net.sf.ehcache.util.CircularLossyQueue(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: ldc2_w        #3                  // long -1l
      12: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      15: putfield      #6                  // Field currentIndex:Ljava/util/concurrent/atomic/AtomicLong;
      18: aload_0
      19: iload_1
      20: anewarray     #7                  // class java/util/concurrent/atomic/AtomicReference
      23: putfield      #8                  // Field circularArray:[Ljava/util/concurrent/atomic/AtomicReference;
      26: iconst_0
      27: istore_2
      28: iload_2
      29: iload_1
      30: if_icmpge     52
      33: aload_0
      34: getfield      #8                  // Field circularArray:[Ljava/util/concurrent/atomic/AtomicReference;
      37: iload_2
      38: new           #7                  // class java/util/concurrent/atomic/AtomicReference
      41: dup
      42: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      45: aastore
      46: iinc          2, 1
      49: goto          28
      52: aload_0
      53: iload_1
      54: putfield      #10                 // Field maxSize:I
      57: return

  public void push(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: aload_0
       8: getfield      #10                 // Field maxSize:I
      11: i2l
      12: lrem
      13: l2i
      14: istore_2
      15: aload_0
      16: getfield      #8                  // Field circularArray:[Ljava/util/concurrent/atomic/AtomicReference;
      19: iload_2
      20: aaload
      21: aload_1
      22: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      25: return

  public T[] toArray(T[]);
    Code:
       0: invokestatic  #13                 // Method java/lang/System.getProperties:()Ljava/util/Properties;
       3: pop
       4: aload_1
       5: arraylength
       6: aload_0
       7: getfield      #10                 // Field maxSize:I
      10: if_icmple     43
      13: new           #14                 // class java/lang/IllegalArgumentException
      16: dup
      17: new           #15                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #17                 // String Size of array passed in cannot be greater than
      26: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #10                 // Field maxSize:I
      33: invokevirtual #19                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: invokespecial #22                 // Method getCurrentIndex:()I
      47: istore_2
      48: iconst_0
      49: istore_3
      50: iload_3
      51: aload_1
      52: arraylength
      53: if_icmpge     84
      56: aload_0
      57: iload_2
      58: iload_3
      59: isub
      60: invokespecial #23                 // Method getIndex:(I)I
      63: istore        4
      65: aload_1
      66: iload_3
      67: aload_0
      68: getfield      #8                  // Field circularArray:[Ljava/util/concurrent/atomic/AtomicReference;
      71: iload         4
      73: aaload
      74: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      77: aastore
      78: iinc          3, 1
      81: goto          50
      84: aload_1
      85: areturn

  private int getIndex(int);
    Code:
       0: iload_1
       1: ifge          13
       4: iload_1
       5: aload_0
       6: getfield      #10                 // Field maxSize:I
       9: iadd
      10: goto          14
      13: iload_1
      14: ireturn

  public T peek();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method depth:()I
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #8                  // Field circularArray:[Ljava/util/concurrent/atomic/AtomicReference;
      13: aload_0
      14: aload_0
      15: invokespecial #22                 // Method getCurrentIndex:()I
      18: invokespecial #23                 // Method getIndex:(I)I
      21: aaload
      22: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      25: areturn

  public boolean isEmtpy();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method depth:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  private int getCurrentIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: aload_0
       8: getfield      #10                 // Field maxSize:I
      11: i2l
      12: lrem
      13: l2i
      14: ireturn

  public int depth();
    Code:
       0: aload_0
       1: getfield      #6                  // Field currentIndex:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lconst_1
       8: ladd
       9: lstore_1
      10: lload_1
      11: aload_0
      12: getfield      #10                 // Field maxSize:I
      15: i2l
      16: lcmp
      17: iflt          27
      20: aload_0
      21: getfield      #10                 // Field maxSize:I
      24: goto          29
      27: lload_1
      28: l2i
      29: ireturn
}
