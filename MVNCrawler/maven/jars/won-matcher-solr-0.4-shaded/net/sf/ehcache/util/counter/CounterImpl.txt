Compiled from "CounterImpl.java"
public class net.sf.ehcache.util.counter.CounterImpl implements net.sf.ehcache.util.counter.Counter,java.io.Serializable {
  private java.util.concurrent.atomic.AtomicLong value;

  public net.sf.ehcache.util.counter.CounterImpl();
    Code:
       0: aload_0
       1: lconst_0
       2: invokespecial #1                  // Method "<init>":(J)V
       5: return

  public net.sf.ehcache.util.counter.CounterImpl(long);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: lload_1
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      13: putfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
      16: return

  public long increment();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: lreturn

  public long decrement();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: lreturn

  public long getAndSet(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicLong.getAndSet:(J)J
       8: lreturn

  public long getValue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public long increment(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
       8: lreturn

  public long decrement(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: ldc2_w        #11                 // long -1l
       8: lmul
       9: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      12: lreturn

  public void setValue(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field value:Ljava/util/concurrent/atomic/AtomicLong;
       4: lload_1
       5: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return
}
