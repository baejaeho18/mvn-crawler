Compiled from "TransactionIDFactoryImpl.java"
public class net.sf.ehcache.transaction.TransactionIDFactoryImpl extends net.sf.ehcache.transaction.AbstractTransactionIDFactory {
  private final java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.TransactionID, net.sf.ehcache.transaction.Decision> transactionStates;

  public net.sf.ehcache.transaction.TransactionIDFactoryImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/sf/ehcache/transaction/AbstractTransactionIDFactory."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field transactionStates:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public net.sf.ehcache.transaction.TransactionID createTransactionID();
    Code:
       0: new           #5                  // class net/sf/ehcache/transaction/TransactionIDImpl
       3: dup
       4: invokespecial #6                  // Method net/sf/ehcache/transaction/TransactionIDImpl."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #7                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
      12: aload_1
      13: getstatic     #8                  // Field net/sf/ehcache/transaction/Decision.IN_DOUBT:Lnet/sf/ehcache/transaction/Decision;
      16: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_1
      23: areturn

  public net.sf.ehcache.transaction.TransactionID restoreTransactionID(net.sf.ehcache.transaction.TransactionIDSerializedForm);
    Code:
       0: new           #10                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #11                 // String unclustered transaction IDs are directly deserializable!
       6: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public net.sf.ehcache.transaction.xa.XidTransactionID createXidTransactionID(javax.transaction.xa.Xid, net.sf.ehcache.Ehcache);
    Code:
       0: new           #13                 // class net/sf/ehcache/transaction/xa/XidTransactionIDImpl
       3: dup
       4: aload_1
       5: aload_2
       6: invokeinterface #14,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
      11: invokespecial #15                 // Method net/sf/ehcache/transaction/xa/XidTransactionIDImpl."<init>":(Ljavax/transaction/xa/Xid;Ljava/lang/String;)V
      14: astore_3
      15: aload_0
      16: invokevirtual #7                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
      19: aload_3
      20: getstatic     #8                  // Field net/sf/ehcache/transaction/Decision.IN_DOUBT:Lnet/sf/ehcache/transaction/Decision;
      23: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: pop
      29: aload_3
      30: areturn

  public net.sf.ehcache.transaction.xa.XidTransactionID restoreXidTransactionID(net.sf.ehcache.transaction.XidTransactionIDSerializedForm);
    Code:
       0: new           #10                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #11                 // String unclustered transaction IDs are directly deserializable!
       6: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.TransactionID, net.sf.ehcache.transaction.Decision> getTransactionStates();
    Code:
       0: aload_0
       1: getfield      #4                  // Field transactionStates:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  public java.lang.Boolean isPersistent();
    Code:
       0: getstatic     #16                 // Field java/lang/Boolean.FALSE:Ljava/lang/Boolean;
       3: areturn

  public boolean isExpired(net.sf.ehcache.transaction.TransactionID);
    Code:
       0: iconst_0
       1: ireturn
}
