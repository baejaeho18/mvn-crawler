Compiled from "TransactionIDImpl.java"
public class net.sf.ehcache.transaction.TransactionIDImpl implements net.sf.ehcache.transaction.TransactionID {
  private static final java.util.concurrent.atomic.AtomicInteger ID_GENERATOR;

  private final int id;

  public net.sf.ehcache.transaction.TransactionIDImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicInteger;
       8: invokevirtual #3                  // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      11: putfield      #4                  // Field id:I
      14: return

  protected net.sf.ehcache.transaction.TransactionIDImpl(net.sf.ehcache.transaction.TransactionIDImpl);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: astore_2
       6: aload_0
       7: aload_2
       8: getfield      #4                  // Field id:I
      11: putfield      #4                  // Field id:I
      14: return

  public final boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class net/sf/ehcache/transaction/TransactionIDImpl
       4: ifeq          29
       7: aload_1
       8: checkcast     #5                  // class net/sf/ehcache/transaction/TransactionIDImpl
      11: astore_2
      12: aload_0
      13: getfield      #4                  // Field id:I
      16: aload_2
      17: getfield      #4                  // Field id:I
      20: if_icmpne     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
      29: iconst_0
      30: ireturn

  public final int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:I
       4: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #4                  // Field id:I
       4: invokestatic  #6                  // Method java/lang/Integer.toString:(I)Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
       3: dup
       4: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
       7: putstatic     #2                  // Field ID_GENERATOR:Ljava/util/concurrent/atomic/AtomicInteger;
      10: return
}
