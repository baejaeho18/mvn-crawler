Compiled from "AbstractTransactionIDFactory.java"
public abstract class net.sf.ehcache.transaction.AbstractTransactionIDFactory implements net.sf.ehcache.transaction.TransactionIDFactory {
  public net.sf.ehcache.transaction.AbstractTransactionIDFactory();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected abstract java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.TransactionID, net.sf.ehcache.transaction.Decision> getTransactionStates();

  public void markForCommit(net.sf.ehcache.transaction.TransactionID);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class net/sf/ehcache/transaction/Decision
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #5                  // class net/sf/ehcache/transaction/TransactionIDNotFoundException
      21: dup
      22: new           #6                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #8                  // String transaction state of transaction ID [
      31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #11                 // String ] already cleaned up
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #13                 // Method net/sf/ehcache/transaction/TransactionIDNotFoundException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: getstatic     #14                 // Field net/sf/ehcache/transaction/AbstractTransactionIDFactory$1.$SwitchMap$net$sf$ehcache$transaction$Decision:[I
      53: aload_2
      54: invokevirtual #15                 // Method net/sf/ehcache/transaction/Decision.ordinal:()I
      57: iaload
      58: tableswitch   { // 1 to 3
                     1: 84
                     2: 104
                     3: 131
               default: 132
          }
      84: aload_0
      85: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
      88: aload_1
      89: getstatic     #16                 // Field net/sf/ehcache/transaction/Decision.IN_DOUBT:Lnet/sf/ehcache/transaction/Decision;
      92: getstatic     #17                 // Field net/sf/ehcache/transaction/Decision.COMMIT:Lnet/sf/ehcache/transaction/Decision;
      95: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifeq          142
     103: return
     104: new           #19                 // class java/lang/IllegalStateException
     107: dup
     108: new           #6                  // class java/lang/StringBuilder
     111: dup
     112: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     115: aload_0
     116: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: ldc           #20                 // String  already marked for rollback, cannot re-mark it for commit
     121: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     130: athrow
     131: return
     132: new           #22                 // class java/lang/AssertionError
     135: dup
     136: ldc           #23                 // String unreachable code
     138: invokespecial #24                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
     141: athrow
     142: goto          0

  public void markForRollback(net.sf.ehcache.transaction.xa.XidTransactionID);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #4                  // class net/sf/ehcache/transaction/Decision
      13: astore_2
      14: aload_2
      15: ifnonnull     50
      18: new           #5                  // class net/sf/ehcache/transaction/TransactionIDNotFoundException
      21: dup
      22: new           #6                  // class java/lang/StringBuilder
      25: dup
      26: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #8                  // String transaction state of transaction ID [
      31: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      38: ldc           #11                 // String ] already cleaned up
      40: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #13                 // Method net/sf/ehcache/transaction/TransactionIDNotFoundException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: getstatic     #14                 // Field net/sf/ehcache/transaction/AbstractTransactionIDFactory$1.$SwitchMap$net$sf$ehcache$transaction$Decision:[I
      53: aload_2
      54: invokevirtual #15                 // Method net/sf/ehcache/transaction/Decision.ordinal:()I
      57: iaload
      58: tableswitch   { // 1 to 3
                     1: 84
                     2: 104
                     3: 105
               default: 132
          }
      84: aload_0
      85: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
      88: aload_1
      89: getstatic     #16                 // Field net/sf/ehcache/transaction/Decision.IN_DOUBT:Lnet/sf/ehcache/transaction/Decision;
      92: getstatic     #25                 // Field net/sf/ehcache/transaction/Decision.ROLLBACK:Lnet/sf/ehcache/transaction/Decision;
      95: invokeinterface #18,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     100: ifeq          140
     103: return
     104: return
     105: new           #19                 // class java/lang/IllegalStateException
     108: dup
     109: new           #6                  // class java/lang/StringBuilder
     112: dup
     113: invokespecial #7                  // Method java/lang/StringBuilder."<init>":()V
     116: aload_0
     117: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #26                 // String  already marked for commit, cannot re-mark it for rollback
     122: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #21                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: new           #22                 // class java/lang/AssertionError
     135: dup
     136: invokespecial #27                 // Method java/lang/AssertionError."<init>":()V
     139: athrow
     140: goto          0

  public boolean isDecisionCommit(net.sf.ehcache.transaction.TransactionID);
    Code:
       0: getstatic     #17                 // Field net/sf/ehcache/transaction/Decision.COMMIT:Lnet/sf/ehcache/transaction/Decision;
       3: aload_0
       4: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
       7: aload_1
       8: invokeinterface #3,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: invokevirtual #28                 // Method net/sf/ehcache/transaction/Decision.equals:(Ljava/lang/Object;)Z
      16: ireturn

  public void clear(net.sf.ehcache.transaction.TransactionID);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: return

  public java.util.Set<net.sf.ehcache.transaction.xa.XidTransactionID> getAllXidTransactionIDsFor(net.sf.ehcache.Ehcache);
    Code:
       0: aload_1
       1: invokeinterface #30,  1           // InterfaceMethod net/sf/ehcache/Ehcache.getName:()Ljava/lang/String;
       6: astore_2
       7: new           #31                 // class java/util/HashSet
      10: dup
      11: invokespecial #32                 // Method java/util/HashSet."<init>":()V
      14: astore_3
      15: aload_0
      16: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
      19: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      24: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore        4
      31: aload         4
      33: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          94
      41: aload         4
      43: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #37                 // class net/sf/ehcache/transaction/TransactionID
      51: astore        5
      53: aload         5
      55: instanceof    #38                 // class net/sf/ehcache/transaction/xa/XidTransactionID
      58: ifeq          91
      61: aload         5
      63: checkcast     #38                 // class net/sf/ehcache/transaction/xa/XidTransactionID
      66: astore        6
      68: aload_2
      69: aload         6
      71: invokeinterface #39,  1           // InterfaceMethod net/sf/ehcache/transaction/xa/XidTransactionID.getCacheName:()Ljava/lang/String;
      76: invokevirtual #40                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      79: ifeq          91
      82: aload_3
      83: aload         6
      85: invokeinterface #41,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      90: pop
      91: goto          31
      94: aload_3
      95: areturn

  public java.util.Set<net.sf.ehcache.transaction.TransactionID> getAllTransactionIDs();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getTransactionStates:()Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
       9: invokestatic  #42                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn
}
