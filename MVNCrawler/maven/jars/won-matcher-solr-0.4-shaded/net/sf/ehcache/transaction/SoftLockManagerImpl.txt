Compiled from "SoftLockManagerImpl.java"
public class net.sf.ehcache.transaction.SoftLockManagerImpl extends net.sf.ehcache.transaction.AbstractSoftLockManager {
  private final java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.SoftLockID, java.lang.Boolean> newKeyLocks;

  private final java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.SoftLockID, net.sf.ehcache.transaction.SoftLock> allLocks;

  public net.sf.ehcache.transaction.SoftLockManagerImpl(java.lang.String, net.sf.ehcache.transaction.SoftLockFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method net/sf/ehcache/transaction/AbstractSoftLockManager."<init>":(Ljava/lang/String;Lnet/sf/ehcache/transaction/SoftLockFactory;)V
       6: aload_0
       7: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      10: dup
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      14: putfield      #4                  // Field newKeyLocks:Ljava/util/concurrent/ConcurrentMap;
      17: aload_0
      18: new           #2                  // class java/util/concurrent/ConcurrentHashMap
      21: dup
      22: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      25: putfield      #5                  // Field allLocks:Ljava/util/concurrent/ConcurrentMap;
      28: return

  protected java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.SoftLockID, net.sf.ehcache.transaction.SoftLock> getAllLocks();
    Code:
       0: aload_0
       1: getfield      #5                  // Field allLocks:Ljava/util/concurrent/ConcurrentMap;
       4: areturn

  protected java.util.concurrent.ConcurrentMap<net.sf.ehcache.transaction.SoftLockID, java.lang.Boolean> getNewKeyLocks();
    Code:
       0: aload_0
       1: getfield      #4                  // Field newKeyLocks:Ljava/util/concurrent/ConcurrentMap;
       4: areturn
}
