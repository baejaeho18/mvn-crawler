Compiled from "EhcacheHibernateMbeanNames.java"
public abstract class net.sf.ehcache.hibernate.management.impl.EhcacheHibernateMbeanNames {
  public static final java.lang.String GROUP_ID;

  public static final java.lang.String EHCACHE_HIBERNATE_TYPE;

  public net.sf.ehcache.hibernate.management.impl.EhcacheHibernateMbeanNames();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.String mbeanSafe(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     9
       4: ldc           #2                  // String
       6: goto          17
       9: aload_0
      10: ldc           #3                  // String ,|:|=|\n
      12: ldc           #4                  // String .
      14: invokevirtual #5                  // Method java/lang/String.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      17: areturn

  public static javax.management.ObjectName getCacheManagerObjectName(java.lang.String, java.lang.String) throws javax.management.MalformedObjectNameException;
    Code:
       0: new           #6                  // class javax/management/ObjectName
       3: dup
       4: new           #7                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #9                  // String net.sf.ehcache.hibernate:type=EhcacheHibernateStats,name=
      13: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokestatic  #11                 // Method mbeanSafe:(Ljava/lang/String;)Ljava/lang/String;
      20: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: aload_0
      24: invokestatic  #12                 // Method getBeanNameSuffix:(Ljava/lang/String;)Ljava/lang/String;
      27: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #14                 // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      36: astore_2
      37: aload_2
      38: areturn

  private static java.lang.String getBeanNameSuffix(java.lang.String);
    Code:
       0: ldc           #2                  // String
       2: astore_1
       3: aload_0
       4: invokestatic  #15                 // Method isBlank:(Ljava/lang/String;)Z
       7: ifne          30
      10: new           #7                  // class java/lang/StringBuilder
      13: dup
      14: invokespecial #8                  // Method java/lang/StringBuilder."<init>":()V
      17: ldc           #16                 // String ,node=
      19: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: aload_0
      23: invokevirtual #10                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: astore_1
      30: aload_1
      31: areturn

  private static boolean isBlank(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        16
       4: ldc           #2                  // String
       6: aload_0
       7: invokevirtual #17                 // Method java/lang/String.trim:()Ljava/lang/String;
      10: invokevirtual #18                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
