Compiled from "EhcacheReadWriteCache.java"
public class net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache extends net.sf.ehcache.hibernate.ccs.AbstractEhcacheConcurrencyStrategy {
  private static final org.slf4j.Logger LOG;

  private final java.util.UUID uuid;

  private final java.util.concurrent.atomic.AtomicLong nextLockId;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$ReadLock coarseReadLock;

  private final java.util.concurrent.locks.ReentrantReadWriteLock$WriteLock coarseWriteLock;

  public net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method net/sf/ehcache/hibernate/ccs/AbstractEhcacheConcurrencyStrategy."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
       8: putfield      #3                  // Field uuid:Ljava/util/UUID;
      11: aload_0
      12: new           #4                  // class java/util/concurrent/atomic/AtomicLong
      15: dup
      16: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      19: putfield      #6                  // Field nextLockId:Ljava/util/concurrent/atomic/AtomicLong;
      22: new           #7                  // class java/util/concurrent/locks/ReentrantReadWriteLock
      25: dup
      26: invokespecial #8                  // Method java/util/concurrent/locks/ReentrantReadWriteLock."<init>":()V
      29: astore_1
      30: aload_0
      31: aload_1
      32: invokevirtual #9                  // Method java/util/concurrent/locks/ReentrantReadWriteLock.readLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      35: putfield      #10                 // Field coarseReadLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      38: aload_0
      39: aload_1
      40: invokevirtual #11                 // Method java/util/concurrent/locks/ReentrantReadWriteLock.writeLock:()Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      43: putfield      #12                 // Field coarseWriteLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      46: return

  public java.lang.Object get(java.lang.Object, long) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method readLockIfCoarse:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore        4
      18: aload         4
      20: ifnull        38
      23: aload         4
      25: lload_2
      26: invokeinterface #17,  3           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.isReadable:(J)Z
      31: ifeq          38
      34: iconst_1
      35: goto          39
      38: iconst_0
      39: istore        5
      41: iload         5
      43: ifeq          63
      46: aload         4
      48: invokeinterface #18,  1           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.getValue:()Ljava/lang/Object;
      53: astore        6
      55: aload_0
      56: aload_1
      57: invokespecial #19                 // Method readUnlockIfCoarse:(Ljava/lang/Object;)V
      60: aload         6
      62: areturn
      63: aconst_null
      64: astore        6
      66: aload_0
      67: aload_1
      68: invokespecial #19                 // Method readUnlockIfCoarse:(Ljava/lang/Object;)V
      71: aload         6
      73: areturn
      74: astore        7
      76: aload_0
      77: aload_1
      78: invokespecial #19                 // Method readUnlockIfCoarse:(Ljava/lang/Object;)V
      81: aload         7
      83: athrow
    Exception table:
       from    to  target type
           5    55    74   any
          63    66    74   any
          74    76    74   any

  public boolean put(java.lang.Object, java.lang.Object, long, java.lang.Object, java.util.Comparator, boolean) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method writeLock:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore        8
      18: aload         8
      20: ifnull        38
      23: aload         8
      25: lload_3
      26: aload         5
      28: aload         6
      30: invokeinterface #21,  5           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.isWriteable:(JLjava/lang/Object;Ljava/util/Comparator;)Z
      35: ifeq          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: istore        9
      45: iload         9
      47: ifeq          87
      50: aload_0
      51: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      54: aload_1
      55: new           #22                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item
      58: dup
      59: aload_2
      60: aload         5
      62: aload_0
      63: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      66: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
      69: aconst_null
      70: invokespecial #24                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item."<init>":(Ljava/lang/Object;Ljava/lang/Object;JLnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$1;)V
      73: invokevirtual #25                 // Method net/sf/ehcache/hibernate/EhCache.put:(Ljava/lang/Object;Ljava/lang/Object;)V
      76: iconst_1
      77: istore        10
      79: aload_0
      80: aload_1
      81: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      84: iload         10
      86: ireturn
      87: iconst_0
      88: istore        10
      90: aload_0
      91: aload_1
      92: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      95: iload         10
      97: ireturn
      98: astore        11
     100: aload_0
     101: aload_1
     102: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
     105: aload         11
     107: athrow
    Exception table:
       from    to  target type
           5    79    98   any
          87    90    98   any
          98   100    98   any

  public org.hibernate.cache.access.SoftLock lock(java.lang.Object, java.lang.Object) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method writeLock:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore_3
      17: aload_0
      18: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      21: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
      24: aload_0
      25: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      28: invokevirtual #27                 // Method net/sf/ehcache/hibernate/EhCache.getTimeout:()I
      31: i2l
      32: ladd
      33: lstore        4
      35: aload_3
      36: ifnonnull     60
      39: new           #28                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      42: dup
      43: lload         4
      45: aload_0
      46: getfield      #3                  // Field uuid:Ljava/util/UUID;
      49: aload_0
      50: invokespecial #29                 // Method nextLockId:()J
      53: aload_2
      54: invokespecial #30                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock."<init>":(JLjava/util/UUID;JLjava/lang/Object;)V
      57: goto          76
      60: aload_3
      61: lload         4
      63: aload_0
      64: getfield      #3                  // Field uuid:Ljava/util/UUID;
      67: aload_0
      68: invokespecial #29                 // Method nextLockId:()J
      71: invokeinterface #31,  6           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.lock:(JLjava/util/UUID;J)Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;
      76: astore        6
      78: aload_0
      79: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      82: aload_1
      83: aload         6
      85: invokevirtual #32                 // Method net/sf/ehcache/hibernate/EhCache.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      88: aload         6
      90: astore        7
      92: aload_0
      93: aload_1
      94: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      97: aload         7
      99: areturn
     100: astore        8
     102: aload_0
     103: aload_1
     104: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
     107: aload         8
     109: athrow
    Exception table:
       from    to  target type
           5    92   100   any
         100   102   100   any

  public void release(java.lang.Object, org.hibernate.cache.access.SoftLock) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method writeLock:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore_3
      17: aload_3
      18: ifnull        43
      21: aload_3
      22: aload_2
      23: invokeinterface #33,  2           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.isUnlockable:(Lorg/hibernate/cache/access/SoftLock;)Z
      28: ifeq          43
      31: aload_0
      32: aload_1
      33: aload_3
      34: checkcast     #28                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      37: invokespecial #34                 // Method decrementLock:(Ljava/lang/Object;Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;)V
      40: goto          48
      43: aload_0
      44: aload_1
      45: invokespecial #35                 // Method handleLockExpiry:(Ljava/lang/Object;)V
      48: aload_0
      49: aload_1
      50: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      53: goto          66
      56: astore        4
      58: aload_0
      59: aload_1
      60: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      63: aload         4
      65: athrow
      66: return
    Exception table:
       from    to  target type
           5    48    56   any
          56    58    56   any

  public boolean afterUpdate(java.lang.Object, java.lang.Object, java.lang.Object, org.hibernate.cache.access.SoftLock) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method writeLock:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore        5
      18: aload         5
      20: ifnull        104
      23: aload         5
      25: aload         4
      27: invokeinterface #33,  2           // InterfaceMethod net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable.isUnlockable:(Lorg/hibernate/cache/access/SoftLock;)Z
      32: ifeq          104
      35: aload         5
      37: checkcast     #28                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      40: astore        6
      42: aload         6
      44: invokestatic  #36                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock.access$100:(Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;)Z
      47: ifeq          68
      50: aload_0
      51: aload_1
      52: aload         6
      54: invokespecial #34                 // Method decrementLock:(Ljava/lang/Object;Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;)V
      57: iconst_0
      58: istore        7
      60: aload_0
      61: aload_1
      62: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      65: iload         7
      67: ireturn
      68: aload_0
      69: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      72: aload_1
      73: new           #22                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item
      76: dup
      77: aload_2
      78: aload_3
      79: aload_0
      80: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      83: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
      86: aconst_null
      87: invokespecial #24                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item."<init>":(Ljava/lang/Object;Ljava/lang/Object;JLnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$1;)V
      90: invokevirtual #32                 // Method net/sf/ehcache/hibernate/EhCache.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      93: iconst_1
      94: istore        7
      96: aload_0
      97: aload_1
      98: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
     101: iload         7
     103: ireturn
     104: aload_0
     105: aload_1
     106: invokespecial #35                 // Method handleLockExpiry:(Ljava/lang/Object;)V
     109: iconst_0
     110: istore        6
     112: aload_0
     113: aload_1
     114: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
     117: iload         6
     119: ireturn
     120: astore        8
     122: aload_0
     123: aload_1
     124: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
     127: aload         8
     129: athrow
    Exception table:
       from    to  target type
           5    60   120   any
          68    96   120   any
         104   112   120   any
         120   122   120   any

  public boolean afterInsert(java.lang.Object, java.lang.Object, java.lang.Object) throws org.hibernate.cache.CacheException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method writeLock:(Ljava/lang/Object;)V
       5: aload_0
       6: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       9: aload_1
      10: invokevirtual #15                 // Method net/sf/ehcache/hibernate/EhCache.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #16                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lockable
      16: astore        4
      18: aload         4
      20: ifnonnull     59
      23: aload_0
      24: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      27: aload_1
      28: new           #22                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item
      31: dup
      32: aload_2
      33: aload_3
      34: aload_0
      35: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      38: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
      41: aconst_null
      42: invokespecial #24                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Item."<init>":(Ljava/lang/Object;Ljava/lang/Object;JLnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$1;)V
      45: invokevirtual #32                 // Method net/sf/ehcache/hibernate/EhCache.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      48: iconst_1
      49: istore        5
      51: aload_0
      52: aload_1
      53: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      56: iload         5
      58: ireturn
      59: iconst_0
      60: istore        5
      62: aload_0
      63: aload_1
      64: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      67: iload         5
      69: ireturn
      70: astore        6
      72: aload_0
      73: aload_1
      74: invokespecial #26                 // Method writeUnlock:(Ljava/lang/Object;)V
      77: aload         6
      79: athrow
    Exception table:
       from    to  target type
           5    51    70   any
          59    62    70   any
          70    72    70   any

  public void evict(java.lang.Object) throws org.hibernate.cache.CacheException;
    Code:
       0: return

  public boolean update(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object) throws org.hibernate.cache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  public boolean insert(java.lang.Object, java.lang.Object, java.lang.Object) throws org.hibernate.cache.CacheException;
    Code:
       0: iconst_0
       1: ireturn

  private long nextLockId();
    Code:
       0: aload_0
       1: getfield      #6                  // Field nextLockId:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: lreturn

  private void decrementLock(java.lang.Object, net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       5: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
       8: invokestatic  #38                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock.access$200:(Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;J)V
      11: aload_0
      12: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      15: aload_1
      16: aload_2
      17: invokevirtual #32                 // Method net/sf/ehcache/hibernate/EhCache.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      20: return

  private void handleLockExpiry(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       4: invokevirtual #23                 // Method net/sf/ehcache/hibernate/EhCache.nextTimestamp:()J
       7: aload_0
       8: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      11: invokevirtual #27                 // Method net/sf/ehcache/hibernate/EhCache.getTimeout:()I
      14: i2l
      15: ladd
      16: lstore_2
      17: new           #28                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      20: dup
      21: lload_2
      22: aload_0
      23: getfield      #3                  // Field uuid:Ljava/util/UUID;
      26: aload_0
      27: getfield      #6                  // Field nextLockId:Ljava/util/concurrent/atomic/AtomicLong;
      30: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      33: aconst_null
      34: invokespecial #30                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock."<init>":(JLjava/util/UUID;JLjava/lang/Object;)V
      37: astore        4
      39: aload         4
      41: lload_2
      42: invokestatic  #38                 // Method net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock.access$200:(Lnet/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock;J)V
      45: aload_0
      46: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      49: aload_1
      50: aload         4
      52: invokevirtual #32                 // Method net/sf/ehcache/hibernate/EhCache.update:(Ljava/lang/Object;Ljava/lang/Object;)V
      55: return

  private void writeLock(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       4: invokevirtual #39                 // Method net/sf/ehcache/hibernate/EhCache.canLockEntries:()Z
       7: ifeq          21
      10: aload_0
      11: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      14: aload_1
      15: invokevirtual #40                 // Method net/sf/ehcache/hibernate/EhCache.lock:(Ljava/lang/Object;)V
      18: goto          28
      21: aload_0
      22: getfield      #12                 // Field coarseWriteLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      25: invokevirtual #41                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.lock:()V
      28: return

  private void writeUnlock(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       4: invokevirtual #39                 // Method net/sf/ehcache/hibernate/EhCache.canLockEntries:()Z
       7: ifeq          21
      10: aload_0
      11: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
      14: aload_1
      15: invokevirtual #42                 // Method net/sf/ehcache/hibernate/EhCache.unlock:(Ljava/lang/Object;)V
      18: goto          28
      21: aload_0
      22: getfield      #12                 // Field coarseWriteLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$WriteLock;
      25: invokevirtual #43                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$WriteLock.unlock:()V
      28: return

  private void readLockIfCoarse(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       4: invokevirtual #39                 // Method net/sf/ehcache/hibernate/EhCache.canLockEntries:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #10                 // Field coarseReadLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      14: invokevirtual #44                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.lock:()V
      17: return

  private void readUnlockIfCoarse(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field cache:Lnet/sf/ehcache/hibernate/EhCache;
       4: invokevirtual #39                 // Method net/sf/ehcache/hibernate/EhCache.canLockEntries:()Z
       7: ifne          17
      10: aload_0
      11: getfield      #10                 // Field coarseReadLock:Ljava/util/concurrent/locks/ReentrantReadWriteLock$ReadLock;
      14: invokevirtual #45                 // Method java/util/concurrent/locks/ReentrantReadWriteLock$ReadLock.unlock:()V
      17: return

  static {};
    Code:
       0: ldc_w         #46                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache
       3: invokestatic  #47                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #48                 // Field LOG:Lorg/slf4j/Logger;
       9: return
}
