Compiled from "EhcacheReadWriteCache.java"
final class net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock implements java.io.Serializable,net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lockable,org.hibernate.cache.access.SoftLock {
  private static final long serialVersionUID;

  private final java.util.UUID sourceUuid;

  private final long lockId;

  private final java.lang.Object version;

  private long timeout;

  private boolean concurrent;

  private int multiplicity;

  private long unlockTimestamp;

  net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock(long, java.util.UUID, long, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #4                  // Field timeout:J
       9: aload_0
      10: lload         4
      12: putfield      #5                  // Field lockId:J
      15: aload_0
      16: aload         6
      18: putfield      #6                  // Field version:Ljava/lang/Object;
      21: aload_0
      22: aload_3
      23: putfield      #7                  // Field sourceUuid:Ljava/util/UUID;
      26: return

  public boolean isReadable(long);
    Code:
       0: iconst_0
       1: ireturn

  public boolean isWriteable(long, java.lang.Object, java.util.Comparator);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #4                  // Field timeout:J
       5: lcmp
       6: ifle          11
       9: iconst_1
      10: ireturn
      11: aload_0
      12: getfield      #8                  // Field multiplicity:I
      15: ifle          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #6                  // Field version:Ljava/lang/Object;
      24: ifnonnull     44
      27: lload_1
      28: aload_0
      29: getfield      #9                  // Field unlockTimestamp:J
      32: lcmp
      33: ifle          40
      36: iconst_1
      37: goto          64
      40: iconst_0
      41: goto          64
      44: aload         4
      46: aload_0
      47: getfield      #6                  // Field version:Ljava/lang/Object;
      50: aload_3
      51: invokeinterface #10,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      56: ifge          63
      59: iconst_1
      60: goto          64
      63: iconst_0
      64: ireturn

  public java.lang.Object getValue();
    Code:
       0: aconst_null
       1: areturn

  public boolean isUnlockable(org.hibernate.cache.access.SoftLock);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method equals:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #12                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      11: ifeq          52
      14: aload_0
      15: getfield      #5                  // Field lockId:J
      18: aload_1
      19: checkcast     #12                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      22: getfield      #5                  // Field lockId:J
      25: lcmp
      26: ifne          50
      29: aload_0
      30: getfield      #7                  // Field sourceUuid:Ljava/util/UUID;
      33: aload_1
      34: checkcast     #12                 // class net/sf/ehcache/hibernate/ccs/EhcacheReadWriteCache$Lock
      37: getfield      #7                  // Field sourceUuid:Ljava/util/UUID;
      40: invokevirtual #13                 // Method java/util/UUID.equals:(Ljava/lang/Object;)Z
      43: ifeq          50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: iconst_0
      53: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field sourceUuid:Ljava/util/UUID;
       4: ifnull        17
       7: aload_0
       8: getfield      #7                  // Field sourceUuid:Ljava/util/UUID;
      11: invokevirtual #14                 // Method java/util/UUID.hashCode:()I
      14: goto          18
      17: iconst_0
      18: istore_1
      19: aload_0
      20: getfield      #5                  // Field lockId:J
      23: l2i
      24: istore_2
      25: iconst_1
      26: istore_3
      27: iload_3
      28: iconst_2
      29: if_icmpge     52
      32: iload_2
      33: i2l
      34: aload_0
      35: getfield      #5                  // Field lockId:J
      38: iload_3
      39: bipush        32
      41: imul
      42: lushr
      43: lxor
      44: l2i
      45: istore_2
      46: iinc          3, 1
      49: goto          27
      52: iload_1
      53: iload_2
      54: iadd
      55: ireturn

  private boolean wasLockedConcurrently();
    Code:
       0: aload_0
       1: getfield      #15                 // Field concurrent:Z
       4: ireturn

  public net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock lock(long, java.util.UUID, long);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #15                 // Field concurrent:Z
       5: aload_0
       6: dup
       7: getfield      #8                  // Field multiplicity:I
      10: iconst_1
      11: iadd
      12: putfield      #8                  // Field multiplicity:I
      15: aload_0
      16: lload_1
      17: putfield      #4                  // Field timeout:J
      20: aload_0
      21: areturn

  private void unlock(long);
    Code:
       0: aload_0
       1: dup
       2: getfield      #8                  // Field multiplicity:I
       5: iconst_1
       6: isub
       7: dup_x1
       8: putfield      #8                  // Field multiplicity:I
      11: ifne          19
      14: aload_0
      15: lload_1
      16: putfield      #9                  // Field unlockTimestamp:J
      19: return

  static boolean access$100(net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method wasLockedConcurrently:()Z
       4: ireturn

  static void access$200(net.sf.ehcache.hibernate.ccs.EhcacheReadWriteCache$Lock, long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #1                  // Method unlock:(J)V
       5: return
}
