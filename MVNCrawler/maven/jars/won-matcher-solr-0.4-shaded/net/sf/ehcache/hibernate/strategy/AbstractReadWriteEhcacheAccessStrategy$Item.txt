Compiled from "AbstractReadWriteEhcacheAccessStrategy.java"
public final class net.sf.ehcache.hibernate.strategy.AbstractReadWriteEhcacheAccessStrategy$Item implements java.io.Serializable,net.sf.ehcache.hibernate.strategy.AbstractReadWriteEhcacheAccessStrategy$Lockable {
  private static final long serialVersionUID;

  private final java.lang.Object value;

  private final java.lang.Object version;

  private final long timestamp;

  net.sf.ehcache.hibernate.strategy.AbstractReadWriteEhcacheAccessStrategy$Item(java.lang.Object, java.lang.Object, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field value:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field version:Ljava/lang/Object;
      14: aload_0
      15: lload_3
      16: putfield      #4                  // Field timestamp:J
      19: return

  public boolean isReadable(long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #4                  // Field timestamp:J
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean isWriteable(long, java.lang.Object, java.util.Comparator);
    Code:
       0: aload_0
       1: getfield      #3                  // Field version:Ljava/lang/Object;
       4: ifnull        26
       7: aload         4
       9: aload_0
      10: getfield      #3                  // Field version:Ljava/lang/Object;
      13: aload_3
      14: invokeinterface #5,  3            // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
      19: ifge          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:Ljava/lang/Object;
       4: areturn

  public boolean isUnlockable(org.hibernate.cache.access.SoftLock);
    Code:
       0: iconst_0
       1: ireturn

  public net.sf.ehcache.hibernate.strategy.AbstractReadWriteEhcacheAccessStrategy$Lock lock(long, java.util.UUID, long);
    Code:
       0: new           #6                  // class net/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock
       3: dup
       4: lload_1
       5: aload_3
       6: lload         4
       8: aload_0
       9: getfield      #3                  // Field version:Ljava/lang/Object;
      12: invokespecial #7                  // Method net/sf/ehcache/hibernate/strategy/AbstractReadWriteEhcacheAccessStrategy$Lock."<init>":(JLjava/util/UUID;JLjava/lang/Object;)V
      15: areturn
}
