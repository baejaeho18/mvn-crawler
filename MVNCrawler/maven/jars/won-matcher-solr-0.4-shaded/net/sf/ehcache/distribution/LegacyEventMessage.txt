Compiled from "LegacyEventMessage.java"
public class net.sf.ehcache.distribution.LegacyEventMessage extends net.sf.ehcache.distribution.EventMessage {
  public static final int PUT;

  public static final int REMOVE;

  public static final int REMOVE_ALL;

  private static final long serialVersionUID;

  private final int event;

  private transient java.lang.ref.SoftReference elementSoftReference;

  private final boolean wasElementNotNull;

  public net.sf.ehcache.distribution.LegacyEventMessage(int, java.io.Serializable, net.sf.ehcache.Element);
    Code:
       0: aload_0
       1: aconst_null
       2: aload_2
       3: invokespecial #1                  // Method net/sf/ehcache/distribution/EventMessage."<init>":(Lnet/sf/ehcache/Ehcache;Ljava/io/Serializable;)V
       6: aload_0
       7: iload_1
       8: putfield      #2                  // Field event:I
      11: aload_0
      12: aload_3
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: putfield      #3                  // Field wasElementNotNull:Z
      24: aload_0
      25: new           #4                  // class java/lang/ref/SoftReference
      28: dup
      29: aload_3
      30: invokespecial #5                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      33: putfield      #6                  // Field elementSoftReference:Ljava/lang/ref/SoftReference;
      36: return

  public final int getEvent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field event:I
       4: ireturn

  public final net.sf.ehcache.Element getElement();
    Code:
       0: aload_0
       1: getfield      #6                  // Field elementSoftReference:Ljava/lang/ref/SoftReference;
       4: invokevirtual #7                  // Method java/lang/ref/SoftReference.get:()Ljava/lang/Object;
       7: checkcast     #8                  // class net/sf/ehcache/Element
      10: areturn

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #3                  // Field wasElementNotNull:Z
       4: ifne          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: invokevirtual #9                  // Method getElement:()Lnet/sf/ehcache/Element;
      13: ifnull        20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method java/io/ObjectOutputStream.defaultWriteObject:()V
       4: aload_0
       5: invokevirtual #9                  // Method getElement:()Lnet/sf/ehcache/Element;
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokevirtual #11                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      14: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_1
       5: invokevirtual #13                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       8: checkcast     #8                  // class net/sf/ehcache/Element
      11: astore_2
      12: aload_0
      13: new           #4                  // class java/lang/ref/SoftReference
      16: dup
      17: aload_2
      18: invokespecial #5                  // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      21: putfield      #6                  // Field elementSoftReference:Ljava/lang/ref/SoftReference;
      24: return
}
