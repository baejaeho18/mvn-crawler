Compiled from "AgentBuilder.java"
public interface net.bytebuddy.agent.builder.AgentBuilder$Matchable<T extends net.bytebuddy.agent.builder.AgentBuilder$Matchable<T>> {
  public abstract T and(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>);

  public abstract T and(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>, net.bytebuddy.matcher.ElementMatcher<? super java.lang.ClassLoader>);

  public abstract T and(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>, net.bytebuddy.matcher.ElementMatcher<? super java.lang.ClassLoader>, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.utility.JavaModule>);

  public abstract T and(net.bytebuddy.agent.builder.AgentBuilder$RawMatcher);

  public abstract T or(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>);

  public abstract T or(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>, net.bytebuddy.matcher.ElementMatcher<? super java.lang.ClassLoader>);

  public abstract T or(net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.description.type.TypeDescription>, net.bytebuddy.matcher.ElementMatcher<? super java.lang.ClassLoader>, net.bytebuddy.matcher.ElementMatcher<? super net.bytebuddy.utility.JavaModule>);

  public abstract T or(net.bytebuddy.agent.builder.AgentBuilder$RawMatcher);
}
