Compiled from "AgentBuilder.java"
public class net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning implements net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator {
  private final int parts;

  protected net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning(int);
    Code:
       0: aload_0
       1: invokespecial #21                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #23                 // Field parts:I
       9: return

  public static net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$BatchAllocator of(int);
    Code:
       0: iload_0
       1: iconst_1
       2: if_icmpge     32
       5: new           #29                 // class java/lang/IllegalArgumentException
       8: dup
       9: new           #31                 // class java/lang/StringBuilder
      12: dup
      13: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      16: ldc           #34                 // String A batch size must be positive:
      18: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: iload_0
      22: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      25: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      28: invokespecial #48                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      31: athrow
      32: new           #2                  // class net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
      35: dup
      36: iload_0
      37: invokespecial #50                 // Method "<init>":(I)V
      40: areturn

  public java.lang.Iterable<? extends java.util.List<java.lang.Class<?>>> batch(java.util.List<java.lang.Class<?>>);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       6: ifeq          13
       9: invokestatic  #64                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      12: areturn
      13: new           #66                 // class java/util/ArrayList
      16: dup
      17: invokespecial #67                 // Method java/util/ArrayList."<init>":()V
      20: astore_2
      21: aload_1
      22: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
      27: aload_0
      28: getfield      #23                 // Field parts:I
      31: idiv
      32: istore_3
      33: aload_1
      34: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
      39: aload_0
      40: getfield      #23                 // Field parts:I
      43: irem
      44: istore        4
      46: iload         4
      48: istore        5
      50: iload         5
      52: aload_1
      53: invokeinterface #71,  1           // InterfaceMethod java/util/List.size:()I
      58: if_icmpge     96
      61: aload_2
      62: new           #66                 // class java/util/ArrayList
      65: dup
      66: aload_1
      67: iload         5
      69: iload         5
      71: iload_3
      72: iadd
      73: invokeinterface #75,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
      78: invokespecial #78                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      81: invokeinterface #82,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      86: pop
      87: iload         5
      89: iload_3
      90: iadd
      91: istore        5
      93: goto          50
      96: aload_2
      97: invokeinterface #58,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     102: ifeq          110
     105: aload_1
     106: invokestatic  #86                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
     109: areturn
     110: aload_2
     111: iconst_0
     112: invokeinterface #90,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     117: checkcast     #54                 // class java/util/List
     120: iconst_0
     121: aload_1
     122: iconst_0
     123: iload         4
     125: invokeinterface #75,  3           // InterfaceMethod java/util/List.subList:(II)Ljava/util/List;
     130: invokeinterface #94,  3           // InterfaceMethod java/util/List.addAll:(ILjava/util/Collection;)Z
     135: pop
     136: aload_2
     137: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #105                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #23                 // Field parts:I
      35: aload_2
      36: getfield      #23                 // Field parts:I
      39: if_icmpeq     44
      42: iconst_0
      43: ireturn
      44: iconst_1
      45: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class net/bytebuddy/agent/builder/AgentBuilder$RedefinitionStrategy$BatchAllocator$Partitioning
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: iload_2
       6: bipush        59
       8: imul
       9: aload_0
      10: getfield      #23                 // Field parts:I
      13: iadd
      14: istore_2
      15: iload_2
      16: ireturn
}
