Compiled from "TypeCache.java"
public class net.bytebuddy.TypeCache<T> extends java.lang.ref.ReferenceQueue<java.lang.ClassLoader> {
  private static final java.lang.Class<?> NOT_FOUND;

  protected final net.bytebuddy.TypeCache$Sort sort;

  protected final java.util.concurrent.ConcurrentMap<net.bytebuddy.TypeCache$StorageKey, java.util.concurrent.ConcurrentMap<T, java.lang.ref.Reference<java.lang.Class<?>>>> cache;

  public net.bytebuddy.TypeCache(net.bytebuddy.TypeCache$Sort);
    Code:
       0: aload_0
       1: invokespecial #36                 // Method java/lang/ref/ReferenceQueue."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #38                 // Field sort:Lnet/bytebuddy/TypeCache$Sort;
       9: aload_0
      10: new           #40                 // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: invokespecial #41                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      17: putfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      20: return

  public java.lang.Class<?> find(java.lang.ClassLoader, T);
    Code:
       0: aload_0
       1: getfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: new           #19                 // class net/bytebuddy/TypeCache$LookupKey
       7: dup
       8: aload_1
       9: invokespecial #56                 // Method net/bytebuddy/TypeCache$LookupKey."<init>":(Ljava/lang/ClassLoader;)V
      12: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #58                 // class java/util/concurrent/ConcurrentMap
      20: astore_3
      21: aload_3
      22: ifnonnull     29
      25: getstatic     #64                 // Field NOT_FOUND:Ljava/lang/Class;
      28: areturn
      29: aload_3
      30: aload_2
      31: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      36: checkcast     #66                 // class java/lang/ref/Reference
      39: astore        4
      41: aload         4
      43: ifnonnull     50
      46: getstatic     #64                 // Field NOT_FOUND:Ljava/lang/Class;
      49: areturn
      50: aload         4
      52: invokevirtual #69                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      55: checkcast     #71                 // class java/lang/Class
      58: areturn

  public java.lang.Class<?> insert(java.lang.ClassLoader, T, java.lang.Class<?>);
    Code:
       0: aload_0
       1: getfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: new           #19                 // class net/bytebuddy/TypeCache$LookupKey
       7: dup
       8: aload_1
       9: invokespecial #56                 // Method net/bytebuddy/TypeCache$LookupKey."<init>":(Ljava/lang/ClassLoader;)V
      12: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #58                 // class java/util/concurrent/ConcurrentMap
      20: astore        4
      22: aload         4
      24: ifnonnull     70
      27: new           #40                 // class java/util/concurrent/ConcurrentHashMap
      30: dup
      31: invokespecial #41                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      34: astore        4
      36: aload_0
      37: getfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      40: new           #16                 // class net/bytebuddy/TypeCache$StorageKey
      43: dup
      44: aload_1
      45: aload_0
      46: invokespecial #86                 // Method net/bytebuddy/TypeCache$StorageKey."<init>":(Ljava/lang/ClassLoader;Ljava/lang/ref/ReferenceQueue;)V
      49: aload         4
      51: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #58                 // class java/util/concurrent/ConcurrentMap
      59: astore        5
      61: aload         5
      63: ifnull        70
      66: aload         5
      68: astore        4
      70: aload_0
      71: getfield      #38                 // Field sort:Lnet/bytebuddy/TypeCache$Sort;
      74: aload_3
      75: invokevirtual #94                 // Method net/bytebuddy/TypeCache$Sort.wrap:(Ljava/lang/Class;)Ljava/lang/ref/Reference;
      78: astore        5
      80: aload         4
      82: aload_2
      83: aload         5
      85: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #66                 // class java/lang/ref/Reference
      93: astore        6
      95: aload         6
      97: ifnull        185
     100: aload         6
     102: invokevirtual #69                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
     105: checkcast     #71                 // class java/lang/Class
     108: astore        7
     110: aload         7
     112: ifnull        118
     115: aload         7
     117: areturn
     118: aload         4
     120: aload_2
     121: aload         6
     123: invokeinterface #98,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
     128: ifeq          149
     131: aload         4
     133: aload_2
     134: aload         5
     136: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     141: checkcast     #66                 // class java/lang/ref/Reference
     144: astore        6
     146: goto          182
     149: aload         4
     151: aload_2
     152: invokeinterface #62,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     157: checkcast     #66                 // class java/lang/ref/Reference
     160: astore        6
     162: aload         6
     164: ifnonnull     182
     167: aload         4
     169: aload_2
     170: aload         5
     172: invokeinterface #90,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     177: checkcast     #66                 // class java/lang/ref/Reference
     180: astore        6
     182: goto          95
     185: aload_3
     186: areturn

  public java.lang.Class<?> findOrInsert(java.lang.ClassLoader, T, java.util.concurrent.Callable<java.lang.Class<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #107                // Method find:(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Class;
       6: astore        4
       8: aload         4
      10: ifnull        16
      13: aload         4
      15: areturn
      16: aload_0
      17: aload_1
      18: aload_2
      19: aload_3
      20: invokeinterface #112,  1          // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      25: checkcast     #71                 // class java/lang/Class
      28: invokevirtual #114                // Method insert:(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Class;
      31: areturn
      32: astore        5
      34: new           #116                // class java/lang/IllegalArgumentException
      37: dup
      38: ldc           #118                // String Could not create type
      40: aload         5
      42: invokespecial #121                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: athrow
    Exception table:
       from    to  target type
          16    31    32   Class java/lang/Throwable

  public java.lang.Class<?> findOrInsert(java.lang.ClassLoader, T, java.util.concurrent.Callable<java.lang.Class<?>>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #107                // Method find:(Ljava/lang/ClassLoader;Ljava/lang/Object;)Ljava/lang/Class;
       6: astore        5
       8: aload         5
      10: ifnull        16
      13: aload         5
      15: areturn
      16: aload         4
      18: dup
      19: astore        6
      21: monitorenter
      22: aload_0
      23: aload_1
      24: aload_2
      25: aload_3
      26: invokevirtual #129                // Method findOrInsert:(Ljava/lang/ClassLoader;Ljava/lang/Object;Ljava/util/concurrent/Callable;)Ljava/lang/Class;
      29: aload         6
      31: monitorexit
      32: areturn
      33: astore        7
      35: aload         6
      37: monitorexit
      38: aload         7
      40: athrow
    Exception table:
       from    to  target type
          22    32    33   any
          33    38    33   any

  public void expungeStaleEntries();
    Code:
       0: aload_0
       1: invokevirtual #139                // Method poll:()Ljava/lang/ref/Reference;
       4: dup
       5: astore_1
       6: ifnull        23
       9: aload_0
      10: getfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
      13: aload_1
      14: invokeinterface #141,  2          // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: pop
      20: goto          0
      23: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #43                 // Field cache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #145,  1          // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: return

  static {};
    Code:
       0: aconst_null
       1: putstatic     #64                 // Field NOT_FOUND:Ljava/lang/Class;
       4: return
}
