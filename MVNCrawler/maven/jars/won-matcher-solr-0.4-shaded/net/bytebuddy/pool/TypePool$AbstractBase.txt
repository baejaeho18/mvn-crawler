Compiled from "TypePool.java"
public abstract class net.bytebuddy.pool.TypePool$AbstractBase implements net.bytebuddy.pool.TypePool {
  protected static final java.util.Map<java.lang.String, net.bytebuddy.description.type.TypeDescription> PRIMITIVE_TYPES;

  protected static final java.util.Map<java.lang.String, java.lang.String> PRIMITIVE_DESCRIPTORS;

  private static final java.lang.String ARRAY_SYMBOL;

  protected final net.bytebuddy.pool.TypePool$CacheProvider cacheProvider;

  protected net.bytebuddy.pool.TypePool$AbstractBase(net.bytebuddy.pool.TypePool$CacheProvider);
    Code:
       0: aload_0
       1: invokespecial #56                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       9: return

  public net.bytebuddy.pool.TypePool$Resolution describe(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #64                 // String /
       3: invokevirtual #70                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
       6: ifeq          36
       9: new           #72                 // class java/lang/IllegalArgumentException
      12: dup
      13: new           #74                 // class java/lang/StringBuilder
      16: dup
      17: invokespecial #75                 // Method java/lang/StringBuilder."<init>":()V
      20: aload_1
      21: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #81                 // String  contains the illegal character \'/\'
      26: invokevirtual #79                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #85                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #88                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: iconst_0
      37: istore_2
      38: aload_1
      39: ldc           #49                 // String [
      41: invokevirtual #92                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      44: ifeq          59
      47: iinc          2, 1
      50: aload_1
      51: iconst_1
      52: invokevirtual #96                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      55: astore_1
      56: goto          38
      59: iload_2
      60: ifle          96
      63: getstatic     #98                 // Field PRIMITIVE_DESCRIPTORS:Ljava/util/Map;
      66: aload_1
      67: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #66                 // class java/lang/String
      75: astore_3
      76: aload_3
      77: ifnonnull     94
      80: aload_1
      81: iconst_1
      82: aload_1
      83: invokevirtual #108                // Method java/lang/String.length:()I
      86: iconst_1
      87: isub
      88: invokevirtual #111                // Method java/lang/String.substring:(II)Ljava/lang/String;
      91: goto          95
      94: aload_3
      95: astore_1
      96: getstatic     #113                // Field PRIMITIVE_TYPES:Ljava/util/Map;
      99: aload_1
     100: invokeinterface #104,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: checkcast     #39                 // class net/bytebuddy/description/type/TypeDescription
     108: astore_3
     109: aload_3
     110: ifnonnull     126
     113: aload_0
     114: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
     117: aload_1
     118: invokeinterface #116,  2          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.find:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
     123: goto          134
     126: new           #34                 // class net/bytebuddy/pool/TypePool$Resolution$Simple
     129: dup
     130: aload_3
     131: invokespecial #119                // Method net/bytebuddy/pool/TypePool$Resolution$Simple."<init>":(Lnet/bytebuddy/description/type/TypeDescription;)V
     134: astore        4
     136: aload         4
     138: ifnonnull     153
     141: aload_0
     142: aload_1
     143: aload_0
     144: aload_1
     145: invokevirtual #122                // Method doDescribe:(Ljava/lang/String;)Lnet/bytebuddy/pool/TypePool$Resolution;
     148: invokevirtual #126                // Method doCache:(Ljava/lang/String;Lnet/bytebuddy/pool/TypePool$Resolution;)Lnet/bytebuddy/pool/TypePool$Resolution;
     151: astore        4
     153: aload         4
     155: iload_2
     156: invokestatic  #130                // Method net/bytebuddy/pool/TypePool$AbstractBase$ArrayTypeResolution.of:(Lnet/bytebuddy/pool/TypePool$Resolution;I)Lnet/bytebuddy/pool/TypePool$Resolution;
     159: areturn

  protected net.bytebuddy.pool.TypePool$Resolution doCache(java.lang.String, net.bytebuddy.pool.TypePool$Resolution);
    Code:
       0: aload_0
       1: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       4: aload_1
       5: aload_2
       6: invokeinterface #141,  3          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.register:(Ljava/lang/String;Lnet/bytebuddy/pool/TypePool$Resolution;)Lnet/bytebuddy/pool/TypePool$Resolution;
      11: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       4: invokeinterface #144,  1          // InterfaceMethod net/bytebuddy/pool/TypePool$CacheProvider.clear:()V
       9: return

  protected abstract net.bytebuddy.pool.TypePool$Resolution doDescribe(java.lang.String);

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class net/bytebuddy/pool/TypePool$AbstractBase
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #2                  // class net/bytebuddy/pool/TypePool$AbstractBase
      20: astore_2
      21: aload_2
      22: aload_0
      23: invokevirtual #149                // Method canEqual:(Ljava/lang/Object;)Z
      26: ifne          31
      29: iconst_0
      30: ireturn
      31: aload_0
      32: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
      35: astore_3
      36: aload_2
      37: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
      40: astore        4
      42: aload_3
      43: ifnonnull     54
      46: aload         4
      48: ifnull        65
      51: goto          63
      54: aload_3
      55: aload         4
      57: invokevirtual #151                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      60: ifne          65
      63: iconst_0
      64: ireturn
      65: iconst_1
      66: ireturn

  protected boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class net/bytebuddy/pool/TypePool$AbstractBase
       4: ireturn

  public int hashCode();
    Code:
       0: bipush        59
       2: istore_1
       3: iconst_1
       4: istore_2
       5: aload_0
       6: getfield      #58                 // Field cacheProvider:Lnet/bytebuddy/pool/TypePool$CacheProvider;
       9: astore_3
      10: iload_2
      11: bipush        59
      13: imul
      14: aload_3
      15: ifnonnull     23
      18: bipush        43
      20: goto          27
      23: aload_3
      24: invokevirtual #159                // Method java/lang/Object.hashCode:()I
      27: iadd
      28: istore_2
      29: iload_2
      30: ireturn

  static {};
    Code:
       0: new           #165                // class java/util/HashMap
       3: dup
       4: invokespecial #166                // Method java/util/HashMap."<init>":()V
       7: astore_0
       8: new           #165                // class java/util/HashMap
      11: dup
      12: invokespecial #166                // Method java/util/HashMap."<init>":()V
      15: astore_1
      16: bipush        9
      18: anewarray     #168                // class java/lang/Class
      21: dup
      22: iconst_0
      23: getstatic     #174                // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      26: aastore
      27: dup
      28: iconst_1
      29: getstatic     #177                // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      32: aastore
      33: dup
      34: iconst_2
      35: getstatic     #180                // Field java/lang/Short.TYPE:Ljava/lang/Class;
      38: aastore
      39: dup
      40: iconst_3
      41: getstatic     #183                // Field java/lang/Character.TYPE:Ljava/lang/Class;
      44: aastore
      45: dup
      46: iconst_4
      47: getstatic     #186                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      50: aastore
      51: dup
      52: iconst_5
      53: getstatic     #189                // Field java/lang/Long.TYPE:Ljava/lang/Class;
      56: aastore
      57: dup
      58: bipush        6
      60: getstatic     #192                // Field java/lang/Float.TYPE:Ljava/lang/Class;
      63: aastore
      64: dup
      65: bipush        7
      67: getstatic     #195                // Field java/lang/Double.TYPE:Ljava/lang/Class;
      70: aastore
      71: dup
      72: bipush        8
      74: getstatic     #198                // Field java/lang/Void.TYPE:Ljava/lang/Class;
      77: aastore
      78: astore_2
      79: aload_2
      80: arraylength
      81: istore_3
      82: iconst_0
      83: istore        4
      85: iload         4
      87: iload_3
      88: if_icmpge     141
      91: aload_2
      92: iload         4
      94: aaload
      95: astore        5
      97: aload_0
      98: aload         5
     100: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;
     103: new           #37                 // class net/bytebuddy/description/type/TypeDescription$ForLoadedType
     106: dup
     107: aload         5
     109: invokespecial #206                // Method net/bytebuddy/description/type/TypeDescription$ForLoadedType."<init>":(Ljava/lang/Class;)V
     112: invokeinterface #210,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     117: pop
     118: aload_1
     119: aload         5
     121: invokestatic  #216                // Method net/bytebuddy/jar/asm/Type.getDescriptor:(Ljava/lang/Class;)Ljava/lang/String;
     124: aload         5
     126: invokevirtual #203                // Method java/lang/Class.getName:()Ljava/lang/String;
     129: invokeinterface #210,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: iinc          4, 1
     138: goto          85
     141: aload_0
     142: invokestatic  #222                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     145: putstatic     #113                // Field PRIMITIVE_TYPES:Ljava/util/Map;
     148: aload_1
     149: invokestatic  #222                // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
     152: putstatic     #98                 // Field PRIMITIVE_DESCRIPTORS:Ljava/util/Map;
     155: return
}
