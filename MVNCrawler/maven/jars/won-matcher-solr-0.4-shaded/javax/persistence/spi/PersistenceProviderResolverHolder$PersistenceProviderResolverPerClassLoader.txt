Compiled from "PersistenceProviderResolverHolder.java"
class javax.persistence.spi.PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader implements javax.persistence.spi.PersistenceProviderResolver {
  private final java.util.WeakHashMap<java.lang.ClassLoader, javax.persistence.spi.PersistenceProviderResolver> resolvers;

  private volatile short barrier;

  private javax.persistence.spi.PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/WeakHashMap
       8: dup
       9: invokespecial #5                  // Method java/util/WeakHashMap."<init>":()V
      12: putfield      #6                  // Field resolvers:Ljava/util/WeakHashMap;
      15: aload_0
      16: iconst_1
      17: putfield      #7                  // Field barrier:S
      20: return

  public java.util.List<javax.persistence.spi.PersistenceProvider> getPersistenceProviders();
    Code:
       0: invokestatic  #1                  // Method getContextualClassLoader:()Ljava/lang/ClassLoader;
       3: astore_1
       4: aload_0
       5: getfield      #7                  // Field barrier:S
       8: iconst_1
       9: if_icmpne     12
      12: aload_0
      13: getfield      #6                  // Field resolvers:Ljava/util/WeakHashMap;
      16: aload_1
      17: invokevirtual #8                  // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #9                  // class javax/persistence/spi/PersistenceProviderResolver
      23: astore_2
      24: aload_2
      25: ifnonnull     52
      28: new           #10                 // class javax/persistence/spi/PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader$CachingPersistenceProviderResolver
      31: dup
      32: aload_1
      33: invokespecial #11                 // Method javax/persistence/spi/PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader$CachingPersistenceProviderResolver."<init>":(Ljava/lang/ClassLoader;)V
      36: astore_2
      37: aload_0
      38: getfield      #6                  // Field resolvers:Ljava/util/WeakHashMap;
      41: aload_1
      42: aload_2
      43: invokevirtual #12                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: aload_0
      48: iconst_1
      49: putfield      #7                  // Field barrier:S
      52: aload_2
      53: invokeinterface #13,  1           // InterfaceMethod javax/persistence/spi/PersistenceProviderResolver.getPersistenceProviders:()Ljava/util/List;
      58: areturn

  public void clearCachedProviders();
    Code:
       0: invokestatic  #1                  // Method getContextualClassLoader:()Ljava/lang/ClassLoader;
       3: astore_1
       4: aload_0
       5: getfield      #7                  // Field barrier:S
       8: iconst_1
       9: if_icmpne     12
      12: aload_0
      13: getfield      #6                  // Field resolvers:Ljava/util/WeakHashMap;
      16: aload_1
      17: invokevirtual #8                  // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #9                  // class javax/persistence/spi/PersistenceProviderResolver
      23: astore_2
      24: aload_2
      25: ifnull        34
      28: aload_2
      29: invokeinterface #14,  1           // InterfaceMethod javax/persistence/spi/PersistenceProviderResolver.clearCachedProviders:()V
      34: return

  private static java.lang.ClassLoader getContextualClassLoader();
    Code:
       0: invokestatic  #15                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #16                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: astore_0
       7: aload_0
       8: ifnonnull     18
      11: ldc_w         #17                 // class javax/persistence/spi/PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader
      14: invokevirtual #18                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      17: astore_0
      18: aload_0
      19: areturn

  javax.persistence.spi.PersistenceProviderResolverHolder$PersistenceProviderResolverPerClassLoader(javax.persistence.spi.PersistenceProviderResolverHolder$1);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method "<init>":()V
       4: return

  static java.lang.ClassLoader access$100();
    Code:
       0: invokestatic  #1                  // Method getContextualClassLoader:()Ljava/lang/ClassLoader;
       3: areturn
}
