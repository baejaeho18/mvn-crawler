Compiled from "Subquery.java"
public interface javax.persistence.criteria.Subquery<T> extends javax.persistence.criteria.AbstractQuery<T>, javax.persistence.criteria.Expression<T> {
  public abstract javax.persistence.criteria.Subquery<T> select(javax.persistence.criteria.Expression<T>);

  public abstract javax.persistence.criteria.Subquery<T> where(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.Subquery<T> where(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.Subquery<T> groupBy(javax.persistence.criteria.Expression<?>...);

  public abstract javax.persistence.criteria.Subquery<T> groupBy(java.util.List<javax.persistence.criteria.Expression<?>>);

  public abstract javax.persistence.criteria.Subquery<T> having(javax.persistence.criteria.Expression<java.lang.Boolean>);

  public abstract javax.persistence.criteria.Subquery<T> having(javax.persistence.criteria.Predicate...);

  public abstract javax.persistence.criteria.Subquery<T> distinct(boolean);

  public abstract <Y> javax.persistence.criteria.Root<Y> correlate(javax.persistence.criteria.Root<Y>);

  public abstract <X, Y> javax.persistence.criteria.Join<X, Y> correlate(javax.persistence.criteria.Join<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.CollectionJoin<X, Y> correlate(javax.persistence.criteria.CollectionJoin<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.SetJoin<X, Y> correlate(javax.persistence.criteria.SetJoin<X, Y>);

  public abstract <X, Y> javax.persistence.criteria.ListJoin<X, Y> correlate(javax.persistence.criteria.ListJoin<X, Y>);

  public abstract <X, K, V> javax.persistence.criteria.MapJoin<X, K, V> correlate(javax.persistence.criteria.MapJoin<X, K, V>);

  public abstract javax.persistence.criteria.AbstractQuery<?> getParent();

  public abstract javax.persistence.criteria.CommonAbstractCriteria getContainingQuery();

  public abstract javax.persistence.criteria.Expression<T> getSelection();

  public abstract java.util.Set<javax.persistence.criteria.Join<?, ?>> getCorrelatedJoins();
}
