Compiled from "PredefinedAliasPrivateKeyStrategy.java"
public class won.cryptography.ssl.PredefinedAliasPrivateKeyStrategy implements org.apache.http.ssl.PrivateKeyStrategy {
  private static final org.slf4j.Logger logger;

  private java.lang.String alias;

  public won.cryptography.ssl.PredefinedAliasPrivateKeyStrategy(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field alias:Ljava/lang/String;
       9: return

  public java.lang.String chooseAlias(java.util.Map<java.lang.String, org.apache.http.ssl.PrivateKeyDetails>, java.net.Socket);
    Code:
       0: getstatic     #3                  // Field logger:Lorg/slf4j/Logger;
       3: new           #4                  // class java/lang/StringBuilder
       6: dup
       7: invokespecial #5                  // Method java/lang/StringBuilder."<init>":()V
      10: ldc           #6                  // String Choosen alias:
      12: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: aload_0
      16: getfield      #2                  // Field alias:Ljava/lang/String;
      19: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: invokeinterface #9,  2            // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      30: aload_0
      31: getfield      #2                  // Field alias:Ljava/lang/String;
      34: areturn

  public java.lang.String getAlias();
    Code:
       0: aload_0
       1: getfield      #2                  // Field alias:Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: invokestatic  #10                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #11                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #12                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #3                  // Field logger:Lorg/slf4j/Logger;
      12: return
}
