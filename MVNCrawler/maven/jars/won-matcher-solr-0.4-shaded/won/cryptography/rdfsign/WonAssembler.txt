Compiled from "WonAssembler.java"
public class won.cryptography.rdfsign.WonAssembler {
  private static final java.lang.String SIG_GRAPH_NAME_TEMP;

  private static final java.lang.String SIG_BNODE_NAME;

  public won.cryptography.rdfsign.WonAssembler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void assemble(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, org.apache.jena.query.Dataset) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method prepareSignatureOntology:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;
       4: astore_2
       5: aload_0
       6: invokestatic  #3                  // Method verifyGraphCollectionContainsExactlyOneNamedGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)V
       9: aload_0
      10: aload_2
      11: aload_1
      12: invokestatic  #4                  // Method addSignatureTriplesToOrigin:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;Lorg/apache/jena/query/Dataset;)V
      15: return

  public static void assemble(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, org.apache.jena.query.Dataset, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokestatic  #2                  // Method prepareSignatureOntology:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;
       4: astore_3
       5: aload_0
       6: invokestatic  #3                  // Method verifyGraphCollectionContainsExactlyOneNamedGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)V
       9: aload_0
      10: aload_3
      11: aload_1
      12: aload_2
      13: invokestatic  #5                  // Method addSignatureAsNamedGraphToOrigin:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;Lorg/apache/jena/query/Dataset;Ljava/lang/String;)V
      16: return

  public static void removeSignatureGraphs(org.apache.jena.query.Dataset);
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method won/protocol/util/RdfUtils.getModelNames:(Lorg/apache/jena/query/Dataset;)Ljava/util/List;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: aload_1
      11: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_1
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #10                 // class java/lang/String
      28: astore_2
      29: aload_2
      30: aload_0
      31: aload_2
      32: invokeinterface #11,  2           // InterfaceMethod org/apache/jena/query/Dataset.getNamedModel:(Ljava/lang/String;)Lorg/apache/jena/rdf/model/Model;
      37: invokestatic  #12                 // Method won/protocol/util/WonRdfUtils$SignatureUtils.isSignatureGraph:(Ljava/lang/String;Lorg/apache/jena/rdf/model/Model;)Z
      40: ifeq          50
      43: aload_0
      44: aload_2
      45: invokeinterface #13,  2           // InterfaceMethod org/apache/jena/query/Dataset.removeNamedModel:(Ljava/lang/String;)V
      50: goto          10
      53: return

  private static void verifyGraphCollectionContainsExactlyOneNamedGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: aload_0
       1: invokevirtual #14                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
       4: astore_1
       5: aload_1
       6: invokevirtual #15                 // Method java/util/LinkedList.size:()I
       9: iconst_1
      10: if_icmpne     33
      13: aload_1
      14: iconst_0
      15: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      18: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      21: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      24: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      27: ifne          33
      30: goto          118
      33: aload_1
      34: invokevirtual #15                 // Method java/util/LinkedList.size:()I
      37: iconst_2
      38: if_icmpne     58
      41: aload_1
      42: iconst_0
      43: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      46: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      49: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      52: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      55: ifne          118
      58: aload_1
      59: iconst_1
      60: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      63: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      66: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      69: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      72: ifeq          78
      75: goto          118
      78: new           #20                 // class java/lang/IllegalArgumentException
      81: dup
      82: new           #21                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #23                 // class won/cryptography/rdfsign/WonAssembler
      91: invokevirtual #24                 // Method java/lang/Class.getName:()Ljava/lang/String;
      94: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #26                 // String  expects exactly one named graph, found
      99: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_1
     103: invokevirtual #15                 // Method java/util/LinkedList.size:()I
     106: iconst_1
     107: isub
     108: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     111: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: invokespecial #29                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     117: athrow
     118: return

  private static de.uni_koblenz.aggrimm.icp.crypto.sign.ontology.Ontology prepareSignatureOntology(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
       4: astore_1
       5: new           #31                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology
       8: dup
       9: aload_1
      10: invokespecial #32                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology."<init>":(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;)V
      13: astore_2
      14: aload_2
      15: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigPrefix:()Ljava/lang/String;
      18: astore_3
      19: invokestatic  #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigIri:()Ljava/lang/String;
      22: astore        4
      24: aload_3
      25: astore        5
      27: iconst_2
      28: istore        6
      30: iconst_0
      31: istore        7
      33: aload_0
      34: invokevirtual #35                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getPrefixes:()Ljava/util/LinkedList;
      37: invokevirtual #36                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      40: astore        8
      42: aload         8
      44: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          122
      52: aload         8
      54: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #37                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix
      62: astore        9
      64: aload         9
      66: invokevirtual #38                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix.getPrefix:()Ljava/lang/String;
      69: aload         5
      71: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          119
      77: aload         9
      79: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix.getIri:()Ljava/lang/String;
      82: new           #21                 // class java/lang/StringBuilder
      85: dup
      86: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      89: ldc           #41                 // String <
      91: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload         4
      96: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: ldc           #42                 // String >
     101: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     110: ifne          119
     113: iconst_1
     114: istore        7
     116: goto          122
     119: goto          42
     122: iload         7
     124: ifeq          154
     127: new           #21                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     134: aload_3
     135: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: iload         6
     140: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     143: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: astore        5
     148: iinc          6, 1
     151: goto          30
     154: aload_2
     155: aload         5
     157: invokevirtual #43                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.setSigPrefix:(Ljava/lang/String;)V
     160: aload_2
     161: areturn

  private static de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph getSignatureAsGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, de.uni_koblenz.aggrimm.icp.crypto.sign.ontology.Ontology);
    Code:
       0: aload_0
       1: new           #37                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix
       4: dup
       5: new           #21                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      12: aload_1
      13: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigPrefix:()Ljava/lang/String;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #44                 // String :
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: new           #21                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #41                 // String <
      36: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokestatic  #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigIri:()Ljava/lang/String;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #42                 // String >
      47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #45                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      56: invokevirtual #46                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.addPrefix:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix;)V
      59: aload_0
      60: invokevirtual #14                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      63: iconst_0
      64: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      67: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      70: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      73: astore_2
      74: aload_2
      75: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      78: ifeq          96
      81: aload_0
      82: invokevirtual #14                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      85: iconst_1
      86: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      89: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      92: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      95: astore_2
      96: new           #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      99: dup
     100: ldc           #47                 // String <http://localhost:8080/won/SIG-GRAPH-PLACEHOLDER-TEMP>
     102: iconst_0
     103: aconst_null
     104: invokespecial #48                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph."<init>":(Ljava/lang/String;ILde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     107: astore_3
     108: aload_3
     109: invokevirtual #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
     112: astore        4
     114: aload         4
     116: new           #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     119: dup
     120: ldc           #51                 // String _:sig-1
     122: new           #21                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #41                 // String <
     131: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: getstatic     #52                 // Field won/protocol/vocabulary/WONMSG.signedGraph:Lorg/apache/jena/rdf/model/Property;
     137: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     140: ldc           #42                 // String >
     142: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: aload_2
     149: invokespecial #54                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     152: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     155: pop
     156: aload_1
     157: invokevirtual #56                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getTriples:()Ljava/util/LinkedList;
     160: invokevirtual #36                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     163: astore        5
     165: aload         5
     167: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     172: ifeq          222
     175: aload         5
     177: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     182: checkcast     #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     185: astore        6
     187: aload         6
     189: invokevirtual #57                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getSubject:()Ljava/lang/String;
     192: astore        7
     194: aload         4
     196: new           #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     199: dup
     200: aload         7
     202: aload         6
     204: invokevirtual #58                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getPredicate:()Ljava/lang/String;
     207: aload         6
     209: invokevirtual #59                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getObject:()Ljava/lang/String;
     212: invokespecial #54                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     215: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     218: pop
     219: goto          165
     222: aload_0
     223: aload_3
     224: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.addGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     227: aload_3
     228: areturn

  private static de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph getSignatureAsGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String, de.uni_koblenz.aggrimm.icp.crypto.sign.ontology.Ontology);
    Code:
       0: aload_0
       1: new           #37                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix
       4: dup
       5: new           #21                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      12: aload_2
      13: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigPrefix:()Ljava/lang/String;
      16: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #44                 // String :
      21: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: new           #21                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #41                 // String <
      36: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokestatic  #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getSigIri:()Ljava/lang/String;
      42: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: ldc           #42                 // String >
      47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #45                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      56: invokevirtual #46                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.addPrefix:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Prefix;)V
      59: aload_0
      60: invokevirtual #14                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      63: iconst_0
      64: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      67: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      70: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      73: astore_3
      74: aload_3
      75: invokevirtual #19                 // Method java/lang/String.isEmpty:()Z
      78: ifeq          96
      81: aload_0
      82: invokevirtual #14                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      85: iconst_1
      86: invokevirtual #16                 // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      89: checkcast     #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      92: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      95: astore_3
      96: new           #17                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      99: dup
     100: ldc           #47                 // String <http://localhost:8080/won/SIG-GRAPH-PLACEHOLDER-TEMP>
     102: iconst_0
     103: aconst_null
     104: invokespecial #48                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph."<init>":(Ljava/lang/String;ILde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     107: astore        4
     109: aload         4
     111: invokevirtual #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
     114: astore        5
     116: aload         5
     118: new           #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     121: dup
     122: new           #21                 // class java/lang/StringBuilder
     125: dup
     126: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     129: ldc           #41                 // String <
     131: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_1
     135: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: ldc           #42                 // String >
     140: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: new           #21                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     153: ldc           #41                 // String <
     155: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: getstatic     #52                 // Field won/protocol/vocabulary/WONMSG.signedGraph:Lorg/apache/jena/rdf/model/Property;
     161: invokevirtual #53                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     164: ldc           #42                 // String >
     166: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     172: aload_3
     173: invokespecial #54                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     176: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     179: pop
     180: aload_2
     181: invokevirtual #56                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getTriples:()Ljava/util/LinkedList;
     184: invokevirtual #36                 // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     187: astore        6
     189: aload         6
     191: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     196: ifeq          282
     199: aload         6
     201: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     206: checkcast     #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     209: astore        7
     211: aload         7
     213: invokevirtual #57                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getSubject:()Ljava/lang/String;
     216: astore        8
     218: aload         8
     220: ldc           #51                 // String _:sig-1
     222: invokevirtual #39                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     225: ifeq          254
     228: new           #21                 // class java/lang/StringBuilder
     231: dup
     232: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
     235: ldc           #41                 // String <
     237: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     240: aload_1
     241: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     244: ldc           #42                 // String >
     246: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: astore        8
     254: aload         5
     256: new           #50                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     259: dup
     260: aload         8
     262: aload         7
     264: invokevirtual #58                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getPredicate:()Ljava/lang/String;
     267: aload         7
     269: invokevirtual #59                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getObject:()Ljava/lang/String;
     272: invokespecial #54                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     275: invokevirtual #55                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     278: pop
     279: goto          189
     282: aload_0
     283: aload         4
     285: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.addGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     288: aload         4
     290: areturn

  private static void addSignatureAsNamedGraphToOrigin(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, de.uni_koblenz.aggrimm.icp.crypto.sign.ontology.Ontology, org.apache.jena.query.Dataset, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: invokestatic  #61                 // Method getSignatureAsGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;)Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;
       6: astore        4
       8: aload         4
      10: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      13: aload_0
      14: invokestatic  #62                 // Method won/cryptography/rdfsign/ModelConverter.namedGraphToModel:(Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)Lorg/apache/jena/rdf/model/Model;
      17: astore        5
      19: aload_2
      20: aload_3
      21: aload         5
      23: invokeinterface #63,  3           // InterfaceMethod org/apache/jena/query/Dataset.addNamedModel:(Ljava/lang/String;Lorg/apache/jena/rdf/model/Model;)V
      28: aload         5
      30: aload_2
      31: invokestatic  #64                 // Method addPrefixesToDefaultGraph:(Lorg/apache/jena/rdf/model/Model;Lorg/apache/jena/query/Dataset;)V
      34: return

  private static void addSignatureTriplesToOrigin(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, de.uni_koblenz.aggrimm.icp.crypto.sign.ontology.Ontology, org.apache.jena.query.Dataset) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #65                 // Method getSignatureAsGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Lde/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology;)Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;
       5: astore_3
       6: aload_3
       7: invokevirtual #18                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
      10: aload_0
      11: invokestatic  #62                 // Method won/cryptography/rdfsign/ModelConverter.namedGraphToModel:(Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;)Lorg/apache/jena/rdf/model/Model;
      14: astore        4
      16: aload_2
      17: invokeinterface #66,  1           // InterfaceMethod org/apache/jena/query/Dataset.getDefaultModel:()Lorg/apache/jena/rdf/model/Model;
      22: aload         4
      24: invokeinterface #67,  2           // InterfaceMethod org/apache/jena/rdf/model/Model.add:(Lorg/apache/jena/rdf/model/Model;)Lorg/apache/jena/rdf/model/Model;
      29: pop
      30: aload         4
      32: aload_2
      33: invokestatic  #64                 // Method addPrefixesToDefaultGraph:(Lorg/apache/jena/rdf/model/Model;Lorg/apache/jena/query/Dataset;)V
      36: return

  private static void addPrefixesToDefaultGraph(org.apache.jena.rdf.model.Model, org.apache.jena.query.Dataset);
    Code:
       0: aload_0
       1: invokeinterface #68,  1           // InterfaceMethod org/apache/jena/rdf/model/Model.getNsPrefixMap:()Ljava/util/Map;
       6: invokeinterface #69,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      11: invokeinterface #70,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          67
      26: aload_2
      27: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #10                 // class java/lang/String
      35: astore_3
      36: aload_1
      37: invokeinterface #66,  1           // InterfaceMethod org/apache/jena/query/Dataset.getDefaultModel:()Lorg/apache/jena/rdf/model/Model;
      42: aload_3
      43: aload_0
      44: invokeinterface #68,  1           // InterfaceMethod org/apache/jena/rdf/model/Model.getNsPrefixMap:()Ljava/util/Map;
      49: aload_3
      50: invokeinterface #71,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      55: checkcast     #10                 // class java/lang/String
      58: invokeinterface #72,  3           // InterfaceMethod org/apache/jena/rdf/model/Model.setNsPrefix:(Ljava/lang/String;Ljava/lang/String;)Lorg/apache/jena/shared/PrefixMapping;
      63: pop
      64: goto          17
      67: aload_1
      68: invokeinterface #66,  1           // InterfaceMethod org/apache/jena/query/Dataset.getDefaultModel:()Lorg/apache/jena/rdf/model/Model;
      73: invokeinterface #68,  1           // InterfaceMethod org/apache/jena/rdf/model/Model.getNsPrefixMap:()Ljava/util/Map;
      78: aload_0
      79: invokeinterface #68,  1           // InterfaceMethod org/apache/jena/rdf/model/Model.getNsPrefixMap:()Ljava/util/Map;
      84: invokeinterface #73,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      89: return
}
