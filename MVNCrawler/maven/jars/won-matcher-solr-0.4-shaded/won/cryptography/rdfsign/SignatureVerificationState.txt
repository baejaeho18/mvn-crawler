Compiled from "SignatureVerificationState.java"
public class won.cryptography.rdfsign.SignatureVerificationState {
  private java.lang.Boolean verificationPassed;

  private java.lang.String message;

  private java.util.Map<java.lang.String, java.util.List<java.lang.String>> signedGraphNameToSignatureGraphName;

  private java.util.Map<java.lang.String, java.lang.Boolean> signatureGraphNameToVerified;

  private java.util.Map<java.lang.String, java.lang.String> signatureGraphNameToSignedGraphName;

  private java.util.Map<java.lang.String, java.lang.String> signatureGraphNameToSignatureValue;

  private java.util.List<won.protocol.message.WonSignatureData> signatures;

  public won.cryptography.rdfsign.SignatureVerificationState();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
       9: aload_0
      10: ldc           #3                  // String
      12: putfield      #4                  // Field message:Ljava/lang/String;
      15: aload_0
      16: new           #5                  // class java/util/LinkedHashMap
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedHashMap."<init>":()V
      23: putfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      26: aload_0
      27: new           #8                  // class java/util/HashMap
      30: dup
      31: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      34: putfield      #10                 // Field signatureGraphNameToVerified:Ljava/util/Map;
      37: aload_0
      38: new           #8                  // class java/util/HashMap
      41: dup
      42: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      45: putfield      #11                 // Field signatureGraphNameToSignedGraphName:Ljava/util/Map;
      48: aload_0
      49: new           #8                  // class java/util/HashMap
      52: dup
      53: invokespecial #9                  // Method java/util/HashMap."<init>":()V
      56: putfield      #12                 // Field signatureGraphNameToSignatureValue:Ljava/util/Map;
      59: aload_0
      60: new           #13                 // class java/util/ArrayList
      63: dup
      64: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      67: putfield      #15                 // Field signatures:Ljava/util/List;
      70: return

  public void addSignedGraphName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ifne          31
      13: aload_0
      14: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      17: aload_1
      18: new           #13                 // class java/util/ArrayList
      21: dup
      22: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      25: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: return

  public void addSignatureData(won.protocol.message.WonSignatureData);
    Code:
       0: aload_0
       1: getfield      #15                 // Field signatures:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      15: aload_1
      16: invokevirtual #19                 // Method won/protocol/message/WonSignatureData.getSignedGraphUri:()Ljava/lang/String;
      19: invokeinterface #16,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      24: ifne          48
      27: aload_0
      28: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      31: aload_1
      32: invokevirtual #19                 // Method won/protocol/message/WonSignatureData.getSignedGraphUri:()Ljava/lang/String;
      35: new           #13                 // class java/util/ArrayList
      38: dup
      39: invokespecial #14                 // Method java/util/ArrayList."<init>":()V
      42: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      47: pop
      48: aload_0
      49: getfield      #11                 // Field signatureGraphNameToSignedGraphName:Ljava/util/Map;
      52: aload_1
      53: invokevirtual #20                 // Method won/protocol/message/WonSignatureData.getSignatureUri:()Ljava/lang/String;
      56: aload_1
      57: invokevirtual #19                 // Method won/protocol/message/WonSignatureData.getSignedGraphUri:()Ljava/lang/String;
      60: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      70: aload_1
      71: invokevirtual #19                 // Method won/protocol/message/WonSignatureData.getSignedGraphUri:()Ljava/lang/String;
      74: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: checkcast     #22                 // class java/util/List
      82: aload_1
      83: invokevirtual #20                 // Method won/protocol/message/WonSignatureData.getSignatureUri:()Ljava/lang/String;
      86: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      91: pop
      92: aload_0
      93: getfield      #12                 // Field signatureGraphNameToSignatureValue:Ljava/util/Map;
      96: aload_1
      97: invokevirtual #20                 // Method won/protocol/message/WonSignatureData.getSignatureUri:()Ljava/lang/String;
     100: aload_1
     101: invokevirtual #23                 // Method won/protocol/message/WonSignatureData.getSignatureValue:()Ljava/lang/String;
     104: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: return

  public boolean isVerificationPassed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
       4: ifnull        15
       7: aload_0
       8: getfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
      11: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
      14: ireturn
      15: aload_0
      16: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      19: invokeinterface #25,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      24: invokeinterface #26,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_1
      30: aload_1
      31: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          113
      39: aload_1
      40: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #29                 // class java/lang/String
      48: astore_2
      49: aload_0
      50: getfield      #7                  // Field signedGraphNameToSignatureGraphName:Ljava/util/Map;
      53: aload_2
      54: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #22                 // class java/util/List
      62: invokeinterface #30,  1           // InterfaceMethod java/util/List.size:()I
      67: iconst_1
      68: if_icmpge     110
      71: aload_0
      72: iconst_0
      73: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      76: putfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
      79: aload_0
      80: new           #32                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc           #34                 // String No signatures found for
      89: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: aload_2
      93: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: putfield      #4                  // Field message:Ljava/lang/String;
     102: aload_0
     103: getfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
     106: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     109: ireturn
     110: goto          30
     113: aload_0
     114: iconst_1
     115: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     118: putfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
     121: aload_0
     122: getfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
     125: invokevirtual #24                 // Method java/lang/Boolean.booleanValue:()Z
     128: ireturn

  public void setVerificationFailed(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #10                 // Field signatureGraphNameToVerified:Ljava/util/Map;
       4: aload_1
       5: iconst_0
       6: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: aload_2
      17: putfield      #4                  // Field message:Ljava/lang/String;
      20: aload_0
      21: iconst_0
      22: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: putfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
      28: return

  public void verificationFailed(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field message:Ljava/lang/String;
       5: aload_0
       6: iconst_0
       7: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      10: putfield      #2                  // Field verificationPassed:Ljava/lang/Boolean;
      13: return

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message:Ljava/lang/String;
       4: areturn

  public java.util.List<won.protocol.message.WonSignatureData> getSignatures();
    Code:
       0: aload_0
       1: getfield      #15                 // Field signatures:Ljava/util/List;
       4: areturn

  public java.util.Set<java.lang.String> getSignatureGraphNames();
    Code:
       0: aload_0
       1: getfield      #12                 // Field signatureGraphNameToSignatureValue:Ljava/util/Map;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.lang.String getSignedGraphName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field signatureGraphNameToSignedGraphName:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #29                 // class java/lang/String
      13: areturn
}
