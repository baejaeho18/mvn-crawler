Compiled from "RegistrationServerCertificateBased.java"
public class won.cryptography.service.RegistrationServerCertificateBased implements won.cryptography.service.RegistrationServer {
  final org.slf4j.Logger logger;

  private won.protocol.service.ApplicationManagementService ownerManagementService;

  private org.apache.http.ssl.TrustStrategy trustStrategy;

  private won.cryptography.ssl.AliasGenerator aliasGenerator;

  public won.cryptography.service.RegistrationServerCertificateBased(org.apache.http.ssl.TrustStrategy);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      12: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      15: aload_0
      16: new           #5                  // class won/cryptography/ssl/AliasFromFingerprintGenerator
      19: dup
      20: invokespecial #6                  // Method won/cryptography/ssl/AliasFromFingerprintGenerator."<init>":()V
      23: putfield      #7                  // Field aliasGenerator:Lwon/cryptography/ssl/AliasGenerator;
      26: aload_0
      27: aload_1
      28: putfield      #8                  // Field trustStrategy:Lorg/apache/http/ssl/TrustStrategy;
      31: return

  public java.lang.String registerOwner(java.lang.Object) throws won.protocol.exception.WonProtocolException;
    Code:
       0: aconst_null
       1: astore_2
       2: iconst_1
       3: anewarray     #9                  // class java/security/cert/X509Certificate
       6: dup
       7: iconst_0
       8: aload_1
       9: checkcast     #9                  // class java/security/cert/X509Certificate
      12: aastore
      13: astore_3
      14: aload_0
      15: aload_3
      16: invokespecial #10                 // Method checkTrusted:([Ljava/security/cert/X509Certificate;)V
      19: aload_0
      20: getfield      #7                  // Field aliasGenerator:Lwon/cryptography/ssl/AliasGenerator;
      23: aload_3
      24: iconst_0
      25: aaload
      26: invokeinterface #11,  2           // InterfaceMethod won/cryptography/ssl/AliasGenerator.generateAlias:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      31: astore_2
      32: aload_0
      33: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      36: ldc           #12                 // String Public key hash to be used as ownerApplicationId: {}
      38: aload_2
      39: invokeinterface #13,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      44: aload_0
      45: getfield      #14                 // Field ownerManagementService:Lwon/protocol/service/ApplicationManagementService;
      48: aload_2
      49: invokeinterface #15,  2           // InterfaceMethod won/protocol/service/ApplicationManagementService.registerOwnerApplication:(Ljava/lang/String;)Ljava/lang/String;
      54: astore_2
      55: goto          83
      58: astore        4
      60: aload_0
      61: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      64: ldc           #17                 // String could not register owner
      66: aload         4
      68: invokeinterface #18,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: new           #19                 // class won/protocol/exception/WonProtocolException
      76: dup
      77: aload         4
      79: invokespecial #20                 // Method won/protocol/exception/WonProtocolException."<init>":(Ljava/lang/Throwable;)V
      82: athrow
      83: aload_2
      84: areturn
    Exception table:
       from    to  target type
          19    55    58   Class java/lang/Exception

  public java.lang.String registerNode(java.lang.Object) throws won.protocol.exception.WonProtocolException;
    Code:
       0: iconst_1
       1: anewarray     #9                  // class java/security/cert/X509Certificate
       4: dup
       5: iconst_0
       6: aload_1
       7: checkcast     #9                  // class java/security/cert/X509Certificate
      10: aastore
      11: astore_2
      12: aload_0
      13: aload_2
      14: invokespecial #10                 // Method checkTrusted:([Ljava/security/cert/X509Certificate;)V
      17: aconst_null
      18: areturn

  private void checkTrusted(java.security.cert.X509Certificate[]) throws won.protocol.exception.WonProtocolException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field trustStrategy:Lorg/apache/http/ssl/TrustStrategy;
       4: aload_1
       5: ldc           #21                 // String CLIENT_CERT
       7: invokeinterface #22,  3           // InterfaceMethod org/apache/http/ssl/TrustStrategy.isTrusted:([Ljava/security/cert/X509Certificate;Ljava/lang/String;)Z
      12: ifne          25
      15: new           #19                 // class won/protocol/exception/WonProtocolException
      18: dup
      19: ldc           #23                 // String Client cannot be trusted!
      21: invokespecial #24                 // Method won/protocol/exception/WonProtocolException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: goto          38
      28: astore_2
      29: new           #19                 // class won/protocol/exception/WonProtocolException
      32: dup
      33: aload_2
      34: invokespecial #20                 // Method won/protocol/exception/WonProtocolException."<init>":(Ljava/lang/Throwable;)V
      37: pop
      38: return
    Exception table:
       from    to  target type
           0    25    28   Class java/security/cert/CertificateException
}
