Compiled from "CertificateCheckingBrokerFilter.java"
public class won.cryptography.activemq.CertificateCheckingBrokerFilter extends org.apache.activemq.broker.BrokerFilter {
  private java.lang.String queueNamePrefixToCheck;

  private won.cryptography.ssl.AliasGenerator aliasGenerator;

  private static final org.slf4j.Logger logger;

  static final boolean $assertionsDisabled;

  public won.cryptography.activemq.CertificateCheckingBrokerFilter(org.apache.activemq.broker.Broker, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/activemq/broker/BrokerFilter."<init>":(Lorg/apache/activemq/broker/Broker;)V
       5: aload_0
       6: new           #2                  // class won/cryptography/ssl/AliasFromFingerprintGenerator
       9: dup
      10: invokespecial #3                  // Method won/cryptography/ssl/AliasFromFingerprintGenerator."<init>":()V
      13: putfield      #4                  // Field aliasGenerator:Lwon/cryptography/ssl/AliasGenerator;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field queueNamePrefixToCheck:Ljava/lang/String;
      21: return

  public org.apache.activemq.broker.region.Subscription addConsumer(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo) throws java.lang.Exception;
    Code:
       0: getstatic     #6                  // Field $assertionsDisabled:Z
       3: ifne          20
       6: aload_2
       7: ifnonnull     20
      10: new           #7                  // class java/lang/AssertionError
      13: dup
      14: ldc           #8                  // String ConsumerInfo must not be null
      16: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      19: athrow
      20: getstatic     #6                  // Field $assertionsDisabled:Z
      23: ifne          40
      26: aload_1
      27: ifnonnull     40
      30: new           #7                  // class java/lang/AssertionError
      33: dup
      34: ldc           #10                 // String ConnectionContext must not be null
      36: invokespecial #9                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      39: athrow
      40: aload_0
      41: aload_2
      42: invokespecial #11                 // Method shouldCheck:(Lorg/apache/activemq/command/ConsumerInfo;)Z
      45: ifeq          150
      48: iconst_0
      49: istore_3
      50: aload_0
      51: aload_1
      52: aload_2
      53: invokespecial #12                 // Method isOwnerAllowedToConsume:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Z
      56: istore_3
      57: goto          104
      60: astore        4
      62: new           #14                 // class java/lang/SecurityException
      65: dup
      66: new           #15                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      73: ldc           #17                 // String could not perform access control check for consumer
      75: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: aload_2
      79: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
      82: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      85: ldc           #21                 // String  and destination
      87: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_2
      91: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      94: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokespecial #24                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
     103: athrow
     104: iload_3
     105: ifne          150
     108: new           #14                 // class java/lang/SecurityException
     111: dup
     112: new           #15                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #25                 // String consumer
     121: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_2
     125: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     128: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #26                 // String  not allowed to consume from destination
     133: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_2
     137: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     140: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     143: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokespecial #24                 // Method java/lang/SecurityException."<init>":(Ljava/lang/String;)V
     149: athrow
     150: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
     153: ldc           #28                 // String consumer added. destination: {}, consumerId: {}
     155: aload_2
     156: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     159: aload_2
     160: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
     163: invokeinterface #29,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     168: aload_0
     169: aload_1
     170: aload_2
     171: invokespecial #30                 // Method org/apache/activemq/broker/BrokerFilter.addConsumer:(Lorg/apache/activemq/broker/ConnectionContext;Lorg/apache/activemq/command/ConsumerInfo;)Lorg/apache/activemq/broker/region/Subscription;
     174: areturn
    Exception table:
       from    to  target type
          50    57    60   Class java/lang/Exception

  private boolean isOwnerAllowedToConsume(org.apache.activemq.broker.ConnectionContext, org.apache.activemq.command.ConsumerInfo);
    Code:
       0: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
       3: ldc           #31                 // String checking if consumer {} is allowed to consume {}
       5: aload_2
       6: invokevirtual #19                 // Method org/apache/activemq/command/ConsumerInfo.getConsumerId:()Lorg/apache/activemq/command/ConsumerId;
       9: aload_2
      10: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
      13: invokeinterface #29,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      18: aload_1
      19: invokevirtual #32                 // Method org/apache/activemq/broker/ConnectionContext.getConnectionState:()Lorg/apache/activemq/state/ConnectionState;
      22: invokevirtual #33                 // Method org/apache/activemq/state/ConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      25: invokevirtual #34                 // Method org/apache/activemq/command/ConnectionInfo.getTransportContext:()Ljava/lang/Object;
      28: instanceof    #35                 // class "[Ljava/security/cert/X509Certificate;"
      31: ifeq          162
      34: aload_1
      35: invokevirtual #32                 // Method org/apache/activemq/broker/ConnectionContext.getConnectionState:()Lorg/apache/activemq/state/ConnectionState;
      38: invokevirtual #33                 // Method org/apache/activemq/state/ConnectionState.getInfo:()Lorg/apache/activemq/command/ConnectionInfo;
      41: invokevirtual #34                 // Method org/apache/activemq/command/ConnectionInfo.getTransportContext:()Ljava/lang/Object;
      44: checkcast     #35                 // class "[Ljava/security/cert/X509Certificate;"
      47: checkcast     #35                 // class "[Ljava/security/cert/X509Certificate;"
      50: iconst_0
      51: aaload
      52: astore_3
      53: aconst_null
      54: astore        4
      56: aload_0
      57: getfield      #4                  // Field aliasGenerator:Lwon/cryptography/ssl/AliasGenerator;
      60: aload_3
      61: invokeinterface #36,  2           // InterfaceMethod won/cryptography/ssl/AliasGenerator.generateAlias:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      66: astore        4
      68: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
      71: ldc           #37                 // String digest value of certificate: {}
      73: aload         4
      75: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      80: goto          97
      83: astore        5
      85: new           #39                 // class java/lang/IllegalArgumentException
      88: dup
      89: ldc           #40                 // String Could not calculate sha-1 of owner certificate
      91: aload         5
      93: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      96: pop
      97: aload_2
      98: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
     101: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
     104: aload_0
     105: getfield      #5                  // Field queueNamePrefixToCheck:Ljava/lang/String;
     108: invokevirtual #43                 // Method java/lang/String.length:()I
     111: invokevirtual #44                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     114: astore        5
     116: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
     119: ldc           #45                 // String owner id suffix of queue name: {}
     121: aload         5
     123: invokeinterface #38,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     128: aload         4
     130: aload         5
     132: invokevirtual #46                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     135: ifeq          150
     138: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
     141: ldc           #47                 // String allowing to consume
     143: invokeinterface #48,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     148: iconst_1
     149: ireturn
     150: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
     153: ldc           #49                 // String denying message consumption to owner as public key hash does not equal owner id
     155: invokeinterface #50,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     160: iconst_0
     161: ireturn
     162: getstatic     #27                 // Field logger:Lorg/slf4j/Logger;
     165: ldc           #51                 // String denying message consumption to owner transportContext is not an X.509 certificate
     167: invokeinterface #50,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
     172: iconst_0
     173: ireturn
    Exception table:
       from    to  target type
          56    80    83   Class java/lang/Exception

  private boolean shouldCheck(org.apache.activemq.command.ConsumerInfo);
    Code:
       0: aload_1
       1: invokevirtual #22                 // Method org/apache/activemq/command/ConsumerInfo.getDestination:()Lorg/apache/activemq/command/ActiveMQDestination;
       4: invokevirtual #42                 // Method org/apache/activemq/command/ActiveMQDestination.getPhysicalName:()Ljava/lang/String;
       7: aload_0
       8: getfield      #5                  // Field queueNamePrefixToCheck:Ljava/lang/String;
      11: invokevirtual #52                 // Method java/lang/String.indexOf:(Ljava/lang/String;)I
      14: ifne          19
      17: iconst_1
      18: ireturn
      19: iconst_0
      20: ireturn

  static {};
    Code:
       0: ldc           #53                 // class won/cryptography/activemq/CertificateCheckingBrokerFilter
       2: invokevirtual #54                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #6                  // Field $assertionsDisabled:Z
      16: invokestatic  #55                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
      19: invokevirtual #56                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
      22: invokestatic  #57                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      25: putstatic     #27                 // Field logger:Lorg/slf4j/Logger;
      28: return
}
