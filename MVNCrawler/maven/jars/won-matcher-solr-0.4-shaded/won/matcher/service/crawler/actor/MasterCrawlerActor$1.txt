Compiled from "MasterCrawlerActor.java"
class won.matcher.service.crawler.actor.MasterCrawlerActor$1 implements akka.japi.Function<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> {
  final won.matcher.service.crawler.actor.MasterCrawlerActor this$0;

  won.matcher.service.crawler.actor.MasterCrawlerActor$1(won.matcher.service.crawler.actor.MasterCrawlerActor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lwon/matcher/service/crawler/actor/MasterCrawlerActor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public akka.actor.SupervisorStrategy$Directive apply(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lwon/matcher/service/crawler/actor/MasterCrawlerActor;
       4: invokestatic  #3                  // Method won/matcher/service/crawler/actor/MasterCrawlerActor.access$000:(Lwon/matcher/service/crawler/actor/MasterCrawlerActor;)Lakka/event/LoggingAdapter;
       7: ldc           #4                  // String Actor encountered error: {}
       9: aload_1
      10: invokeinterface #5,  3            // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;)V
      15: aload_1
      16: instanceof    #6                  // class won/matcher/service/crawler/exception/CrawlWrapperException
      19: ifeq          78
      22: aload_1
      23: checkcast     #6                  // class won/matcher/service/crawler/exception/CrawlWrapperException
      26: astore_2
      27: aload_0
      28: getfield      #1                  // Field this$0:Lwon/matcher/service/crawler/actor/MasterCrawlerActor;
      31: invokestatic  #3                  // Method won/matcher/service/crawler/actor/MasterCrawlerActor.access$000:(Lwon/matcher/service/crawler/actor/MasterCrawlerActor;)Lakka/event/LoggingAdapter;
      34: ldc           #7                  // String Handled breaking message: {}
      36: aload_2
      37: invokevirtual #8                  // Method won/matcher/service/crawler/exception/CrawlWrapperException.getBreakingMessage:()Lwon/matcher/service/crawler/msg/CrawlUriMessage;
      40: invokeinterface #5,  3            // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #1                  // Field this$0:Lwon/matcher/service/crawler/actor/MasterCrawlerActor;
      49: invokestatic  #3                  // Method won/matcher/service/crawler/actor/MasterCrawlerActor.access$000:(Lwon/matcher/service/crawler/actor/MasterCrawlerActor;)Lakka/event/LoggingAdapter;
      52: ldc           #9                  // String Exception was: {}
      54: aload_2
      55: invokevirtual #10                 // Method won/matcher/service/crawler/exception/CrawlWrapperException.getException:()Ljava/lang/Exception;
      58: invokeinterface #5,  3            // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;)V
      63: aload_0
      64: getfield      #1                  // Field this$0:Lwon/matcher/service/crawler/actor/MasterCrawlerActor;
      67: aload_2
      68: invokevirtual #8                  // Method won/matcher/service/crawler/exception/CrawlWrapperException.getBreakingMessage:()Lwon/matcher/service/crawler/msg/CrawlUriMessage;
      71: invokestatic  #11                 // Method won/matcher/service/crawler/actor/MasterCrawlerActor.access$100:(Lwon/matcher/service/crawler/actor/MasterCrawlerActor;Lwon/matcher/service/crawler/msg/CrawlUriMessage;)V
      74: invokestatic  #12                 // Method akka/actor/SupervisorStrategy.resume:()Lakka/actor/SupervisorStrategy$Resume$;
      77: areturn
      78: invokestatic  #13                 // Method akka/actor/SupervisorStrategy.escalate:()Lakka/actor/SupervisorStrategy$Escalate$;
      81: areturn

  public java.lang.Object apply(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/Throwable
       5: invokevirtual #15                 // Method apply:(Ljava/lang/Throwable;)Lakka/actor/SupervisorStrategy$Directive;
       8: areturn
}
