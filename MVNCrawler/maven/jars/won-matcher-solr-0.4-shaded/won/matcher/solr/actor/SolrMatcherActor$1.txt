Compiled from "SolrMatcherActor.java"
class won.matcher.solr.actor.SolrMatcherActor$1 implements akka.japi.Function<java.lang.Throwable, akka.actor.SupervisorStrategy$Directive> {
  final won.matcher.solr.actor.SolrMatcherActor this$0;

  won.matcher.solr.actor.SolrMatcherActor$1(won.matcher.solr.actor.SolrMatcherActor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lwon/matcher/solr/actor/SolrMatcherActor;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public akka.actor.SupervisorStrategy$Directive apply(java.lang.Throwable) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lwon/matcher/solr/actor/SolrMatcherActor;
       4: invokestatic  #3                  // Method won/matcher/solr/actor/SolrMatcherActor.access$000:(Lwon/matcher/solr/actor/SolrMatcherActor;)Lakka/event/LoggingAdapter;
       7: ldc           #4                  // String Actor encountered error: {}
       9: aload_1
      10: invokeinterface #5,  3            // InterfaceMethod akka/event/LoggingAdapter.warning:(Ljava/lang/String;Ljava/lang/Object;)V
      15: invokestatic  #6                  // Method akka/actor/SupervisorStrategy.escalate:()Lakka/actor/SupervisorStrategy$Escalate$;
      18: areturn

  public java.lang.Object apply(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Throwable
       5: invokevirtual #8                  // Method apply:(Ljava/lang/Throwable;)Lakka/actor/SupervisorStrategy$Directive;
       8: areturn
}
