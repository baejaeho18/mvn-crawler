Compiled from "ProjectingIterator.java"
public abstract class won.protocol.util.ProjectingIterator<F, T> implements java.util.Iterator<T> {
  protected java.util.Iterator<F> baseIterator;

  protected won.protocol.util.ProjectingIterator(java.util.Iterator<F>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field baseIterator:Ljava/util/Iterator;
       9: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseIterator:Ljava/util/Iterator;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
       9: ireturn

  public void remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field baseIterator:Ljava/util/Iterator;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/Iterator.remove:()V
       9: return
}
