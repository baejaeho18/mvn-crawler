Compiled from "UriConsistencyCheckingWonMessageProcessor.java"
public class won.protocol.message.processor.impl.UriConsistencyCheckingWonMessageProcessor implements won.protocol.message.processor.WonMessageProcessor {
  protected won.protocol.service.WonNodeInformationService wonNodeInformationService;

  public won.protocol.message.processor.impl.UriConsistencyCheckingWonMessageProcessor();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public won.protocol.message.WonMessage process(won.protocol.message.WonMessage) throws won.protocol.message.processor.exception.UriAlreadyInUseException;
    Code:
       0: aload_1
       1: invokevirtual #2                  // Method won/protocol/message/WonMessage.getSenderNodeURI:()Ljava/net/URI;
       4: astore_2
       5: aload_1
       6: invokevirtual #3                  // Method won/protocol/message/WonMessage.getRecipientNodeURI:()Ljava/net/URI;
       9: astore_3
      10: aconst_null
      11: astore        4
      13: aconst_null
      14: astore        5
      16: aload_2
      17: ifnull        42
      20: aload_1
      21: invokevirtual #4                  // Method won/protocol/message/WonMessage.getMessageType:()Lwon/protocol/message/WonMessageType;
      24: invokevirtual #5                  // Method won/protocol/message/WonMessageType.isHintMessage:()Z
      27: ifne          42
      30: aload_0
      31: getfield      #6                  // Field wonNodeInformationService:Lwon/protocol/service/WonNodeInformationService;
      34: aload_2
      35: invokeinterface #7,  2            // InterfaceMethod won/protocol/service/WonNodeInformationService.getWonNodeInformation:(Ljava/net/URI;)Lwon/protocol/service/WonNodeInfo;
      40: astore        4
      42: aload_3
      43: ifnull        58
      46: aload_0
      47: getfield      #6                  // Field wonNodeInformationService:Lwon/protocol/service/WonNodeInformationService;
      50: aload_3
      51: invokeinterface #7,  2            // InterfaceMethod won/protocol/service/WonNodeInformationService.getWonNodeInformation:(Ljava/net/URI;)Lwon/protocol/service/WonNodeInfo;
      56: astore        5
      58: aconst_null
      59: astore        6
      61: aconst_null
      62: astore        7
      64: aload_1
      65: invokevirtual #8                  // Method won/protocol/message/WonMessage.getMessageURI:()Ljava/net/URI;
      68: astore        8
      70: aload         8
      72: invokevirtual #9                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      75: aload_2
      76: invokevirtual #9                  // Method java/net/URI.getScheme:()Ljava/lang/String;
      79: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      82: ifeq          111
      85: aload         8
      87: invokevirtual #11                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      90: aload_2
      91: invokevirtual #11                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
      94: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      97: ifeq          111
     100: aload         4
     102: astore        6
     104: aload         5
     106: astore        7
     108: goto          149
     111: aload         8
     113: invokevirtual #9                  // Method java/net/URI.getScheme:()Ljava/lang/String;
     116: aload_3
     117: invokevirtual #9                  // Method java/net/URI.getScheme:()Ljava/lang/String;
     120: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     123: ifeq          149
     126: aload         8
     128: invokevirtual #11                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     131: aload_3
     132: invokevirtual #11                 // Method java/net/URI.getAuthority:()Ljava/lang/String;
     135: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     138: ifeq          149
     141: aload         5
     143: astore        6
     145: aload         4
     147: astore        7
     149: aload         6
     151: invokevirtual #12                 // Method won/protocol/service/WonNodeInfo.getWonNodeURI:()Ljava/lang/String;
     154: invokestatic  #13                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
     157: astore        9
     159: aload_0
     160: aload_1
     161: aload         9
     163: invokespecial #14                 // Method checkHasNode:(Lwon/protocol/message/WonMessage;Ljava/net/URI;)V
     166: aload_0
     167: aload_1
     168: aload         6
     170: invokespecial #15                 // Method checkLocalEventURI:(Lwon/protocol/message/WonMessage;Lwon/protocol/service/WonNodeInfo;)V
     173: aload_0
     174: aload_1
     175: aload         7
     177: invokespecial #16                 // Method checkRemoteEventURI:(Lwon/protocol/message/WonMessage;Lwon/protocol/service/WonNodeInfo;)V
     180: aload_0
     181: aload_1
     182: aload         6
     184: invokespecial #17                 // Method checkCreateMsgAtomURI:(Lwon/protocol/message/WonMessage;Lwon/protocol/service/WonNodeInfo;)V
     187: aload_0
     188: aload         4
     190: aload_1
     191: invokespecial #18                 // Method checkSenders:(Lwon/protocol/service/WonNodeInfo;Lwon/protocol/message/WonMessage;)V
     194: aload_0
     195: aload         5
     197: aload_1
     198: invokespecial #19                 // Method checkReceivers:(Lwon/protocol/service/WonNodeInfo;Lwon/protocol/message/WonMessage;)V
     201: aload_0
     202: aload_1
     203: aload         9
     205: invokespecial #20                 // Method checkDirection:(Lwon/protocol/message/WonMessage;Ljava/net/URI;)V
     208: aload_1
     209: areturn

  private void checkHasNode(won.protocol.message.WonMessage, java.net.URI);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2                  // Method won/protocol/message/WonMessage.getSenderNodeURI:()Ljava/net/URI;
       5: invokevirtual #21                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
       8: ifne          49
      11: aload_2
      12: aload_1
      13: invokevirtual #3                  // Method won/protocol/message/WonMessage.getRecipientNodeURI:()Ljava/net/URI;
      16: invokevirtual #21                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      19: ifne          49
      22: new           #22                 // class won/protocol/message/processor/exception/UriNodePathException
      25: dup
      26: new           #23                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #25                 // String neither sender nor receiver is
      35: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #29                 // Method won/protocol/message/processor/exception/UriNodePathException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  private void checkReceivers(won.protocol.service.WonNodeInfo, won.protocol.message.WonMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #30                 // Method won/protocol/message/WonMessage.getRecipientAtomURI:()Ljava/net/URI;
       6: aload_2
       7: invokevirtual #31                 // Method won/protocol/message/WonMessage.getRecipientURI:()Ljava/net/URI;
      10: aconst_null
      11: invokespecial #32                 // Method checkNodeConformance:(Lwon/protocol/service/WonNodeInfo;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;)V
      14: return

  private void checkSenders(won.protocol.service.WonNodeInfo, won.protocol.message.WonMessage);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #33                 // Method won/protocol/message/WonMessage.getSenderAtomURI:()Ljava/net/URI;
       6: aload_2
       7: invokevirtual #34                 // Method won/protocol/message/WonMessage.getSenderURI:()Ljava/net/URI;
      10: aconst_null
      11: invokespecial #32                 // Method checkNodeConformance:(Lwon/protocol/service/WonNodeInfo;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;)V
      14: return

  private void checkDirection(won.protocol.message.WonMessage, java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #35                 // Method won/protocol/message/WonMessage.getEnvelopeType:()Lwon/protocol/message/WonMessageDirection;
       4: astore_3
       5: aload_1
       6: invokevirtual #3                  // Method won/protocol/message/WonMessage.getRecipientNodeURI:()Ljava/net/URI;
       9: astore        4
      11: aload_1
      12: invokevirtual #2                  // Method won/protocol/message/WonMessage.getSenderNodeURI:()Ljava/net/URI;
      15: astore        5
      17: getstatic     #36                 // Field won/protocol/message/processor/impl/UriConsistencyCheckingWonMessageProcessor$1.$SwitchMap$won$protocol$message$WonMessageDirection:[I
      20: aload_3
      21: invokevirtual #37                 // Method won/protocol/message/WonMessageDirection.ordinal:()I
      24: iaload
      25: tableswitch   { // 1 to 3
                     1: 52
                     2: 93
                     3: 134
               default: 175
          }
      52: aload_2
      53: aload         4
      55: invokevirtual #21                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      58: ifne          175
      61: new           #22                 // class won/protocol/message/processor/exception/UriNodePathException
      64: dup
      65: new           #23                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      72: aload         4
      74: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      77: ldc           #38                 // String  is expected to be
      79: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #29                 // Method won/protocol/message/processor/exception/UriNodePathException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_2
      94: aload         5
      96: invokevirtual #21                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
      99: ifne          175
     102: new           #22                 // class won/protocol/message/processor/exception/UriNodePathException
     105: dup
     106: new           #23                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     113: aload         5
     115: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     118: ldc           #38                 // String  is expected to be
     120: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: aload_2
     124: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     127: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     130: invokespecial #29                 // Method won/protocol/message/processor/exception/UriNodePathException."<init>":(Ljava/lang/String;)V
     133: athrow
     134: aload_2
     135: aload         5
     137: invokevirtual #21                 // Method java/net/URI.equals:(Ljava/lang/Object;)Z
     140: ifne          175
     143: new           #22                 // class won/protocol/message/processor/exception/UriNodePathException
     146: dup
     147: new           #23                 // class java/lang/StringBuilder
     150: dup
     151: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
     154: aload         5
     156: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     159: ldc           #38                 // String  is expected to be
     161: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     164: aload_2
     165: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     168: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     171: invokespecial #29                 // Method won/protocol/message/processor/exception/UriNodePathException."<init>":(Ljava/lang/String;)V
     174: athrow
     175: return

  private void checkLocalEventURI(won.protocol.message.WonMessage, won.protocol.service.WonNodeInfo);
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: aconst_null
       4: aload_1
       5: invokevirtual #8                  // Method won/protocol/message/WonMessage.getMessageURI:()Ljava/net/URI;
       8: invokespecial #32                 // Method checkNodeConformance:(Lwon/protocol/service/WonNodeInfo;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;)V
      11: return

  private void checkRemoteEventURI(won.protocol.message.WonMessage, won.protocol.service.WonNodeInfo);
    Code:
       0: aload_0
       1: aload_2
       2: aconst_null
       3: aconst_null
       4: aload_1
       5: invokevirtual #39                 // Method won/protocol/message/WonMessage.getCorrespondingRemoteMessageURI:()Ljava/net/URI;
       8: invokespecial #32                 // Method checkNodeConformance:(Lwon/protocol/service/WonNodeInfo;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;)V
      11: return

  private void checkCreateMsgAtomURI(won.protocol.message.WonMessage, won.protocol.service.WonNodeInfo);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method won/protocol/message/WonMessage.getMessageType:()Lwon/protocol/message/WonMessageType;
       4: getstatic     #40                 // Field won/protocol/message/WonMessageType.CREATE_ATOM:Lwon/protocol/message/WonMessageType;
       7: if_acmpne     26
      10: aload_1
      11: invokevirtual #41                 // Method won/protocol/message/WonMessage.getCompleteDataset:()Lorg/apache/jena/query/Dataset;
      14: invokestatic  #42                 // Method won/protocol/util/WonRdfUtils$AtomUtils.getAtomURI:(Lorg/apache/jena/query/Dataset;)Ljava/net/URI;
      17: astore_3
      18: aload_0
      19: aload_2
      20: aload_3
      21: aconst_null
      22: aconst_null
      23: invokespecial #32                 // Method checkNodeConformance:(Lwon/protocol/service/WonNodeInfo;Ljava/net/URI;Ljava/net/URI;Ljava/net/URI;)V
      26: return

  private void checkNodeConformance(won.protocol.service.WonNodeInfo, java.net.URI, java.net.URI, java.net.URI);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_2
       6: ifnonnull     19
       9: aload_3
      10: ifnonnull     19
      13: aload         4
      15: ifnonnull     19
      18: return
      19: aload_1
      20: invokevirtual #43                 // Method won/protocol/service/WonNodeInfo.getAtomURIPrefix:()Ljava/lang/String;
      23: astore        5
      25: aload_1
      26: invokevirtual #44                 // Method won/protocol/service/WonNodeInfo.getConnectionURIPrefix:()Ljava/lang/String;
      29: astore        6
      31: aload_1
      32: invokevirtual #45                 // Method won/protocol/service/WonNodeInfo.getEventURIPrefix:()Ljava/lang/String;
      35: astore        7
      37: aload_2
      38: ifnull        48
      41: aload_0
      42: aload_2
      43: aload         5
      45: invokespecial #46                 // Method checkPrefix:(Ljava/net/URI;Ljava/lang/String;)V
      48: aload_3
      49: ifnull        59
      52: aload_0
      53: aload_3
      54: aload         6
      56: invokespecial #46                 // Method checkPrefix:(Ljava/net/URI;Ljava/lang/String;)V
      59: aload         4
      61: ifnull        72
      64: aload_0
      65: aload         4
      67: aload         7
      69: invokespecial #46                 // Method checkPrefix:(Ljava/net/URI;Ljava/lang/String;)V
      72: return

  private java.lang.String getPrefix(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/net/URI.toString:()Ljava/lang/String;
       4: iconst_0
       5: aload_1
       6: invokevirtual #47                 // Method java/net/URI.toString:()Ljava/lang/String;
       9: ldc           #48                 // String /
      11: invokevirtual #49                 // Method java/lang/String.lastIndexOf:(Ljava/lang/String;)I
      14: invokevirtual #50                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      17: areturn

  private void checkPrefix(java.net.URI, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #51                 // Method getPrefix:(Ljava/net/URI;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: aload_2
       8: invokevirtual #10                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      11: ifne          55
      14: new           #22                 // class won/protocol/message/processor/exception/UriNodePathException
      17: dup
      18: new           #23                 // class java/lang/StringBuilder
      21: dup
      22: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      25: ldc           #52                 // String URI \'
      27: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_1
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      34: ldc           #53                 // String \' does not start with the expected prefix \'
      36: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_2
      40: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #54                 // String \'
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #29                 // Method won/protocol/message/processor/exception/UriNodePathException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: return
}
