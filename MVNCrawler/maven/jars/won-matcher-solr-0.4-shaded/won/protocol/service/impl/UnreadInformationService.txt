Compiled from "UnreadInformationService.java"
public class won.protocol.service.impl.UnreadInformationService {
  private won.protocol.repository.MessageEventRepository messageEventRepository;

  public won.protocol.service.impl.UnreadInformationService();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public won.protocol.model.unread.UnreadMessageInfoForAtom getUnreadInformation(java.net.URI, java.util.Collection<java.net.URI>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field messageEventRepository:Lwon/protocol/repository/MessageEventRepository;
       4: aload_1
       5: aload_2
       6: invokeinterface #3,  3            // InterfaceMethod won/protocol/repository/MessageEventRepository.getUnreadInfoForAtom:(Ljava/net/URI;Ljava/util/Collection;)Ljava/util/List;
      11: astore_3
      12: new           #4                  // class won/protocol/model/unread/UnreadMessageInfoForAtom
      15: dup
      16: aload_1
      17: invokespecial #5                  // Method won/protocol/model/unread/UnreadMessageInfoForAtom."<init>":(Ljava/net/URI;)V
      20: astore        4
      22: aload_3
      23: aload         4
      25: invokedynamic #6,  0              // InvokeDynamic #0:accept:(Lwon/protocol/model/unread/UnreadMessageInfoForAtom;)Ljava/util/function/Consumer;
      30: invokeinterface #7,  2            // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      35: aload         4
      37: areturn

  private static void lambda$getUnreadInformation$0(won.protocol.model.unread.UnreadMessageInfoForAtom, won.protocol.model.unread.UnreadMessageInfoForConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method won/protocol/model/unread/UnreadMessageInfoForAtom.addUnreadMessageInfoForConnection:(Lwon/protocol/model/unread/UnreadMessageInfoForConnection;)V
       5: return
}
