Compiled from "ConnectionEventType.java"
public final class won.protocol.model.ConnectionEventType extends java.lang.Enum<won.protocol.model.ConnectionEventType> {
  public static final won.protocol.model.ConnectionEventType OWNER_CLOSE;

  public static final won.protocol.model.ConnectionEventType PARTNER_CLOSE;

  public static final won.protocol.model.ConnectionEventType OWNER_OPEN;

  public static final won.protocol.model.ConnectionEventType PARTNER_OPEN;

  public static final won.protocol.model.ConnectionEventType OWNER_MESSAGE;

  public static final won.protocol.model.ConnectionEventType PARTNER_MESSAGE;

  public static final won.protocol.model.ConnectionEventType MATCHER_HINT;

  private java.lang.String name;

  private won.protocol.model.ConnectionState[] permittingStates;

  private static final won.protocol.model.ConnectionEventType[] $VALUES;

  public static won.protocol.model.ConnectionEventType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lwon/protocol/model/ConnectionEventType;
       3: invokevirtual #2                  // Method "[Lwon/protocol/model/ConnectionEventType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lwon/protocol/model/ConnectionEventType;"
       9: areturn

  public static won.protocol.model.ConnectionEventType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class won/protocol/model/ConnectionEventType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class won/protocol/model/ConnectionEventType
       9: areturn

  private won.protocol.model.ConnectionEventType(java.lang.String, won.protocol.model.ConnectionState...);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload         4
       9: putfield      #7                  // Field permittingStates:[Lwon/protocol/model/ConnectionState;
      12: aload_0
      13: aload_3
      14: putfield      #8                  // Field name:Ljava/lang/String;
      17: return

  public boolean isMessageAllowed(won.protocol.model.ConnectionState);
    Code:
       0: aload_0
       1: getfield      #7                  // Field permittingStates:[Lwon/protocol/model/ConnectionState;
       4: astore_2
       5: aload_2
       6: arraylength
       7: istore_3
       8: iconst_0
       9: istore        4
      11: iload         4
      13: iload_3
      14: if_icmpge     40
      17: aload_2
      18: iload         4
      20: aaload
      21: astore        5
      23: aload         5
      25: aload_1
      26: invokevirtual #9                  // Method won/protocol/model/ConnectionState.equals:(Ljava/lang/Object;)Z
      29: ifeq          34
      32: iconst_1
      33: ireturn
      34: iinc          4, 1
      37: goto          11
      40: iconst_0
      41: ireturn

  public java.net.URI getURI();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #13                 // String https://w3id.org/won/core#
       9: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #8                  // Field name:Ljava/lang/String;
      16: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: invokestatic  #16                 // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
      25: areturn

  static {};
    Code:
       0: new           #4                  // class won/protocol/model/ConnectionEventType
       3: dup
       4: ldc           #17                 // String OWNER_CLOSE
       6: iconst_0
       7: ldc           #18                 // String OwnerClose
       9: iconst_5
      10: anewarray     #19                 // class won/protocol/model/ConnectionState
      13: dup
      14: iconst_0
      15: getstatic     #20                 // Field won/protocol/model/ConnectionState.SUGGESTED:Lwon/protocol/model/ConnectionState;
      18: aastore
      19: dup
      20: iconst_1
      21: getstatic     #21                 // Field won/protocol/model/ConnectionState.REQUEST_SENT:Lwon/protocol/model/ConnectionState;
      24: aastore
      25: dup
      26: iconst_2
      27: getstatic     #22                 // Field won/protocol/model/ConnectionState.REQUEST_RECEIVED:Lwon/protocol/model/ConnectionState;
      30: aastore
      31: dup
      32: iconst_3
      33: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
      36: aastore
      37: dup
      38: iconst_4
      39: getstatic     #24                 // Field won/protocol/model/ConnectionState.CLOSED:Lwon/protocol/model/ConnectionState;
      42: aastore
      43: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
      46: putstatic     #26                 // Field OWNER_CLOSE:Lwon/protocol/model/ConnectionEventType;
      49: new           #4                  // class won/protocol/model/ConnectionEventType
      52: dup
      53: ldc           #27                 // String PARTNER_CLOSE
      55: iconst_1
      56: ldc           #28                 // String PartnerClose
      58: iconst_5
      59: anewarray     #19                 // class won/protocol/model/ConnectionState
      62: dup
      63: iconst_0
      64: getstatic     #20                 // Field won/protocol/model/ConnectionState.SUGGESTED:Lwon/protocol/model/ConnectionState;
      67: aastore
      68: dup
      69: iconst_1
      70: getstatic     #21                 // Field won/protocol/model/ConnectionState.REQUEST_SENT:Lwon/protocol/model/ConnectionState;
      73: aastore
      74: dup
      75: iconst_2
      76: getstatic     #22                 // Field won/protocol/model/ConnectionState.REQUEST_RECEIVED:Lwon/protocol/model/ConnectionState;
      79: aastore
      80: dup
      81: iconst_3
      82: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
      85: aastore
      86: dup
      87: iconst_4
      88: getstatic     #24                 // Field won/protocol/model/ConnectionState.CLOSED:Lwon/protocol/model/ConnectionState;
      91: aastore
      92: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
      95: putstatic     #29                 // Field PARTNER_CLOSE:Lwon/protocol/model/ConnectionEventType;
      98: new           #4                  // class won/protocol/model/ConnectionEventType
     101: dup
     102: ldc           #30                 // String OWNER_OPEN
     104: iconst_2
     105: ldc           #31                 // String OwnerOpen
     107: iconst_5
     108: anewarray     #19                 // class won/protocol/model/ConnectionState
     111: dup
     112: iconst_0
     113: getstatic     #20                 // Field won/protocol/model/ConnectionState.SUGGESTED:Lwon/protocol/model/ConnectionState;
     116: aastore
     117: dup
     118: iconst_1
     119: getstatic     #21                 // Field won/protocol/model/ConnectionState.REQUEST_SENT:Lwon/protocol/model/ConnectionState;
     122: aastore
     123: dup
     124: iconst_2
     125: getstatic     #22                 // Field won/protocol/model/ConnectionState.REQUEST_RECEIVED:Lwon/protocol/model/ConnectionState;
     128: aastore
     129: dup
     130: iconst_3
     131: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
     134: aastore
     135: dup
     136: iconst_4
     137: getstatic     #24                 // Field won/protocol/model/ConnectionState.CLOSED:Lwon/protocol/model/ConnectionState;
     140: aastore
     141: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
     144: putstatic     #32                 // Field OWNER_OPEN:Lwon/protocol/model/ConnectionEventType;
     147: new           #4                  // class won/protocol/model/ConnectionEventType
     150: dup
     151: ldc           #33                 // String PARTNER_OPEN
     153: iconst_3
     154: ldc           #34                 // String PartnerOpen
     156: iconst_5
     157: anewarray     #19                 // class won/protocol/model/ConnectionState
     160: dup
     161: iconst_0
     162: getstatic     #20                 // Field won/protocol/model/ConnectionState.SUGGESTED:Lwon/protocol/model/ConnectionState;
     165: aastore
     166: dup
     167: iconst_1
     168: getstatic     #21                 // Field won/protocol/model/ConnectionState.REQUEST_SENT:Lwon/protocol/model/ConnectionState;
     171: aastore
     172: dup
     173: iconst_2
     174: getstatic     #22                 // Field won/protocol/model/ConnectionState.REQUEST_RECEIVED:Lwon/protocol/model/ConnectionState;
     177: aastore
     178: dup
     179: iconst_3
     180: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
     183: aastore
     184: dup
     185: iconst_4
     186: getstatic     #24                 // Field won/protocol/model/ConnectionState.CLOSED:Lwon/protocol/model/ConnectionState;
     189: aastore
     190: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
     193: putstatic     #35                 // Field PARTNER_OPEN:Lwon/protocol/model/ConnectionEventType;
     196: new           #4                  // class won/protocol/model/ConnectionEventType
     199: dup
     200: ldc           #36                 // String OWNER_MESSAGE
     202: iconst_4
     203: ldc           #37                 // String OwnerMessage
     205: iconst_1
     206: anewarray     #19                 // class won/protocol/model/ConnectionState
     209: dup
     210: iconst_0
     211: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
     214: aastore
     215: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
     218: putstatic     #38                 // Field OWNER_MESSAGE:Lwon/protocol/model/ConnectionEventType;
     221: new           #4                  // class won/protocol/model/ConnectionEventType
     224: dup
     225: ldc           #39                 // String PARTNER_MESSAGE
     227: iconst_5
     228: ldc           #40                 // String PartnerMessage
     230: iconst_1
     231: anewarray     #19                 // class won/protocol/model/ConnectionState
     234: dup
     235: iconst_0
     236: getstatic     #23                 // Field won/protocol/model/ConnectionState.CONNECTED:Lwon/protocol/model/ConnectionState;
     239: aastore
     240: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
     243: putstatic     #41                 // Field PARTNER_MESSAGE:Lwon/protocol/model/ConnectionEventType;
     246: new           #4                  // class won/protocol/model/ConnectionEventType
     249: dup
     250: ldc           #42                 // String MATCHER_HINT
     252: bipush        6
     254: ldc           #43                 // String Hint
     256: iconst_0
     257: anewarray     #19                 // class won/protocol/model/ConnectionState
     260: invokespecial #25                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;[Lwon/protocol/model/ConnectionState;)V
     263: putstatic     #44                 // Field MATCHER_HINT:Lwon/protocol/model/ConnectionEventType;
     266: bipush        7
     268: anewarray     #4                  // class won/protocol/model/ConnectionEventType
     271: dup
     272: iconst_0
     273: getstatic     #26                 // Field OWNER_CLOSE:Lwon/protocol/model/ConnectionEventType;
     276: aastore
     277: dup
     278: iconst_1
     279: getstatic     #29                 // Field PARTNER_CLOSE:Lwon/protocol/model/ConnectionEventType;
     282: aastore
     283: dup
     284: iconst_2
     285: getstatic     #32                 // Field OWNER_OPEN:Lwon/protocol/model/ConnectionEventType;
     288: aastore
     289: dup
     290: iconst_3
     291: getstatic     #35                 // Field PARTNER_OPEN:Lwon/protocol/model/ConnectionEventType;
     294: aastore
     295: dup
     296: iconst_4
     297: getstatic     #38                 // Field OWNER_MESSAGE:Lwon/protocol/model/ConnectionEventType;
     300: aastore
     301: dup
     302: iconst_5
     303: getstatic     #41                 // Field PARTNER_MESSAGE:Lwon/protocol/model/ConnectionEventType;
     306: aastore
     307: dup
     308: bipush        6
     310: getstatic     #44                 // Field MATCHER_HINT:Lwon/protocol/model/ConnectionEventType;
     313: aastore
     314: putstatic     #1                  // Field $VALUES:[Lwon/protocol/model/ConnectionEventType;
     317: return
}
