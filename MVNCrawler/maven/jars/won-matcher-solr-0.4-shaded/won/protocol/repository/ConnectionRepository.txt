Compiled from "ConnectionRepository.java"
public interface won.protocol.repository.ConnectionRepository extends won.protocol.repository.WonRepository<won.protocol.model.Connection> {
  public abstract java.util.List<won.protocol.model.Connection> findByConnectionURI(java.net.URI);

  public abstract won.protocol.model.Connection findOneByConnectionURI(java.net.URI);

  public abstract java.util.Optional<won.protocol.model.Connection> findOneByConnectionURIForUpdate(java.net.URI);

  public abstract won.protocol.model.Connection findOneByConnectionURIAndVersionNot(java.net.URI, int);

  public abstract java.util.Optional<won.protocol.model.Connection> findOneByAtomURIAndTargetAtomURIAndSocketURIAndTargetSocketURIForUpdate(java.net.URI, java.net.URI, java.net.URI, java.net.URI);

  public abstract java.util.Optional<won.protocol.model.Connection> findOneByAtomURIAndTargetAtomURIAndSocketURIAndNullTargetSocketForUpdate(java.net.URI, java.net.URI, java.net.URI);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURI(java.net.URI);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndStateAndTypeURI(java.net.URI, won.protocol.model.ConnectionState, java.net.URI);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndState(java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findBySocketURIAndState(java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndTypeURI(java.net.URI, java.net.URI);

  public abstract long countBySocketUriForUpdate(java.net.URI);

  public abstract long countByAtomURIAndState(java.net.URI, won.protocol.model.ConnectionState);

  public abstract long countBySocketURIAndState(java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<java.net.URI> getAllConnectionURIs();

  public abstract java.util.List<won.protocol.model.Connection> getAllConnections();

  public abstract java.util.List<java.net.URI> getAllConnectionURIsForAtomURI(java.net.URI);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndNotStateForUpdate(java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndNotState(java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndSocketURIAndNotStateForUpdate(java.net.URI, java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findByAtomURIAndSocketURIAndNotState(java.net.URI, java.net.URI, won.protocol.model.ConnectionState);

  public abstract java.util.List<won.protocol.model.Connection> findModifiedConnectionsAfter(java.util.Date);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsBeforeByActivityDate(java.util.Date, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsAfterByActivityDate(java.util.Date, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(java.net.URI, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(java.net.URI, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(java.net.URI, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(java.net.URI, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(java.net.URI, won.protocol.message.WonMessageType, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(java.net.URI, won.protocol.message.WonMessageType, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<java.net.URI> getConnectionURIByActivityDate(java.net.URI, won.protocol.message.WonMessageType, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsByActivityDate(java.net.URI, won.protocol.message.WonMessageType, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsBeforeByActivityDate(java.net.URI, java.util.Date, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsBeforeByActivityDate(java.net.URI, java.util.Date, won.protocol.message.WonMessageType, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsAfterByActivityDate(java.net.URI, java.util.Date, java.util.Date, org.springframework.data.domain.Pageable);

  public abstract org.springframework.data.domain.Slice<won.protocol.model.Connection> getConnectionsAfterByActivityDate(java.net.URI, java.util.Date, won.protocol.message.WonMessageType, java.util.Date, org.springframework.data.domain.Pageable);
}
