Compiled from "WonEtagHelper.java"
public class won.protocol.rest.WonEtagHelper {
  private static final org.slf4j.Logger logger;

  private static final char VERSION_MEDIATYPE_DELIMITER;

  private java.lang.String version;

  private org.springframework.http.MediaType mediaType;

  private won.protocol.rest.WonEtagHelper(java.lang.String, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field version:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
      14: aload_0
      15: aload_1
      16: putfield      #2                  // Field version:Ljava/lang/String;
      19: aload_0
      20: aload_2
      21: putfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
      24: return

  public static won.protocol.rest.WonEtagHelper forVersion(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: new           #4                  // class won/protocol/rest/WonEtagHelper
       9: dup
      10: aload_0
      11: aconst_null
      12: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
      15: areturn

  public static won.protocol.rest.WonEtagHelper fromEtagValue(java.lang.String);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #6                  // Method java/lang/String.trim:()Ljava/lang/String;
      10: astore_0
      11: aload_0
      12: ldc           #7                  // String W/
      14: invokevirtual #8                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      17: ifeq          49
      20: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      23: new           #10                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #12                 // String weak etag matching is not supported, cannot process:
      32: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      47: aconst_null
      48: areturn
      49: aload_0
      50: ldc           #16                 // String \"
      52: invokevirtual #8                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      55: ifne          87
      58: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      61: new           #10                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #17                 // String etag must start with \'\"\', cannot process:
      70: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: aload_0
      74: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      85: aconst_null
      86: areturn
      87: aload_0
      88: ldc           #16                 // String \"
      90: invokevirtual #18                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      93: ifne          125
      96: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      99: new           #10                 // class java/lang/StringBuilder
     102: dup
     103: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     106: ldc           #19                 // String etag must end with \'\"\', cannot process:
     108: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: aload_0
     112: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     115: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     118: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     123: aconst_null
     124: areturn
     125: aload_0
     126: bipush        32
     128: invokevirtual #20                 // Method java/lang/String.indexOf:(I)I
     131: istore_1
     132: iload_1
     133: iconst_m1
     134: if_icmpne     157
     137: new           #4                  // class won/protocol/rest/WonEtagHelper
     140: dup
     141: aload_0
     142: iconst_1
     143: aload_0
     144: invokevirtual #21                 // Method java/lang/String.length:()I
     147: iconst_1
     148: isub
     149: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     152: aconst_null
     153: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
     156: areturn
     157: aconst_null
     158: astore_2
     159: aload_0
     160: iload_1
     161: aload_0
     162: invokevirtual #21                 // Method java/lang/String.length:()I
     165: iconst_1
     166: isub
     167: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     170: invokestatic  #23                 // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
     173: astore_2
     174: goto          207
     177: astore_3
     178: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
     181: new           #10                 // class java/lang/StringBuilder
     184: dup
     185: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
     188: ldc           #25                 // String not a valid media type in etag value, cannot process:
     190: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     193: aload_0
     194: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     197: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     200: invokeinterface #15,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
     205: aconst_null
     206: areturn
     207: new           #4                  // class won/protocol/rest/WonEtagHelper
     210: dup
     211: aload_0
     212: iconst_1
     213: iload_1
     214: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     217: aload_2
     218: invokespecial #5                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/http/MediaType;)V
     221: areturn
    Exception table:
       from    to  target type
         159   174   177   Class java/lang/Exception

  public static won.protocol.rest.WonEtagHelper fromHeaderIfCompatibleWithAcceptHeader(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: invokestatic  #26                 // Method fromIfNoneMatchHeader:(Lorg/springframework/http/HttpHeaders;)Lwon/protocol/rest/WonEtagHelper;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_1
      10: invokevirtual #27                 // Method getMediaType:()Lorg/springframework/http/MediaType;
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_0
      19: invokevirtual #28                 // Method org/springframework/http/HttpHeaders.getAccept:()Ljava/util/List;
      22: invokeinterface #29,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      27: aload_1
      28: invokedynamic #30,  0             // InvokeDynamic #0:test:(Lwon/protocol/rest/WonEtagHelper;)Ljava/util/function/Predicate;
      33: invokeinterface #31,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      38: ifeq          43
      41: aload_1
      42: areturn
      43: aconst_null
      44: areturn

  public static won.protocol.rest.WonEtagHelper fromIfNoneMatchHeader(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method org/springframework/http/HttpHeaders.getIfNoneMatch:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_1
      17: invokeinterface #33,  1           // InterfaceMethod java/util/List.size:()I
      22: iconst_1
      23: if_icmple     36
      26: getstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      29: ldc           #34                 // String found more than one If-None-Match header values, only using first one
      31: invokeinterface #35,  2           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;)V
      36: aload_1
      37: iconst_0
      38: invokeinterface #36,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #37                 // class java/lang/String
      46: invokestatic  #38                 // Method fromEtagValue:(Ljava/lang/String;)Lwon/protocol/rest/WonEtagHelper;
      49: areturn

  public static won.protocol.rest.WonEtagHelper fromEtagHeader(org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: invokevirtual #39                 // Method org/springframework/http/HttpHeaders.getETag:()Ljava/lang/String;
       4: invokestatic  #38                 // Method fromEtagValue:(Ljava/lang/String;)Lwon/protocol/rest/WonEtagHelper;
       7: areturn

  public static void setMediaTypeForEtagHeaderIfPresent(org.springframework.http.MediaType, org.springframework.http.HttpHeaders);
    Code:
       0: aload_1
       1: invokestatic  #40                 // Method fromEtagHeader:(Lorg/springframework/http/HttpHeaders;)Lwon/protocol/rest/WonEtagHelper;
       4: astore_2
       5: aload_2
       6: ifnull        19
       9: aload_2
      10: aload_0
      11: invokevirtual #41                 // Method setMediaType:(Lorg/springframework/http/MediaType;)V
      14: aload_2
      15: aload_1
      16: invokestatic  #42                 // Method setEtagHeader:(Lwon/protocol/rest/WonEtagHelper;Lorg/springframework/http/HttpHeaders;)V
      19: return

  public static void setEtagHeader(won.protocol.rest.WonEtagHelper, org.springframework.http.HttpHeaders);
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method isValid:()Z
       4: ifeq          15
       7: aload_1
       8: aload_0
       9: invokevirtual #44                 // Method getEtagString:()Ljava/lang/String;
      12: invokevirtual #45                 // Method org/springframework/http/HttpHeaders.setETag:(Ljava/lang/String;)V
      15: return

  public static java.lang.String getVersionIdentifier(won.protocol.rest.WonEtagHelper);
    Code:
       0: aload_0
       1: ifnull        9
       4: aload_0
       5: invokevirtual #46                 // Method getVersion:()Ljava/lang/String;
       8: areturn
       9: aconst_null
      10: areturn

  public void setVersion(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field version:Ljava/lang/String;
       5: return

  public void setMediaType(org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
       5: return

  public java.lang.String getVersion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:Ljava/lang/String;
       4: areturn

  public org.springframework.http.MediaType getMediaType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
       4: areturn

  public boolean isValid();
    Code:
       0: aload_0
       1: getfield      #2                  // Field version:Ljava/lang/String;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String getEtagString();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: bipush        34
      11: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      14: aload_0
      15: getfield      #2                  // Field version:Ljava/lang/String;
      18: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_0
      23: getfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
      26: ifnull        48
      29: aload_1
      30: bipush        32
      32: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #3                  // Field mediaType:Lorg/springframework/http/MediaType;
      41: invokevirtual #48                 // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
      44: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: bipush        34
      51: invokevirtual #47                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: areturn

  private static boolean lambda$fromHeaderIfCompatibleWithAcceptHeader$0(won.protocol.rest.WonEtagHelper, org.springframework.http.MediaType);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #27                 // Method getMediaType:()Lorg/springframework/http/MediaType;
       5: invokevirtual #49                 // Method org/springframework/http/MediaType.isCompatibleWith:(Lorg/springframework/http/MediaType;)Z
       8: ireturn

  static {};
    Code:
       0: invokestatic  #50                 // Method java/lang/invoke/MethodHandles.lookup:()Ljava/lang/invoke/MethodHandles$Lookup;
       3: invokevirtual #51                 // Method java/lang/invoke/MethodHandles$Lookup.lookupClass:()Ljava/lang/Class;
       6: invokestatic  #52                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       9: putstatic     #9                  // Field logger:Lorg/slf4j/Logger;
      12: return
}
