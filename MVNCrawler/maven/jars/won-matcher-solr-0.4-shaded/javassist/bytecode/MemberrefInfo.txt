Compiled from "ConstPool.java"
abstract class javassist.bytecode.MemberrefInfo extends javassist.bytecode.ConstInfo {
  int classIndex;

  int nameAndTypeIndex;

  public javassist.bytecode.MemberrefInfo(int, int, int);
    Code:
       0: aload_0
       1: iload_3
       2: invokespecial #1                  // Method javassist/bytecode/ConstInfo."<init>":(I)V
       5: aload_0
       6: iload_1
       7: putfield      #2                  // Field classIndex:I
      10: aload_0
      11: iload_2
      12: putfield      #3                  // Field nameAndTypeIndex:I
      15: return

  public javassist.bytecode.MemberrefInfo(java.io.DataInputStream, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method javassist/bytecode/ConstInfo."<init>":(I)V
       5: aload_0
       6: aload_1
       7: invokevirtual #4                  // Method java/io/DataInputStream.readUnsignedShort:()I
      10: putfield      #2                  // Field classIndex:I
      13: aload_0
      14: aload_1
      15: invokevirtual #4                  // Method java/io/DataInputStream.readUnsignedShort:()I
      18: putfield      #3                  // Field nameAndTypeIndex:I
      21: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field classIndex:I
       4: bipush        16
       6: ishl
       7: aload_0
       8: getfield      #3                  // Field nameAndTypeIndex:I
      11: ixor
      12: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #5                  // class javassist/bytecode/MemberrefInfo
       4: ifeq          51
       7: aload_1
       8: checkcast     #5                  // class javassist/bytecode/MemberrefInfo
      11: astore_2
      12: aload_2
      13: getfield      #2                  // Field classIndex:I
      16: aload_0
      17: getfield      #2                  // Field classIndex:I
      20: if_icmpne     49
      23: aload_2
      24: getfield      #3                  // Field nameAndTypeIndex:I
      27: aload_0
      28: getfield      #3                  // Field nameAndTypeIndex:I
      31: if_icmpne     49
      34: aload_2
      35: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      38: aload_0
      39: invokevirtual #6                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      42: if_acmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: ireturn
      51: iconst_0
      52: ireturn

  public int copy(javassist.bytecode.ConstPool, javassist.bytecode.ConstPool, java.util.Map);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field classIndex:I
       5: invokevirtual #7                  // Method javassist/bytecode/ConstPool.getItem:(I)Ljavassist/bytecode/ConstInfo;
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokevirtual #8                  // Method javassist/bytecode/ConstInfo.copy:(Ljavassist/bytecode/ConstPool;Ljavassist/bytecode/ConstPool;Ljava/util/Map;)I
      14: istore        4
      16: aload_1
      17: aload_0
      18: getfield      #3                  // Field nameAndTypeIndex:I
      21: invokevirtual #7                  // Method javassist/bytecode/ConstPool.getItem:(I)Ljavassist/bytecode/ConstInfo;
      24: aload_1
      25: aload_2
      26: aload_3
      27: invokevirtual #8                  // Method javassist/bytecode/ConstInfo.copy:(Ljavassist/bytecode/ConstPool;Ljavassist/bytecode/ConstPool;Ljava/util/Map;)I
      30: istore        5
      32: aload_0
      33: aload_2
      34: iload         4
      36: iload         5
      38: invokevirtual #9                  // Method copy2:(Ljavassist/bytecode/ConstPool;II)I
      41: ireturn

  protected abstract int copy2(javassist.bytecode.ConstPool, int, int);

  public void write(java.io.DataOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #10                 // Method getTag:()I
       5: invokevirtual #11                 // Method java/io/DataOutputStream.writeByte:(I)V
       8: aload_1
       9: aload_0
      10: getfield      #2                  // Field classIndex:I
      13: invokevirtual #12                 // Method java/io/DataOutputStream.writeShort:(I)V
      16: aload_1
      17: aload_0
      18: getfield      #3                  // Field nameAndTypeIndex:I
      21: invokevirtual #12                 // Method java/io/DataOutputStream.writeShort:(I)V
      24: return

  public void print(java.io.PrintWriter);
    Code:
       0: aload_1
       1: new           #13                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_0
       9: invokevirtual #15                 // Method getTagName:()Ljava/lang/String;
      12: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #17                 // String  #
      17: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokevirtual #19                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      26: aload_1
      27: aload_0
      28: getfield      #2                  // Field classIndex:I
      31: invokevirtual #20                 // Method java/io/PrintWriter.print:(I)V
      34: aload_1
      35: ldc           #21                 // String , name&type #
      37: invokevirtual #19                 // Method java/io/PrintWriter.print:(Ljava/lang/String;)V
      40: aload_1
      41: aload_0
      42: getfield      #3                  // Field nameAndTypeIndex:I
      45: invokevirtual #22                 // Method java/io/PrintWriter.println:(I)V
      48: return

  public abstract java.lang.String getTagName();
}
