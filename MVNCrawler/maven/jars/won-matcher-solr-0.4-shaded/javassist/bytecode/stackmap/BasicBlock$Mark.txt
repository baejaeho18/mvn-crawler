Compiled from "BasicBlock.java"
class javassist.bytecode.stackmap.BasicBlock$Mark implements java.lang.Comparable {
  int position;

  javassist.bytecode.stackmap.BasicBlock block;

  javassist.bytecode.stackmap.BasicBlock[] jump;

  boolean alwaysJmp;

  int size;

  javassist.bytecode.stackmap.BasicBlock$Catch catcher;

  javassist.bytecode.stackmap.BasicBlock$Mark(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field position:I
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field block:Ljavassist/bytecode/stackmap/BasicBlock;
      14: aload_0
      15: aconst_null
      16: putfield      #4                  // Field jump:[Ljavassist/bytecode/stackmap/BasicBlock;
      19: aload_0
      20: iconst_0
      21: putfield      #5                  // Field alwaysJmp:Z
      24: aload_0
      25: iconst_0
      26: putfield      #6                  // Field size:I
      29: aload_0
      30: aconst_null
      31: putfield      #7                  // Field catcher:Ljavassist/bytecode/stackmap/BasicBlock$Catch;
      34: return

  public int compareTo(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #8                  // class javassist/bytecode/stackmap/BasicBlock$Mark
       4: ifeq          22
       7: aload_1
       8: checkcast     #8                  // class javassist/bytecode/stackmap/BasicBlock$Mark
      11: getfield      #2                  // Field position:I
      14: istore_2
      15: aload_0
      16: getfield      #2                  // Field position:I
      19: iload_2
      20: isub
      21: ireturn
      22: iconst_m1
      23: ireturn

  void setJump(javassist.bytecode.stackmap.BasicBlock[], int, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field jump:[Ljavassist/bytecode/stackmap/BasicBlock;
       5: aload_0
       6: iload_2
       7: putfield      #6                  // Field size:I
      10: aload_0
      11: iload_3
      12: putfield      #5                  // Field alwaysJmp:Z
      15: return
}
