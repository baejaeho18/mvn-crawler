Compiled from "TypeData.java"
public class javassist.bytecode.stackmap.TypeData$ArrayElement extends javassist.bytecode.stackmap.TypeData$AbsTypeVar {
  private javassist.bytecode.stackmap.TypeData$AbsTypeVar array;

  private javassist.bytecode.stackmap.TypeData$ArrayElement(javassist.bytecode.stackmap.TypeData$AbsTypeVar);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       9: return

  public static javassist.bytecode.stackmap.TypeData make(javassist.bytecode.stackmap.TypeData) throws javassist.bytecode.BadBytecode;
    Code:
       0: aload_0
       1: instanceof    #4                  // class javassist/bytecode/stackmap/TypeData$ArrayType
       4: ifeq          15
       7: aload_0
       8: checkcast     #4                  // class javassist/bytecode/stackmap/TypeData$ArrayType
      11: invokevirtual #5                  // Method javassist/bytecode/stackmap/TypeData$ArrayType.elementType:()Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
      14: areturn
      15: aload_0
      16: instanceof    #6                  // class javassist/bytecode/stackmap/TypeData$AbsTypeVar
      19: ifeq          34
      22: new           #7                  // class javassist/bytecode/stackmap/TypeData$ArrayElement
      25: dup
      26: aload_0
      27: checkcast     #6                  // class javassist/bytecode/stackmap/TypeData$AbsTypeVar
      30: invokespecial #8                  // Method "<init>":(Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;)V
      33: areturn
      34: aload_0
      35: instanceof    #9                  // class javassist/bytecode/stackmap/TypeData$ClassName
      38: ifeq          63
      41: aload_0
      42: invokevirtual #10                 // Method javassist/bytecode/stackmap/TypeData.isNullType:()Z
      45: ifne          63
      48: new           #9                  // class javassist/bytecode/stackmap/TypeData$ClassName
      51: dup
      52: aload_0
      53: invokevirtual #11                 // Method javassist/bytecode/stackmap/TypeData.getName:()Ljava/lang/String;
      56: invokestatic  #1                  // Method typeName:(Ljava/lang/String;)Ljava/lang/String;
      59: invokespecial #12                 // Method javassist/bytecode/stackmap/TypeData$ClassName."<init>":(Ljava/lang/String;)V
      62: areturn
      63: new           #13                 // class javassist/bytecode/BadBytecode
      66: dup
      67: new           #14                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc           #16                 // String bad AASTORE:
      76: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: aload_0
      80: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: invokespecial #20                 // Method javassist/bytecode/BadBytecode."<init>":(Ljava/lang/String;)V
      89: athrow

  public void merge(javassist.bytecode.stackmap.TypeData);
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method javassist/bytecode/stackmap/TypeData.isNullType:()Z
       4: ifne          18
       7: aload_0
       8: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
      11: aload_1
      12: invokestatic  #21                 // Method javassist/bytecode/stackmap/TypeData$ArrayType.make:(Ljavassist/bytecode/stackmap/TypeData;)Ljavassist/bytecode/stackmap/TypeData;
      15: invokevirtual #22                 // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar.merge:(Ljavassist/bytecode/stackmap/TypeData;)V
      18: goto          49
      21: astore_2
      22: new           #23                 // class java/lang/RuntimeException
      25: dup
      26: new           #14                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      33: ldc           #24                 // String fatal:
      35: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_2
      39: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #25                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return
    Exception table:
       from    to  target type
           0    18    21   Class javassist/bytecode/BadBytecode

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       4: invokevirtual #26                 // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar.getName:()Ljava/lang/String;
       7: invokestatic  #1                  // Method typeName:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn

  public javassist.bytecode.stackmap.TypeData$AbsTypeVar arrayType();
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       4: areturn

  public javassist.bytecode.stackmap.TypeData$BasicType isBasicType();
    Code:
       0: aconst_null
       1: areturn

  public boolean is2WordType();
    Code:
       0: iconst_0
       1: ireturn

  private static java.lang.String typeName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/lang/String.length:()I
       4: iconst_1
       5: if_icmple     61
       8: aload_0
       9: iconst_0
      10: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      13: bipush        91
      15: if_icmpne     61
      18: aload_0
      19: iconst_1
      20: invokevirtual #28                 // Method java/lang/String.charAt:(I)C
      23: istore_1
      24: iload_1
      25: bipush        76
      27: if_icmpne     49
      30: aload_0
      31: iconst_2
      32: aload_0
      33: invokevirtual #27                 // Method java/lang/String.length:()I
      36: iconst_1
      37: isub
      38: invokevirtual #29                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      41: bipush        47
      43: bipush        46
      45: invokevirtual #30                 // Method java/lang/String.replace:(CC)Ljava/lang/String;
      48: areturn
      49: iload_1
      50: bipush        91
      52: if_icmpne     61
      55: aload_0
      56: iconst_1
      57: invokevirtual #31                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      60: areturn
      61: ldc           #32                 // String java.lang.Object
      63: areturn

  public void setType(java.lang.String, javassist.ClassPool) throws javassist.bytecode.BadBytecode;
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       4: aload_1
       5: invokestatic  #33                 // Method javassist/bytecode/stackmap/TypeData$ArrayType.typeName:(Ljava/lang/String;)Ljava/lang/String;
       8: aload_2
       9: invokevirtual #34                 // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar.setType:(Ljava/lang/String;Ljavassist/ClassPool;)V
      12: return

  protected javassist.bytecode.stackmap.TypeData$TypeVar toTypeVar();
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       4: invokevirtual #35                 // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar.toTypeVar:()Ljavassist/bytecode/stackmap/TypeData$TypeVar;
       7: areturn

  public int dfs(java.util.ArrayList, int, javassist.ClassPool) throws javassist.NotFoundException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field array:Ljavassist/bytecode/stackmap/TypeData$AbsTypeVar;
       4: aload_1
       5: iload_2
       6: aload_3
       7: invokevirtual #36                 // Method javassist/bytecode/stackmap/TypeData$AbsTypeVar.dfs:(Ljava/util/ArrayList;ILjavassist/ClassPool;)I
      10: ireturn

  static java.lang.String access$000(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method typeName:(Ljava/lang/String;)Ljava/lang/String;
       4: areturn
}
