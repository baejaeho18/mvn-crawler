Compiled from "Jdk14MLog.java"
final class com.mchange.v2.log.jdk14logging.Jdk14MLog$Jdk14MLogger implements com.mchange.v2.log.MLogger {
  final java.util.logging.Logger logger;

  final java.lang.String name;

  final com.mchange.v2.log.jdk14logging.Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder cmFinder;

  com.mchange.v2.log.jdk14logging.Jdk14MLog$Jdk14MLogger(java.util.logging.Logger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field logger:Ljava/util/logging/Logger;
       9: aload_0
      10: aload_1
      11: invokevirtual #3                  // Method java/util/logging/Logger.getName:()Ljava/lang/String;
      14: putfield      #4                  // Field name:Ljava/lang/String;
      17: invokestatic  #5                  // Method com/mchange/v2/log/jdk14logging/Jdk14MLog.access$000:()Z
      20: iconst_1
      21: if_icmpne     39
      24: aload_0
      25: new           #6                  // class com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$1
      28: dup
      29: aload_0
      30: invokespecial #7                  // Method com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$1."<init>":(Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger;)V
      33: putfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      36: goto          51
      39: aload_0
      40: new           #9                  // class com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$2
      43: dup
      44: aload_0
      45: invokespecial #10                 // Method com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$2."<init>":(Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger;)V
      48: putfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      51: return

  private static java.util.logging.Level level(com.mchange.v2.log.MLevel);
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method com/mchange/v2/log/MLevel.asJdk14Level:()Ljava/lang/Object;
       4: checkcast     #12                 // class java/util/logging/Level
       7: areturn

  public java.util.ResourceBundle getResourceBundle();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #13                 // Method java/util/logging/Logger.getResourceBundle:()Ljava/util/ResourceBundle;
       7: areturn

  public java.lang.String getResourceBundleName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #14                 // Method java/util/logging/Logger.getResourceBundleName:()Ljava/lang/String;
       7: areturn

  public void setFilter(java.lang.Object) throws java.lang.SecurityException;
    Code:
       0: aload_1
       1: instanceof    #15                 // class java/util/logging/Filter
       4: ifne          17
       7: new           #16                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #17                 // String MLogger.setFilter( ... ) requires a java.util.logging.Filter. This is not enforced by the compiler only to permit building under jdk 1.3
      13: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      21: aload_1
      22: checkcast     #15                 // class java/util/logging/Filter
      25: invokevirtual #19                 // Method java/util/logging/Logger.setFilter:(Ljava/util/logging/Filter;)V
      28: return

  public java.lang.Object getFilter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #20                 // Method java/util/logging/Logger.getFilter:()Ljava/util/logging/Filter;
       7: areturn

  public void log(com.mchange.v2.log.MLevel, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      19: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      24: astore_3
      25: aload_0
      26: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      29: aload_1
      30: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      33: aload_3
      34: iconst_0
      35: aaload
      36: aload_3
      37: iconst_1
      38: aaload
      39: aload_2
      40: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      43: return

  public void log(com.mchange.v2.log.MLevel, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      19: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      30: aload_1
      31: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      34: aload         4
      36: iconst_0
      37: aaload
      38: aload         4
      40: iconst_1
      41: aaload
      42: aload_2
      43: aload_3
      44: invokevirtual #25                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      47: return

  public void log(com.mchange.v2.log.MLevel, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      19: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      30: aload_1
      31: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      34: aload         4
      36: iconst_0
      37: aaload
      38: aload         4
      40: iconst_1
      41: aaload
      42: aload_2
      43: aload_3
      44: invokevirtual #26                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      47: return

  public void log(com.mchange.v2.log.MLevel, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_0
      16: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      19: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      24: astore        4
      26: aload_0
      27: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      30: aload_1
      31: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      34: aload         4
      36: iconst_0
      37: aaload
      38: aload         4
      40: iconst_1
      41: aaload
      42: aload_2
      43: aload_3
      44: invokevirtual #27                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      47: return

  public void logp(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        5
      34: aload         5
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         5
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      59: return

  public void logp(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        6
      34: aload         6
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         6
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: invokevirtual #25                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      61: return

  public void logp(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        6
      34: aload         6
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         6
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: invokevirtual #26                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      61: return

  public void logp(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        6
      34: aload         6
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         6
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: invokevirtual #27                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      61: return

  public void logrb(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        6
      34: aload         6
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         6
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: invokevirtual #28                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      61: return

  public void logrb(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        7
      34: aload         7
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         7
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: aload         6
      60: invokevirtual #29                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      63: return

  public void logrb(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        7
      34: aload         7
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         7
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: aload         6
      60: invokevirtual #30                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      63: return

  public void logrb(com.mchange.v2.log.MLevel, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ifne          15
      14: return
      15: aload_2
      16: ifnonnull     44
      19: aload_3
      20: ifnonnull     44
      23: aload_0
      24: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      27: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      32: astore        7
      34: aload         7
      36: iconst_0
      37: aaload
      38: astore_2
      39: aload         7
      41: iconst_1
      42: aaload
      43: astore_3
      44: aload_0
      45: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      48: aload_1
      49: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
      52: aload_2
      53: aload_3
      54: aload         4
      56: aload         5
      58: aload         6
      60: invokevirtual #31                 // Method java/util/logging/Logger.logrb:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      63: return

  public void entering(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: invokevirtual #33                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #34                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      24: return

  public void entering(java.lang.String, java.lang.String, java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #35                 // Method java/util/logging/Logger.entering:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V
      24: return

  public void exiting(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: invokevirtual #36                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;)V
      23: return

  public void exiting(java.lang.String, java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #37                 // Method java/util/logging/Logger.exiting:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      24: return

  public void throwing(java.lang.String, java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      18: aload_1
      19: aload_2
      20: aload_3
      21: invokevirtual #38                 // Method java/util/logging/Logger.throwing:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V
      24: return

  public void severe(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #39                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #39                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void warning(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #40                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void info(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #41                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #41                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void config(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #42                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #42                 // Field java/util/logging/Level.CONFIG:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void fine(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #43                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #43                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void finer(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #32                 // Field java/util/logging/Level.FINER:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void finest(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: getstatic     #44                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
       7: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      10: ifne          14
      13: return
      14: aload_0
      15: getfield      #8                  // Field cmFinder:Lcom/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder;
      18: invokeinterface #23,  1           // InterfaceMethod com/mchange/v2/log/jdk14logging/Jdk14MLog$Jdk14MLogger$ClassAndMethodFinder.find:()[Ljava/lang/String;
      23: astore_2
      24: aload_0
      25: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      28: getstatic     #44                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      31: aload_2
      32: iconst_0
      33: aaload
      34: aload_2
      35: iconst_1
      36: aaload
      37: aload_1
      38: invokevirtual #24                 // Method java/util/logging/Logger.logp:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
      41: return

  public void setLevel(com.mchange.v2.log.MLevel) throws java.lang.SecurityException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #45                 // Method java/util/logging/Logger.setLevel:(Ljava/util/logging/Level;)V
      11: return

  public com.mchange.v2.log.MLevel getLevel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #46                 // Method java/util/logging/Logger.getLevel:()Ljava/util/logging/Level;
       7: invokevirtual #47                 // Method java/util/logging/Level.intValue:()I
      10: invokestatic  #48                 // Method com/mchange/v2/log/MLevel.fromIntValue:(I)Lcom/mchange/v2/log/MLevel;
      13: areturn

  public boolean isLoggable(com.mchange.v2.log.MLevel);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: aload_1
       5: invokestatic  #21                 // Method level:(Lcom/mchange/v2/log/MLevel;)Ljava/util/logging/Level;
       8: invokevirtual #22                 // Method java/util/logging/Logger.isLoggable:(Ljava/util/logging/Level;)Z
      11: ireturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public void addHandler(java.lang.Object) throws java.lang.SecurityException;
    Code:
       0: aload_1
       1: instanceof    #49                 // class java/util/logging/Handler
       4: ifne          17
       7: new           #16                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #50                 // String MLogger.addHandler( ... ) requires a java.util.logging.Handler. This is not enforced by the compiler only to permit building under jdk 1.3
      13: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      21: aload_1
      22: checkcast     #49                 // class java/util/logging/Handler
      25: invokevirtual #51                 // Method java/util/logging/Logger.addHandler:(Ljava/util/logging/Handler;)V
      28: return

  public void removeHandler(java.lang.Object) throws java.lang.SecurityException;
    Code:
       0: aload_1
       1: instanceof    #49                 // class java/util/logging/Handler
       4: ifne          17
       7: new           #16                 // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #52                 // String MLogger.removeHandler( ... ) requires a java.util.logging.Handler. This is not enforced by the compiler only to permit building under jdk 1.3
      13: invokespecial #18                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
      21: aload_1
      22: checkcast     #49                 // class java/util/logging/Handler
      25: invokevirtual #53                 // Method java/util/logging/Logger.removeHandler:(Ljava/util/logging/Handler;)V
      28: return

  public java.lang.Object[] getHandlers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #54                 // Method java/util/logging/Logger.getHandlers:()[Ljava/util/logging/Handler;
       7: areturn

  public void setUseParentHandlers(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: iload_1
       5: invokevirtual #55                 // Method java/util/logging/Logger.setUseParentHandlers:(Z)V
       8: return

  public boolean getUseParentHandlers();
    Code:
       0: aload_0
       1: getfield      #2                  // Field logger:Ljava/util/logging/Logger;
       4: invokevirtual #56                 // Method java/util/logging/Logger.getUseParentHandlers:()Z
       7: ireturn
}
