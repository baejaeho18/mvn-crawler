Compiled from "SynchronizedFilterDataSource.java"
public abstract class com.mchange.v2.sql.filter.SynchronizedFilterDataSource implements javax.sql.DataSource {
  protected javax.sql.DataSource inner;

  private void __setInner(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field inner:Ljavax/sql/DataSource;
       5: return

  public com.mchange.v2.sql.filter.SynchronizedFilterDataSource(javax.sql.DataSource);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method __setInner:(Ljavax/sql/DataSource;)V
       9: return

  public com.mchange.v2.sql.filter.SynchronizedFilterDataSource();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public synchronized void setInner(javax.sql.DataSource);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method __setInner:(Ljavax/sql/DataSource;)V
       5: return

  public synchronized javax.sql.DataSource getInner();
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: areturn

  public synchronized java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: invokeinterface #4,  1            // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: areturn

  public synchronized java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod javax/sql/DataSource.getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      11: areturn

  public synchronized java.io.PrintWriter getLogWriter() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: invokeinterface #6,  1            // InterfaceMethod javax/sql/DataSource.getLogWriter:()Ljava/io/PrintWriter;
       9: areturn

  public synchronized int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: invokeinterface #7,  1            // InterfaceMethod javax/sql/DataSource.getLoginTimeout:()I
       9: ireturn

  public synchronized java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: invokeinterface #8,  1            // InterfaceMethod javax/sql/DataSource.getParentLogger:()Ljava/util/logging/Logger;
       9: areturn

  public synchronized void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod javax/sql/DataSource.setLogWriter:(Ljava/io/PrintWriter;)V
      10: return

  public synchronized void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: iload_1
       5: invokeinterface #10,  2           // InterfaceMethod javax/sql/DataSource.setLoginTimeout:(I)V
      10: return

  public synchronized boolean isWrapperFor(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod javax/sql/DataSource.isWrapperFor:(Ljava/lang/Class;)Z
      10: ireturn

  public synchronized java.lang.Object unwrap(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod javax/sql/DataSource.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      10: areturn
}
