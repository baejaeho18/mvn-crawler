Compiled from "FilterStatement.java"
public abstract class com.mchange.v2.sql.filter.FilterStatement implements java.sql.Statement {
  protected java.sql.Statement inner;

  private void __setInner(java.sql.Statement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field inner:Ljava/sql/Statement;
       5: return

  public com.mchange.v2.sql.filter.FilterStatement(java.sql.Statement);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokespecial #3                  // Method __setInner:(Ljava/sql/Statement;)V
       9: return

  public com.mchange.v2.sql.filter.FilterStatement();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public void setInner(java.sql.Statement);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method __setInner:(Ljava/sql/Statement;)V
       5: return

  public java.sql.Statement getInner();
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: areturn

  public boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: iload_2
       6: invokeinterface #4,  3            // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;I)Z
      11: ireturn

  public boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;[Ljava/lang/String;)Z
      11: ireturn

  public boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;)Z
      10: ireturn

  public boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: aload_2
       6: invokeinterface #7,  3            // InterfaceMethod java/sql/Statement.execute:(Ljava/lang/String;[I)Z
      11: ireturn

  public void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #8,  1            // InterfaceMethod java/sql/Statement.clearWarnings:()V
       9: return

  public java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #9,  1            // InterfaceMethod java/sql/Statement.getWarnings:()Ljava/sql/SQLWarning;
       9: areturn

  public boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #10,  1           // InterfaceMethod java/sql/Statement.isClosed:()Z
       9: ireturn

  public int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #11,  1           // InterfaceMethod java/sql/Statement.getFetchDirection:()I
       9: ireturn

  public int getFetchSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #12,  1           // InterfaceMethod java/sql/Statement.getFetchSize:()I
       9: ireturn

  public void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/sql/Statement.setFetchDirection:(I)V
      10: return

  public void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #14,  2           // InterfaceMethod java/sql/Statement.setFetchSize:(I)V
      10: return

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #15,  1           // InterfaceMethod java/sql/Statement.getConnection:()Ljava/sql/Connection;
       9: areturn

  public int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #16,  1           // InterfaceMethod java/sql/Statement.getResultSetHoldability:()I
       9: ireturn

  public void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #17,  2           // InterfaceMethod java/sql/Statement.addBatch:(Ljava/lang/String;)V
      10: return

  public void cancel() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #18,  1           // InterfaceMethod java/sql/Statement.cancel:()V
       9: return

  public void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #19,  1           // InterfaceMethod java/sql/Statement.clearBatch:()V
       9: return

  public void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #20,  1           // InterfaceMethod java/sql/Statement.closeOnCompletion:()V
       9: return

  public int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #21,  1           // InterfaceMethod java/sql/Statement.executeBatch:()[I
       9: areturn

  public java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      10: areturn

  public int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: aload_2
       6: invokeinterface #23,  3           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;[I)I
      11: ireturn

  public int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I
      11: ireturn

  public int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;)I
      10: ireturn

  public int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: iload_2
       6: invokeinterface #26,  3           // InterfaceMethod java/sql/Statement.executeUpdate:(Ljava/lang/String;I)I
      11: ireturn

  public java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #27,  1           // InterfaceMethod java/sql/Statement.getGeneratedKeys:()Ljava/sql/ResultSet;
       9: areturn

  public int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #28,  1           // InterfaceMethod java/sql/Statement.getMaxFieldSize:()I
       9: ireturn

  public int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #29,  1           // InterfaceMethod java/sql/Statement.getMaxRows:()I
       9: ireturn

  public boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #30,  1           // InterfaceMethod java/sql/Statement.getMoreResults:()Z
       9: ireturn

  public boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #31,  2           // InterfaceMethod java/sql/Statement.getMoreResults:(I)Z
      10: ireturn

  public int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #32,  1           // InterfaceMethod java/sql/Statement.getQueryTimeout:()I
       9: ireturn

  public java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #33,  1           // InterfaceMethod java/sql/Statement.getResultSet:()Ljava/sql/ResultSet;
       9: areturn

  public int getResultSetConcurrency() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #34,  1           // InterfaceMethod java/sql/Statement.getResultSetConcurrency:()I
       9: ireturn

  public int getResultSetType() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #35,  1           // InterfaceMethod java/sql/Statement.getResultSetType:()I
       9: ireturn

  public int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #36,  1           // InterfaceMethod java/sql/Statement.getUpdateCount:()I
       9: ireturn

  public boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #37,  1           // InterfaceMethod java/sql/Statement.isCloseOnCompletion:()Z
       9: ireturn

  public boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #38,  1           // InterfaceMethod java/sql/Statement.isPoolable:()Z
       9: ireturn

  public void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #39,  2           // InterfaceMethod java/sql/Statement.setCursorName:(Ljava/lang/String;)V
      10: return

  public void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #40,  2           // InterfaceMethod java/sql/Statement.setEscapeProcessing:(Z)V
      10: return

  public void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #41,  2           // InterfaceMethod java/sql/Statement.setMaxFieldSize:(I)V
      10: return

  public void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/sql/Statement.setMaxRows:(I)V
      10: return

  public void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #43,  2           // InterfaceMethod java/sql/Statement.setPoolable:(Z)V
      10: return

  public void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: iload_1
       5: invokeinterface #44,  2           // InterfaceMethod java/sql/Statement.setQueryTimeout:(I)V
      10: return

  public void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: invokeinterface #45,  1           // InterfaceMethod java/sql/Statement.close:()V
       9: return

  public boolean isWrapperFor(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #46,  2           // InterfaceMethod java/sql/Statement.isWrapperFor:(Ljava/lang/Class;)Z
      10: ireturn

  public java.lang.Object unwrap(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field inner:Ljava/sql/Statement;
       4: aload_1
       5: invokeinterface #47,  2           // InterfaceMethod java/sql/Statement.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      10: areturn
}
