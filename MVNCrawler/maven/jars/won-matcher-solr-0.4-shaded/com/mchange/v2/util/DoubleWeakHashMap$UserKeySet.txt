Compiled from "DoubleWeakHashMap.java"
class com.mchange.v2.util.DoubleWeakHashMap$UserKeySet implements java.util.Set {
  final com.mchange.v2.util.DoubleWeakHashMap this$0;

  com.mchange.v2.util.DoubleWeakHashMap$UserKeySet(com.mchange.v2.util.DoubleWeakHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #4                  // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #5                  // String You cannot add to a Map\'s key set.
      13: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow

  public boolean addAll(java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #4                  // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #5                  // String You cannot add to a Map\'s key set.
      13: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #7                  // Method com/mchange/v2/util/DoubleWeakHashMap.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: aload_1
       5: invokevirtual #8                  // Method com/mchange/v2/util/DoubleWeakHashMap.containsKey:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsAll(java.util.Collection);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          31
      16: aload_0
      17: aload_2
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokevirtual #12                 // Method contains:(Ljava/lang/Object;)Z
      26: ifne          7
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #13                 // Method com/mchange/v2/util/DoubleWeakHashMap.isEmpty:()Z
       7: ireturn

  public java.util.Iterator iterator();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #14                 // class com/mchange/v2/util/DoubleWeakHashMap$UserKeySet$1
      10: dup
      11: aload_0
      12: aload_0
      13: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
      16: getfield      #15                 // Field com/mchange/v2/util/DoubleWeakHashMap.inner:Ljava/util/HashMap;
      19: invokevirtual #16                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: iconst_1
      28: invokespecial #18                 // Method com/mchange/v2/util/DoubleWeakHashMap$UserKeySet$1."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap$UserKeySet;Ljava/util/Iterator;Z)V
      31: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: aload_1
       5: invokevirtual #19                 // Method com/mchange/v2/util/DoubleWeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
       8: ifnull        15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean removeAll(java.util.Collection);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_1
       3: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       8: astore_3
       9: aload_3
      10: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifeq          34
      18: iload_2
      19: aload_0
      20: aload_3
      21: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: invokevirtual #20                 // Method remove:(Ljava/lang/Object;)Z
      29: ior
      30: istore_2
      31: goto          9
      34: iload_2
      35: ireturn

  public boolean retainAll(java.util.Collection);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: invokevirtual #21                 // Method iterator:()Ljava/util/Iterator;
       6: astore_3
       7: aload_3
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          42
      16: aload_1
      17: aload_3
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokeinterface #22,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      28: ifne          7
      31: aload_3
      32: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.remove:()V
      37: iconst_1
      38: istore_2
      39: goto          7
      42: iload_2
      43: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #24                 // Method com/mchange/v2/util/DoubleWeakHashMap.size:()I
       7: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #25                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: invokespecial #26                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      15: invokevirtual #27                 // Method java/util/HashSet.toArray:()[Ljava/lang/Object;
      18: areturn

  public java.lang.Object[] toArray(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #25                 // class java/util/HashSet
      10: dup
      11: aload_0
      12: invokespecial #26                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      15: aload_1
      16: invokevirtual #28                 // Method java/util/HashSet.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: areturn
}
