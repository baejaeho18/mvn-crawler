Compiled from "DoubleWeakHashMap.java"
public class com.mchange.v2.util.DoubleWeakHashMap implements java.util.Map {
  java.util.HashMap inner;

  java.lang.ref.ReferenceQueue keyQ;

  java.lang.ref.ReferenceQueue valQ;

  com.mchange.v2.util.DoubleWeakHashMap$CheckKeyHolder holder;

  java.util.Set userKeySet;

  java.util.Collection valuesCollection;

  public com.mchange.v2.util.DoubleWeakHashMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field keyQ:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #2                  // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #5                  // Field valQ:Ljava/lang/ref/ReferenceQueue;
      26: aload_0
      27: new           #6                  // class com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder
      30: dup
      31: invokespecial #7                  // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder."<init>":()V
      34: putfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field userKeySet:Ljava/util/Set;
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field valuesCollection:Ljava/util/Collection;
      47: aload_0
      48: new           #11                 // class java/util/HashMap
      51: dup
      52: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      55: putfield      #13                 // Field inner:Ljava/util/HashMap;
      58: return

  public com.mchange.v2.util.DoubleWeakHashMap(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field keyQ:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #2                  // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #5                  // Field valQ:Ljava/lang/ref/ReferenceQueue;
      26: aload_0
      27: new           #6                  // class com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder
      30: dup
      31: invokespecial #7                  // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder."<init>":()V
      34: putfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field userKeySet:Ljava/util/Set;
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field valuesCollection:Ljava/util/Collection;
      47: aload_0
      48: new           #11                 // class java/util/HashMap
      51: dup
      52: iload_1
      53: invokespecial #14                 // Method java/util/HashMap."<init>":(I)V
      56: putfield      #13                 // Field inner:Ljava/util/HashMap;
      59: return

  public com.mchange.v2.util.DoubleWeakHashMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/lang/ref/ReferenceQueue
       8: dup
       9: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      12: putfield      #4                  // Field keyQ:Ljava/lang/ref/ReferenceQueue;
      15: aload_0
      16: new           #2                  // class java/lang/ref/ReferenceQueue
      19: dup
      20: invokespecial #3                  // Method java/lang/ref/ReferenceQueue."<init>":()V
      23: putfield      #5                  // Field valQ:Ljava/lang/ref/ReferenceQueue;
      26: aload_0
      27: new           #6                  // class com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder
      30: dup
      31: invokespecial #7                  // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder."<init>":()V
      34: putfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field userKeySet:Ljava/util/Set;
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field valuesCollection:Ljava/util/Collection;
      47: aload_0
      48: new           #11                 // class java/util/HashMap
      51: dup
      52: iload_1
      53: fload_2
      54: invokespecial #15                 // Method java/util/HashMap."<init>":(IF)V
      57: putfield      #13                 // Field inner:Ljava/util/HashMap;
      60: return

  public com.mchange.v2.util.DoubleWeakHashMap(java.util.Map);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method "<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #17                 // Method putAll:(Ljava/util/Map;)V
       9: return

  public void cleanCleared();
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyQ:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #18                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #19                 // class com/mchange/v2/util/DoubleWeakHashMap$WKey
      10: dup
      11: astore_1
      12: ifnull        27
      15: aload_0
      16: getfield      #13                 // Field inner:Ljava/util/HashMap;
      19: aload_1
      20: invokevirtual #20                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: goto          0
      27: aload_0
      28: getfield      #5                  // Field valQ:Ljava/lang/ref/ReferenceQueue;
      31: invokevirtual #18                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      34: checkcast     #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      37: dup
      38: astore_2
      39: ifnull        57
      42: aload_0
      43: getfield      #13                 // Field inner:Ljava/util/HashMap;
      46: aload_2
      47: invokevirtual #22                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.getWKey:()Lcom/mchange/v2/util/DoubleWeakHashMap$WKey;
      50: invokevirtual #20                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: goto          27
      57: return

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: invokevirtual #24                 // Method java/util/HashMap.clear:()V
      11: return

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: aload_0
       9: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      12: aload_1
      13: invokevirtual #25                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.set:(Ljava/lang/Object;)Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      16: invokevirtual #26                 // Method java/util/HashMap.containsKey:(Ljava/lang/Object;)Z
      19: istore_2
      20: aload_0
      21: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      24: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      27: iload_2
      28: ireturn
      29: astore_3
      30: aload_0
      31: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      34: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      37: aload_3
      38: athrow
    Exception table:
       from    to  target type
           4    20    29   any

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field inner:Ljava/util/HashMap;
       4: invokevirtual #28                 // Method java/util/HashMap.values:()Ljava/util/Collection;
       7: invokeinterface #29,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          48
      22: aload_2
      23: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokevirtual #32                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      37: invokevirtual #33                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      40: ifeq          45
      43: iconst_1
      44: ireturn
      45: goto          13
      48: iconst_0
      49: ireturn

  public java.util.Set entrySet();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: new           #34                 // class com/mchange/v2/util/DoubleWeakHashMap$UserEntrySet
       7: dup
       8: aload_0
       9: aconst_null
      10: invokespecial #35                 // Method com/mchange/v2/util/DoubleWeakHashMap$UserEntrySet."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap;Lcom/mchange/v2/util/DoubleWeakHashMap$1;)V
      13: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: aload_0
       9: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      12: aload_1
      13: invokevirtual #25                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.set:(Ljava/lang/Object;)Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      16: invokevirtual #36                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      22: astore_2
      23: aload_2
      24: ifnonnull     31
      27: aconst_null
      28: goto          35
      31: aload_2
      32: invokevirtual #32                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      35: astore_3
      36: aload_0
      37: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      40: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      43: aload_3
      44: areturn
      45: astore        4
      47: aload_0
      48: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      51: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      54: aload         4
      56: athrow
    Exception table:
       from    to  target type
           0    36    45   any
          45    47    45   any

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: invokevirtual #37                 // Method java/util/HashMap.isEmpty:()Z
      11: ireturn

  public java.util.Set keySet();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #9                  // Field userKeySet:Ljava/util/Set;
       8: ifnonnull     23
      11: aload_0
      12: new           #38                 // class com/mchange/v2/util/DoubleWeakHashMap$UserKeySet
      15: dup
      16: aload_0
      17: invokespecial #39                 // Method com/mchange/v2/util/DoubleWeakHashMap$UserKeySet."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap;)V
      20: putfield      #9                  // Field userKeySet:Ljava/util/Set;
      23: aload_0
      24: getfield      #9                  // Field userKeySet:Ljava/util/Set;
      27: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #40                 // Method doPut:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mchange/v2/util/DoubleWeakHashMap$WVal;
      10: astore_3
      11: aload_3
      12: ifnull        20
      15: aload_3
      16: invokevirtual #32                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      19: areturn
      20: aconst_null
      21: areturn

  private com.mchange.v2.util.DoubleWeakHashMap$WVal doPut(java.lang.Object, java.lang.Object);
    Code:
       0: new           #19                 // class com/mchange/v2/util/DoubleWeakHashMap$WKey
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field keyQ:Ljava/lang/ref/ReferenceQueue;
       9: invokespecial #41                 // Method com/mchange/v2/util/DoubleWeakHashMap$WKey."<init>":(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      12: astore_3
      13: new           #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      16: dup
      17: aload_3
      18: aload_2
      19: aload_0
      20: getfield      #5                  // Field valQ:Ljava/lang/ref/ReferenceQueue;
      23: invokespecial #42                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap$WKey;Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V
      26: astore        4
      28: aload_0
      29: getfield      #13                 // Field inner:Ljava/util/HashMap;
      32: aload_3
      33: aload         4
      35: invokevirtual #43                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      41: areturn

  public void putAll(java.util.Map);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_1
       5: invokeinterface #44,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      10: invokeinterface #45,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      15: astore_2
      16: aload_2
      17: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          55
      25: aload_2
      26: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      31: checkcast     #46                 // class java/util/Map$Entry
      34: astore_3
      35: aload_0
      36: aload_3
      37: invokeinterface #47,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      42: aload_3
      43: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      48: invokespecial #40                 // Method doPut:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/mchange/v2/util/DoubleWeakHashMap$WVal;
      51: pop
      52: goto          16
      55: return

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: aload_0
       9: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      12: aload_1
      13: invokevirtual #25                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.set:(Ljava/lang/Object;)Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      16: invokevirtual #20                 // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      19: checkcast     #21                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      22: astore_2
      23: aload_2
      24: ifnonnull     31
      27: aconst_null
      28: goto          35
      31: aload_2
      32: invokevirtual #32                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      35: astore_3
      36: aload_0
      37: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      40: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      43: aload_3
      44: areturn
      45: astore        4
      47: aload_0
      48: getfield      #8                  // Field holder:Lcom/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder;
      51: invokevirtual #27                 // Method com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder.clear:()V
      54: aload         4
      56: athrow
    Exception table:
       from    to  target type
           0    36    45   any
          45    47    45   any

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method cleanCleared:()V
       4: aload_0
       5: getfield      #13                 // Field inner:Ljava/util/HashMap;
       8: invokevirtual #49                 // Method java/util/HashMap.size:()I
      11: ireturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: getfield      #10                 // Field valuesCollection:Ljava/util/Collection;
       4: ifnonnull     19
       7: aload_0
       8: new           #50                 // class com/mchange/v2/util/DoubleWeakHashMap$ValuesCollection
      11: dup
      12: aload_0
      13: invokespecial #51                 // Method com/mchange/v2/util/DoubleWeakHashMap$ValuesCollection."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap;)V
      16: putfield      #10                 // Field valuesCollection:Ljava/util/Collection;
      19: aload_0
      20: getfield      #10                 // Field valuesCollection:Ljava/util/Collection;
      23: areturn
}
