Compiled from "DoubleWeakHashMap.java"
final class com.mchange.v2.util.DoubleWeakHashMap$CheckKeyHolder {
  java.lang.Object checkKey;

  static final boolean $assertionsDisabled;

  com.mchange.v2.util.DoubleWeakHashMap$CheckKeyHolder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Object get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field checkKey:Ljava/lang/Object;
       4: areturn

  public com.mchange.v2.util.DoubleWeakHashMap$CheckKeyHolder set(java.lang.Object);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_0
       7: getfield      #2                  // Field checkKey:Ljava/lang/Object;
      10: ifnull        23
      13: new           #4                  // class java/lang/AssertionError
      16: dup
      17: ldc           #5                  // String Illegal concurrenct use of DoubleWeakHashMap!
      19: invokespecial #6                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: putfield      #2                  // Field checkKey:Ljava/lang/Object;
      28: aload_0
      29: areturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #2                  // Field checkKey:Ljava/lang/Object;
       5: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field checkKey:Ljava/lang/Object;
       4: invokevirtual #7                  // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: getstatic     #3                  // Field $assertionsDisabled:Z
       3: ifne          23
       6: aload_0
       7: invokevirtual #8                  // Method get:()Ljava/lang/Object;
      10: ifnonnull     23
      13: new           #4                  // class java/lang/AssertionError
      16: dup
      17: ldc           #9                  // String CheckedKeyHolder should never do an equality check while its value is null.
      19: invokespecial #6                  // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
      22: athrow
      23: aload_0
      24: aload_1
      25: if_acmpne     30
      28: iconst_1
      29: ireturn
      30: aload_1
      31: instanceof    #10                 // class com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder
      34: ifeq          52
      37: aload_0
      38: invokevirtual #8                  // Method get:()Ljava/lang/Object;
      41: aload_1
      42: checkcast     #10                 // class com/mchange/v2/util/DoubleWeakHashMap$CheckKeyHolder
      45: invokevirtual #8                  // Method get:()Ljava/lang/Object;
      48: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      51: ireturn
      52: aload_1
      53: instanceof    #12                 // class com/mchange/v2/util/DoubleWeakHashMap$WKey
      56: ifeq          74
      59: aload_0
      60: invokevirtual #8                  // Method get:()Ljava/lang/Object;
      63: aload_1
      64: checkcast     #12                 // class com/mchange/v2/util/DoubleWeakHashMap$WKey
      67: invokevirtual #13                 // Method com/mchange/v2/util/DoubleWeakHashMap$WKey.get:()Ljava/lang/Object;
      70: invokevirtual #11                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      73: ireturn
      74: iconst_0
      75: ireturn

  static {};
    Code:
       0: ldc           #14                 // class com/mchange/v2/util/DoubleWeakHashMap
       2: invokevirtual #15                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #3                  // Field $assertionsDisabled:Z
      16: return
}
