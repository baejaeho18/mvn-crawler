Compiled from "DoubleWeakHashMap.java"
class com.mchange.v2.util.DoubleWeakHashMap$ValuesCollection implements java.util.Collection {
  final com.mchange.v2.util.DoubleWeakHashMap this$0;

  com.mchange.v2.util.DoubleWeakHashMap$ValuesCollection(com.mchange.v2.util.DoubleWeakHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public boolean add(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #4                  // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #5                  // String DoubleWeakHashMap does not support adding to its values Collection.
      13: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow

  public boolean addAll(java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #4                  // class java/lang/UnsupportedOperationException
      10: dup
      11: ldc           #5                  // String DoubleWeakHashMap does not support adding to its values Collection.
      13: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      16: athrow

  public void clear();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #7                  // Method com/mchange/v2/util/DoubleWeakHashMap.clear:()V
       7: return

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: aload_1
       5: invokevirtual #8                  // Method com/mchange/v2/util/DoubleWeakHashMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public boolean containsAll(java.util.Collection);
    Code:
       0: aload_1
       1: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          31
      16: aload_0
      17: aload_2
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: invokevirtual #12                 // Method contains:(Ljava/lang/Object;)Z
      26: ifne          7
      29: iconst_0
      30: ireturn
      31: iconst_1
      32: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #13                 // Method com/mchange/v2/util/DoubleWeakHashMap.isEmpty:()Z
       7: ireturn

  public java.util.Iterator iterator();
    Code:
       0: new           #14                 // class com/mchange/v2/util/DoubleWeakHashMap$ValuesCollection$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       9: getfield      #15                 // Field com/mchange/v2/util/DoubleWeakHashMap.inner:Ljava/util/HashMap;
      12: invokevirtual #16                 // Method java/util/HashMap.values:()Ljava/util/Collection;
      15: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: iconst_1
      21: invokespecial #17                 // Method com/mchange/v2/util/DoubleWeakHashMap$ValuesCollection$1."<init>":(Lcom/mchange/v2/util/DoubleWeakHashMap$ValuesCollection;Ljava/util/Iterator;Z)V
      24: areturn

  public boolean remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: aload_0
       8: aload_1
       9: invokespecial #18                 // Method removeValue:(Ljava/lang/Object;)Z
      12: ireturn

  public boolean removeAll(java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: iconst_0
       8: istore_2
       9: aload_1
      10: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      15: astore_3
      16: aload_3
      17: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          41
      25: iload_2
      26: aload_0
      27: aload_3
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: invokespecial #18                 // Method removeValue:(Ljava/lang/Object;)Z
      36: ior
      37: istore_2
      38: goto          16
      41: iload_2
      42: ireturn

  public boolean retainAll(java.util.Collection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: aload_0
       8: aload_1
       9: invokespecial #19                 // Method retainValues:(Ljava/util/Collection;)Z
      12: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #20                 // Method com/mchange/v2/util/DoubleWeakHashMap.size:()I
       7: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #21                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: invokevirtual #23                 // Method java/util/ArrayList.toArray:()[Ljava/lang/Object;
      18: areturn

  public java.lang.Object[] toArray(java.lang.Object[]);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       4: invokevirtual #3                  // Method com/mchange/v2/util/DoubleWeakHashMap.cleanCleared:()V
       7: new           #21                 // class java/util/ArrayList
      10: dup
      11: aload_0
      12: invokespecial #22                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      15: aload_1
      16: invokevirtual #24                 // Method java/util/ArrayList.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      19: areturn

  private boolean removeValue(java.lang.Object);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       6: getfield      #15                 // Field com/mchange/v2/util/DoubleWeakHashMap.inner:Ljava/util/HashMap;
       9: invokevirtual #16                 // Method java/util/HashMap.values:()Ljava/util/Collection;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          61
      27: aload_3
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #25                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokevirtual #26                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      44: invokevirtual #27                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      47: ifeq          58
      50: aload_3
      51: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.remove:()V
      56: iconst_1
      57: istore_2
      58: goto          18
      61: iload_2
      62: ireturn

  private boolean retainValues(java.util.Collection);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #1                  // Field this$0:Lcom/mchange/v2/util/DoubleWeakHashMap;
       6: getfield      #15                 // Field com/mchange/v2/util/DoubleWeakHashMap.inner:Ljava/util/HashMap;
       9: invokevirtual #16                 // Method java/util/HashMap.values:()Ljava/util/Collection;
      12: invokeinterface #9,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      17: astore_3
      18: aload_3
      19: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          63
      27: aload_3
      28: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #25                 // class com/mchange/v2/util/DoubleWeakHashMap$WVal
      36: astore        4
      38: aload_1
      39: aload         4
      41: invokevirtual #26                 // Method com/mchange/v2/util/DoubleWeakHashMap$WVal.get:()Ljava/lang/Object;
      44: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      49: ifne          60
      52: aload_3
      53: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.remove:()V
      58: iconst_1
      59: istore_2
      60: goto          18
      63: iload_2
      64: ireturn
}
