Compiled from "ExactReentrantSharedUseExclusiveUseLock.java"
public class com.mchange.v2.lock.ExactReentrantSharedUseExclusiveUseLock implements com.mchange.v2.lock.SharedUseExclusiveUseLock {
  java.util.Set waitingShared;

  java.util.List activeShared;

  java.util.Set waitingExclusive;

  java.lang.Thread activeExclusive;

  int exclusive_shared_reentries;

  int exclusive_exclusive_reentries;

  java.lang.String name;

  public com.mchange.v2.lock.ExactReentrantSharedUseExclusiveUseLock(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field waitingShared:Ljava/util/Set;
      15: aload_0
      16: new           #5                  // class java/util/LinkedList
      19: dup
      20: invokespecial #6                  // Method java/util/LinkedList."<init>":()V
      23: putfield      #7                  // Field activeShared:Ljava/util/List;
      26: aload_0
      27: new           #2                  // class java/util/HashSet
      30: dup
      31: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      34: putfield      #8                  // Field waitingExclusive:Ljava/util/Set;
      37: aload_0
      38: aconst_null
      39: putfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
      42: aload_0
      43: iconst_0
      44: putfield      #10                 // Field exclusive_shared_reentries:I
      47: aload_0
      48: iconst_0
      49: putfield      #11                 // Field exclusive_exclusive_reentries:I
      52: aload_0
      53: aload_1
      54: putfield      #12                 // Field name:Ljava/lang/String;
      57: return

  public com.mchange.v2.lock.ExactReentrantSharedUseExclusiveUseLock();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #13                 // Method "<init>":(Ljava/lang/String;)V
       5: return

  void status(java.lang.String);
    Code:
       0: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: new           #15                 // class java/lang/StringBuilder
       6: dup
       7: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      10: aload_0
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      14: ldc           #18                 // String  -- after
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_1
      20: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      29: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      32: new           #15                 // class java/lang/StringBuilder
      35: dup
      36: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      39: ldc           #22                 // String waitingShared:
      41: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #4                  // Field waitingShared:Ljava/util/Set;
      48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      51: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      57: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      60: new           #15                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      67: ldc           #23                 // String activeShared:
      69: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_0
      73: getfield      #7                  // Field activeShared:Ljava/util/List;
      76: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      85: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
      88: new           #15                 // class java/lang/StringBuilder
      91: dup
      92: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      95: ldc           #24                 // String waitingExclusive:
      97: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     100: aload_0
     101: getfield      #8                  // Field waitingExclusive:Ljava/util/Set;
     104: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     107: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     113: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     116: new           #15                 // class java/lang/StringBuilder
     119: dup
     120: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     123: ldc           #25                 // String activeExclusive:
     125: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
     132: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     135: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     138: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     141: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     144: new           #15                 // class java/lang/StringBuilder
     147: dup
     148: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     151: ldc           #26                 // String exclusive_shared_reentries:
     153: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     156: aload_0
     157: getfield      #10                 // Field exclusive_shared_reentries:I
     160: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     163: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     166: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     169: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     172: new           #15                 // class java/lang/StringBuilder
     175: dup
     176: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
     179: ldc           #28                 // String exclusive_exclusive_reentries:
     181: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     184: aload_0
     185: getfield      #11                 // Field exclusive_exclusive_reentries:I
     188: invokevirtual #27                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     191: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     194: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     197: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     200: ldc           #29                 // String  ----
     202: invokevirtual #21                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
     205: getstatic     #14                 // Field java/lang/System.err:Ljava/io/PrintStream;
     208: invokevirtual #30                 // Method java/io/PrintStream.println:()V
     211: return

  public synchronized void acquireShared() throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
       9: if_acmpne     25
      12: aload_0
      13: dup
      14: getfield      #10                 // Field exclusive_shared_reentries:I
      17: iconst_1
      18: iadd
      19: putfield      #10                 // Field exclusive_shared_reentries:I
      22: goto          89
      25: aload_0
      26: getfield      #4                  // Field waitingShared:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: invokespecial #33                 // Method okayForShared:()Z
      40: ifne          50
      43: aload_0
      44: invokevirtual #34                 // Method java/lang/Object.wait:()V
      47: goto          36
      50: aload_0
      51: getfield      #7                  // Field activeShared:Ljava/util/List;
      54: aload_1
      55: invokeinterface #35,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      60: pop
      61: aload_0
      62: getfield      #4                  // Field waitingShared:Ljava/util/Set;
      65: aload_1
      66: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      71: pop
      72: goto          89
      75: astore_2
      76: aload_0
      77: getfield      #4                  // Field waitingShared:Ljava/util/Set;
      80: aload_1
      81: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      86: pop
      87: aload_2
      88: athrow
      89: return
    Exception table:
       from    to  target type
          25    61    75   any

  public synchronized void relinquishShared();
    Code:
       0: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
       9: if_acmpne     56
      12: aload_0
      13: dup
      14: getfield      #10                 // Field exclusive_shared_reentries:I
      17: iconst_1
      18: isub
      19: putfield      #10                 // Field exclusive_shared_reentries:I
      22: aload_0
      23: getfield      #10                 // Field exclusive_shared_reentries:I
      26: ifge          102
      29: new           #37                 // class java/lang/IllegalStateException
      32: dup
      33: new           #15                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      40: aload_1
      41: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #38                 // String  relinquished a shared lock (reentrant on exclusive) it did not hold!
      46: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: getfield      #7                  // Field activeShared:Ljava/util/List;
      60: aload_1
      61: invokeinterface #40,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      66: istore_2
      67: iload_2
      68: ifne          98
      71: new           #37                 // class java/lang/IllegalStateException
      74: dup
      75: new           #15                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      82: aload_1
      83: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      86: ldc           #41                 // String  relinquished a shared lock it did not hold!
      88: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: invokevirtual #42                 // Method java/lang/Object.notifyAll:()V
     102: return

  public synchronized void acquireExclusive() throws java.lang.InterruptedException;
    Code:
       0: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
       9: if_acmpne     25
      12: aload_0
      13: dup
      14: getfield      #11                 // Field exclusive_exclusive_reentries:I
      17: iconst_1
      18: iadd
      19: putfield      #11                 // Field exclusive_exclusive_reentries:I
      22: goto          84
      25: aload_0
      26: getfield      #8                  // Field waitingExclusive:Ljava/util/Set;
      29: aload_1
      30: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      35: pop
      36: aload_0
      37: aload_1
      38: invokespecial #43                 // Method okayForExclusive:(Ljava/lang/Thread;)Z
      41: ifne          51
      44: aload_0
      45: invokevirtual #34                 // Method java/lang/Object.wait:()V
      48: goto          36
      51: aload_0
      52: aload_1
      53: putfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
      56: aload_0
      57: getfield      #8                  // Field waitingExclusive:Ljava/util/Set;
      60: aload_1
      61: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      66: pop
      67: goto          84
      70: astore_2
      71: aload_0
      72: getfield      #8                  // Field waitingExclusive:Ljava/util/Set;
      75: aload_1
      76: invokeinterface #36,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      81: pop
      82: aload_2
      83: athrow
      84: return
    Exception table:
       from    to  target type
          25    56    70   any

  public synchronized void relinquishExclusive();
    Code:
       0: invokestatic  #31                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: astore_1
       4: aload_1
       5: aload_0
       6: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
       9: if_acmpeq     39
      12: new           #37                 // class java/lang/IllegalStateException
      15: dup
      16: new           #15                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      23: aload_1
      24: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      27: ldc           #44                 // String  relinquished an exclusive lock it did not hold!
      29: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: aload_0
      40: getfield      #11                 // Field exclusive_exclusive_reentries:I
      43: ifle          59
      46: aload_0
      47: dup
      48: getfield      #11                 // Field exclusive_exclusive_reentries:I
      51: iconst_1
      52: isub
      53: putfield      #11                 // Field exclusive_exclusive_reentries:I
      56: goto          102
      59: aload_0
      60: getfield      #10                 // Field exclusive_shared_reentries:I
      63: ifeq          93
      66: new           #37                 // class java/lang/IllegalStateException
      69: dup
      70: new           #15                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
      77: aload_1
      78: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #45                 // String  relinquished an exclusive lock while it had reentered but not yet relinquished shared lock acquisitions!
      83: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: invokespecial #39                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      92: athrow
      93: aload_0
      94: aconst_null
      95: putfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
      98: aload_0
      99: invokevirtual #42                 // Method java/lang/Object.notifyAll:()V
     102: return

  private boolean okayForShared();
    Code:
       0: aload_0
       1: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
       4: ifnonnull     23
       7: aload_0
       8: getfield      #8                  // Field waitingExclusive:Ljava/util/Set;
      11: invokeinterface #46,  1           // InterfaceMethod java/util/Set.size:()I
      16: ifne          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  private boolean okayForExclusive(java.lang.Thread);
    Code:
       0: aload_0
       1: getfield      #7                  // Field activeShared:Ljava/util/List;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/List.size:()I
       9: istore_2
      10: iload_2
      11: ifne          27
      14: aload_0
      15: getfield      #9                  // Field activeExclusive:Ljava/lang/Thread;
      18: ifnonnull     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn
      27: iload_2
      28: iconst_1
      29: if_icmpne     52
      32: aload_0
      33: getfield      #7                  // Field activeShared:Ljava/util/List;
      36: iconst_0
      37: invokeinterface #48,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      42: aload_1
      43: if_acmpne     50
      46: iconst_1
      47: goto          51
      50: iconst_0
      51: ireturn
      52: new           #2                  // class java/util/HashSet
      55: dup
      56: aload_0
      57: getfield      #7                  // Field activeShared:Ljava/util/List;
      60: invokespecial #49                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      63: astore_3
      64: aload_3
      65: invokeinterface #46,  1           // InterfaceMethod java/util/Set.size:()I
      70: iconst_1
      71: if_icmpne     88
      74: aload_3
      75: aload_1
      76: invokeinterface #50,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      81: ifeq          88
      84: iconst_1
      85: goto          89
      88: iconst_0
      89: ireturn

  public java.lang.String toString();
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #51                 // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #52                 // String  [name=
      16: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #12                 // Field name:Ljava/lang/String;
      23: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: bipush        93
      28: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: invokevirtual #20                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn
}
