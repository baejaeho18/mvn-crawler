Compiled from "ThreadPoolAsynchronousRunner.java"
class com.mchange.v2.async.ThreadPoolAsynchronousRunner$MaxIndividualTaskTimeEnforcer extends java.util.TimerTask {
  com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread pt;

  java.lang.Thread interruptMe;

  java.lang.String threadStr;

  java.lang.String fixedTaskStr;

  final com.mchange.v2.async.ThreadPoolAsynchronousRunner this$0;

  com.mchange.v2.async.ThreadPoolAsynchronousRunner$MaxIndividualTaskTimeEnforcer(com.mchange.v2.async.ThreadPoolAsynchronousRunner, com.mchange.v2.async.ThreadPoolAsynchronousRunner$PoolThread);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner;
       5: aload_0
       6: invokespecial #2                  // Method java/util/TimerTask."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field pt:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field interruptMe:Ljava/lang/Thread;
      19: aload_0
      20: aload_2
      21: invokevirtual #5                  // Method com/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread.toString:()Ljava/lang/String;
      24: putfield      #6                  // Field threadStr:Ljava/lang/String;
      27: aload_0
      28: aconst_null
      29: putfield      #7                  // Field fixedTaskStr:Ljava/lang/String;
      32: return

  com.mchange.v2.async.ThreadPoolAsynchronousRunner$MaxIndividualTaskTimeEnforcer(com.mchange.v2.async.ThreadPoolAsynchronousRunner, java.lang.Thread, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner;
       5: aload_0
       6: invokespecial #2                  // Method java/util/TimerTask."<init>":()V
       9: aload_0
      10: aconst_null
      11: putfield      #3                  // Field pt:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field interruptMe:Ljava/lang/Thread;
      19: aload_0
      20: aload_3
      21: putfield      #6                  // Field threadStr:Ljava/lang/String;
      24: aload_0
      25: aload         4
      27: putfield      #7                  // Field fixedTaskStr:Ljava/lang/String;
      30: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fixedTaskStr:Ljava/lang/String;
       4: ifnull        15
       7: aload_0
       8: getfield      #7                  // Field fixedTaskStr:Ljava/lang/String;
      11: astore_1
      12: goto          56
      15: aload_0
      16: getfield      #3                  // Field pt:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread;
      19: ifnull        53
      22: aload_0
      23: getfield      #1                  // Field this$0:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner;
      26: dup
      27: astore_2
      28: monitorenter
      29: aload_0
      30: getfield      #3                  // Field pt:Lcom/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread;
      33: invokevirtual #8                  // Method com/mchange/v2/async/ThreadPoolAsynchronousRunner$PoolThread.getCurrentTask:()Ljava/lang/Runnable;
      36: invokestatic  #9                  // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      39: astore_1
      40: aload_2
      41: monitorexit
      42: goto          50
      45: astore_3
      46: aload_2
      47: monitorexit
      48: aload_3
      49: athrow
      50: goto          56
      53: ldc           #10                 // String Unknown task?!
      55: astore_1
      56: getstatic     #11                 // Field com/mchange/v2/async/ThreadPoolAsynchronousRunner.logger:Lcom/mchange/v2/log/MLogger;
      59: getstatic     #12                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      62: invokeinterface #13,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      67: ifeq          109
      70: getstatic     #11                 // Field com/mchange/v2/async/ThreadPoolAsynchronousRunner.logger:Lcom/mchange/v2/log/MLogger;
      73: new           #14                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #16                 // String A task has exceeded the maximum allowable task time. Will interrupt() thread [
      82: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_0
      86: getfield      #6                  // Field threadStr:Ljava/lang/String;
      89: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #18                 // String ], with current task:
      94: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: aload_1
      98: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokeinterface #20,  2           // InterfaceMethod com/mchange/v2/log/MLogger.warning:(Ljava/lang/String;)V
     109: aload_0
     110: getfield      #4                  // Field interruptMe:Ljava/lang/Thread;
     113: invokevirtual #21                 // Method java/lang/Thread.interrupt:()V
     116: getstatic     #11                 // Field com/mchange/v2/async/ThreadPoolAsynchronousRunner.logger:Lcom/mchange/v2/log/MLogger;
     119: getstatic     #12                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     122: invokeinterface #13,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     127: ifeq          165
     130: getstatic     #11                 // Field com/mchange/v2/async/ThreadPoolAsynchronousRunner.logger:Lcom/mchange/v2/log/MLogger;
     133: new           #14                 // class java/lang/StringBuilder
     136: dup
     137: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
     140: ldc           #22                 // String Thread [
     142: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_0
     146: getfield      #6                  // Field threadStr:Ljava/lang/String;
     149: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     152: ldc           #23                 // String ] interrupted.
     154: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokeinterface #20,  2           // InterfaceMethod com/mchange/v2/log/MLogger.warning:(Ljava/lang/String;)V
     165: return
    Exception table:
       from    to  target type
          29    42    45   any
          45    48    45   any
}
