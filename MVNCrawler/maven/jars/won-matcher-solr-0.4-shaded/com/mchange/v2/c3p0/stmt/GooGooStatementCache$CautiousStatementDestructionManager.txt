Compiled from "GooGooStatementCache.java"
final class com.mchange.v2.c3p0.stmt.GooGooStatementCache$CautiousStatementDestructionManager extends com.mchange.v2.c3p0.stmt.GooGooStatementCache$StatementDestructionManager {
  java.util.HashSet inUseConnections;

  java.util.HashMap connectionsToZombieStatementSets;

  com.mchange.v2.async.AsynchronousRunner deferredStatementDestroyer;

  boolean closed;

  static final boolean $assertionsDisabled;

  final com.mchange.v2.c3p0.stmt.GooGooStatementCache this$0;

  synchronized void close();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #1                  // Field closed:Z
       5: return

  com.mchange.v2.c3p0.stmt.GooGooStatementCache$CautiousStatementDestructionManager(com.mchange.v2.c3p0.stmt.GooGooStatementCache, com.mchange.v2.async.AsynchronousRunner);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache;
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #3                  // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache$StatementDestructionManager."<init>":(Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache;Lcom/mchange/v2/async/AsynchronousRunner;)V
      11: aload_0
      12: new           #4                  // class java/util/HashSet
      15: dup
      16: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      19: putfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
      22: aload_0
      23: new           #7                  // class java/util/HashMap
      26: dup
      27: invokespecial #8                  // Method java/util/HashMap."<init>":()V
      30: putfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      33: aload_0
      34: iconst_0
      35: putfield      #1                  // Field closed:Z
      38: aload_0
      39: aload_2
      40: putfield      #10                 // Field deferredStatementDestroyer:Lcom/mchange/v2/async/AsynchronousRunner;
      43: return

  private java.lang.String trace();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
       4: invokevirtual #11                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          90
      26: aload_3
      27: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        4
      34: aload_0
      35: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      38: aload         4
      40: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #16                 // class java/util/Set
      46: astore        5
      48: aload         5
      50: dup
      51: astore        6
      53: monitorenter
      54: iload_2
      55: aload         5
      57: ifnonnull     64
      60: iconst_0
      61: goto          71
      64: aload         5
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      71: iadd
      72: istore_2
      73: aload         6
      75: monitorexit
      76: goto          87
      79: astore        7
      81: aload         6
      83: monitorexit
      84: aload         7
      86: athrow
      87: goto          17
      90: new           #18                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      97: aload_0
      98: invokevirtual #20                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     101: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     104: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     107: ldc           #23                 // String  [connections in use:
     109: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     112: aload_0
     113: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
     116: invokevirtual #24                 // Method java/util/HashSet.size:()I
     119: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     122: ldc           #26                 // String ; connections with deferred statements:
     124: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_1
     128: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
     133: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     136: ldc           #27                 // String ; statements to destroy:
     138: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: iload_2
     142: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: ldc           #28                 // String ]
     147: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     153: areturn
    Exception table:
       from    to  target type
          54    76    79   any
          79    84    79   any

  private void printAllStats();
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache;
       4: invokestatic  #30                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache.access$300:(Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache;)V
       7: getstatic     #31                 // Field java/lang/System.err:Ljava/io/PrintStream;
      10: aload_0
      11: invokespecial #32                 // Method trace:()Ljava/lang/String;
      14: invokevirtual #33                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
      17: return

  synchronized void waitMarkConnectionInUse(java.sql.Connection) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ifne          96
       7: aload_0
       8: aload_1
       9: invokespecial #34                 // Method statementsUnderDestruction:(Ljava/lang/Object;)Ljava/util/Set;
      12: astore_2
      13: aload_2
      14: ifnull        87
      17: invokestatic  #35                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache.access$100:()Lcom/mchange/v2/log/MLogger;
      20: getstatic     #36                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      23: invokeinterface #37,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      28: ifeq          71
      31: invokestatic  #35                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache.access$100:()Lcom/mchange/v2/log/MLogger;
      34: getstatic     #36                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      37: new           #18                 // class java/lang/StringBuilder
      40: dup
      41: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      44: ldc           #38                 // String A connection is waiting to be accepted by the Statement cache because
      46: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_2
      50: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      55: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      58: ldc           #39                 // String  cached Statements are still being destroyed.
      60: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #40,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      71: aload_2
      72: invokeinterface #41,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      77: ifne          87
      80: aload_0
      81: invokevirtual #42                 // Method java/lang/Object.wait:()V
      84: goto          71
      87: aload_0
      88: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
      91: aload_1
      92: invokevirtual #43                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      95: pop
      96: return

  synchronized boolean tryMarkConnectionInUse(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ifne          86
       7: aload_0
       8: aload_1
       9: invokespecial #34                 // Method statementsUnderDestruction:(Ljava/lang/Object;)Ljava/util/Set;
      12: astore_2
      13: aload_2
      14: ifnull        75
      17: aload_2
      18: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      23: istore_3
      24: invokestatic  #35                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache.access$100:()Lcom/mchange/v2/log/MLogger;
      27: getstatic     #36                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      30: invokeinterface #37,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      35: ifeq          73
      38: invokestatic  #35                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache.access$100:()Lcom/mchange/v2/log/MLogger;
      41: getstatic     #36                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      44: new           #18                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #44                 // String A connection could not be accepted by the Statement cache because
      53: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: iload_3
      57: invokevirtual #25                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: ldc           #39                 // String  cached Statements are still being destroyed.
      62: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      68: invokeinterface #40,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      73: iconst_0
      74: ireturn
      75: aload_0
      76: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
      79: aload_1
      80: invokevirtual #43                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      83: pop
      84: iconst_1
      85: ireturn
      86: iconst_1
      87: ireturn

  synchronized void unmarkConnectionInUse(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
       4: aload_1
       5: invokevirtual #45                 // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
       8: istore_2
       9: aload_0
      10: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      13: aload_1
      14: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #16                 // class java/util/Set
      20: astore_3
      21: aload_3
      22: ifnull        30
      25: aload_0
      26: aload_1
      27: invokespecial #46                 // Method destroyAllTrackedStatements:(Ljava/lang/Object;)V
      30: return

  synchronized void deferredDestroyStatement(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field closed:Z
       4: ifne          74
       7: aload_0
       8: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
      11: aload_1
      12: invokevirtual #47                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      15: ifeq          66
      18: aload_0
      19: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      22: aload_1
      23: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #16                 // class java/util/Set
      29: astore_3
      30: aload_3
      31: ifnonnull     55
      34: new           #4                  // class java/util/HashSet
      37: dup
      38: invokespecial #5                  // Method java/util/HashSet."<init>":()V
      41: invokestatic  #48                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      44: astore_3
      45: aload_0
      46: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      49: aload_1
      50: aload_3
      51: invokevirtual #49                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_3
      56: aload_2
      57: invokeinterface #50,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      62: pop
      63: goto          79
      66: aload_0
      67: aload_2
      68: invokevirtual #51                 // Method uncheckedDestroyStatement:(Ljava/lang/Object;)V
      71: goto          79
      74: aload_0
      75: aload_2
      76: invokevirtual #51                 // Method uncheckedDestroyStatement:(Ljava/lang/Object;)V
      79: return

  synchronized int countConnectionsInUse();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
       4: invokevirtual #24                 // Method java/util/HashSet.size:()I
       7: ireturn

  synchronized boolean knownInUse(java.sql.Connection);
    Code:
       0: aload_0
       1: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
       4: aload_1
       5: invokevirtual #47                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
       8: ireturn

  java.lang.Boolean tvlInUse(java.sql.Connection);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #52                 // Method knownInUse:(Ljava/sql/Connection;)Z
       5: invokestatic  #53                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       8: areturn

  synchronized int getNumConnectionsInUse();
    Code:
       0: aload_0
       1: getfield      #6                  // Field inUseConnections:Ljava/util/HashSet;
       4: invokevirtual #24                 // Method java/util/HashSet.size:()I
       7: ireturn

  synchronized int getNumConnectionsWithDeferredDestroyStatements();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
       4: invokevirtual #11                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      12: ireturn

  synchronized int getNumDeferredDestroyStatements();
    Code:
       0: aload_0
       1: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
       4: invokevirtual #11                 // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: astore_1
       8: iconst_0
       9: istore_2
      10: aload_1
      11: invokeinterface #12,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #13,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          90
      26: aload_3
      27: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: astore        4
      34: aload_0
      35: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      38: aload         4
      40: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #16                 // class java/util/Set
      46: astore        5
      48: aload         5
      50: dup
      51: astore        6
      53: monitorenter
      54: iload_2
      55: aload         5
      57: ifnonnull     64
      60: iconst_0
      61: goto          71
      64: aload         5
      66: invokeinterface #17,  1           // InterfaceMethod java/util/Set.size:()I
      71: iadd
      72: istore_2
      73: aload         6
      75: monitorexit
      76: goto          87
      79: astore        7
      81: aload         6
      83: monitorexit
      84: aload         7
      86: athrow
      87: goto          17
      90: iload_2
      91: ireturn
    Exception table:
       from    to  target type
          54    76    79   any
          79    84    79   any

  private void trackedDestroyStatement(java.lang.Object, java.lang.Object);
    Code:
       0: new           #54                 // class com/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager$1TrackedStatementCloseTask
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #55                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager$1TrackedStatementCloseTask."<init>":(Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager;Ljava/lang/Object;Ljava/lang/Object;)V
      10: astore_3
      11: aload_0
      12: getfield      #1                  // Field closed:Z
      15: ifne          31
      18: aload_0
      19: getfield      #10                 // Field deferredStatementDestroyer:Lcom/mchange/v2/async/AsynchronousRunner;
      22: aload_3
      23: invokeinterface #56,  2           // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      28: goto          37
      31: aload_3
      32: invokeinterface #57,  1           // InterfaceMethod java/lang/Runnable.run:()V
      37: return

  private void destroyAllTrackedStatements(java.lang.Object);
    Code:
       0: new           #58                 // class com/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager$1TrackedDestroyAllStatementsTask
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #59                 // Method com/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager$1TrackedDestroyAllStatementsTask."<init>":(Lcom/mchange/v2/c3p0/stmt/GooGooStatementCache$CautiousStatementDestructionManager;Ljava/lang/Object;)V
       9: astore_2
      10: aload_0
      11: getfield      #1                  // Field closed:Z
      14: ifne          30
      17: aload_0
      18: getfield      #10                 // Field deferredStatementDestroyer:Lcom/mchange/v2/async/AsynchronousRunner;
      21: aload_2
      22: invokeinterface #56,  2           // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      27: goto          36
      30: aload_2
      31: invokeinterface #57,  1           // InterfaceMethod java/lang/Runnable.run:()V
      36: return

  private java.util.Set statementsUnderDestruction(java.lang.Object);
    Code:
       0: getstatic     #60                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #61                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #62                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #63                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #9                  // Field connectionsToZombieStatementSets:Ljava/util/HashMap;
      25: aload_1
      26: invokevirtual #15                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #16                 // class java/util/Set
      32: areturn

  static {};
    Code:
       0: ldc           #64                 // class com/mchange/v2/c3p0/stmt/GooGooStatementCache
       2: invokevirtual #65                 // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #60                 // Field $assertionsDisabled:Z
      16: return
}
