Compiled from "JndiRefForwardingDataSource.java"
final class com.mchange.v2.c3p0.JndiRefForwardingDataSource extends com.mchange.v2.c3p0.impl.JndiRefDataSourceBase implements javax.sql.DataSource {
  static final com.mchange.v2.log.MLogger logger;

  transient javax.sql.DataSource cachedInner;

  private static final long serialVersionUID;

  private static final short VERSION;

  public com.mchange.v2.c3p0.JndiRefForwardingDataSource();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public com.mchange.v2.c3p0.JndiRefForwardingDataSource(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #2                  // Method com/mchange/v2/c3p0/impl/JndiRefDataSourceBase."<init>":(Z)V
       5: aload_0
       6: invokespecial #3                  // Method setUpPropertyListeners:()V
       9: return

  private void setUpPropertyListeners();
    Code:
       0: new           #4                  // class com/mchange/v2/c3p0/JndiRefForwardingDataSource$1
       3: dup
       4: aload_0
       5: invokespecial #5                  // Method com/mchange/v2/c3p0/JndiRefForwardingDataSource$1."<init>":(Lcom/mchange/v2/c3p0/JndiRefForwardingDataSource;)V
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokevirtual #6                  // Method addVetoableChangeListener:(Ljava/beans/VetoableChangeListener;)V
      14: new           #7                  // class com/mchange/v2/c3p0/JndiRefForwardingDataSource$2
      17: dup
      18: aload_0
      19: invokespecial #8                  // Method com/mchange/v2/c3p0/JndiRefForwardingDataSource$2."<init>":(Lcom/mchange/v2/c3p0/JndiRefForwardingDataSource;)V
      22: astore_2
      23: aload_0
      24: aload_2
      25: invokevirtual #9                  // Method addPropertyChangeListener:(Ljava/beans/PropertyChangeListener;)V
      28: return

  private javax.sql.DataSource dereference() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getJndiName:()Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: invokevirtual #11                 // Method getJndiEnv:()Ljava/util/Hashtable;
       9: astore_2
      10: aload_2
      11: ifnull        26
      14: new           #12                 // class javax/naming/InitialContext
      17: dup
      18: aload_2
      19: invokespecial #13                 // Method javax/naming/InitialContext."<init>":(Ljava/util/Hashtable;)V
      22: astore_3
      23: goto          34
      26: new           #12                 // class javax/naming/InitialContext
      29: dup
      30: invokespecial #14                 // Method javax/naming/InitialContext."<init>":()V
      33: astore_3
      34: aload_1
      35: instanceof    #15                 // class java/lang/String
      38: ifeq          53
      41: aload_3
      42: aload_1
      43: checkcast     #15                 // class java/lang/String
      46: invokevirtual #16                 // Method javax/naming/InitialContext.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      49: checkcast     #17                 // class javax/sql/DataSource
      52: areturn
      53: aload_1
      54: instanceof    #18                 // class javax/naming/Name
      57: ifeq          72
      60: aload_3
      61: aload_1
      62: checkcast     #18                 // class javax/naming/Name
      65: invokevirtual #19                 // Method javax/naming/InitialContext.lookup:(Ljavax/naming/Name;)Ljava/lang/Object;
      68: checkcast     #17                 // class javax/sql/DataSource
      71: areturn
      72: new           #20                 // class java/sql/SQLException
      75: dup
      76: new           #21                 // class java/lang/StringBuilder
      79: dup
      80: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      83: ldc           #23                 // String Could not find ConnectionPoolDataSource with JNDI name:
      85: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokespecial #27                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      98: athrow
      99: astore_3
     100: getstatic     #29                 // Field logger:Lcom/mchange/v2/log/MLogger;
     103: getstatic     #30                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     106: invokeinterface #31,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     111: ifeq          128
     114: getstatic     #29                 // Field logger:Lcom/mchange/v2/log/MLogger;
     117: getstatic     #30                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     120: ldc           #32                 // String An Exception occurred while trying to look up a target DataSource via JNDI!
     122: aload_3
     123: invokeinterface #33,  4           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     128: aload_3
     129: invokestatic  #34                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     132: athrow
    Exception table:
       from    to  target type
          10    52    99   Class javax/naming/NamingException
          53    71    99   Class javax/naming/NamingException
          72    99    99   Class javax/naming/NamingException

  private synchronized javax.sql.DataSource inner() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: getfield      #35                 // Field cachedInner:Ljavax/sql/DataSource;
       4: ifnull        12
       7: aload_0
       8: getfield      #35                 // Field cachedInner:Ljavax/sql/DataSource;
      11: areturn
      12: aload_0
      13: invokespecial #36                 // Method dereference:()Ljavax/sql/DataSource;
      16: astore_1
      17: aload_0
      18: invokevirtual #37                 // Method isCaching:()Z
      21: ifeq          29
      24: aload_0
      25: aload_1
      26: putfield      #35                 // Field cachedInner:Ljavax/sql/DataSource;
      29: aload_1
      30: areturn

  public java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: invokeinterface #39,  1           // InterfaceMethod javax/sql/DataSource.getConnection:()Ljava/sql/Connection;
       9: areturn

  public java.sql.Connection getConnection(java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: aload_1
       5: aload_2
       6: invokeinterface #40,  3           // InterfaceMethod javax/sql/DataSource.getConnection:(Ljava/lang/String;Ljava/lang/String;)Ljava/sql/Connection;
      11: areturn

  public java.io.PrintWriter getLogWriter() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: invokeinterface #41,  1           // InterfaceMethod javax/sql/DataSource.getLogWriter:()Ljava/io/PrintWriter;
       9: areturn

  public void setLogWriter(java.io.PrintWriter) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod javax/sql/DataSource.setLogWriter:(Ljava/io/PrintWriter;)V
      10: return

  public int getLoginTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: invokeinterface #43,  1           // InterfaceMethod javax/sql/DataSource.getLoginTimeout:()I
       9: ireturn

  public void setLoginTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokespecial #38                 // Method inner:()Ljavax/sql/DataSource;
       4: iload_1
       5: invokeinterface #44,  2           // InterfaceMethod javax/sql/DataSource.setLoginTimeout:(I)V
      10: return

  private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: iconst_1
       2: invokevirtual #46                 // Method java/io/ObjectOutputStream.writeShort:(I)V
       5: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #47                 // Method java/io/ObjectInputStream.readShort:()S
       4: istore_2
       5: iload_2
       6: lookupswitch  { // 1
                     1: 24
               default: 31
          }
      24: aload_0
      25: invokespecial #3                  // Method setUpPropertyListeners:()V
      28: goto          58
      31: new           #48                 // class java/io/IOException
      34: dup
      35: new           #21                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #49                 // String Unsupported Serialized Version:
      44: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload_2
      48: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      51: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokespecial #51                 // Method java/io/IOException."<init>":(Ljava/lang/String;)V
      57: athrow
      58: return

  public boolean isWrapperFor(java.lang.Class<?>) throws java.sql.SQLException;
    Code:
       0: iconst_0
       1: ireturn

  public <T> T unwrap(java.lang.Class<T>) throws java.sql.SQLException;
    Code:
       0: new           #20                 // class java/sql/SQLException
       3: dup
       4: new           #21                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      15: ldc           #52                 // String  is not a Wrapper for
      17: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: aload_1
      21: invokevirtual #53                 // Method java/lang/Class.getName:()Ljava/lang/String;
      24: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #27                 // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      33: athrow

  static {};
    Code:
       0: ldc           #45                 // class com/mchange/v2/c3p0/JndiRefForwardingDataSource
       2: invokestatic  #54                 // Method com/mchange/v2/log/MLog.getLogger:(Ljava/lang/Class;)Lcom/mchange/v2/log/MLogger;
       5: putstatic     #29                 // Field logger:Lcom/mchange/v2/log/MLogger;
       8: return
}
