Compiled from "NewProxyPreparedStatement.java"
public final class com.mchange.v2.c3p0.impl.NewProxyPreparedStatement implements java.sql.PreparedStatement,com.mchange.v2.c3p0.C3P0ProxyStatement,com.mchange.v2.c3p0.impl.ProxyResultSetDetachable {
  protected java.sql.PreparedStatement inner;

  private static final com.mchange.v2.log.MLogger logger;

  volatile com.mchange.v2.c3p0.impl.NewPooledConnection parentPooledConnection;

  javax.sql.ConnectionEventListener cel;

  boolean is_cached;

  com.mchange.v2.c3p0.impl.NewProxyConnection creatorProxy;

  java.util.HashSet myProxyResultSets;

  private void __setInner(java.sql.PreparedStatement);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       5: return

  com.mchange.v2.c3p0.impl.NewProxyPreparedStatement(java.sql.PreparedStatement);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class com/mchange/v2/c3p0/impl/NewProxyPreparedStatement$1
       8: dup
       9: aload_0
      10: invokespecial #5                  // Method com/mchange/v2/c3p0/impl/NewProxyPreparedStatement$1."<init>":(Lcom/mchange/v2/c3p0/impl/NewProxyPreparedStatement;)V
      13: putfield      #6                  // Field cel:Ljavax/sql/ConnectionEventListener;
      16: aload_0
      17: new           #7                  // class java/util/HashSet
      20: dup
      21: invokespecial #8                  // Method java/util/HashSet."<init>":()V
      24: putfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      27: aload_0
      28: aload_1
      29: invokespecial #10                 // Method __setInner:(Ljava/sql/PreparedStatement;)V
      32: return

  public final boolean execute() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #12,  1           // InterfaceMethod java/sql/PreparedStatement.execute:()Z
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setBoolean(int, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: invokeinterface #21,  3           // InterfaceMethod java/sql/PreparedStatement.setBoolean:(IZ)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setByte(int, byte) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: invokeinterface #22,  3           // InterfaceMethod java/sql/PreparedStatement.setByte:(IB)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setShort(int, short) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: invokeinterface #23,  3           // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setInt(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: invokeinterface #24,  3           // InterfaceMethod java/sql/PreparedStatement.setInt:(II)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setLong(int, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: lload_2
      10: invokeinterface #25,  4           // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      15: goto          63
      18: astore        4
      20: aload_0
      21: invokevirtual #14                 // Method isDetached:()Z
      24: ifeq          35
      27: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      29: aload         4
      31: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      34: athrow
      35: aload         4
      37: athrow
      38: astore        4
      40: aload_0
      41: invokevirtual #14                 // Method isDetached:()Z
      44: ifne          57
      47: aload_0
      48: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      51: aload         4
      53: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: aload         4
      59: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      62: athrow
      63: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    38   Class java/lang/Exception

  public final void setFloat(int, float) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: fload_2
      10: invokeinterface #26,  3           // InterfaceMethod java/sql/PreparedStatement.setFloat:(IF)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setDouble(int, double) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: dload_2
      10: invokeinterface #27,  4           // InterfaceMethod java/sql/PreparedStatement.setDouble:(ID)V
      15: goto          63
      18: astore        4
      20: aload_0
      21: invokevirtual #14                 // Method isDetached:()Z
      24: ifeq          35
      27: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      29: aload         4
      31: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      34: athrow
      35: aload         4
      37: athrow
      38: astore        4
      40: aload_0
      41: invokevirtual #14                 // Method isDetached:()Z
      44: ifne          57
      47: aload_0
      48: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      51: aload         4
      53: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: aload         4
      59: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      62: athrow
      63: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    38   Class java/lang/Exception

  public final void setTimestamp(int, java.sql.Timestamp, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #28,  4           // InterfaceMethod java/sql/PreparedStatement.setTimestamp:(ILjava/sql/Timestamp;Ljava/util/Calendar;)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setTimestamp(int, java.sql.Timestamp) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #29,  3           // InterfaceMethod java/sql/PreparedStatement.setTimestamp:(ILjava/sql/Timestamp;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final java.sql.ResultSetMetaData getMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #30,  1           // InterfaceMethod java/sql/PreparedStatement.getMetaData:()Ljava/sql/ResultSetMetaData;
      13: areturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final java.sql.ResultSet executeQuery() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #31,  1           // InterfaceMethod java/sql/PreparedStatement.executeQuery:()Ljava/sql/ResultSet;
      13: astore_1
      14: aload_1
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      24: aload_0
      25: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      28: aload_1
      29: invokevirtual #32                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markActiveResultSetForStatement:(Ljava/sql/Statement;Ljava/sql/ResultSet;)V
      32: new           #33                 // class com/mchange/v2/c3p0/impl/NewProxyResultSet
      35: dup
      36: aload_1
      37: aload_0
      38: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      41: aload_0
      42: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      45: aload_0
      46: invokespecial #34                 // Method com/mchange/v2/c3p0/impl/NewProxyResultSet."<init>":(Ljava/sql/ResultSet;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;Ljava/lang/Object;Ljava/lang/Object;)V
      49: astore_2
      50: aload_0
      51: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      54: dup
      55: astore_3
      56: monitorenter
      57: aload_0
      58: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      61: aload_2
      62: invokevirtual #35                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_3
      67: monitorexit
      68: goto          78
      71: astore        4
      73: aload_3
      74: monitorexit
      75: aload         4
      77: athrow
      78: aload_2
      79: areturn
      80: astore_1
      81: aload_0
      82: invokevirtual #14                 // Method isDetached:()Z
      85: ifeq          95
      88: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      90: aload_1
      91: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      94: athrow
      95: aload_1
      96: athrow
      97: astore_1
      98: aload_0
      99: invokevirtual #14                 // Method isDetached:()Z
     102: ifne          114
     105: aload_0
     106: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     109: aload_1
     110: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     113: athrow
     114: aload_1
     115: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     118: athrow
    Exception table:
       from    to  target type
          57    68    71   any
          71    75    71   any
           0    19    80   Class java/lang/NullPointerException
          20    79    80   Class java/lang/NullPointerException
           0    19    97   Class java/lang/Exception
          20    79    97   Class java/lang/Exception

  public final int executeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #36,  1           // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void addBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #37,  1           // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final long executeLargeUpdate() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #38,  1           // InterfaceMethod java/sql/PreparedStatement.executeLargeUpdate:()J
      13: lreturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setNull(int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: invokeinterface #39,  3           // InterfaceMethod java/sql/PreparedStatement.setNull:(II)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNull(int, int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: iload_2
      10: aload_3
      11: invokeinterface #40,  4           // InterfaceMethod java/sql/PreparedStatement.setNull:(IILjava/lang/String;)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setBigDecimal(int, java.math.BigDecimal) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #41,  3           // InterfaceMethod java/sql/PreparedStatement.setBigDecimal:(ILjava/math/BigDecimal;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #42,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setBytes(int, byte[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #43,  3           // InterfaceMethod java/sql/PreparedStatement.setBytes:(I[B)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setAsciiStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #44,  5           // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setAsciiStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #45,  3           // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setAsciiStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: invokeinterface #46,  4           // InterfaceMethod java/sql/PreparedStatement.setAsciiStream:(ILjava/io/InputStream;I)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setUnicodeStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: invokeinterface #47,  4           // InterfaceMethod java/sql/PreparedStatement.setUnicodeStream:(ILjava/io/InputStream;I)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setBinaryStream(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #48,  5           // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setBinaryStream(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #49,  3           // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setBinaryStream(int, java.io.InputStream, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: invokeinterface #50,  4           // InterfaceMethod java/sql/PreparedStatement.setBinaryStream:(ILjava/io/InputStream;I)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void clearParameters() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #51,  1           // InterfaceMethod java/sql/PreparedStatement.clearParameters:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final void setObject(int, java.lang.Object, int, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: iload         4
      13: invokeinterface #52,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;II)V
      18: goto          66
      21: astore        5
      23: aload_0
      24: invokevirtual #14                 // Method isDetached:()Z
      27: ifeq          38
      30: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      32: aload         5
      34: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      37: athrow
      38: aload         5
      40: athrow
      41: astore        5
      43: aload_0
      44: invokevirtual #14                 // Method isDetached:()Z
      47: ifne          60
      50: aload_0
      51: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      54: aload         5
      56: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      59: athrow
      60: aload         5
      62: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      65: athrow
      66: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/NullPointerException
           0    18    41   Class java/lang/Exception

  public final void setObject(int, java.lang.Object, java.sql.SQLType, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: aload_3
      11: iload         4
      13: invokeinterface #53,  5           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;Ljava/sql/SQLType;I)V
      18: goto          66
      21: astore        5
      23: aload_0
      24: invokevirtual #14                 // Method isDetached:()Z
      27: ifeq          38
      30: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      32: aload         5
      34: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      37: athrow
      38: aload         5
      40: athrow
      41: astore        5
      43: aload_0
      44: invokevirtual #14                 // Method isDetached:()Z
      47: ifne          60
      50: aload_0
      51: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      54: aload         5
      56: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      59: athrow
      60: aload         5
      62: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      65: athrow
      66: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/NullPointerException
           0    18    41   Class java/lang/Exception

  public final void setObject(int, java.lang.Object, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: invokeinterface #54,  4           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;I)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setObject(int, java.lang.Object) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #55,  3           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setObject(int, java.lang.Object, java.sql.SQLType) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #56,  4           // InterfaceMethod java/sql/PreparedStatement.setObject:(ILjava/lang/Object;Ljava/sql/SQLType;)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #57,  3           // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #58,  5           // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setCharacterStream(int, java.io.Reader, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: iload_3
      11: invokeinterface #59,  4           // InterfaceMethod java/sql/PreparedStatement.setCharacterStream:(ILjava/io/Reader;I)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setRef(int, java.sql.Ref) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #60,  3           // InterfaceMethod java/sql/PreparedStatement.setRef:(ILjava/sql/Ref;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setBlob(int, java.sql.Blob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #61,  3           // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/sql/Blob;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setBlob(int, java.io.InputStream, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #62,  5           // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/io/InputStream;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setBlob(int, java.io.InputStream) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #63,  3           // InterfaceMethod java/sql/PreparedStatement.setBlob:(ILjava/io/InputStream;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #64,  3           // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/io/Reader;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #65,  5           // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/io/Reader;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setClob(int, java.sql.Clob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #66,  3           // InterfaceMethod java/sql/PreparedStatement.setClob:(ILjava/sql/Clob;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setArray(int, java.sql.Array) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #67,  3           // InterfaceMethod java/sql/PreparedStatement.setArray:(ILjava/sql/Array;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final java.sql.ParameterMetaData getParameterMetaData() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #68,  1           // InterfaceMethod java/sql/PreparedStatement.getParameterMetaData:()Ljava/sql/ParameterMetaData;
      13: areturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setRowId(int, java.sql.RowId) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #69,  3           // InterfaceMethod java/sql/PreparedStatement.setRowId:(ILjava/sql/RowId;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNString(int, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #70,  3           // InterfaceMethod java/sql/PreparedStatement.setNString:(ILjava/lang/String;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNCharacterStream(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #71,  5           // InterfaceMethod java/sql/PreparedStatement.setNCharacterStream:(ILjava/io/Reader;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setNCharacterStream(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #72,  3           // InterfaceMethod java/sql/PreparedStatement.setNCharacterStream:(ILjava/io/Reader;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNClob(int, java.io.Reader) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #73,  3           // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/io/Reader;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNClob(int, java.sql.NClob) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #74,  3           // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/sql/NClob;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setNClob(int, java.io.Reader, long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: lload_3
      11: invokeinterface #75,  5           // InterfaceMethod java/sql/PreparedStatement.setNClob:(ILjava/io/Reader;J)V
      16: goto          64
      19: astore        5
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         5
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         5
      38: athrow
      39: astore        5
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         5
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         5
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setSQLXML(int, java.sql.SQLXML) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #76,  3           // InterfaceMethod java/sql/PreparedStatement.setSQLXML:(ILjava/sql/SQLXML;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setURL(int, java.net.URL) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #77,  3           // InterfaceMethod java/sql/PreparedStatement.setURL:(ILjava/net/URL;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setTime(int, java.sql.Time, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #78,  4           // InterfaceMethod java/sql/PreparedStatement.setTime:(ILjava/sql/Time;Ljava/util/Calendar;)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setTime(int, java.sql.Time) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #79,  3           // InterfaceMethod java/sql/PreparedStatement.setTime:(ILjava/sql/Time;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final void setDate(int, java.sql.Date, java.util.Calendar) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #80,  4           // InterfaceMethod java/sql/PreparedStatement.setDate:(ILjava/sql/Date;Ljava/util/Calendar;)V
      16: goto          64
      19: astore        4
      21: aload_0
      22: invokevirtual #14                 // Method isDetached:()Z
      25: ifeq          36
      28: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      30: aload         4
      32: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      35: athrow
      36: aload         4
      38: athrow
      39: astore        4
      41: aload_0
      42: invokevirtual #14                 // Method isDetached:()Z
      45: ifne          58
      48: aload_0
      49: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      52: aload         4
      54: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      57: athrow
      58: aload         4
      60: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    16    19   Class java/lang/NullPointerException
           0    16    39   Class java/lang/Exception

  public final void setDate(int, java.sql.Date) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: aload_2
      10: invokeinterface #81,  3           // InterfaceMethod java/sql/PreparedStatement.setDate:(ILjava/sql/Date;)V
      15: goto          57
      18: astore_3
      19: aload_0
      20: invokevirtual #14                 // Method isDetached:()Z
      23: ifeq          33
      26: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      28: aload_3
      29: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      32: athrow
      33: aload_3
      34: athrow
      35: astore_3
      36: aload_0
      37: invokevirtual #14                 // Method isDetached:()Z
      40: ifne          52
      43: aload_0
      44: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      47: aload_3
      48: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      51: athrow
      52: aload_3
      53: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      56: athrow
      57: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/NullPointerException
           0    15    35   Class java/lang/Exception

  public final boolean execute(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #82,  3           // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;[Ljava/lang/String;)Z
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final boolean execute(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #83,  2           // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;)Z
      14: ireturn
      15: astore_2
      16: aload_0
      17: invokevirtual #14                 // Method isDetached:()Z
      20: ifeq          30
      23: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      25: aload_2
      26: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      29: athrow
      30: aload_2
      31: athrow
      32: astore_2
      33: aload_0
      34: invokevirtual #14                 // Method isDetached:()Z
      37: ifne          49
      40: aload_0
      41: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      44: aload_2
      45: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      48: athrow
      49: aload_2
      50: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      53: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/NullPointerException
           0    14    32   Class java/lang/Exception

  public final boolean execute(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: iload_2
      10: invokeinterface #84,  3           // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;I)Z
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final boolean execute(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #85,  3           // InterfaceMethod java/sql/PreparedStatement.execute:(Ljava/lang/String;[I)Z
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final void close() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: invokevirtual #14                 // Method isDetached:()Z
       8: ifne          248
      11: aload_0
      12: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      15: dup
      16: astore_1
      17: monitorenter
      18: aload_0
      19: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      22: invokevirtual #86                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      25: astore_2
      26: aload_2
      27: invokeinterface #87,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          142
      35: aload_2
      36: invokeinterface #88,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: checkcast     #89                 // class java/sql/ResultSet
      44: astore_3
      45: aload_2
      46: invokeinterface #90,  1           // InterfaceMethod java/util/Iterator.remove:()V
      51: aload_3
      52: invokeinterface #91,  1           // InterfaceMethod java/sql/ResultSet.close:()V
      57: goto          91
      60: astore        4
      62: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
      65: getstatic     #94                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      68: invokeinterface #95,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      73: ifeq          91
      76: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
      79: getstatic     #94                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      82: ldc           #96                 // String Exception on close of apparently orphaned ResultSet.
      84: aload         4
      86: invokeinterface #97,  4           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      91: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
      94: getstatic     #98                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      97: invokeinterface #95,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     102: ifeq          139
     105: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
     108: getstatic     #98                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     111: new           #99                 // class java/lang/StringBuilder
     114: dup
     115: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     118: aload_0
     119: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     122: ldc           #102                // String  closed orphaned ResultSet:
     124: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     127: aload_3
     128: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     134: invokeinterface #105,  3          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     139: goto          26
     142: aload_1
     143: monitorexit
     144: goto          154
     147: astore        5
     149: aload_1
     150: monitorexit
     151: aload         5
     153: athrow
     154: aload_0
     155: getfield      #106                // Field is_cached:Z
     158: ifeq          175
     161: aload_0
     162: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     165: aload_0
     166: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
     169: invokevirtual #107                // Method com/mchange/v2/c3p0/impl/NewPooledConnection.checkinStatement:(Ljava/sql/Statement;)V
     172: goto          234
     175: aload_0
     176: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     179: aload_0
     180: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
     183: invokevirtual #108                // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markInactiveUncachedStatement:(Ljava/sql/Statement;)V
     186: aload_0
     187: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
     190: invokeinterface #109,  1          // InterfaceMethod java/sql/PreparedStatement.close:()V
     195: goto          234
     198: astore_1
     199: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
     202: getstatic     #94                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     205: invokeinterface #95,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     210: ifeq          227
     213: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
     216: getstatic     #94                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     219: ldc           #110                // String Exception on close of inner statement.
     221: aload_1
     222: invokeinterface #97,  4           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     227: aload_1
     228: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     231: astore_2
     232: aload_2
     233: athrow
     234: aload_0
     235: invokespecial #1                  // Method detach:()V
     238: aload_0
     239: aconst_null
     240: putfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
     243: aload_0
     244: aconst_null
     245: putfield      #111                // Field creatorProxy:Lcom/mchange/v2/c3p0/impl/NewProxyConnection;
     248: goto          333
     251: astore_1
     252: aload_0
     253: invokevirtual #14                 // Method isDetached:()Z
     256: ifeq          306
     259: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
     262: getstatic     #98                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     265: invokeinterface #95,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     270: ifeq          308
     273: getstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
     276: getstatic     #98                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     279: new           #99                 // class java/lang/StringBuilder
     282: dup
     283: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
     286: aload_0
     287: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     290: ldc           #112                // String : close() called more than once.
     292: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokeinterface #105,  3          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     303: goto          308
     306: aload_1
     307: athrow
     308: goto          333
     311: astore_1
     312: aload_0
     313: invokevirtual #14                 // Method isDetached:()Z
     316: ifne          328
     319: aload_0
     320: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     323: aload_1
     324: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     327: athrow
     328: aload_1
     329: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     332: athrow
     333: return
    Exception table:
       from    to  target type
          51    57    60   Class java/sql/SQLException
          18   144   147   any
         147   151   147   any
         186   195   198   Class java/lang/Exception
           0   248   251   Class java/lang/NullPointerException
           0   248   311   Class java/lang/Exception

  public final java.sql.Connection getConnection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: invokevirtual #14                 // Method isDetached:()Z
       8: ifne          16
      11: aload_0
      12: getfield      #111                // Field creatorProxy:Lcom/mchange/v2/c3p0/impl/NewProxyConnection;
      15: areturn
      16: new           #92                 // class java/sql/SQLException
      19: dup
      20: ldc           #113                // String You cannot operate on a closed Statement!
      22: invokespecial #114                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: astore_1
      27: aload_0
      28: invokevirtual #14                 // Method isDetached:()Z
      31: ifeq          41
      34: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      36: aload_1
      37: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      40: athrow
      41: aload_1
      42: athrow
      43: astore_1
      44: aload_0
      45: invokevirtual #14                 // Method isDetached:()Z
      48: ifne          60
      51: aload_0
      52: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      55: aload_1
      56: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      59: athrow
      60: aload_1
      61: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      64: athrow
    Exception table:
       from    to  target type
           0    15    26   Class java/lang/NullPointerException
          16    26    26   Class java/lang/NullPointerException
           0    15    43   Class java/lang/Exception
          16    26    43   Class java/lang/Exception

  public final boolean isClosed() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: invokevirtual #14                 // Method isDetached:()Z
       8: ireturn
       9: astore_1
      10: aload_0
      11: invokevirtual #14                 // Method isDetached:()Z
      14: ifeq          24
      17: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      19: aload_1
      20: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      23: athrow
      24: aload_1
      25: athrow
      26: astore_1
      27: aload_0
      28: invokevirtual #14                 // Method isDetached:()Z
      31: ifne          43
      34: aload_0
      35: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      38: aload_1
      39: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      42: athrow
      43: aload_1
      44: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
    Exception table:
       from    to  target type
           0     8     9   Class java/lang/NullPointerException
           0     8    26   Class java/lang/Exception

  public final java.sql.SQLWarning getWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #115,  1          // InterfaceMethod java/sql/PreparedStatement.getWarnings:()Ljava/sql/SQLWarning;
      13: areturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void clearWarnings() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #116,  1          // InterfaceMethod java/sql/PreparedStatement.clearWarnings:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final java.sql.ResultSet executeQuery(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #117,  2          // InterfaceMethod java/sql/PreparedStatement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      25: aload_0
      26: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      29: aload_2
      30: invokevirtual #32                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markActiveResultSetForStatement:(Ljava/sql/Statement;Ljava/sql/ResultSet;)V
      33: new           #33                 // class com/mchange/v2/c3p0/impl/NewProxyResultSet
      36: dup
      37: aload_2
      38: aload_0
      39: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      42: aload_0
      43: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      46: aload_0
      47: invokespecial #34                 // Method com/mchange/v2/c3p0/impl/NewProxyResultSet."<init>":(Ljava/sql/ResultSet;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;Ljava/lang/Object;Ljava/lang/Object;)V
      50: astore_3
      51: aload_0
      52: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      55: dup
      56: astore        4
      58: monitorenter
      59: aload_0
      60: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      63: aload_3
      64: invokevirtual #35                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload         4
      70: monitorexit
      71: goto          82
      74: astore        5
      76: aload         4
      78: monitorexit
      79: aload         5
      81: athrow
      82: aload_3
      83: areturn
      84: astore_2
      85: aload_0
      86: invokevirtual #14                 // Method isDetached:()Z
      89: ifeq          99
      92: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      94: aload_2
      95: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      98: athrow
      99: aload_2
     100: athrow
     101: astore_2
     102: aload_0
     103: invokevirtual #14                 // Method isDetached:()Z
     106: ifne          118
     109: aload_0
     110: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     113: aload_2
     114: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     117: athrow
     118: aload_2
     119: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     122: athrow
    Exception table:
       from    to  target type
          59    71    74   any
          74    79    74   any
           0    20    84   Class java/lang/NullPointerException
          21    83    84   Class java/lang/NullPointerException
           0    20   101   Class java/lang/Exception
          21    83   101   Class java/lang/Exception

  public final int executeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #118,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;[I)I
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final int executeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: iload_2
      10: invokeinterface #119,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;I)I
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final int executeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #120,  2          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;)I
      14: ireturn
      15: astore_2
      16: aload_0
      17: invokevirtual #14                 // Method isDetached:()Z
      20: ifeq          30
      23: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      25: aload_2
      26: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      29: athrow
      30: aload_2
      31: athrow
      32: astore_2
      33: aload_0
      34: invokevirtual #14                 // Method isDetached:()Z
      37: ifne          49
      40: aload_0
      41: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      44: aload_2
      45: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      48: athrow
      49: aload_2
      50: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      53: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/NullPointerException
           0    14    32   Class java/lang/Exception

  public final int executeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #121,  3          // InterfaceMethod java/sql/PreparedStatement.executeUpdate:(Ljava/lang/String;[Ljava/lang/String;)I
      15: ireturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final int getMaxFieldSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #122,  1          // InterfaceMethod java/sql/PreparedStatement.getMaxFieldSize:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setMaxFieldSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #123,  2          // InterfaceMethod java/sql/PreparedStatement.setMaxFieldSize:(I)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final int getMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #124,  1          // InterfaceMethod java/sql/PreparedStatement.getMaxRows:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setMaxRows(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #125,  2          // InterfaceMethod java/sql/PreparedStatement.setMaxRows:(I)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final void setEscapeProcessing(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #126,  2          // InterfaceMethod java/sql/PreparedStatement.setEscapeProcessing:(Z)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final int getQueryTimeout() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #127,  1          // InterfaceMethod java/sql/PreparedStatement.getQueryTimeout:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setQueryTimeout(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #128,  2          // InterfaceMethod java/sql/PreparedStatement.setQueryTimeout:(I)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final void cancel() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #129,  1          // InterfaceMethod java/sql/PreparedStatement.cancel:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final void setCursorName(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #130,  2          // InterfaceMethod java/sql/PreparedStatement.setCursorName:(Ljava/lang/String;)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final java.sql.ResultSet getResultSet() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #131,  1          // InterfaceMethod java/sql/PreparedStatement.getResultSet:()Ljava/sql/ResultSet;
      13: astore_1
      14: aload_1
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      24: aload_0
      25: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      28: aload_1
      29: invokevirtual #32                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markActiveResultSetForStatement:(Ljava/sql/Statement;Ljava/sql/ResultSet;)V
      32: new           #33                 // class com/mchange/v2/c3p0/impl/NewProxyResultSet
      35: dup
      36: aload_1
      37: aload_0
      38: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      41: aload_0
      42: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      45: aload_0
      46: invokespecial #34                 // Method com/mchange/v2/c3p0/impl/NewProxyResultSet."<init>":(Ljava/sql/ResultSet;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;Ljava/lang/Object;Ljava/lang/Object;)V
      49: astore_2
      50: aload_0
      51: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      54: dup
      55: astore_3
      56: monitorenter
      57: aload_0
      58: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      61: aload_2
      62: invokevirtual #35                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_3
      67: monitorexit
      68: goto          78
      71: astore        4
      73: aload_3
      74: monitorexit
      75: aload         4
      77: athrow
      78: aload_2
      79: areturn
      80: astore_1
      81: aload_0
      82: invokevirtual #14                 // Method isDetached:()Z
      85: ifeq          95
      88: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      90: aload_1
      91: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      94: athrow
      95: aload_1
      96: athrow
      97: astore_1
      98: aload_0
      99: invokevirtual #14                 // Method isDetached:()Z
     102: ifne          114
     105: aload_0
     106: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     109: aload_1
     110: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     113: athrow
     114: aload_1
     115: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     118: athrow
    Exception table:
       from    to  target type
          57    68    71   any
          71    75    71   any
           0    19    80   Class java/lang/NullPointerException
          20    79    80   Class java/lang/NullPointerException
           0    19    97   Class java/lang/Exception
          20    79    97   Class java/lang/Exception

  public final int getUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #132,  1          // InterfaceMethod java/sql/PreparedStatement.getUpdateCount:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final boolean getMoreResults(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #133,  2          // InterfaceMethod java/sql/PreparedStatement.getMoreResults:(I)Z
      14: ireturn
      15: astore_2
      16: aload_0
      17: invokevirtual #14                 // Method isDetached:()Z
      20: ifeq          30
      23: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      25: aload_2
      26: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      29: athrow
      30: aload_2
      31: athrow
      32: astore_2
      33: aload_0
      34: invokevirtual #14                 // Method isDetached:()Z
      37: ifne          49
      40: aload_0
      41: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      44: aload_2
      45: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      48: athrow
      49: aload_2
      50: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      53: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/NullPointerException
           0    14    32   Class java/lang/Exception

  public final boolean getMoreResults() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #134,  1          // InterfaceMethod java/sql/PreparedStatement.getMoreResults:()Z
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setFetchDirection(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #135,  2          // InterfaceMethod java/sql/PreparedStatement.setFetchDirection:(I)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final int getFetchDirection() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #136,  1          // InterfaceMethod java/sql/PreparedStatement.getFetchDirection:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setFetchSize(int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #137,  2          // InterfaceMethod java/sql/PreparedStatement.setFetchSize:(I)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final int getFetchSize() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #138,  1          // InterfaceMethod java/sql/PreparedStatement.getFetchSize:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final int getResultSetConcurrency() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #139,  1          // InterfaceMethod java/sql/PreparedStatement.getResultSetConcurrency:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final int getResultSetType() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #140,  1          // InterfaceMethod java/sql/PreparedStatement.getResultSetType:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void addBatch(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #141,  2          // InterfaceMethod java/sql/PreparedStatement.addBatch:(Ljava/lang/String;)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final void clearBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #142,  1          // InterfaceMethod java/sql/PreparedStatement.clearBatch:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final int[] executeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #143,  1          // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
      13: areturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final java.sql.ResultSet getGeneratedKeys() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #144,  1          // InterfaceMethod java/sql/PreparedStatement.getGeneratedKeys:()Ljava/sql/ResultSet;
      13: astore_1
      14: aload_1
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: aload_0
      21: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      24: aload_0
      25: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      28: aload_1
      29: invokevirtual #32                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markActiveResultSetForStatement:(Ljava/sql/Statement;Ljava/sql/ResultSet;)V
      32: new           #33                 // class com/mchange/v2/c3p0/impl/NewProxyResultSet
      35: dup
      36: aload_1
      37: aload_0
      38: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      41: aload_0
      42: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      45: aload_0
      46: invokespecial #34                 // Method com/mchange/v2/c3p0/impl/NewProxyResultSet."<init>":(Ljava/sql/ResultSet;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;Ljava/lang/Object;Ljava/lang/Object;)V
      49: astore_2
      50: aload_0
      51: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      54: dup
      55: astore_3
      56: monitorenter
      57: aload_0
      58: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      61: aload_2
      62: invokevirtual #35                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      65: pop
      66: aload_3
      67: monitorexit
      68: goto          78
      71: astore        4
      73: aload_3
      74: monitorexit
      75: aload         4
      77: athrow
      78: aload_2
      79: areturn
      80: astore_1
      81: aload_0
      82: invokevirtual #14                 // Method isDetached:()Z
      85: ifeq          95
      88: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      90: aload_1
      91: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      94: athrow
      95: aload_1
      96: athrow
      97: astore_1
      98: aload_0
      99: invokevirtual #14                 // Method isDetached:()Z
     102: ifne          114
     105: aload_0
     106: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     109: aload_1
     110: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     113: athrow
     114: aload_1
     115: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
     118: athrow
    Exception table:
       from    to  target type
          57    68    71   any
          71    75    71   any
           0    19    80   Class java/lang/NullPointerException
          20    79    80   Class java/lang/NullPointerException
           0    19    97   Class java/lang/Exception
          20    79    97   Class java/lang/Exception

  public final int getResultSetHoldability() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #145,  1          // InterfaceMethod java/sql/PreparedStatement.getResultSetHoldability:()I
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setPoolable(boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: iload_1
       9: invokeinterface #146,  2          // InterfaceMethod java/sql/PreparedStatement.setPoolable:(Z)V
      14: goto          56
      17: astore_2
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_2
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_2
      33: athrow
      34: astore_2
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_2
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_2
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final boolean isPoolable() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #147,  1          // InterfaceMethod java/sql/PreparedStatement.isPoolable:()Z
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void closeOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #148,  1          // InterfaceMethod java/sql/PreparedStatement.closeOnCompletion:()V
      13: goto          55
      16: astore_1
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_1
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_1
      32: athrow
      33: astore_1
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_1
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_1
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
      55: return
    Exception table:
       from    to  target type
           0    13    16   Class java/lang/NullPointerException
           0    13    33   Class java/lang/Exception

  public final boolean isCloseOnCompletion() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #149,  1          // InterfaceMethod java/sql/PreparedStatement.isCloseOnCompletion:()Z
      13: ireturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final long getLargeUpdateCount() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #150,  1          // InterfaceMethod java/sql/PreparedStatement.getLargeUpdateCount:()J
      13: lreturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final void setLargeMaxRows(long) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: lload_1
       9: invokeinterface #151,  3          // InterfaceMethod java/sql/PreparedStatement.setLargeMaxRows:(J)V
      14: goto          56
      17: astore_3
      18: aload_0
      19: invokevirtual #14                 // Method isDetached:()Z
      22: ifeq          32
      25: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      27: aload_3
      28: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      31: athrow
      32: aload_3
      33: athrow
      34: astore_3
      35: aload_0
      36: invokevirtual #14                 // Method isDetached:()Z
      39: ifne          51
      42: aload_0
      43: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      46: aload_3
      47: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      50: athrow
      51: aload_3
      52: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      55: athrow
      56: return
    Exception table:
       from    to  target type
           0    14    17   Class java/lang/NullPointerException
           0    14    34   Class java/lang/Exception

  public final long getLargeMaxRows() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #152,  1          // InterfaceMethod java/sql/PreparedStatement.getLargeMaxRows:()J
      13: lreturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final long[] executeLargeBatch() throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: invokeinterface #153,  1          // InterfaceMethod java/sql/PreparedStatement.executeLargeBatch:()[J
      13: areturn
      14: astore_1
      15: aload_0
      16: invokevirtual #14                 // Method isDetached:()Z
      19: ifeq          29
      22: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      24: aload_1
      25: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      28: athrow
      29: aload_1
      30: athrow
      31: astore_1
      32: aload_0
      33: invokevirtual #14                 // Method isDetached:()Z
      36: ifne          48
      39: aload_0
      40: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      43: aload_1
      44: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      47: athrow
      48: aload_1
      49: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      52: athrow
    Exception table:
       from    to  target type
           0    13    14   Class java/lang/NullPointerException
           0    13    31   Class java/lang/Exception

  public final long executeLargeUpdate(java.lang.String, java.lang.String[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #154,  3          // InterfaceMethod java/sql/PreparedStatement.executeLargeUpdate:(Ljava/lang/String;[Ljava/lang/String;)J
      15: lreturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final long executeLargeUpdate(java.lang.String, int[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: aload_2
      10: invokeinterface #155,  3          // InterfaceMethod java/sql/PreparedStatement.executeLargeUpdate:(Ljava/lang/String;[I)J
      15: lreturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final long executeLargeUpdate(java.lang.String, int) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: iload_2
      10: invokeinterface #156,  3          // InterfaceMethod java/sql/PreparedStatement.executeLargeUpdate:(Ljava/lang/String;I)J
      15: lreturn
      16: astore_3
      17: aload_0
      18: invokevirtual #14                 // Method isDetached:()Z
      21: ifeq          31
      24: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      26: aload_3
      27: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      30: athrow
      31: aload_3
      32: athrow
      33: astore_3
      34: aload_0
      35: invokevirtual #14                 // Method isDetached:()Z
      38: ifne          50
      41: aload_0
      42: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      45: aload_3
      46: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      49: athrow
      50: aload_3
      51: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      54: athrow
    Exception table:
       from    to  target type
           0    15    16   Class java/lang/NullPointerException
           0    15    33   Class java/lang/Exception

  public final long executeLargeUpdate(java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_0
       5: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
       8: aload_1
       9: invokeinterface #157,  2          // InterfaceMethod java/sql/PreparedStatement.executeLargeUpdate:(Ljava/lang/String;)J
      14: lreturn
      15: astore_2
      16: aload_0
      17: invokevirtual #14                 // Method isDetached:()Z
      20: ifeq          30
      23: ldc           #15                 // String You can\'t operate on a closed Statement!!!
      25: aload_2
      26: invokestatic  #16                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      29: athrow
      30: aload_2
      31: athrow
      32: astore_2
      33: aload_0
      34: invokevirtual #14                 // Method isDetached:()Z
      37: ifne          49
      40: aload_0
      41: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      44: aload_2
      45: invokevirtual #19                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.handleThrowable:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      48: athrow
      49: aload_2
      50: invokestatic  #20                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/Throwable;)Ljava/sql/SQLException;
      53: athrow
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/NullPointerException
           0    14    32   Class java/lang/Exception

  public final java.lang.Object unwrap(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #158                // Method isWrapperForInner:(Ljava/lang/Class;)Z
       5: ifeq          19
       8: aload_0
       9: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      12: aload_1
      13: invokeinterface #159,  2          // InterfaceMethod java/sql/PreparedStatement.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      18: areturn
      19: aload_0
      20: aload_1
      21: invokespecial #160                // Method isWrapperForThis:(Ljava/lang/Class;)Z
      24: ifeq          29
      27: aload_0
      28: areturn
      29: new           #92                 // class java/sql/SQLException
      32: dup
      33: new           #99                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
      40: aload_0
      41: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      44: ldc           #161                // String  is not a wrapper for or implementation of
      46: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: aload_1
      50: invokevirtual #162                // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #114                // Method java/sql/SQLException."<init>":(Ljava/lang/String;)V
      62: athrow

  public final boolean isWrapperFor(java.lang.Class) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #158                // Method isWrapperForInner:(Ljava/lang/Class;)Z
       5: ifne          16
       8: aload_0
       9: aload_1
      10: invokespecial #160                // Method isWrapperForThis:(Ljava/lang/Class;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  void attach(com.mchange.v2.c3p0.impl.NewPooledConnection);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
       5: aload_1
       6: aload_0
       7: getfield      #6                  // Field cel:Ljavax/sql/ConnectionEventListener;
      10: invokevirtual #163                // Method com/mchange/v2/c3p0/impl/NewPooledConnection.addConnectionEventListener:(Ljavax/sql/ConnectionEventListener;)V
      13: return

  private void detach();
    Code:
       0: aload_0
       1: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
       4: aload_0
       5: getfield      #6                  // Field cel:Ljavax/sql/ConnectionEventListener;
       8: invokevirtual #164                // Method com/mchange/v2/c3p0/impl/NewPooledConnection.removeConnectionEventListener:(Ljavax/sql/ConnectionEventListener;)V
      11: aload_0
      12: aconst_null
      13: putfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      16: return

  com.mchange.v2.c3p0.impl.NewProxyPreparedStatement(java.sql.PreparedStatement, com.mchange.v2.c3p0.impl.NewPooledConnection);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #165                // Method "<init>":(Ljava/sql/PreparedStatement;)V
       5: aload_0
       6: aload_2
       7: invokevirtual #166                // Method attach:(Lcom/mchange/v2/c3p0/impl/NewPooledConnection;)V
      10: return

  boolean isDetached();
    Code:
       0: aload_0
       1: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.String toString();
    Code:
       0: new           #99                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #100                // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokespecial #167                // Method java/lang/Object.toString:()Ljava/lang/String;
      11: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: ldc           #168                // String  [wrapping:
      16: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: aload_0
      20: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      23: invokevirtual #101                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      26: ldc           #169                // String ]
      28: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  private boolean isWrapperForInner(java.lang.Class);
    Code:
       0: ldc           #170                // class java/sql/PreparedStatement
       2: aload_1
       3: if_acmpeq     20
       6: aload_1
       7: aload_0
       8: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      11: invokevirtual #171                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #172                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean isWrapperForThis(java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #171                // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokevirtual #172                // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public void detachProxyResultSet(java.sql.ResultSet);
    Code:
       0: aload_0
       1: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #9                  // Field myProxyResultSets:Ljava/util/HashSet;
      11: aload_1
      12: invokevirtual #173                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      15: pop
      16: aload_2
      17: monitorexit
      18: goto          26
      21: astore_3
      22: aload_2
      23: monitorexit
      24: aload_3
      25: athrow
      26: return
    Exception table:
       from    to  target type
           7    18    21   any
          21    24    21   any

  com.mchange.v2.c3p0.impl.NewProxyPreparedStatement(java.sql.PreparedStatement, com.mchange.v2.c3p0.impl.NewPooledConnection, boolean, com.mchange.v2.c3p0.impl.NewProxyConnection);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #174                // Method "<init>":(Ljava/sql/PreparedStatement;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;)V
       6: aload_0
       7: iload_3
       8: putfield      #106                // Field is_cached:Z
      11: aload_0
      12: aload         4
      14: putfield      #111                // Field creatorProxy:Lcom/mchange/v2/c3p0/impl/NewProxyConnection;
      17: return

  public java.lang.Object rawStatementOperation(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException, java.sql.SQLException;
    Code:
       0: aload_0
       1: invokevirtual #11                 // Method maybeDirtyTransaction:()V
       4: aload_2
       5: getstatic     #175                // Field com/mchange/v2/c3p0/C3P0ProxyStatement.RAW_STATEMENT:Ljava/lang/Object;
       8: if_acmpne     16
      11: aload_0
      12: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      15: astore_2
      16: iconst_0
      17: istore        4
      19: aload_3
      20: arraylength
      21: istore        5
      23: iload         4
      25: iload         5
      27: if_icmpge     54
      30: aload_3
      31: iload         4
      33: aaload
      34: getstatic     #175                // Field com/mchange/v2/c3p0/C3P0ProxyStatement.RAW_STATEMENT:Ljava/lang/Object;
      37: if_acmpne     48
      40: aload_3
      41: iload         4
      43: aload_0
      44: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      47: aastore
      48: iinc          4, 1
      51: goto          23
      54: aload_1
      55: aload_2
      56: aload_3
      57: invokevirtual #176                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      60: astore        4
      62: aload         4
      64: instanceof    #89                 // class java/sql/ResultSet
      67: ifeq          110
      70: aload         4
      72: checkcast     #89                 // class java/sql/ResultSet
      75: astore        5
      77: aload_0
      78: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
      81: aload_0
      82: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
      85: aload         5
      87: invokevirtual #32                 // Method com/mchange/v2/c3p0/impl/NewPooledConnection.markActiveResultSetForStatement:(Ljava/sql/Statement;Ljava/sql/ResultSet;)V
      90: new           #33                 // class com/mchange/v2/c3p0/impl/NewProxyResultSet
      93: dup
      94: aload         5
      96: aload_0
      97: getfield      #18                 // Field parentPooledConnection:Lcom/mchange/v2/c3p0/impl/NewPooledConnection;
     100: aload_0
     101: getfield      #2                  // Field inner:Ljava/sql/PreparedStatement;
     104: aload_0
     105: invokespecial #34                 // Method com/mchange/v2/c3p0/impl/NewProxyResultSet."<init>":(Ljava/sql/ResultSet;Lcom/mchange/v2/c3p0/impl/NewPooledConnection;Ljava/lang/Object;Ljava/lang/Object;)V
     108: astore        4
     110: aload         4
     112: areturn

  void maybeDirtyTransaction();
    Code:
       0: aload_0
       1: getfield      #111                // Field creatorProxy:Lcom/mchange/v2/c3p0/impl/NewProxyConnection;
       4: ifnull        14
       7: aload_0
       8: getfield      #111                // Field creatorProxy:Lcom/mchange/v2/c3p0/impl/NewProxyConnection;
      11: invokevirtual #177                // Method com/mchange/v2/c3p0/impl/NewProxyConnection.maybeDirtyTransaction:()V
      14: return

  static void access$000(com.mchange.v2.c3p0.impl.NewProxyPreparedStatement);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method detach:()V
       4: return

  static {};
    Code:
       0: ldc           #178                // String com.mchange.v2.c3p0.impl.NewProxyPreparedStatement
       2: invokestatic  #179                // Method com/mchange/v2/log/MLog.getLogger:(Ljava/lang/String;)Lcom/mchange/v2/log/MLogger;
       5: putstatic     #93                 // Field logger:Lcom/mchange/v2/log/MLogger;
       8: return
}
