Compiled from "DataSources.java"
public final class com.mchange.v2.c3p0.DataSources {
  static final com.mchange.v2.log.MLogger logger;

  static final java.util.Set WRAPPER_CXN_POOL_DATA_SOURCE_OVERWRITE_PROPS;

  static final java.util.Set POOL_BACKED_DATA_SOURCE_OVERWRITE_PROPS;

  public static javax.sql.DataSource unpooledDataSource() throws java.sql.SQLException;
    Code:
       0: new           #1                  // class com/mchange/v2/c3p0/DriverManagerDataSource
       3: dup
       4: invokespecial #2                  // Method com/mchange/v2/c3p0/DriverManagerDataSource."<init>":()V
       7: astore_0
       8: aload_0
       9: areturn

  public static javax.sql.DataSource unpooledDataSource(java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #1                  // class com/mchange/v2/c3p0/DriverManagerDataSource
       3: dup
       4: invokespecial #2                  // Method com/mchange/v2/c3p0/DriverManagerDataSource."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #3                  // Method com/mchange/v2/c3p0/DriverManagerDataSource.setJdbcUrl:(Ljava/lang/String;)V
      13: aload_1
      14: areturn

  public static javax.sql.DataSource unpooledDataSource(java.lang.String, java.lang.String, java.lang.String) throws java.sql.SQLException;
    Code:
       0: new           #4                  // class java/util/Properties
       3: dup
       4: invokespecial #5                  // Method java/util/Properties."<init>":()V
       7: astore_3
       8: aload_3
       9: ldc           #7                  // String user
      11: aload_1
      12: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: pop
      16: aload_3
      17: ldc           #9                  // String password
      19: aload_2
      20: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: aload_3
      26: invokestatic  #10                 // Method unpooledDataSource:(Ljava/lang/String;Ljava/util/Properties;)Ljavax/sql/DataSource;
      29: areturn

  public static javax.sql.DataSource unpooledDataSource(java.lang.String, java.util.Properties) throws java.sql.SQLException;
    Code:
       0: new           #1                  // class com/mchange/v2/c3p0/DriverManagerDataSource
       3: dup
       4: invokespecial #2                  // Method com/mchange/v2/c3p0/DriverManagerDataSource."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #3                  // Method com/mchange/v2/c3p0/DriverManagerDataSource.setJdbcUrl:(Ljava/lang/String;)V
      13: aload_2
      14: aload_1
      15: invokevirtual #11                 // Method com/mchange/v2/c3p0/DriverManagerDataSource.setProperties:(Ljava/util/Properties;)V
      18: aload_2
      19: areturn

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: aconst_null
       3: checkcast     #12                 // class java/util/Map
       6: invokestatic  #13                 // Method pooledDataSource:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/util/Map;)Ljavax/sql/DataSource;
       9: areturn

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, int) throws java.sql.SQLException;
    Code:
       0: new           #14                 // class java/util/HashMap
       3: dup
       4: invokespecial #15                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_2
       9: ldc           #16                 // String maxStatements
      11: new           #17                 // class java/lang/Integer
      14: dup
      15: iload_1
      16: invokespecial #18                 // Method java/lang/Integer."<init>":(I)V
      19: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: pop
      25: aload_0
      26: aconst_null
      27: aload_2
      28: invokestatic  #13                 // Method pooledDataSource:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/util/Map;)Ljavax/sql/DataSource;
      31: areturn

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, com.mchange.v2.c3p0.PoolConfig) throws java.sql.SQLException;
    Code:
       0: new           #20                 // class com/mchange/v2/c3p0/WrapperConnectionPoolDataSource
       3: dup
       4: invokespecial #21                 // Method com/mchange/v2/c3p0/WrapperConnectionPoolDataSource."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: invokevirtual #22                 // Method com/mchange/v2/c3p0/WrapperConnectionPoolDataSource.setNestedDataSource:(Ljavax/sql/DataSource;)V
      13: aload_1
      14: aload_2
      15: getstatic     #23                 // Field WRAPPER_CXN_POOL_DATA_SOURCE_OVERWRITE_PROPS:Ljava/util/Set;
      18: invokestatic  #24                 // Method com/mchange/v2/beans/BeansUtils.overwriteSpecificAccessibleProperties:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)V
      21: new           #25                 // class com/mchange/v2/c3p0/PoolBackedDataSource
      24: dup
      25: invokespecial #26                 // Method com/mchange/v2/c3p0/PoolBackedDataSource."<init>":()V
      28: astore_3
      29: aload_3
      30: aload_2
      31: invokevirtual #27                 // Method com/mchange/v2/c3p0/PoolBackedDataSource.setConnectionPoolDataSource:(Ljavax/sql/ConnectionPoolDataSource;)V
      34: aload_1
      35: aload_3
      36: getstatic     #28                 // Field POOL_BACKED_DATA_SOURCE_OVERWRITE_PROPS:Ljava/util/Set;
      39: invokestatic  #24                 // Method com/mchange/v2/beans/BeansUtils.overwriteSpecificAccessibleProperties:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Collection;)V
      42: aload_3
      43: areturn
      44: astore_2
      45: new           #30                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #32                 // String Exception configuring pool-backed DataSource:
      54: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_2
      58: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      61: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: aload_2
      65: invokestatic  #36                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      68: astore_3
      69: getstatic     #37                 // Field logger:Lcom/mchange/v2/log/MLogger;
      72: getstatic     #38                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      75: invokeinterface #39,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      80: ifeq          102
      83: aload_2
      84: aload_3
      85: if_acmpeq     102
      88: getstatic     #37                 // Field logger:Lcom/mchange/v2/log/MLogger;
      91: getstatic     #38                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      94: ldc           #40                 // String Converted exception to throwable SQLException
      96: aload_2
      97: invokeinterface #41,  4           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     102: aload_3
     103: athrow
    Exception table:
       from    to  target type
           0    43    44   Class java/lang/Exception

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, java.lang.String) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokestatic  #13                 // Method pooledDataSource:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/util/Map;)Ljavax/sql/DataSource;
       6: areturn

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, java.util.Map) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aconst_null
       2: aload_1
       3: invokestatic  #13                 // Method pooledDataSource:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/util/Map;)Ljavax/sql/DataSource;
       6: areturn

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, java.lang.String, java.util.Map) throws java.sql.SQLException;
    Code:
       0: new           #20                 // class com/mchange/v2/c3p0/WrapperConnectionPoolDataSource
       3: dup
       4: aload_1
       5: invokespecial #42                 // Method com/mchange/v2/c3p0/WrapperConnectionPoolDataSource."<init>":(Ljava/lang/String;)V
       8: astore_3
       9: aload_3
      10: aload_0
      11: invokevirtual #22                 // Method com/mchange/v2/c3p0/WrapperConnectionPoolDataSource.setNestedDataSource:(Ljavax/sql/DataSource;)V
      14: aload_2
      15: ifnull        33
      18: aload_2
      19: aload_3
      20: iconst_0
      21: aconst_null
      22: iconst_1
      23: getstatic     #43                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      26: getstatic     #43                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      29: iconst_0
      30: invokestatic  #44                 // Method com/mchange/v2/beans/BeansUtils.overwriteAccessiblePropertiesFromMap:(Ljava/util/Map;Ljava/lang/Object;ZLjava/util/Collection;ZLcom/mchange/v2/log/MLevel;Lcom/mchange/v2/log/MLevel;Z)V
      33: new           #25                 // class com/mchange/v2/c3p0/PoolBackedDataSource
      36: dup
      37: aload_1
      38: invokespecial #45                 // Method com/mchange/v2/c3p0/PoolBackedDataSource."<init>":(Ljava/lang/String;)V
      41: astore        4
      43: aload         4
      45: aload_3
      46: invokevirtual #27                 // Method com/mchange/v2/c3p0/PoolBackedDataSource.setConnectionPoolDataSource:(Ljavax/sql/ConnectionPoolDataSource;)V
      49: aload_2
      50: ifnull        69
      53: aload_2
      54: aload         4
      56: iconst_0
      57: aconst_null
      58: iconst_1
      59: getstatic     #43                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      62: getstatic     #43                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      65: iconst_0
      66: invokestatic  #44                 // Method com/mchange/v2/beans/BeansUtils.overwriteAccessiblePropertiesFromMap:(Ljava/util/Map;Ljava/lang/Object;ZLjava/util/Collection;ZLcom/mchange/v2/log/MLevel;Lcom/mchange/v2/log/MLevel;Z)V
      69: aload         4
      71: areturn
      72: astore_3
      73: new           #30                 // class java/lang/StringBuilder
      76: dup
      77: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
      80: ldc           #32                 // String Exception configuring pool-backed DataSource:
      82: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_3
      86: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      89: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      92: aload_3
      93: invokestatic  #36                 // Method com/mchange/v2/sql/SqlUtils.toSQLException:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/sql/SQLException;
      96: astore        4
      98: getstatic     #37                 // Field logger:Lcom/mchange/v2/log/MLogger;
     101: getstatic     #38                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     104: invokeinterface #39,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     109: ifeq          132
     112: aload_3
     113: aload         4
     115: if_acmpeq     132
     118: getstatic     #37                 // Field logger:Lcom/mchange/v2/log/MLogger;
     121: getstatic     #38                 // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     124: ldc           #40                 // String Converted exception to throwable SQLException
     126: aload_3
     127: invokeinterface #41,  4           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     132: aload         4
     134: athrow
    Exception table:
       from    to  target type
           0    71    72   Class java/lang/Exception

  public static javax.sql.DataSource pooledDataSource(javax.sql.DataSource, java.util.Properties) throws java.sql.SQLException;
    Code:
       0: new           #4                  // class java/util/Properties
       3: dup
       4: invokespecial #5                  // Method java/util/Properties."<init>":()V
       7: astore_2
       8: aload_1
       9: invokevirtual #46                 // Method java/util/Properties.propertyNames:()Ljava/util/Enumeration;
      12: astore_3
      13: aload_3
      14: invokeinterface #47,  1           // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      19: ifeq          76
      22: aload_3
      23: invokeinterface #48,  1           // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      28: checkcast     #49                 // class java/lang/String
      31: astore        4
      33: aload_1
      34: aload         4
      36: invokevirtual #50                 // Method java/util/Properties.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      39: astore        5
      41: aload         4
      43: ldc           #51                 // String c3p0.
      45: invokevirtual #52                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      48: ifeq          60
      51: aload         4
      53: iconst_5
      54: invokevirtual #53                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      57: goto          62
      60: aload         4
      62: astore        6
      64: aload_2
      65: aload         6
      67: aload         5
      69: invokevirtual #8                  // Method java/util/Properties.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: goto          13
      76: aload_0
      77: aconst_null
      78: aload_2
      79: invokestatic  #13                 // Method pooledDataSource:(Ljavax/sql/DataSource;Ljava/lang/String;Ljava/util/Map;)Ljavax/sql/DataSource;
      82: areturn

  public static void destroy(javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_0
       2: invokestatic  #54                 // Method destroy:(Ljavax/sql/DataSource;Z)V
       5: return

  public static void forceDestroy(javax.sql.DataSource) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokestatic  #54                 // Method destroy:(Ljavax/sql/DataSource;Z)V
       5: return

  private static void destroy(javax.sql.DataSource, boolean) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: instanceof    #25                 // class com/mchange/v2/c3p0/PoolBackedDataSource
       4: ifeq          33
       7: aload_0
       8: checkcast     #25                 // class com/mchange/v2/c3p0/PoolBackedDataSource
      11: invokevirtual #55                 // Method com/mchange/v2/c3p0/PoolBackedDataSource.getConnectionPoolDataSource:()Ljavax/sql/ConnectionPoolDataSource;
      14: astore_2
      15: aload_2
      16: instanceof    #20                 // class com/mchange/v2/c3p0/WrapperConnectionPoolDataSource
      19: ifeq          33
      22: aload_2
      23: checkcast     #20                 // class com/mchange/v2/c3p0/WrapperConnectionPoolDataSource
      26: invokevirtual #56                 // Method com/mchange/v2/c3p0/WrapperConnectionPoolDataSource.getNestedDataSource:()Ljavax/sql/DataSource;
      29: iload_1
      30: invokestatic  #54                 // Method destroy:(Ljavax/sql/DataSource;Z)V
      33: aload_0
      34: instanceof    #57                 // class com/mchange/v2/c3p0/PooledDataSource
      37: ifeq          50
      40: aload_0
      41: checkcast     #57                 // class com/mchange/v2/c3p0/PooledDataSource
      44: iload_1
      45: invokeinterface #58,  2           // InterfaceMethod com/mchange/v2/c3p0/PooledDataSource.close:(Z)V
      50: return

  private com.mchange.v2.c3p0.DataSources();
    Code:
       0: aload_0
       1: invokespecial #59                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: ldc           #60                 // class com/mchange/v2/c3p0/DataSources
       2: invokestatic  #61                 // Method com/mchange/v2/log/MLog.getLogger:(Ljava/lang/Class;)Lcom/mchange/v2/log/MLogger;
       5: putstatic     #37                 // Field logger:Lcom/mchange/v2/log/MLogger;
       8: bipush        22
      10: anewarray     #49                 // class java/lang/String
      13: dup
      14: iconst_0
      15: ldc           #62                 // String checkoutTimeout
      17: aastore
      18: dup
      19: iconst_1
      20: ldc           #63                 // String acquireIncrement
      22: aastore
      23: dup
      24: iconst_2
      25: ldc           #64                 // String acquireRetryAttempts
      27: aastore
      28: dup
      29: iconst_3
      30: ldc           #65                 // String acquireRetryDelay
      32: aastore
      33: dup
      34: iconst_4
      35: ldc           #66                 // String autoCommitOnClose
      37: aastore
      38: dup
      39: iconst_5
      40: ldc           #67                 // String connectionTesterClassName
      42: aastore
      43: dup
      44: bipush        6
      46: ldc           #68                 // String forceIgnoreUnresolvedTransactions
      48: aastore
      49: dup
      50: bipush        7
      52: ldc           #69                 // String idleConnectionTestPeriod
      54: aastore
      55: dup
      56: bipush        8
      58: ldc           #70                 // String initialPoolSize
      60: aastore
      61: dup
      62: bipush        9
      64: ldc           #71                 // String maxIdleTime
      66: aastore
      67: dup
      68: bipush        10
      70: ldc           #72                 // String maxPoolSize
      72: aastore
      73: dup
      74: bipush        11
      76: ldc           #16                 // String maxStatements
      78: aastore
      79: dup
      80: bipush        12
      82: ldc           #73                 // String maxStatementsPerConnection
      84: aastore
      85: dup
      86: bipush        13
      88: ldc           #74                 // String minPoolSize
      90: aastore
      91: dup
      92: bipush        14
      94: ldc           #75                 // String propertyCycle
      96: aastore
      97: dup
      98: bipush        15
     100: ldc           #76                 // String breakAfterAcquireFailure
     102: aastore
     103: dup
     104: bipush        16
     106: ldc           #77                 // String testConnectionOnCheckout
     108: aastore
     109: dup
     110: bipush        17
     112: ldc           #78                 // String testConnectionOnCheckin
     114: aastore
     115: dup
     116: bipush        18
     118: ldc           #79                 // String usesTraditionalReflectiveProxies
     120: aastore
     121: dup
     122: bipush        19
     124: ldc           #80                 // String preferredTestQuery
     126: aastore
     127: dup
     128: bipush        20
     130: ldc           #81                 // String automaticTestTable
     132: aastore
     133: dup
     134: bipush        21
     136: ldc           #82                 // String factoryClassLocation
     138: aastore
     139: astore_0
     140: new           #83                 // class java/util/HashSet
     143: dup
     144: aload_0
     145: invokestatic  #84                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     148: invokespecial #85                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     151: invokestatic  #86                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     154: putstatic     #23                 // Field WRAPPER_CXN_POOL_DATA_SOURCE_OVERWRITE_PROPS:Ljava/util/Set;
     157: iconst_2
     158: anewarray     #49                 // class java/lang/String
     161: dup
     162: iconst_0
     163: ldc           #87                 // String numHelperThreads
     165: aastore
     166: dup
     167: iconst_1
     168: ldc           #82                 // String factoryClassLocation
     170: aastore
     171: astore_0
     172: new           #83                 // class java/util/HashSet
     175: dup
     176: aload_0
     177: invokestatic  #84                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     180: invokespecial #85                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
     183: invokestatic  #86                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
     186: putstatic     #28                 // Field POOL_BACKED_DATA_SOURCE_OVERWRITE_PROPS:Ljava/util/Set;
     189: return
}
