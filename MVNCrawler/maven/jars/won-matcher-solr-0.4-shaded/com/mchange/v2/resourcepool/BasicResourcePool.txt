Compiled from "BasicResourcePool.java"
class com.mchange.v2.resourcepool.BasicResourcePool implements com.mchange.v2.resourcepool.ResourcePool {
  private static final com.mchange.v2.log.MLogger logger;

  static final int AUTO_CULL_FREQUENCY_DIVISOR;

  static final int AUTO_MAX_CULL_FREQUENCY;

  static final int AUTO_MIN_CULL_FREQUENCY;

  static final java.lang.String USE_SCATTERED_ACQUIRE_TASK_KEY;

  static final boolean USE_SCATTERED_ACQUIRE_TASK;

  final com.mchange.v2.resourcepool.ResourcePool$Manager mgr;

  final int start;

  final int min;

  final int max;

  final int inc;

  final int num_acq_attempts;

  final int acq_attempt_delay;

  final long check_idle_resources_delay;

  final long max_resource_age;

  final long max_idle_time;

  final long excess_max_idle_time;

  final long destroy_unreturned_resc_time;

  final long expiration_enforcement_delay;

  final boolean break_on_acquisition_failure;

  final boolean debug_store_checkout_exceptions;

  final boolean force_synchronous_checkins;

  final long pool_start_time;

  final com.mchange.v2.resourcepool.BasicResourcePoolFactory factory;

  final com.mchange.v2.async.AsynchronousRunner taskRunner;

  final com.mchange.v2.async.RunnableQueue asyncEventQueue;

  final com.mchange.v2.resourcepool.ResourcePoolEventSupport rpes;

  java.util.Timer cullAndIdleRefurbishTimer;

  java.util.TimerTask cullTask;

  java.util.TimerTask idleRefurbishTask;

  java.util.HashSet acquireWaiters;

  java.util.HashSet otherWaiters;

  int pending_acquires;

  int pending_removes;

  int target_pool_size;

  java.util.HashMap managed;

  java.util.LinkedList unused;

  java.util.HashSet excluded;

  java.util.Map formerResources;

  java.util.Set idleCheckResources;

  boolean force_kill_acquires;

  boolean broken;

  long failed_checkins;

  long failed_checkouts;

  long failed_idle_tests;

  java.lang.Throwable lastCheckinFailure;

  java.lang.Throwable lastCheckoutFailure;

  java.lang.Throwable lastIdleTestFailure;

  java.lang.Throwable lastResourceTestFailure;

  java.lang.Throwable lastAcquisitionFailiure;

  java.lang.Object exampleResource;

  private static final int NO_DECREMENT;

  private static final int DECREMENT_ON_SUCCESS;

  private static final int DECREMENT_WITH_CERTAINTY;

  static final boolean $assertionsDisabled;

  public long getStartTime();
    Code:
       0: aload_0
       1: getfield      #23                 // Field pool_start_time:J
       4: lreturn

  public long getUpTime();
    Code:
       0: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_0
       4: getfield      #23                 // Field pool_start_time:J
       7: lsub
       8: lreturn

  public synchronized long getNumFailedCheckins();
    Code:
       0: aload_0
       1: getfield      #25                 // Field failed_checkins:J
       4: lreturn

  public synchronized long getNumFailedCheckouts();
    Code:
       0: aload_0
       1: getfield      #26                 // Field failed_checkouts:J
       4: lreturn

  public synchronized long getNumFailedIdleTests();
    Code:
       0: aload_0
       1: getfield      #27                 // Field failed_idle_tests:J
       4: lreturn

  public synchronized java.lang.Throwable getLastCheckinFailure();
    Code:
       0: aload_0
       1: getfield      #28                 // Field lastCheckinFailure:Ljava/lang/Throwable;
       4: areturn

  private void setLastCheckinFailure(java.lang.Throwable);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #28                 // Field lastCheckinFailure:Ljava/lang/Throwable;
      26: aload_0
      27: aload_1
      28: putfield      #33                 // Field lastResourceTestFailure:Ljava/lang/Throwable;
      31: return

  public synchronized java.lang.Throwable getLastCheckoutFailure();
    Code:
       0: aload_0
       1: getfield      #34                 // Field lastCheckoutFailure:Ljava/lang/Throwable;
       4: areturn

  private void setLastCheckoutFailure(java.lang.Throwable);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #34                 // Field lastCheckoutFailure:Ljava/lang/Throwable;
      26: aload_0
      27: aload_1
      28: putfield      #33                 // Field lastResourceTestFailure:Ljava/lang/Throwable;
      31: return

  public synchronized java.lang.Throwable getLastIdleCheckFailure();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lastIdleTestFailure:Ljava/lang/Throwable;
       4: areturn

  private void setLastIdleCheckFailure(java.lang.Throwable);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #35                 // Field lastIdleTestFailure:Ljava/lang/Throwable;
      26: aload_0
      27: aload_1
      28: putfield      #33                 // Field lastResourceTestFailure:Ljava/lang/Throwable;
      31: return

  public synchronized java.lang.Throwable getLastResourceTestFailure();
    Code:
       0: aload_0
       1: getfield      #33                 // Field lastResourceTestFailure:Ljava/lang/Throwable;
       4: areturn

  public synchronized java.lang.Throwable getLastAcquisitionFailure();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastAcquisitionFailiure:Ljava/lang/Throwable;
       4: areturn

  private synchronized void setLastAcquisitionFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field lastAcquisitionFailiure:Ljava/lang/Throwable;
       5: return

  public synchronized int getNumCheckoutWaiters();
    Code:
       0: aload_0
       1: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: ireturn

  public synchronized int getNumPendingAcquireTasks();
    Code:
       0: aload_0
       1: getfield      #39                 // Field pending_acquires:I
       4: ireturn

  public synchronized int getNumPendingRemoveTasks();
    Code:
       0: aload_0
       1: getfield      #40                 // Field pending_removes:I
       4: ireturn

  public synchronized int getNumThreadsWaitingForResources();
    Code:
       0: aload_0
       1: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: ireturn

  public synchronized java.lang.String[] getThreadNamesWaitingForResources();
    Code:
       0: aload_0
       1: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: istore_1
       8: iload_1
       9: anewarray     #41                 // class java/lang/String
      12: astore_2
      13: iconst_0
      14: istore_3
      15: aload_0
      16: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
      19: invokevirtual #42                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          56
      34: aload_2
      35: iload_3
      36: iinc          3, 1
      39: aload         4
      41: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #45                 // class java/lang/Thread
      49: invokevirtual #46                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      52: aastore
      53: goto          24
      56: aload_2
      57: invokestatic  #47                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      60: aload_2
      61: areturn

  public synchronized int getNumThreadsWaitingForAdministrativeTasks();
    Code:
       0: aload_0
       1: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: ireturn

  public synchronized java.lang.String[] getThreadNamesWaitingForAdministrativeTasks();
    Code:
       0: aload_0
       1: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: istore_1
       8: iload_1
       9: anewarray     #41                 // class java/lang/String
      12: astore_2
      13: iconst_0
      14: istore_3
      15: aload_0
      16: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
      19: invokevirtual #42                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          56
      34: aload_2
      35: iload_3
      36: iinc          3, 1
      39: aload         4
      41: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #45                 // class java/lang/Thread
      49: invokevirtual #46                 // Method java/lang/Thread.getName:()Ljava/lang/String;
      52: aastore
      53: goto          24
      56: aload_2
      57: invokestatic  #47                 // Method java/util/Arrays.sort:([Ljava/lang/Object;)V
      60: aload_2
      61: areturn

  private void addToFormerResources(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #49                 // Field formerResources:Ljava/util/Map;
       4: aload_1
       5: aconst_null
       6: invokeinterface #50,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  private boolean isFormerResource(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #49                 // Field formerResources:Ljava/util/Map;
       4: invokeinterface #51,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokeinterface #52,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      15: ireturn

  public com.mchange.v2.resourcepool.BasicResourcePool(com.mchange.v2.resourcepool.ResourcePool$Manager, int, int, int, int, int, int, long, long, long, long, long, long, boolean, boolean, boolean, com.mchange.v2.async.AsynchronousRunner, com.mchange.v2.async.RunnableQueue, java.util.Timer, com.mchange.v2.resourcepool.BasicResourcePoolFactory) throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aload_0
       1: invokespecial #53                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
       8: putfield      #23                 // Field pool_start_time:J
      11: aload_0
      12: new           #54                 // class java/util/HashSet
      15: dup
      16: invokespecial #55                 // Method java/util/HashSet."<init>":()V
      19: putfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
      22: aload_0
      23: new           #54                 // class java/util/HashSet
      26: dup
      27: invokespecial #55                 // Method java/util/HashSet."<init>":()V
      30: putfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
      33: aload_0
      34: new           #56                 // class java/util/HashMap
      37: dup
      38: invokespecial #57                 // Method java/util/HashMap."<init>":()V
      41: putfield      #58                 // Field managed:Ljava/util/HashMap;
      44: aload_0
      45: new           #59                 // class java/util/LinkedList
      48: dup
      49: invokespecial #60                 // Method java/util/LinkedList."<init>":()V
      52: putfield      #61                 // Field unused:Ljava/util/LinkedList;
      55: aload_0
      56: new           #54                 // class java/util/HashSet
      59: dup
      60: invokespecial #55                 // Method java/util/HashSet."<init>":()V
      63: putfield      #62                 // Field excluded:Ljava/util/HashSet;
      66: aload_0
      67: new           #63                 // class java/util/WeakHashMap
      70: dup
      71: invokespecial #64                 // Method java/util/WeakHashMap."<init>":()V
      74: putfield      #49                 // Field formerResources:Ljava/util/Map;
      77: aload_0
      78: new           #54                 // class java/util/HashSet
      81: dup
      82: invokespecial #55                 // Method java/util/HashSet."<init>":()V
      85: putfield      #65                 // Field idleCheckResources:Ljava/util/Set;
      88: aload_0
      89: iconst_0
      90: putfield      #66                 // Field force_kill_acquires:Z
      93: aload_0
      94: iconst_0
      95: putfield      #67                 // Field broken:Z
      98: aload_0
      99: lconst_0
     100: putfield      #25                 // Field failed_checkins:J
     103: aload_0
     104: lconst_0
     105: putfield      #26                 // Field failed_checkouts:J
     108: aload_0
     109: lconst_0
     110: putfield      #27                 // Field failed_idle_tests:J
     113: aload_0
     114: aconst_null
     115: putfield      #28                 // Field lastCheckinFailure:Ljava/lang/Throwable;
     118: aload_0
     119: aconst_null
     120: putfield      #34                 // Field lastCheckoutFailure:Ljava/lang/Throwable;
     123: aload_0
     124: aconst_null
     125: putfield      #35                 // Field lastIdleTestFailure:Ljava/lang/Throwable;
     128: aload_0
     129: aconst_null
     130: putfield      #33                 // Field lastResourceTestFailure:Ljava/lang/Throwable;
     133: aload_0
     134: aconst_null
     135: putfield      #36                 // Field lastAcquisitionFailiure:Ljava/lang/Throwable;
     138: iload_3
     139: iload         4
     141: if_icmple     216
     144: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     147: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     150: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     155: ifeq          213
     158: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     161: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     164: new           #70                 // class java/lang/StringBuilder
     167: dup
     168: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     171: ldc           #72                 // String Bad pool size config, min
     173: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     176: iload_3
     177: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     180: ldc           #75                 // String  > max
     182: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     185: iload         4
     187: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     190: ldc           #76                 // String . Using
     192: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: iload         4
     197: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     200: ldc           #77                 // String  as min.
     202: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     205: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     208: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     213: iload         4
     215: istore_3
     216: iload_2
     217: iload_3
     218: if_icmpge     290
     221: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     224: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     227: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     232: ifeq          288
     235: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     238: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     241: new           #70                 // class java/lang/StringBuilder
     244: dup
     245: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     248: ldc           #80                 // String Bad pool size config, start
     250: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     253: iload_2
     254: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     257: ldc           #81                 // String  < min
     259: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     262: iload_3
     263: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     266: ldc           #76                 // String . Using
     268: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: iload_3
     272: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     275: ldc           #82                 // String  as start.
     277: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     283: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     288: iload_3
     289: istore_2
     290: iload_2
     291: iload         4
     293: if_icmple     368
     296: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     299: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     302: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     307: ifeq          365
     310: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     313: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     316: new           #70                 // class java/lang/StringBuilder
     319: dup
     320: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     323: ldc           #80                 // String Bad pool size config, start
     325: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     328: iload_2
     329: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     332: ldc           #75                 // String  > max
     334: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     337: iload         4
     339: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     342: ldc           #76                 // String . Using
     344: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     347: iload         4
     349: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     352: ldc           #82                 // String  as start.
     354: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     357: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     360: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     365: iload         4
     367: istore_2
     368: aload_0
     369: aload_1
     370: putfield      #83                 // Field mgr:Lcom/mchange/v2/resourcepool/ResourcePool$Manager;
     373: aload_0
     374: iload_2
     375: putfield      #84                 // Field start:I
     378: aload_0
     379: iload_3
     380: putfield      #85                 // Field min:I
     383: aload_0
     384: iload         4
     386: putfield      #86                 // Field max:I
     389: aload_0
     390: iload         5
     392: putfield      #87                 // Field inc:I
     395: aload_0
     396: iload         6
     398: putfield      #88                 // Field num_acq_attempts:I
     401: aload_0
     402: iload         7
     404: putfield      #89                 // Field acq_attempt_delay:I
     407: aload_0
     408: lload         8
     410: putfield      #90                 // Field check_idle_resources_delay:J
     413: aload_0
     414: lload         10
     416: putfield      #91                 // Field max_resource_age:J
     419: aload_0
     420: lload         12
     422: putfield      #92                 // Field max_idle_time:J
     425: aload_0
     426: lload         14
     428: putfield      #93                 // Field excess_max_idle_time:J
     431: aload_0
     432: lload         16
     434: putfield      #94                 // Field destroy_unreturned_resc_time:J
     437: aload_0
     438: iload         20
     440: putfield      #95                 // Field break_on_acquisition_failure:Z
     443: aload_0
     444: iload         21
     446: ifeq          460
     449: lload         16
     451: lconst_0
     452: lcmp
     453: ifle          460
     456: iconst_1
     457: goto          461
     460: iconst_0
     461: putfield      #96                 // Field debug_store_checkout_exceptions:Z
     464: aload_0
     465: iload         22
     467: putfield      #97                 // Field force_synchronous_checkins:Z
     470: aload_0
     471: aload         23
     473: putfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
     476: aload_0
     477: aload         24
     479: putfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
     482: aload_0
     483: aload         25
     485: putfield      #100                // Field cullAndIdleRefurbishTimer:Ljava/util/Timer;
     488: aload_0
     489: aload         26
     491: putfield      #101                // Field factory:Lcom/mchange/v2/resourcepool/BasicResourcePoolFactory;
     494: aload_0
     495: iconst_0
     496: putfield      #39                 // Field pending_acquires:I
     499: aload_0
     500: iconst_0
     501: putfield      #40                 // Field pending_removes:I
     504: aload_0
     505: aload_0
     506: getfield      #84                 // Field start:I
     509: putfield      #102                // Field target_pool_size:I
     512: aload         24
     514: ifnull        532
     517: aload_0
     518: new           #103                // class com/mchange/v2/resourcepool/ResourcePoolEventSupport
     521: dup
     522: aload_0
     523: invokespecial #104                // Method com/mchange/v2/resourcepool/ResourcePoolEventSupport."<init>":(Lcom/mchange/v2/resourcepool/ResourcePool;)V
     526: putfield      #105                // Field rpes:Lcom/mchange/v2/resourcepool/ResourcePoolEventSupport;
     529: goto          537
     532: aload_0
     533: aconst_null
     534: putfield      #105                // Field rpes:Lcom/mchange/v2/resourcepool/ResourcePoolEventSupport;
     537: aload_0
     538: invokespecial #106                // Method ensureStartResources:()V
     541: aload_0
     542: invokespecial #107                // Method mustEnforceExpiration:()Z
     545: ifeq          604
     548: lload         18
     550: lconst_0
     551: lcmp
     552: ifgt          566
     555: aload_0
     556: aload_0
     557: invokespecial #108                // Method automaticExpirationEnforcementDelay:()J
     560: putfield      #109                // Field expiration_enforcement_delay:J
     563: goto          572
     566: aload_0
     567: lload         18
     569: putfield      #109                // Field expiration_enforcement_delay:J
     572: aload_0
     573: new           #110                // class com/mchange/v2/resourcepool/BasicResourcePool$CullTask
     576: dup
     577: aload_0
     578: invokespecial #111                // Method com/mchange/v2/resourcepool/BasicResourcePool$CullTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
     581: putfield      #112                // Field cullTask:Ljava/util/TimerTask;
     584: aload         25
     586: aload_0
     587: getfield      #112                // Field cullTask:Ljava/util/TimerTask;
     590: aload_0
     591: invokespecial #113                // Method minExpirationTime:()J
     594: aload_0
     595: getfield      #109                // Field expiration_enforcement_delay:J
     598: invokevirtual #114                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;JJ)V
     601: goto          610
     604: aload_0
     605: lload         18
     607: putfield      #109                // Field expiration_enforcement_delay:J
     610: lload         8
     612: lconst_0
     613: lcmp
     614: ifle          642
     617: aload_0
     618: new           #115                // class com/mchange/v2/resourcepool/BasicResourcePool$CheckIdleResourcesTask
     621: dup
     622: aload_0
     623: invokespecial #116                // Method com/mchange/v2/resourcepool/BasicResourcePool$CheckIdleResourcesTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
     626: putfield      #117                // Field idleRefurbishTask:Ljava/util/TimerTask;
     629: aload         25
     631: aload_0
     632: getfield      #117                // Field idleRefurbishTask:Ljava/util/TimerTask;
     635: lload         8
     637: lload         8
     639: invokevirtual #114                // Method java/util/Timer.schedule:(Ljava/util/TimerTask;JJ)V
     642: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     645: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     648: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     653: ifeq          863
     656: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     659: new           #70                 // class java/lang/StringBuilder
     662: dup
     663: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     666: aload_0
     667: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     670: ldc           #120                // String  config: [start ->
     672: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     675: aload_0
     676: getfield      #84                 // Field start:I
     679: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     682: ldc           #121                // String ; min ->
     684: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     687: aload_0
     688: getfield      #85                 // Field min:I
     691: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     694: ldc           #122                // String ; max ->
     696: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     699: aload_0
     700: getfield      #86                 // Field max:I
     703: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     706: ldc           #123                // String ; inc ->
     708: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     711: aload_0
     712: getfield      #87                 // Field inc:I
     715: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     718: ldc           #124                // String ; num_acq_attempts ->
     720: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     723: aload_0
     724: getfield      #88                 // Field num_acq_attempts:I
     727: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     730: ldc           #125                // String ; acq_attempt_delay ->
     732: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     735: aload_0
     736: getfield      #89                 // Field acq_attempt_delay:I
     739: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     742: ldc           #126                // String ; check_idle_resources_delay ->
     744: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     747: aload_0
     748: getfield      #90                 // Field check_idle_resources_delay:J
     751: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     754: ldc           #128                // String ; max_resource_age ->
     756: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     759: aload_0
     760: getfield      #91                 // Field max_resource_age:J
     763: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     766: ldc           #129                // String ; max_idle_time ->
     768: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     771: aload_0
     772: getfield      #92                 // Field max_idle_time:J
     775: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     778: ldc           #130                // String ; excess_max_idle_time ->
     780: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     783: aload_0
     784: getfield      #93                 // Field excess_max_idle_time:J
     787: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     790: ldc           #131                // String ; destroy_unreturned_resc_time ->
     792: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     795: aload_0
     796: getfield      #94                 // Field destroy_unreturned_resc_time:J
     799: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     802: ldc           #132                // String ; expiration_enforcement_delay ->
     804: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     807: aload_0
     808: getfield      #109                // Field expiration_enforcement_delay:J
     811: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     814: ldc           #133                // String ; break_on_acquisition_failure ->
     816: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     819: aload_0
     820: getfield      #95                 // Field break_on_acquisition_failure:Z
     823: invokevirtual #134                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     826: ldc           #135                // String ; debug_store_checkout_exceptions ->
     828: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     831: aload_0
     832: getfield      #96                 // Field debug_store_checkout_exceptions:Z
     835: invokevirtual #134                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     838: ldc           #136                // String ; force_synchronous_checkins ->
     840: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     843: aload_0
     844: getfield      #97                 // Field force_synchronous_checkins:Z
     847: invokevirtual #134                // Method java/lang/StringBuilder.append:(Z)Ljava/lang/StringBuilder;
     850: ldc           #137                // String ]
     852: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     855: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     858: invokeinterface #138,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finer:(Ljava/lang/String;)V
     863: goto          874
     866: astore        27
     868: aload         27
     870: invokestatic  #140                // Method com/mchange/v2/resourcepool/ResourcePoolUtils.convertThrowable:(Ljava/lang/Throwable;)Lcom/mchange/v2/resourcepool/ResourcePoolException;
     873: athrow
     874: return
    Exception table:
       from    to  target type
         138   863   866   Class java/lang/Exception

  private boolean mustTestIdleResources();
    Code:
       0: aload_0
       1: getfield      #90                 // Field check_idle_resources_delay:J
       4: lconst_0
       5: lcmp
       6: ifle          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private boolean mustEnforceExpiration();
    Code:
       0: aload_0
       1: getfield      #91                 // Field max_resource_age:J
       4: lconst_0
       5: lcmp
       6: ifgt          36
       9: aload_0
      10: getfield      #92                 // Field max_idle_time:J
      13: lconst_0
      14: lcmp
      15: ifgt          36
      18: aload_0
      19: getfield      #93                 // Field excess_max_idle_time:J
      22: lconst_0
      23: lcmp
      24: ifgt          36
      27: aload_0
      28: getfield      #94                 // Field destroy_unreturned_resc_time:J
      31: lconst_0
      32: lcmp
      33: ifle          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private long minExpirationTime();
    Code:
       0: ldc2_w        #142                // long 9223372036854775807l
       3: lstore_1
       4: aload_0
       5: getfield      #91                 // Field max_resource_age:J
       8: lconst_0
       9: lcmp
      10: ifle          22
      13: lload_1
      14: aload_0
      15: getfield      #91                 // Field max_resource_age:J
      18: invokestatic  #144                // Method java/lang/Math.min:(JJ)J
      21: lstore_1
      22: aload_0
      23: getfield      #92                 // Field max_idle_time:J
      26: lconst_0
      27: lcmp
      28: ifle          40
      31: lload_1
      32: aload_0
      33: getfield      #92                 // Field max_idle_time:J
      36: invokestatic  #144                // Method java/lang/Math.min:(JJ)J
      39: lstore_1
      40: aload_0
      41: getfield      #93                 // Field excess_max_idle_time:J
      44: lconst_0
      45: lcmp
      46: ifle          58
      49: lload_1
      50: aload_0
      51: getfield      #93                 // Field excess_max_idle_time:J
      54: invokestatic  #144                // Method java/lang/Math.min:(JJ)J
      57: lstore_1
      58: aload_0
      59: getfield      #94                 // Field destroy_unreturned_resc_time:J
      62: lconst_0
      63: lcmp
      64: ifle          76
      67: lload_1
      68: aload_0
      69: getfield      #94                 // Field destroy_unreturned_resc_time:J
      72: invokestatic  #144                // Method java/lang/Math.min:(JJ)J
      75: lstore_1
      76: lload_1
      77: lreturn

  private long automaticExpirationEnforcementDelay();
    Code:
       0: aload_0
       1: invokespecial #113                // Method minExpirationTime:()J
       4: lstore_1
       5: lload_1
       6: ldc2_w        #146                // long 4l
       9: ldiv
      10: lstore_1
      11: lload_1
      12: ldc2_w        #148                // long 900000l
      15: invokestatic  #144                // Method java/lang/Math.min:(JJ)J
      18: lstore_1
      19: lload_1
      20: ldc2_w        #150                // long 1000l
      23: invokestatic  #152                // Method java/lang/Math.max:(JJ)J
      26: lstore_1
      27: lload_1
      28: lreturn

  public long getEffectiveExpirationEnforcementDelay();
    Code:
       0: aload_0
       1: getfield      #109                // Field expiration_enforcement_delay:J
       4: lreturn

  private synchronized boolean isBroken();
    Code:
       0: aload_0
       1: getfield      #67                 // Field broken:Z
       4: ireturn

  private boolean supportsEvents();
    Code:
       0: aload_0
       1: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.lang.Object checkoutResource() throws com.mchange.v2.resourcepool.ResourcePoolException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lconst_0
       2: invokevirtual #153                // Method checkoutResource:(J)Ljava/lang/Object;
       5: areturn
       6: astore_1
       7: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      10: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      13: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      18: ifeq          35
      21: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      24: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      27: ldc           #155                // String Huh??? TimeoutException with no timeout set!!!
      29: aload_1
      30: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      35: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
      38: dup
      39: ldc           #155                // String Huh??? TimeoutException with no timeout set!!!
      41: aload_1
      42: invokespecial #158                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      45: athrow
    Exception table:
       from    to  target type
           0     5     6   Class com/mchange/v2/resourcepool/TimeoutException

  private void _recheckResizePool();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #67                 // Field broken:Z
      25: ifne          81
      28: aload_0
      29: getfield      #58                 // Field managed:Ljava/util/HashMap;
      32: invokevirtual #159                // Method java/util/HashMap.size:()I
      35: istore_1
      36: iload_1
      37: aload_0
      38: getfield      #40                 // Field pending_removes:I
      41: isub
      42: aload_0
      43: getfield      #102                // Field target_pool_size:I
      46: isub
      47: dup
      48: istore_2
      49: ifle          60
      52: aload_0
      53: iload_2
      54: invokespecial #160                // Method shrinkPool:(I)V
      57: goto          81
      60: aload_0
      61: getfield      #102                // Field target_pool_size:I
      64: iload_1
      65: aload_0
      66: getfield      #39                 // Field pending_acquires:I
      69: iadd
      70: isub
      71: dup
      72: istore_3
      73: ifle          81
      76: aload_0
      77: iload_3
      78: invokespecial #161                // Method expandPool:(I)V
      81: return

  private synchronized void incrementPendingAcquires();
    Code:
       0: aload_0
       1: dup
       2: getfield      #39                 // Field pending_acquires:I
       5: iconst_1
       6: iadd
       7: putfield      #39                 // Field pending_acquires:I
      10: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      13: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      16: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      21: ifeq          54
      24: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      27: new           #70                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #163                // String incremented pending_acquires:
      36: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #39                 // Field pending_acquires:I
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #164,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finest:(Ljava/lang/String;)V
      54: return

  private synchronized void incrementPendingRemoves();
    Code:
       0: aload_0
       1: dup
       2: getfield      #40                 // Field pending_removes:I
       5: iconst_1
       6: iadd
       7: putfield      #40                 // Field pending_removes:I
      10: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      13: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      16: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      21: ifeq          54
      24: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      27: new           #70                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #165                // String incremented pending_removes:
      36: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #40                 // Field pending_removes:I
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #164,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finest:(Ljava/lang/String;)V
      54: return

  private synchronized void decrementPendingAcquires();
    Code:
       0: aload_0
       1: invokespecial #166                // Method _decrementPendingAcquires:()V
       4: return

  private void _decrementPendingAcquires();
    Code:
       0: aload_0
       1: dup
       2: getfield      #39                 // Field pending_acquires:I
       5: iconst_1
       6: isub
       7: putfield      #39                 // Field pending_acquires:I
      10: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      13: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      16: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      21: ifeq          54
      24: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      27: new           #70                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #167                // String decremented pending_acquires:
      36: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #39                 // Field pending_acquires:I
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #164,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finest:(Ljava/lang/String;)V
      54: return

  private synchronized void decrementPendingRemoves();
    Code:
       0: aload_0
       1: dup
       2: getfield      #40                 // Field pending_removes:I
       5: iconst_1
       6: isub
       7: putfield      #40                 // Field pending_removes:I
      10: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      13: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      16: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      21: ifeq          54
      24: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      27: new           #70                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #168                // String decremented pending_removes:
      36: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: getfield      #40                 // Field pending_removes:I
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      46: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokeinterface #164,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finest:(Ljava/lang/String;)V
      54: return

  private synchronized void recheckResizePool();
    Code:
       0: aload_0
       1: invokespecial #169                // Method _recheckResizePool:()V
       4: return

  private void expandPool(int);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #170                // Field USE_SCATTERED_ACQUIRE_TASK:Z
      24: ifeq          60
      27: iconst_0
      28: istore_2
      29: iload_2
      30: iload_1
      31: if_icmpge     57
      34: aload_0
      35: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
      38: new           #171                // class com/mchange/v2/resourcepool/BasicResourcePool$ScatteredAcquireTask
      41: dup
      42: aload_0
      43: invokespecial #172                // Method com/mchange/v2/resourcepool/BasicResourcePool$ScatteredAcquireTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
      46: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      51: iinc          2, 1
      54: goto          29
      57: goto          90
      60: iconst_0
      61: istore_2
      62: iload_2
      63: iload_1
      64: if_icmpge     90
      67: aload_0
      68: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
      71: new           #174                // class com/mchange/v2/resourcepool/BasicResourcePool$AcquireTask
      74: dup
      75: aload_0
      76: invokespecial #175                // Method com/mchange/v2/resourcepool/BasicResourcePool$AcquireTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
      79: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      84: iinc          2, 1
      87: goto          62
      90: return

  private void shrinkPool(int);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_2
      23: iload_2
      24: iload_1
      25: if_icmpge     51
      28: aload_0
      29: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
      32: new           #176                // class com/mchange/v2/resourcepool/BasicResourcePool$RemoveTask
      35: dup
      36: aload_0
      37: invokespecial #177                // Method com/mchange/v2/resourcepool/BasicResourcePool$RemoveTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
      40: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      45: iinc          2, 1
      48: goto          23
      51: return

  public java.lang.Object checkoutResource(long) throws com.mchange.v2.resourcepool.TimeoutException, com.mchange.v2.resourcepool.ResourcePoolException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #178                // Method prelimCheckoutResource:(J)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokespecial #179                // Method attemptRefurbishResourceOnCheckout:(Ljava/lang/Object;)Z
      11: istore        4
      13: aload_0
      14: dup
      15: astore        5
      17: monitorenter
      18: iload         4
      20: ifne          86
      23: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      26: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      29: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      34: ifeq          72
      37: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      40: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      43: new           #70                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #180                // String Resource [
      52: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: aload_3
      56: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: ldc           #181                // String ] could not be refurbished in preparation for checkout. Will try to find a better resource.
      61: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      72: aload_0
      73: aload_3
      74: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
      77: aload_0
      78: invokespecial #18                 // Method ensureMinResources:()V
      81: aconst_null
      82: astore_3
      83: goto          219
      86: aload_0
      87: aload_3
      88: aload_0
      89: getfield      #58                 // Field managed:Ljava/util/HashMap;
      92: invokevirtual #159                // Method java/util/HashMap.size:()I
      95: aload_0
      96: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      99: invokevirtual #182                // Method java/util/LinkedList.size:()I
     102: aload_0
     103: getfield      #62                 // Field excluded:Ljava/util/HashSet;
     106: invokevirtual #38                 // Method java/util/HashSet.size:()I
     109: invokespecial #183                // Method asyncFireResourceCheckedOut:(Ljava/lang/Object;III)V
     112: aload_0
     113: invokespecial #184                // Method trace:()V
     116: aload_0
     117: getfield      #58                 // Field managed:Ljava/util/HashMap;
     120: aload_3
     121: invokevirtual #185                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     124: checkcast     #186                // class com/mchange/v2/resourcepool/BasicResourcePool$PunchCard
     127: astore        6
     129: aload         6
     131: ifnonnull     190
     134: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     137: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     140: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     145: ifeq          185
     148: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     151: new           #70                 // class java/lang/StringBuilder
     154: dup
     155: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     158: ldc           #187                // String Resource
     160: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     163: aload_3
     164: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     167: ldc           #188                // String  was removed from the pool while it was being checked out
     169: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #189                // String  or refurbished for checkout. Will try to find a replacement resource.
     174: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokeinterface #138,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finer:(Ljava/lang/String;)V
     185: aconst_null
     186: astore_3
     187: goto          219
     190: aload         6
     192: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
     195: putfield      #190                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkout_time:J
     198: aload_0
     199: getfield      #96                 // Field debug_store_checkout_exceptions:Z
     202: ifeq          219
     205: aload         6
     207: new           #139                // class java/lang/Exception
     210: dup
     211: ldc           #191                // String DEBUG STACK TRACE: Overdue resource check-out stack trace.
     213: invokespecial #192                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     216: putfield      #193                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkoutStackTraceException:Ljava/lang/Exception;
     219: aload         5
     221: monitorexit
     222: goto          233
     225: astore        7
     227: aload         5
     229: monitorexit
     230: aload         7
     232: athrow
     233: aload_3
     234: ifnonnull     243
     237: aload_0
     238: lload_1
     239: invokevirtual #153                // Method checkoutResource:(J)Ljava/lang/Object;
     242: areturn
     243: aload_3
     244: areturn
     245: astore_3
     246: new           #195                // class com/mchange/v2/resourcepool/NoGoodResourcesException
     249: dup
     250: ldc           #196                // String After checking so many resources we blew the stack, no resources tested acceptable for checkout. See logger com.mchange.v2.resourcepool.BasicResourcePool output at FINER/DEBUG for information on individual failures.
     252: aload_3
     253: invokespecial #197                // Method com/mchange/v2/resourcepool/NoGoodResourcesException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     256: athrow
    Exception table:
       from    to  target type
          18   222   225   any
         225   230   225   any
           0   242   245   Class java/lang/StackOverflowError
         243   244   245   Class java/lang/StackOverflowError

  private synchronized java.lang.Object prelimCheckoutResource(long) throws com.mchange.v2.resourcepool.TimeoutException, com.mchange.v2.resourcepool.ResourcePoolException, java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #198                // Method ensureNotBroken:()V
       4: aload_0
       5: getfield      #61                 // Field unused:Ljava/util/LinkedList;
       8: invokevirtual #182                // Method java/util/LinkedList.size:()I
      11: istore_3
      12: iload_3
      13: ifne          234
      16: aload_0
      17: getfield      #58                 // Field managed:Ljava/util/HashMap;
      20: invokevirtual #159                // Method java/util/HashMap.size:()I
      23: istore        4
      25: iload         4
      27: aload_0
      28: getfield      #86                 // Field max:I
      31: if_icmpge     167
      34: iload         4
      36: aload_0
      37: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
      40: invokevirtual #38                 // Method java/util/HashSet.size:()I
      43: iadd
      44: iconst_1
      45: iadd
      46: istore        5
      48: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      51: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      54: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      59: ifeq          115
      62: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      65: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      68: new           #70                 // class java/lang/StringBuilder
      71: dup
      72: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      75: ldc           #199                // String acquire test -- pool size:
      77: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: iload         4
      82: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      85: ldc           #200                // String ; target_pool_size:
      87: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #102                // Field target_pool_size:I
      94: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc           #201                // String ; desired target?
      99: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: iload         5
     104: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     107: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     110: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     115: iload         5
     117: aload_0
     118: getfield      #102                // Field target_pool_size:I
     121: if_icmplt     164
     124: iload         5
     126: aload_0
     127: getfield      #102                // Field target_pool_size:I
     130: aload_0
     131: getfield      #87                 // Field inc:I
     134: iadd
     135: invokestatic  #202                // Method java/lang/Math.max:(II)I
     138: istore        5
     140: aload_0
     141: aload_0
     142: getfield      #86                 // Field max:I
     145: iload         5
     147: invokestatic  #203                // Method java/lang/Math.min:(II)I
     150: aload_0
     151: getfield      #85                 // Field min:I
     154: invokestatic  #202                // Method java/lang/Math.max:(II)I
     157: putfield      #102                // Field target_pool_size:I
     160: aload_0
     161: invokespecial #169                // Method _recheckResizePool:()V
     164: goto          229
     167: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     170: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     173: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     178: ifeq          229
     181: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     184: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     187: new           #70                 // class java/lang/StringBuilder
     190: dup
     191: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     194: ldc           #204                // String acquire test -- pool is already maxed out. [managed:
     196: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     199: iload         4
     201: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     204: ldc           #205                // String ; max:
     206: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: aload_0
     210: getfield      #86                 // Field max:I
     213: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     216: ldc           #137                // String ]
     218: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     221: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     224: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     229: aload_0
     230: lload_1
     231: invokespecial #206                // Method awaitAvailable:(J)V
     234: aload_0
     235: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     238: iconst_0
     239: invokevirtual #207                // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
     242: astore        4
     244: aload_0
     245: getfield      #65                 // Field idleCheckResources:Ljava/util/Set;
     248: aload         4
     250: invokeinterface #52,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     255: ifeq          365
     258: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     261: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     264: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     269: ifeq          307
     272: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     275: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     278: new           #70                 // class java/lang/StringBuilder
     281: dup
     282: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     285: ldc           #208                // String Resource we want to check out is in idleCheck! (waiting until idle-check completes.) [
     287: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: aload_0
     291: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     294: ldc           #137                // String ]
     296: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     299: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     302: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     307: invokestatic  #209                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     310: astore        5
     312: aload_0
     313: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     316: aload         5
     318: invokevirtual #210                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     321: pop
     322: aload_0
     323: lload_1
     324: invokevirtual #211                // Method java/lang/Object.wait:(J)V
     327: aload_0
     328: invokespecial #198                // Method ensureNotBroken:()V
     331: aload_0
     332: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     335: aload         5
     337: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     340: pop
     341: goto          359
     344: astore        6
     346: aload_0
     347: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     350: aload         5
     352: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     355: pop
     356: aload         6
     358: athrow
     359: aload_0
     360: lload_1
     361: invokespecial #178                // Method prelimCheckoutResource:(J)Ljava/lang/Object;
     364: areturn
     365: aload_0
     366: aload         4
     368: invokespecial #213                // Method shouldExpire:(Ljava/lang/Object;)Z
     371: ifeq          417
     374: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     377: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     380: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     385: ifeq          401
     388: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     391: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     394: ldc           #214                // String Resource we want to check out has expired already. Trying again.
     396: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     401: aload_0
     402: aload         4
     404: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
     407: aload_0
     408: invokespecial #18                 // Method ensureMinResources:()V
     411: aload_0
     412: lload_1
     413: invokespecial #178                // Method prelimCheckoutResource:(J)Ljava/lang/Object;
     416: areturn
     417: aload_0
     418: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     421: iconst_0
     422: invokevirtual #215                // Method java/util/LinkedList.remove:(I)Ljava/lang/Object;
     425: pop
     426: aload         4
     428: areturn
     429: astore_3
     430: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     433: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     436: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     441: ifeq          475
     444: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     447: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     450: new           #70                 // class java/lang/StringBuilder
     453: dup
     454: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     457: aload_0
     458: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     461: ldc           #218                // String  -- the pool was found to be closed or broken during an attempt to check out a resource.
     463: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     466: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     469: aload_3
     470: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     475: aload_0
     476: invokespecial #12                 // Method unexpectedBreak:()V
     479: aload_3
     480: athrow
     481: astore_3
     482: aload_0
     483: getfield      #67                 // Field broken:Z
     486: ifeq          622
     489: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     492: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     495: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     500: ifeq          556
     503: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     506: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     509: new           #70                 // class java/lang/StringBuilder
     512: dup
     513: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     516: aload_0
     517: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     520: ldc           #220                // String  -- an attempt to checkout a resource was interrupted, because the pool is now closed.
     522: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     525: ldc           #221                // String [Thread:
     527: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     530: invokestatic  #209                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     533: invokevirtual #46                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     536: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     539: bipush        93
     541: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     544: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     547: aload_3
     548: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     553: goto          672
     556: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     559: getstatic     #223                // Field com/mchange/v2/log/MLevel.INFO:Lcom/mchange/v2/log/MLevel;
     562: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     567: ifeq          672
     570: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     573: getstatic     #223                // Field com/mchange/v2/log/MLevel.INFO:Lcom/mchange/v2/log/MLevel;
     576: new           #70                 // class java/lang/StringBuilder
     579: dup
     580: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     583: aload_0
     584: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     587: ldc           #220                // String  -- an attempt to checkout a resource was interrupted, because the pool is now closed.
     589: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     592: ldc           #221                // String [Thread:
     594: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     597: invokestatic  #209                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     600: invokevirtual #46                 // Method java/lang/Thread.getName:()Ljava/lang/String;
     603: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     606: bipush        93
     608: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     611: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     614: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     619: goto          672
     622: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     625: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     628: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     633: ifeq          672
     636: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     639: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     642: new           #70                 // class java/lang/StringBuilder
     645: dup
     646: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     649: aload_0
     650: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     653: ldc           #224                // String  -- an attempt to checkout a resource was interrupted, and the pool is still live: some other thread
     655: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     658: ldc           #225                // String must have interrupted the Thread attempting checkout!
     660: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     663: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     666: aload_3
     667: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     672: aload_3
     673: athrow
     674: astore_3
     675: new           #195                // class com/mchange/v2/resourcepool/NoGoodResourcesException
     678: dup
     679: ldc           #196                // String After checking so many resources we blew the stack, no resources tested acceptable for checkout. See logger com.mchange.v2.resourcepool.BasicResourcePool output at FINER/DEBUG for information on individual failures.
     681: aload_3
     682: invokespecial #197                // Method com/mchange/v2/resourcepool/NoGoodResourcesException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     685: athrow
    Exception table:
       from    to  target type
         312   331   344   any
         344   346   344   any
           0   364   429   Class com/mchange/v2/util/ResourceClosedException
         365   416   429   Class com/mchange/v2/util/ResourceClosedException
         417   428   429   Class com/mchange/v2/util/ResourceClosedException
           0   364   481   Class java/lang/InterruptedException
         365   416   481   Class java/lang/InterruptedException
         417   428   481   Class java/lang/InterruptedException
           0   364   674   Class java/lang/StackOverflowError
         365   416   674   Class java/lang/StackOverflowError
         417   428   674   Class java/lang/StackOverflowError

  public void checkinResource(java.lang.Object) throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: dup
       4: astore_3
       5: monitorenter
       6: aload_0
       7: getfield      #58                 // Field managed:Ljava/util/HashMap;
      10: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      13: aload_1
      14: invokeinterface #52,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      19: ifeq          27
      22: iconst_1
      23: istore_2
      24: goto          153
      27: aload_0
      28: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      31: aload_1
      32: invokevirtual #227                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      35: ifeq          46
      38: aload_0
      39: aload_1
      40: invokespecial #228                // Method doCheckinExcluded:(Ljava/lang/Object;)V
      43: goto          153
      46: aload_0
      47: aload_1
      48: invokespecial #229                // Method isFormerResource:(Ljava/lang/Object;)Z
      51: ifeq          108
      54: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      57: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      60: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      65: ifeq          153
      68: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      71: new           #70                 // class java/lang/StringBuilder
      74: dup
      75: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      78: ldc           #187                // String Resource
      80: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: aload_1
      84: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      87: ldc           #230                // String  checked-in after having been checked-in already, or checked-in after
      89: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: ldc           #231                // String  having being destroyed for being checked-out too long.
      94: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     100: invokeinterface #138,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finer:(Ljava/lang/String;)V
     105: goto          153
     108: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
     111: dup
     112: new           #70                 // class java/lang/StringBuilder
     115: dup
     116: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     119: ldc           #232                // String ResourcePool
     121: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: aload_0
     125: getfield      #67                 // Field broken:Z
     128: ifeq          136
     131: ldc           #233                // String  [BROKEN!]
     133: goto          138
     136: ldc           #234                // String
     138: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #235                // String : Tried to check-in a foreign resource!
     143: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokespecial #236                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;)V
     152: athrow
     153: aload_3
     154: monitorexit
     155: goto          165
     158: astore        4
     160: aload_3
     161: monitorexit
     162: aload         4
     164: athrow
     165: iload_2
     166: ifeq          174
     169: aload_0
     170: aload_1
     171: invokespecial #237                // Method doCheckinManaged:(Ljava/lang/Object;)V
     174: aload_0
     175: invokespecial #238                // Method syncTrace:()V
     178: goto          233
     181: astore_2
     182: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     185: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     188: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     193: ifeq          227
     196: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     199: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     202: new           #70                 // class java/lang/StringBuilder
     205: dup
     206: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     209: aload_0
     210: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     213: ldc           #239                // String  - checkinResource( ... ) -- even broken pools should allow checkins without exception. probable resource pool bug.
     215: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: aload_2
     222: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     227: aload_0
     228: invokespecial #12                 // Method unexpectedBreak:()V
     231: aload_2
     232: athrow
     233: return
    Exception table:
       from    to  target type
           6   155   158   any
         158   162   158   any
           0   178   181   Class com/mchange/v2/util/ResourceClosedException

  public void checkinAll() throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: dup
       4: astore_2
       5: monitorenter
       6: new           #54                 // class java/util/HashSet
       9: dup
      10: aload_0
      11: getfield      #58                 // Field managed:Ljava/util/HashMap;
      14: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      17: invokespecial #240                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      20: astore_1
      21: aload_1
      22: aload_0
      23: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      26: invokeinterface #241,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_0
      33: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      36: invokevirtual #42                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          62
      49: aload_0
      50: aload_3
      51: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: invokespecial #228                // Method doCheckinExcluded:(Ljava/lang/Object;)V
      59: goto          40
      62: aload_2
      63: monitorexit
      64: goto          74
      67: astore        4
      69: aload_2
      70: monitorexit
      71: aload         4
      73: athrow
      74: aload_1
      75: invokeinterface #242,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      80: astore_2
      81: aload_2
      82: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      87: ifeq          103
      90: aload_0
      91: aload_2
      92: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      97: invokespecial #237                // Method doCheckinManaged:(Ljava/lang/Object;)V
     100: goto          81
     103: goto          158
     106: astore_1
     107: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     110: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     113: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     118: ifeq          152
     121: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     124: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
     127: new           #70                 // class java/lang/StringBuilder
     130: dup
     131: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     134: aload_0
     135: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     138: ldc           #243                // String  - checkinAll() -- even broken pools should allow checkins without exception. probable resource pool bug.
     140: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: aload_1
     147: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     152: aload_0
     153: invokespecial #12                 // Method unexpectedBreak:()V
     156: aload_1
     157: athrow
     158: return
    Exception table:
       from    to  target type
           6    64    67   any
          67    71    67   any
           0   103   106   Class com/mchange/v2/util/ResourceClosedException

  public synchronized int statusInPool(java.lang.Object) throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aload_0
       1: getfield      #61                 // Field unused:Ljava/util/LinkedList;
       4: aload_1
       5: invokevirtual #244                // Method java/util/LinkedList.contains:(Ljava/lang/Object;)Z
       8: ifeq          13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: getfield      #58                 // Field managed:Ljava/util/HashMap;
      17: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      20: aload_1
      21: invokeinterface #52,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      26: ifne          40
      29: aload_0
      30: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      33: aload_1
      34: invokevirtual #227                // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
      37: ifeq          42
      40: iconst_1
      41: ireturn
      42: iconst_m1
      43: ireturn
      44: astore_2
      45: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      48: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      51: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      56: ifeq          73
      59: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      62: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      65: ldc           #246                // String Apparent pool break.
      67: aload_2
      68: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      73: aload_0
      74: invokespecial #12                 // Method unexpectedBreak:()V
      77: aload_2
      78: athrow
    Exception table:
       from    to  target type
           0    12    44   Class com/mchange/v2/util/ResourceClosedException
          13    41    44   Class com/mchange/v2/util/ResourceClosedException
          42    43    44   Class com/mchange/v2/util/ResourceClosedException

  public synchronized void markBroken(java.lang.Object);
    Code:
       0: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
       3: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
       6: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      11: ifeq          58
      14: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      17: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      20: new           #70                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #187                // String Resource
      29: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: aload_1
      33: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      36: ldc           #247                // String  marked broken by pool (
      38: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      45: ldc           #248                // String ).
      47: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      58: aload_0
      59: aload_1
      60: invokespecial #249                // Method _markBroken:(Ljava/lang/Object;)V
      63: aload_0
      64: invokespecial #18                 // Method ensureMinResources:()V
      67: goto          103
      70: astore_2
      71: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      74: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      77: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      82: ifeq          99
      85: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      88: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      91: ldc           #246                // String Apparent pool break.
      93: aload_2
      94: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      99: aload_0
     100: invokespecial #12                 // Method unexpectedBreak:()V
     103: return
    Exception table:
       from    to  target type
           0    67    70   Class com/mchange/v2/util/ResourceClosedException

  public int getMinPoolSize();
    Code:
       0: aload_0
       1: getfield      #85                 // Field min:I
       4: ireturn

  public int getMaxPoolSize();
    Code:
       0: aload_0
       1: getfield      #86                 // Field max:I
       4: ireturn

  public synchronized int getPoolSize() throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aload_0
       1: getfield      #58                 // Field managed:Ljava/util/HashMap;
       4: invokevirtual #159                // Method java/util/HashMap.size:()I
       7: ireturn

  public synchronized int getAvailableCount();
    Code:
       0: aload_0
       1: getfield      #61                 // Field unused:Ljava/util/LinkedList;
       4: invokevirtual #182                // Method java/util/LinkedList.size:()I
       7: ireturn

  public synchronized int getExcludedCount();
    Code:
       0: aload_0
       1: getfield      #62                 // Field excluded:Ljava/util/HashSet;
       4: invokevirtual #38                 // Method java/util/HashSet.size:()I
       7: ireturn

  public synchronized int getAwaitingCheckinCount();
    Code:
       0: aload_0
       1: getfield      #58                 // Field managed:Ljava/util/HashMap;
       4: invokevirtual #159                // Method java/util/HashMap.size:()I
       7: aload_0
       8: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      11: invokevirtual #182                // Method java/util/LinkedList.size:()I
      14: isub
      15: aload_0
      16: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      19: invokevirtual #38                 // Method java/util/HashSet.size:()I
      22: iadd
      23: ireturn

  public synchronized int getAwaitingCheckinNotExcludedCount();
    Code:
       0: aload_0
       1: getfield      #58                 // Field managed:Ljava/util/HashMap;
       4: invokevirtual #159                // Method java/util/HashMap.size:()I
       7: aload_0
       8: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      11: invokevirtual #182                // Method java/util/LinkedList.size:()I
      14: isub
      15: ireturn

  public synchronized void resetPool();
    Code:
       0: aload_0
       1: invokespecial #250                // Method cloneOfManaged:()Ljava/util/HashMap;
       4: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
       7: invokeinterface #242,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      12: astore_1
      13: aload_1
      14: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          35
      22: aload_0
      23: aload_1
      24: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: invokespecial #251                // Method markBrokenNoEnsureMinResources:(Ljava/lang/Object;)V
      32: goto          13
      35: aload_0
      36: invokespecial #18                 // Method ensureMinResources:()V
      39: goto          75
      42: astore_1
      43: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      46: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      49: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      54: ifeq          71
      57: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      60: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      63: ldc           #246                // String Apparent pool break.
      65: aload_1
      66: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      71: aload_0
      72: invokespecial #12                 // Method unexpectedBreak:()V
      75: return
    Exception table:
       from    to  target type
           0    39    42   Class com/mchange/v2/util/ResourceClosedException

  public synchronized void close() throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #252                // Method close:(Z)V
       5: return

  public void finalize() throws java.lang.Throwable;
    Code:
       0: aload_0
       1: getfield      #67                 // Field broken:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #253                // Method close:()V
      11: return

  public void addResourcePoolListener(com.mchange.v2.resourcepool.ResourcePoolListener);
    Code:
       0: aload_0
       1: invokespecial #254                // Method supportsEvents:()Z
       4: ifne          41
       7: new           #255                // class java/lang/RuntimeException
      10: dup
      11: new           #70                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc_w         #256                // String  does not support ResourcePoolEvents.
      25: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc_w         #257                // String Probably it was constructed by a BasicResourceFactory configured not to support such events.
      31: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #258                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #105                // Field rpes:Lcom/mchange/v2/resourcepool/ResourcePoolEventSupport;
      45: aload_1
      46: invokevirtual #259                // Method com/mchange/v2/resourcepool/ResourcePoolEventSupport.addResourcePoolListener:(Lcom/mchange/v2/resourcepool/ResourcePoolListener;)V
      49: return

  public void removeResourcePoolListener(com.mchange.v2.resourcepool.ResourcePoolListener);
    Code:
       0: aload_0
       1: invokespecial #254                // Method supportsEvents:()Z
       4: ifne          41
       7: new           #255                // class java/lang/RuntimeException
      10: dup
      11: new           #70                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_0
      19: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc_w         #256                // String  does not support ResourcePoolEvents.
      25: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: ldc_w         #257                // String Probably it was constructed by a BasicResourceFactory configured not to support such events.
      31: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #258                // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: getfield      #105                // Field rpes:Lcom/mchange/v2/resourcepool/ResourcePoolEventSupport;
      45: aload_1
      46: invokevirtual #260                // Method com/mchange/v2/resourcepool/ResourcePoolEventSupport.removeResourcePoolListener:(Lcom/mchange/v2/resourcepool/ResourcePoolListener;)V
      49: return

  private synchronized boolean isForceKillAcquiresPending();
    Code:
       0: aload_0
       1: getfield      #66                 // Field force_kill_acquires:Z
       4: ireturn

  private synchronized void forceKillAcquires() throws java.lang.InterruptedException;
    Code:
       0: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
       3: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
       6: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      11: ifeq          57
      14: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      17: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
      20: new           #70                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc_w         #261                // String Having failed to acquire a resource,
      30: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_0
      34: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      37: ldc_w         #262                // String  is interrupting all Threads waiting on a resource to check out.
      40: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc_w         #263                // String Will try again in response to new client requests.
      46: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      57: invokestatic  #209                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      60: astore_1
      61: aload_0
      62: iconst_1
      63: putfield      #66                 // Field force_kill_acquires:Z
      66: aload_0
      67: invokevirtual #264                // Method java/lang/Object.notifyAll:()V
      70: aload_0
      71: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
      74: invokevirtual #38                 // Method java/util/HashSet.size:()I
      77: ifle          96
      80: aload_0
      81: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
      84: aload_1
      85: invokevirtual #210                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      88: pop
      89: aload_0
      90: invokevirtual #265                // Method java/lang/Object.wait:()V
      93: goto          70
      96: aload_0
      97: iconst_0
      98: putfield      #66                 // Field force_kill_acquires:Z
     101: aload_0
     102: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     105: aload_1
     106: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     109: pop
     110: goto          125
     113: astore_2
     114: aload_0
     115: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     118: aload_1
     119: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     122: pop
     123: aload_2
     124: athrow
     125: return
    Exception table:
       from    to  target type
          61   101   113   any

  private synchronized void unexpectedBreak();
    Code:
       0: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
       3: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
       6: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      11: ifeq          55
      14: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      17: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      20: new           #70                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      27: aload_0
      28: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: ldc_w         #266                // String  -- Unexpectedly broken!!!
      34: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
      43: dup
      44: ldc_w         #267                // String Unexpected Break Stack Trace!
      47: invokespecial #236                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;)V
      50: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      55: aload_0
      56: iconst_0
      57: invokevirtual #252                // Method close:(Z)V
      60: return

  private boolean canFireEvents();
    Code:
       0: aload_0
       1: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
       4: ifnull        18
       7: aload_0
       8: invokespecial #268                // Method isBroken:()Z
      11: ifne          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void asyncFireResourceAcquired(java.lang.Object, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method canFireEvents:()Z
       4: ifeq          33
       7: new           #270                // class com/mchange/v2/resourcepool/BasicResourcePool$1
      10: dup
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: invokespecial #271                // Method com/mchange/v2/resourcepool/BasicResourcePool$1."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;III)V
      20: astore        5
      22: aload_0
      23: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
      26: aload         5
      28: invokeinterface #272,  2          // InterfaceMethod com/mchange/v2/async/RunnableQueue.postRunnable:(Ljava/lang/Runnable;)V
      33: return

  private void asyncFireResourceCheckedIn(java.lang.Object, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method canFireEvents:()Z
       4: ifeq          33
       7: new           #273                // class com/mchange/v2/resourcepool/BasicResourcePool$2
      10: dup
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: invokespecial #274                // Method com/mchange/v2/resourcepool/BasicResourcePool$2."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;III)V
      20: astore        5
      22: aload_0
      23: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
      26: aload         5
      28: invokeinterface #272,  2          // InterfaceMethod com/mchange/v2/async/RunnableQueue.postRunnable:(Ljava/lang/Runnable;)V
      33: return

  private void asyncFireResourceCheckedOut(java.lang.Object, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method canFireEvents:()Z
       4: ifeq          33
       7: new           #275                // class com/mchange/v2/resourcepool/BasicResourcePool$3
      10: dup
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: invokespecial #276                // Method com/mchange/v2/resourcepool/BasicResourcePool$3."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;III)V
      20: astore        5
      22: aload_0
      23: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
      26: aload         5
      28: invokeinterface #272,  2          // InterfaceMethod com/mchange/v2/async/RunnableQueue.postRunnable:(Ljava/lang/Runnable;)V
      33: return

  private void asyncFireResourceRemoved(java.lang.Object, boolean, int, int, int);
    Code:
       0: aload_0
       1: invokespecial #269                // Method canFireEvents:()Z
       4: ifeq          35
       7: new           #277                // class com/mchange/v2/resourcepool/BasicResourcePool$4
      10: dup
      11: aload_0
      12: aload_1
      13: iload_2
      14: iload_3
      15: iload         4
      17: iload         5
      19: invokespecial #278                // Method com/mchange/v2/resourcepool/BasicResourcePool$4."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;ZIII)V
      22: astore        6
      24: aload_0
      25: getfield      #99                 // Field asyncEventQueue:Lcom/mchange/v2/async/RunnableQueue;
      28: aload         6
      30: invokeinterface #272,  2          // InterfaceMethod com/mchange/v2/async/RunnableQueue.postRunnable:(Ljava/lang/Runnable;)V
      35: return

  private void destroyResource(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #21                 // Method destroyResource:(Ljava/lang/Object;Z)V
       6: return

  private void destroyResource(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #279                // Method destroyResource:(Ljava/lang/Object;ZZ)V
       7: return

  private void destroyResource(java.lang.Object, boolean, boolean);
    Code:
       0: new           #280                // class com/mchange/v2/resourcepool/BasicResourcePool$1DestroyResourceTask
       3: dup
       4: aload_0
       5: aload_1
       6: iload_3
       7: invokespecial #281                // Method com/mchange/v2/resourcepool/BasicResourcePool$1DestroyResourceTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;Z)V
      10: astore        4
      12: iload_2
      13: ifne          23
      16: aload_0
      17: getfield      #67                 // Field broken:Z
      20: ifeq          114
      23: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      26: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      29: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      34: ifeq          104
      37: aload_0
      38: getfield      #67                 // Field broken:Z
      41: ifne          104
      44: getstatic     #282                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      47: aload_0
      48: invokestatic  #283                // Method com/mchange/v2/lang/ThreadUtils.reflectiveHoldsLock:(Ljava/lang/Object;)Ljava/lang/Boolean;
      51: invokevirtual #284                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      54: ifeq          104
      57: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      60: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      63: new           #70                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      70: aload_0
      71: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc_w         #285                // String : Destroyiong a resource on an active pool, synchronousy while holding pool\'s lock!
      77: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: ldc_w         #286                // String (not a bug, but a potential bottleneck... is there a good reason for this?)
      83: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: new           #139                // class java/lang/Exception
      92: dup
      93: ldc_w         #287                // String DEBUG STACK TRACE: resource destruction while holding lock.
      96: invokespecial #192                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      99: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     104: aload         4
     106: invokeinterface #288,  1          // InterfaceMethod java/lang/Runnable.run:()V
     111: goto          166
     114: aload_0
     115: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
     118: aload         4
     120: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
     125: goto          166
     128: astore        5
     130: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     133: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     136: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     141: ifeq          160
     144: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     147: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     150: ldc_w         #289                // String AsynchronousRunner refused to accept task to destroy resource. It is probably shared, and has probably been closed underneath us. Reverting to synchronous destruction. This is not usually a problem.
     153: aload         5
     155: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     160: aload_0
     161: aload_1
     162: iconst_1
     163: invokespecial #21                 // Method destroyResource:(Ljava/lang/Object;Z)V
     166: return
    Exception table:
       from    to  target type
         114   125   128   Class java/lang/Exception

  private void doAcquire() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #290                // Method doAcquire:(I)V
       5: return

  private void doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #290                // Method doAcquire:(I)V
       5: return

  private void doAcquireAndDecrementPendingAcquiresWithinLockAlways() throws java.lang.Exception;
    Code:
       0: aload_0
       1: iconst_2
       2: invokespecial #290                // Method doAcquire:(I)V
       5: return

  private void doAcquire(int) throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #83                 // Field mgr:Lcom/mchange/v2/resourcepool/ResourcePool$Manager;
      25: invokeinterface #291,  1          // InterfaceMethod com/mchange/v2/resourcepool/ResourcePool$Manager.acquireResource:()Ljava/lang/Object;
      30: astore_2
      31: iconst_0
      32: istore_3
      33: aload_0
      34: dup
      35: astore        5
      37: monitorenter
      38: aload_0
      39: getfield      #58                 // Field managed:Ljava/util/HashMap;
      42: invokevirtual #159                // Method java/util/HashMap.size:()I
      45: istore        4
      47: aload_0
      48: getfield      #67                 // Field broken:Z
      51: ifne          71
      54: iload         4
      56: aload_0
      57: getfield      #102                // Field target_pool_size:I
      60: if_icmpge     71
      63: aload_0
      64: aload_2
      65: invokespecial #292                // Method assimilateResource:(Ljava/lang/Object;)V
      68: goto          73
      71: iconst_1
      72: istore_3
      73: iload_1
      74: iconst_1
      75: if_icmpne     82
      78: aload_0
      79: invokespecial #166                // Method _decrementPendingAcquires:()V
      82: iload_1
      83: iconst_2
      84: if_icmpne     108
      87: aload_0
      88: invokespecial #166                // Method _decrementPendingAcquires:()V
      91: goto          108
      94: astore        6
      96: iload_1
      97: iconst_2
      98: if_icmpne     105
     101: aload_0
     102: invokespecial #166                // Method _decrementPendingAcquires:()V
     105: aload         6
     107: athrow
     108: aload         5
     110: monitorexit
     111: goto          122
     114: astore        7
     116: aload         5
     118: monitorexit
     119: aload         7
     121: athrow
     122: iload_3
     123: ifeq          234
     126: aload_0
     127: getfield      #83                 // Field mgr:Lcom/mchange/v2/resourcepool/ResourcePool$Manager;
     130: aload_2
     131: iconst_0
     132: invokeinterface #293,  3          // InterfaceMethod com/mchange/v2/resourcepool/ResourcePool$Manager.destroyResource:(Ljava/lang/Object;Z)V
     137: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     140: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     143: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     148: ifeq          182
     151: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     154: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     157: new           #70                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc_w         #294                // String destroying overacquired resource:
     167: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     170: aload_2
     171: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     174: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     177: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     182: goto          234
     185: astore        5
     187: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     190: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     193: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     198: ifeq          234
     201: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     204: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     207: new           #70                 // class java/lang/StringBuilder
     210: dup
     211: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     214: ldc_w         #296                // String An exception occurred while trying to destroy an overacquired resource:
     217: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: aload_2
     221: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     224: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     227: aload         5
     229: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     234: return
    Exception table:
       from    to  target type
          38    82    94   any
          94    96    94   any
          38   111   114   any
         114   119   114   any
         126   182   185   Class java/lang/Exception

  public synchronized void setPoolSize(int) throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #297                // Method setTargetPoolSize:(I)V
       5: aload_0
       6: getfield      #58                 // Field managed:Ljava/util/HashMap;
       9: invokevirtual #159                // Method java/util/HashMap.size:()I
      12: iload_1
      13: if_icmpeq     23
      16: aload_0
      17: invokevirtual #265                // Method java/lang/Object.wait:()V
      20: goto          5
      23: goto          64
      26: astore_2
      27: ldc_w         #298                // String An exception occurred while trying to set the pool size!
      30: astore_3
      31: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      34: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      37: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      42: ifeq          58
      45: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      48: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      51: aload_3
      52: aload_2
      53: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aload_3
      59: aload_2
      60: invokestatic  #299                // Method com/mchange/v2/resourcepool/ResourcePoolUtils.convertThrowable:(Ljava/lang/String;Ljava/lang/Throwable;)Lcom/mchange/v2/resourcepool/ResourcePoolException;
      63: athrow
      64: return
    Exception table:
       from    to  target type
           0    23    26   Class java/lang/Exception

  public synchronized void setTargetPoolSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #86                 // Field max:I
       5: if_icmple     55
       8: new           #300                // class java/lang/IllegalArgumentException
      11: dup
      12: new           #70                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      19: ldc_w         #301                // String Requested size [
      22: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_1
      26: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: ldc_w         #302                // String ] is greater than max [
      32: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: getfield      #86                 // Field max:I
      39: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: ldc_w         #303                // String ].
      45: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokespecial #304                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      54: athrow
      55: iload_1
      56: aload_0
      57: getfield      #85                 // Field min:I
      60: if_icmpge     110
      63: new           #300                // class java/lang/IllegalArgumentException
      66: dup
      67: new           #70                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      74: ldc_w         #301                // String Requested size [
      77: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      80: iload_1
      81: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      84: ldc_w         #305                // String ] is less than min [
      87: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: getfield      #85                 // Field min:I
      94: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      97: ldc_w         #303                // String ].
     100: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     106: invokespecial #304                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     109: athrow
     110: aload_0
     111: iload_1
     112: putfield      #102                // Field target_pool_size:I
     115: aload_0
     116: invokespecial #169                // Method _recheckResizePool:()V
     119: return

  private void markBrokenNoEnsureMinResources(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: invokespecial #249                // Method _markBroken:(Ljava/lang/Object;)V
      26: goto          62
      29: astore_2
      30: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      33: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      36: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      41: ifeq          58
      44: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      47: getstatic     #217                // Field com/mchange/v2/log/MLevel.SEVERE:Lcom/mchange/v2/log/MLevel;
      50: ldc           #246                // String Apparent pool break.
      52: aload_2
      53: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      58: aload_0
      59: invokespecial #12                 // Method unexpectedBreak:()V
      62: return
    Exception table:
       from    to  target type
          21    26    29   Class com/mchange/v2/util/ResourceClosedException

  private void _markBroken(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      25: aload_1
      26: invokevirtual #244                // Method java/util/LinkedList.contains:(Ljava/lang/Object;)Z
      29: ifeq          40
      32: aload_0
      33: aload_1
      34: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
      37: goto          45
      40: aload_0
      41: aload_1
      42: invokespecial #306                // Method excludeResource:(Ljava/lang/Object;)V
      45: return

  public synchronized void close(boolean);
    Code:
       0: aload_0
       1: getfield      #67                 // Field broken:Z
       4: ifne          218
       7: aload_0
       8: iconst_1
       9: putfield      #67                 // Field broken:Z
      12: iload_1
      13: ifeq          26
      16: aload_0
      17: invokespecial #250                // Method cloneOfManaged:()Ljava/util/HashMap;
      20: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      23: goto          30
      26: aload_0
      27: invokespecial #307                // Method cloneOfUnused:()Ljava/util/LinkedList;
      30: astore_2
      31: aload_0
      32: getfield      #112                // Field cullTask:Ljava/util/TimerTask;
      35: ifnull        46
      38: aload_0
      39: getfield      #112                // Field cullTask:Ljava/util/TimerTask;
      42: invokevirtual #308                // Method java/util/TimerTask.cancel:()Z
      45: pop
      46: aload_0
      47: getfield      #117                // Field idleRefurbishTask:Ljava/util/TimerTask;
      50: ifnull        61
      53: aload_0
      54: getfield      #117                // Field idleRefurbishTask:Ljava/util/TimerTask;
      57: invokevirtual #308                // Method java/util/TimerTask.cancel:()Z
      60: pop
      61: aload_2
      62: invokeinterface #309,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      67: astore_3
      68: aload_3
      69: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      74: ifeq          90
      77: aload_0
      78: aload_3
      79: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: invokespecial #310                // Method addToFormerResources:(Ljava/lang/Object;)V
      87: goto          68
      90: aload_0
      91: getfield      #58                 // Field managed:Ljava/util/HashMap;
      94: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      97: aload_2
      98: invokeinterface #241,  2          // InterfaceMethod java/util/Set.removeAll:(Ljava/util/Collection;)Z
     103: pop
     104: aload_0
     105: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     108: aload_2
     109: invokevirtual #311                // Method java/util/LinkedList.removeAll:(Ljava/util/Collection;)Z
     112: pop
     113: new           #312                // class com/mchange/v2/resourcepool/BasicResourcePool$5
     116: dup
     117: aload_0
     118: ldc_w         #313                // String Resource Destroyer in BasicResourcePool.close()
     121: aload_2
     122: invokespecial #314                // Method com/mchange/v2/resourcepool/BasicResourcePool$5."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/String;Ljava/util/Collection;)V
     125: astore_3
     126: aload_3
     127: invokevirtual #315                // Method java/lang/Thread.start:()V
     130: aload_0
     131: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
     134: invokevirtual #42                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     137: astore        4
     139: aload         4
     141: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          165
     149: aload         4
     151: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #45                 // class java/lang/Thread
     159: invokevirtual #316                // Method java/lang/Thread.interrupt:()V
     162: goto          139
     165: aload_0
     166: getfield      #48                 // Field otherWaiters:Ljava/util/HashSet;
     169: invokevirtual #42                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     172: astore        4
     174: aload         4
     176: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     181: ifeq          200
     184: aload         4
     186: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     191: checkcast     #45                 // class java/lang/Thread
     194: invokevirtual #316                // Method java/lang/Thread.interrupt:()V
     197: goto          174
     200: aload_0
     201: getfield      #101                // Field factory:Lcom/mchange/v2/resourcepool/BasicResourcePoolFactory;
     204: ifnull        215
     207: aload_0
     208: getfield      #101                // Field factory:Lcom/mchange/v2/resourcepool/BasicResourcePoolFactory;
     211: aload_0
     212: invokevirtual #317                // Method com/mchange/v2/resourcepool/BasicResourcePoolFactory.markBroken:(Lcom/mchange/v2/resourcepool/BasicResourcePool;)V
     215: goto          260
     218: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     221: getstatic     #68                 // Field com/mchange/v2/log/MLevel.WARNING:Lcom/mchange/v2/log/MLevel;
     224: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     229: ifeq          260
     232: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     235: new           #70                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     242: aload_0
     243: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     246: ldc_w         #318                // String  -- close() called multiple times.
     249: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     252: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     255: invokeinterface #319,  2          // InterfaceMethod com/mchange/v2/log/MLogger.warning:(Ljava/lang/String;)V
     260: return

  private void doCheckinManaged(java.lang.Object) throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: aload_1
      23: invokevirtual #320                // Method statusInPool:(Ljava/lang/Object;)I
      26: ifne          57
      29: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
      32: dup
      33: new           #70                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc_w         #321                // String Tried to check-in an already checked-in resource:
      43: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: aload_1
      47: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokespecial #236                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;)V
      56: athrow
      57: aload_0
      58: dup
      59: astore_2
      60: monitorenter
      61: aload_0
      62: getfield      #67                 // Field broken:Z
      65: ifeq          77
      68: aload_0
      69: aload_1
      70: iconst_1
      71: invokespecial #322                // Method removeResource:(Ljava/lang/Object;Z)V
      74: aload_2
      75: monitorexit
      76: return
      77: aload_2
      78: monitorexit
      79: goto          87
      82: astore_3
      83: aload_2
      84: monitorexit
      85: aload_3
      86: athrow
      87: new           #323                // class com/mchange/v2/resourcepool/BasicResourcePool$1RefurbishCheckinResourceTask
      90: dup
      91: aload_0
      92: aload_1
      93: invokespecial #324                // Method com/mchange/v2/resourcepool/BasicResourcePool$1RefurbishCheckinResourceTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;)V
      96: astore_2
      97: aload_0
      98: getfield      #97                 // Field force_synchronous_checkins:Z
     101: ifeq          113
     104: aload_2
     105: invokeinterface #288,  1          // InterfaceMethod java/lang/Runnable.run:()V
     110: goto          123
     113: aload_0
     114: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
     117: aload_2
     118: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
     123: return
    Exception table:
       from    to  target type
          61    76    82   any
          77    79    82   any
          82    85    82   any

  private void doCheckinExcluded(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      25: aload_1
      26: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
      29: pop
      30: aload_0
      31: aload_1
      32: invokespecial #325                // Method destroyResource:(Ljava/lang/Object;)V
      35: return

  private void awaitAvailable(long) throws java.lang.InterruptedException, com.mchange.v2.resourcepool.TimeoutException, com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #66                 // Field force_kill_acquires:Z
      25: ifeq          39
      28: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
      31: dup
      32: ldc_w         #326                // String A ResourcePool cannot acquire a new resource -- the factory or source appears to be down.
      35: invokespecial #236                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: invokestatic  #209                // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      42: astore_3
      43: aload_0
      44: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
      47: aload_3
      48: invokevirtual #210                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      51: pop
      52: lload_1
      53: lconst_0
      54: lcmp
      55: ifle          64
      58: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
      61: goto          67
      64: ldc2_w        #327                // long -1l
      67: lstore        5
      69: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      72: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      75: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      80: ifeq          127
      83: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      86: new           #70                 // class java/lang/StringBuilder
      89: dup
      90: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      93: ldc_w         #329                // String awaitAvailable():
      96: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_0
     100: getfield      #330                // Field exampleResource:Ljava/lang/Object;
     103: ifnull        113
     106: aload_0
     107: getfield      #330                // Field exampleResource:Ljava/lang/Object;
     110: goto          116
     113: ldc_w         #331                // String [unknown]
     116: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     119: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     122: invokeinterface #332,  2          // InterfaceMethod com/mchange/v2/log/MLogger.fine:(Ljava/lang/String;)V
     127: aload_0
     128: invokespecial #184                // Method trace:()V
     131: aload_0
     132: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     135: invokevirtual #182                // Method java/util/LinkedList.size:()I
     138: dup
     139: istore        4
     141: ifne          254
     144: aload_0
     145: getfield      #39                 // Field pending_acquires:I
     148: ifne          169
     151: aload_0
     152: getfield      #58                 // Field managed:Ljava/util/HashMap;
     155: invokevirtual #159                // Method java/util/HashMap.size:()I
     158: aload_0
     159: getfield      #86                 // Field max:I
     162: if_icmpge     169
     165: aload_0
     166: invokespecial #169                // Method _recheckResizePool:()V
     169: aload_0
     170: lload_1
     171: invokevirtual #211                // Method java/lang/Object.wait:(J)V
     174: lload_1
     175: lconst_0
     176: lcmp
     177: ifle          225
     180: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
     183: lload         5
     185: lsub
     186: lload_1
     187: lcmp
     188: ifle          225
     191: new           #154                // class com/mchange/v2/resourcepool/TimeoutException
     194: dup
     195: new           #70                 // class java/lang/StringBuilder
     198: dup
     199: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     202: ldc_w         #333                // String A client timed out while waiting to acquire a resource from
     205: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     208: aload_0
     209: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     212: ldc_w         #334                // String  -- timeout at awaitAvailable()
     215: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     218: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     221: invokespecial #335                // Method com/mchange/v2/resourcepool/TimeoutException."<init>":(Ljava/lang/String;)V
     224: athrow
     225: aload_0
     226: getfield      #66                 // Field force_kill_acquires:Z
     229: ifeq          247
     232: new           #336                // class com/mchange/v2/resourcepool/CannotAcquireResourceException
     235: dup
     236: ldc_w         #337                // String A ResourcePool could not acquire a resource from its primary factory or source.
     239: aload_0
     240: invokevirtual #338                // Method getLastAcquisitionFailure:()Ljava/lang/Throwable;
     243: invokespecial #339                // Method com/mchange/v2/resourcepool/CannotAcquireResourceException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     246: athrow
     247: aload_0
     248: invokespecial #198                // Method ensureNotBroken:()V
     251: goto          131
     254: aload_0
     255: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
     258: aload_3
     259: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     262: pop
     263: aload_0
     264: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
     267: invokevirtual #38                 // Method java/util/HashSet.size:()I
     270: ifne          308
     273: aload_0
     274: invokevirtual #264                // Method java/lang/Object.notifyAll:()V
     277: goto          308
     280: astore        7
     282: aload_0
     283: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
     286: aload_3
     287: invokevirtual #212                // Method java/util/HashSet.remove:(Ljava/lang/Object;)Z
     290: pop
     291: aload_0
     292: getfield      #37                 // Field acquireWaiters:Ljava/util/HashSet;
     295: invokevirtual #38                 // Method java/util/HashSet.size:()I
     298: ifne          305
     301: aload_0
     302: invokevirtual #264                // Method java/lang/Object.notifyAll:()V
     305: aload         7
     307: athrow
     308: return
    Exception table:
       from    to  target type
          43   254   280   any
         280   282   280   any

  private void assimilateResource(java.lang.Object) throws java.lang.Exception;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #58                 // Field managed:Ljava/util/HashMap;
      25: aload_1
      26: new           #186                // class com/mchange/v2/resourcepool/BasicResourcePool$PunchCard
      29: dup
      30: invokespecial #340                // Method com/mchange/v2/resourcepool/BasicResourcePool$PunchCard."<init>":()V
      33: invokevirtual #341                // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: aload_0
      38: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      41: iconst_0
      42: aload_1
      43: invokevirtual #342                // Method java/util/LinkedList.add:(ILjava/lang/Object;)V
      46: aload_0
      47: aload_1
      48: aload_0
      49: getfield      #58                 // Field managed:Ljava/util/HashMap;
      52: invokevirtual #159                // Method java/util/HashMap.size:()I
      55: aload_0
      56: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      59: invokevirtual #182                // Method java/util/LinkedList.size:()I
      62: aload_0
      63: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      66: invokevirtual #38                 // Method java/util/HashSet.size:()I
      69: invokespecial #343                // Method asyncFireResourceAcquired:(Ljava/lang/Object;III)V
      72: aload_0
      73: invokevirtual #264                // Method java/lang/Object.notifyAll:()V
      76: aload_0
      77: invokespecial #184                // Method trace:()V
      80: aload_0
      81: getfield      #330                // Field exampleResource:Ljava/lang/Object;
      84: ifnonnull     92
      87: aload_0
      88: aload_1
      89: putfield      #330                // Field exampleResource:Ljava/lang/Object;
      92: return

  private void synchronousRemoveArbitraryResource();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aconst_null
      22: astore_1
      23: aload_0
      24: dup
      25: astore_2
      26: monitorenter
      27: aload_0
      28: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      31: invokevirtual #182                // Method java/util/LinkedList.size:()I
      34: ifle          67
      37: aload_0
      38: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      41: iconst_0
      42: invokevirtual #207                // Method java/util/LinkedList.get:(I)Ljava/lang/Object;
      45: astore_1
      46: aload_0
      47: getfield      #58                 // Field managed:Ljava/util/HashMap;
      50: aload_1
      51: invokevirtual #344                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_0
      56: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      59: aload_1
      60: invokevirtual #345                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      63: pop
      64: goto          117
      67: aload_0
      68: invokespecial #250                // Method cloneOfManaged:()Ljava/util/HashMap;
      71: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      74: astore_3
      75: aload_3
      76: invokeinterface #346,  1          // InterfaceMethod java/util/Set.isEmpty:()Z
      81: ifeq          102
      84: aload_0
      85: invokespecial #12                 // Method unexpectedBreak:()V
      88: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      91: ldc_w         #347                // String A pool from which a resource is requested to be removed appears to have no managed resources?!
      94: invokeinterface #348,  2          // InterfaceMethod com/mchange/v2/log/MLogger.severe:(Ljava/lang/String;)V
      99: goto          117
     102: aload_0
     103: aload_3
     104: invokeinterface #242,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     109: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: invokespecial #306                // Method excludeResource:(Ljava/lang/Object;)V
     117: aload_2
     118: monitorexit
     119: goto          129
     122: astore        4
     124: aload_2
     125: monitorexit
     126: aload         4
     128: athrow
     129: aload_1
     130: ifnull        139
     133: aload_0
     134: aload_1
     135: iconst_1
     136: invokespecial #21                 // Method destroyResource:(Ljava/lang/Object;Z)V
     139: return
    Exception table:
       from    to  target type
          27   119   122   any
         122   126   122   any

  private void removeResource(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #322                // Method removeResource:(Ljava/lang/Object;Z)V
       6: return

  private void removeResource(java.lang.Object, boolean);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #58                 // Field managed:Ljava/util/HashMap;
      25: aload_1
      26: invokevirtual #344                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #186                // class com/mchange/v2/resourcepool/BasicResourcePool$PunchCard
      32: astore_3
      33: iconst_0
      34: istore        4
      36: aload_3
      37: ifnull        138
      40: aload_3
      41: getfield      #190                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkout_time:J
      44: lconst_0
      45: lcmp
      46: ifle          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: istore        4
      56: iload         4
      58: ifeq          185
      61: aload_0
      62: getfield      #67                 // Field broken:Z
      65: ifne          185
      68: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      71: getstatic     #223                // Field com/mchange/v2/log/MLevel.INFO:Lcom/mchange/v2/log/MLevel;
      74: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      79: ifeq          185
      82: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      85: new           #70                 // class java/lang/StringBuilder
      88: dup
      89: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      92: ldc_w         #349                // String A checked-out resource is overdue, and will be destroyed:
      95: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: aload_1
      99: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     105: invokeinterface #350,  2          // InterfaceMethod com/mchange/v2/log/MLogger.info:(Ljava/lang/String;)V
     110: aload_3
     111: getfield      #193                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkoutStackTraceException:Ljava/lang/Exception;
     114: ifnull        185
     117: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     120: getstatic     #223                // Field com/mchange/v2/log/MLevel.INFO:Lcom/mchange/v2/log/MLevel;
     123: ldc_w         #351                // String Logging the stack trace by which the overdue resource was checked-out.
     126: aload_3
     127: getfield      #193                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkoutStackTraceException:Ljava/lang/Exception;
     130: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     135: goto          185
     138: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     141: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
     144: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     149: ifeq          185
     152: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     155: new           #70                 // class java/lang/StringBuilder
     158: dup
     159: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     162: ldc           #187                // String Resource
     164: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     167: aload_1
     168: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     171: ldc_w         #352                // String  was removed twice. (Lotsa reasons a resource can be removed, sometimes simultaneously. It\'s okay)
     174: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokeinterface #332,  2          // InterfaceMethod com/mchange/v2/log/MLogger.fine:(Ljava/lang/String;)V
     185: aload_0
     186: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     189: aload_1
     190: invokevirtual #345                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     193: pop
     194: aload_0
     195: aload_1
     196: iload_2
     197: iload         4
     199: invokespecial #279                // Method destroyResource:(Ljava/lang/Object;ZZ)V
     202: aload_0
     203: aload_1
     204: invokespecial #310                // Method addToFormerResources:(Ljava/lang/Object;)V
     207: aload_0
     208: aload_1
     209: iconst_0
     210: aload_0
     211: getfield      #58                 // Field managed:Ljava/util/HashMap;
     214: invokevirtual #159                // Method java/util/HashMap.size:()I
     217: aload_0
     218: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     221: invokevirtual #182                // Method java/util/LinkedList.size:()I
     224: aload_0
     225: getfield      #62                 // Field excluded:Ljava/util/HashSet;
     228: invokevirtual #38                 // Method java/util/HashSet.size:()I
     231: invokespecial #353                // Method asyncFireResourceRemoved:(Ljava/lang/Object;ZIII)V
     234: aload_0
     235: invokespecial #184                // Method trace:()V
     238: return

  private void excludeResource(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #58                 // Field managed:Ljava/util/HashMap;
      25: aload_1
      26: invokevirtual #344                // Method java/util/HashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: aload_0
      31: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      34: aload_1
      35: invokevirtual #210                // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      38: pop
      39: aload_0
      40: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      43: aload_1
      44: invokevirtual #244                // Method java/util/LinkedList.contains:(Ljava/lang/Object;)Z
      47: ifeq          61
      50: new           #354                // class java/lang/InternalError
      53: dup
      54: ldc_w         #355                // String We should only \"exclude\" checked-out resources!
      57: invokespecial #356                // Method java/lang/InternalError."<init>":(Ljava/lang/String;)V
      60: athrow
      61: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      64: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      67: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      72: ifeq          116
      75: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      78: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      81: new           #70                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      88: ldc_w         #357                // String Excluded resource
      91: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_1
      95: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      98: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: new           #139                // class java/lang/Exception
     104: dup
     105: ldc_w         #358                // String DEBUG STACK TRACE: Excluded resource stack trace
     108: invokespecial #192                // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     111: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
     116: aload_0
     117: aload_1
     118: iconst_1
     119: aload_0
     120: getfield      #58                 // Field managed:Ljava/util/HashMap;
     123: invokevirtual #159                // Method java/util/HashMap.size:()I
     126: aload_0
     127: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     130: invokevirtual #182                // Method java/util/LinkedList.size:()I
     133: aload_0
     134: getfield      #62                 // Field excluded:Ljava/util/HashSet;
     137: invokevirtual #38                 // Method java/util/HashSet.size:()I
     140: invokespecial #353                // Method asyncFireResourceRemoved:(Ljava/lang/Object;ZIII)V
     143: return

  private void removeTowards(int);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #58                 // Field managed:Ljava/util/HashMap;
      25: invokevirtual #159                // Method java/util/HashMap.size:()I
      28: iload_1
      29: isub
      30: istore_2
      31: iconst_0
      32: istore_3
      33: aload_0
      34: invokespecial #307                // Method cloneOfUnused:()Ljava/util/LinkedList;
      37: invokevirtual #359                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      40: astore        4
      42: aload         4
      44: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      49: ifeq          78
      52: iload_3
      53: iload_2
      54: if_icmpge     78
      57: aload         4
      59: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      64: astore        5
      66: aload_0
      67: aload         5
      69: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
      72: iinc          3, 1
      75: goto          42
      78: return

  private void cullExpired();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      24: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      27: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      32: ifeq          71
      35: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      38: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
      41: new           #70                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc_w         #360                // String BEGIN check for expired resources.  [
      51: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_0
      55: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      58: ldc           #137                // String ]
      60: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
      71: aload_0
      72: getfield      #94                 // Field destroy_unreturned_resc_time:J
      75: lconst_0
      76: lcmp
      77: ifle          90
      80: aload_0
      81: invokespecial #250                // Method cloneOfManaged:()Ljava/util/HashMap;
      84: invokevirtual #226                // Method java/util/HashMap.keySet:()Ljava/util/Set;
      87: goto          94
      90: aload_0
      91: invokespecial #307                // Method cloneOfUnused:()Ljava/util/LinkedList;
      94: astore_1
      95: aload_1
      96: invokeinterface #309,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     101: astore_2
     102: aload_2
     103: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     108: ifeq          215
     111: aload_2
     112: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     117: astore_3
     118: aload_0
     119: aload_3
     120: invokespecial #213                // Method shouldExpire:(Ljava/lang/Object;)Z
     123: ifeq          212
     126: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     129: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     132: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     137: ifeq          186
     140: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     143: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     146: new           #70                 // class java/lang/StringBuilder
     149: dup
     150: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     153: ldc_w         #361                // String Removing expired resource:
     156: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_3
     160: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     163: ldc_w         #362                // String  [
     166: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_0
     170: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: ldc           #137                // String ]
     175: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     181: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     186: aload_0
     187: aload_0
     188: getfield      #85                 // Field min:I
     191: aload_0
     192: getfield      #102                // Field target_pool_size:I
     195: iconst_1
     196: isub
     197: invokestatic  #202                // Method java/lang/Math.max:(II)I
     200: putfield      #102                // Field target_pool_size:I
     203: aload_0
     204: aload_3
     205: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
     208: aload_0
     209: invokespecial #184                // Method trace:()V
     212: goto          102
     215: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     218: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     221: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     226: ifeq          265
     229: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     232: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     235: new           #70                 // class java/lang/StringBuilder
     238: dup
     239: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     242: ldc_w         #363                // String FINISHED check for expired resources.  [
     245: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     248: aload_0
     249: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     252: ldc           #137                // String ]
     254: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     257: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     260: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     265: aload_0
     266: invokespecial #18                 // Method ensureMinResources:()V
     269: return

  private void checkIdleResources();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: invokespecial #307                // Method cloneOfUnused:()Ljava/util/LinkedList;
      25: astore_1
      26: aload_1
      27: invokeinterface #364,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      32: astore_2
      33: aload_2
      34: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          83
      42: aload_2
      43: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: astore_3
      49: aload_0
      50: getfield      #65                 // Field idleCheckResources:Ljava/util/Set;
      53: aload_3
      54: invokeinterface #365,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      59: ifeq          80
      62: aload_0
      63: getfield      #98                 // Field taskRunner:Lcom/mchange/v2/async/AsynchronousRunner;
      66: new           #366                // class com/mchange/v2/resourcepool/BasicResourcePool$AsyncTestIdleResourceTask
      69: dup
      70: aload_0
      71: aload_3
      72: invokespecial #367                // Method com/mchange/v2/resourcepool/BasicResourcePool$AsyncTestIdleResourceTask."<init>":(Lcom/mchange/v2/resourcepool/BasicResourcePool;Ljava/lang/Object;)V
      75: invokeinterface #173,  2          // InterfaceMethod com/mchange/v2/async/AsynchronousRunner.postRunnable:(Ljava/lang/Runnable;)V
      80: goto          33
      83: aload_0
      84: invokespecial #184                // Method trace:()V
      87: return

  private boolean shouldExpire(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: iconst_0
      22: istore_2
      23: aload_0
      24: getfield      #58                 // Field managed:Ljava/util/HashMap;
      27: aload_1
      28: invokevirtual #185                // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      31: checkcast     #186                // class com/mchange/v2/resourcepool/BasicResourcePool$PunchCard
      34: astore_3
      35: aload_3
      36: ifnonnull     88
      39: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      42: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      45: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      50: ifeq          86
      53: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      56: new           #70                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #187                // String Resource
      65: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: ldc_w         #368                // String  was being tested for expiration, but has already been removed from the pool.
      75: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokeinterface #332,  2          // InterfaceMethod com/mchange/v2/log/MLogger.fine:(Ljava/lang/String;)V
      86: iconst_1
      87: ireturn
      88: invokestatic  #24                 // Method java/lang/System.currentTimeMillis:()J
      91: lstore        4
      93: aload_3
      94: getfield      #190                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkout_time:J
      97: lconst_0
      98: lcmp
      99: ifge          512
     102: lload         4
     104: aload_3
     105: getfield      #369                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.last_checkin_time:J
     108: lsub
     109: lstore        6
     111: aload_0
     112: getfield      #93                 // Field excess_max_idle_time:J
     115: lconst_0
     116: lcmp
     117: ifle          266
     120: aload_0
     121: getfield      #58                 // Field managed:Ljava/util/HashMap;
     124: invokevirtual #159                // Method java/util/HashMap.size:()I
     127: istore        8
     129: iload         8
     131: aload_0
     132: getfield      #85                 // Field min:I
     135: if_icmple     152
     138: lload         6
     140: aload_0
     141: getfield      #93                 // Field excess_max_idle_time:J
     144: lcmp
     145: ifle          152
     148: iconst_1
     149: goto          153
     152: iconst_0
     153: istore_2
     154: iload_2
     155: ifeq          266
     158: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     161: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     164: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     169: ifeq          266
     172: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     175: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     178: new           #70                 // class java/lang/StringBuilder
     181: dup
     182: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     185: ldc_w         #370                // String EXPIRED excess idle resource:
     188: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: aload_1
     192: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: ldc_w         #371                // String  ---> idle_time:
     198: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: lload         6
     203: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     206: ldc_w         #372                // String ; excess_max_idle_time:
     209: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     212: aload_0
     213: getfield      #93                 // Field excess_max_idle_time:J
     216: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     219: ldc_w         #373                // String ; pool_size:
     222: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: iload         8
     227: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     230: ldc_w         #374                // String ; min_pool_size:
     233: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     236: aload_0
     237: getfield      #85                 // Field min:I
     240: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     243: ldc_w         #362                // String  [
     246: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: aload_0
     250: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     253: ldc           #137                // String ]
     255: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     261: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     266: iload_2
     267: ifne          383
     270: aload_0
     271: getfield      #92                 // Field max_idle_time:J
     274: lconst_0
     275: lcmp
     276: ifle          383
     279: lload         6
     281: aload_0
     282: getfield      #92                 // Field max_idle_time:J
     285: lcmp
     286: ifle          293
     289: iconst_1
     290: goto          294
     293: iconst_0
     294: istore_2
     295: iload_2
     296: ifeq          383
     299: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     302: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     305: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     310: ifeq          383
     313: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     316: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     319: new           #70                 // class java/lang/StringBuilder
     322: dup
     323: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     326: ldc_w         #375                // String EXPIRED idle resource:
     329: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     332: aload_1
     333: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     336: ldc_w         #371                // String  ---> idle_time:
     339: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     342: lload         6
     344: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     347: ldc_w         #376                // String ; max_idle_time:
     350: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     353: aload_0
     354: getfield      #92                 // Field max_idle_time:J
     357: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     360: ldc_w         #362                // String  [
     363: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     366: aload_0
     367: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     370: ldc           #137                // String ]
     372: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     375: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     378: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     383: iload_2
     384: ifne          509
     387: aload_0
     388: getfield      #91                 // Field max_resource_age:J
     391: lconst_0
     392: lcmp
     393: ifle          509
     396: lload         4
     398: aload_3
     399: getfield      #377                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.acquisition_time:J
     402: lsub
     403: lstore        8
     405: lload         8
     407: aload_0
     408: getfield      #91                 // Field max_resource_age:J
     411: lcmp
     412: ifle          419
     415: iconst_1
     416: goto          420
     419: iconst_0
     420: istore_2
     421: iload_2
     422: ifeq          509
     425: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     428: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     431: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
     436: ifeq          509
     439: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
     442: getstatic     #118                // Field com/mchange/v2/log/MLevel.FINER:Lcom/mchange/v2/log/MLevel;
     445: new           #70                 // class java/lang/StringBuilder
     448: dup
     449: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
     452: ldc_w         #378                // String EXPIRED old resource:
     455: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     458: aload_1
     459: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     462: ldc_w         #379                // String  ---> absolute_age:
     465: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     468: lload         8
     470: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     473: ldc_w         #380                // String ; max_absolute_age:
     476: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     479: aload_0
     480: getfield      #91                 // Field max_resource_age:J
     483: invokevirtual #127                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     486: ldc_w         #362                // String  [
     489: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     492: aload_0
     493: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     496: ldc           #137                // String ]
     498: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     501: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     504: invokeinterface #79,  3           // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;)V
     509: goto          537
     512: lload         4
     514: aload_3
     515: getfield      #190                // Field com/mchange/v2/resourcepool/BasicResourcePool$PunchCard.checkout_time:J
     518: lsub
     519: lstore        6
     521: lload         6
     523: aload_0
     524: getfield      #94                 // Field destroy_unreturned_resc_time:J
     527: lcmp
     528: ifle          535
     531: iconst_1
     532: goto          536
     535: iconst_0
     536: istore_2
     537: iload_2
     538: ireturn

  private void ensureStartResources();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method recheckResizePool:()V
       4: return

  private void ensureMinResources();
    Code:
       0: aload_0
       1: invokespecial #10                 // Method recheckResizePool:()V
       4: return

  private boolean attemptRefurbishResourceOnCheckout(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #83                 // Field mgr:Lcom/mchange/v2/resourcepool/ResourcePool$Manager;
      25: aload_1
      26: invokeinterface #381,  2          // InterfaceMethod com/mchange/v2/resourcepool/ResourcePool$Manager.refurbishResourceOnCheckout:(Ljava/lang/Object;)V
      31: iconst_1
      32: ireturn
      33: astore_2
      34: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      37: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      40: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      45: ifeq          85
      48: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      51: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      54: new           #70                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc_w         #382                // String A resource could not be refurbished for checkout. [
      64: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1
      68: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: bipush        93
      73: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_2
      80: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      85: aload_0
      86: dup
      87: astore_3
      88: monitorenter
      89: aload_0
      90: dup
      91: getfield      #26                 // Field failed_checkouts:J
      94: lconst_1
      95: ladd
      96: putfield      #26                 // Field failed_checkouts:J
      99: aload_0
     100: aload_2
     101: invokespecial #383                // Method setLastCheckoutFailure:(Ljava/lang/Throwable;)V
     104: aload_3
     105: monitorexit
     106: goto          116
     109: astore        4
     111: aload_3
     112: monitorexit
     113: aload         4
     115: athrow
     116: iconst_0
     117: ireturn
    Exception table:
       from    to  target type
          21    32    33   Class java/lang/Exception
          89   106   109   any
         109   113   109   any

  private boolean attemptRefurbishResourceOnCheckin(java.lang.Object);
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifeq          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #83                 // Field mgr:Lcom/mchange/v2/resourcepool/ResourcePool$Manager;
      25: aload_1
      26: invokeinterface #384,  2          // InterfaceMethod com/mchange/v2/resourcepool/ResourcePool$Manager.refurbishResourceOnCheckin:(Ljava/lang/Object;)V
      31: iconst_1
      32: ireturn
      33: astore_2
      34: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      37: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      40: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      45: ifeq          85
      48: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      51: getstatic     #295                // Field com/mchange/v2/log/MLevel.FINE:Lcom/mchange/v2/log/MLevel;
      54: new           #70                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc_w         #385                // String A resource could not be refurbished on checkin. [
      64: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_1
      68: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      71: bipush        93
      73: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      76: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: aload_2
      80: invokeinterface #156,  4          // InterfaceMethod com/mchange/v2/log/MLogger.log:(Lcom/mchange/v2/log/MLevel;Ljava/lang/String;Ljava/lang/Throwable;)V
      85: aload_0
      86: dup
      87: astore_3
      88: monitorenter
      89: aload_0
      90: dup
      91: getfield      #25                 // Field failed_checkins:J
      94: lconst_1
      95: ladd
      96: putfield      #25                 // Field failed_checkins:J
      99: aload_0
     100: aload_2
     101: invokespecial #386                // Method setLastCheckinFailure:(Ljava/lang/Throwable;)V
     104: aload_3
     105: monitorexit
     106: goto          116
     109: astore        4
     111: aload_3
     112: monitorexit
     113: aload         4
     115: athrow
     116: iconst_0
     117: ireturn
    Exception table:
       from    to  target type
          21    32    33   Class java/lang/Exception
          89   106   109   any
         109   113   109   any

  private void ensureNotBroken() throws com.mchange.v2.resourcepool.ResourcePoolException;
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #67                 // Field broken:Z
      25: ifeq          39
      28: new           #157                // class com/mchange/v2/resourcepool/ResourcePoolException
      31: dup
      32: ldc_w         #387                // String Attempted to use a closed or broken resource pool
      35: invokespecial #236                // Method com/mchange/v2/resourcepool/ResourcePoolException."<init>":(Ljava/lang/String;)V
      38: athrow
      39: return

  private synchronized void syncTrace();
    Code:
       0: aload_0
       1: invokespecial #184                // Method trace:()V
       4: return

  private void trace();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      24: getstatic     #162                // Field com/mchange/v2/log/MLevel.FINEST:Lcom/mchange/v2/log/MLevel;
      27: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      32: ifeq          168
      35: aload_0
      36: getfield      #330                // Field exampleResource:Ljava/lang/Object;
      39: ifnonnull     47
      42: ldc           #234                // String
      44: goto          76
      47: new           #70                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc_w         #388                // String  (e.g.
      57: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: aload_0
      61: getfield      #330                // Field exampleResource:Ljava/lang/Object;
      64: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc_w         #389                // String )
      70: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      76: astore_1
      77: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      80: new           #70                 // class java/lang/StringBuilder
      83: dup
      84: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      87: ldc_w         #390                // String trace
      90: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: aload_0
      94: invokevirtual #119                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      97: ldc_w         #391                // String  [managed:
     100: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     103: aload_0
     104: getfield      #58                 // Field managed:Ljava/util/HashMap;
     107: invokevirtual #159                // Method java/util/HashMap.size:()I
     110: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     113: ldc_w         #392                // String ,
     116: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: ldc_w         #393                // String unused:
     122: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_0
     126: getfield      #61                 // Field unused:Ljava/util/LinkedList;
     129: invokevirtual #182                // Method java/util/LinkedList.size:()I
     132: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     135: ldc_w         #394                // String , excluded:
     138: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_0
     142: getfield      #62                 // Field excluded:Ljava/util/HashSet;
     145: invokevirtual #38                 // Method java/util/HashSet.size:()I
     148: invokevirtual #74                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     151: bipush        93
     153: invokevirtual #222                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     156: aload_1
     157: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     163: invokeinterface #164,  2          // InterfaceMethod com/mchange/v2/log/MLogger.finest:(Ljava/lang/String;)V
     168: return

  private final java.util.HashMap cloneOfManaged();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #58                 // Field managed:Ljava/util/HashMap;
      25: invokevirtual #395                // Method java/util/HashMap.clone:()Ljava/lang/Object;
      28: checkcast     #56                 // class java/util/HashMap
      31: areturn

  private final java.util.LinkedList cloneOfUnused();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #61                 // Field unused:Ljava/util/LinkedList;
      25: invokevirtual #396                // Method java/util/LinkedList.clone:()Ljava/lang/Object;
      28: checkcast     #59                 // class java/util/LinkedList
      31: areturn

  private final java.util.HashSet cloneOfExcluded();
    Code:
       0: getstatic     #29                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Thread.holdsLock:(Ljava/lang/Object;)Z
      10: ifne          21
      13: new           #31                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #32                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_0
      22: getfield      #62                 // Field excluded:Ljava/util/HashSet;
      25: invokevirtual #397                // Method java/util/HashSet.clone:()Ljava/lang/Object;
      28: checkcast     #54                 // class java/util/HashSet
      31: areturn

  static com.mchange.v2.log.MLogger access$000();
    Code:
       0: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
       3: areturn

  static void access$100(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #21                 // Method destroyResource:(Ljava/lang/Object;Z)V
       6: return

  static boolean access$200(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method attemptRefurbishResourceOnCheckin:(Ljava/lang/Object;)Z
       5: ireturn

  static void access$300(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method removeResource:(Ljava/lang/Object;)V
       5: return

  static void access$400(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #18                 // Method ensureMinResources:()V
       4: return

  static void access$500(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Object, int, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: iload         4
       6: invokespecial #17                 // Method asyncFireResourceCheckedIn:(Ljava/lang/Object;III)V
       9: return

  static void access$600(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #16                 // Method incrementPendingAcquires:()V
       4: return

  static void access$700(com.mchange.v2.resourcepool.BasicResourcePool) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #15                 // Method doAcquireAndDecrementPendingAcquiresWithinLockOnSuccess:()V
       4: return

  static void access$800(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method decrementPendingAcquires:()V
       4: return

  static void access$900(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #13                 // Method setLastAcquisitionFailure:(Ljava/lang/Throwable;)V
       5: return

  static void access$1000(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #12                 // Method unexpectedBreak:()V
       4: return

  static void access$1100(com.mchange.v2.resourcepool.BasicResourcePool) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokespecial #11                 // Method forceKillAcquires:()V
       4: return

  static void access$1300(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method recheckResizePool:()V
       4: return

  static void access$1400(com.mchange.v2.resourcepool.BasicResourcePool) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokespecial #9                  // Method doAcquireAndDecrementPendingAcquiresWithinLockAlways:()V
       4: return

  static boolean access$1500(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method isForceKillAcquiresPending:()Z
       4: ireturn

  static void access$1600(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method incrementPendingRemoves:()V
       4: return

  static void access$1700(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method synchronousRemoveArbitraryResource:()V
       4: return

  static void access$1800(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method decrementPendingRemoves:()V
       4: return

  static void access$1900(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method cullExpired:()V
       4: return

  static void access$2000(com.mchange.v2.resourcepool.BasicResourcePool);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method checkIdleResources:()V
       4: return

  static void access$2100(com.mchange.v2.resourcepool.BasicResourcePool, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method setLastIdleCheckFailure:(Ljava/lang/Throwable;)V
       5: return

  static {};
    Code:
       0: ldc           #145                // class com/mchange/v2/resourcepool/BasicResourcePool
       2: invokevirtual #398                // Method java/lang/Class.desiredAssertionStatus:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: putstatic     #29                 // Field $assertionsDisabled:Z
      16: ldc           #145                // class com/mchange/v2/resourcepool/BasicResourcePool
      18: invokestatic  #399                // Method com/mchange/v2/log/MLog.getLogger:(Ljava/lang/Class;)Lcom/mchange/v2/log/MLogger;
      21: putstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      24: invokestatic  #400                // Method com/mchange/v2/cfg/MConfig.readVmConfig:()Lcom/mchange/v2/cfg/MultiPropertiesConfig;
      27: ldc_w         #401                // String com.mchange.v2.resourcepool.experimental.useScatteredAcquireTask
      30: invokevirtual #402                // Method com/mchange/v2/cfg/MultiPropertiesConfig.getProperty:(Ljava/lang/String;)Ljava/lang/String;
      33: astore_0
      34: aload_0
      35: ifnull        107
      38: aload_0
      39: invokevirtual #403                // Method java/lang/String.trim:()Ljava/lang/String;
      42: invokevirtual #404                // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      45: ldc_w         #405                // String false
      48: invokevirtual #406                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      51: ifeq          107
      54: iconst_0
      55: putstatic     #170                // Field USE_SCATTERED_ACQUIRE_TASK:Z
      58: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      61: getstatic     #223                // Field com/mchange/v2/log/MLevel.INFO:Lcom/mchange/v2/log/MLevel;
      64: invokeinterface #69,  2           // InterfaceMethod com/mchange/v2/log/MLogger.isLoggable:(Lcom/mchange/v2/log/MLevel;)Z
      69: ifeq          111
      72: getstatic     #22                 // Field logger:Lcom/mchange/v2/log/MLogger;
      75: new           #70                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #71                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #145                // class com/mchange/v2/resourcepool/BasicResourcePool
      84: invokevirtual #407                // Method java/lang/Class.getName:()Ljava/lang/String;
      87: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: ldc_w         #408                // String  using traditional, Thread-blocking AcquireTask. Yuk. Why? It\'s no longer supported.
      93: invokevirtual #73                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      99: invokeinterface #350,  2          // InterfaceMethod com/mchange/v2/log/MLogger.info:(Ljava/lang/String;)V
     104: goto          111
     107: iconst_1
     108: putstatic     #170                // Field USE_SCATTERED_ACQUIRE_TASK:Z
     111: return
}
