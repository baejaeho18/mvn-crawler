Compiled from "SoftReferenceObjectCache.java"
public abstract class com.mchange.util.impl.SoftReferenceObjectCache implements com.mchange.util.ObjectCache {
  java.util.Map store;

  public com.mchange.util.impl.SoftReferenceObjectCache();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field store:Ljava/util/Map;
      15: return

  public synchronized java.lang.Object find(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field store:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #6                  // class java/lang/ref/Reference
      13: astore_2
      14: aload_2
      15: ifnull        36
      18: aload_2
      19: invokevirtual #7                  // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      22: dup
      23: astore_3
      24: ifnull        36
      27: aload_0
      28: aload_1
      29: aload_3
      30: invokevirtual #8                  // Method isDirty:(Ljava/lang/Object;Ljava/lang/Object;)Z
      33: ifeq          61
      36: aload_0
      37: aload_1
      38: invokevirtual #9                  // Method createFromKey:(Ljava/lang/Object;)Ljava/lang/Object;
      41: astore_3
      42: aload_0
      43: getfield      #4                  // Field store:Ljava/util/Map;
      46: aload_1
      47: new           #10                 // class java/lang/ref/SoftReference
      50: dup
      51: aload_3
      52: invokespecial #11                 // Method java/lang/ref/SoftReference."<init>":(Ljava/lang/Object;)V
      55: invokeinterface #12,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      60: pop
      61: aload_3
      62: areturn

  protected boolean isDirty(java.lang.Object, java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  protected abstract java.lang.Object createFromKey(java.lang.Object) throws java.lang.Exception;
}
