Compiled from "CommandLineParserImpl.java"
public class com.mchange.util.impl.CommandLineParserImpl implements com.mchange.util.CommandLineParser {
  java.lang.String[] argv;

  java.lang.String[] validSwitches;

  java.lang.String[] reqSwitches;

  java.lang.String[] argSwitches;

  char switch_char;

  public com.mchange.util.impl.CommandLineParserImpl(java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[], char);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field argv:[Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: ifnonnull     21
      14: iconst_0
      15: anewarray     #3                  // class java/lang/String
      18: goto          22
      21: aload_2
      22: putfield      #4                  // Field validSwitches:[Ljava/lang/String;
      25: aload_0
      26: aload_3
      27: ifnonnull     37
      30: iconst_0
      31: anewarray     #3                  // class java/lang/String
      34: goto          38
      37: aload_3
      38: putfield      #5                  // Field reqSwitches:[Ljava/lang/String;
      41: aload_0
      42: aload         4
      44: ifnonnull     54
      47: iconst_0
      48: anewarray     #3                  // class java/lang/String
      51: goto          56
      54: aload         4
      56: putfield      #6                  // Field argSwitches:[Ljava/lang/String;
      59: aload_0
      60: iload         5
      62: putfield      #7                  // Field switch_char:C
      65: return

  public com.mchange.util.impl.CommandLineParserImpl(java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: bipush        45
       8: invokespecial #8                  // Method "<init>":([Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;[Ljava/lang/String;C)V
      11: return

  public boolean checkSwitch(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field argv:[Ljava/lang/String;
       7: arraylength
       8: if_icmpge     69
      11: aload_0
      12: getfield      #2                  // Field argv:[Ljava/lang/String;
      15: iload_2
      16: aaload
      17: iconst_0
      18: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      21: aload_0
      22: getfield      #7                  // Field switch_char:C
      25: if_icmpne     63
      28: aload_0
      29: getfield      #2                  // Field argv:[Ljava/lang/String;
      32: iload_2
      33: aaload
      34: new           #10                 // class java/lang/StringBuilder
      37: dup
      38: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      41: aload_0
      42: getfield      #7                  // Field switch_char:C
      45: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: aload_1
      49: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      58: ifeq          63
      61: iconst_1
      62: ireturn
      63: iinc          2, 1
      66: goto          2
      69: iconst_0
      70: ireturn

  public java.lang.String findSwitchArg(java.lang.String);
    Code:
       0: iconst_0
       1: istore_2
       2: iload_2
       3: aload_0
       4: getfield      #2                  // Field argv:[Ljava/lang/String;
       7: arraylength
       8: iconst_1
       9: isub
      10: if_icmpge     101
      13: aload_0
      14: getfield      #2                  // Field argv:[Ljava/lang/String;
      17: iload_2
      18: aaload
      19: iconst_0
      20: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      23: aload_0
      24: getfield      #7                  // Field switch_char:C
      27: if_icmpne     95
      30: aload_0
      31: getfield      #2                  // Field argv:[Ljava/lang/String;
      34: iload_2
      35: aaload
      36: new           #10                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      43: aload_0
      44: getfield      #7                  // Field switch_char:C
      47: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      60: ifeq          95
      63: aload_0
      64: getfield      #2                  // Field argv:[Ljava/lang/String;
      67: iload_2
      68: iconst_1
      69: iadd
      70: aaload
      71: iconst_0
      72: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      75: aload_0
      76: getfield      #7                  // Field switch_char:C
      79: if_icmpne     86
      82: aconst_null
      83: goto          94
      86: aload_0
      87: getfield      #2                  // Field argv:[Ljava/lang/String;
      90: iload_2
      91: iconst_1
      92: iadd
      93: aaload
      94: areturn
      95: iinc          2, 1
      98: goto          2
     101: aconst_null
     102: areturn

  public boolean checkArgv();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method checkValidSwitches:()Z
       4: ifeq          25
       7: aload_0
       8: invokevirtual #17                 // Method checkRequiredSwitches:()Z
      11: ifeq          25
      14: aload_0
      15: invokevirtual #18                 // Method checkSwitchArgSyntax:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  boolean checkValidSwitches();
    Code:
       0: iconst_0
       1: istore_1
       2: iload_1
       3: aload_0
       4: getfield      #2                  // Field argv:[Ljava/lang/String;
       7: arraylength
       8: if_icmpge     94
      11: aload_0
      12: getfield      #2                  // Field argv:[Ljava/lang/String;
      15: iload_1
      16: aaload
      17: iconst_0
      18: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      21: aload_0
      22: getfield      #7                  // Field switch_char:C
      25: if_icmpne     88
      28: iconst_0
      29: istore_2
      30: iload_2
      31: aload_0
      32: getfield      #4                  // Field validSwitches:[Ljava/lang/String;
      35: arraylength
      36: if_icmpge     86
      39: aload_0
      40: getfield      #2                  // Field argv:[Ljava/lang/String;
      43: iload_1
      44: aaload
      45: new           #10                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
      52: aload_0
      53: getfield      #7                  // Field switch_char:C
      56: invokevirtual #12                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      59: aload_0
      60: getfield      #4                  // Field validSwitches:[Ljava/lang/String;
      63: iload_2
      64: aaload
      65: invokevirtual #13                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #14                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          80
      77: goto          88
      80: iinc          2, 1
      83: goto          30
      86: iconst_0
      87: ireturn
      88: iinc          1, 1
      91: goto          2
      94: iconst_1
      95: ireturn

  boolean checkRequiredSwitches();
    Code:
       0: aload_0
       1: getfield      #5                  // Field reqSwitches:[Ljava/lang/String;
       4: arraylength
       5: istore_1
       6: iinc          1, -1
       9: iload_1
      10: iflt          28
      13: aload_0
      14: aload_0
      15: getfield      #5                  // Field reqSwitches:[Ljava/lang/String;
      18: iload_1
      19: aaload
      20: invokevirtual #19                 // Method checkSwitch:(Ljava/lang/String;)Z
      23: ifne          6
      26: iconst_0
      27: ireturn
      28: iconst_1
      29: ireturn

  boolean checkSwitchArgSyntax();
    Code:
       0: aload_0
       1: getfield      #6                  // Field argSwitches:[Ljava/lang/String;
       4: arraylength
       5: istore_1
       6: iinc          1, -1
       9: iload_1
      10: iflt          58
      13: aload_0
      14: aload_0
      15: getfield      #6                  // Field argSwitches:[Ljava/lang/String;
      18: iload_1
      19: aaload
      20: invokevirtual #19                 // Method checkSwitch:(Ljava/lang/String;)Z
      23: ifeq          6
      26: aload_0
      27: aload_0
      28: getfield      #6                  // Field argSwitches:[Ljava/lang/String;
      31: iload_1
      32: aaload
      33: invokevirtual #20                 // Method findSwitchArg:(Ljava/lang/String;)Ljava/lang/String;
      36: astore_2
      37: aload_2
      38: ifnull        53
      41: aload_2
      42: iconst_0
      43: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      46: aload_0
      47: getfield      #7                  // Field switch_char:C
      50: if_icmpne     55
      53: iconst_0
      54: ireturn
      55: goto          6
      58: iconst_1
      59: ireturn

  public int findLastSwitched();
    Code:
       0: aload_0
       1: getfield      #2                  // Field argv:[Ljava/lang/String;
       4: arraylength
       5: istore_1
       6: iinc          1, -1
       9: iload_1
      10: iflt          32
      13: aload_0
      14: getfield      #2                  // Field argv:[Ljava/lang/String;
      17: iload_1
      18: aaload
      19: iconst_0
      20: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      23: aload_0
      24: getfield      #7                  // Field switch_char:C
      27: if_icmpne     6
      30: iload_1
      31: ireturn
      32: iconst_m1
      33: ireturn

  public java.lang.String[] findUnswitchedArgs();
    Code:
       0: aload_0
       1: getfield      #2                  // Field argv:[Ljava/lang/String;
       4: arraylength
       5: anewarray     #3                  // class java/lang/String
       8: astore_1
       9: iconst_0
      10: istore_2
      11: iconst_0
      12: istore_3
      13: iload_3
      14: aload_0
      15: getfield      #2                  // Field argv:[Ljava/lang/String;
      18: arraylength
      19: if_icmpge     83
      22: aload_0
      23: getfield      #2                  // Field argv:[Ljava/lang/String;
      26: iload_3
      27: aaload
      28: iconst_0
      29: invokevirtual #9                  // Method java/lang/String.charAt:(I)C
      32: aload_0
      33: getfield      #7                  // Field switch_char:C
      36: if_icmpne     65
      39: aload_0
      40: getfield      #2                  // Field argv:[Ljava/lang/String;
      43: iload_3
      44: aaload
      45: iconst_1
      46: invokevirtual #21                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      49: aload_0
      50: getfield      #6                  // Field argSwitches:[Ljava/lang/String;
      53: invokestatic  #22                 // Method contains:(Ljava/lang/String;[Ljava/lang/String;)Z
      56: ifeq          77
      59: iinc          3, 1
      62: goto          77
      65: aload_1
      66: iload_2
      67: iinc          2, 1
      70: aload_0
      71: getfield      #2                  // Field argv:[Ljava/lang/String;
      74: iload_3
      75: aaload
      76: aastore
      77: iinc          3, 1
      80: goto          13
      83: iload_2
      84: anewarray     #3                  // class java/lang/String
      87: astore_3
      88: aload_1
      89: iconst_0
      90: aload_3
      91: iconst_0
      92: iload_2
      93: invokestatic  #23                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      96: aload_3
      97: areturn

  private static boolean contains(java.lang.String, java.lang.String[]);
    Code:
       0: aload_1
       1: arraylength
       2: istore_2
       3: iinc          2, -1
       6: iload_2
       7: iflt          22
      10: aload_1
      11: iload_2
      12: aaload
      13: aload_0
      14: invokevirtual #15                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          3
      20: iconst_1
      21: ireturn
      22: iconst_0
      23: ireturn
}
