Compiled from "BaseEncoding.java"
final class com.google.common.io.BaseEncoding$Alphabet extends com.google.common.base.CharMatcher {
  private final java.lang.String name;

  private final char[] chars;

  final int mask;

  final int bitsPerChar;

  final int charsPerChunk;

  final int bytesPerChunk;

  private final byte[] decodabet;

  private final boolean[] validPadding;

  com.google.common.io.BaseEncoding$Alphabet(java.lang.String, char[]);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/google/common/base/CharMatcher."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #4                  // class java/lang/String
      12: putfield      #5                  // Field name:Ljava/lang/String;
      15: aload_0
      16: aload_2
      17: invokestatic  #3                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #6                  // class "[C"
      23: putfield      #7                  // Field chars:[C
      26: aload_0
      27: aload_2
      28: arraylength
      29: getstatic     #8                  // Field java/math/RoundingMode.UNNECESSARY:Ljava/math/RoundingMode;
      32: invokestatic  #9                  // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
      35: putfield      #10                 // Field bitsPerChar:I
      38: goto          71
      41: astore_3
      42: new           #12                 // class java/lang/IllegalArgumentException
      45: dup
      46: new           #13                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #15                 // String Illegal alphabet length
      55: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: arraylength
      60: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      63: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: aload_3
      67: invokespecial #19                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: bipush        8
      73: aload_0
      74: getfield      #10                 // Field bitsPerChar:I
      77: invokestatic  #20                 // Method java/lang/Integer.lowestOneBit:(I)I
      80: invokestatic  #21                 // Method java/lang/Math.min:(II)I
      83: istore_3
      84: aload_0
      85: bipush        8
      87: iload_3
      88: idiv
      89: putfield      #22                 // Field charsPerChunk:I
      92: aload_0
      93: aload_0
      94: getfield      #10                 // Field bitsPerChar:I
      97: iload_3
      98: idiv
      99: putfield      #23                 // Field bytesPerChunk:I
     102: aload_0
     103: aload_2
     104: arraylength
     105: iconst_1
     106: isub
     107: putfield      #24                 // Field mask:I
     110: sipush        128
     113: newarray       byte
     115: astore        4
     117: aload         4
     119: iconst_m1
     120: invokestatic  #25                 // Method java/util/Arrays.fill:([BB)V
     123: iconst_0
     124: istore        5
     126: iload         5
     128: aload_2
     129: arraylength
     130: if_icmpge     209
     133: aload_2
     134: iload         5
     136: caload
     137: istore        6
     139: getstatic     #26                 // Field com/google/common/base/CharMatcher.ASCII:Lcom/google/common/base/CharMatcher;
     142: iload         6
     144: invokevirtual #27                 // Method com/google/common/base/CharMatcher.matches:(C)Z
     147: ldc           #28                 // String Non-ASCII character: %s
     149: iconst_1
     150: anewarray     #29                 // class java/lang/Object
     153: dup
     154: iconst_0
     155: iload         6
     157: invokestatic  #30                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     160: aastore
     161: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     164: aload         4
     166: iload         6
     168: baload
     169: iconst_m1
     170: if_icmpne     177
     173: iconst_1
     174: goto          178
     177: iconst_0
     178: ldc           #32                 // String Duplicate character: %s
     180: iconst_1
     181: anewarray     #29                 // class java/lang/Object
     184: dup
     185: iconst_0
     186: iload         6
     188: invokestatic  #30                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     191: aastore
     192: invokestatic  #31                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     195: aload         4
     197: iload         6
     199: iload         5
     201: i2b
     202: bastore
     203: iinc          5, 1
     206: goto          126
     209: aload_0
     210: aload         4
     212: putfield      #33                 // Field decodabet:[B
     215: aload_0
     216: getfield      #22                 // Field charsPerChunk:I
     219: newarray       boolean
     221: astore        5
     223: iconst_0
     224: istore        6
     226: iload         6
     228: aload_0
     229: getfield      #23                 // Field bytesPerChunk:I
     232: if_icmpge     260
     235: aload         5
     237: iload         6
     239: bipush        8
     241: imul
     242: aload_0
     243: getfield      #10                 // Field bitsPerChar:I
     246: getstatic     #34                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
     249: invokestatic  #35                 // Method com/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
     252: iconst_1
     253: bastore
     254: iinc          6, 1
     257: goto          226
     260: aload_0
     261: aload         5
     263: putfield      #36                 // Field validPadding:[Z
     266: return
    Exception table:
       from    to  target type
          26    38    41   Class java/lang/ArithmeticException

  char encode(int);
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: iload_1
       5: caload
       6: ireturn

  boolean isValidPaddingStartPosition(int);
    Code:
       0: aload_0
       1: getfield      #36                 // Field validPadding:[Z
       4: iload_1
       5: aload_0
       6: getfield      #22                 // Field charsPerChunk:I
       9: irem
      10: baload
      11: ireturn

  int decode(char) throws java.io.IOException;
    Code:
       0: iload_1
       1: bipush        127
       3: if_icmpgt     16
       6: aload_0
       7: getfield      #33                 // Field decodabet:[B
      10: iload_1
      11: baload
      12: iconst_m1
      13: if_icmpne     43
      16: new           #37                 // class com/google/common/io/BaseEncoding$DecodingException
      19: dup
      20: new           #13                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #38                 // String Unrecognized character:
      29: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #39                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: invokespecial #40                 // Method com/google/common/io/BaseEncoding$DecodingException."<init>":(Ljava/lang/String;)V
      42: athrow
      43: aload_0
      44: getfield      #33                 // Field decodabet:[B
      47: iload_1
      48: baload
      49: ireturn

  private boolean hasLowerCase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #41                 // Method com/google/common/base/Ascii.isLowerCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  private boolean hasUpperCase();
    Code:
       0: aload_0
       1: getfield      #7                  // Field chars:[C
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: caload
      18: istore        4
      20: iload         4
      22: invokestatic  #42                 // Method com/google/common/base/Ascii.isUpperCase:(C)Z
      25: ifeq          30
      28: iconst_1
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_0
      37: ireturn

  com.google.common.io.BaseEncoding$Alphabet upperCase();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method hasLowerCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #44                 // Method hasUpperCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #45                 // String Cannot call upperCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #7                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #7                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #7                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #47                 // Method com/google/common/base/Ascii.toUpperCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: new           #13                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      74: aload_0
      75: getfield      #5                  // Field name:Ljava/lang/String;
      78: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #49                 // String .upperCase()
      83: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_1
      90: invokespecial #50                 // Method "<init>":(Ljava/lang/String;[C)V
      93: areturn

  com.google.common.io.BaseEncoding$Alphabet lowerCase();
    Code:
       0: aload_0
       1: invokespecial #44                 // Method hasUpperCase:()Z
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: invokespecial #43                 // Method hasLowerCase:()Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #51                 // String Cannot call lowerCase() on a mixed-case alphabet
      23: invokestatic  #46                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      26: aload_0
      27: getfield      #7                  // Field chars:[C
      30: arraylength
      31: newarray       char
      33: astore_1
      34: iconst_0
      35: istore_2
      36: iload_2
      37: aload_0
      38: getfield      #7                  // Field chars:[C
      41: arraylength
      42: if_icmpge     63
      45: aload_1
      46: iload_2
      47: aload_0
      48: getfield      #7                  // Field chars:[C
      51: iload_2
      52: caload
      53: invokestatic  #52                 // Method com/google/common/base/Ascii.toLowerCase:(C)C
      56: castore
      57: iinc          2, 1
      60: goto          36
      63: new           #48                 // class com/google/common/io/BaseEncoding$Alphabet
      66: dup
      67: new           #13                 // class java/lang/StringBuilder
      70: dup
      71: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      74: aload_0
      75: getfield      #5                  // Field name:Ljava/lang/String;
      78: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: ldc           #53                 // String .lowerCase()
      83: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      89: aload_1
      90: invokespecial #50                 // Method "<init>":(Ljava/lang/String;[C)V
      93: areturn

  public boolean matches(char);
    Code:
       0: getstatic     #26                 // Field com/google/common/base/CharMatcher.ASCII:Lcom/google/common/base/CharMatcher;
       3: iload_1
       4: invokevirtual #27                 // Method com/google/common/base/CharMatcher.matches:(C)Z
       7: ifeq          24
      10: aload_0
      11: getfield      #33                 // Field decodabet:[B
      14: iload_1
      15: baload
      16: iconst_m1
      17: if_icmpeq     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn
}
