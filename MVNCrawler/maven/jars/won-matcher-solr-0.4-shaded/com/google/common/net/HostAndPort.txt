Compiled from "HostAndPort.java"
public final class com.google.common.net.HostAndPort implements java.io.Serializable {
  private static final int NO_PORT;

  private final java.lang.String host;

  private final int port;

  private final boolean hasBracketlessColons;

  private static final long serialVersionUID;

  private com.google.common.net.HostAndPort(java.lang.String, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field host:Ljava/lang/String;
       9: aload_0
      10: iload_2
      11: putfield      #3                  // Field port:I
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field hasBracketlessColons:Z
      19: return

  public java.lang.String getHostText();
    Code:
       0: aload_0
       1: getfield      #2                  // Field host:Ljava/lang/String;
       4: areturn

  public boolean hasPort();
    Code:
       0: aload_0
       1: getfield      #3                  // Field port:I
       4: iflt          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int getPort();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: invokestatic  #6                  // Method com/google/common/base/Preconditions.checkState:(Z)V
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: ireturn

  public int getPortOrDefault(int);
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method hasPort:()Z
       4: ifeq          14
       7: aload_0
       8: getfield      #3                  // Field port:I
      11: goto          15
      14: iload_1
      15: ireturn

  public static com.google.common.net.HostAndPort fromParts(java.lang.String, int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: ldc           #8                  // String Port out of range: %s
       6: iconst_1
       7: anewarray     #9                  // class java/lang/Object
      10: dup
      11: iconst_0
      12: iload_1
      13: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      16: aastore
      17: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      20: aload_0
      21: invokestatic  #12                 // Method fromString:(Ljava/lang/String;)Lcom/google/common/net/HostAndPort;
      24: astore_2
      25: aload_2
      26: invokevirtual #5                  // Method hasPort:()Z
      29: ifne          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ldc           #13                 // String Host has a port: %s
      39: iconst_1
      40: anewarray     #9                  // class java/lang/Object
      43: dup
      44: iconst_0
      45: aload_0
      46: aastore
      47: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      50: new           #14                 // class com/google/common/net/HostAndPort
      53: dup
      54: aload_2
      55: getfield      #2                  // Field host:Ljava/lang/String;
      58: iload_1
      59: aload_2
      60: getfield      #4                  // Field hasBracketlessColons:Z
      63: invokespecial #15                 // Method "<init>":(Ljava/lang/String;IZ)V
      66: areturn

  public static com.google.common.net.HostAndPort fromString(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #16                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aconst_null
       6: astore_2
       7: iconst_0
       8: istore_3
       9: aload_0
      10: ldc           #17                 // String [
      12: invokevirtual #18                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      15: ifeq          37
      18: aload_0
      19: invokestatic  #19                 // Method getHostAndPortFromBracketedHost:(Ljava/lang/String;)[Ljava/lang/String;
      22: astore        4
      24: aload         4
      26: iconst_0
      27: aaload
      28: astore_1
      29: aload         4
      31: iconst_1
      32: aaload
      33: astore_2
      34: goto          97
      37: aload_0
      38: bipush        58
      40: invokevirtual #20                 // Method java/lang/String.indexOf:(I)I
      43: istore        4
      45: iload         4
      47: iflt          84
      50: aload_0
      51: bipush        58
      53: iload         4
      55: iconst_1
      56: iadd
      57: invokevirtual #21                 // Method java/lang/String.indexOf:(II)I
      60: iconst_m1
      61: if_icmpne     84
      64: aload_0
      65: iconst_0
      66: iload         4
      68: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      71: astore_1
      72: aload_0
      73: iload         4
      75: iconst_1
      76: iadd
      77: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      80: astore_2
      81: goto          97
      84: aload_0
      85: astore_1
      86: iload         4
      88: iflt          95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: istore_3
      97: iconst_m1
      98: istore        4
     100: aload_2
     101: invokestatic  #24                 // Method com/google/common/base/Strings.isNullOrEmpty:(Ljava/lang/String;)Z
     104: ifne          190
     107: aload_2
     108: ldc           #25                 // String +
     110: invokevirtual #18                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     113: ifne          120
     116: iconst_1
     117: goto          121
     120: iconst_0
     121: ldc           #26                 // String Unparseable port number: %s
     123: iconst_1
     124: anewarray     #9                  // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload_0
     130: aastore
     131: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     134: aload_2
     135: invokestatic  #27                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
     138: istore        4
     140: goto          172
     143: astore        5
     145: new           #29                 // class java/lang/IllegalArgumentException
     148: dup
     149: new           #30                 // class java/lang/StringBuilder
     152: dup
     153: invokespecial #31                 // Method java/lang/StringBuilder."<init>":()V
     156: ldc           #32                 // String Unparseable port number:
     158: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     161: aload_0
     162: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     171: athrow
     172: iload         4
     174: invokestatic  #7                  // Method isValidPort:(I)Z
     177: ldc           #36                 // String Port number out of range: %s
     179: iconst_1
     180: anewarray     #9                  // class java/lang/Object
     183: dup
     184: iconst_0
     185: aload_0
     186: aastore
     187: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     190: new           #14                 // class com/google/common/net/HostAndPort
     193: dup
     194: aload_1
     195: iload         4
     197: iload_3
     198: invokespecial #15                 // Method "<init>":(Ljava/lang/String;IZ)V
     201: areturn
    Exception table:
       from    to  target type
         134   140   143   Class java/lang/NumberFormatException

  private static java.lang.String[] getHostAndPortFromBracketedHost(java.lang.String);
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: aload_0
       7: iconst_0
       8: invokevirtual #37                 // Method java/lang/String.charAt:(I)C
      11: bipush        91
      13: if_icmpne     20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ldc           #38                 // String Bracketed host-port string must start with a bracket: %s
      23: iconst_1
      24: anewarray     #9                  // class java/lang/Object
      27: dup
      28: iconst_0
      29: aload_0
      30: aastore
      31: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      34: aload_0
      35: bipush        58
      37: invokevirtual #20                 // Method java/lang/String.indexOf:(I)I
      40: istore_1
      41: aload_0
      42: bipush        93
      44: invokevirtual #39                 // Method java/lang/String.lastIndexOf:(I)I
      47: istore_2
      48: iload_1
      49: iconst_m1
      50: if_icmple     62
      53: iload_2
      54: iload_1
      55: if_icmple     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ldc           #40                 // String Invalid bracketed host/port: %s
      65: iconst_1
      66: anewarray     #9                  // class java/lang/Object
      69: dup
      70: iconst_0
      71: aload_0
      72: aastore
      73: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      76: aload_0
      77: iconst_1
      78: iload_2
      79: invokevirtual #22                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      82: astore        4
      84: iload_2
      85: iconst_1
      86: iadd
      87: aload_0
      88: invokevirtual #41                 // Method java/lang/String.length:()I
      91: if_icmpne     109
      94: iconst_2
      95: anewarray     #42                 // class java/lang/String
      98: dup
      99: iconst_0
     100: aload         4
     102: aastore
     103: dup
     104: iconst_1
     105: ldc           #43                 // String
     107: aastore
     108: areturn
     109: aload_0
     110: iload_2
     111: iconst_1
     112: iadd
     113: invokevirtual #37                 // Method java/lang/String.charAt:(I)C
     116: bipush        58
     118: if_icmpne     125
     121: iconst_1
     122: goto          126
     125: iconst_0
     126: ldc           #44                 // String Only a colon may follow a close bracket: %s
     128: iconst_1
     129: anewarray     #9                  // class java/lang/Object
     132: dup
     133: iconst_0
     134: aload_0
     135: aastore
     136: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     139: iload_2
     140: iconst_2
     141: iadd
     142: istore        5
     144: iload         5
     146: aload_0
     147: invokevirtual #41                 // Method java/lang/String.length:()I
     150: if_icmpge     181
     153: aload_0
     154: iload         5
     156: invokevirtual #37                 // Method java/lang/String.charAt:(I)C
     159: invokestatic  #45                 // Method java/lang/Character.isDigit:(C)Z
     162: ldc           #46                 // String Port must be numeric: %s
     164: iconst_1
     165: anewarray     #9                  // class java/lang/Object
     168: dup
     169: iconst_0
     170: aload_0
     171: aastore
     172: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     175: iinc          5, 1
     178: goto          144
     181: iconst_2
     182: anewarray     #42                 // class java/lang/String
     185: dup
     186: iconst_0
     187: aload         4
     189: aastore
     190: dup
     191: iconst_1
     192: aload_0
     193: iload_2
     194: iconst_2
     195: iadd
     196: invokevirtual #23                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     199: aastore
     200: areturn

  public com.google.common.net.HostAndPort withDefaultPort(int);
    Code:
       0: iload_1
       1: invokestatic  #7                  // Method isValidPort:(I)Z
       4: invokestatic  #47                 // Method com/google/common/base/Preconditions.checkArgument:(Z)V
       7: aload_0
       8: invokevirtual #5                  // Method hasPort:()Z
      11: ifne          22
      14: aload_0
      15: getfield      #3                  // Field port:I
      18: iload_1
      19: if_icmpne     24
      22: aload_0
      23: areturn
      24: new           #14                 // class com/google/common/net/HostAndPort
      27: dup
      28: aload_0
      29: getfield      #2                  // Field host:Ljava/lang/String;
      32: iload_1
      33: aload_0
      34: getfield      #4                  // Field hasBracketlessColons:Z
      37: invokespecial #15                 // Method "<init>":(Ljava/lang/String;IZ)V
      40: areturn

  public com.google.common.net.HostAndPort requireBracketsForIPv6();
    Code:
       0: aload_0
       1: getfield      #4                  // Field hasBracketlessColons:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #48                 // String Possible bracketless IPv6 literal: %s
      14: iconst_1
      15: anewarray     #9                  // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_0
      21: getfield      #2                  // Field host:Ljava/lang/String;
      24: aastore
      25: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      28: aload_0
      29: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #14                 // class com/google/common/net/HostAndPort
      11: ifeq          61
      14: aload_1
      15: checkcast     #14                 // class com/google/common/net/HostAndPort
      18: astore_2
      19: aload_0
      20: getfield      #2                  // Field host:Ljava/lang/String;
      23: aload_2
      24: getfield      #2                  // Field host:Ljava/lang/String;
      27: invokestatic  #49                 // Method com/google/common/base/Objects.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z
      30: ifeq          59
      33: aload_0
      34: getfield      #3                  // Field port:I
      37: aload_2
      38: getfield      #3                  // Field port:I
      41: if_icmpne     59
      44: aload_0
      45: getfield      #4                  // Field hasBracketlessColons:Z
      48: aload_2
      49: getfield      #4                  // Field hasBracketlessColons:Z
      52: if_icmpne     59
      55: iconst_1
      56: goto          60
      59: iconst_0
      60: ireturn
      61: iconst_0
      62: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #9                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #2                  // Field host:Ljava/lang/String;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #3                  // Field port:I
      17: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #4                  // Field hasBracketlessColons:Z
      27: invokestatic  #50                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      30: aastore
      31: invokestatic  #51                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      34: ireturn

  public java.lang.String toString();
    Code:
       0: new           #30                 // class java/lang/StringBuilder
       3: dup
       4: aload_0
       5: getfield      #2                  // Field host:Ljava/lang/String;
       8: invokevirtual #41                 // Method java/lang/String.length:()I
      11: bipush        7
      13: iadd
      14: invokespecial #52                 // Method java/lang/StringBuilder."<init>":(I)V
      17: astore_1
      18: aload_0
      19: getfield      #2                  // Field host:Ljava/lang/String;
      22: bipush        58
      24: invokevirtual #20                 // Method java/lang/String.indexOf:(I)I
      27: iflt          52
      30: aload_1
      31: bipush        91
      33: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #2                  // Field host:Ljava/lang/String;
      40: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: bipush        93
      45: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      48: pop
      49: goto          61
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field host:Ljava/lang/String;
      57: invokevirtual #33                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_0
      62: invokevirtual #5                  // Method hasPort:()Z
      65: ifeq          82
      68: aload_1
      69: bipush        58
      71: invokevirtual #53                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      74: aload_0
      75: getfield      #3                  // Field port:I
      78: invokevirtual #54                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      81: pop
      82: aload_1
      83: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      86: areturn

  private static boolean isValidPort(int);
    Code:
       0: iload_0
       1: iflt          14
       4: iload_0
       5: ldc           #55                 // int 65535
       7: if_icmpgt     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn
}
