Compiled from "ServiceManager.java"
final class com.google.common.util.concurrent.ServiceManager$ServiceManagerState {
  final com.google.common.util.concurrent.Monitor monitor;

  final int numberOfServices;

  int unstartedServices;

  int unstoppedServices;

  final com.google.common.util.concurrent.Monitor$Guard awaitHealthGuard;

  final com.google.common.util.concurrent.Monitor$Guard stoppedGuard;

  final java.util.List<com.google.common.util.concurrent.ServiceManager$ListenerExecutorPair> listeners;

  final com.google.common.util.concurrent.ExecutionQueue queuedListeners;

  com.google.common.util.concurrent.ServiceManager$ServiceManagerState(int);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class com/google/common/util/concurrent/Monitor
       8: dup
       9: invokespecial #7                  // Method com/google/common/util/concurrent/Monitor."<init>":()V
      12: putfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      15: aload_0
      16: new           #9                  // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState$1
      19: dup
      20: aload_0
      21: aload_0
      22: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      25: invokespecial #10                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState$1."<init>":(Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;Lcom/google/common/util/concurrent/Monitor;)V
      28: putfield      #11                 // Field awaitHealthGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
      31: aload_0
      32: new           #12                 // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState$2
      35: dup
      36: aload_0
      37: aload_0
      38: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      41: invokespecial #13                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState$2."<init>":(Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;Lcom/google/common/util/concurrent/Monitor;)V
      44: putfield      #14                 // Field stoppedGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
      47: aload_0
      48: invokestatic  #15                 // Method com/google/common/collect/Lists.newArrayList:()Ljava/util/ArrayList;
      51: putfield      #16                 // Field listeners:Ljava/util/List;
      54: aload_0
      55: new           #17                 // class com/google/common/util/concurrent/ExecutionQueue
      58: dup
      59: invokespecial #18                 // Method com/google/common/util/concurrent/ExecutionQueue."<init>":()V
      62: putfield      #19                 // Field queuedListeners:Lcom/google/common/util/concurrent/ExecutionQueue;
      65: aload_0
      66: iload_1
      67: putfield      #20                 // Field numberOfServices:I
      70: aload_0
      71: iload_1
      72: putfield      #21                 // Field unstoppedServices:I
      75: aload_0
      76: iload_1
      77: putfield      #22                 // Field unstartedServices:I
      80: return

  void addListener(com.google.common.util.concurrent.ServiceManager$Listener, java.util.concurrent.Executor);
    Code:
       0: aload_1
       1: ldc           #23                 // String listener
       3: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #25                 // String executor
      10: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      18: invokevirtual #26                 // Method com/google/common/util/concurrent/Monitor.enter:()V
      21: aload_0
      22: getfield      #22                 // Field unstartedServices:I
      25: ifgt          35
      28: aload_0
      29: getfield      #21                 // Field unstoppedServices:I
      32: ifle          54
      35: aload_0
      36: getfield      #16                 // Field listeners:Ljava/util/List;
      39: new           #27                 // class com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair
      42: dup
      43: aload_1
      44: aload_2
      45: invokespecial #28                 // Method com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair."<init>":(Lcom/google/common/util/concurrent/ServiceManager$Listener;Ljava/util/concurrent/Executor;)V
      48: invokeinterface #29,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      53: pop
      54: aload_0
      55: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      58: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      61: goto          74
      64: astore_3
      65: aload_0
      66: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      69: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      72: aload_3
      73: athrow
      74: return
    Exception table:
       from    to  target type
          21    54    64   any
          64    65    64   any

  void awaitHealthy();
    Code:
       0: aload_0
       1: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
       4: aload_0
       5: getfield      #11                 // Field awaitHealthGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
       8: invokevirtual #31                 // Method com/google/common/util/concurrent/Monitor.enterWhenUninterruptibly:(Lcom/google/common/util/concurrent/Monitor$Guard;)V
      11: aload_0
      12: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      15: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      18: return

  boolean awaitHealthy(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
       4: aload_0
       5: getfield      #11                 // Field awaitHealthGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
       8: lload_1
       9: aload_3
      10: invokevirtual #32                 // Method com/google/common/util/concurrent/Monitor.enterWhenUninterruptibly:(Lcom/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
      13: ifeq          25
      16: aload_0
      17: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      20: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      23: iconst_1
      24: ireturn
      25: iconst_0
      26: ireturn

  void awaitStopped();
    Code:
       0: aload_0
       1: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
       4: aload_0
       5: getfield      #14                 // Field stoppedGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
       8: invokevirtual #31                 // Method com/google/common/util/concurrent/Monitor.enterWhenUninterruptibly:(Lcom/google/common/util/concurrent/Monitor$Guard;)V
      11: aload_0
      12: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      15: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      18: return

  boolean awaitStopped(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
       4: aload_0
       5: getfield      #14                 // Field stoppedGuard:Lcom/google/common/util/concurrent/Monitor$Guard;
       8: lload_1
       9: aload_3
      10: invokevirtual #32                 // Method com/google/common/util/concurrent/Monitor.enterWhenUninterruptibly:(Lcom/google/common/util/concurrent/Monitor$Guard;JLjava/util/concurrent/TimeUnit;)Z
      13: ifeq          25
      16: aload_0
      17: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
      20: invokevirtual #30                 // Method com/google/common/util/concurrent/Monitor.leave:()V
      23: iconst_1
      24: ireturn
      25: iconst_0
      26: ireturn

  private void serviceFinishedStarting(com.google.common.util.concurrent.Service, boolean);
    Code:
       0: aload_0
       1: getfield      #22                 // Field unstartedServices:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #33                 // String All services should have already finished starting but %s just finished.
      14: iconst_1
      15: anewarray     #34                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      25: aload_0
      26: dup
      27: getfield      #22                 // Field unstartedServices:I
      30: iconst_1
      31: isub
      32: putfield      #22                 // Field unstartedServices:I
      35: iload_2
      36: ifeq          112
      39: aload_0
      40: getfield      #22                 // Field unstartedServices:I
      43: ifne          112
      46: aload_0
      47: getfield      #21                 // Field unstoppedServices:I
      50: aload_0
      51: getfield      #20                 // Field numberOfServices:I
      54: if_icmpne     112
      57: aload_0
      58: getfield      #16                 // Field listeners:Ljava/util/List;
      61: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      66: astore_3
      67: aload_3
      68: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifeq          112
      76: aload_3
      77: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      82: checkcast     #27                 // class com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair
      85: astore        4
      87: aload_0
      88: getfield      #19                 // Field queuedListeners:Lcom/google/common/util/concurrent/ExecutionQueue;
      91: new           #39                 // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState$3
      94: dup
      95: aload_0
      96: aload         4
      98: invokespecial #40                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState$3."<init>":(Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;Lcom/google/common/util/concurrent/ServiceManager$ListenerExecutorPair;)V
     101: aload         4
     103: getfield      #41                 // Field com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair.executor:Ljava/util/concurrent/Executor;
     106: invokevirtual #42                 // Method com/google/common/util/concurrent/ExecutionQueue.add:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
     109: goto          67
     112: return

  private void serviceTerminated(com.google.common.util.concurrent.Service);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #43                 // Method serviceStopped:(Lcom/google/common/util/concurrent/Service;)V
       5: return

  private void serviceFailed(com.google.common.util.concurrent.Service);
    Code:
       0: aload_0
       1: getfield      #16                 // Field listeners:Ljava/util/List;
       4: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          53
      19: aload_2
      20: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #27                 // class com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair
      28: astore_3
      29: aload_0
      30: getfield      #19                 // Field queuedListeners:Lcom/google/common/util/concurrent/ExecutionQueue;
      33: new           #44                 // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState$4
      36: dup
      37: aload_0
      38: aload_3
      39: aload_1
      40: invokespecial #45                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState$4."<init>":(Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;Lcom/google/common/util/concurrent/ServiceManager$ListenerExecutorPair;Lcom/google/common/util/concurrent/Service;)V
      43: aload_3
      44: getfield      #41                 // Field com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair.executor:Ljava/util/concurrent/Executor;
      47: invokevirtual #42                 // Method com/google/common/util/concurrent/ExecutionQueue.add:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
      50: goto          10
      53: aload_0
      54: aload_1
      55: invokespecial #43                 // Method serviceStopped:(Lcom/google/common/util/concurrent/Service;)V
      58: return

  private void serviceStopped(com.google.common.util.concurrent.Service);
    Code:
       0: aload_0
       1: getfield      #21                 // Field unstoppedServices:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #46                 // String All services should have already stopped but %s just stopped.
      14: iconst_1
      15: anewarray     #34                 // class java/lang/Object
      18: dup
      19: iconst_0
      20: aload_1
      21: aastore
      22: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      25: aload_0
      26: dup
      27: getfield      #21                 // Field unstoppedServices:I
      30: iconst_1
      31: isub
      32: putfield      #21                 // Field unstoppedServices:I
      35: aload_0
      36: getfield      #21                 // Field unstoppedServices:I
      39: ifne          134
      42: aload_0
      43: getfield      #22                 // Field unstartedServices:I
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #47                 // String All services are stopped but %d services haven\'t finished starting
      56: iconst_1
      57: anewarray     #34                 // class java/lang/Object
      60: dup
      61: iconst_0
      62: aload_0
      63: getfield      #22                 // Field unstartedServices:I
      66: invokestatic  #48                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      69: aastore
      70: invokestatic  #35                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/String;[Ljava/lang/Object;)V
      73: aload_0
      74: getfield      #16                 // Field listeners:Ljava/util/List;
      77: invokeinterface #36,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      82: astore_2
      83: aload_2
      84: invokeinterface #37,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      89: ifeq          125
      92: aload_2
      93: invokeinterface #38,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      98: checkcast     #27                 // class com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair
     101: astore_3
     102: aload_0
     103: getfield      #19                 // Field queuedListeners:Lcom/google/common/util/concurrent/ExecutionQueue;
     106: new           #49                 // class com/google/common/util/concurrent/ServiceManager$ServiceManagerState$5
     109: dup
     110: aload_0
     111: aload_3
     112: invokespecial #50                 // Method com/google/common/util/concurrent/ServiceManager$ServiceManagerState$5."<init>":(Lcom/google/common/util/concurrent/ServiceManager$ServiceManagerState;Lcom/google/common/util/concurrent/ServiceManager$ListenerExecutorPair;)V
     115: aload_3
     116: getfield      #41                 // Field com/google/common/util/concurrent/ServiceManager$ListenerExecutorPair.executor:Ljava/util/concurrent/Executor;
     119: invokevirtual #42                 // Method com/google/common/util/concurrent/ExecutionQueue.add:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V
     122: goto          83
     125: aload_0
     126: getfield      #16                 // Field listeners:Ljava/util/List;
     129: invokeinterface #51,  1           // InterfaceMethod java/util/List.clear:()V
     134: return

  private void executeListeners();
    Code:
       0: aload_0
       1: getfield      #8                  // Field monitor:Lcom/google/common/util/concurrent/Monitor;
       4: invokevirtual #52                 // Method com/google/common/util/concurrent/Monitor.isOccupiedByCurrentThread:()Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #53                 // String It is incorrect to execute listeners with the monitor held.
      17: invokestatic  #54                 // Method com/google/common/base/Preconditions.checkState:(ZLjava/lang/Object;)V
      20: aload_0
      21: getfield      #19                 // Field queuedListeners:Lcom/google/common/util/concurrent/ExecutionQueue;
      24: invokevirtual #55                 // Method com/google/common/util/concurrent/ExecutionQueue.execute:()V
      27: return

  static void access$200(com.google.common.util.concurrent.ServiceManager$ServiceManagerState);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method executeListeners:()V
       4: return

  static void access$400(com.google.common.util.concurrent.ServiceManager$ServiceManagerState, com.google.common.util.concurrent.Service);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method serviceTerminated:(Lcom/google/common/util/concurrent/Service;)V
       5: return

  static void access$500(com.google.common.util.concurrent.ServiceManager$ServiceManagerState, com.google.common.util.concurrent.Service);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method serviceFailed:(Lcom/google/common/util/concurrent/Service;)V
       5: return

  static void access$600(com.google.common.util.concurrent.ServiceManager$ServiceManagerState, com.google.common.util.concurrent.Service, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method serviceFinishedStarting:(Lcom/google/common/util/concurrent/Service;Z)V
       6: return
}
