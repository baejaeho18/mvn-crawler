Compiled from "TypeResolver.java"
public final class com.google.common.reflect.TypeResolver {
  private final com.google.common.reflect.TypeResolver$TypeTable typeTable;

  public com.google.common.reflect.TypeResolver();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #6                  // class com/google/common/reflect/TypeResolver$TypeTable
       8: dup
       9: invokespecial #7                  // Method com/google/common/reflect/TypeResolver$TypeTable."<init>":()V
      12: putfield      #8                  // Field typeTable:Lcom/google/common/reflect/TypeResolver$TypeTable;
      15: return

  private com.google.common.reflect.TypeResolver(com.google.common.reflect.TypeResolver$TypeTable);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field typeTable:Lcom/google/common/reflect/TypeResolver$TypeTable;
       9: return

  static com.google.common.reflect.TypeResolver accordingTo(java.lang.reflect.Type);
    Code:
       0: new           #9                  // class com/google/common/reflect/TypeResolver
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: aload_0
       8: invokestatic  #11                 // Method com/google/common/reflect/TypeResolver$TypeMappingIntrospector.getTypeMappings:(Ljava/lang/reflect/Type;)Lcom/google/common/collect/ImmutableMap;
      11: invokevirtual #12                 // Method where:(Ljava/util/Map;)Lcom/google/common/reflect/TypeResolver;
      14: areturn

  public com.google.common.reflect.TypeResolver where(java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: invokestatic  #13                 // Method com/google/common/collect/Maps.newHashMap:()Ljava/util/HashMap;
       3: astore_3
       4: aload_3
       5: aload_1
       6: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #15                 // class java/lang/reflect/Type
      12: aload_2
      13: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      16: checkcast     #15                 // class java/lang/reflect/Type
      19: invokestatic  #3                  // Method populateTypeMappings:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
      22: aload_0
      23: aload_3
      24: invokevirtual #12                 // Method where:(Ljava/util/Map;)Lcom/google/common/reflect/TypeResolver;
      27: areturn

  com.google.common.reflect.TypeResolver where(java.util.Map<? extends java.lang.reflect.TypeVariable<?>, ? extends java.lang.reflect.Type>);
    Code:
       0: new           #9                  // class com/google/common/reflect/TypeResolver
       3: dup
       4: aload_0
       5: getfield      #8                  // Field typeTable:Lcom/google/common/reflect/TypeResolver$TypeTable;
       8: aload_1
       9: invokevirtual #16                 // Method com/google/common/reflect/TypeResolver$TypeTable.where:(Ljava/util/Map;)Lcom/google/common/reflect/TypeResolver$TypeTable;
      12: invokespecial #2                  // Method "<init>":(Lcom/google/common/reflect/TypeResolver$TypeTable;)V
      15: areturn

  private static void populateTypeMappings(java.util.Map<java.lang.reflect.TypeVariable<?>, java.lang.reflect.Type>, java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #17                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ifeq          9
       8: return
       9: new           #18                 // class com/google/common/reflect/TypeResolver$1
      12: dup
      13: aload_0
      14: aload_2
      15: invokespecial #19                 // Method com/google/common/reflect/TypeResolver$1."<init>":(Ljava/util/Map;Ljava/lang/reflect/Type;)V
      18: iconst_1
      19: anewarray     #15                 // class java/lang/reflect/Type
      22: dup
      23: iconst_0
      24: aload_1
      25: aastore
      26: invokevirtual #20                 // Method com/google/common/reflect/TypeResolver$1.visit:([Ljava/lang/reflect/Type;)V
      29: return

  public java.lang.reflect.Type resolveType(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: invokestatic  #14                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_1
       6: instanceof    #21                 // class java/lang/reflect/TypeVariable
       9: ifeq          24
      12: aload_0
      13: getfield      #8                  // Field typeTable:Lcom/google/common/reflect/TypeResolver$TypeTable;
      16: aload_1
      17: checkcast     #21                 // class java/lang/reflect/TypeVariable
      20: invokevirtual #22                 // Method com/google/common/reflect/TypeResolver$TypeTable.resolve:(Ljava/lang/reflect/TypeVariable;)Ljava/lang/reflect/Type;
      23: areturn
      24: aload_1
      25: instanceof    #23                 // class java/lang/reflect/ParameterizedType
      28: ifeq          40
      31: aload_0
      32: aload_1
      33: checkcast     #23                 // class java/lang/reflect/ParameterizedType
      36: invokespecial #24                 // Method resolveParameterizedType:(Ljava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/ParameterizedType;
      39: areturn
      40: aload_1
      41: instanceof    #25                 // class java/lang/reflect/GenericArrayType
      44: ifeq          56
      47: aload_0
      48: aload_1
      49: checkcast     #25                 // class java/lang/reflect/GenericArrayType
      52: invokespecial #26                 // Method resolveGenericArrayType:(Ljava/lang/reflect/GenericArrayType;)Ljava/lang/reflect/Type;
      55: areturn
      56: aload_1
      57: instanceof    #27                 // class java/lang/reflect/WildcardType
      60: ifeq          96
      63: aload_1
      64: checkcast     #27                 // class java/lang/reflect/WildcardType
      67: astore_2
      68: new           #28                 // class com/google/common/reflect/Types$WildcardTypeImpl
      71: dup
      72: aload_0
      73: aload_2
      74: invokeinterface #29,  1           // InterfaceMethod java/lang/reflect/WildcardType.getLowerBounds:()[Ljava/lang/reflect/Type;
      79: invokespecial #1                  // Method resolveTypes:([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
      82: aload_0
      83: aload_2
      84: invokeinterface #30,  1           // InterfaceMethod java/lang/reflect/WildcardType.getUpperBounds:()[Ljava/lang/reflect/Type;
      89: invokespecial #1                  // Method resolveTypes:([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
      92: invokespecial #31                 // Method com/google/common/reflect/Types$WildcardTypeImpl."<init>":([Ljava/lang/reflect/Type;[Ljava/lang/reflect/Type;)V
      95: areturn
      96: aload_1
      97: areturn

  private java.lang.reflect.Type[] resolveTypes(java.lang.reflect.Type[]);
    Code:
       0: aload_1
       1: arraylength
       2: anewarray     #15                 // class java/lang/reflect/Type
       5: astore_2
       6: iconst_0
       7: istore_3
       8: iload_3
       9: aload_1
      10: arraylength
      11: if_icmpge     30
      14: aload_2
      15: iload_3
      16: aload_0
      17: aload_1
      18: iload_3
      19: aaload
      20: invokevirtual #32                 // Method resolveType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      23: aastore
      24: iinc          3, 1
      27: goto          8
      30: aload_2
      31: areturn

  private java.lang.reflect.Type resolveGenericArrayType(java.lang.reflect.GenericArrayType);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #33,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
       7: invokevirtual #32                 // Method resolveType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      10: astore_2
      11: aload_2
      12: invokestatic  #34                 // Method com/google/common/reflect/Types.newArrayType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      15: areturn

  private java.lang.reflect.ParameterizedType resolveParameterizedType(java.lang.reflect.ParameterizedType);
    Code:
       0: aload_1
       1: invokeinterface #35,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getOwnerType:()Ljava/lang/reflect/Type;
       6: astore_2
       7: aload_2
       8: ifnonnull     15
      11: aconst_null
      12: goto          20
      15: aload_0
      16: aload_2
      17: invokevirtual #32                 // Method resolveType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      20: astore_3
      21: aload_0
      22: aload_1
      23: invokeinterface #36,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getRawType:()Ljava/lang/reflect/Type;
      28: invokevirtual #32                 // Method resolveType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      31: astore        4
      33: aload_1
      34: invokeinterface #37,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      39: astore        5
      41: aload         5
      43: arraylength
      44: anewarray     #15                 // class java/lang/reflect/Type
      47: astore        6
      49: iconst_0
      50: istore        7
      52: iload         7
      54: aload         5
      56: arraylength
      57: if_icmpge     80
      60: aload         6
      62: iload         7
      64: aload_0
      65: aload         5
      67: iload         7
      69: aaload
      70: invokevirtual #32                 // Method resolveType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      73: aastore
      74: iinc          7, 1
      77: goto          52
      80: aload_3
      81: aload         4
      83: checkcast     #38                 // class java/lang/Class
      86: aload         6
      88: invokestatic  #39                 // Method com/google/common/reflect/Types.newParameterizedTypeWithOwner:(Ljava/lang/reflect/Type;Ljava/lang/Class;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/ParameterizedType;
      91: areturn

  private static <T> T expectArgument(java.lang.Class<T>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn
       6: astore_2
       7: new           #42                 // class java/lang/IllegalArgumentException
      10: dup
      11: new           #43                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #44                 // Method java/lang/StringBuilder."<init>":()V
      18: aload_1
      19: invokevirtual #45                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      22: ldc           #46                 // String  is not a
      24: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: invokevirtual #48                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      31: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: invokevirtual #49                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      37: invokespecial #50                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/ClassCastException

  static java.lang.Object access$000(java.lang.Class, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #4                  // Method expectArgument:(Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  static void access$100(java.util.Map, java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #3                  // Method populateTypeMappings:(Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
       6: return

  com.google.common.reflect.TypeResolver(com.google.common.reflect.TypeResolver$TypeTable, com.google.common.reflect.TypeResolver$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method "<init>":(Lcom/google/common/reflect/TypeResolver$TypeTable;)V
       5: return

  static java.lang.reflect.Type[] access$300(com.google.common.reflect.TypeResolver, java.lang.reflect.Type[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method resolveTypes:([Ljava/lang/reflect/Type;)[Ljava/lang/reflect/Type;
       5: areturn
}
