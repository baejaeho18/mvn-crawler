Compiled from "BigIntegerMath.java"
public final class com.google.common.math.BigIntegerMath {
  static final int SQRT2_PRECOMPUTE_THRESHOLD;

  static final java.math.BigInteger SQRT2_PRECOMPUTED_BITS;

  private static final double LN_10;

  private static final double LN_2;

  public static boolean isPowerOfTwo(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #5                  // Method java/math/BigInteger.signum:()I
       9: ifle          29
      12: aload_0
      13: invokevirtual #6                  // Method java/math/BigInteger.getLowestSetBit:()I
      16: aload_0
      17: invokevirtual #7                  // Method java/math/BigInteger.bitLength:()I
      20: iconst_1
      21: isub
      22: if_icmpne     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public static int log2(java.math.BigInteger, java.math.RoundingMode);
    Code:
       0: ldc           #8                  // String x
       2: aload_0
       3: invokestatic  #4                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       6: checkcast     #9                  // class java/math/BigInteger
       9: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;
      12: pop
      13: aload_0
      14: invokevirtual #7                  // Method java/math/BigInteger.bitLength:()I
      17: iconst_1
      18: isub
      19: istore_2
      20: getstatic     #11                 // Field com/google/common/math/BigIntegerMath$1.$SwitchMap$java$math$RoundingMode:[I
      23: aload_1
      24: invokevirtual #12                 // Method java/math/RoundingMode.ordinal:()I
      27: iaload
      28: tableswitch   { // 1 to 8
                     1: 76
                     2: 83
                     3: 83
                     4: 85
                     5: 85
                     6: 100
                     7: 100
                     8: 100
               default: 165
          }
      76: aload_0
      77: invokestatic  #13                 // Method isPowerOfTwo:(Ljava/math/BigInteger;)Z
      80: invokestatic  #14                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      83: iload_2
      84: ireturn
      85: aload_0
      86: invokestatic  #13                 // Method isPowerOfTwo:(Ljava/math/BigInteger;)Z
      89: ifeq          96
      92: iload_2
      93: goto          99
      96: iload_2
      97: iconst_1
      98: iadd
      99: ireturn
     100: iload_2
     101: sipush        256
     104: if_icmpge     133
     107: getstatic     #15                 // Field SQRT2_PRECOMPUTED_BITS:Ljava/math/BigInteger;
     110: sipush        256
     113: iload_2
     114: isub
     115: invokevirtual #16                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
     118: astore_3
     119: aload_0
     120: aload_3
     121: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     124: ifgt          129
     127: iload_2
     128: ireturn
     129: iload_2
     130: iconst_1
     131: iadd
     132: ireturn
     133: aload_0
     134: iconst_2
     135: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     138: astore_3
     139: aload_3
     140: invokevirtual #7                  // Method java/math/BigInteger.bitLength:()I
     143: iconst_1
     144: isub
     145: istore        4
     147: iload         4
     149: iconst_2
     150: iload_2
     151: imul
     152: iconst_1
     153: iadd
     154: if_icmpge     161
     157: iload_2
     158: goto          164
     161: iload_2
     162: iconst_1
     163: iadd
     164: ireturn
     165: new           #19                 // class java/lang/AssertionError
     168: dup
     169: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
     172: athrow

  public static int log10(java.math.BigInteger, java.math.RoundingMode);
    Code:
       0: ldc           #8                  // String x
       2: aload_0
       3: invokestatic  #10                 // Method com/google/common/math/MathPreconditions.checkPositive:(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: pop
       7: aload_0
       8: invokestatic  #21                 // Method fitsInLong:(Ljava/math/BigInteger;)Z
      11: ifeq          23
      14: aload_0
      15: invokevirtual #22                 // Method java/math/BigInteger.longValue:()J
      18: aload_1
      19: invokestatic  #23                 // Method com/google/common/math/LongMath.log10:(JLjava/math/RoundingMode;)I
      22: ireturn
      23: aload_0
      24: getstatic     #24                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
      27: invokestatic  #25                 // Method log2:(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
      30: i2d
      31: getstatic     #26                 // Field LN_2:D
      34: dmul
      35: getstatic     #27                 // Field LN_10:D
      38: ddiv
      39: d2i
      40: istore_2
      41: getstatic     #28                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
      44: iload_2
      45: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      48: astore_3
      49: aload_3
      50: aload_0
      51: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      54: istore        4
      56: iload         4
      58: ifle          87
      61: iinc          2, -1
      64: aload_3
      65: getstatic     #28                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
      68: invokevirtual #29                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      71: astore_3
      72: aload_3
      73: aload_0
      74: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      77: istore        4
      79: iload         4
      81: ifgt          61
      84: goto          139
      87: getstatic     #28                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
      90: aload_3
      91: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      94: astore        5
      96: aload         5
      98: aload_0
      99: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     102: istore        6
     104: iload         6
     106: ifgt          139
     109: iinc          2, 1
     112: aload         5
     114: astore_3
     115: iload         6
     117: istore        4
     119: getstatic     #28                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
     122: aload_3
     123: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     126: astore        5
     128: aload         5
     130: aload_0
     131: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     134: istore        6
     136: goto          104
     139: iload_2
     140: istore        5
     142: aload_3
     143: astore        6
     145: iload         4
     147: istore        7
     149: getstatic     #11                 // Field com/google/common/math/BigIntegerMath$1.$SwitchMap$java$math$RoundingMode:[I
     152: aload_1
     153: invokevirtual #12                 // Method java/math/RoundingMode.ordinal:()I
     156: iaload
     157: tableswitch   { // 1 to 8
                     1: 204
                     2: 217
                     3: 217
                     4: 220
                     5: 220
                     6: 239
                     7: 239
                     8: 239
               default: 280
          }
     204: iload         7
     206: ifne          213
     209: iconst_1
     210: goto          214
     213: iconst_0
     214: invokestatic  #14                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
     217: iload         5
     219: ireturn
     220: aload         6
     222: aload_0
     223: invokevirtual #31                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     226: ifeq          234
     229: iload         5
     231: goto          238
     234: iload         5
     236: iconst_1
     237: iadd
     238: ireturn
     239: aload_0
     240: iconst_2
     241: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     244: astore        8
     246: aload         6
     248: iconst_2
     249: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     252: getstatic     #28                 // Field java/math/BigInteger.TEN:Ljava/math/BigInteger;
     255: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     258: astore        9
     260: aload         8
     262: aload         9
     264: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     267: ifgt          275
     270: iload         5
     272: goto          279
     275: iload         5
     277: iconst_1
     278: iadd
     279: ireturn
     280: new           #19                 // class java/lang/AssertionError
     283: dup
     284: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
     287: athrow

  public static java.math.BigInteger sqrt(java.math.BigInteger, java.math.RoundingMode);
    Code:
       0: ldc           #8                  // String x
       2: aload_0
       3: invokestatic  #32                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;Ljava/math/BigInteger;)Ljava/math/BigInteger;
       6: pop
       7: aload_0
       8: invokestatic  #21                 // Method fitsInLong:(Ljava/math/BigInteger;)Z
      11: ifeq          26
      14: aload_0
      15: invokevirtual #22                 // Method java/math/BigInteger.longValue:()J
      18: aload_1
      19: invokestatic  #33                 // Method com/google/common/math/LongMath.sqrt:(JLjava/math/RoundingMode;)J
      22: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      25: areturn
      26: aload_0
      27: invokestatic  #35                 // Method sqrtFloor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      30: astore_2
      31: getstatic     #11                 // Field com/google/common/math/BigIntegerMath$1.$SwitchMap$java$math$RoundingMode:[I
      34: aload_1
      35: invokevirtual #12                 // Method java/math/RoundingMode.ordinal:()I
      38: iaload
      39: tableswitch   { // 1 to 8
                     1: 84
                     2: 96
                     3: 96
                     4: 98
                     5: 98
                     6: 122
                     7: 122
                     8: 122
               default: 152
          }
      84: aload_2
      85: iconst_2
      86: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
      89: aload_0
      90: invokevirtual #31                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      93: invokestatic  #14                 // Method com/google/common/math/MathPreconditions.checkRoundingUnnecessary:(Z)V
      96: aload_2
      97: areturn
      98: aload_2
      99: iconst_2
     100: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     103: aload_0
     104: invokevirtual #31                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     107: ifeq          114
     110: aload_2
     111: goto          121
     114: aload_2
     115: getstatic     #36                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
     118: invokevirtual #37                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     121: areturn
     122: aload_2
     123: iconst_2
     124: invokevirtual #18                 // Method java/math/BigInteger.pow:(I)Ljava/math/BigInteger;
     127: aload_2
     128: invokevirtual #37                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     131: astore_3
     132: aload_3
     133: aload_0
     134: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
     137: iflt          144
     140: aload_2
     141: goto          151
     144: aload_2
     145: getstatic     #36                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
     148: invokevirtual #37                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     151: areturn
     152: new           #19                 // class java/lang/AssertionError
     155: dup
     156: invokespecial #20                 // Method java/lang/AssertionError."<init>":()V
     159: athrow

  private static java.math.BigInteger sqrtFloor(java.math.BigInteger);
    Code:
       0: aload_0
       1: getstatic     #24                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
       4: invokestatic  #25                 // Method log2:(Ljava/math/BigInteger;Ljava/math/RoundingMode;)I
       7: istore_2
       8: iload_2
       9: sipush        1023
      12: if_icmpge     23
      15: aload_0
      16: invokestatic  #38                 // Method sqrtApproxWithDoubles:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      19: astore_1
      20: goto          46
      23: iload_2
      24: bipush        52
      26: isub
      27: bipush        -2
      29: iand
      30: istore_3
      31: aload_0
      32: iload_3
      33: invokevirtual #16                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      36: invokestatic  #38                 // Method sqrtApproxWithDoubles:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      39: iload_3
      40: iconst_1
      41: ishr
      42: invokevirtual #39                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
      45: astore_1
      46: aload_1
      47: aload_0
      48: aload_1
      49: invokevirtual #29                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      52: invokevirtual #37                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      55: iconst_1
      56: invokevirtual #16                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      59: astore_3
      60: aload_1
      61: aload_3
      62: invokevirtual #31                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      65: ifeq          70
      68: aload_1
      69: areturn
      70: aload_3
      71: astore_1
      72: aload_1
      73: aload_0
      74: aload_1
      75: invokevirtual #29                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      78: invokevirtual #37                 // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      81: iconst_1
      82: invokevirtual #16                 // Method java/math/BigInteger.shiftRight:(I)Ljava/math/BigInteger;
      85: astore_3
      86: aload_3
      87: aload_1
      88: invokevirtual #17                 // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      91: iflt          70
      94: aload_1
      95: areturn

  private static java.math.BigInteger sqrtApproxWithDoubles(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokestatic  #40                 // Method com/google/common/math/DoubleUtils.bigToDouble:(Ljava/math/BigInteger;)D
       4: invokestatic  #41                 // Method java/lang/Math.sqrt:(D)D
       7: getstatic     #42                 // Field java/math/RoundingMode.HALF_EVEN:Ljava/math/RoundingMode;
      10: invokestatic  #43                 // Method com/google/common/math/DoubleMath.roundToBigInteger:(DLjava/math/RoundingMode;)Ljava/math/BigInteger;
      13: areturn

  public static java.math.BigInteger divide(java.math.BigInteger, java.math.BigInteger, java.math.RoundingMode);
    Code:
       0: new           #44                 // class java/math/BigDecimal
       3: dup
       4: aload_0
       5: invokespecial #45                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
       8: astore_3
       9: new           #44                 // class java/math/BigDecimal
      12: dup
      13: aload_1
      14: invokespecial #45                 // Method java/math/BigDecimal."<init>":(Ljava/math/BigInteger;)V
      17: astore        4
      19: aload_3
      20: aload         4
      22: iconst_0
      23: aload_2
      24: invokevirtual #46                 // Method java/math/BigDecimal.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;
      27: invokevirtual #47                 // Method java/math/BigDecimal.toBigIntegerExact:()Ljava/math/BigInteger;
      30: areturn

  public static java.math.BigInteger factorial(int);
    Code:
       0: ldc           #48                 // String n
       2: iload_0
       3: invokestatic  #49                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: iload_0
       8: getstatic     #50                 // Field com/google/common/math/LongMath.factorials:[J
      11: arraylength
      12: if_icmpge     24
      15: getstatic     #50                 // Field com/google/common/math/LongMath.factorials:[J
      18: iload_0
      19: laload
      20: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      23: areturn
      24: iload_0
      25: iload_0
      26: getstatic     #51                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
      29: invokestatic  #52                 // Method com/google/common/math/IntMath.log2:(ILjava/math/RoundingMode;)I
      32: imul
      33: bipush        64
      35: getstatic     #51                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
      38: invokestatic  #53                 // Method com/google/common/math/IntMath.divide:(IILjava/math/RoundingMode;)I
      41: istore_1
      42: new           #54                 // class java/util/ArrayList
      45: dup
      46: iload_1
      47: invokespecial #55                 // Method java/util/ArrayList."<init>":(I)V
      50: astore_2
      51: getstatic     #50                 // Field com/google/common/math/LongMath.factorials:[J
      54: arraylength
      55: istore_3
      56: getstatic     #50                 // Field com/google/common/math/LongMath.factorials:[J
      59: iload_3
      60: iconst_1
      61: isub
      62: laload
      63: lstore        4
      65: lload         4
      67: invokestatic  #56                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
      70: istore        6
      72: lload         4
      74: iload         6
      76: lshr
      77: lstore        4
      79: lload         4
      81: getstatic     #24                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
      84: invokestatic  #57                 // Method com/google/common/math/LongMath.log2:(JLjava/math/RoundingMode;)I
      87: iconst_1
      88: iadd
      89: istore        7
      91: iload_3
      92: i2l
      93: getstatic     #24                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
      96: invokestatic  #57                 // Method com/google/common/math/LongMath.log2:(JLjava/math/RoundingMode;)I
      99: iconst_1
     100: iadd
     101: istore        8
     103: iconst_1
     104: iload         8
     106: iconst_1
     107: isub
     108: ishl
     109: istore        9
     111: iload_3
     112: i2l
     113: lstore        10
     115: lload         10
     117: iload_0
     118: i2l
     119: lcmp
     120: ifgt          225
     123: lload         10
     125: iload         9
     127: i2l
     128: land
     129: lconst_0
     130: lcmp
     131: ifeq          143
     134: iload         9
     136: iconst_1
     137: ishl
     138: istore        9
     140: iinc          8, 1
     143: lload         10
     145: invokestatic  #56                 // Method java/lang/Long.numberOfTrailingZeros:(J)I
     148: istore        12
     150: lload         10
     152: iload         12
     154: lshr
     155: lstore        13
     157: iload         6
     159: iload         12
     161: iadd
     162: istore        6
     164: iload         8
     166: iload         12
     168: isub
     169: istore        15
     171: iload         15
     173: iload         7
     175: iadd
     176: bipush        64
     178: if_icmplt     197
     181: aload_2
     182: lload         4
     184: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     187: invokevirtual #58                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     190: pop
     191: lconst_1
     192: lstore        4
     194: iconst_0
     195: istore        7
     197: lload         4
     199: lload         13
     201: lmul
     202: lstore        4
     204: lload         4
     206: getstatic     #24                 // Field java/math/RoundingMode.FLOOR:Ljava/math/RoundingMode;
     209: invokestatic  #57                 // Method com/google/common/math/LongMath.log2:(JLjava/math/RoundingMode;)I
     212: iconst_1
     213: iadd
     214: istore        7
     216: lload         10
     218: lconst_1
     219: ladd
     220: lstore        10
     222: goto          115
     225: lload         4
     227: lconst_1
     228: lcmp
     229: ifle          242
     232: aload_2
     233: lload         4
     235: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     238: invokevirtual #58                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     241: pop
     242: aload_2
     243: invokestatic  #59                 // Method listProduct:(Ljava/util/List;)Ljava/math/BigInteger;
     246: iload         6
     248: invokevirtual #39                 // Method java/math/BigInteger.shiftLeft:(I)Ljava/math/BigInteger;
     251: areturn

  static java.math.BigInteger listProduct(java.util.List<java.math.BigInteger>);
    Code:
       0: aload_0
       1: iconst_0
       2: aload_0
       3: invokeinterface #60,  1           // InterfaceMethod java/util/List.size:()I
       8: invokestatic  #61                 // Method listProduct:(Ljava/util/List;II)Ljava/math/BigInteger;
      11: areturn

  static java.math.BigInteger listProduct(java.util.List<java.math.BigInteger>, int, int);
    Code:
       0: iload_2
       1: iload_1
       2: isub
       3: tableswitch   { // 0 to 3
                     0: 32
                     1: 36
                     2: 47
                     3: 73
               default: 114
          }
      32: getstatic     #36                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      35: areturn
      36: aload_0
      37: iload_1
      38: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      43: checkcast     #9                  // class java/math/BigInteger
      46: areturn
      47: aload_0
      48: iload_1
      49: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      54: checkcast     #9                  // class java/math/BigInteger
      57: aload_0
      58: iload_1
      59: iconst_1
      60: iadd
      61: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      66: checkcast     #9                  // class java/math/BigInteger
      69: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      72: areturn
      73: aload_0
      74: iload_1
      75: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      80: checkcast     #9                  // class java/math/BigInteger
      83: aload_0
      84: iload_1
      85: iconst_1
      86: iadd
      87: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      92: checkcast     #9                  // class java/math/BigInteger
      95: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      98: aload_0
      99: iload_1
     100: iconst_2
     101: iadd
     102: invokeinterface #62,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     107: checkcast     #9                  // class java/math/BigInteger
     110: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     113: areturn
     114: iload_2
     115: iload_1
     116: iadd
     117: iconst_1
     118: iushr
     119: istore_3
     120: aload_0
     121: iload_1
     122: iload_3
     123: invokestatic  #61                 // Method listProduct:(Ljava/util/List;II)Ljava/math/BigInteger;
     126: aload_0
     127: iload_3
     128: iload_2
     129: invokestatic  #61                 // Method listProduct:(Ljava/util/List;II)Ljava/math/BigInteger;
     132: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     135: areturn

  public static java.math.BigInteger binomial(int, int);
    Code:
       0: ldc           #48                 // String n
       2: iload_0
       3: invokestatic  #49                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
       6: pop
       7: ldc           #63                 // String k
       9: iload_1
      10: invokestatic  #49                 // Method com/google/common/math/MathPreconditions.checkNonNegative:(Ljava/lang/String;I)I
      13: pop
      14: iload_1
      15: iload_0
      16: if_icmpgt     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #64                 // String k (%s) > n (%s)
      26: iconst_2
      27: anewarray     #65                 // class java/lang/Object
      30: dup
      31: iconst_0
      32: iload_1
      33: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: aastore
      37: dup
      38: iconst_1
      39: iload_0
      40: invokestatic  #66                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: aastore
      44: invokestatic  #67                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      47: iload_1
      48: iload_0
      49: iconst_1
      50: ishr
      51: if_icmple     58
      54: iload_0
      55: iload_1
      56: isub
      57: istore_1
      58: iload_1
      59: getstatic     #68                 // Field com/google/common/math/LongMath.biggestBinomials:[I
      62: arraylength
      63: if_icmpge     84
      66: iload_0
      67: getstatic     #68                 // Field com/google/common/math/LongMath.biggestBinomials:[I
      70: iload_1
      71: iaload
      72: if_icmpgt     84
      75: iload_0
      76: iload_1
      77: invokestatic  #69                 // Method com/google/common/math/LongMath.binomial:(II)J
      80: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      83: areturn
      84: getstatic     #36                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      87: astore_2
      88: iload_0
      89: i2l
      90: lstore_3
      91: lconst_1
      92: lstore        5
      94: iload_0
      95: i2l
      96: getstatic     #51                 // Field java/math/RoundingMode.CEILING:Ljava/math/RoundingMode;
      99: invokestatic  #57                 // Method com/google/common/math/LongMath.log2:(JLjava/math/RoundingMode;)I
     102: istore        7
     104: iload         7
     106: istore        8
     108: iconst_1
     109: istore        9
     111: iload         9
     113: iload_1
     114: if_icmpge     199
     117: iload_0
     118: iload         9
     120: isub
     121: istore        10
     123: iload         9
     125: iconst_1
     126: iadd
     127: istore        11
     129: iload         8
     131: iload         7
     133: iadd
     134: bipush        63
     136: if_icmplt     172
     139: aload_2
     140: lload_3
     141: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     144: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     147: lload         5
     149: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     152: invokevirtual #29                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     155: astore_2
     156: iload         10
     158: i2l
     159: lstore_3
     160: iload         11
     162: i2l
     163: lstore        5
     165: iload         7
     167: istore        8
     169: goto          193
     172: lload_3
     173: iload         10
     175: i2l
     176: lmul
     177: lstore_3
     178: lload         5
     180: iload         11
     182: i2l
     183: lmul
     184: lstore        5
     186: iload         8
     188: iload         7
     190: iadd
     191: istore        8
     193: iinc          9, 1
     196: goto          111
     199: aload_2
     200: lload_3
     201: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     204: invokevirtual #30                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     207: lload         5
     209: invokestatic  #34                 // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
     212: invokevirtual #29                 // Method java/math/BigInteger.divide:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     215: areturn

  static boolean fitsInLong(java.math.BigInteger);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method java/math/BigInteger.bitLength:()I
       4: bipush        63
       6: if_icmpgt     13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  private com.google.common.math.BigIntegerMath();
    Code:
       0: aload_0
       1: invokespecial #70                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: new           #9                  // class java/math/BigInteger
       3: dup
       4: ldc           #71                 // String 16a09e667f3bcc908b2fb1366ea957d3e3adec17512775099da2f590b0667322a
       6: bipush        16
       8: invokespecial #72                 // Method java/math/BigInteger."<init>":(Ljava/lang/String;I)V
      11: putstatic     #15                 // Field SQRT2_PRECOMPUTED_BITS:Ljava/math/BigInteger;
      14: ldc2_w        #73                 // double 10.0d
      17: invokestatic  #75                 // Method java/lang/Math.log:(D)D
      20: putstatic     #27                 // Field LN_10:D
      23: ldc2_w        #76                 // double 2.0d
      26: invokestatic  #75                 // Method java/lang/Math.log:(D)D
      29: putstatic     #26                 // Field LN_2:D
      32: return
}
