Compiled from "ImmutableTable.java"
public abstract class com.google.common.collect.ImmutableTable<R, C, V> extends com.google.common.collect.AbstractTable<R, C, V> {
  private static final com.google.common.collect.ImmutableTable<java.lang.Object, java.lang.Object, java.lang.Object> EMPTY;

  public static <R, C, V> com.google.common.collect.ImmutableTable<R, C, V> of();
    Code:
       0: getstatic     #1                  // Field EMPTY:Lcom/google/common/collect/ImmutableTable;
       3: areturn

  public static <R, C, V> com.google.common.collect.ImmutableTable<R, C, V> of(R, C, V);
    Code:
       0: new           #2                  // class com/google/common/collect/SingletonImmutableTable
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokespecial #3                  // Method com/google/common/collect/SingletonImmutableTable."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      10: areturn

  public static <R, C, V> com.google.common.collect.ImmutableTable<R, C, V> copyOf(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: aload_0
       1: instanceof    #4                  // class com/google/common/collect/ImmutableTable
       4: ifeq          14
       7: aload_0
       8: checkcast     #4                  // class com/google/common/collect/ImmutableTable
      11: astore_1
      12: aload_1
      13: areturn
      14: aload_0
      15: invokeinterface #5,  1            // InterfaceMethod com/google/common/collect/Table.size:()I
      20: istore_1
      21: iload_1
      22: lookupswitch  { // 2
                     0: 48
                     1: 52
               default: 87
          }
      48: invokestatic  #6                  // Method of:()Lcom/google/common/collect/ImmutableTable;
      51: areturn
      52: aload_0
      53: invokeinterface #7,  1            // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      58: invokestatic  #8                  // Method com/google/common/collect/Iterables.getOnlyElement:(Ljava/lang/Iterable;)Ljava/lang/Object;
      61: checkcast     #9                  // class com/google/common/collect/Table$Cell
      64: astore_2
      65: aload_2
      66: invokeinterface #10,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
      71: aload_2
      72: invokeinterface #11,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
      77: aload_2
      78: invokeinterface #12,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
      83: invokestatic  #13                 // Method of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/ImmutableTable;
      86: areturn
      87: invokestatic  #14                 // Method com/google/common/collect/ImmutableSet.builder:()Lcom/google/common/collect/ImmutableSet$Builder;
      90: astore_3
      91: aload_0
      92: invokeinterface #7,  1            // InterfaceMethod com/google/common/collect/Table.cellSet:()Ljava/util/Set;
      97: invokeinterface #15,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     102: astore        4
     104: aload         4
     106: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     111: ifeq          158
     114: aload         4
     116: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     121: checkcast     #9                  // class com/google/common/collect/Table$Cell
     124: astore        5
     126: aload_3
     127: aload         5
     129: invokeinterface #10,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getRowKey:()Ljava/lang/Object;
     134: aload         5
     136: invokeinterface #11,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getColumnKey:()Ljava/lang/Object;
     141: aload         5
     143: invokeinterface #12,  1           // InterfaceMethod com/google/common/collect/Table$Cell.getValue:()Ljava/lang/Object;
     148: invokestatic  #18                 // Method cellOf:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/Table$Cell;
     151: invokevirtual #19                 // Method com/google/common/collect/ImmutableSet$Builder.add:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableSet$Builder;
     154: pop
     155: goto          104
     158: aload_3
     159: invokevirtual #20                 // Method com/google/common/collect/ImmutableSet$Builder.build:()Lcom/google/common/collect/ImmutableSet;
     162: invokestatic  #21                 // Method com/google/common/collect/RegularImmutableTable.forCells:(Ljava/lang/Iterable;)Lcom/google/common/collect/RegularImmutableTable;
     165: areturn

  public static <R, C, V> com.google.common.collect.ImmutableTable$Builder<R, C, V> builder();
    Code:
       0: new           #22                 // class com/google/common/collect/ImmutableTable$Builder
       3: dup
       4: invokespecial #23                 // Method com/google/common/collect/ImmutableTable$Builder."<init>":()V
       7: areturn

  static <R, C, V> com.google.common.collect.Table$Cell<R, C, V> cellOf(R, C, V);
    Code:
       0: aload_0
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: aload_1
       5: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       8: aload_2
       9: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokestatic  #25                 // Method com/google/common/collect/Tables.immutableCell:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/Table$Cell;
      15: areturn

  com.google.common.collect.ImmutableTable();
    Code:
       0: aload_0
       1: invokespecial #26                 // Method com/google/common/collect/AbstractTable."<init>":()V
       4: return

  public com.google.common.collect.ImmutableSet<com.google.common.collect.Table$Cell<R, C, V>> cellSet();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method com/google/common/collect/AbstractTable.cellSet:()Ljava/util/Set;
       4: checkcast     #28                 // class com/google/common/collect/ImmutableSet
       7: areturn

  abstract com.google.common.collect.ImmutableSet<com.google.common.collect.Table$Cell<R, C, V>> createCellSet();

  final com.google.common.collect.UnmodifiableIterator<com.google.common.collect.Table$Cell<R, C, V>> cellIterator();
    Code:
       0: new           #29                 // class java/lang/AssertionError
       3: dup
       4: ldc           #30                 // String should never be called
       6: invokespecial #31                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: athrow

  public com.google.common.collect.ImmutableCollection<V> values();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method com/google/common/collect/AbstractTable.values:()Ljava/util/Collection;
       4: checkcast     #33                 // class com/google/common/collect/ImmutableCollection
       7: areturn

  abstract com.google.common.collect.ImmutableCollection<V> createValues();

  final java.util.Iterator<V> valuesIterator();
    Code:
       0: new           #29                 // class java/lang/AssertionError
       3: dup
       4: ldc           #30                 // String should never be called
       6: invokespecial #31                 // Method java/lang/AssertionError."<init>":(Ljava/lang/Object;)V
       9: athrow

  public com.google.common.collect.ImmutableMap<R, V> column(C);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #34                 // Method columnMap:()Lcom/google/common/collect/ImmutableMap;
       9: aload_1
      10: invokevirtual #35                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #36                 // class com/google/common/collect/ImmutableMap
      16: invokestatic  #37                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      19: invokestatic  #38                 // Method com/google/common/base/Objects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #36                 // class com/google/common/collect/ImmutableMap
      25: areturn

  public com.google.common.collect.ImmutableSet<C> columnKeySet();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method columnMap:()Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #39                 // Method com/google/common/collect/ImmutableMap.keySet:()Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public abstract com.google.common.collect.ImmutableMap<C, java.util.Map<R, V>> columnMap();

  public com.google.common.collect.ImmutableMap<C, V> row(R);
    Code:
       0: aload_1
       1: invokestatic  #24                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: invokevirtual #40                 // Method rowMap:()Lcom/google/common/collect/ImmutableMap;
       9: aload_1
      10: invokevirtual #35                 // Method com/google/common/collect/ImmutableMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #36                 // class com/google/common/collect/ImmutableMap
      16: invokestatic  #37                 // Method com/google/common/collect/ImmutableMap.of:()Lcom/google/common/collect/ImmutableMap;
      19: invokestatic  #38                 // Method com/google/common/base/Objects.firstNonNull:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #36                 // class com/google/common/collect/ImmutableMap
      25: areturn

  public com.google.common.collect.ImmutableSet<R> rowKeySet();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method rowMap:()Lcom/google/common/collect/ImmutableMap;
       4: invokevirtual #39                 // Method com/google/common/collect/ImmutableMap.keySet:()Lcom/google/common/collect/ImmutableSet;
       7: areturn

  public abstract com.google.common.collect.ImmutableMap<R, java.util.Map<C, V>> rowMap();

  public boolean contains(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #41                 // Method get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: ifnull        13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method values:()Lcom/google/common/collect/ImmutableCollection;
       4: aload_1
       5: invokevirtual #43                 // Method com/google/common/collect/ImmutableCollection.contains:(Ljava/lang/Object;)Z
       8: ireturn

  public final void clear();
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V put(R, C, V);
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final void putAll(com.google.common.collect.Table<? extends R, ? extends C, ? extends V>);
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public final V remove(java.lang.Object, java.lang.Object);
    Code:
       0: new           #44                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #45                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokespecial #46                 // Method com/google/common/collect/AbstractTable.toString:()Ljava/lang/String;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method com/google/common/collect/AbstractTable.hashCode:()I
       4: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method com/google/common/collect/AbstractTable.equals:(Ljava/lang/Object;)Z
       5: ireturn

  java.util.Collection createValues();
    Code:
       0: aload_0
       1: invokevirtual #49                 // Method createValues:()Lcom/google/common/collect/ImmutableCollection;
       4: areturn

  public java.util.Collection values();
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method values:()Lcom/google/common/collect/ImmutableCollection;
       4: areturn

  java.util.Iterator cellIterator();
    Code:
       0: aload_0
       1: invokevirtual #50                 // Method cellIterator:()Lcom/google/common/collect/UnmodifiableIterator;
       4: areturn

  java.util.Set createCellSet();
    Code:
       0: aload_0
       1: invokevirtual #51                 // Method createCellSet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Set cellSet();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method cellSet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokespecial #53                 // Method com/google/common/collect/AbstractTable.isEmpty:()Z
       4: ireturn

  public java.lang.Object get(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #54                 // Method com/google/common/collect/AbstractTable.get:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.util.Set columnKeySet();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method columnKeySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public java.util.Set rowKeySet();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method rowKeySet:()Lcom/google/common/collect/ImmutableSet;
       4: areturn

  public boolean containsColumn(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #57                 // Method com/google/common/collect/AbstractTable.containsColumn:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean containsRow(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #58                 // Method com/google/common/collect/AbstractTable.containsRow:(Ljava/lang/Object;)Z
       5: ireturn

  public java.util.Map columnMap();
    Code:
       0: aload_0
       1: invokevirtual #34                 // Method columnMap:()Lcom/google/common/collect/ImmutableMap;
       4: areturn

  public java.util.Map rowMap();
    Code:
       0: aload_0
       1: invokevirtual #40                 // Method rowMap:()Lcom/google/common/collect/ImmutableMap;
       4: areturn

  public java.util.Map column(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method column:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
       5: areturn

  public java.util.Map row(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method row:(Ljava/lang/Object;)Lcom/google/common/collect/ImmutableMap;
       5: areturn

  static {};
    Code:
       0: new           #61                 // class com/google/common/collect/SparseImmutableTable
       3: dup
       4: invokestatic  #62                 // Method com/google/common/collect/ImmutableList.of:()Lcom/google/common/collect/ImmutableList;
       7: invokestatic  #63                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      10: invokestatic  #63                 // Method com/google/common/collect/ImmutableSet.of:()Lcom/google/common/collect/ImmutableSet;
      13: invokespecial #64                 // Method com/google/common/collect/SparseImmutableTable."<init>":(Lcom/google/common/collect/ImmutableList;Lcom/google/common/collect/ImmutableSet;Lcom/google/common/collect/ImmutableSet;)V
      16: putstatic     #1                  // Field EMPTY:Lcom/google/common/collect/ImmutableTable;
      19: return
}
