Compiled from "BloomFilter.java"
public final class com.google.common.hash.BloomFilter<T> implements com.google.common.base.Predicate<T>, java.io.Serializable {
  private final com.google.common.hash.BloomFilterStrategies$BitArray bits;

  private final int numHashFunctions;

  private final com.google.common.hash.Funnel<T> funnel;

  private final com.google.common.hash.BloomFilter$Strategy strategy;

  private com.google.common.hash.BloomFilter(com.google.common.hash.BloomFilterStrategies$BitArray, int, com.google.common.hash.Funnel<T>, com.google.common.hash.BloomFilter$Strategy);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: iload_2
       5: ifle          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #8                  // String numHashFunctions (%s) must be > 0
      15: iconst_1
      16: anewarray     #9                  // class java/lang/Object
      19: dup
      20: iconst_0
      21: iload_2
      22: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      29: iload_2
      30: sipush        255
      33: if_icmpgt     40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #12                 // String numHashFunctions (%s) must be <= 255
      43: iconst_1
      44: anewarray     #9                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: iload_2
      50: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: aastore
      54: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: aload_0
      58: aload_1
      59: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #14                 // class com/google/common/hash/BloomFilterStrategies$BitArray
      65: putfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      68: aload_0
      69: iload_2
      70: putfield      #5                  // Field numHashFunctions:I
      73: aload_0
      74: aload_3
      75: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      78: checkcast     #15                 // class com/google/common/hash/Funnel
      81: putfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      84: aload_0
      85: aload         4
      87: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      90: checkcast     #16                 // class com/google/common/hash/BloomFilter$Strategy
      93: putfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      96: return

  public com.google.common.hash.BloomFilter<T> copy();
    Code:
       0: new           #17                 // class com/google/common/hash/BloomFilter
       3: dup
       4: aload_0
       5: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
       8: invokevirtual #18                 // Method com/google/common/hash/BloomFilterStrategies$BitArray.copy:()Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      11: aload_0
      12: getfield      #5                  // Field numHashFunctions:I
      15: aload_0
      16: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      19: aload_0
      20: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      23: invokespecial #2                  // Method "<init>":(Lcom/google/common/hash/BloomFilterStrategies$BitArray;ILcom/google/common/hash/Funnel;Lcom/google/common/hash/BloomFilter$Strategy;)V
      26: areturn

  public boolean mightContain(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
       9: aload_0
      10: getfield      #5                  // Field numHashFunctions:I
      13: aload_0
      14: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      17: invokeinterface #19,  5           // InterfaceMethod com/google/common/hash/BloomFilter$Strategy.mightContain:(Ljava/lang/Object;Lcom/google/common/hash/Funnel;ILcom/google/common/hash/BloomFilterStrategies$BitArray;)Z
      22: ireturn

  public boolean apply(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method mightContain:(Ljava/lang/Object;)Z
       5: ireturn

  public boolean put(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
       4: aload_1
       5: aload_0
       6: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
       9: aload_0
      10: getfield      #5                  // Field numHashFunctions:I
      13: aload_0
      14: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      17: invokeinterface #21,  5           // InterfaceMethod com/google/common/hash/BloomFilter$Strategy.put:(Ljava/lang/Object;Lcom/google/common/hash/Funnel;ILcom/google/common/hash/BloomFilterStrategies$BitArray;)Z
      22: ireturn

  public double expectedFpp();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
       4: invokevirtual #22                 // Method com/google/common/hash/BloomFilterStrategies$BitArray.bitCount:()I
       7: i2d
       8: aload_0
       9: invokevirtual #23                 // Method bitSize:()J
      12: l2d
      13: ddiv
      14: aload_0
      15: getfield      #5                  // Field numHashFunctions:I
      18: i2d
      19: invokestatic  #24                 // Method java/lang/Math.pow:(DD)D
      22: dreturn

  long bitSize();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
       4: invokevirtual #25                 // Method com/google/common/hash/BloomFilterStrategies$BitArray.bitSize:()I
       7: i2l
       8: lreturn

  public boolean isCompatible(com.google.common.hash.BloomFilter<T>);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: if_acmpeq     65
      10: aload_0
      11: getfield      #5                  // Field numHashFunctions:I
      14: aload_1
      15: getfield      #5                  // Field numHashFunctions:I
      18: if_icmpne     65
      21: aload_0
      22: invokevirtual #23                 // Method bitSize:()J
      25: aload_1
      26: invokevirtual #23                 // Method bitSize:()J
      29: lcmp
      30: ifne          65
      33: aload_0
      34: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      37: aload_1
      38: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      41: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      44: ifeq          65
      47: aload_0
      48: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      51: aload_1
      52: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      55: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      58: ifeq          65
      61: iconst_1
      62: goto          66
      65: iconst_0
      66: ireturn

  public void putAll(com.google.common.hash.BloomFilter<T>);
    Code:
       0: aload_1
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ldc           #27                 // String Cannot combine a BloomFilter with itself.
      17: invokestatic  #28                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/Object;)V
      20: aload_0
      21: getfield      #5                  // Field numHashFunctions:I
      24: aload_1
      25: getfield      #5                  // Field numHashFunctions:I
      28: if_icmpne     35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ldc           #29                 // String BloomFilters must have the same number of hash functions (%s != %s)
      38: iconst_2
      39: anewarray     #9                  // class java/lang/Object
      42: dup
      43: iconst_0
      44: aload_0
      45: getfield      #5                  // Field numHashFunctions:I
      48: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      51: aastore
      52: dup
      53: iconst_1
      54: aload_1
      55: getfield      #5                  // Field numHashFunctions:I
      58: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      61: aastore
      62: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      65: aload_0
      66: invokevirtual #23                 // Method bitSize:()J
      69: aload_1
      70: invokevirtual #23                 // Method bitSize:()J
      73: lcmp
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #30                 // String BloomFilters must have the same size underlying bit arrays (%s != %s)
      84: iconst_2
      85: anewarray     #9                  // class java/lang/Object
      88: dup
      89: iconst_0
      90: aload_0
      91: invokevirtual #23                 // Method bitSize:()J
      94: invokestatic  #31                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      97: aastore
      98: dup
      99: iconst_1
     100: aload_1
     101: invokevirtual #23                 // Method bitSize:()J
     104: invokestatic  #31                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     107: aastore
     108: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     111: aload_0
     112: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
     115: aload_1
     116: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
     119: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     122: ldc           #32                 // String BloomFilters must have equal strategies (%s != %s)
     124: iconst_2
     125: anewarray     #9                  // class java/lang/Object
     128: dup
     129: iconst_0
     130: aload_0
     131: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
     134: aastore
     135: dup
     136: iconst_1
     137: aload_1
     138: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
     141: aastore
     142: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     145: aload_0
     146: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
     149: aload_1
     150: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
     153: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     156: ldc           #33                 // String BloomFilters must have equal funnels (%s != %s)
     158: iconst_2
     159: anewarray     #9                  // class java/lang/Object
     162: dup
     163: iconst_0
     164: aload_0
     165: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
     168: aastore
     169: dup
     170: iconst_1
     171: aload_1
     172: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
     175: aastore
     176: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
     179: aload_0
     180: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
     183: aload_1
     184: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
     187: invokevirtual #34                 // Method com/google/common/hash/BloomFilterStrategies$BitArray.putAll:(Lcom/google/common/hash/BloomFilterStrategies$BitArray;)V
     190: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #17                 // class com/google/common/hash/BloomFilter
      11: ifeq          78
      14: aload_1
      15: checkcast     #17                 // class com/google/common/hash/BloomFilter
      18: astore_2
      19: aload_0
      20: getfield      #5                  // Field numHashFunctions:I
      23: aload_2
      24: getfield      #5                  // Field numHashFunctions:I
      27: if_icmpne     76
      30: aload_0
      31: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      34: aload_2
      35: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      38: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      41: ifeq          76
      44: aload_0
      45: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      48: aload_2
      49: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      52: invokevirtual #35                 // Method com/google/common/hash/BloomFilterStrategies$BitArray.equals:(Ljava/lang/Object;)Z
      55: ifeq          76
      58: aload_0
      59: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      62: aload_2
      63: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      66: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      69: ifeq          76
      72: iconst_1
      73: goto          77
      76: iconst_0
      77: ireturn
      78: iconst_0
      79: ireturn

  public int hashCode();
    Code:
       0: iconst_4
       1: anewarray     #9                  // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #5                  // Field numHashFunctions:I
      10: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
      27: aastore
      28: dup
      29: iconst_3
      30: aload_0
      31: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
      34: aastore
      35: invokestatic  #36                 // Method com/google/common/base/Objects.hashCode:([Ljava/lang/Object;)I
      38: ireturn

  public static <T> com.google.common.hash.BloomFilter<T> create(com.google.common.hash.Funnel<T>, int, double);
    Code:
       0: aload_0
       1: invokestatic  #13                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: iload_1
       6: iflt          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: ldc           #37                 // String Expected insertions (%s) must be >= 0
      16: iconst_1
      17: anewarray     #9                  // class java/lang/Object
      20: dup
      21: iconst_0
      22: iload_1
      23: invokestatic  #10                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      26: aastore
      27: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      30: dload_2
      31: dconst_0
      32: dcmpl
      33: ifle          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ldc           #38                 // String False positive probability (%s) must be > 0.0
      43: iconst_1
      44: anewarray     #9                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: dload_2
      50: invokestatic  #39                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      53: aastore
      54: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      57: dload_2
      58: dconst_1
      59: dcmpg
      60: ifge          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ldc           #40                 // String False positive probability (%s) must be < 1.0
      70: iconst_1
      71: anewarray     #9                  // class java/lang/Object
      74: dup
      75: iconst_0
      76: dload_2
      77: invokestatic  #39                 // Method java/lang/Double.valueOf:(D)Ljava/lang/Double;
      80: aastore
      81: invokestatic  #11                 // Method com/google/common/base/Preconditions.checkArgument:(ZLjava/lang/String;[Ljava/lang/Object;)V
      84: iload_1
      85: ifne          90
      88: iconst_1
      89: istore_1
      90: iload_1
      91: i2l
      92: dload_2
      93: invokestatic  #41                 // Method optimalNumOfBits:(JD)J
      96: lstore        4
      98: iload_1
      99: i2l
     100: lload         4
     102: invokestatic  #42                 // Method optimalNumOfHashFunctions:(JJ)I
     105: istore        6
     107: new           #17                 // class com/google/common/hash/BloomFilter
     110: dup
     111: new           #14                 // class com/google/common/hash/BloomFilterStrategies$BitArray
     114: dup
     115: lload         4
     117: invokespecial #43                 // Method com/google/common/hash/BloomFilterStrategies$BitArray."<init>":(J)V
     120: iload         6
     122: aload_0
     123: getstatic     #44                 // Field com/google/common/hash/BloomFilterStrategies.MURMUR128_MITZ_32:Lcom/google/common/hash/BloomFilterStrategies;
     126: invokespecial #2                  // Method "<init>":(Lcom/google/common/hash/BloomFilterStrategies$BitArray;ILcom/google/common/hash/Funnel;Lcom/google/common/hash/BloomFilter$Strategy;)V
     129: areturn
     130: astore        7
     132: new           #45                 // class java/lang/IllegalArgumentException
     135: dup
     136: new           #46                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #48                 // String Could not create BloomFilter of
     145: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: lload         4
     150: invokevirtual #50                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     153: ldc           #51                 // String  bits
     155: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     161: aload         7
     163: invokespecial #53                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     166: athrow
    Exception table:
       from    to  target type
         107   129   130   Class java/lang/IllegalArgumentException

  public static <T> com.google.common.hash.BloomFilter<T> create(com.google.common.hash.Funnel<T>, int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc2_w        #54                 // double 0.03d
       5: invokestatic  #56                 // Method create:(Lcom/google/common/hash/Funnel;ID)Lcom/google/common/hash/BloomFilter;
       8: areturn

  static int optimalNumOfHashFunctions(long, long);
    Code:
       0: iconst_1
       1: lload_2
       2: lload_0
       3: ldiv
       4: l2d
       5: ldc2_w        #57                 // double 2.0d
       8: invokestatic  #59                 // Method java/lang/Math.log:(D)D
      11: dmul
      12: invokestatic  #60                 // Method java/lang/Math.round:(D)J
      15: l2i
      16: invokestatic  #61                 // Method java/lang/Math.max:(II)I
      19: ireturn

  static long optimalNumOfBits(long, double);
    Code:
       0: dload_2
       1: dconst_0
       2: dcmpl
       3: ifne          10
       6: ldc2_w        #62                 // double 4.9E-324d
       9: dstore_2
      10: lload_0
      11: lneg
      12: l2d
      13: dload_2
      14: invokestatic  #59                 // Method java/lang/Math.log:(D)D
      17: dmul
      18: ldc2_w        #57                 // double 2.0d
      21: invokestatic  #59                 // Method java/lang/Math.log:(D)D
      24: ldc2_w        #57                 // double 2.0d
      27: invokestatic  #59                 // Method java/lang/Math.log:(D)D
      30: dmul
      31: ddiv
      32: d2l
      33: lreturn

  private java.lang.Object writeReplace();
    Code:
       0: new           #64                 // class com/google/common/hash/BloomFilter$SerialForm
       3: dup
       4: aload_0
       5: invokespecial #65                 // Method com/google/common/hash/BloomFilter$SerialForm."<init>":(Lcom/google/common/hash/BloomFilter;)V
       8: areturn

  static com.google.common.hash.BloomFilterStrategies$BitArray access$000(com.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #6                  // Field bits:Lcom/google/common/hash/BloomFilterStrategies$BitArray;
       4: areturn

  static int access$100(com.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #5                  // Field numHashFunctions:I
       4: ireturn

  static com.google.common.hash.Funnel access$200(com.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #4                  // Field funnel:Lcom/google/common/hash/Funnel;
       4: areturn

  static com.google.common.hash.BloomFilter$Strategy access$300(com.google.common.hash.BloomFilter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field strategy:Lcom/google/common/hash/BloomFilter$Strategy;
       4: areturn

  com.google.common.hash.BloomFilter(com.google.common.hash.BloomFilterStrategies$BitArray, int, com.google.common.hash.Funnel, com.google.common.hash.BloomFilter$Strategy, com.google.common.hash.BloomFilter$1);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokespecial #2                  // Method "<init>":(Lcom/google/common/hash/BloomFilterStrategies$BitArray;ILcom/google/common/hash/Funnel;Lcom/google/common/hash/BloomFilter$Strategy;)V
       9: return
}
