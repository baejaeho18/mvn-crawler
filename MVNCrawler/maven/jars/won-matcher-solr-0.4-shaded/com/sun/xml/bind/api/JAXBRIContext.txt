Compiled from "JAXBRIContext.java"
public abstract class com.sun.xml.bind.api.JAXBRIContext extends javax.xml.bind.JAXBContext {
  public static final java.lang.String DEFAULT_NAMESPACE_REMAP;

  public static final java.lang.String TYPE_REFERENCES;

  public static final java.lang.String CANONICALIZATION_SUPPORT;

  public static final java.lang.String TREAT_EVERYTHING_NILLABLE;

  public static final java.lang.String ANNOTATION_READER;

  public static final java.lang.String ENABLE_XOP;

  public static final java.lang.String SUBCLASS_REPLACEMENTS;

  public static final java.lang.String XMLACCESSORFACTORY_SUPPORT;

  public static final java.lang.String RETAIN_REFERENCE_TO_INFO;

  public static final java.lang.String SUPRESS_ACCESSOR_WARNINGS;

  public static final java.lang.String IMPROVED_XSI_TYPE_HANDLING;

  public static final java.lang.String DISABLE_XML_SECURITY;

  protected com.sun.xml.bind.api.JAXBRIContext();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/xml/bind/JAXBContext."<init>":()V
       4: return

  public static com.sun.xml.bind.api.JAXBRIContext newInstance(java.lang.Class[], java.util.Collection<com.sun.xml.bind.api.TypeReference>, java.util.Map<java.lang.Class, java.lang.Class>, java.lang.String, boolean, com.sun.xml.bind.v2.model.annotation.RuntimeAnnotationReader) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: aload         5
       8: iconst_0
       9: iconst_0
      10: iconst_0
      11: iconst_0
      12: invokestatic  #2                  // Method newInstance:([Ljava/lang/Class;Ljava/util/Collection;Ljava/util/Map;Ljava/lang/String;ZLcom/sun/xml/bind/v2/model/annotation/RuntimeAnnotationReader;ZZZZ)Lcom/sun/xml/bind/api/JAXBRIContext;
      15: areturn

  public static com.sun.xml.bind.api.JAXBRIContext newInstance(java.lang.Class[], java.util.Collection<com.sun.xml.bind.api.TypeReference>, java.util.Map<java.lang.Class, java.lang.Class>, java.lang.String, boolean, com.sun.xml.bind.v2.model.annotation.RuntimeAnnotationReader, boolean, boolean, boolean, boolean) throws javax.xml.bind.JAXBException;
    Code:
       0: new           #3                  // class java/util/HashMap
       3: dup
       4: invokespecial #4                  // Method java/util/HashMap."<init>":()V
       7: astore        10
       9: aload_1
      10: ifnull        24
      13: aload         10
      15: ldc           #5                  // String com.sun.xml.bind.typeReferences
      17: aload_1
      18: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_2
      25: ifnull        39
      28: aload         10
      30: ldc           #7                  // String com.sun.xml.bind.subclassReplacements
      32: aload_2
      33: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: pop
      39: aload_3
      40: ifnull        54
      43: aload         10
      45: ldc           #8                  // String com.sun.xml.bind.defaultNamespaceRemap
      47: aload_3
      48: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      53: pop
      54: aload         5
      56: ifnull        72
      59: aload         10
      61: getstatic     #9                  // Field ANNOTATION_READER:Ljava/lang/String;
      64: aload         5
      66: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      71: pop
      72: aload         10
      74: ldc           #10                 // String com.sun.xml.bind.c14n
      76: iload         4
      78: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      81: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      86: pop
      87: aload         10
      89: ldc           #12                 // String com.sun.xml.bind.XmlAccessorFactory
      91: iload         6
      93: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      96: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     101: pop
     102: aload         10
     104: ldc           #13                 // String com.sun.xml.bind.treatEverythingNillable
     106: iload         7
     108: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     111: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     116: pop
     117: aload         10
     119: ldc           #14                 // String retainReferenceToInfo
     121: iload         8
     123: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     126: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     131: pop
     132: aload         10
     134: ldc           #15                 // String supressAccessorWarnings
     136: iload         9
     138: invokestatic  #11                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     141: invokeinterface #6,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     146: pop
     147: aload_0
     148: aload         10
     150: invokestatic  #16                 // Method com/sun/xml/bind/v2/ContextFactory.createContext:([Ljava/lang/Class;Ljava/util/Map;)Ljavax/xml/bind/JAXBContext;
     153: checkcast     #17                 // class com/sun/xml/bind/api/JAXBRIContext
     156: areturn

  public static com.sun.xml.bind.api.JAXBRIContext newInstance(java.lang.Class[], java.util.Collection<com.sun.xml.bind.api.TypeReference>, java.lang.String, boolean) throws javax.xml.bind.JAXBException;
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #18                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       5: aload_2
       6: iload_3
       7: aconst_null
       8: invokestatic  #19                 // Method newInstance:([Ljava/lang/Class;Ljava/util/Collection;Ljava/util/Map;Ljava/lang/String;ZLcom/sun/xml/bind/v2/model/annotation/RuntimeAnnotationReader;)Lcom/sun/xml/bind/api/JAXBRIContext;
      11: areturn

  public abstract boolean hasSwaRef();

  public abstract javax.xml.namespace.QName getElementName(java.lang.Object) throws javax.xml.bind.JAXBException;

  public abstract javax.xml.namespace.QName getElementName(java.lang.Class) throws javax.xml.bind.JAXBException;

  public abstract com.sun.xml.bind.api.Bridge createBridge(com.sun.xml.bind.api.TypeReference);

  public abstract com.sun.xml.bind.api.BridgeContext createBridgeContext();

  public abstract <B, V> com.sun.xml.bind.api.RawAccessor<B, V> getElementPropertyAccessor(java.lang.Class<B>, java.lang.String, java.lang.String) throws javax.xml.bind.JAXBException;

  public abstract java.util.List<java.lang.String> getKnownNamespaceURIs();

  public abstract void generateSchema(javax.xml.bind.SchemaOutputResolver) throws java.io.IOException;

  public abstract javax.xml.namespace.QName getTypeName(com.sun.xml.bind.api.TypeReference);

  public abstract java.lang.String getBuildId();

  public abstract void generateEpisode(javax.xml.transform.Result);

  public abstract com.sun.xml.bind.v2.model.runtime.RuntimeTypeInfoSet getRuntimeTypeInfoSet();

  public static java.lang.String mangleNameToVariableName(java.lang.String);
    Code:
       0: getstatic     #20                 // Field com/sun/xml/bind/api/impl/NameConverter.standard:Lcom/sun/xml/bind/api/impl/NameConverter;
       3: aload_0
       4: invokeinterface #21,  2           // InterfaceMethod com/sun/xml/bind/api/impl/NameConverter.toVariableName:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public static java.lang.String mangleNameToClassName(java.lang.String);
    Code:
       0: getstatic     #20                 // Field com/sun/xml/bind/api/impl/NameConverter.standard:Lcom/sun/xml/bind/api/impl/NameConverter;
       3: aload_0
       4: invokeinterface #22,  2           // InterfaceMethod com/sun/xml/bind/api/impl/NameConverter.toClassName:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public static java.lang.String mangleNameToPropertyName(java.lang.String);
    Code:
       0: getstatic     #20                 // Field com/sun/xml/bind/api/impl/NameConverter.standard:Lcom/sun/xml/bind/api/impl/NameConverter;
       3: aload_0
       4: invokeinterface #23,  2           // InterfaceMethod com/sun/xml/bind/api/impl/NameConverter.toPropertyName:(Ljava/lang/String;)Ljava/lang/String;
       9: areturn

  public static java.lang.reflect.Type getBaseType(java.lang.reflect.Type, java.lang.Class);
    Code:
       0: getstatic     #24                 // Field com/sun/xml/bind/v2/model/nav/Navigator.REFLECTION:Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;
       3: aload_0
       4: aload_1
       5: invokevirtual #25                 // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator.getBaseClass:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
       8: areturn

  static {};
    Code:
       0: ldc_w         #26                 // class com/sun/xml/bind/v2/model/annotation/RuntimeAnnotationReader
       3: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: putstatic     #9                  // Field ANNOTATION_READER:Ljava/lang/String;
       9: return
}
