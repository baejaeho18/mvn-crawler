Compiled from "ReflectionNavigator.java"
public final class com.sun.xml.bind.v2.model.nav.ReflectionNavigator implements com.sun.xml.bind.v2.model.nav.Navigator<java.lang.reflect.Type, java.lang.Class, java.lang.reflect.Field, java.lang.reflect.Method> {
  private static final com.sun.xml.bind.v2.model.nav.TypeVisitor<java.lang.reflect.Type, java.lang.Class> baseClassFinder;

  private static final com.sun.xml.bind.v2.model.nav.TypeVisitor<java.lang.reflect.Type, com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg> binder;

  private static final com.sun.xml.bind.v2.model.nav.TypeVisitor<java.lang.Class, java.lang.Void> eraser;

  static final boolean $assertionsDisabled;

  com.sun.xml.bind.v2.model.nav.ReflectionNavigator();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Class getSuperClass(java.lang.Class);
    Code:
       0: aload_1
       1: ldc_w         #3                  // class java/lang/Object
       4: if_acmpne     9
       7: aconst_null
       8: areturn
       9: aload_1
      10: invokevirtual #4                  // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: ldc_w         #3                  // class java/lang/Object
      21: astore_2
      22: aload_2
      23: areturn

  public java.lang.reflect.Type getBaseClass(java.lang.reflect.Type, java.lang.Class);
    Code:
       0: getstatic     #5                  // Field baseClassFinder:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
       3: aload_1
       4: aload_2
       5: invokevirtual #6                  // Method com/sun/xml/bind/v2/model/nav/TypeVisitor.visit:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class java/lang/reflect/Type
      11: areturn

  public java.lang.String getClassName(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: areturn

  public java.lang.String getTypeName(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Class
       4: ifeq          51
       7: aload_1
       8: checkcast     #9                  // class java/lang/Class
      11: astore_2
      12: aload_2
      13: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
      16: ifeq          46
      19: new           #11                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      26: aload_0
      27: aload_2
      28: invokevirtual #13                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      31: invokevirtual #14                 // Method getTypeName:(Ljava/lang/reflect/Type;)Ljava/lang/String;
      34: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #16                 // String []
      39: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: areturn
      46: aload_2
      47: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      50: areturn
      51: aload_1
      52: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
      55: areturn

  public java.lang.String getClassShortName(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #19                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       4: areturn

  public java.util.Collection<? extends java.lang.reflect.Field> getDeclaredFields(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #20                 // Method java/lang/Class.getDeclaredFields:()[Ljava/lang/reflect/Field;
       4: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public java.lang.reflect.Field getDeclaredField(java.lang.Class, java.lang.String);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #22                 // Method java/lang/Class.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
       5: areturn
       6: astore_3
       7: aconst_null
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/NoSuchFieldException

  public java.util.Collection<? extends java.lang.reflect.Method> getDeclaredMethods(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #24                 // Method java/lang/Class.getDeclaredMethods:()[Ljava/lang/reflect/Method;
       4: invokestatic  #21                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       7: areturn

  public java.lang.Class getDeclaringClassForField(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #25                 // Method java/lang/reflect/Field.getDeclaringClass:()Ljava/lang/Class;
       4: areturn

  public java.lang.Class getDeclaringClassForMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       4: areturn

  public java.lang.reflect.Type getFieldType(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #27                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
       4: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
       7: ifeq          34
      10: aload_1
      11: invokevirtual #27                 // Method java/lang/reflect/Field.getType:()Ljava/lang/Class;
      14: invokevirtual #13                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      17: astore_2
      18: aload_2
      19: invokevirtual #28                 // Method java/lang/Class.isPrimitive:()Z
      22: ifeq          34
      25: aload_2
      26: iconst_0
      27: invokestatic  #29                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      30: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: areturn
      34: aload_0
      35: aload_1
      36: invokevirtual #31                 // Method java/lang/reflect/Field.getGenericType:()Ljava/lang/reflect/Type;
      39: invokespecial #32                 // Method fix:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      42: areturn

  public java.lang.String getFieldName(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
       4: areturn

  public java.lang.String getMethodName(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: areturn

  public java.lang.reflect.Type getReturnType(java.lang.reflect.Method);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #35                 // Method java/lang/reflect/Method.getGenericReturnType:()Ljava/lang/reflect/Type;
       5: invokespecial #32                 // Method fix:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
       8: areturn

  public java.lang.reflect.Type[] getMethodParameters(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method java/lang/reflect/Method.getGenericParameterTypes:()[Ljava/lang/reflect/Type;
       4: areturn

  public boolean isStaticMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #38                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ireturn

  public boolean isFinalMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #39                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       7: ireturn

  public boolean isSubClassOf(java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #40                 // Method erasure:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       5: aload_0
       6: aload_1
       7: invokevirtual #40                 // Method erasure:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
      10: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      13: ireturn

  public java.lang.Class ref(java.lang.Class);
    Code:
       0: aload_1
       1: areturn

  public java.lang.Class use(java.lang.Class);
    Code:
       0: aload_1
       1: areturn

  public java.lang.Class asDecl(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #40                 // Method erasure:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       5: areturn

  public java.lang.Class asDecl(java.lang.Class);
    Code:
       0: aload_1
       1: areturn

  public <T> java.lang.Class<T> erasure(java.lang.reflect.Type);
    Code:
       0: getstatic     #42                 // Field eraser:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
       3: aload_1
       4: aconst_null
       5: invokevirtual #6                  // Method com/sun/xml/bind/v2/model/nav/TypeVisitor.visit:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #9                  // class java/lang/Class
      11: areturn

  public boolean isAbstract(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #44                 // Method java/lang/reflect/Modifier.isAbstract:(I)Z
       7: ireturn

  public boolean isFinal(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #43                 // Method java/lang/Class.getModifiers:()I
       4: invokestatic  #39                 // Method java/lang/reflect/Modifier.isFinal:(I)Z
       7: ireturn

  public java.lang.reflect.Type createParameterizedType(java.lang.Class, java.lang.reflect.Type...);
    Code:
       0: new           #45                 // class com/sun/xml/bind/v2/model/nav/ParameterizedTypeImpl
       3: dup
       4: aload_1
       5: aload_2
       6: aconst_null
       7: invokespecial #46                 // Method com/sun/xml/bind/v2/model/nav/ParameterizedTypeImpl."<init>":(Ljava/lang/Class;[Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V
      10: areturn

  public boolean isArray(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Class
       4: ifeq          17
       7: aload_1
       8: checkcast     #9                  // class java/lang/Class
      11: astore_2
      12: aload_2
      13: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
      16: ireturn
      17: aload_1
      18: instanceof    #47                 // class java/lang/reflect/GenericArrayType
      21: ifeq          26
      24: iconst_1
      25: ireturn
      26: iconst_0
      27: ireturn

  public boolean isArrayButNotByteArray(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Class
       4: ifeq          32
       7: aload_1
       8: checkcast     #9                  // class java/lang/Class
      11: astore_2
      12: aload_2
      13: invokevirtual #10                 // Method java/lang/Class.isArray:()Z
      16: ifeq          30
      19: aload_2
      20: ldc_w         #48                 // class "[B"
      23: if_acmpeq     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn
      32: aload_1
      33: instanceof    #47                 // class java/lang/reflect/GenericArrayType
      36: ifeq          62
      39: aload_1
      40: checkcast     #47                 // class java/lang/reflect/GenericArrayType
      43: invokeinterface #49,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      48: astore_1
      49: aload_1
      50: getstatic     #50                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      53: if_acmpeq     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn
      62: iconst_0
      63: ireturn

  public java.lang.reflect.Type getComponentType(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Class
       4: ifeq          17
       7: aload_1
       8: checkcast     #9                  // class java/lang/Class
      11: astore_2
      12: aload_2
      13: invokevirtual #13                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      16: areturn
      17: aload_1
      18: instanceof    #47                 // class java/lang/reflect/GenericArrayType
      21: ifeq          34
      24: aload_1
      25: checkcast     #47                 // class java/lang/reflect/GenericArrayType
      28: invokeinterface #49,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      33: areturn
      34: new           #51                 // class java/lang/IllegalArgumentException
      37: dup
      38: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":()V
      41: athrow

  public java.lang.reflect.Type getTypeArgument(java.lang.reflect.Type, int);
    Code:
       0: aload_1
       1: instanceof    #53                 // class java/lang/reflect/ParameterizedType
       4: ifeq          25
       7: aload_1
       8: checkcast     #53                 // class java/lang/reflect/ParameterizedType
      11: astore_3
      12: aload_0
      13: aload_3
      14: invokeinterface #54,  1           // InterfaceMethod java/lang/reflect/ParameterizedType.getActualTypeArguments:()[Ljava/lang/reflect/Type;
      19: iload_2
      20: aaload
      21: invokespecial #32                 // Method fix:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
      24: areturn
      25: new           #51                 // class java/lang/IllegalArgumentException
      28: dup
      29: invokespecial #52                 // Method java/lang/IllegalArgumentException."<init>":()V
      32: athrow

  public boolean isParameterizedType(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #53                 // class java/lang/reflect/ParameterizedType
       4: ireturn

  public boolean isPrimitive(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #9                  // class java/lang/Class
       4: ifeq          17
       7: aload_1
       8: checkcast     #9                  // class java/lang/Class
      11: astore_2
      12: aload_2
      13: invokevirtual #28                 // Method java/lang/Class.isPrimitive:()Z
      16: ireturn
      17: iconst_0
      18: ireturn

  public java.lang.reflect.Type getPrimitive(java.lang.Class);
    Code:
       0: getstatic     #55                 // Field $assertionsDisabled:Z
       3: ifne          21
       6: aload_1
       7: invokevirtual #28                 // Method java/lang/Class.isPrimitive:()Z
      10: ifne          21
      13: new           #56                 // class java/lang/AssertionError
      16: dup
      17: invokespecial #57                 // Method java/lang/AssertionError."<init>":()V
      20: athrow
      21: aload_1
      22: areturn

  public com.sun.xml.bind.v2.runtime.Location getClassLocation(java.lang.Class);
    Code:
       0: new           #58                 // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$4
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #59                 // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$4."<init>":(Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;Ljava/lang/Class;)V
       9: areturn

  public com.sun.xml.bind.v2.runtime.Location getFieldLocation(java.lang.reflect.Field);
    Code:
       0: new           #60                 // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$5
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #61                 // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$5."<init>":(Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;Ljava/lang/reflect/Field;)V
       9: areturn

  public com.sun.xml.bind.v2.runtime.Location getMethodLocation(java.lang.reflect.Method);
    Code:
       0: new           #62                 // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$6
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #63                 // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$6."<init>":(Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;Ljava/lang/reflect/Method;)V
       9: areturn

  public boolean hasDefaultConstructor(java.lang.Class);
    Code:
       0: aload_1
       1: iconst_0
       2: anewarray     #9                  // class java/lang/Class
       5: invokevirtual #64                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
       8: pop
       9: iconst_1
      10: ireturn
      11: astore_2
      12: iconst_0
      13: ireturn
    Exception table:
       from    to  target type
           0    10    11   Class java/lang/NoSuchMethodException

  public boolean isStaticField(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method java/lang/reflect/Field.getModifiers:()I
       4: invokestatic  #38                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
       7: ireturn

  public boolean isPublicMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/reflect/Method.getModifiers:()I
       4: invokestatic  #67                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
       7: ireturn

  public boolean isPublicField(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method java/lang/reflect/Field.getModifiers:()I
       4: invokestatic  #67                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
       7: ireturn

  public boolean isEnum(java.lang.Class);
    Code:
       0: ldc_w         #68                 // class java/lang/Enum
       3: aload_1
       4: invokevirtual #41                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       7: ireturn

  public java.lang.reflect.Field[] getEnumConstants(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #69                 // Method java/lang/Class.getEnumConstants:()[Ljava/lang/Object;
       4: astore_2
       5: aload_2
       6: arraylength
       7: anewarray     #70                 // class java/lang/reflect/Field
      10: astore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: aload_2
      17: arraylength
      18: if_icmpge     45
      21: aload_3
      22: iload         4
      24: aload_1
      25: aload_2
      26: iload         4
      28: aaload
      29: checkcast     #68                 // class java/lang/Enum
      32: invokevirtual #71                 // Method java/lang/Enum.name:()Ljava/lang/String;
      35: invokevirtual #72                 // Method java/lang/Class.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;
      38: aastore
      39: iinc          4, 1
      42: goto          14
      45: aload_3
      46: areturn
      47: astore_2
      48: new           #73                 // class java/lang/NoSuchFieldError
      51: dup
      52: aload_2
      53: invokevirtual #74                 // Method java/lang/NoSuchFieldException.getMessage:()Ljava/lang/String;
      56: invokespecial #75                 // Method java/lang/NoSuchFieldError."<init>":(Ljava/lang/String;)V
      59: athrow
    Exception table:
       from    to  target type
           0    46    47   Class java/lang/NoSuchFieldException

  public java.lang.reflect.Type getVoidType();
    Code:
       0: ldc_w         #76                 // class java/lang/Void
       3: areturn

  public java.lang.String getPackageName(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: bipush        46
       8: invokevirtual #77                 // Method java/lang/String.lastIndexOf:(I)I
      11: istore_3
      12: iload_3
      13: ifge          19
      16: ldc           #78                 // String
      18: areturn
      19: aload_2
      20: iconst_0
      21: iload_3
      22: invokevirtual #79                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      25: areturn

  public java.lang.Class findClass(java.lang.String, java.lang.Class);
    Code:
       0: aload_2
       1: invokestatic  #80                 // Method com/sun/xml/bind/v2/model/nav/SecureLoader.getClassClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
       4: astore_3
       5: aload_3
       6: ifnonnull     13
       9: invokestatic  #81                 // Method com/sun/xml/bind/v2/model/nav/SecureLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      12: astore_3
      13: aload_3
      14: aload_1
      15: invokevirtual #82                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      18: areturn
      19: astore_3
      20: aconst_null
      21: areturn
    Exception table:
       from    to  target type
           0    18    19   Class java/lang/ClassNotFoundException

  public boolean isBridgeMethod(java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #84                 // Method java/lang/reflect/Method.isBridge:()Z
       4: ireturn

  public boolean isOverriding(java.lang.reflect.Method, java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
       4: astore_3
       5: aload_1
       6: invokevirtual #85                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
       9: astore        4
      11: aload_2
      12: ifnull        40
      15: aload_2
      16: aload_3
      17: aload         4
      19: invokevirtual #86                 // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      22: ifnull        27
      25: iconst_1
      26: ireturn
      27: goto          32
      30: astore        5
      32: aload_2
      33: invokevirtual #4                  // Method java/lang/Class.getSuperclass:()Ljava/lang/Class;
      36: astore_2
      37: goto          11
      40: iconst_0
      41: ireturn
    Exception table:
       from    to  target type
          15    26    30   Class java/lang/NoSuchMethodException

  public boolean isInterface(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #87                 // Method java/lang/Class.isInterface:()Z
       4: ireturn

  public boolean isTransient(java.lang.reflect.Field);
    Code:
       0: aload_1
       1: invokevirtual #66                 // Method java/lang/reflect/Field.getModifiers:()I
       4: invokestatic  #88                 // Method java/lang/reflect/Modifier.isTransient:(I)Z
       7: ireturn

  public boolean isInnerClass(java.lang.Class);
    Code:
       0: aload_1
       1: invokevirtual #89                 // Method java/lang/Class.getEnclosingClass:()Ljava/lang/Class;
       4: ifnull        21
       7: aload_1
       8: invokevirtual #43                 // Method java/lang/Class.getModifiers:()I
      11: invokestatic  #38                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ireturn

  public boolean isSameType(java.lang.reflect.Type, java.lang.reflect.Type);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #90                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       5: ireturn

  private java.lang.reflect.Type fix(java.lang.reflect.Type);
    Code:
       0: aload_1
       1: instanceof    #47                 // class java/lang/reflect/GenericArrayType
       4: ifne          9
       7: aload_1
       8: areturn
       9: aload_1
      10: checkcast     #47                 // class java/lang/reflect/GenericArrayType
      13: astore_2
      14: aload_2
      15: invokeinterface #49,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      20: instanceof    #9                  // class java/lang/Class
      23: ifeq          45
      26: aload_2
      27: invokeinterface #49,  1           // InterfaceMethod java/lang/reflect/GenericArrayType.getGenericComponentType:()Ljava/lang/reflect/Type;
      32: checkcast     #9                  // class java/lang/Class
      35: astore_3
      36: aload_3
      37: iconst_0
      38: invokestatic  #29                 // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
      41: invokevirtual #30                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      44: areturn
      45: aload_1
      46: areturn

  public boolean isSameType(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: aload_2
       6: checkcast     #7                  // class java/lang/reflect/Type
       9: invokevirtual #91                 // Method isSameType:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      12: ireturn

  public boolean isInnerClass(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #92                 // Method isInnerClass:(Ljava/lang/Class;)Z
       8: ireturn

  public boolean isTransient(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #93                 // Method isTransient:(Ljava/lang/reflect/Field;)Z
       8: ireturn

  public boolean isInterface(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #94                 // Method isInterface:(Ljava/lang/Class;)Z
       8: ireturn

  public boolean isOverriding(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: aload_2
       6: checkcast     #9                  // class java/lang/Class
       9: invokevirtual #96                 // Method isOverriding:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Z
      12: ireturn

  public boolean isBridgeMethod(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #97                 // Method isBridgeMethod:(Ljava/lang/reflect/Method;)Z
       8: ireturn

  public java.lang.Object findClass(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #9                  // class java/lang/Class
       6: invokevirtual #98                 // Method findClass:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Class;
       9: areturn

  public java.lang.String getPackageName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #99                 // Method getPackageName:(Ljava/lang/Class;)Ljava/lang/String;
       8: areturn

  public java.lang.Object getVoidType();
    Code:
       0: aload_0
       1: invokevirtual #100                // Method getVoidType:()Ljava/lang/reflect/Type;
       4: areturn

  public java.lang.Object[] getEnumConstants(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #101                // Method getEnumConstants:(Ljava/lang/Class;)[Ljava/lang/reflect/Field;
       8: areturn

  public boolean isFinal(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #102                // Method isFinal:(Ljava/lang/Class;)Z
       8: ireturn

  public boolean isAbstract(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #103                // Method isAbstract:(Ljava/lang/Class;)Z
       8: ireturn

  public java.lang.Object erasure(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #40                 // Method erasure:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       8: areturn

  public boolean isEnum(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #104                // Method isEnum:(Ljava/lang/Class;)Z
       8: ireturn

  public boolean isPublicField(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #105                // Method isPublicField:(Ljava/lang/reflect/Field;)Z
       8: ireturn

  public boolean isFinalMethod(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #106                // Method isFinalMethod:(Ljava/lang/reflect/Method;)Z
       8: ireturn

  public boolean isPublicMethod(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #107                // Method isPublicMethod:(Ljava/lang/reflect/Method;)Z
       8: ireturn

  public boolean isStaticField(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #108                // Method isStaticField:(Ljava/lang/reflect/Field;)Z
       8: ireturn

  public boolean hasDefaultConstructor(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #109                // Method hasDefaultConstructor:(Ljava/lang/Class;)Z
       8: ireturn

  public com.sun.xml.bind.v2.runtime.Location getMethodLocation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #110                // Method getMethodLocation:(Ljava/lang/reflect/Method;)Lcom/sun/xml/bind/v2/runtime/Location;
       8: areturn

  public com.sun.xml.bind.v2.runtime.Location getFieldLocation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #111                // Method getFieldLocation:(Ljava/lang/reflect/Field;)Lcom/sun/xml/bind/v2/runtime/Location;
       8: areturn

  public com.sun.xml.bind.v2.runtime.Location getClassLocation(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #112                // Method getClassLocation:(Ljava/lang/Class;)Lcom/sun/xml/bind/v2/runtime/Location;
       8: areturn

  public java.lang.Object getPrimitive(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #113                // Method getPrimitive:(Ljava/lang/Class;)Ljava/lang/reflect/Type;
       5: areturn

  public boolean isPrimitive(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #114                // Method isPrimitive:(Ljava/lang/reflect/Type;)Z
       8: ireturn

  public boolean isParameterizedType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #115                // Method isParameterizedType:(Ljava/lang/reflect/Type;)Z
       8: ireturn

  public java.lang.Object getTypeArgument(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: iload_2
       6: invokevirtual #116                // Method getTypeArgument:(Ljava/lang/reflect/Type;I)Ljava/lang/reflect/Type;
       9: areturn

  public java.lang.Object getComponentType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #117                // Method getComponentType:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;
       8: areturn

  public boolean isArrayButNotByteArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #118                // Method isArrayButNotByteArray:(Ljava/lang/reflect/Type;)Z
       8: ireturn

  public boolean isArray(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #119                // Method isArray:(Ljava/lang/reflect/Type;)Z
       8: ireturn

  public java.lang.Object asDecl(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #120                // Method asDecl:(Ljava/lang/Class;)Ljava/lang/Class;
       5: areturn

  public java.lang.Object asDecl(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #121                // Method asDecl:(Ljava/lang/reflect/Type;)Ljava/lang/Class;
       8: areturn

  public java.lang.Object use(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #122                // Method use:(Ljava/lang/Class;)Ljava/lang/Class;
       8: areturn

  public java.lang.Object ref(java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #123                // Method ref:(Ljava/lang/Class;)Ljava/lang/Class;
       5: areturn

  public boolean isSubClassOf(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: aload_2
       6: checkcast     #7                  // class java/lang/reflect/Type
       9: invokevirtual #124                // Method isSubClassOf:(Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Z
      12: ireturn

  public boolean isStaticMethod(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #125                // Method isStaticMethod:(Ljava/lang/reflect/Method;)Z
       8: ireturn

  public java.lang.Object[] getMethodParameters(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #126                // Method getMethodParameters:(Ljava/lang/reflect/Method;)[Ljava/lang/reflect/Type;
       8: areturn

  public java.lang.Object getReturnType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #127                // Method getReturnType:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Type;
       8: areturn

  public java.lang.String getMethodName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #128                // Method getMethodName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
       8: areturn

  public java.lang.String getFieldName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #129                // Method getFieldName:(Ljava/lang/reflect/Field;)Ljava/lang/String;
       8: areturn

  public java.lang.Object getFieldType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #130                // Method getFieldType:(Ljava/lang/reflect/Field;)Ljava/lang/reflect/Type;
       8: areturn

  public java.lang.Object getDeclaringClassForMethod(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #95                 // class java/lang/reflect/Method
       5: invokevirtual #131                // Method getDeclaringClassForMethod:(Ljava/lang/reflect/Method;)Ljava/lang/Class;
       8: areturn

  public java.lang.Object getDeclaringClassForField(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #70                 // class java/lang/reflect/Field
       5: invokevirtual #132                // Method getDeclaringClassForField:(Ljava/lang/reflect/Field;)Ljava/lang/Class;
       8: areturn

  public java.util.Collection getDeclaredMethods(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #133                // Method getDeclaredMethods:(Ljava/lang/Class;)Ljava/util/Collection;
       8: areturn

  public java.lang.Object getDeclaredField(java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: aload_2
       6: invokevirtual #134                // Method getDeclaredField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
       9: areturn

  public java.util.Collection getDeclaredFields(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #135                // Method getDeclaredFields:(Ljava/lang/Class;)Ljava/util/Collection;
       8: areturn

  public java.lang.String getClassShortName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #136                // Method getClassShortName:(Ljava/lang/Class;)Ljava/lang/String;
       8: areturn

  public java.lang.String getTypeName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: invokevirtual #14                 // Method getTypeName:(Ljava/lang/reflect/Type;)Ljava/lang/String;
       8: areturn

  public java.lang.String getClassName(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #137                // Method getClassName:(Ljava/lang/Class;)Ljava/lang/String;
       8: areturn

  public java.lang.Object getBaseClass(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/reflect/Type
       5: aload_2
       6: checkcast     #9                  // class java/lang/Class
       9: invokevirtual #138                // Method getBaseClass:(Ljava/lang/reflect/Type;Ljava/lang/Class;)Ljava/lang/reflect/Type;
      12: areturn

  public java.lang.Object getSuperClass(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Class
       5: invokevirtual #139                // Method getSuperClass:(Ljava/lang/Class;)Ljava/lang/Class;
       8: areturn

  static com.sun.xml.bind.v2.model.nav.TypeVisitor access$000();
    Code:
       0: getstatic     #1                  // Field binder:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
       3: areturn

  static {};
    Code:
       0: ldc_w         #140                // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator
       3: invokevirtual #141                // Method java/lang/Class.desiredAssertionStatus:()Z
       6: ifne          13
       9: iconst_1
      10: goto          14
      13: iconst_0
      14: putstatic     #55                 // Field $assertionsDisabled:Z
      17: new           #142                // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$1
      20: dup
      21: invokespecial #143                // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$1."<init>":()V
      24: putstatic     #5                  // Field baseClassFinder:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
      27: new           #144                // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$2
      30: dup
      31: invokespecial #145                // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$2."<init>":()V
      34: putstatic     #1                  // Field binder:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
      37: new           #146                // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator$3
      40: dup
      41: invokespecial #147                // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator$3."<init>":()V
      44: putstatic     #42                 // Field eraser:Lcom/sun/xml/bind/v2/model/nav/TypeVisitor;
      47: return
}
