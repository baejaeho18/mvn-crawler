Compiled from "Navigator.java"
public interface com.sun.xml.bind.v2.model.nav.Navigator<T, C, F, M> {
  public static final com.sun.xml.bind.v2.model.nav.ReflectionNavigator REFLECTION;

  public abstract C getSuperClass(C);

  public abstract T getBaseClass(T, C);

  public abstract java.lang.String getClassName(C);

  public abstract java.lang.String getTypeName(T);

  public abstract java.lang.String getClassShortName(C);

  public abstract java.util.Collection<? extends F> getDeclaredFields(C);

  public abstract F getDeclaredField(C, java.lang.String);

  public abstract java.util.Collection<? extends M> getDeclaredMethods(C);

  public abstract C getDeclaringClassForField(F);

  public abstract C getDeclaringClassForMethod(M);

  public abstract T getFieldType(F);

  public abstract java.lang.String getFieldName(F);

  public abstract java.lang.String getMethodName(M);

  public abstract T getReturnType(M);

  public abstract T[] getMethodParameters(M);

  public abstract boolean isStaticMethod(M);

  public abstract boolean isSubClassOf(T, T);

  public abstract T ref(java.lang.Class);

  public abstract T use(C);

  public abstract C asDecl(T);

  public abstract C asDecl(java.lang.Class);

  public abstract boolean isArray(T);

  public abstract boolean isArrayButNotByteArray(T);

  public abstract T getComponentType(T);

  public abstract T getTypeArgument(T, int);

  public abstract boolean isParameterizedType(T);

  public abstract boolean isPrimitive(T);

  public abstract T getPrimitive(java.lang.Class);

  public abstract com.sun.xml.bind.v2.runtime.Location getClassLocation(C);

  public abstract com.sun.xml.bind.v2.runtime.Location getFieldLocation(F);

  public abstract com.sun.xml.bind.v2.runtime.Location getMethodLocation(M);

  public abstract boolean hasDefaultConstructor(C);

  public abstract boolean isStaticField(F);

  public abstract boolean isPublicMethod(M);

  public abstract boolean isFinalMethod(M);

  public abstract boolean isPublicField(F);

  public abstract boolean isEnum(C);

  public abstract <P> T erasure(T);

  public abstract boolean isAbstract(C);

  public abstract boolean isFinal(C);

  public abstract F[] getEnumConstants(C);

  public abstract T getVoidType();

  public abstract java.lang.String getPackageName(C);

  public abstract C findClass(java.lang.String, C);

  public abstract boolean isBridgeMethod(M);

  public abstract boolean isOverriding(M, C);

  public abstract boolean isInterface(C);

  public abstract boolean isTransient(F);

  public abstract boolean isInnerClass(C);

  public abstract boolean isSameType(T, T);

  static {};
    Code:
       0: new           #1                  // class com/sun/xml/bind/v2/model/nav/ReflectionNavigator
       3: dup
       4: invokespecial #2                  // Method com/sun/xml/bind/v2/model/nav/ReflectionNavigator."<init>":()V
       7: putstatic     #3                  // Field REFLECTION:Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;
      10: return
}
