Compiled from "ConfigParseOptions.java"
public final class com.typesafe.config.ConfigParseOptions {
  final com.typesafe.config.ConfigSyntax syntax;

  final java.lang.String originDescription;

  final boolean allowMissing;

  final com.typesafe.config.ConfigIncluder includer;

  final java.lang.ClassLoader classLoader;

  private com.typesafe.config.ConfigParseOptions(com.typesafe.config.ConfigSyntax, java.lang.String, boolean, com.typesafe.config.ConfigIncluder, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field originDescription:Ljava/lang/String;
      14: aload_0
      15: iload_3
      16: putfield      #4                  // Field allowMissing:Z
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      31: return

  public static com.typesafe.config.ConfigParseOptions defaults();
    Code:
       0: new           #7                  // class com/typesafe/config/ConfigParseOptions
       3: dup
       4: aconst_null
       5: aconst_null
       6: iconst_1
       7: aconst_null
       8: aconst_null
       9: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      12: areturn

  public com.typesafe.config.ConfigParseOptions setSyntax(com.typesafe.config.ConfigSyntax);
    Code:
       0: aload_0
       1: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: new           #7                  // class com/typesafe/config/ConfigParseOptions
      13: dup
      14: aload_1
      15: aload_0
      16: getfield      #3                  // Field originDescription:Ljava/lang/String;
      19: aload_0
      20: getfield      #4                  // Field allowMissing:Z
      23: aload_0
      24: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      27: aload_0
      28: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      31: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      34: areturn

  public com.typesafe.config.ConfigSyntax getSyntax();
    Code:
       0: aload_0
       1: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
       4: areturn

  public com.typesafe.config.ConfigParseOptions setOriginDescription(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field originDescription:Ljava/lang/String;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: aload_0
      11: getfield      #3                  // Field originDescription:Ljava/lang/String;
      14: ifnull        34
      17: aload_1
      18: ifnull        34
      21: aload_0
      22: getfield      #3                  // Field originDescription:Ljava/lang/String;
      25: aload_1
      26: invokevirtual #9                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      29: ifeq          34
      32: aload_0
      33: areturn
      34: new           #7                  // class com/typesafe/config/ConfigParseOptions
      37: dup
      38: aload_0
      39: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
      42: aload_1
      43: aload_0
      44: getfield      #4                  // Field allowMissing:Z
      47: aload_0
      48: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      51: aload_0
      52: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      55: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      58: areturn

  public java.lang.String getOriginDescription();
    Code:
       0: aload_0
       1: getfield      #3                  // Field originDescription:Ljava/lang/String;
       4: areturn

  com.typesafe.config.ConfigParseOptions withFallbackOriginDescription(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #3                  // Field originDescription:Ljava/lang/String;
       4: ifnonnull     13
       7: aload_0
       8: aload_1
       9: invokevirtual #10                 // Method setOriginDescription:(Ljava/lang/String;)Lcom/typesafe/config/ConfigParseOptions;
      12: areturn
      13: aload_0
      14: areturn

  public com.typesafe.config.ConfigParseOptions setAllowMissing(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowMissing:Z
       4: iload_1
       5: if_icmpne     10
       8: aload_0
       9: areturn
      10: new           #7                  // class com/typesafe/config/ConfigParseOptions
      13: dup
      14: aload_0
      15: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
      18: aload_0
      19: getfield      #3                  // Field originDescription:Ljava/lang/String;
      22: iload_1
      23: aload_0
      24: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      27: aload_0
      28: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      31: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      34: areturn

  public boolean getAllowMissing();
    Code:
       0: aload_0
       1: getfield      #4                  // Field allowMissing:Z
       4: ireturn

  public com.typesafe.config.ConfigParseOptions setIncluder(com.typesafe.config.ConfigIncluder);
    Code:
       0: aload_0
       1: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: new           #7                  // class com/typesafe/config/ConfigParseOptions
      13: dup
      14: aload_0
      15: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
      18: aload_0
      19: getfield      #3                  // Field originDescription:Ljava/lang/String;
      22: aload_0
      23: getfield      #4                  // Field allowMissing:Z
      26: aload_1
      27: aload_0
      28: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      31: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      34: areturn

  public com.typesafe.config.ConfigParseOptions prependIncluder(com.typesafe.config.ConfigIncluder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #12                 // String null includer passed to prependIncluder
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      18: aload_1
      19: if_acmpne     24
      22: aload_0
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      28: ifnull        46
      31: aload_0
      32: aload_1
      33: aload_0
      34: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      37: invokeinterface #14,  2           // InterfaceMethod com/typesafe/config/ConfigIncluder.withFallback:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigIncluder;
      42: invokevirtual #15                 // Method setIncluder:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigParseOptions;
      45: areturn
      46: aload_0
      47: aload_1
      48: invokevirtual #15                 // Method setIncluder:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigParseOptions;
      51: areturn

  public com.typesafe.config.ConfigParseOptions appendIncluder(com.typesafe.config.ConfigIncluder);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #11                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #16                 // String null includer passed to appendIncluder
      10: invokespecial #13                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      18: aload_1
      19: if_acmpne     24
      22: aload_0
      23: areturn
      24: aload_0
      25: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      28: ifnull        46
      31: aload_0
      32: aload_0
      33: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      36: aload_1
      37: invokeinterface #14,  2           // InterfaceMethod com/typesafe/config/ConfigIncluder.withFallback:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigIncluder;
      42: invokevirtual #15                 // Method setIncluder:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigParseOptions;
      45: areturn
      46: aload_0
      47: aload_1
      48: invokevirtual #15                 // Method setIncluder:(Lcom/typesafe/config/ConfigIncluder;)Lcom/typesafe/config/ConfigParseOptions;
      51: areturn

  public com.typesafe.config.ConfigIncluder getIncluder();
    Code:
       0: aload_0
       1: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
       4: areturn

  public com.typesafe.config.ConfigParseOptions setClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       4: aload_1
       5: if_acmpne     10
       8: aload_0
       9: areturn
      10: new           #7                  // class com/typesafe/config/ConfigParseOptions
      13: dup
      14: aload_0
      15: getfield      #2                  // Field syntax:Lcom/typesafe/config/ConfigSyntax;
      18: aload_0
      19: getfield      #3                  // Field originDescription:Ljava/lang/String;
      22: aload_0
      23: getfield      #4                  // Field allowMissing:Z
      26: aload_0
      27: getfield      #5                  // Field includer:Lcom/typesafe/config/ConfigIncluder;
      30: aload_1
      31: invokespecial #8                  // Method "<init>":(Lcom/typesafe/config/ConfigSyntax;Ljava/lang/String;ZLcom/typesafe/config/ConfigIncluder;Ljava/lang/ClassLoader;)V
      34: areturn

  public java.lang.ClassLoader getClassLoader();
    Code:
       0: aload_0
       1: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       4: ifnonnull     14
       7: invokestatic  #17                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      10: invokevirtual #18                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
      13: areturn
      14: aload_0
      15: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      18: areturn
}
