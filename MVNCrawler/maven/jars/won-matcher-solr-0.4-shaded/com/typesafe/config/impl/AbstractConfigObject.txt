Compiled from "AbstractConfigObject.java"
abstract class com.typesafe.config.impl.AbstractConfigObject extends com.typesafe.config.impl.AbstractConfigValue implements com.typesafe.config.ConfigObject,com.typesafe.config.impl.Container {
  private final com.typesafe.config.impl.SimpleConfig config;

  protected com.typesafe.config.impl.AbstractConfigObject(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method com/typesafe/config/impl/AbstractConfigValue."<init>":(Lcom/typesafe/config/ConfigOrigin;)V
       5: aload_0
       6: new           #2                  // class com/typesafe/config/impl/SimpleConfig
       9: dup
      10: aload_0
      11: invokespecial #3                  // Method com/typesafe/config/impl/SimpleConfig."<init>":(Lcom/typesafe/config/impl/AbstractConfigObject;)V
      14: putfield      #4                  // Field config:Lcom/typesafe/config/impl/SimpleConfig;
      17: return

  public com.typesafe.config.impl.SimpleConfig toConfig();
    Code:
       0: aload_0
       1: getfield      #4                  // Field config:Lcom/typesafe/config/impl/SimpleConfig;
       4: areturn

  public com.typesafe.config.impl.AbstractConfigObject toFallbackValue();
    Code:
       0: aload_0
       1: areturn

  public abstract com.typesafe.config.impl.AbstractConfigObject withOnlyKey(java.lang.String);

  public abstract com.typesafe.config.impl.AbstractConfigObject withoutKey(java.lang.String);

  public abstract com.typesafe.config.impl.AbstractConfigObject withValue(java.lang.String, com.typesafe.config.ConfigValue);

  protected abstract com.typesafe.config.impl.AbstractConfigObject withOnlyPathOrNull(com.typesafe.config.impl.Path);

  abstract com.typesafe.config.impl.AbstractConfigObject withOnlyPath(com.typesafe.config.impl.Path);

  abstract com.typesafe.config.impl.AbstractConfigObject withoutPath(com.typesafe.config.impl.Path);

  abstract com.typesafe.config.impl.AbstractConfigObject withValue(com.typesafe.config.impl.Path, com.typesafe.config.ConfigValue);

  protected final com.typesafe.config.impl.AbstractConfigValue peekAssumingResolved(java.lang.String, com.typesafe.config.impl.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #5                  // Method attemptPeekWithPartialResolve:(Ljava/lang/String;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: areturn
       6: astore_3
       7: aload_2
       8: aload_3
       9: invokestatic  #7                  // Method com/typesafe/config/impl/ConfigImpl.improveNotResolved:(Lcom/typesafe/config/impl/Path;Lcom/typesafe/config/ConfigException$NotResolved;)Lcom/typesafe/config/ConfigException$NotResolved;
      12: athrow
    Exception table:
       from    to  target type
           0     5     6   Class com/typesafe/config/ConfigException$NotResolved

  abstract com.typesafe.config.impl.AbstractConfigValue attemptPeekWithPartialResolve(java.lang.String);

  protected com.typesafe.config.impl.AbstractConfigValue peekPath(com.typesafe.config.impl.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #8                  // Method peekPath:(Lcom/typesafe/config/impl/AbstractConfigObject;Lcom/typesafe/config/impl/Path;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: areturn

  private static com.typesafe.config.impl.AbstractConfigValue peekPath(com.typesafe.config.impl.AbstractConfigObject, com.typesafe.config.impl.Path);
    Code:
       0: aload_1
       1: invokevirtual #9                  // Method com/typesafe/config/impl/Path.remainder:()Lcom/typesafe/config/impl/Path;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokevirtual #10                 // Method com/typesafe/config/impl/Path.first:()Ljava/lang/String;
      10: invokevirtual #5                  // Method attemptPeekWithPartialResolve:(Ljava/lang/String;)Lcom/typesafe/config/impl/AbstractConfigValue;
      13: astore_3
      14: aload_2
      15: ifnonnull     20
      18: aload_3
      19: areturn
      20: aload_3
      21: instanceof    #11                 // class com/typesafe/config/impl/AbstractConfigObject
      24: ifeq          36
      27: aload_3
      28: checkcast     #11                 // class com/typesafe/config/impl/AbstractConfigObject
      31: aload_2
      32: invokestatic  #8                  // Method peekPath:(Lcom/typesafe/config/impl/AbstractConfigObject;Lcom/typesafe/config/impl/Path;)Lcom/typesafe/config/impl/AbstractConfigValue;
      35: areturn
      36: aconst_null
      37: areturn
      38: astore_2
      39: aload_1
      40: aload_2
      41: invokestatic  #7                  // Method com/typesafe/config/impl/ConfigImpl.improveNotResolved:(Lcom/typesafe/config/impl/Path;Lcom/typesafe/config/ConfigException$NotResolved;)Lcom/typesafe/config/ConfigException$NotResolved;
      44: athrow
    Exception table:
       from    to  target type
           0    19    38   Class com/typesafe/config/ConfigException$NotResolved
          20    35    38   Class com/typesafe/config/ConfigException$NotResolved
          36    37    38   Class com/typesafe/config/ConfigException$NotResolved

  public com.typesafe.config.ConfigValueType valueType();
    Code:
       0: getstatic     #12                 // Field com/typesafe/config/ConfigValueType.OBJECT:Lcom/typesafe/config/ConfigValueType;
       3: areturn

  protected abstract com.typesafe.config.impl.AbstractConfigObject newCopy(com.typesafe.config.impl.ResolveStatus, com.typesafe.config.ConfigOrigin);

  protected com.typesafe.config.impl.AbstractConfigObject newCopy(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #13                 // Method resolveStatus:()Lcom/typesafe/config/impl/ResolveStatus;
       5: aload_1
       6: invokevirtual #14                 // Method newCopy:(Lcom/typesafe/config/impl/ResolveStatus;Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigObject;
       9: areturn

  protected com.typesafe.config.impl.AbstractConfigObject constructDelayedMerge(com.typesafe.config.ConfigOrigin, java.util.List<com.typesafe.config.impl.AbstractConfigValue>);
    Code:
       0: new           #15                 // class com/typesafe/config/impl/ConfigDelayedMergeObject
       3: dup
       4: aload_1
       5: aload_2
       6: invokespecial #16                 // Method com/typesafe/config/impl/ConfigDelayedMergeObject."<init>":(Lcom/typesafe/config/ConfigOrigin;Ljava/util/List;)V
       9: areturn

  protected abstract com.typesafe.config.impl.AbstractConfigObject mergedWithObject(com.typesafe.config.impl.AbstractConfigObject);

  public com.typesafe.config.impl.AbstractConfigObject withFallback(com.typesafe.config.ConfigMergeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method com/typesafe/config/impl/AbstractConfigValue.withFallback:(Lcom/typesafe/config/ConfigMergeable;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: checkcast     #11                 // class com/typesafe/config/impl/AbstractConfigObject
       8: areturn

  static com.typesafe.config.ConfigOrigin mergeOrigins(java.util.Collection<? extends com.typesafe.config.impl.AbstractConfigValue>);
    Code:
       0: aload_0
       1: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ifeq          19
       9: new           #19                 // class com/typesafe/config/ConfigException$BugOrBroken
      12: dup
      13: ldc           #20                 // String can\'t merge origins on empty list
      15: invokespecial #21                 // Method com/typesafe/config/ConfigException$BugOrBroken."<init>":(Ljava/lang/String;)V
      18: athrow
      19: new           #22                 // class java/util/ArrayList
      22: dup
      23: invokespecial #23                 // Method java/util/ArrayList."<init>":()V
      26: astore_1
      27: aconst_null
      28: astore_2
      29: iconst_0
      30: istore_3
      31: aload_0
      32: invokeinterface #24,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      37: astore        4
      39: aload         4
      41: invokeinterface #25,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          127
      49: aload         4
      51: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #27                 // class com/typesafe/config/impl/AbstractConfigValue
      59: astore        5
      61: aload_2
      62: ifnonnull     71
      65: aload         5
      67: invokevirtual #28                 // Method com/typesafe/config/impl/AbstractConfigValue.origin:()Lcom/typesafe/config/impl/SimpleConfigOrigin;
      70: astore_2
      71: aload         5
      73: instanceof    #11                 // class com/typesafe/config/impl/AbstractConfigObject
      76: ifeq          109
      79: aload         5
      81: checkcast     #11                 // class com/typesafe/config/impl/AbstractConfigObject
      84: invokevirtual #13                 // Method resolveStatus:()Lcom/typesafe/config/impl/ResolveStatus;
      87: getstatic     #29                 // Field com/typesafe/config/impl/ResolveStatus.RESOLVED:Lcom/typesafe/config/impl/ResolveStatus;
      90: if_acmpne     109
      93: aload         5
      95: checkcast     #30                 // class com/typesafe/config/ConfigObject
      98: invokeinterface #31,  1           // InterfaceMethod com/typesafe/config/ConfigObject.isEmpty:()Z
     103: ifeq          109
     106: goto          124
     109: aload_1
     110: aload         5
     112: invokevirtual #28                 // Method com/typesafe/config/impl/AbstractConfigValue.origin:()Lcom/typesafe/config/impl/SimpleConfigOrigin;
     115: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     120: pop
     121: iinc          3, 1
     124: goto          39
     127: iload_3
     128: ifne          139
     131: aload_1
     132: aload_2
     133: invokeinterface #32,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     138: pop
     139: aload_1
     140: invokestatic  #33                 // Method com/typesafe/config/impl/SimpleConfigOrigin.mergeOrigins:(Ljava/util/Collection;)Lcom/typesafe/config/ConfigOrigin;
     143: areturn

  static com.typesafe.config.ConfigOrigin mergeOrigins(com.typesafe.config.impl.AbstractConfigObject...);
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       4: invokestatic  #35                 // Method mergeOrigins:(Ljava/util/Collection;)Lcom/typesafe/config/ConfigOrigin;
       7: areturn

  abstract com.typesafe.config.impl.ResolveResult<? extends com.typesafe.config.impl.AbstractConfigObject> resolveSubstitutions(com.typesafe.config.impl.ResolveContext, com.typesafe.config.impl.ResolveSource) throws com.typesafe.config.impl.AbstractConfigValue$NotPossibleToResolve;

  abstract com.typesafe.config.impl.AbstractConfigObject relativized(com.typesafe.config.impl.Path);

  public abstract com.typesafe.config.impl.AbstractConfigValue get(java.lang.Object);

  protected abstract void render(java.lang.StringBuilder, int, boolean, com.typesafe.config.ConfigRenderOptions);

  private static java.lang.UnsupportedOperationException weAreImmutable(java.lang.String);
    Code:
       0: new           #36                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #37                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #39                 // String ConfigObject is immutable, you can\'t call Map.
      13: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_0
      17: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #42                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      26: areturn

  public void clear();
    Code:
       0: ldc           #43                 // String clear
       2: invokestatic  #44                 // Method weAreImmutable:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  public com.typesafe.config.ConfigValue put(java.lang.String, com.typesafe.config.ConfigValue);
    Code:
       0: ldc           #45                 // String put
       2: invokestatic  #44                 // Method weAreImmutable:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  public void putAll(java.util.Map<? extends java.lang.String, ? extends com.typesafe.config.ConfigValue>);
    Code:
       0: ldc           #46                 // String putAll
       2: invokestatic  #44                 // Method weAreImmutable:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  public com.typesafe.config.ConfigValue remove(java.lang.Object);
    Code:
       0: ldc           #47                 // String remove
       2: invokestatic  #44                 // Method weAreImmutable:(Ljava/lang/String;)Ljava/lang/UnsupportedOperationException;
       5: athrow

  public com.typesafe.config.impl.AbstractConfigObject withOrigin(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method com/typesafe/config/impl/AbstractConfigValue.withOrigin:(Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: checkcast     #11                 // class com/typesafe/config/impl/AbstractConfigObject
       8: areturn

  public com.typesafe.config.impl.AbstractConfigValue withFallback(com.typesafe.config.ConfigMergeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method withFallback:(Lcom/typesafe/config/ConfigMergeable;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.impl.AbstractConfigValue withOrigin(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method withOrigin:(Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  protected com.typesafe.config.impl.AbstractConfigValue mergedWithObject(com.typesafe.config.impl.AbstractConfigObject);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #51                 // Method mergedWithObject:(Lcom/typesafe/config/impl/AbstractConfigObject;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  protected com.typesafe.config.impl.AbstractConfigValue constructDelayedMerge(com.typesafe.config.ConfigOrigin, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #52                 // Method constructDelayedMerge:(Lcom/typesafe/config/ConfigOrigin;Ljava/util/List;)Lcom/typesafe/config/impl/AbstractConfigObject;
       6: areturn

  protected com.typesafe.config.impl.AbstractConfigValue newCopy(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method newCopy:(Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.impl.AbstractConfigValue toFallbackValue();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method toFallbackValue:()Lcom/typesafe/config/impl/AbstractConfigObject;
       4: areturn

  com.typesafe.config.impl.AbstractConfigValue relativized(com.typesafe.config.impl.Path);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #55                 // Method relativized:(Lcom/typesafe/config/impl/Path;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigValue withOrigin(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method withOrigin:(Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigValue withFallback(com.typesafe.config.ConfigMergeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method withFallback:(Lcom/typesafe/config/ConfigMergeable;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigMergeable withFallback(com.typesafe.config.ConfigMergeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method withFallback:(Lcom/typesafe/config/ConfigMergeable;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigValue toFallbackValue();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method toFallbackValue:()Lcom/typesafe/config/impl/AbstractConfigObject;
       4: areturn

  public com.typesafe.config.ConfigObject withOrigin(com.typesafe.config.ConfigOrigin);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #50                 // Method withOrigin:(Lcom/typesafe/config/ConfigOrigin;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigObject withValue(java.lang.String, com.typesafe.config.ConfigValue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #56                 // Method withValue:(Ljava/lang/String;Lcom/typesafe/config/ConfigValue;)Lcom/typesafe/config/impl/AbstractConfigObject;
       6: areturn

  public com.typesafe.config.ConfigObject withoutKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #57                 // Method withoutKey:(Ljava/lang/String;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigObject withOnlyKey(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #58                 // Method withOnlyKey:(Ljava/lang/String;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.ConfigValue get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method get:(Ljava/lang/Object;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: areturn

  public com.typesafe.config.ConfigObject withFallback(com.typesafe.config.ConfigMergeable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #49                 // Method withFallback:(Lcom/typesafe/config/ConfigMergeable;)Lcom/typesafe/config/impl/AbstractConfigObject;
       5: areturn

  public com.typesafe.config.Config toConfig();
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method toConfig:()Lcom/typesafe/config/impl/SimpleConfig;
       4: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #61                 // Method remove:(Ljava/lang/Object;)Lcom/typesafe/config/ConfigValue;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #62                 // class java/lang/String
       5: aload_2
       6: checkcast     #63                 // class com/typesafe/config/ConfigValue
       9: invokevirtual #64                 // Method put:(Ljava/lang/String;Lcom/typesafe/config/ConfigValue;)Lcom/typesafe/config/ConfigValue;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #59                 // Method get:(Ljava/lang/Object;)Lcom/typesafe/config/impl/AbstractConfigValue;
       5: areturn
}
