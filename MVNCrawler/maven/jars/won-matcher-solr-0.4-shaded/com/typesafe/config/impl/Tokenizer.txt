Compiled from "Tokenizer.java"
final class com.typesafe.config.impl.Tokenizer {
  com.typesafe.config.impl.Tokenizer();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.String asString(int);
    Code:
       0: iload_0
       1: bipush        10
       3: if_icmpne     9
       6: ldc           #3                  // String newline
       8: areturn
       9: iload_0
      10: bipush        9
      12: if_icmpne     18
      15: ldc           #4                  // String tab
      17: areturn
      18: iload_0
      19: iconst_m1
      20: if_icmpne     26
      23: ldc           #5                  // String end of file
      25: areturn
      26: iload_0
      27: invokestatic  #6                  // Method java/lang/Character.isISOControl:(I)Z
      30: ifeq          50
      33: ldc           #7                  // String control character 0x%x
      35: iconst_1
      36: anewarray     #8                  // class java/lang/Object
      39: dup
      40: iconst_0
      41: iload_0
      42: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      45: aastore
      46: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      49: areturn
      50: ldc           #11                 // String %c
      52: iconst_1
      53: anewarray     #8                  // class java/lang/Object
      56: dup
      57: iconst_0
      58: iload_0
      59: invokestatic  #9                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: aastore
      63: invokestatic  #10                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      66: areturn

  static java.util.Iterator<com.typesafe.config.impl.Token> tokenize(com.typesafe.config.ConfigOrigin, java.io.Reader, com.typesafe.config.ConfigSyntax);
    Code:
       0: new           #12                 // class com/typesafe/config/impl/Tokenizer$TokenIterator
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: getstatic     #13                 // Field com/typesafe/config/ConfigSyntax.JSON:Lcom/typesafe/config/ConfigSyntax;
      10: if_acmpeq     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: invokespecial #14                 // Method com/typesafe/config/impl/Tokenizer$TokenIterator."<init>":(Lcom/typesafe/config/ConfigOrigin;Ljava/io/Reader;Z)V
      21: areturn

  static java.lang.String render(java.util.Iterator<com.typesafe.config.impl.Token>);
    Code:
       0: new           #15                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #16                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          37
      17: aload_1
      18: aload_0
      19: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      24: checkcast     #19                 // class com/typesafe/config/impl/Token
      27: invokevirtual #20                 // Method com/typesafe/config/impl/Token.tokenText:()Ljava/lang/String;
      30: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: pop
      34: goto          8
      37: aload_1
      38: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: areturn

  static java.lang.String access$200(int);
    Code:
       0: iload_0
       1: invokestatic  #1                  // Method asString:(I)Ljava/lang/String;
       4: areturn
}
