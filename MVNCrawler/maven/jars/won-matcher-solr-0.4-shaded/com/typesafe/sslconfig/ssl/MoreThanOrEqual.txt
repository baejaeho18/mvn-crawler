Compiled from "Algorithms.scala"
public class com.typesafe.sslconfig.ssl.MoreThanOrEqual extends com.typesafe.sslconfig.ssl.ExpressionSymbol implements scala.Product,scala.Serializable {
  private final int x;

  public static scala.Option<java.lang.Object> unapply(com.typesafe.sslconfig.ssl.MoreThanOrEqual);
    Code:
       0: getstatic     #20                 // Field com/typesafe/sslconfig/ssl/MoreThanOrEqual$.MODULE$:Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual$;
       3: aload_0
       4: invokevirtual #22                 // Method com/typesafe/sslconfig/ssl/MoreThanOrEqual$.unapply:(Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual;)Lscala/Option;
       7: areturn

  public static com.typesafe.sslconfig.ssl.MoreThanOrEqual apply(int);
    Code:
       0: getstatic     #20                 // Field com/typesafe/sslconfig/ssl/MoreThanOrEqual$.MODULE$:Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual$;
       3: iload_0
       4: invokevirtual #26                 // Method com/typesafe/sslconfig/ssl/MoreThanOrEqual$.apply:(I)Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual;
       7: areturn

  public static <A> scala.Function1<java.lang.Object, A> andThen(scala.Function1<com.typesafe.sslconfig.ssl.MoreThanOrEqual, A>);
    Code:
       0: getstatic     #20                 // Field com/typesafe/sslconfig/ssl/MoreThanOrEqual$.MODULE$:Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual$;
       3: aload_0
       4: invokevirtual #30                 // Method com/typesafe/sslconfig/ssl/MoreThanOrEqual$.andThen:(Lscala/Function1;)Lscala/Function1;
       7: areturn

  public static <A> scala.Function1<A, com.typesafe.sslconfig.ssl.MoreThanOrEqual> compose(scala.Function1<A, java.lang.Object>);
    Code:
       0: getstatic     #20                 // Field com/typesafe/sslconfig/ssl/MoreThanOrEqual$.MODULE$:Lcom/typesafe/sslconfig/ssl/MoreThanOrEqual$;
       3: aload_0
       4: invokevirtual #33                 // Method com/typesafe/sslconfig/ssl/MoreThanOrEqual$.compose:(Lscala/Function1;)Lscala/Function1;
       7: areturn

  public int x();
    Code:
       0: aload_0
       1: getfield      #38                 // Field x:I
       4: ireturn

  public boolean matches(int);
    Code:
       0: iload_1
       1: aload_0
       2: invokevirtual #44                 // Method x:()I
       5: if_icmplt     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.String toString();
    Code:
       0: new           #49                 // class scala/collection/mutable/StringBuilder
       3: dup
       4: invokespecial #53                 // Method scala/collection/mutable/StringBuilder."<init>":()V
       7: ldc           #55                 // String  keySize >=
       9: invokevirtual #59                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      12: aload_0
      13: invokevirtual #44                 // Method x:()I
      16: invokestatic  #65                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      19: invokevirtual #59                 // Method scala/collection/mutable/StringBuilder.append:(Ljava/lang/Object;)Lscala/collection/mutable/StringBuilder;
      22: invokevirtual #67                 // Method scala/collection/mutable/StringBuilder.toString:()Ljava/lang/String;
      25: areturn

  public com.typesafe.sslconfig.ssl.MoreThanOrEqual copy(int);
    Code:
       0: new           #2                  // class com/typesafe/sslconfig/ssl/MoreThanOrEqual
       3: dup
       4: iload_1
       5: invokespecial #71                 // Method "<init>":(I)V
       8: areturn

  public int copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #44                 // Method x:()I
       4: ireturn

  public java.lang.String productPrefix();
    Code:
       0: ldc           #75                 // String MoreThanOrEqual
       2: areturn

  public int productArity();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object productElement(int);
    Code:
       0: iload_1
       1: istore_2
       2: iload_2
       3: tableswitch   { // 0 to 0
                     0: 35
               default: 20
          }
      20: new           #80                 // class java/lang/IndexOutOfBoundsException
      23: dup
      24: iload_1
      25: invokestatic  #65                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #83                 // Method java/lang/Object.toString:()Ljava/lang/String;
      31: invokespecial #86                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: invokevirtual #44                 // Method x:()I
      39: invokestatic  #65                 // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      42: areturn

  public scala.collection.Iterator<java.lang.Object> productIterator();
    Code:
       0: getstatic     #94                 // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       3: aload_0
       4: invokevirtual #98                 // Method scala/runtime/ScalaRunTime$.typedProductIterator:(Lscala/Product;)Lscala/collection/Iterator;
       7: areturn

  public boolean canEqual(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #2                  // class com/typesafe/sslconfig/ssl/MoreThanOrEqual
       4: ireturn

  public int hashCode();
    Code:
       0: ldc           #103                // int -889275714
       2: istore_1
       3: iload_1
       4: aload_0
       5: invokevirtual #44                 // Method x:()I
       8: invokestatic  #109                // Method scala/runtime/Statics.mix:(II)I
      11: istore_1
      12: iload_1
      13: iconst_1
      14: invokestatic  #112                // Method scala/runtime/Statics.finalizeHash:(II)I
      17: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     60
       5: aload_1
       6: astore_2
       7: aload_2
       8: instanceof    #2                  // class com/typesafe/sslconfig/ssl/MoreThanOrEqual
      11: ifeq          19
      14: iconst_1
      15: istore_3
      16: goto          21
      19: iconst_0
      20: istore_3
      21: iload_3
      22: ifeq          64
      25: aload_1
      26: checkcast     #2                  // class com/typesafe/sslconfig/ssl/MoreThanOrEqual
      29: astore        4
      31: aload_0
      32: invokevirtual #44                 // Method x:()I
      35: aload         4
      37: invokevirtual #44                 // Method x:()I
      40: if_icmpne     56
      43: aload         4
      45: aload_0
      46: invokevirtual #115                // Method canEqual:(Ljava/lang/Object;)Z
      49: ifeq          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ifeq          64
      60: iconst_1
      61: goto          65
      64: iconst_0
      65: ireturn

  public com.typesafe.sslconfig.ssl.MoreThanOrEqual(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #38                 // Field x:I
       5: aload_0
       6: invokespecial #116                // Method com/typesafe/sslconfig/ssl/ExpressionSymbol."<init>":()V
       9: aload_0
      10: invokestatic  #122                // Method scala/Product$class.$init$:(Lscala/Product;)V
      13: return
}
