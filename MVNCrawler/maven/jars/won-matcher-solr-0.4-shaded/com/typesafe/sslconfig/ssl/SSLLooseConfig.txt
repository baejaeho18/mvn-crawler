Compiled from "Config.scala"
public final class com.typesafe.sslconfig.ssl.SSLLooseConfig {
  private final boolean acceptAnyCertificate;

  private final scala.Option<java.lang.Object> allowLegacyHelloMessages;

  private final scala.Option<java.lang.Object> allowUnsafeRenegotiation;

  private final boolean allowWeakCiphers;

  private final boolean allowWeakProtocols;

  private final boolean disableHostnameVerification;

  private final boolean disableSNI;

  public static boolean $lessinit$greater$default$7();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #18                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$7:()Z
       6: ireturn

  public static boolean $lessinit$greater$default$6();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #21                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$6:()Z
       6: ireturn

  public static boolean $lessinit$greater$default$5();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #24                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$5:()Z
       6: ireturn

  public static boolean $lessinit$greater$default$4();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #27                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$4:()Z
       6: ireturn

  public static scala.Option<java.lang.Object> $lessinit$greater$default$3();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #31                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$3:()Lscala/Option;
       6: areturn

  public static scala.Option<java.lang.Object> $lessinit$greater$default$2();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #34                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$2:()Lscala/Option;
       6: areturn

  public static boolean $lessinit$greater$default$1();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #37                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.$lessinit$greater$default$1:()Z
       6: ireturn

  public static com.typesafe.sslconfig.ssl.SSLLooseConfig getInstance();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #41                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.getInstance:()Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
       6: areturn

  public static com.typesafe.sslconfig.ssl.SSLLooseConfig apply();
    Code:
       0: getstatic     #16                 // Field com/typesafe/sslconfig/ssl/SSLLooseConfig$.MODULE$:Lcom/typesafe/sslconfig/ssl/SSLLooseConfig$;
       3: invokevirtual #44                 // Method com/typesafe/sslconfig/ssl/SSLLooseConfig$.apply:()Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
       6: areturn

  public boolean acceptAnyCertificate();
    Code:
       0: aload_0
       1: getfield      #56                 // Field acceptAnyCertificate:Z
       4: ireturn

  public scala.Option<java.lang.Object> allowLegacyHelloMessages();
    Code:
       0: aload_0
       1: getfield      #60                 // Field allowLegacyHelloMessages:Lscala/Option;
       4: areturn

  public scala.Option<java.lang.Object> allowUnsafeRenegotiation();
    Code:
       0: aload_0
       1: getfield      #62                 // Field allowUnsafeRenegotiation:Lscala/Option;
       4: areturn

  public boolean allowWeakCiphers();
    Code:
       0: aload_0
       1: getfield      #64                 // Field allowWeakCiphers:Z
       4: ireturn

  public boolean allowWeakProtocols();
    Code:
       0: aload_0
       1: getfield      #66                 // Field allowWeakProtocols:Z
       4: ireturn

  public boolean disableHostnameVerification();
    Code:
       0: aload_0
       1: getfield      #68                 // Field disableHostnameVerification:Z
       4: ireturn

  public boolean disableSNI();
    Code:
       0: aload_0
       1: getfield      #70                 // Field disableSNI:Z
       4: ireturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withAcceptAnyCertificate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: aload_0
       3: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
       6: aload_0
       7: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      10: aload_0
      11: invokespecial #81                 // Method copy$default$4:()Z
      14: aload_0
      15: invokespecial #84                 // Method copy$default$5:()Z
      18: aload_0
      19: invokespecial #87                 // Method copy$default$6:()Z
      22: aload_0
      23: invokespecial #90                 // Method copy$default$7:()Z
      26: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      29: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withAllowLegacyHelloMessages(scala.Option<java.lang.Object>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #81                 // Method copy$default$4:()Z
      17: istore        5
      19: aload_0
      20: invokespecial #84                 // Method copy$default$5:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #87                 // Method copy$default$6:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #90                 // Method copy$default$7:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload_2
      40: aload         4
      42: iload         5
      44: iload         6
      46: iload         7
      48: iload         8
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withAllowUnsafeRenegotiation(scala.Option<java.lang.Object>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #81                 // Method copy$default$4:()Z
      17: istore        5
      19: aload_0
      20: invokespecial #84                 // Method copy$default$5:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #87                 // Method copy$default$6:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #90                 // Method copy$default$7:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload         4
      41: aload_2
      42: iload         5
      44: iload         6
      46: iload         7
      48: iload         8
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withAllowWeakCiphers(boolean);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      17: astore        5
      19: aload_0
      20: invokespecial #84                 // Method copy$default$5:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #87                 // Method copy$default$6:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #90                 // Method copy$default$7:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload         4
      41: aload         5
      43: iload_2
      44: iload         6
      46: iload         7
      48: iload         8
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withAllowWeakProtocols(boolean);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      17: astore        5
      19: aload_0
      20: invokespecial #81                 // Method copy$default$4:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #87                 // Method copy$default$6:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #90                 // Method copy$default$7:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload         4
      41: aload         5
      43: iload         6
      45: iload_2
      46: iload         7
      48: iload         8
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withDisableHostnameVerification(boolean);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      17: astore        5
      19: aload_0
      20: invokespecial #81                 // Method copy$default$4:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #84                 // Method copy$default$5:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #90                 // Method copy$default$7:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload         4
      41: aload         5
      43: iload         6
      45: iload         7
      47: iload_2
      48: iload         8
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig withDisableSNI(boolean);
    Code:
       0: iload_1
       1: istore_2
       2: aload_0
       3: invokespecial #100                // Method copy$default$1:()Z
       6: istore_3
       7: aload_0
       8: invokespecial #75                 // Method copy$default$2:()Lscala/Option;
      11: astore        4
      13: aload_0
      14: invokespecial #78                 // Method copy$default$3:()Lscala/Option;
      17: astore        5
      19: aload_0
      20: invokespecial #81                 // Method copy$default$4:()Z
      23: istore        6
      25: aload_0
      26: invokespecial #84                 // Method copy$default$5:()Z
      29: istore        7
      31: aload_0
      32: invokespecial #87                 // Method copy$default$6:()Z
      35: istore        8
      37: aload_0
      38: iload_3
      39: aload         4
      41: aload         5
      43: iload         6
      45: iload         7
      47: iload         8
      49: iload_2
      50: invokespecial #94                 // Method copy:(ZLscala/Option;Lscala/Option;ZZZZ)Lcom/typesafe/sslconfig/ssl/SSLLooseConfig;
      53: areturn

  private com.typesafe.sslconfig.ssl.SSLLooseConfig copy(boolean, scala.Option<java.lang.Object>, scala.Option<java.lang.Object>, boolean, boolean, boolean, boolean);
    Code:
       0: new           #2                  // class com/typesafe/sslconfig/ssl/SSLLooseConfig
       3: dup
       4: iload_1
       5: aload_2
       6: aload_3
       7: iload         4
       9: iload         5
      11: iload         6
      13: iload         7
      15: invokespecial #151                // Method "<init>":(ZLscala/Option;Lscala/Option;ZZZZ)V
      18: areturn

  private boolean copy$default$1();
    Code:
       0: aload_0
       1: invokevirtual #153                // Method acceptAnyCertificate:()Z
       4: ireturn

  private scala.Option<java.lang.Object> copy$default$2();
    Code:
       0: aload_0
       1: invokevirtual #155                // Method allowLegacyHelloMessages:()Lscala/Option;
       4: areturn

  private scala.Option<java.lang.Object> copy$default$3();
    Code:
       0: aload_0
       1: invokevirtual #157                // Method allowUnsafeRenegotiation:()Lscala/Option;
       4: areturn

  private boolean copy$default$4();
    Code:
       0: aload_0
       1: invokevirtual #159                // Method allowWeakCiphers:()Z
       4: ireturn

  private boolean copy$default$5();
    Code:
       0: aload_0
       1: invokevirtual #161                // Method allowWeakProtocols:()Z
       4: ireturn

  private boolean copy$default$6();
    Code:
       0: aload_0
       1: invokevirtual #163                // Method disableHostnameVerification:()Z
       4: ireturn

  private boolean copy$default$7();
    Code:
       0: aload_0
       1: invokevirtual #165                // Method disableSNI:()Z
       4: ireturn

  public java.lang.String toString();
    Code:
       0: new           #169                // class scala/StringContext
       3: dup
       4: getstatic     #174                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       7: bipush        8
       9: anewarray     #176                // class java/lang/String
      12: dup
      13: iconst_0
      14: ldc           #178                // String SSLLooseConfig(
      16: aastore
      17: dup
      18: iconst_1
      19: ldc           #180                // String ,
      21: aastore
      22: dup
      23: iconst_2
      24: ldc           #180                // String ,
      26: aastore
      27: dup
      28: iconst_3
      29: ldc           #180                // String ,
      31: aastore
      32: dup
      33: iconst_4
      34: ldc           #180                // String ,
      36: aastore
      37: dup
      38: iconst_5
      39: ldc           #180                // String ,
      41: aastore
      42: dup
      43: bipush        6
      45: ldc           #180                // String ,
      47: aastore
      48: dup
      49: bipush        7
      51: ldc           #182                // String )
      53: aastore
      54: checkcast     #184                // class "[Ljava/lang/Object;"
      57: invokevirtual #188                // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      60: invokespecial #191                // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      63: getstatic     #174                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      66: bipush        7
      68: anewarray     #4                  // class java/lang/Object
      71: dup
      72: iconst_0
      73: aload_0
      74: invokevirtual #153                // Method acceptAnyCertificate:()Z
      77: invokestatic  #197                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      80: aastore
      81: dup
      82: iconst_1
      83: aload_0
      84: invokevirtual #155                // Method allowLegacyHelloMessages:()Lscala/Option;
      87: aastore
      88: dup
      89: iconst_2
      90: aload_0
      91: invokevirtual #157                // Method allowUnsafeRenegotiation:()Lscala/Option;
      94: aastore
      95: dup
      96: iconst_3
      97: aload_0
      98: invokevirtual #159                // Method allowWeakCiphers:()Z
     101: invokestatic  #197                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     104: aastore
     105: dup
     106: iconst_4
     107: aload_0
     108: invokevirtual #161                // Method allowWeakProtocols:()Z
     111: invokestatic  #197                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     114: aastore
     115: dup
     116: iconst_5
     117: aload_0
     118: invokevirtual #163                // Method disableHostnameVerification:()Z
     121: invokestatic  #197                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     124: aastore
     125: dup
     126: bipush        6
     128: aload_0
     129: invokevirtual #165                // Method disableSNI:()Z
     132: invokestatic  #197                // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
     135: aastore
     136: invokevirtual #201                // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     139: invokevirtual #205                // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     142: areturn

  public com.typesafe.sslconfig.ssl.SSLLooseConfig(boolean, scala.Option<java.lang.Object>, scala.Option<java.lang.Object>, boolean, boolean, boolean, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #56                 // Field acceptAnyCertificate:Z
       5: aload_0
       6: aload_2
       7: putfield      #60                 // Field allowLegacyHelloMessages:Lscala/Option;
      10: aload_0
      11: aload_3
      12: putfield      #62                 // Field allowUnsafeRenegotiation:Lscala/Option;
      15: aload_0
      16: iload         4
      18: putfield      #64                 // Field allowWeakCiphers:Z
      21: aload_0
      22: iload         5
      24: putfield      #66                 // Field allowWeakProtocols:Z
      27: aload_0
      28: iload         6
      30: putfield      #68                 // Field disableHostnameVerification:Z
      33: aload_0
      34: iload         7
      36: putfield      #70                 // Field disableSNI:Z
      39: aload_0
      40: invokespecial #208                // Method java/lang/Object."<init>":()V
      43: return
}
