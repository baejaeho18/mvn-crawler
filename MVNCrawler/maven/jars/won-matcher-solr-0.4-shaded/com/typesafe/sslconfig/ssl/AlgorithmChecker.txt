Compiled from "AlgorithmChecker.scala"
public class com.typesafe.sslconfig.ssl.AlgorithmChecker extends java.security.cert.PKIXCertPathChecker {
  private final scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint> signatureConstraints;

  private final scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint> keyConstraints;

  private final com.typesafe.sslconfig.util.NoDepsLogger com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger;

  private final scala.collection.immutable.Map<java.lang.String, com.typesafe.sslconfig.ssl.AlgorithmConstraint> signatureConstraintsMap;

  private final scala.collection.immutable.Map<java.lang.String, com.typesafe.sslconfig.ssl.AlgorithmConstraint> keyConstraintsMap;

  public scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint> signatureConstraints();
    Code:
       0: aload_0
       1: getfield      #21                 // Field signatureConstraints:Lscala/collection/immutable/Set;
       4: areturn

  public scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint> keyConstraints();
    Code:
       0: aload_0
       1: getfield      #25                 // Field keyConstraints:Lscala/collection/immutable/Set;
       4: areturn

  public com.typesafe.sslconfig.util.NoDepsLogger com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger();
    Code:
       0: aload_0
       1: getfield      #28                 // Field com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:Lcom/typesafe/sslconfig/util/NoDepsLogger;
       4: areturn

  private scala.collection.immutable.Map<java.lang.String, com.typesafe.sslconfig.ssl.AlgorithmConstraint> signatureConstraintsMap();
    Code:
       0: aload_0
       1: getfield      #31                 // Field signatureConstraintsMap:Lscala/collection/immutable/Map;
       4: areturn

  private scala.collection.immutable.Map<java.lang.String, com.typesafe.sslconfig.ssl.AlgorithmConstraint> keyConstraintsMap();
    Code:
       0: aload_0
       1: getfield      #33                 // Field keyConstraintsMap:Lscala/collection/immutable/Map;
       4: areturn

  public boolean isForwardCheckingSupported();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Set<java.lang.String> getSupportedExtensions();
    Code:
       0: invokestatic  #42                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
       3: areturn

  public void init(boolean);
    Code:
       0: aload_0
       1: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
       4: new           #48                 // class scala/StringContext
       7: dup
       8: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      11: iconst_2
      12: anewarray     #56                 // class java/lang/String
      15: dup
      16: iconst_0
      17: ldc           #58                 // String init: forward =
      19: aastore
      20: dup
      21: iconst_1
      22: ldc           #60                 // String
      24: aastore
      25: checkcast     #62                 // class "[Ljava/lang/Object;"
      28: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      31: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      34: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      37: iconst_1
      38: anewarray     #72                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: iload_1
      44: invokestatic  #78                 // Method scala/runtime/BoxesRunTime.boxToBoolean:(Z)Ljava/lang/Boolean;
      47: aastore
      48: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      51: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      54: invokevirtual #92                 // Method com/typesafe/sslconfig/util/NoDepsLogger.debug:(Ljava/lang/String;)V
      57: iload_1
      58: ifeq          71
      61: new           #94                 // class java/security/cert/CertPathValidatorException
      64: dup
      65: ldc           #96                 // String Forward checking not supported
      67: invokespecial #98                 // Method java/security/cert/CertPathValidatorException."<init>":(Ljava/lang/String;)V
      70: athrow
      71: return

  public scala.Option<com.typesafe.sslconfig.ssl.AlgorithmConstraint> findSignatureConstraint(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #104                // Method signatureConstraintsMap:()Lscala/collection/immutable/Map;
       4: aload_1
       5: invokeinterface #110,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      10: areturn

  public scala.Option<com.typesafe.sslconfig.ssl.AlgorithmConstraint> findKeyConstraint(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #115                // Method keyConstraintsMap:()Lscala/collection/immutable/Map;
       4: aload_1
       5: invokeinterface #110,  2          // InterfaceMethod scala/collection/immutable/Map.get:(Ljava/lang/Object;)Lscala/Option;
      10: areturn

  public void checkSignatureAlgorithms(java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #123                // Method java/security/cert/X509Certificate.getSigAlgName:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #128                // Field com/typesafe/sslconfig/ssl/Algorithms$.MODULE$:Lcom/typesafe/sslconfig/ssl/Algorithms$;
       8: aload_2
       9: invokevirtual #132                // Method com/typesafe/sslconfig/ssl/Algorithms$.decomposes:(Ljava/lang/String;)Lscala/collection/immutable/Set;
      12: astore_3
      13: aload_0
      14: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      17: new           #48                 // class scala/StringContext
      20: dup
      21: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      24: iconst_4
      25: anewarray     #56                 // class java/lang/String
      28: dup
      29: iconst_0
      30: ldc           #134                // String checkSignatureAlgorithms: sigAlgName =
      32: aastore
      33: dup
      34: iconst_1
      35: ldc           #136                // String , sigAlgName =
      37: aastore
      38: dup
      39: iconst_2
      40: ldc           #138                // String , sigAlgorithms =
      42: aastore
      43: dup
      44: iconst_3
      45: ldc           #60                 // String
      47: aastore
      48: checkcast     #62                 // class "[Ljava/lang/Object;"
      51: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      54: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      57: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      60: iconst_3
      61: anewarray     #72                 // class java/lang/Object
      64: dup
      65: iconst_0
      66: aload_2
      67: aastore
      68: dup
      69: iconst_1
      70: aload_2
      71: aastore
      72: dup
      73: iconst_2
      74: aload_3
      75: aastore
      76: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      79: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      82: invokevirtual #92                 // Method com/typesafe/sslconfig/util/NoDepsLogger.debug:(Ljava/lang/String;)V
      85: aload_3
      86: new           #140                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$checkSignatureAlgorithms$1
      89: dup
      90: aload_0
      91: aload_1
      92: invokespecial #143                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$checkSignatureAlgorithms$1."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;Ljava/security/cert/X509Certificate;)V
      95: invokeinterface #149,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
     100: return

  public void checkKeyAlgorithms(java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #158                // Method java/security/cert/X509Certificate.getPublicKey:()Ljava/security/PublicKey;
       4: astore_2
       5: aload_2
       6: invokeinterface #163,  1          // InterfaceMethod java/security/PublicKey.getAlgorithm:()Ljava/lang/String;
      11: astore_3
      12: getstatic     #128                // Field com/typesafe/sslconfig/ssl/Algorithms$.MODULE$:Lcom/typesafe/sslconfig/ssl/Algorithms$;
      15: aload_2
      16: invokevirtual #167                // Method com/typesafe/sslconfig/ssl/Algorithms$.keySize:(Ljava/security/Key;)Lscala/Option;
      19: new           #169                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$3
      22: dup
      23: aload_0
      24: aload_2
      25: invokespecial #172                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$3."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;Ljava/security/PublicKey;)V
      28: invokevirtual #178                // Method scala/Option.getOrElse:(Lscala/Function0;)Ljava/lang/Object;
      31: invokestatic  #182                // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      34: istore        4
      36: getstatic     #128                // Field com/typesafe/sslconfig/ssl/Algorithms$.MODULE$:Lcom/typesafe/sslconfig/ssl/Algorithms$;
      39: aload_3
      40: invokevirtual #132                // Method com/typesafe/sslconfig/ssl/Algorithms$.decomposes:(Ljava/lang/String;)Lscala/collection/immutable/Set;
      43: astore        5
      45: aload_0
      46: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      49: new           #48                 // class scala/StringContext
      52: dup
      53: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      56: iconst_4
      57: anewarray     #56                 // class java/lang/String
      60: dup
      61: iconst_0
      62: ldc           #184                // String checkKeyAlgorithms: keyAlgorithmName =
      64: aastore
      65: dup
      66: iconst_1
      67: ldc           #186                // String , keySize =
      69: aastore
      70: dup
      71: iconst_2
      72: ldc           #188                // String , keyAlgorithms =
      74: aastore
      75: dup
      76: iconst_3
      77: ldc           #60                 // String
      79: aastore
      80: checkcast     #62                 // class "[Ljava/lang/Object;"
      83: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      86: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      89: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      92: iconst_3
      93: anewarray     #72                 // class java/lang/Object
      96: dup
      97: iconst_0
      98: aload_3
      99: aastore
     100: dup
     101: iconst_1
     102: iload         4
     104: invokestatic  #192                // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
     107: aastore
     108: dup
     109: iconst_2
     110: aload         5
     112: aastore
     113: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     116: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     119: invokevirtual #92                 // Method com/typesafe/sslconfig/util/NoDepsLogger.debug:(Ljava/lang/String;)V
     122: aload         5
     124: new           #194                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$checkKeyAlgorithms$1
     127: dup
     128: aload_0
     129: aload_1
     130: iload         4
     132: invokespecial #197                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$checkKeyAlgorithms$1."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;Ljava/security/cert/X509Certificate;I)V
     135: invokeinterface #149,  2          // InterfaceMethod scala/collection/immutable/Set.foreach:(Lscala/Function1;)V
     140: return

  public void check(java.security.cert.Certificate, java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: astore_3
       2: aload_3
       3: instanceof    #119                // class java/security/cert/X509Certificate
       6: ifeq          188
       9: aload_3
      10: checkcast     #119                // class java/security/cert/X509Certificate
      13: astore        4
      15: aload_0
      16: aload         4
      18: invokevirtual #208                // Method getCommonName:(Ljava/security/cert/X509Certificate;)Ljava/lang/String;
      21: astore        6
      23: aload         4
      25: invokevirtual #212                // Method java/security/cert/X509Certificate.getSubjectAlternativeNames:()Ljava/util/Collection;
      28: astore        7
      30: aload         4
      32: invokevirtual #216                // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
      35: invokevirtual #221                // Method javax/security/auth/x500/X500Principal.getName:()Ljava/lang/String;
      38: astore        8
      40: aload_0
      41: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      44: invokevirtual #224                // Method com/typesafe/sslconfig/util/NoDepsLogger.isDebugEnabled:()Z
      47: ifeq          164
      50: aload         4
      52: invokevirtual #228                // Method java/security/cert/X509Certificate.getNotAfter:()Ljava/util/Date;
      55: invokevirtual #234                // Method java/util/Date.getTime:()J
      58: lstore        9
      60: new           #236                // class java/text/SimpleDateFormat
      63: dup
      64: ldc           #238                // String yyyy-MM-dd\'T\'HH:mm:ss\'Z\'
      66: invokespecial #239                // Method java/text/SimpleDateFormat."<init>":(Ljava/lang/String;)V
      69: astore        11
      71: aload_0
      72: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      75: new           #48                 // class scala/StringContext
      78: dup
      79: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      82: iconst_5
      83: anewarray     #56                 // class java/lang/String
      86: dup
      87: iconst_0
      88: ldc           #241                // String check: checking certificate commonName =
      90: aastore
      91: dup
      92: iconst_1
      93: ldc           #243                // String , subjAltName =
      95: aastore
      96: dup
      97: iconst_2
      98: ldc           #245                // String , certName =
     100: aastore
     101: dup
     102: iconst_3
     103: ldc           #247                // String , expirationDate =
     105: aastore
     106: dup
     107: iconst_4
     108: ldc           #60                 // String
     110: aastore
     111: checkcast     #62                 // class "[Ljava/lang/Object;"
     114: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     117: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
     120: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
     123: iconst_4
     124: anewarray     #72                 // class java/lang/Object
     127: dup
     128: iconst_0
     129: aload         6
     131: aastore
     132: dup
     133: iconst_1
     134: aload         7
     136: aastore
     137: dup
     138: iconst_2
     139: aload         8
     141: aastore
     142: dup
     143: iconst_3
     144: aload         11
     146: lload         9
     148: invokestatic  #251                // Method scala/runtime/BoxesRunTime.boxToLong:(J)Ljava/lang/Long;
     151: invokevirtual #255                // Method java/text/SimpleDateFormat.format:(Ljava/lang/Object;)Ljava/lang/String;
     154: aastore
     155: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
     158: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
     161: invokevirtual #92                 // Method com/typesafe/sslconfig/util/NoDepsLogger.debug:(Ljava/lang/String;)V
     164: aload_0
     165: aload         4
     167: invokevirtual #258                // Method sunsetSHA1SignatureAlgorithm:(Ljava/security/cert/X509Certificate;)V
     170: aload_0
     171: aload         4
     173: invokevirtual #260                // Method checkSignatureAlgorithms:(Ljava/security/cert/X509Certificate;)V
     176: aload_0
     177: aload         4
     179: invokevirtual #262                // Method checkKeyAlgorithms:(Ljava/security/cert/X509Certificate;)V
     182: getstatic     #268                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
     185: astore        5
     187: return
     188: new           #270                // class java/lang/UnsupportedOperationException
     191: dup
     192: ldc_w         #272                // String check only works with x509 certificates!
     195: invokespecial #273                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
     198: athrow

  public void sunsetSHA1SignatureAlgorithm(java.security.cert.X509Certificate);
    Code:
       0: aload_1
       1: invokevirtual #123                // Method java/security/cert/X509Certificate.getSigAlgName:()Ljava/lang/String;
       4: astore_2
       5: getstatic     #128                // Field com/typesafe/sslconfig/ssl/Algorithms$.MODULE$:Lcom/typesafe/sslconfig/ssl/Algorithms$;
       8: aload_2
       9: invokevirtual #132                // Method com/typesafe/sslconfig/ssl/Algorithms$.decomposes:(Ljava/lang/String;)Lscala/collection/immutable/Set;
      12: astore_3
      13: aload_3
      14: ldc_w         #290                // String SHA1
      17: invokeinterface #294,  2          // InterfaceMethod scala/collection/immutable/Set.contains:(Ljava/lang/Object;)Z
      22: ifne          37
      25: aload_3
      26: ldc_w         #296                // String SHA-1
      29: invokeinterface #294,  2          // InterfaceMethod scala/collection/immutable/Set.contains:(Ljava/lang/Object;)Z
      34: ifeq          173
      37: new           #298                // class java/util/GregorianCalendar
      40: dup
      41: sipush        2016
      44: bipush        6
      46: iconst_1
      47: iconst_0
      48: iconst_0
      49: iconst_0
      50: invokespecial #301                // Method java/util/GregorianCalendar."<init>":(IIIIII)V
      53: astore        4
      55: new           #298                // class java/util/GregorianCalendar
      58: dup
      59: sipush        2016
      62: bipush        12
      64: bipush        31
      66: iconst_0
      67: iconst_0
      68: iconst_0
      69: invokespecial #301                // Method java/util/GregorianCalendar."<init>":(IIIIII)V
      72: astore        5
      74: new           #298                // class java/util/GregorianCalendar
      77: dup
      78: invokespecial #304                // Method java/util/GregorianCalendar."<init>":()V
      81: astore        6
      83: aload         6
      85: new           #230                // class java/util/Date
      88: dup
      89: aload_1
      90: invokevirtual #228                // Method java/security/cert/X509Certificate.getNotAfter:()Ljava/util/Date;
      93: invokevirtual #234                // Method java/util/Date.getTime:()J
      96: invokespecial #307                // Method java/util/Date."<init>":(J)V
      99: invokevirtual #311                // Method java/util/GregorianCalendar.setTime:(Ljava/util/Date;)V
     102: aload         6
     104: aload         4
     106: invokevirtual #314                // Method java/util/GregorianCalendar.after:(Ljava/lang/Object;)Z
     109: ifeq          129
     112: aload         6
     114: aload         5
     116: invokevirtual #317                // Method java/util/GregorianCalendar.before:(Ljava/lang/Object;)Z
     119: ifeq          129
     122: aload_0
     123: aload_1
     124: aload         6
     126: invokevirtual #321                // Method infoOnSunset:(Ljava/security/cert/X509Certificate;Ljava/util/GregorianCalendar;)V
     129: new           #298                // class java/util/GregorianCalendar
     132: dup
     133: sipush        2017
     136: iconst_1
     137: iconst_1
     138: iconst_0
     139: iconst_0
     140: iconst_0
     141: invokespecial #301                // Method java/util/GregorianCalendar."<init>":(IIIIII)V
     144: astore        7
     146: aload         7
     148: aload         6
     150: invokevirtual #324                // Method java/util/GregorianCalendar.equals:(Ljava/lang/Object;)Z
     153: ifne          166
     156: aload         7
     158: aload         6
     160: invokevirtual #317                // Method java/util/GregorianCalendar.before:(Ljava/lang/Object;)Z
     163: ifeq          173
     166: aload_0
     167: aload_1
     168: aload         6
     170: invokevirtual #327                // Method warnOnSunset:(Ljava/security/cert/X509Certificate;Ljava/util/GregorianCalendar;)V
     173: return

  public void infoOnSunset(java.security.cert.X509Certificate, java.util.GregorianCalendar);
    Code:
       0: aload_1
       1: invokevirtual #216                // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
       4: invokevirtual #221                // Method javax/security/auth/x500/X500Principal.getName:()Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      12: new           #48                 // class scala/StringContext
      15: dup
      16: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: iconst_3
      20: anewarray     #56                 // class java/lang/String
      23: dup
      24: iconst_0
      25: ldc_w         #333                // String Certificate
      28: aastore
      29: dup
      30: iconst_1
      31: ldc_w         #335                // String  uses SHA-1 and expires
      34: aastore
      35: dup
      36: iconst_2
      37: ldc_w         #337                // String : this certificate expires soon, but SHA-1 is being sunsetted.
      40: aastore
      41: checkcast     #62                 // class "[Ljava/lang/Object;"
      44: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      47: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      50: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      53: iconst_2
      54: anewarray     #72                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_3
      60: aastore
      61: dup
      62: iconst_1
      63: aload_2
      64: aastore
      65: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      68: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      71: invokevirtual #340                // Method com/typesafe/sslconfig/util/NoDepsLogger.info:(Ljava/lang/String;)V
      74: return

  public void warnOnSunset(java.security.cert.X509Certificate, java.util.GregorianCalendar);
    Code:
       0: aload_1
       1: invokevirtual #216                // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
       4: invokevirtual #221                // Method javax/security/auth/x500/X500Principal.getName:()Ljava/lang/String;
       7: astore_3
       8: aload_0
       9: invokevirtual #46                 // Method com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:()Lcom/typesafe/sslconfig/util/NoDepsLogger;
      12: new           #48                 // class scala/StringContext
      15: dup
      16: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      19: iconst_3
      20: anewarray     #56                 // class java/lang/String
      23: dup
      24: iconst_0
      25: ldc_w         #333                // String Certificate
      28: aastore
      29: dup
      30: iconst_1
      31: ldc_w         #335                // String  uses SHA-1 and expires
      34: aastore
      35: dup
      36: iconst_2
      37: ldc_w         #342                // String : SHA-1 cannot be considered secure and this certificate should be replaced.
      40: aastore
      41: checkcast     #62                 // class "[Ljava/lang/Object;"
      44: invokevirtual #66                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      47: invokespecial #70                 // Method scala/StringContext."<init>":(Lscala/collection/Seq;)V
      50: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      53: iconst_2
      54: anewarray     #72                 // class java/lang/Object
      57: dup
      58: iconst_0
      59: aload_3
      60: aastore
      61: dup
      62: iconst_1
      63: aload_2
      64: aastore
      65: invokevirtual #82                 // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      68: invokevirtual #86                 // Method scala/StringContext.s:(Lscala/collection/Seq;)Ljava/lang/String;
      71: invokevirtual #345                // Method com/typesafe/sslconfig/util/NoDepsLogger.warn:(Ljava/lang/String;)V
      74: return

  public java.lang.String getCommonName(java.security.cert.X509Certificate);
    Code:
       0: new           #349                // class javax/naming/ldap/LdapName
       3: dup
       4: aload_1
       5: invokevirtual #216                // Method java/security/cert/X509Certificate.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;
       8: invokevirtual #221                // Method javax/security/auth/x500/X500Principal.getName:()Ljava/lang/String;
      11: invokespecial #350                // Method javax/naming/ldap/LdapName."<init>":(Ljava/lang/String;)V
      14: astore_3
      15: aconst_null
      16: invokestatic  #356                // Method scala/runtime/ObjectRef.create:(Ljava/lang/Object;)Lscala/runtime/ObjectRef;
      19: astore        4
      21: getstatic     #361                // Field scala/collection/JavaConverters$.MODULE$:Lscala/collection/JavaConverters$;
      24: aload_3
      25: invokevirtual #365                // Method javax/naming/ldap/LdapName.getRdns:()Ljava/util/List;
      28: invokevirtual #369                // Method scala/collection/JavaConverters$.asScalaBufferConverter:(Ljava/util/List;)Lscala/collection/convert/Decorators$AsScala;
      31: invokevirtual #375                // Method scala/collection/convert/Decorators$AsScala.asScala:()Ljava/lang/Object;
      34: checkcast     #377                // class scala/collection/TraversableLike
      37: new           #379                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$getCommonName$1
      40: dup
      41: aload_0
      42: invokespecial #382                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$getCommonName$1."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;)V
      45: invokeinterface #386,  2          // InterfaceMethod scala/collection/TraversableLike.withFilter:(Lscala/Function1;)Lscala/collection/generic/FilterMonadic;
      50: new           #388                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$getCommonName$2
      53: dup
      54: aload_0
      55: aload         4
      57: invokespecial #391                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$getCommonName$2."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;Lscala/runtime/ObjectRef;)V
      60: invokeinterface #394,  2          // InterfaceMethod scala/collection/generic/FilterMonadic.foreach:(Lscala/Function1;)V
      65: aload         4
      67: getfield      #398                // Field scala/runtime/ObjectRef.elem:Ljava/lang/Object;
      70: checkcast     #56                 // class java/lang/String
      73: goto          78
      76: astore_2
      77: aconst_null
      78: areturn
    Exception table:
       from    to  target type
           0    76    76   Class javax/naming/InvalidNameException

  public com.typesafe.sslconfig.ssl.AlgorithmChecker(com.typesafe.sslconfig.util.LoggerFactory, scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint>, scala.collection.immutable.Set<com.typesafe.sslconfig.ssl.AlgorithmConstraint>);
    Code:
       0: aload_0
       1: aload_2
       2: putfield      #21                 // Field signatureConstraints:Lscala/collection/immutable/Set;
       5: aload_0
       6: aload_3
       7: putfield      #25                 // Field keyConstraints:Lscala/collection/immutable/Set;
      10: aload_0
      11: invokespecial #404                // Method java/security/cert/PKIXCertPathChecker."<init>":()V
      14: aload_0
      15: aload_1
      16: aload_0
      17: invokevirtual #408                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokeinterface #414,  2          // InterfaceMethod com/typesafe/sslconfig/util/LoggerFactory.apply:(Ljava/lang/Class;)Lcom/typesafe/sslconfig/util/NoDepsLogger;
      25: putfield      #28                 // Field com$typesafe$sslconfig$ssl$AlgorithmChecker$$logger:Lcom/typesafe/sslconfig/util/NoDepsLogger;
      28: aload_0
      29: aload_2
      30: invokeinterface #418,  1          // InterfaceMethod scala/collection/immutable/Set.iterator:()Lscala/collection/Iterator;
      35: new           #420                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$1
      38: dup
      39: aload_0
      40: invokespecial #421                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$1."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;)V
      43: invokeinterface #427,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      48: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      51: invokevirtual #431                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      54: invokeinterface #435,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      59: putfield      #31                 // Field signatureConstraintsMap:Lscala/collection/immutable/Map;
      62: aload_0
      63: aload_3
      64: invokeinterface #418,  1          // InterfaceMethod scala/collection/immutable/Set.iterator:()Lscala/collection/Iterator;
      69: new           #437                // class com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$2
      72: dup
      73: aload_0
      74: invokespecial #438                // Method com/typesafe/sslconfig/ssl/AlgorithmChecker$$anonfun$2."<init>":(Lcom/typesafe/sslconfig/ssl/AlgorithmChecker;)V
      77: invokeinterface #427,  2          // InterfaceMethod scala/collection/Iterator.map:(Lscala/Function1;)Lscala/collection/Iterator;
      82: getstatic     #54                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      85: invokevirtual #431                // Method scala/Predef$.$conforms:()Lscala/Predef$$less$colon$less;
      88: invokeinterface #435,  2          // InterfaceMethod scala/collection/Iterator.toMap:(Lscala/Predef$$less$colon$less;)Lscala/collection/immutable/Map;
      93: putfield      #33                 // Field keyConstraintsMap:Lscala/collection/immutable/Map;
      96: return
}
