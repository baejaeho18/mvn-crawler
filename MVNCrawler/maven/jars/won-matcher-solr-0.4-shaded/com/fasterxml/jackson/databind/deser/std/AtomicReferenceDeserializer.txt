Compiled from "AtomicReferenceDeserializer.java"
public class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer extends com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer<java.util.concurrent.atomic.AtomicReference<java.lang.Object>> {
  private static final long serialVersionUID;

  public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer(com.fasterxml.jackson.databind.JavaType);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aconst_null
       4: invokespecial #1                  // Method "<init>":(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
       7: return

  public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #2                  // Method com/fasterxml/jackson/databind/deser/std/ReferenceTypeDeserializer."<init>":(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
       7: return

  public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer<?>);
    Code:
       0: new           #3                  // class com/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer
       3: dup
       4: aload_0
       5: getfield      #4                  // Field _fullType:Lcom/fasterxml/jackson/databind/JavaType;
       8: aload_1
       9: aload_2
      10: invokespecial #1                  // Method "<init>":(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)V
      13: areturn

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> getNullValue(com.fasterxml.jackson.databind.DeserializationContext);
    Code:
       0: new           #5                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: areturn

  public java.util.concurrent.atomic.AtomicReference<java.lang.Object> referenceValue(java.lang.Object);
    Code:
       0: new           #5                  // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
       8: areturn

  public java.lang.Object referenceValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #8                  // Method referenceValue:(Ljava/lang/Object;)Ljava/util/concurrent/atomic/AtomicReference;
       5: areturn

  public java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #9                  // Method getNullValue:(Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/concurrent/atomic/AtomicReference;
       5: areturn

  public com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #10                 // Method withResolved:(Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer;)Lcom/fasterxml/jackson/databind/deser/std/AtomicReferenceDeserializer;
       6: areturn
}
