Compiled from "JsonDeserializer.java"
public abstract class com.fasterxml.jackson.databind.JsonDeserializer<T> {
  public com.fasterxml.jackson.databind.JsonDeserializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public abstract T deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;

  public T deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, T) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException;
    Code:
       0: new           #2                  // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #3                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #5                  // String Can not update object of type
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_3
      17: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #9                  // String  (by deserializer of type
      28: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      38: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: ldc           #10                 // String )
      43: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      49: invokespecial #12                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      52: athrow

  public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException;
    Code:
       0: aload_3
       1: aload_1
       2: aload_2
       3: invokevirtual #13                 // Method com/fasterxml/jackson/databind/jsontype/TypeDeserializer.deserializeTypedFromAny:(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/lang/Object;
       6: areturn

  public com.fasterxml.jackson.databind.JsonDeserializer<T> unwrappingDeserializer(com.fasterxml.jackson.databind.util.NameTransformer);
    Code:
       0: aload_0
       1: areturn

  public com.fasterxml.jackson.databind.JsonDeserializer<?> replaceDelegatee(com.fasterxml.jackson.databind.JsonDeserializer<?>);
    Code:
       0: new           #2                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #14                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public java.lang.Class<?> handledType();
    Code:
       0: aconst_null
       1: areturn

  public boolean isCachable();
    Code:
       0: iconst_0
       1: ireturn

  public com.fasterxml.jackson.databind.JsonDeserializer<?> getDelegatee();
    Code:
       0: aconst_null
       1: areturn

  public java.util.Collection<java.lang.Object> getKnownPropertyNames();
    Code:
       0: aconst_null
       1: areturn

  public T getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getNullValue:()Ljava/lang/Object;
       4: areturn

  public T getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getEmptyValue:()Ljava/lang/Object;
       4: areturn

  public com.fasterxml.jackson.databind.deser.impl.ObjectIdReader getObjectIdReader();
    Code:
       0: aconst_null
       1: areturn

  public com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String);
    Code:
       0: new           #17                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #3                  // class java/lang/StringBuilder
       7: dup
       8: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #18                 // String Can not handle managed/back reference \'
      13: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_1
      17: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: ldc           #19                 // String \': type: value deserializer of type
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: aload_0
      26: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      29: invokevirtual #8                  // Method java/lang/Class.getName:()Ljava/lang/String;
      32: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #20                 // String  does not support them
      37: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #11                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: invokespecial #21                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      46: athrow

  public T getNullValue();
    Code:
       0: aconst_null
       1: areturn

  public T getEmptyValue();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getNullValue:()Ljava/lang/Object;
       4: areturn
}
