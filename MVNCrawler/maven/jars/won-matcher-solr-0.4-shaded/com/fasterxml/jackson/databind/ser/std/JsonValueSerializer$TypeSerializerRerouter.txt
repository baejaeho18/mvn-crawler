Compiled from "JsonValueSerializer.java"
class com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter extends com.fasterxml.jackson.databind.jsontype.TypeSerializer {
  protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer;

  protected final java.lang.Object _forObject;

  public com.fasterxml.jackson.databind.ser.std.JsonValueSerializer$TypeSerializerRerouter(com.fasterxml.jackson.databind.jsontype.TypeSerializer, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field _forObject:Ljava/lang/Object;
      14: return

  public com.fasterxml.jackson.databind.jsontype.TypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty);
    Code:
       0: new           #4                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #5                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public com.fasterxml.jackson.annotation.JsonTypeInfo$As getTypeInclusion();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: invokevirtual #6                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.getTypeInclusion:()Lcom/fasterxml/jackson/annotation/JsonTypeInfo$As;
       7: areturn

  public java.lang.String getPropertyName();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: invokevirtual #7                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.getPropertyName:()Ljava/lang/String;
       7: areturn

  public com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver();
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: invokevirtual #8                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.getTypeIdResolver:()Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;
       7: areturn

  public void writeTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #9                  // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #10                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #11                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypeSuffixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #12                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #13                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypeSuffixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: invokevirtual #14                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypeSuffixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;)V
      12: return

  public void writeTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #15                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Class;)V
      13: return

  public void writeTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #16                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Class;)V
      13: return

  public void writeTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.Class<?>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #17                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeTypePrefixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Class;)V
      13: return

  public void writeCustomTypePrefixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #18                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypePrefixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return

  public void writeCustomTypePrefixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #19                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypePrefixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return

  public void writeCustomTypePrefixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #20                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypePrefixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return

  public void writeCustomTypeSuffixForScalar(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #21                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypeSuffixForScalar:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return

  public void writeCustomTypeSuffixForObject(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #22                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypeSuffixForObject:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return

  public void writeCustomTypeSuffixForArray(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field _typeSerializer:Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;
       4: aload_0
       5: getfield      #3                  // Field _forObject:Ljava/lang/Object;
       8: aload_2
       9: aload_3
      10: invokevirtual #23                 // Method com/fasterxml/jackson/databind/jsontype/TypeSerializer.writeCustomTypeSuffixForArray:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/String;)V
      13: return
}
