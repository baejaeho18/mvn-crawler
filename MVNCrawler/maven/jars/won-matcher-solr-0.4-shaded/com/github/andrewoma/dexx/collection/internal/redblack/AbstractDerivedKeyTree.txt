Compiled from "AbstractDerivedKeyTree.java"
public abstract class com.github.andrewoma.dexx.collection.internal.redblack.AbstractDerivedKeyTree<K, V> extends com.github.andrewoma.dexx.collection.internal.redblack.AbstractTree<K, V> {
  protected com.github.andrewoma.dexx.collection.internal.redblack.AbstractDerivedKeyTree(com.github.andrewoma.dexx.collection.internal.redblack.Tree<K, V>, com.github.andrewoma.dexx.collection.internal.redblack.Tree<K, V>, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method com/github/andrewoma/dexx/collection/internal/redblack/AbstractTree."<init>":(Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;Ljava/lang/Object;)V
       7: return

  public int count();
    Code:
       0: iconst_1
       1: aload_0
       2: invokevirtual #2                  // Method getLeft:()Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;
       5: invokestatic  #3                  // Method com/github/andrewoma/dexx/collection/internal/redblack/RedBlackTree.count:(Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;)I
       8: iadd
       9: aload_0
      10: invokevirtual #4                  // Method getRight:()Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;
      13: invokestatic  #3                  // Method com/github/andrewoma/dexx/collection/internal/redblack/RedBlackTree.count:(Lcom/github/andrewoma/dexx/collection/internal/redblack/Tree;)I
      16: iadd
      17: ireturn

  public K getKey(com.github.andrewoma.dexx.collection.KeyFunction<K, V>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #5                  // Method getValue:()Ljava/lang/Object;
       5: invokeinterface #6,  2            // InterfaceMethod com/github/andrewoma/dexx/collection/KeyFunction.key:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn
}
