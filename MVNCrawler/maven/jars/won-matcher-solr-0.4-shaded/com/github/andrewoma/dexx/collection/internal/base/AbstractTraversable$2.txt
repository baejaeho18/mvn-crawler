Compiled from "AbstractTraversable.java"
class com.github.andrewoma.dexx.collection.internal.base.AbstractTraversable$2 implements com.github.andrewoma.dexx.collection.Function<E, java.lang.Object> {
  final int[] val$count;

  final java.lang.StringBuilder val$buffer;

  final java.lang.String val$separator;

  final int val$limit;

  final com.github.andrewoma.dexx.collection.internal.base.AbstractTraversable this$0;

  com.github.andrewoma.dexx.collection.internal.base.AbstractTraversable$2(com.github.andrewoma.dexx.collection.internal.base.AbstractTraversable, int[], java.lang.StringBuilder, java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/github/andrewoma/dexx/collection/internal/base/AbstractTraversable;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$count:[I
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$buffer:Ljava/lang/StringBuilder;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field val$separator:Ljava/lang/String;
      21: aload_0
      22: iload         5
      24: putfield      #5                  // Field val$limit:I
      27: aload_0
      28: invokespecial #6                  // Method java/lang/Object."<init>":()V
      31: return

  public java.lang.Object invoke(E);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$count:[I
       4: iconst_0
       5: iaload
       6: iconst_1
       7: iadd
       8: istore_2
       9: aload_0
      10: getfield      #2                  // Field val$count:[I
      13: iconst_0
      14: iload_2
      15: iastore
      16: iload_2
      17: iconst_1
      18: if_icmple     33
      21: aload_0
      22: getfield      #3                  // Field val$buffer:Ljava/lang/StringBuilder;
      25: aload_0
      26: getfield      #4                  // Field val$separator:Ljava/lang/String;
      29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: pop
      33: aload_0
      34: getfield      #5                  // Field val$limit:I
      37: iflt          48
      40: iload_2
      41: aload_0
      42: getfield      #5                  // Field val$limit:I
      45: if_icmpgt     72
      48: aload_0
      49: getfield      #3                  // Field val$buffer:Ljava/lang/StringBuilder;
      52: aload_1
      53: ifnonnull     61
      56: ldc           #8                  // String null
      58: goto          65
      61: aload_1
      62: invokevirtual #9                  // Method java/lang/Object.toString:()Ljava/lang/String;
      65: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: pop
      69: goto          76
      72: getstatic     #10                 // Field com/github/andrewoma/dexx/collection/internal/base/Break.instance:Lcom/github/andrewoma/dexx/collection/internal/base/Break;
      75: athrow
      76: aconst_null
      77: areturn
}
