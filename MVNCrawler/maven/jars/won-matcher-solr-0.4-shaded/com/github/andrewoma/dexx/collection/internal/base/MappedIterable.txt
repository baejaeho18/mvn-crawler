Compiled from "MappedIterable.java"
public class com.github.andrewoma.dexx.collection.internal.base.MappedIterable<T, F> extends com.github.andrewoma.dexx.collection.internal.base.AbstractIterable<T> {
  private final com.github.andrewoma.dexx.collection.Function<F, T> mapFunction;

  private final com.github.andrewoma.dexx.collection.Iterable<F> from;

  public com.github.andrewoma.dexx.collection.internal.base.MappedIterable(com.github.andrewoma.dexx.collection.Iterable<F>, com.github.andrewoma.dexx.collection.Function<F, T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method com/github/andrewoma/dexx/collection/internal/base/AbstractIterable."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #1                  // Field mapFunction:Lcom/github/andrewoma/dexx/collection/Function;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field from:Lcom/github/andrewoma/dexx/collection/Iterable;
      14: return

  public java.util.Iterator<T> iterator();
    Code:
       0: aload_0
       1: getfield      #3                  // Field from:Lcom/github/andrewoma/dexx/collection/Iterable;
       4: invokeinterface #4,  1            // InterfaceMethod com/github/andrewoma/dexx/collection/Iterable.iterator:()Ljava/util/Iterator;
       9: astore_1
      10: new           #5                  // class com/github/andrewoma/dexx/collection/internal/base/MappedIterable$1
      13: dup
      14: aload_0
      15: aload_1
      16: invokespecial #6                  // Method com/github/andrewoma/dexx/collection/internal/base/MappedIterable$1."<init>":(Lcom/github/andrewoma/dexx/collection/internal/base/MappedIterable;Ljava/util/Iterator;)V
      19: areturn

  static com.github.andrewoma.dexx.collection.Function access$000(com.github.andrewoma.dexx.collection.internal.base.MappedIterable);
    Code:
       0: aload_0
       1: getfield      #1                  // Field mapFunction:Lcom/github/andrewoma/dexx/collection/Function;
       4: areturn
}
