Compiled from "Loader.java"
public class ch.qos.logback.core.util.Loader {
  static final java.lang.String TSTR;

  private static boolean ignoreTCL;

  public static final java.lang.String IGNORE_TCL_PROPERTY_NAME;

  private static boolean HAS_GET_CLASS_LOADER_PERMISSION;

  public ch.qos.logback.core.util.Loader();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.util.Set<java.net.URL> getResourceOccurrenceCount(java.lang.String, java.lang.ClassLoader) throws java.io.IOException;
    Code:
       0: new           #2                  // class java/util/HashSet
       3: dup
       4: invokespecial #3                  // Method java/util/HashSet."<init>":()V
       7: astore_2
       8: aload_1
       9: aload_0
      10: invokevirtual #4                  // Method java/lang/ClassLoader.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;
      13: astore_3
      14: aload_3
      15: invokeinterface #5,  1            // InterfaceMethod java/util/Enumeration.hasMoreElements:()Z
      20: ifeq          46
      23: aload_3
      24: invokeinterface #6,  1            // InterfaceMethod java/util/Enumeration.nextElement:()Ljava/lang/Object;
      29: checkcast     #7                  // class java/net/URL
      32: astore        4
      34: aload_2
      35: aload         4
      37: invokeinterface #8,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      42: pop
      43: goto          14
      46: aload_2
      47: areturn

  public static java.net.URL getResource(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #9                  // Method java/lang/ClassLoader.getResource:(Ljava/lang/String;)Ljava/net/URL;
       5: areturn
       6: astore_2
       7: aconst_null
       8: areturn
    Exception table:
       from    to  target type
           0     5     6   Class java/lang/Throwable

  public static java.net.URL getResourceBySelfClassLoader(java.lang.String);
    Code:
       0: aload_0
       1: ldc_w         #11                 // class ch/qos/logback/core/util/Loader
       4: invokestatic  #12                 // Method getClassLoaderOfClass:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
       7: invokestatic  #13                 // Method getResource:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/net/URL;
      10: areturn

  public static java.lang.ClassLoader getTCL();
    Code:
       0: invokestatic  #14                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       3: invokevirtual #15                 // Method java/lang/Thread.getContextClassLoader:()Ljava/lang/ClassLoader;
       6: areturn

  public static java.lang.Class<?> loadClass(java.lang.String, ch.qos.logback.core.Context) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method getClassLoaderOfObject:(Ljava/lang/Object;)Ljava/lang/ClassLoader;
       4: astore_2
       5: aload_2
       6: aload_0
       7: invokevirtual #17                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      10: areturn

  public static java.lang.ClassLoader getClassLoaderOfObject(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     14
       4: new           #18                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #19                 // String Argument cannot be null
      10: invokespecial #20                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: invokevirtual #21                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      18: invokestatic  #12                 // Method getClassLoaderOfClass:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      21: areturn

  public static java.lang.ClassLoader getClassLoaderAsPrivileged(java.lang.Class<?>);
    Code:
       0: getstatic     #22                 // Field HAS_GET_CLASS_LOADER_PERMISSION:Z
       3: ifne          8
       6: aconst_null
       7: areturn
       8: new           #23                 // class ch/qos/logback/core/util/Loader$2
      11: dup
      12: aload_0
      13: invokespecial #24                 // Method ch/qos/logback/core/util/Loader$2."<init>":(Ljava/lang/Class;)V
      16: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      19: checkcast     #26                 // class java/lang/ClassLoader
      22: areturn

  public static java.lang.ClassLoader getClassLoaderOfClass(java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokevirtual #27                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: invokestatic  #28                 // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      12: areturn
      13: aload_1
      14: areturn

  public static java.lang.Class<?> loadClass(java.lang.String) throws java.lang.ClassNotFoundException;
    Code:
       0: getstatic     #29                 // Field ignoreTCL:Z
       3: ifeq          11
       6: aload_0
       7: invokestatic  #30                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      10: areturn
      11: invokestatic  #31                 // Method getTCL:()Ljava/lang/ClassLoader;
      14: aload_0
      15: invokevirtual #17                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      18: areturn
      19: astore_1
      20: aload_0
      21: invokestatic  #30                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
      24: areturn
    Exception table:
       from    to  target type
          11    18    19   Class java/lang/Throwable

  static {};
    Code:
       0: iconst_0
       1: putstatic     #29                 // Field ignoreTCL:Z
       4: iconst_0
       5: putstatic     #22                 // Field HAS_GET_CLASS_LOADER_PERMISSION:Z
       8: ldc           #32                 // String logback.ignoreTCL
      10: aconst_null
      11: invokestatic  #33                 // Method ch/qos/logback/core/util/OptionHelper.getSystemProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      14: astore_0
      15: aload_0
      16: ifnull        27
      19: aload_0
      20: iconst_1
      21: invokestatic  #34                 // Method ch/qos/logback/core/util/OptionHelper.toBoolean:(Ljava/lang/String;Z)Z
      24: putstatic     #29                 // Field ignoreTCL:Z
      27: new           #35                 // class ch/qos/logback/core/util/Loader$1
      30: dup
      31: invokespecial #36                 // Method ch/qos/logback/core/util/Loader$1."<init>":()V
      34: invokestatic  #25                 // Method java/security/AccessController.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;
      37: checkcast     #37                 // class java/lang/Boolean
      40: invokevirtual #38                 // Method java/lang/Boolean.booleanValue:()Z
      43: putstatic     #22                 // Field HAS_GET_CLASS_LOADER_PERMISSION:Z
      46: return
}
