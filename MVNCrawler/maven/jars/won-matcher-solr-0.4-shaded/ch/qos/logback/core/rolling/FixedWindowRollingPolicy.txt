Compiled from "FixedWindowRollingPolicy.java"
public class ch.qos.logback.core.rolling.FixedWindowRollingPolicy extends ch.qos.logback.core.rolling.RollingPolicyBase {
  static final java.lang.String FNP_NOT_SET;

  static final java.lang.String PRUDENT_MODE_UNSUPPORTED;

  static final java.lang.String SEE_PARENT_FN_NOT_SET;

  int maxIndex;

  int minIndex;

  ch.qos.logback.core.rolling.helper.RenameUtil util;

  ch.qos.logback.core.rolling.helper.Compressor compressor;

  public static final java.lang.String ZIP_ENTRY_DATE_PATTERN;

  private static int MAX_WINDOW_SIZE;

  public ch.qos.logback.core.rolling.FixedWindowRollingPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/rolling/RollingPolicyBase."<init>":()V
       4: aload_0
       5: new           #2                  // class ch/qos/logback/core/rolling/helper/RenameUtil
       8: dup
       9: invokespecial #3                  // Method ch/qos/logback/core/rolling/helper/RenameUtil."<init>":()V
      12: putfield      #4                  // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
      15: aload_0
      16: iconst_1
      17: putfield      #5                  // Field minIndex:I
      20: aload_0
      21: bipush        7
      23: putfield      #6                  // Field maxIndex:I
      26: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
       4: aload_0
       5: getfield      #7                  // Field context:Lch/qos/logback/core/Context;
       8: invokevirtual #8                  // Method ch/qos/logback/core/rolling/helper/RenameUtil.setContext:(Lch/qos/logback/core/Context;)V
      11: aload_0
      12: getfield      #9                  // Field fileNamePatternStr:Ljava/lang/String;
      15: ifnull        44
      18: aload_0
      19: new           #10                 // class ch/qos/logback/core/rolling/helper/FileNamePattern
      22: dup
      23: aload_0
      24: getfield      #9                  // Field fileNamePatternStr:Ljava/lang/String;
      27: aload_0
      28: getfield      #7                  // Field context:Lch/qos/logback/core/Context;
      31: invokespecial #11                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern."<init>":(Ljava/lang/String;Lch/qos/logback/core/Context;)V
      34: putfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      37: aload_0
      38: invokevirtual #13                 // Method determineCompressionMode:()V
      41: goto          66
      44: aload_0
      45: ldc           #14                 // String The \"FileNamePattern\" property must be set before using FixedWindowRollingPolicy.
      47: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
      50: aload_0
      51: ldc           #16                 // String See also http://logback.qos.ch/codes.html#tbr_fnp_not_set
      53: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
      56: new           #17                 // class java/lang/IllegalStateException
      59: dup
      60: ldc           #18                 // String The \"FileNamePattern\" property must be set before using FixedWindowRollingPolicy. See also http://logback.qos.ch/codes.html#tbr_fnp_not_set
      62: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: invokevirtual #20                 // Method isParentPrudent:()Z
      70: ifeq          95
      73: aload_0
      74: ldc           #21                 // String Prudent mode is not supported with FixedWindowRollingPolicy.
      76: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
      79: aload_0
      80: ldc           #22                 // String See also http://logback.qos.ch/codes.html#tbr_fnp_prudent_unsupported
      82: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
      85: new           #17                 // class java/lang/IllegalStateException
      88: dup
      89: ldc           #23                 // String Prudent mode is not supported.
      91: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: aload_0
      96: invokevirtual #24                 // Method getParentsRawFileProperty:()Ljava/lang/String;
      99: ifnonnull     124
     102: aload_0
     103: ldc           #25                 // String The File name property must be set before using this rolling policy.
     105: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
     108: aload_0
     109: ldc           #26                 // String Please refer to http://logback.qos.ch/codes.html#fwrp_parentFileName_not_set
     111: invokevirtual #15                 // Method addError:(Ljava/lang/String;)V
     114: new           #17                 // class java/lang/IllegalStateException
     117: dup
     118: ldc           #27                 // String The \"File\" option must be set.
     120: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     123: athrow
     124: aload_0
     125: getfield      #6                  // Field maxIndex:I
     128: aload_0
     129: getfield      #5                  // Field minIndex:I
     132: if_icmpge     192
     135: aload_0
     136: new           #28                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #30                 // String MaxIndex (
     145: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_0
     149: getfield      #6                  // Field maxIndex:I
     152: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     155: ldc           #33                 // String ) cannot be smaller than MinIndex (
     157: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_0
     161: getfield      #5                  // Field minIndex:I
     164: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     167: ldc           #34                 // String ).
     169: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokevirtual #36                 // Method addWarn:(Ljava/lang/String;)V
     178: aload_0
     179: ldc           #37                 // String Setting maxIndex to equal minIndex.
     181: invokevirtual #36                 // Method addWarn:(Ljava/lang/String;)V
     184: aload_0
     185: aload_0
     186: getfield      #5                  // Field minIndex:I
     189: putfield      #6                  // Field maxIndex:I
     192: aload_0
     193: invokevirtual #38                 // Method getMaxWindowSize:()I
     196: istore_1
     197: aload_0
     198: getfield      #6                  // Field maxIndex:I
     201: aload_0
     202: getfield      #5                  // Field minIndex:I
     205: isub
     206: iload_1
     207: if_icmple     252
     210: aload_0
     211: ldc           #39                 // String Large window sizes are not allowed.
     213: invokevirtual #36                 // Method addWarn:(Ljava/lang/String;)V
     216: aload_0
     217: aload_0
     218: getfield      #5                  // Field minIndex:I
     221: iload_1
     222: iadd
     223: putfield      #6                  // Field maxIndex:I
     226: aload_0
     227: new           #28                 // class java/lang/StringBuilder
     230: dup
     231: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     234: ldc           #40                 // String MaxIndex reduced to
     236: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     239: aload_0
     240: getfield      #6                  // Field maxIndex:I
     243: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     246: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     249: invokevirtual #36                 // Method addWarn:(Ljava/lang/String;)V
     252: aload_0
     253: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     256: invokevirtual #41                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getIntegerTokenConverter:()Lch/qos/logback/core/rolling/helper/IntegerTokenConverter;
     259: astore_2
     260: aload_2
     261: ifnonnull     302
     264: new           #17                 // class java/lang/IllegalStateException
     267: dup
     268: new           #28                 // class java/lang/StringBuilder
     271: dup
     272: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     275: ldc           #42                 // String FileNamePattern [
     277: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     280: aload_0
     281: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     284: invokevirtual #43                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPattern:()Ljava/lang/String;
     287: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     290: ldc           #44                 // String ] does not contain a valid IntegerToken
     292: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     295: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokespecial #19                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     301: athrow
     302: aload_0
     303: getfield      #45                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     306: getstatic     #46                 // Field ch/qos/logback/core/rolling/helper/CompressionMode.ZIP:Lch/qos/logback/core/rolling/helper/CompressionMode;
     309: if_acmpne     337
     312: aload_0
     313: aload_0
     314: getfield      #9                  // Field fileNamePatternStr:Ljava/lang/String;
     317: invokespecial #47                 // Method transformFileNamePatternFromInt2Date:(Ljava/lang/String;)Ljava/lang/String;
     320: astore_3
     321: aload_0
     322: new           #10                 // class ch/qos/logback/core/rolling/helper/FileNamePattern
     325: dup
     326: aload_3
     327: aload_0
     328: getfield      #7                  // Field context:Lch/qos/logback/core/Context;
     331: invokespecial #11                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern."<init>":(Ljava/lang/String;Lch/qos/logback/core/Context;)V
     334: putfield      #48                 // Field zipEntryFileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     337: aload_0
     338: new           #49                 // class ch/qos/logback/core/rolling/helper/Compressor
     341: dup
     342: aload_0
     343: getfield      #45                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     346: invokespecial #50                 // Method ch/qos/logback/core/rolling/helper/Compressor."<init>":(Lch/qos/logback/core/rolling/helper/CompressionMode;)V
     349: putfield      #51                 // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     352: aload_0
     353: getfield      #51                 // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     356: aload_0
     357: getfield      #7                  // Field context:Lch/qos/logback/core/Context;
     360: invokevirtual #52                 // Method ch/qos/logback/core/rolling/helper/Compressor.setContext:(Lch/qos/logback/core/Context;)V
     363: aload_0
     364: invokespecial #53                 // Method ch/qos/logback/core/rolling/RollingPolicyBase.start:()V
     367: return

  protected int getMaxWindowSize();
    Code:
       0: getstatic     #54                 // Field MAX_WINDOW_SIZE:I
       3: ireturn

  private java.lang.String transformFileNamePatternFromInt2Date(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #55                 // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.slashify:(Ljava/lang/String;)Ljava/lang/String;
       4: astore_2
       5: aload_2
       6: invokestatic  #56                 // Method ch/qos/logback/core/rolling/helper/FileFilterUtil.afterLastSlash:(Ljava/lang/String;)Ljava/lang/String;
       9: astore_3
      10: aload_3
      11: ldc           #57                 // String %i
      13: ldc           #58                 // String %d{yyyy-MM-dd_HHmm}
      15: invokevirtual #59                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
      18: areturn

  public void rollover() throws ch.qos.logback.core.rolling.RolloverFailure;
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxIndex:I
       4: iflt          255
       7: new           #60                 // class java/io/File
      10: dup
      11: aload_0
      12: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      15: aload_0
      16: getfield      #6                  // Field maxIndex:I
      19: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      22: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      25: astore_1
      26: aload_1
      27: invokevirtual #63                 // Method java/io/File.exists:()Z
      30: ifeq          38
      33: aload_1
      34: invokevirtual #64                 // Method java/io/File.delete:()Z
      37: pop
      38: aload_0
      39: getfield      #6                  // Field maxIndex:I
      42: iconst_1
      43: isub
      44: istore_2
      45: iload_2
      46: aload_0
      47: getfield      #5                  // Field minIndex:I
      50: if_icmplt     130
      53: aload_0
      54: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      57: iload_2
      58: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      61: astore_3
      62: new           #60                 // class java/io/File
      65: dup
      66: aload_3
      67: invokespecial #62                 // Method java/io/File."<init>":(Ljava/lang/String;)V
      70: astore        4
      72: aload         4
      74: invokevirtual #63                 // Method java/io/File.exists:()Z
      77: ifeq          101
      80: aload_0
      81: getfield      #4                  // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
      84: aload_3
      85: aload_0
      86: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      89: iload_2
      90: iconst_1
      91: iadd
      92: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
      95: invokevirtual #65                 // Method ch/qos/logback/core/rolling/helper/RenameUtil.rename:(Ljava/lang/String;Ljava/lang/String;)V
      98: goto          124
     101: aload_0
     102: new           #28                 // class java/lang/StringBuilder
     105: dup
     106: invokespecial #29                 // Method java/lang/StringBuilder."<init>":()V
     109: ldc           #66                 // String Skipping roll-over for inexistent file
     111: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: aload_3
     115: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     121: invokevirtual #67                 // Method addInfo:(Ljava/lang/String;)V
     124: iinc          2, -1
     127: goto          45
     130: getstatic     #68                 // Field ch/qos/logback/core/rolling/FixedWindowRollingPolicy$1.$SwitchMap$ch$qos$logback$core$rolling$helper$CompressionMode:[I
     133: aload_0
     134: getfield      #45                 // Field compressionMode:Lch/qos/logback/core/rolling/helper/CompressionMode;
     137: invokevirtual #69                 // Method ch/qos/logback/core/rolling/helper/CompressionMode.ordinal:()I
     140: iaload
     141: tableswitch   { // 1 to 3
                     1: 168
                     2: 193
                     3: 219
               default: 255
          }
     168: aload_0
     169: getfield      #4                  // Field util:Lch/qos/logback/core/rolling/helper/RenameUtil;
     172: aload_0
     173: invokevirtual #70                 // Method getActiveFileName:()Ljava/lang/String;
     176: aload_0
     177: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     180: aload_0
     181: getfield      #5                  // Field minIndex:I
     184: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     187: invokevirtual #65                 // Method ch/qos/logback/core/rolling/helper/RenameUtil.rename:(Ljava/lang/String;Ljava/lang/String;)V
     190: goto          255
     193: aload_0
     194: getfield      #51                 // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     197: aload_0
     198: invokevirtual #70                 // Method getActiveFileName:()Ljava/lang/String;
     201: aload_0
     202: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     205: aload_0
     206: getfield      #5                  // Field minIndex:I
     209: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     212: aconst_null
     213: invokevirtual #71                 // Method ch/qos/logback/core/rolling/helper/Compressor.compress:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     216: goto          255
     219: aload_0
     220: getfield      #51                 // Field compressor:Lch/qos/logback/core/rolling/helper/Compressor;
     223: aload_0
     224: invokevirtual #70                 // Method getActiveFileName:()Ljava/lang/String;
     227: aload_0
     228: getfield      #12                 // Field fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     231: aload_0
     232: getfield      #5                  // Field minIndex:I
     235: invokevirtual #61                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convertInt:(I)Ljava/lang/String;
     238: aload_0
     239: getfield      #48                 // Field zipEntryFileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     242: new           #72                 // class java/util/Date
     245: dup
     246: invokespecial #73                 // Method java/util/Date."<init>":()V
     249: invokevirtual #74                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convert:(Ljava/lang/Object;)Ljava/lang/String;
     252: invokevirtual #71                 // Method ch/qos/logback/core/rolling/helper/Compressor.compress:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     255: return

  public java.lang.String getActiveFileName();
    Code:
       0: aload_0
       1: invokevirtual #24                 // Method getParentsRawFileProperty:()Ljava/lang/String;
       4: areturn

  public int getMaxIndex();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxIndex:I
       4: ireturn

  public int getMinIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field minIndex:I
       4: ireturn

  public void setMaxIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxIndex:I
       5: return

  public void setMinIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field minIndex:I
       5: return

  static {};
    Code:
       0: bipush        20
       2: putstatic     #54                 // Field MAX_WINDOW_SIZE:I
       5: return
}
