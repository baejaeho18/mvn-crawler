Compiled from "DBAppenderBase.java"
public abstract class ch.qos.logback.core.db.DBAppenderBase<E> extends ch.qos.logback.core.UnsynchronizedAppenderBase<E> {
  protected ch.qos.logback.core.db.ConnectionSource connectionSource;

  protected boolean cnxSupportsGetGeneratedKeys;

  protected boolean cnxSupportsBatchUpdates;

  protected ch.qos.logback.core.db.dialect.SQLDialect sqlDialect;

  public ch.qos.logback.core.db.DBAppenderBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/UnsynchronizedAppenderBase."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field cnxSupportsBatchUpdates:Z
      14: return

  protected abstract java.lang.reflect.Method getGeneratedKeysMethod();

  protected abstract java.lang.String getInsertSQL();

  public void start();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
       4: ifnonnull     17
       7: new           #5                  // class java/lang/IllegalStateException
      10: dup
      11: ldc           #6                  // String DBAppender cannot function without a connection source
      13: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_0
      19: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
      22: invokeinterface #8,  1            // InterfaceMethod ch/qos/logback/core/db/ConnectionSource.getSQLDialectCode:()Lch/qos/logback/core/db/dialect/SQLDialectCode;
      27: invokestatic  #9                  // Method ch/qos/logback/core/db/dialect/DBUtil.getDialectFromCode:(Lch/qos/logback/core/db/dialect/SQLDialectCode;)Lch/qos/logback/core/db/dialect/SQLDialect;
      30: putfield      #10                 // Field sqlDialect:Lch/qos/logback/core/db/dialect/SQLDialect;
      33: aload_0
      34: invokevirtual #11                 // Method getGeneratedKeysMethod:()Ljava/lang/reflect/Method;
      37: ifnull        56
      40: aload_0
      41: aload_0
      42: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
      45: invokeinterface #12,  1           // InterfaceMethod ch/qos/logback/core/db/ConnectionSource.supportsGetGeneratedKeys:()Z
      50: putfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
      53: goto          61
      56: aload_0
      57: iconst_0
      58: putfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
      61: aload_0
      62: aload_0
      63: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
      66: invokeinterface #13,  1           // InterfaceMethod ch/qos/logback/core/db/ConnectionSource.supportsBatchUpdates:()Z
      71: putfield      #3                  // Field cnxSupportsBatchUpdates:Z
      74: aload_0
      75: getfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
      78: ifne          98
      81: aload_0
      82: getfield      #10                 // Field sqlDialect:Lch/qos/logback/core/db/dialect/SQLDialect;
      85: ifnonnull     98
      88: new           #5                  // class java/lang/IllegalStateException
      91: dup
      92: ldc           #14                 // String DBAppender cannot function if the JDBC driver does not support getGeneratedKeys method *and* without a specific SQL dialect
      94: invokespecial #7                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: aload_0
      99: invokespecial #15                 // Method ch/qos/logback/core/UnsynchronizedAppenderBase.start:()V
     102: return

  public ch.qos.logback.core.db.ConnectionSource getConnectionSource();
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
       4: areturn

  public void setConnectionSource(ch.qos.logback.core.db.ConnectionSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
       5: return

  public void append(E);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
       6: invokeinterface #16,  1           // InterfaceMethod ch/qos/logback/core/db/ConnectionSource.getConnection:()Ljava/sql/Connection;
      11: astore_2
      12: aload_2
      13: iconst_0
      14: invokeinterface #17,  2           // InterfaceMethod java/sql/Connection.setAutoCommit:(Z)V
      19: aload_0
      20: getfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
      23: ifeq          75
      26: ldc           #18                 // String EVENT_ID
      28: astore        4
      30: aload_0
      31: getfield      #4                  // Field connectionSource:Lch/qos/logback/core/db/ConnectionSource;
      34: invokeinterface #8,  1            // InterfaceMethod ch/qos/logback/core/db/ConnectionSource.getSQLDialectCode:()Lch/qos/logback/core/db/dialect/SQLDialectCode;
      39: getstatic     #19                 // Field ch/qos/logback/core/db/dialect/SQLDialectCode.POSTGRES_DIALECT:Lch/qos/logback/core/db/dialect/SQLDialectCode;
      42: if_acmpne     52
      45: aload         4
      47: invokevirtual #20                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      50: astore        4
      52: aload_2
      53: aload_0
      54: invokevirtual #21                 // Method getInsertSQL:()Ljava/lang/String;
      57: iconst_1
      58: anewarray     #22                 // class java/lang/String
      61: dup
      62: iconst_0
      63: aload         4
      65: aastore
      66: invokeinterface #23,  3           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;[Ljava/lang/String;)Ljava/sql/PreparedStatement;
      71: astore_3
      72: goto          86
      75: aload_2
      76: aload_0
      77: invokevirtual #21                 // Method getInsertSQL:()Ljava/lang/String;
      80: invokeinterface #24,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      85: astore_3
      86: aload_0
      87: dup
      88: astore        6
      90: monitorenter
      91: aload_0
      92: aload_1
      93: aload_2
      94: aload_3
      95: invokevirtual #25                 // Method subAppend:(Ljava/lang/Object;Ljava/sql/Connection;Ljava/sql/PreparedStatement;)V
      98: aload_0
      99: aload_3
     100: aload_2
     101: invokevirtual #26                 // Method selectEventId:(Ljava/sql/PreparedStatement;Ljava/sql/Connection;)J
     104: lstore        4
     106: aload         6
     108: monitorexit
     109: goto          120
     112: astore        7
     114: aload         6
     116: monitorexit
     117: aload         7
     119: athrow
     120: aload_0
     121: aload_1
     122: aload_2
     123: lload         4
     125: invokevirtual #27                 // Method secondarySubAppend:(Ljava/lang/Object;Ljava/sql/Connection;J)V
     128: aload_0
     129: aload_3
     130: invokevirtual #28                 // Method close:(Ljava/sql/Statement;)V
     133: aload_2
     134: invokeinterface #29,  1           // InterfaceMethod java/sql/Connection.commit:()V
     139: aload_2
     140: invokestatic  #30                 // Method ch/qos/logback/core/db/DBHelper.closeConnection:(Ljava/sql/Connection;)V
     143: goto          170
     146: astore_3
     147: aload_0
     148: ldc           #32                 // String problem appending event
     150: aload_3
     151: invokevirtual #33                 // Method addError:(Ljava/lang/String;Ljava/lang/Throwable;)V
     154: aload_2
     155: invokestatic  #30                 // Method ch/qos/logback/core/db/DBHelper.closeConnection:(Ljava/sql/Connection;)V
     158: goto          170
     161: astore        8
     163: aload_2
     164: invokestatic  #30                 // Method ch/qos/logback/core/db/DBHelper.closeConnection:(Ljava/sql/Connection;)V
     167: aload         8
     169: athrow
     170: return
    Exception table:
       from    to  target type
          91   109   112   any
         112   117   112   any
           2   139   146   Class java/lang/Throwable
           2   139   161   any
         146   154   161   any
         161   163   161   any

  protected abstract void subAppend(E, java.sql.Connection, java.sql.PreparedStatement) throws java.lang.Throwable;

  protected abstract void secondarySubAppend(E, java.sql.Connection, long) throws java.lang.Throwable;

  protected long selectEventId(java.sql.PreparedStatement, java.sql.Connection) throws java.sql.SQLException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: iconst_0
       6: istore        5
       8: aload_0
       9: getfield      #2                  // Field cnxSupportsGetGeneratedKeys:Z
      12: ifeq          73
      15: aload_0
      16: invokevirtual #11                 // Method getGeneratedKeysMethod:()Ljava/lang/reflect/Method;
      19: aload_1
      20: aconst_null
      21: checkcast     #34                 // class "[Ljava/lang/Object;"
      24: invokevirtual #35                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      27: checkcast     #36                 // class java/sql/ResultSet
      30: astore_3
      31: iconst_1
      32: istore        5
      34: goto          73
      37: astore        6
      39: aload         6
      41: invokevirtual #38                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      44: astore        7
      46: aload         7
      48: instanceof    #39                 // class java/sql/SQLException
      51: ifeq          60
      54: aload         7
      56: checkcast     #39                 // class java/sql/SQLException
      59: athrow
      60: aload         6
      62: athrow
      63: astore        6
      65: aload_0
      66: ldc           #41                 // String IllegalAccessException invoking PreparedStatement.getGeneratedKeys
      68: aload         6
      70: invokevirtual #42                 // Method addWarn:(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: iload         5
      75: ifne          115
      78: aload_2
      79: invokeinterface #43,  1           // InterfaceMethod java/sql/Connection.createStatement:()Ljava/sql/Statement;
      84: astore        4
      86: aload         4
      88: iconst_1
      89: invokeinterface #44,  2           // InterfaceMethod java/sql/Statement.setMaxRows:(I)V
      94: aload_0
      95: getfield      #10                 // Field sqlDialect:Lch/qos/logback/core/db/dialect/SQLDialect;
      98: invokeinterface #45,  1           // InterfaceMethod ch/qos/logback/core/db/dialect/SQLDialect.getSelectInsertId:()Ljava/lang/String;
     103: astore        6
     105: aload         4
     107: aload         6
     109: invokeinterface #46,  2           // InterfaceMethod java/sql/Statement.executeQuery:(Ljava/lang/String;)Ljava/sql/ResultSet;
     114: astore_3
     115: aload_3
     116: invokeinterface #47,  1           // InterfaceMethod java/sql/ResultSet.next:()Z
     121: pop
     122: aload_3
     123: iconst_1
     124: invokeinterface #48,  2           // InterfaceMethod java/sql/ResultSet.getLong:(I)J
     129: lstore        6
     131: aload_3
     132: invokeinterface #49,  1           // InterfaceMethod java/sql/ResultSet.close:()V
     137: aload_0
     138: aload         4
     140: invokevirtual #28                 // Method close:(Ljava/sql/Statement;)V
     143: lload         6
     145: lreturn
    Exception table:
       from    to  target type
          15    34    37   Class java/lang/reflect/InvocationTargetException
          15    34    63   Class java/lang/IllegalAccessException

  void close(java.sql.Statement) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: invokeinterface #50,  1           // InterfaceMethod java/sql/Statement.close:()V
      10: return

  public void stop();
    Code:
       0: aload_0
       1: invokespecial #51                 // Method ch/qos/logback/core/UnsynchronizedAppenderBase.stop:()V
       4: return
}
