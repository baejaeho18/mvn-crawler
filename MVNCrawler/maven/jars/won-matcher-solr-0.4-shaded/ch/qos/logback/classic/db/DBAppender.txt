Compiled from "DBAppender.java"
public class ch.qos.logback.classic.db.DBAppender extends ch.qos.logback.core.db.DBAppenderBase<ch.qos.logback.classic.spi.ILoggingEvent> {
  protected java.lang.String insertPropertiesSQL;

  protected java.lang.String insertExceptionSQL;

  protected java.lang.String insertSQL;

  protected static final java.lang.reflect.Method GET_GENERATED_KEYS_METHOD;

  private ch.qos.logback.classic.db.names.DBNameResolver dbNameResolver;

  static final int TIMESTMP_INDEX;

  static final int FORMATTED_MESSAGE_INDEX;

  static final int LOGGER_NAME_INDEX;

  static final int LEVEL_STRING_INDEX;

  static final int THREAD_NAME_INDEX;

  static final int REFERENCE_FLAG_INDEX;

  static final int ARG0_INDEX;

  static final int ARG1_INDEX;

  static final int ARG2_INDEX;

  static final int ARG3_INDEX;

  static final int CALLER_FILENAME_INDEX;

  static final int CALLER_CLASS_INDEX;

  static final int CALLER_METHOD_INDEX;

  static final int CALLER_LINE_INDEX;

  static final int EVENT_ID_INDEX;

  static final java.lang.StackTraceElement EMPTY_CALLER_DATA;

  public ch.qos.logback.classic.db.DBAppender();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/db/DBAppenderBase."<init>":()V
       4: return

  public void setDbNameResolver(ch.qos.logback.classic.db.names.DBNameResolver);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
       4: ifnonnull     18
       7: aload_0
       8: new           #3                  // class ch/qos/logback/classic/db/names/DefaultDBNameResolver
      11: dup
      12: invokespecial #4                  // Method ch/qos/logback/classic/db/names/DefaultDBNameResolver."<init>":()V
      15: putfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      18: aload_0
      19: aload_0
      20: getfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      23: invokestatic  #5                  // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertExceptionSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      26: putfield      #6                  // Field insertExceptionSQL:Ljava/lang/String;
      29: aload_0
      30: aload_0
      31: getfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      34: invokestatic  #7                  // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertPropertiesSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      37: putfield      #8                  // Field insertPropertiesSQL:Ljava/lang/String;
      40: aload_0
      41: aload_0
      42: getfield      #2                  // Field dbNameResolver:Lch/qos/logback/classic/db/names/DBNameResolver;
      45: invokestatic  #9                  // Method ch/qos/logback/classic/db/SQLBuilder.buildInsertSQL:(Lch/qos/logback/classic/db/names/DBNameResolver;)Ljava/lang/String;
      48: putfield      #10                 // Field insertSQL:Ljava/lang/String;
      51: aload_0
      52: invokespecial #11                 // Method ch/qos/logback/core/db/DBAppenderBase.start:()V
      55: return

  protected void subAppend(ch.qos.logback.classic.spi.ILoggingEvent, java.sql.Connection, java.sql.PreparedStatement) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: invokevirtual #12                 // Method bindLoggingEventWithInsertStatement:(Ljava/sql/PreparedStatement;Lch/qos/logback/classic/spi/ILoggingEvent;)V
       6: aload_0
       7: aload_3
       8: aload_1
       9: invokeinterface #13,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getArgumentArray:()[Ljava/lang/Object;
      14: invokevirtual #14                 // Method bindLoggingEventArgumentsWithPreparedStatement:(Ljava/sql/PreparedStatement;[Ljava/lang/Object;)V
      17: aload_0
      18: aload_3
      19: aload_1
      20: invokeinterface #15,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getCallerData:()[Ljava/lang/StackTraceElement;
      25: invokevirtual #16                 // Method bindCallerDataWithPreparedStatement:(Ljava/sql/PreparedStatement;[Ljava/lang/StackTraceElement;)V
      28: aload_3
      29: invokeinterface #17,  1           // InterfaceMethod java/sql/PreparedStatement.executeUpdate:()I
      34: istore        4
      36: iload         4
      38: iconst_1
      39: if_icmpeq     48
      42: aload_0
      43: ldc           #18                 // String Failed to insert loggingEvent
      45: invokevirtual #19                 // Method addWarn:(Ljava/lang/String;)V
      48: return

  protected void secondarySubAppend(ch.qos.logback.classic.spi.ILoggingEvent, java.sql.Connection, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method mergePropertyMaps:(Lch/qos/logback/classic/spi/ILoggingEvent;)Ljava/util/Map;
       5: astore        5
       7: aload_0
       8: aload         5
      10: aload_2
      11: lload_3
      12: invokevirtual #21                 // Method insertProperties:(Ljava/util/Map;Ljava/sql/Connection;J)V
      15: aload_1
      16: invokeinterface #22,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      21: ifnull        36
      24: aload_0
      25: aload_1
      26: invokeinterface #22,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThrowableProxy:()Lch/qos/logback/classic/spi/IThrowableProxy;
      31: aload_2
      32: lload_3
      33: invokevirtual #23                 // Method insertThrowable:(Lch/qos/logback/classic/spi/IThrowableProxy;Ljava/sql/Connection;J)V
      36: return

  void bindLoggingEventWithInsertStatement(java.sql.PreparedStatement, ch.qos.logback.classic.spi.ILoggingEvent) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: aload_2
       3: invokeinterface #24,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getTimeStamp:()J
       8: invokeinterface #25,  4           // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      13: aload_1
      14: iconst_2
      15: aload_2
      16: invokeinterface #26,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getFormattedMessage:()Ljava/lang/String;
      21: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      26: aload_1
      27: iconst_3
      28: aload_2
      29: invokeinterface #28,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLoggerName:()Ljava/lang/String;
      34: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      39: aload_1
      40: iconst_4
      41: aload_2
      42: invokeinterface #29,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLevel:()Lch/qos/logback/classic/Level;
      47: invokevirtual #30                 // Method ch/qos/logback/classic/Level.toString:()Ljava/lang/String;
      50: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      55: aload_1
      56: iconst_5
      57: aload_2
      58: invokeinterface #31,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getThreadName:()Ljava/lang/String;
      63: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      68: aload_1
      69: bipush        6
      71: aload_2
      72: invokestatic  #32                 // Method ch/qos/logback/classic/db/DBHelper.computeReferenceMask:(Lch/qos/logback/classic/spi/ILoggingEvent;)S
      75: invokeinterface #33,  3           // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      80: return

  void bindLoggingEventArgumentsWithPreparedStatement(java.sql.PreparedStatement, java.lang.Object[]) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: ifnull        9
       4: aload_2
       5: arraylength
       6: goto          10
       9: iconst_0
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     51
      20: iload         4
      22: iconst_4
      23: if_icmpge     51
      26: aload_1
      27: bipush        7
      29: iload         4
      31: iadd
      32: aload_0
      33: aload_2
      34: iload         4
      36: aaload
      37: invokevirtual #34                 // Method asStringTruncatedTo254:(Ljava/lang/Object;)Ljava/lang/String;
      40: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      45: iinc          4, 1
      48: goto          14
      51: iload_3
      52: iconst_4
      53: if_icmpge     83
      56: iload_3
      57: istore        4
      59: iload         4
      61: iconst_4
      62: if_icmpge     83
      65: aload_1
      66: bipush        7
      68: iload         4
      70: iadd
      71: aconst_null
      72: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      77: iinc          4, 1
      80: goto          59
      83: return

  java.lang.String asStringTruncatedTo254(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        11
       6: aload_1
       7: invokevirtual #35                 // Method java/lang/Object.toString:()Ljava/lang/String;
      10: astore_2
      11: aload_2
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_2
      18: invokevirtual #36                 // Method java/lang/String.length:()I
      21: sipush        254
      24: if_icmpgt     29
      27: aload_2
      28: areturn
      29: aload_2
      30: iconst_0
      31: sipush        254
      34: invokevirtual #37                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      37: areturn

  void bindCallerDataWithPreparedStatement(java.sql.PreparedStatement, java.lang.StackTraceElement[]) throws java.sql.SQLException;
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #38                 // Method extractFirstCaller:([Ljava/lang/StackTraceElement;)Ljava/lang/StackTraceElement;
       5: astore_3
       6: aload_1
       7: bipush        11
       9: aload_3
      10: invokevirtual #39                 // Method java/lang/StackTraceElement.getFileName:()Ljava/lang/String;
      13: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      18: aload_1
      19: bipush        12
      21: aload_3
      22: invokevirtual #40                 // Method java/lang/StackTraceElement.getClassName:()Ljava/lang/String;
      25: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      30: aload_1
      31: bipush        13
      33: aload_3
      34: invokevirtual #41                 // Method java/lang/StackTraceElement.getMethodName:()Ljava/lang/String;
      37: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      42: aload_1
      43: bipush        14
      45: aload_3
      46: invokevirtual #42                 // Method java/lang/StackTraceElement.getLineNumber:()I
      49: invokestatic  #43                 // Method java/lang/Integer.toString:(I)Ljava/lang/String;
      52: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      57: return

  private java.lang.StackTraceElement extractFirstCaller(java.lang.StackTraceElement[]);
    Code:
       0: getstatic     #44                 // Field EMPTY_CALLER_DATA:Ljava/lang/StackTraceElement;
       3: astore_2
       4: aload_0
       5: aload_1
       6: invokespecial #45                 // Method hasAtLeastOneNonNullElement:([Ljava/lang/StackTraceElement;)Z
       9: ifeq          16
      12: aload_1
      13: iconst_0
      14: aaload
      15: astore_2
      16: aload_2
      17: areturn

  private boolean hasAtLeastOneNonNullElement(java.lang.StackTraceElement[]);
    Code:
       0: aload_1
       1: ifnull        19
       4: aload_1
       5: arraylength
       6: ifle          19
       9: aload_1
      10: iconst_0
      11: aaload
      12: ifnull        19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ireturn

  java.util.Map<java.lang.String, java.lang.String> mergePropertyMaps(ch.qos.logback.classic.spi.ILoggingEvent);
    Code:
       0: new           #46                 // class java/util/HashMap
       3: dup
       4: invokespecial #47                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #48,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getLoggerContextVO:()Lch/qos/logback/classic/spi/LoggerContextVO;
      14: invokevirtual #49                 // Method ch/qos/logback/classic/spi/LoggerContextVO.getPropertyMap:()Ljava/util/Map;
      17: astore_3
      18: aload_1
      19: invokeinterface #50,  1           // InterfaceMethod ch/qos/logback/classic/spi/ILoggingEvent.getMDCPropertyMap:()Ljava/util/Map;
      24: astore        4
      26: aload_3
      27: ifnull        37
      30: aload_2
      31: aload_3
      32: invokeinterface #51,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      37: aload         4
      39: ifnull        50
      42: aload_2
      43: aload         4
      45: invokeinterface #51,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      50: aload_2
      51: areturn

  protected java.lang.reflect.Method getGeneratedKeysMethod();
    Code:
       0: getstatic     #52                 // Field GET_GENERATED_KEYS_METHOD:Ljava/lang/reflect/Method;
       3: areturn

  protected java.lang.String getInsertSQL();
    Code:
       0: aload_0
       1: getfield      #10                 // Field insertSQL:Ljava/lang/String;
       4: areturn

  protected void insertProperties(java.util.Map<java.lang.String, java.lang.String>, java.sql.Connection, long) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: invokeinterface #53,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       6: astore        5
       8: aload         5
      10: invokeinterface #54,  1           // InterfaceMethod java/util/Set.size:()I
      15: ifle          153
      18: aload_2
      19: aload_0
      20: getfield      #8                  // Field insertPropertiesSQL:Ljava/lang/String;
      23: invokeinterface #55,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      28: astore        6
      30: aload         5
      32: invokeinterface #56,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      37: astore        7
      39: aload         7
      41: invokeinterface #57,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          131
      49: aload         7
      51: invokeinterface #58,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      56: checkcast     #59                 // class java/lang/String
      59: astore        8
      61: aload_1
      62: aload         8
      64: invokeinterface #60,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      69: checkcast     #59                 // class java/lang/String
      72: astore        9
      74: aload         6
      76: iconst_1
      77: lload_3
      78: invokeinterface #25,  4           // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
      83: aload         6
      85: iconst_2
      86: aload         8
      88: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      93: aload         6
      95: iconst_3
      96: aload         9
      98: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
     103: aload_0
     104: getfield      #61                 // Field cnxSupportsBatchUpdates:Z
     107: ifeq          120
     110: aload         6
     112: invokeinterface #62,  1           // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
     117: goto          128
     120: aload         6
     122: invokeinterface #63,  1           // InterfaceMethod java/sql/PreparedStatement.execute:()Z
     127: pop
     128: goto          39
     131: aload_0
     132: getfield      #61                 // Field cnxSupportsBatchUpdates:Z
     135: ifeq          146
     138: aload         6
     140: invokeinterface #64,  1           // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
     145: pop
     146: aload         6
     148: invokeinterface #65,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
     153: return

  void updateExceptionStatement(java.sql.PreparedStatement, java.lang.String, short, long) throws java.sql.SQLException;
    Code:
       0: aload_1
       1: iconst_1
       2: lload         4
       4: invokeinterface #25,  4           // InterfaceMethod java/sql/PreparedStatement.setLong:(IJ)V
       9: aload_1
      10: iconst_2
      11: iload_3
      12: invokeinterface #33,  3           // InterfaceMethod java/sql/PreparedStatement.setShort:(IS)V
      17: aload_1
      18: iconst_3
      19: aload_2
      20: invokeinterface #27,  3           // InterfaceMethod java/sql/PreparedStatement.setString:(ILjava/lang/String;)V
      25: aload_0
      26: getfield      #61                 // Field cnxSupportsBatchUpdates:Z
      29: ifeq          41
      32: aload_1
      33: invokeinterface #62,  1           // InterfaceMethod java/sql/PreparedStatement.addBatch:()V
      38: goto          48
      41: aload_1
      42: invokeinterface #63,  1           // InterfaceMethod java/sql/PreparedStatement.execute:()Z
      47: pop
      48: return

  short buildExceptionStatement(ch.qos.logback.classic.spi.IThrowableProxy, short, java.sql.PreparedStatement, long) throws java.sql.SQLException;
    Code:
       0: new           #66                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
       7: astore        6
       9: aload         6
      11: aload_1
      12: invokestatic  #68                 // Method ch/qos/logback/classic/spi/ThrowableProxyUtil.subjoinFirstLine:(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/IThrowableProxy;)V
      15: aload_0
      16: aload_3
      17: aload         6
      19: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      22: iload_2
      23: iload_2
      24: iconst_1
      25: iadd
      26: i2s
      27: istore_2
      28: lload         4
      30: invokevirtual #70                 // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
      33: aload_1
      34: invokeinterface #71,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCommonFrames:()I
      39: istore        7
      41: aload_1
      42: invokeinterface #72,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getStackTraceElementProxyArray:()[Lch/qos/logback/classic/spi/StackTraceElementProxy;
      47: astore        8
      49: iconst_0
      50: istore        9
      52: iload         9
      54: aload         8
      56: arraylength
      57: iload         7
      59: isub
      60: if_icmpge     114
      63: new           #66                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
      70: astore        10
      72: aload         10
      74: bipush        9
      76: invokevirtual #73                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      79: pop
      80: aload         10
      82: aload         8
      84: iload         9
      86: aaload
      87: invokestatic  #74                 // Method ch/qos/logback/classic/spi/ThrowableProxyUtil.subjoinSTEP:(Ljava/lang/StringBuilder;Lch/qos/logback/classic/spi/StackTraceElementProxy;)V
      90: aload_0
      91: aload_3
      92: aload         10
      94: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: iload_2
      98: iload_2
      99: iconst_1
     100: iadd
     101: i2s
     102: istore_2
     103: lload         4
     105: invokevirtual #70                 // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
     108: iinc          9, 1
     111: goto          52
     114: iload         7
     116: ifle          169
     119: new           #66                 // class java/lang/StringBuilder
     122: dup
     123: invokespecial #67                 // Method java/lang/StringBuilder."<init>":()V
     126: astore        9
     128: aload         9
     130: bipush        9
     132: invokevirtual #73                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     135: ldc           #75                 // String ...
     137: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: iload         7
     142: invokevirtual #77                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     145: ldc           #78                 // String  common frames omitted
     147: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: pop
     151: aload_0
     152: aload_3
     153: aload         9
     155: invokevirtual #69                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     158: iload_2
     159: iload_2
     160: iconst_1
     161: iadd
     162: i2s
     163: istore_2
     164: lload         4
     166: invokevirtual #70                 // Method updateExceptionStatement:(Ljava/sql/PreparedStatement;Ljava/lang/String;SJ)V
     169: iload_2
     170: ireturn

  protected void insertThrowable(ch.qos.logback.classic.spi.IThrowableProxy, java.sql.Connection, long) throws java.sql.SQLException;
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #6                  // Field insertExceptionSQL:Ljava/lang/String;
       5: invokeinterface #55,  2           // InterfaceMethod java/sql/Connection.prepareStatement:(Ljava/lang/String;)Ljava/sql/PreparedStatement;
      10: astore        5
      12: iconst_0
      13: istore        6
      15: aload_1
      16: ifnull        41
      19: aload_0
      20: aload_1
      21: iload         6
      23: aload         5
      25: lload_3
      26: invokevirtual #79                 // Method buildExceptionStatement:(Lch/qos/logback/classic/spi/IThrowableProxy;SLjava/sql/PreparedStatement;J)S
      29: istore        6
      31: aload_1
      32: invokeinterface #80,  1           // InterfaceMethod ch/qos/logback/classic/spi/IThrowableProxy.getCause:()Lch/qos/logback/classic/spi/IThrowableProxy;
      37: astore_1
      38: goto          15
      41: aload_0
      42: getfield      #61                 // Field cnxSupportsBatchUpdates:Z
      45: ifeq          56
      48: aload         5
      50: invokeinterface #64,  1           // InterfaceMethod java/sql/PreparedStatement.executeBatch:()[I
      55: pop
      56: aload         5
      58: invokeinterface #65,  1           // InterfaceMethod java/sql/PreparedStatement.close:()V
      63: return

  protected void secondarySubAppend(java.lang.Object, java.sql.Connection, long) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #81                 // class ch/qos/logback/classic/spi/ILoggingEvent
       5: aload_2
       6: lload_3
       7: invokevirtual #82                 // Method secondarySubAppend:(Lch/qos/logback/classic/spi/ILoggingEvent;Ljava/sql/Connection;J)V
      10: return

  protected void subAppend(java.lang.Object, java.sql.Connection, java.sql.PreparedStatement) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #81                 // class ch/qos/logback/classic/spi/ILoggingEvent
       5: aload_2
       6: aload_3
       7: invokevirtual #83                 // Method subAppend:(Lch/qos/logback/classic/spi/ILoggingEvent;Ljava/sql/Connection;Ljava/sql/PreparedStatement;)V
      10: return

  static {};
    Code:
       0: invokestatic  #84                 // Method ch/qos/logback/classic/spi/CallerData.naInstance:()Ljava/lang/StackTraceElement;
       3: putstatic     #44                 // Field EMPTY_CALLER_DATA:Ljava/lang/StackTraceElement;
       6: ldc_w         #85                 // class java/sql/PreparedStatement
       9: ldc           #86                 // String getGeneratedKeys
      11: aconst_null
      12: checkcast     #87                 // class "[Ljava/lang/Class;"
      15: invokevirtual #88                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      18: astore_0
      19: goto          25
      22: astore_1
      23: aconst_null
      24: astore_0
      25: aload_0
      26: putstatic     #52                 // Field GET_GENERATED_KEYS_METHOD:Ljava/lang/reflect/Method;
      29: return
    Exception table:
       from    to  target type
           6    19    22   Class java/lang/Exception
}
