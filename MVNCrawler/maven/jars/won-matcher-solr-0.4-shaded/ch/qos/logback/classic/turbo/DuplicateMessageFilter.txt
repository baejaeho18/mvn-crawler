Compiled from "DuplicateMessageFilter.java"
public class ch.qos.logback.classic.turbo.DuplicateMessageFilter extends ch.qos.logback.classic.turbo.TurboFilter {
  public static final int DEFAULT_CACHE_SIZE;

  public static final int DEFAULT_ALLOWED_REPETITIONS;

  public int allowedRepetitions;

  public int cacheSize;

  private ch.qos.logback.classic.turbo.LRUMessageCache msgCache;

  public ch.qos.logback.classic.turbo.DuplicateMessageFilter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/classic/turbo/TurboFilter."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #2                  // Field allowedRepetitions:I
       9: aload_0
      10: bipush        100
      12: putfield      #3                  // Field cacheSize:I
      15: return

  public void start();
    Code:
       0: aload_0
       1: new           #4                  // class ch/qos/logback/classic/turbo/LRUMessageCache
       4: dup
       5: aload_0
       6: getfield      #3                  // Field cacheSize:I
       9: invokespecial #5                  // Method ch/qos/logback/classic/turbo/LRUMessageCache."<init>":(I)V
      12: putfield      #6                  // Field msgCache:Lch/qos/logback/classic/turbo/LRUMessageCache;
      15: aload_0
      16: invokespecial #7                  // Method ch/qos/logback/classic/turbo/TurboFilter.start:()V
      19: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #6                  // Field msgCache:Lch/qos/logback/classic/turbo/LRUMessageCache;
       4: invokevirtual #8                  // Method ch/qos/logback/classic/turbo/LRUMessageCache.clear:()V
       7: aload_0
       8: aconst_null
       9: putfield      #6                  // Field msgCache:Lch/qos/logback/classic/turbo/LRUMessageCache;
      12: aload_0
      13: invokespecial #9                  // Method ch/qos/logback/classic/turbo/TurboFilter.stop:()V
      16: return

  public ch.qos.logback.core.spi.FilterReply decide(org.slf4j.Marker, ch.qos.logback.classic.Logger, ch.qos.logback.classic.Level, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field msgCache:Lch/qos/logback/classic/turbo/LRUMessageCache;
       4: aload         4
       6: invokevirtual #10                 // Method ch/qos/logback/classic/turbo/LRUMessageCache.getMessageCountAndThenIncrement:(Ljava/lang/String;)I
       9: istore        7
      11: iload         7
      13: aload_0
      14: getfield      #2                  // Field allowedRepetitions:I
      17: if_icmpgt     24
      20: getstatic     #11                 // Field ch/qos/logback/core/spi/FilterReply.NEUTRAL:Lch/qos/logback/core/spi/FilterReply;
      23: areturn
      24: getstatic     #12                 // Field ch/qos/logback/core/spi/FilterReply.DENY:Lch/qos/logback/core/spi/FilterReply;
      27: areturn

  public int getAllowedRepetitions();
    Code:
       0: aload_0
       1: getfield      #2                  // Field allowedRepetitions:I
       4: ireturn

  public void setAllowedRepetitions(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field allowedRepetitions:I
       5: return

  public int getCacheSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field cacheSize:I
       4: ireturn

  public void setCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field cacheSize:I
       5: return
}
