Compiled from "NodeHash.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NodeHash implements java.lang.Comparable<de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NodeHash> {
  private java.lang.String var;

  private java.math.BigInteger hash;

  public de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NodeHash(java.lang.String, java.math.BigInteger);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field var:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field hash:Ljava/math/BigInteger;
      14: return

  public java.lang.String getVar();
    Code:
       0: aload_0
       1: getfield      #2                  // Field var:Ljava/lang/String;
       4: areturn

  public java.math.BigInteger getHash();
    Code:
       0: aload_0
       1: getfield      #3                  // Field hash:Ljava/math/BigInteger;
       4: areturn

  public void setHash(java.math.BigInteger);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field hash:Ljava/math/BigInteger;
       5: return

  public int compareTo(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NodeHash);
    Code:
       0: aload_0
       1: getfield      #3                  // Field hash:Ljava/math/BigInteger;
       4: aload_1
       5: invokevirtual #4                  // Method getHash:()Ljava/math/BigInteger;
       8: invokevirtual #5                  // Method java/math/BigInteger.compareTo:(Ljava/math/BigInteger;)I
      11: ireturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
       5: invokevirtual #7                  // Method compareTo:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash;)I
       8: ireturn
}
