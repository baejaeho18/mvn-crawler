Compiled from "Signer.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.generic.Signer {
  public de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.generic.Signer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void sign(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.security.Key, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.hasSignature:()Z
       4: ifne          17
       7: new           #3                  // class java/lang/Exception
      10: dup
      11: ldc           #4                  // String GraphCollection has no signature data. Call \'canonicalize\' and \'hash\' methods first.
      13: invokespecial #5                  // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #6                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
      21: astore_3
      22: aload_1
      23: invokeinterface #7,  1            // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
      28: invokestatic  #8                  // Method javax/crypto/Cipher.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;
      31: astore        4
      33: aload         4
      35: iconst_1
      36: aload_1
      37: invokevirtual #10                 // Method javax/crypto/Cipher.init:(ILjava/security/Key;)V
      40: new           #11                 // class java/lang/String
      43: dup
      44: aload         4
      46: aload_3
      47: invokevirtual #12                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.getHash:()Ljava/math/BigInteger;
      50: invokevirtual #13                 // Method java/math/BigInteger.toByteArray:()[B
      53: invokevirtual #14                 // Method javax/crypto/Cipher.doFinal:([B)[B
      56: invokestatic  #15                 // Method org/apache/commons/codec/binary/Base64.encodeBase64:([B)[B
      59: invokespecial #16                 // Method java/lang/String."<init>":([B)V
      62: astore        5
      64: aload_3
      65: new           #17                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #19                 // String \"
      74: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload         5
      79: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: ldc           #19                 // String \"
      84: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokevirtual #22                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setSignature:(Ljava/lang/String;)V
      93: aload_3
      94: aload_1
      95: invokeinterface #7,  1            // InterfaceMethod java/security/Key.getAlgorithm:()Ljava/lang/String;
     100: invokevirtual #23                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
     103: invokevirtual #24                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setSignatureMethod:(Ljava/lang/String;)V
     106: aload_3
     107: aload_2
     108: invokevirtual #25                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setVerificationCertificate:(Ljava/lang/String;)V
     111: return
}
