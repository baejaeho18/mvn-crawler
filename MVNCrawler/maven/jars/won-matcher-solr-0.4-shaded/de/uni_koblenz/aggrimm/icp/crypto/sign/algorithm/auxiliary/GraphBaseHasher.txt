Compiled from "GraphBaseHasher.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.GraphBaseHasher {
  public de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.GraphBaseHasher();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.math.BigInteger calculate(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph, java.security.MessageDigest) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #3                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getDepth:()I
       9: iconst_m1
      10: if_icmpne     17
      13: getstatic     #4                  // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      16: areturn
      17: aload_2
      18: invokevirtual #5                  // Method java/lang/String.length:()I
      21: ifne          38
      24: aload_0
      25: iconst_0
      26: invokevirtual #6                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.tripleCount:(Z)I
      29: iconst_2
      30: iadd
      31: istore_3
      32: iload_3
      33: i2l
      34: invokestatic  #7                  // Method java/math/BigInteger.valueOf:(J)Ljava/math/BigInteger;
      37: areturn
      38: new           #8                  // class java/math/BigInteger
      41: dup
      42: aload_1
      43: aload_2
      44: ldc           #9                  // String UTF8
      46: invokevirtual #10                 // Method java/lang/String.getBytes:(Ljava/lang/String;)[B
      49: invokevirtual #11                 // Method java/security/MessageDigest.digest:([B)[B
      52: invokespecial #12                 // Method java/math/BigInteger."<init>":([B)V
      55: areturn
}
