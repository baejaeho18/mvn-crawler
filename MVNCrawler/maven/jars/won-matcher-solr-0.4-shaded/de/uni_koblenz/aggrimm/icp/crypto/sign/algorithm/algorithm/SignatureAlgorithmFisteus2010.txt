Compiled from "SignatureAlgorithmFisteus2010.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.algorithm.SignatureAlgorithmFisteus2010 implements de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.SignatureAlgorithmInterface {
  private static final java.math.BigInteger N_XOR;

  private static final java.math.BigInteger N_MUL;

  private java.security.MessageDigest digestGen;

  private int collisions;

  private static final java.math.BigInteger kSubj;

  private static final java.math.BigInteger kPred;

  private static final java.math.BigInteger kObj;

  private static final java.math.BigInteger kDType;

  private static final java.math.BigInteger kLang;

  private static final java.math.BigInteger kExist;

  private static final java.math.BigInteger kLab;

  private static final java.math.BigInteger kLit;

  public de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.algorithm.SignatureAlgorithmFisteus2010();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void canonicalize(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String sha-256
       4: invokevirtual #3                  // Method canonicalize:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/lang/String;)V
       7: return

  public void canonicalize(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
       4: astore_3
       5: aload_0
       6: aload_2
       7: invokestatic  #5                  // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      10: putfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
      13: aload_3
      14: aload_0
      15: getfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
      18: invokevirtual #7                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setDigestGen:(Ljava/security/MessageDigest;)V
      21: aload_1
      22: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      25: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          61
      40: aload         4
      42: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      50: astore        5
      52: aload_0
      53: aload         5
      55: invokespecial #13                 // Method hashGraphPrepare:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      58: goto          30
      61: iconst_0
      62: istore        4
      64: iload         4
      66: bipush        10
      68: if_icmpge     252
      71: aload_0
      72: getfield      #14                 // Field collisions:I
      75: istore        5
      77: aload_0
      78: iconst_0
      79: putfield      #14                 // Field collisions:I
      82: aload_1
      83: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      86: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      89: astore        6
      91: aload         6
      93: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          122
     101: aload         6
     103: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     111: astore        7
     113: aload_0
     114: aload         7
     116: invokespecial #15                 // Method hashGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     119: goto          91
     122: aload_1
     123: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
     126: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     129: astore        6
     131: aload         6
     133: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     138: ifeq          162
     141: aload         6
     143: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     148: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     151: astore        7
     153: aload_0
     154: aload         7
     156: invokespecial #16                 // Method computeHashVars:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     159: goto          131
     162: aload_1
     163: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
     166: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     169: astore        6
     171: aload         6
     173: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     178: ifeq          202
     181: aload         6
     183: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     188: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     191: astore        7
     193: aload_0
     194: aload         7
     196: invokespecial #17                 // Method hashGraphCountCollisions:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     199: goto          171
     202: aload_0
     203: getfield      #14                 // Field collisions:I
     206: ifne          212
     209: goto          252
     212: iload         4
     214: ifle          229
     217: aload_0
     218: getfield      #14                 // Field collisions:I
     221: iload         5
     223: if_icmplt     229
     226: goto          252
     229: iload         4
     231: bipush        9
     233: if_icmpne     246
     236: new           #18                 // class java/lang/Exception
     239: dup
     240: ldc           #19                 // String Failed to hash graph collection. Unresolved collisions after 10 iterations.
     242: invokespecial #20                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     245: athrow
     246: iinc          4, 1
     249: goto          64
     252: aload_1
     253: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
     256: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     259: astore        4
     261: aload         4
     263: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     268: ifeq          292
     271: aload         4
     273: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     278: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     281: astore        5
     283: aload_0
     284: aload         5
     286: invokespecial #21                 // Method canonicalizeGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     289: goto          261
     292: aload_1
     293: invokevirtual #4                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
     296: new           #22                 // class java/lang/StringBuilder
     299: dup
     300: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     303: invokestatic  #24                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getCanonicalizationPrefix:()Ljava/lang/String;
     306: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     309: aload_0
     310: invokevirtual #26                 // Method getName:()Ljava/lang/String;
     313: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     316: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     319: invokevirtual #28                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setCanonicalizationMethod:(Ljava/lang/String;)V
     322: return

  private void canonicalizeGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph) throws java.lang.Exception;
    Code:
       0: iconst_1
       1: istore_2
       2: aload_1
       3: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
       6: ifnull        147
       9: aload_1
      10: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      13: invokestatic  #30                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      16: aload_1
      17: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      20: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      23: astore_3
      24: aload_3
      25: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      30: ifeq          147
      33: aload_3
      34: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      39: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
      42: astore        4
      44: aload         4
      46: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getVar:()Ljava/lang/String;
      49: astore        5
      51: aload_1
      52: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
      55: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      58: astore        6
      60: aload         6
      62: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      67: ifeq          141
      70: aload         6
      72: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      77: checkcast     #35                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      80: astore        7
      82: iconst_0
      83: istore        8
      85: iload         8
      87: iconst_2
      88: if_icmpgt     138
      91: aload         7
      93: iload         8
      95: invokevirtual #36                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getByIndex:(I)Ljava/lang/String;
      98: aload         5
     100: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     103: ifeq          132
     106: aload         7
     108: iload         8
     110: new           #22                 // class java/lang/StringBuilder
     113: dup
     114: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     117: ldc           #38                 // String _:bn
     119: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: iload_2
     123: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     126: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     129: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.setByIndex:(ILjava/lang/String;)V
     132: iinc          8, 2
     135: goto          85
     138: goto          60
     141: iinc          2, 1
     144: goto          24
     147: aload_1
     148: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     151: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     154: astore_3
     155: aload_3
     156: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     161: ifeq          277
     164: aload_3
     165: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     170: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     173: astore        4
     175: aload         4
     177: invokevirtual #42                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     180: ldc           #43                 // String _
     182: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     185: ifeq          274
     188: iconst_1
     189: istore_2
     190: aload_1
     191: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
     194: ifnull        274
     197: aload_1
     198: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
     201: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     204: astore        5
     206: aload         5
     208: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     213: ifeq          274
     216: aload         5
     218: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     223: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
     226: astore        6
     228: aload         4
     230: invokevirtual #42                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     233: aload         6
     235: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getVar:()Ljava/lang/String;
     238: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     241: ifeq          268
     244: aload         4
     246: new           #22                 // class java/lang/StringBuilder
     249: dup
     250: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     253: ldc           #38                 // String _:bn
     255: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     258: iload_2
     259: invokevirtual #39                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     262: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     265: invokevirtual #45                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.setName:(Ljava/lang/String;)V
     268: iinc          2, 1
     271: goto          206
     274: goto          155
     277: aload_1
     278: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     281: invokestatic  #30                 // Method java/util/Collections.sort:(Ljava/util/List;)V
     284: aload_1
     285: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     288: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     291: astore_3
     292: aload_3
     293: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     298: ifeq          321
     301: aload_3
     302: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     307: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     310: astore        4
     312: aload_0
     313: aload         4
     315: invokespecial #21                 // Method canonicalizeGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     318: goto          292
     321: return

  public void postCanonicalize(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: return

  public void hash(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
       4: astore_3
       5: aload_0
       6: aload_2
       7: invokestatic  #5                  // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
      10: putfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
      13: aload_3
      14: aload_0
      15: getfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
      18: invokevirtual #7                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setDigestGen:(Ljava/security/MessageDigest;)V
      21: aload_1
      22: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      25: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      28: astore        4
      30: aload         4
      32: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      37: ifeq          61
      40: aload         4
      42: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      50: astore        5
      52: aload_0
      53: aload         5
      55: invokespecial #13                 // Method hashGraphPrepare:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      58: goto          30
      61: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      64: astore        4
      66: aload_1
      67: invokevirtual #8                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      70: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      73: astore        5
      75: aload         5
      77: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          128
      85: aload         5
      87: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      95: astore        6
      97: aload_0
      98: aload         6
     100: invokespecial #15                 // Method hashGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     103: aload_0
     104: aload         6
     106: invokespecial #16                 // Method computeHashVars:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     109: aload         4
     111: aload_0
     112: aload         6
     114: invokespecial #47                 // Method combineVarsAndStatements:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)Ljava/math/BigInteger;
     117: getstatic     #48                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
     120: invokestatic  #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
     123: astore        4
     125: goto          75
     128: aload_3
     129: new           #22                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     136: invokestatic  #50                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getDigestPrefix:()Ljava/lang/String;
     139: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: aload_0
     143: invokevirtual #26                 // Method getName:()Ljava/lang/String;
     146: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     149: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     152: invokevirtual #51                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setGraphDigestMethod:(Ljava/lang/String;)V
     155: aload_3
     156: aload         4
     158: invokevirtual #52                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setHash:(Ljava/math/BigInteger;)V
     161: return

  private void hashGraphPrepare(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph);
    Code:
       0: aload_1
       1: new           #53                 // class java/util/ArrayList
       4: dup
       5: invokespecial #54                 // Method java/util/ArrayList."<init>":()V
       8: invokevirtual #55                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.setVariableHashes:(Ljava/util/ArrayList;)V
      11: aload_1
      12: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
      15: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          46
      28: aload_2
      29: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      37: astore_3
      38: aload_0
      39: aload_3
      40: invokespecial #13                 // Method hashGraphPrepare:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      43: goto          19
      46: return

  private void hashGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
       4: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          36
      17: aload_2
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      26: astore_3
      27: aload_0
      28: aload_3
      29: aload_1
      30: invokespecial #56                 // Method hashTriple:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      33: goto          8
      36: aload_1
      37: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
      40: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      43: astore_2
      44: aload_2
      45: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      50: ifeq          71
      53: aload_2
      54: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      59: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      62: astore_3
      63: aload_0
      64: aload_3
      65: invokespecial #15                 // Method hashGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      68: goto          44
      71: return

  private void hashGraphCountCollisions(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
       4: new           #57                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/algorithm/SignatureAlgorithmFisteus2010$1
       7: dup
       8: aload_0
       9: invokespecial #58                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/algorithm/SignatureAlgorithmFisteus2010$1."<init>":(Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/algorithm/SignatureAlgorithmFisteus2010;)V
      12: invokestatic  #59                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
      15: aconst_null
      16: astore_2
      17: aload_1
      18: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
      21: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      24: astore_3
      25: aload_3
      26: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          77
      34: aload_3
      35: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      40: checkcast     #35                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      43: astore        4
      45: aload         4
      47: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getHash:()Ljava/math/BigInteger;
      50: astore        5
      52: aload         5
      54: aload_2
      55: invokevirtual #61                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
      58: ifeq          71
      61: aload_0
      62: dup
      63: getfield      #14                 // Field collisions:I
      66: iconst_1
      67: iadd
      68: putfield      #14                 // Field collisions:I
      71: aload         5
      73: astore_2
      74: goto          25
      77: aload_1
      78: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      81: invokestatic  #30                 // Method java/util/Collections.sort:(Ljava/util/List;)V
      84: aconst_null
      85: astore_2
      86: aload_1
      87: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      90: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      93: astore_3
      94: aload_3
      95: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     100: ifeq          146
     103: aload_3
     104: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     109: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
     112: astore        4
     114: aload         4
     116: invokevirtual #62                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getHash:()Ljava/math/BigInteger;
     119: astore        5
     121: aload         5
     123: aload_2
     124: invokevirtual #61                 // Method java/math/BigInteger.equals:(Ljava/lang/Object;)Z
     127: ifeq          140
     130: aload_0
     131: dup
     132: getfield      #14                 // Field collisions:I
     135: iconst_1
     136: iadd
     137: putfield      #14                 // Field collisions:I
     140: aload         5
     142: astore_2
     143: goto          94
     146: aload_1
     147: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     150: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     153: astore_3
     154: aload_3
     155: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     160: ifeq          183
     163: aload_3
     164: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     169: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     172: astore        4
     174: aload_0
     175: aload         4
     177: invokespecial #17                 // Method hashGraphCountCollisions:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     180: goto          154
     183: return

  private void hashTriple(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.Triple, de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokestatic  #63                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.isRelevantForHash:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;)Z
       4: ifeq          89
       7: aload_1
       8: aload_0
       9: aload_1
      10: invokevirtual #64                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getSubject:()Ljava/lang/String;
      13: aload_2
      14: invokespecial #65                 // Method hashResource:(Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)Ljava/math/BigInteger;
      17: getstatic     #66                 // Field kSubj:Ljava/math/BigInteger;
      20: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      23: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
      26: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      29: aload_0
      30: aload_1
      31: invokevirtual #70                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getPredicate:()Ljava/lang/String;
      34: aload_2
      35: invokespecial #65                 // Method hashResource:(Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)Ljava/math/BigInteger;
      38: getstatic     #71                 // Field kPred:Ljava/math/BigInteger;
      41: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      44: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
      47: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      50: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      53: aload_0
      54: aload_1
      55: invokevirtual #73                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getObject:()Ljava/lang/String;
      58: aload_2
      59: invokespecial #65                 // Method hashResource:(Ljava/lang/String;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)Ljava/math/BigInteger;
      62: getstatic     #74                 // Field kObj:Ljava/math/BigInteger;
      65: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      68: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
      71: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      74: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
      80: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      83: invokevirtual #75                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.setHash:(Ljava/math/BigInteger;)V
      86: goto          96
      89: aload_1
      90: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      93: invokevirtual #75                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.setHash:(Ljava/math/BigInteger;)V
      96: return

  private java.math.BigInteger hashResource(java.lang.String, de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph) throws java.lang.Exception;
    Code:
       0: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
       3: astore_3
       4: aload_1
       5: invokevirtual #76                 // Method java/lang/String.length:()I
       8: ifle          578
      11: aload_1
      12: iconst_0
      13: invokevirtual #77                 // Method java/lang/String.charAt:(I)C
      16: istore        4
      18: iload         4
      20: lookupswitch  { // 3
                    34: 84
                    60: 56
                    95: 467
               default: 546
          }
      56: aload_0
      57: aload_1
      58: iconst_1
      59: aload_1
      60: invokevirtual #76                 // Method java/lang/String.length:()I
      63: iconst_1
      64: isub
      65: invokevirtual #78                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      68: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
      71: getstatic     #80                 // Field kLab:Ljava/math/BigInteger;
      74: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      77: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
      80: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      83: areturn
      84: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      87: astore        5
      89: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      92: astore        6
      94: getstatic     #46                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      97: astore        7
      99: aload_1
     100: ldc           #81                 // String \"
     102: invokevirtual #82                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
     105: ifeq          128
     108: aload_0
     109: aload_1
     110: iconst_1
     111: aload_1
     112: invokevirtual #76                 // Method java/lang/String.length:()I
     115: iconst_1
     116: isub
     117: invokevirtual #78                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     120: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     123: astore        7
     125: goto          436
     128: aload_1
     129: invokevirtual #76                 // Method java/lang/String.length:()I
     132: istore        8
     134: iconst_1
     135: istore        9
     137: iload         9
     139: iload         8
     141: if_icmpge     164
     144: aload_1
     145: iload         9
     147: invokevirtual #77                 // Method java/lang/String.charAt:(I)C
     150: bipush        34
     152: if_icmpne     158
     155: goto          164
     158: iinc          9, 1
     161: goto          137
     164: aload_0
     165: aload_1
     166: iconst_1
     167: iload         9
     169: invokevirtual #78                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     172: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     175: astore        7
     177: iload         9
     179: iconst_2
     180: iadd
     181: iload         8
     183: if_icmpge     436
     186: aload_1
     187: iload         9
     189: iconst_1
     190: iadd
     191: invokevirtual #77                 // Method java/lang/String.charAt:(I)C
     194: bipush        64
     196: if_icmpne     306
     199: aload_1
     200: ldc           #83                 // String ^^
     202: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     205: ifeq          277
     208: aload_1
     209: iload         9
     211: iconst_2
     212: iadd
     213: invokevirtual #85                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     216: ldc           #86                 // String \\^\\^
     218: invokevirtual #87                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     221: astore        10
     223: aload         10
     225: arraylength
     226: iconst_2
     227: if_icmplt     274
     230: aload_0
     231: aload         10
     233: iconst_0
     234: aaload
     235: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     238: getstatic     #88                 // Field kLang:Ljava/math/BigInteger;
     241: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     244: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     247: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     250: astore        5
     252: aload_0
     253: aload         10
     255: iconst_1
     256: aaload
     257: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     260: getstatic     #89                 // Field kDType:Ljava/math/BigInteger;
     263: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     266: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     269: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     272: astore        6
     274: goto          436
     277: aload_0
     278: aload_1
     279: iload         9
     281: iconst_2
     282: iadd
     283: invokevirtual #85                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     286: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     289: getstatic     #88                 // Field kLang:Ljava/math/BigInteger;
     292: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     295: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     298: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     301: astore        5
     303: goto          436
     306: aload_1
     307: iload         9
     309: iconst_1
     310: iadd
     311: invokevirtual #77                 // Method java/lang/String.charAt:(I)C
     314: bipush        94
     316: if_icmpne     436
     319: aload_1
     320: iload         9
     322: iconst_2
     323: iadd
     324: invokevirtual #77                 // Method java/lang/String.charAt:(I)C
     327: bipush        94
     329: if_icmpne     436
     332: aload_1
     333: ldc           #90                 // String @
     335: invokevirtual #84                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
     338: ifeq          410
     341: aload_1
     342: iload         9
     344: iconst_3
     345: iadd
     346: invokevirtual #85                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     349: ldc           #90                 // String @
     351: invokevirtual #87                 // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     354: astore        10
     356: aload         10
     358: arraylength
     359: iconst_2
     360: if_icmplt     407
     363: aload_0
     364: aload         10
     366: iconst_0
     367: aaload
     368: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     371: getstatic     #89                 // Field kDType:Ljava/math/BigInteger;
     374: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     377: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     380: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     383: astore        6
     385: aload_0
     386: aload         10
     388: iconst_1
     389: aaload
     390: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     393: getstatic     #88                 // Field kLang:Ljava/math/BigInteger;
     396: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     399: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     402: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     405: astore        5
     407: goto          436
     410: aload_0
     411: aload_1
     412: iload         9
     414: iconst_3
     415: iadd
     416: invokevirtual #85                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     419: invokespecial #79                 // Method hashString:(Ljava/lang/String;)Ljava/math/BigInteger;
     422: getstatic     #89                 // Field kDType:Ljava/math/BigInteger;
     425: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     428: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     431: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     434: astore        6
     436: aload         7
     438: aload         5
     440: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     443: aload         6
     445: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     448: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     451: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     454: getstatic     #91                 // Field kLit:Ljava/math/BigInteger;
     457: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     460: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     463: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     466: areturn
     467: aload_2
     468: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
     471: astore        8
     473: aload         8
     475: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
     478: astore        9
     480: aload         9
     482: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     487: ifeq          523
     490: aload         9
     492: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     497: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
     500: astore        10
     502: aload         10
     504: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getVar:()Ljava/lang/String;
     507: aload_1
     508: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     511: ifeq          520
     514: aload         10
     516: invokevirtual #62                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getHash:()Ljava/math/BigInteger;
     519: areturn
     520: goto          480
     523: aload_2
     524: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
     527: new           #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
     530: dup
     531: aload_1
     532: getstatic     #92                 // Field kExist:Ljava/math/BigInteger;
     535: invokespecial #93                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash."<init>":(Ljava/lang/String;Ljava/math/BigInteger;)V
     538: invokevirtual #94                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
     541: pop
     542: getstatic     #92                 // Field kExist:Ljava/math/BigInteger;
     545: areturn
     546: new           #18                 // class java/lang/Exception
     549: dup
     550: new           #22                 // class java/lang/StringBuilder
     553: dup
     554: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     557: ldc           #95                 // String Unexpected node value / resource type \'
     559: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     562: aload_1
     563: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     566: ldc           #96                 // String \'
     568: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     571: invokevirtual #27                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     574: invokespecial #20                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
     577: athrow
     578: aload_3
     579: areturn

  private java.math.BigInteger hashString(java.lang.String);
    Code:
       0: new           #97                 // class java/math/BigInteger
       3: dup
       4: aload_0
       5: getfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
       8: aload_1
       9: getstatic     #98                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
      12: invokevirtual #99                 // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
      15: invokevirtual #100                // Method java/security/MessageDigest.digest:([B)[B
      18: invokespecial #101                // Method java/math/BigInteger."<init>":([B)V
      21: areturn

  private void computeHashVars(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph);
    Code:
       0: aload_1
       1: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
       4: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          69
      17: aload_2
      18: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #35                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      26: astore_3
      27: aload_3
      28: invokestatic  #63                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.isRelevantForHash:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;)Z
      31: ifeq          66
      34: aload_0
      35: aload_3
      36: invokevirtual #64                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getSubject:()Ljava/lang/String;
      39: aload_3
      40: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getHash:()Ljava/math/BigInteger;
      43: getstatic     #66                 // Field kSubj:Ljava/math/BigInteger;
      46: aload_1
      47: invokespecial #102                // Method processTerm:(Ljava/lang/String;Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      50: aload_0
      51: aload_3
      52: invokevirtual #73                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getObject:()Ljava/lang/String;
      55: aload_3
      56: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getHash:()Ljava/math/BigInteger;
      59: getstatic     #74                 // Field kObj:Ljava/math/BigInteger;
      62: aload_1
      63: invokespecial #102                // Method processTerm:(Ljava/lang/String;Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      66: goto          8
      69: aload_1
      70: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
      73: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      76: astore_2
      77: aload_2
      78: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      83: ifeq          104
      86: aload_2
      87: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      95: astore_3
      96: aload_0
      97: aload_3
      98: invokespecial #16                 // Method computeHashVars:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     101: goto          77
     104: return

  private void processTerm(java.lang.String, java.math.BigInteger, java.math.BigInteger, de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph);
    Code:
       0: aload_1
       1: ldc           #43                 // String _
       3: invokevirtual #44                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
       6: ifeq          126
       9: aload         4
      11: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      14: astore        5
      16: aconst_null
      17: astore        6
      19: aload         5
      21: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      24: astore        7
      26: aload         7
      28: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          70
      36: aload         7
      38: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
      46: astore        8
      48: aload         8
      50: invokevirtual #33                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getVar:()Ljava/lang/String;
      53: aload_1
      54: invokevirtual #37                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      57: ifeq          67
      60: aload         8
      62: astore        6
      64: goto          70
      67: goto          26
      70: aload         6
      72: ifnonnull     96
      75: new           #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
      78: dup
      79: aload_1
      80: getstatic     #92                 // Field kExist:Ljava/math/BigInteger;
      83: invokespecial #93                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash."<init>":(Ljava/lang/String;Ljava/math/BigInteger;)V
      86: astore        6
      88: aload         5
      90: aload         6
      92: invokevirtual #94                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      95: pop
      96: aload         6
      98: aload         6
     100: invokevirtual #62                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getHash:()Ljava/math/BigInteger;
     103: aload_2
     104: aload_3
     105: invokevirtual #72                 // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     108: getstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
     111: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     114: invokevirtual #67                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     117: getstatic     #103                // Field N_MUL:Ljava/math/BigInteger;
     120: invokevirtual #69                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
     123: invokevirtual #104                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.setHash:(Ljava/math/BigInteger;)V
     126: return

  private java.math.BigInteger combineVarsAndStatements(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #6                  // Field digestGen:Ljava/security/MessageDigest;
       5: invokestatic  #105                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/GraphBaseHasher.calculate:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;Ljava/security/MessageDigest;)Ljava/math/BigInteger;
       8: astore_2
       9: aload_1
      10: invokevirtual #34                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
      13: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      16: astore_3
      17: aload_3
      18: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          61
      26: aload_3
      27: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #35                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      35: astore        4
      37: aload         4
      39: invokestatic  #63                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.isRelevantForHash:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;)Z
      42: ifeq          58
      45: aload_2
      46: aload         4
      48: invokevirtual #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getHash:()Ljava/math/BigInteger;
      51: getstatic     #48                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
      54: invokestatic  #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
      57: astore_2
      58: goto          17
      61: aload_1
      62: invokevirtual #29                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getVariableHashes:()Ljava/util/ArrayList;
      65: invokevirtual #31                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      68: astore_3
      69: aload_3
      70: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      75: ifeq          105
      78: aload_3
      79: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      84: checkcast     #32                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash
      87: astore        4
      89: aload_2
      90: aload         4
      92: invokevirtual #62                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NodeHash.getHash:()Ljava/math/BigInteger;
      95: getstatic     #48                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
      98: invokestatic  #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
     101: astore_2
     102: goto          69
     105: aload_1
     106: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     109: invokevirtual #9                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     112: astore_3
     113: aload_3
     114: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifeq          150
     122: aload_3
     123: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     128: checkcast     #12                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     131: astore        4
     133: aload_2
     134: aload_0
     135: aload         4
     137: invokespecial #47                 // Method combineVarsAndStatements:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)Ljava/math/BigInteger;
     140: getstatic     #48                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
     143: invokestatic  #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
     146: astore_2
     147: goto          113
     150: aload_2
     151: areturn

  public void postHash(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: return

  public void sign(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.security.Key, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #106                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Signer.sign:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/security/Key;Ljava/lang/String;)V
       6: return

  public void assemble(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #107                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Assembler.assemble:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/lang/String;)V
       5: return

  public boolean verify(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.security.Key) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #108                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Verifier.verify:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/security/Key;)Z
       5: ireturn

  public java.lang.String getName();
    Code:
       0: invokestatic  #109                // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getAlgorithmNameFisteus2010:()Ljava/lang/String;
       3: areturn

  static {};
    Code:
       0: getstatic     #110                // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.N_XOR:Ljava/math/BigInteger;
       3: putstatic     #68                 // Field N_XOR:Ljava/math/BigInteger;
       6: getstatic     #111                // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.N_MUL:Ljava/math/BigInteger;
       9: putstatic     #103                // Field N_MUL:Ljava/math/BigInteger;
      12: new           #97                 // class java/math/BigInteger
      15: dup
      16: ldc           #112                // String 4754645121639434670
      18: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      21: putstatic     #66                 // Field kSubj:Ljava/math/BigInteger;
      24: new           #97                 // class java/math/BigInteger
      27: dup
      28: ldc           #114                // String 52591467729844340
      30: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      33: putstatic     #71                 // Field kPred:Ljava/math/BigInteger;
      36: new           #97                 // class java/math/BigInteger
      39: dup
      40: ldc           #115                // String 6279390922760334309
      42: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      45: putstatic     #74                 // Field kObj:Ljava/math/BigInteger;
      48: new           #97                 // class java/math/BigInteger
      51: dup
      52: ldc           #116                // String 13394959525758901351
      54: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      57: putstatic     #89                 // Field kDType:Ljava/math/BigInteger;
      60: new           #97                 // class java/math/BigInteger
      63: dup
      64: ldc           #117                // String 8277611958972876912
      66: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      69: putstatic     #88                 // Field kLang:Ljava/math/BigInteger;
      72: new           #97                 // class java/math/BigInteger
      75: dup
      76: ldc           #118                // String 14159263174629805858
      78: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      81: putstatic     #92                 // Field kExist:Ljava/math/BigInteger;
      84: new           #97                 // class java/math/BigInteger
      87: dup
      88: ldc           #119                // String 4719830516364819251
      90: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
      93: putstatic     #80                 // Field kLab:Ljava/math/BigInteger;
      96: new           #97                 // class java/math/BigInteger
      99: dup
     100: ldc           #120                // String 8565450179243949149
     102: invokespecial #113                // Method java/math/BigInteger."<init>":(Ljava/lang/String;)V
     105: putstatic     #91                 // Field kLit:Ljava/math/BigInteger;
     108: return
}
