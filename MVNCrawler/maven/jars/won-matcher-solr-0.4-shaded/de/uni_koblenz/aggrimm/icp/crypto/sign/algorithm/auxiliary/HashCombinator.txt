Compiled from "HashCombinator.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.HashCombinator {
  public static final java.math.BigInteger N_MUL;

  public static final java.math.BigInteger N_XOR;

  public static final java.math.BigInteger N_ADD;

  public de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.HashCombinator();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static byte[] combine(byte[], byte[], de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.HashCombinator$ca);
    Code:
       0: new           #2                  // class java/math/BigInteger
       3: dup
       4: aload_0
       5: invokespecial #3                  // Method java/math/BigInteger."<init>":([B)V
       8: astore_3
       9: new           #2                  // class java/math/BigInteger
      12: dup
      13: aload_1
      14: invokespecial #3                  // Method java/math/BigInteger."<init>":([B)V
      17: astore        4
      19: getstatic     #4                  // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$1.$SwitchMap$de$uni_koblenz$aggrimm$icp$crypto$sign$algorithm$auxiliary$HashCombinator$ca:[I
      22: aload_2
      23: invokevirtual #5                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.ordinal:()I
      26: iaload
      27: tableswitch   { // 1 to 3
                     1: 52
                     2: 62
                     3: 78
               default: 78
          }
      52: aload_3
      53: aload         4
      55: invokevirtual #6                  // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      58: invokevirtual #7                  // Method java/math/BigInteger.toByteArray:()[B
      61: areturn
      62: aload_3
      63: aload         4
      65: invokevirtual #8                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      68: getstatic     #9                  // Field N_ADD:Ljava/math/BigInteger;
      71: invokevirtual #10                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      74: invokevirtual #7                  // Method java/math/BigInteger.toByteArray:()[B
      77: areturn
      78: aload_3
      79: aload         4
      81: invokevirtual #11                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      84: getstatic     #12                 // Field N_MUL:Ljava/math/BigInteger;
      87: invokevirtual #10                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      90: invokevirtual #7                  // Method java/math/BigInteger.toByteArray:()[B
      93: areturn

  public static java.math.BigInteger combine(java.math.BigInteger, java.math.BigInteger, de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.auxiliary.HashCombinator$ca);
    Code:
       0: getstatic     #4                  // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$1.$SwitchMap$de$uni_koblenz$aggrimm$icp$crypto$sign$algorithm$auxiliary$HashCombinator$ca:[I
       3: aload_2
       4: invokevirtual #5                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 3
                     1: 36
                     2: 42
                     3: 54
               default: 54
          }
      36: aload_0
      37: aload_1
      38: invokevirtual #6                  // Method java/math/BigInteger.xor:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      41: areturn
      42: aload_0
      43: aload_1
      44: invokevirtual #8                  // Method java/math/BigInteger.add:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      47: getstatic     #9                  // Field N_ADD:Ljava/math/BigInteger;
      50: invokevirtual #10                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      53: areturn
      54: aload_0
      55: aload_1
      56: invokevirtual #11                 // Method java/math/BigInteger.multiply:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      59: getstatic     #12                 // Field N_MUL:Ljava/math/BigInteger;
      62: invokevirtual #10                 // Method java/math/BigInteger.mod:(Ljava/math/BigInteger;)Ljava/math/BigInteger;
      65: areturn

  static {};
    Code:
       0: sipush        1024
       3: new           #13                 // class java/util/Random
       6: dup
       7: ldc2_w        #15                 // long 9223372036854775807l
      10: invokespecial #17                 // Method java/util/Random."<init>":(J)V
      13: invokestatic  #18                 // Method java/math/BigInteger.probablePrime:(ILjava/util/Random;)Ljava/math/BigInteger;
      16: putstatic     #12                 // Field N_MUL:Ljava/math/BigInteger;
      19: sipush        256
      22: new           #13                 // class java/util/Random
      25: dup
      26: ldc2_w        #15                 // long 9223372036854775807l
      29: invokespecial #17                 // Method java/util/Random."<init>":(J)V
      32: invokestatic  #18                 // Method java/math/BigInteger.probablePrime:(ILjava/util/Random;)Ljava/math/BigInteger;
      35: putstatic     #19                 // Field N_XOR:Ljava/math/BigInteger;
      38: sipush        1024
      41: new           #13                 // class java/util/Random
      44: dup
      45: ldc2_w        #15                 // long 9223372036854775807l
      48: invokespecial #17                 // Method java/util/Random."<init>":(J)V
      51: invokestatic  #18                 // Method java/math/BigInteger.probablePrime:(ILjava/util/Random;)Ljava/math/BigInteger;
      54: putstatic     #9                  // Field N_ADD:Ljava/math/BigInteger;
      57: return
}
