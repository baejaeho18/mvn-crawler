Compiled from "SignatureAlgorithmSayers2004.java"
public class de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.algorithm.SignatureAlgorithmSayers2004 implements de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.SignatureAlgorithmInterface {
  private java.lang.String hasLabel;

  public de.uni_koblenz.aggrimm.icp.crypto.sign.algorithm.algorithm.SignatureAlgorithmSayers2004();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #2                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getHasLabelPredicate:()Ljava/lang/String;
       8: putfield      #3                  // Field hasLabel:Ljava/lang/String;
      11: return

  public void canonicalize(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
       4: invokevirtual #5                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
       7: astore_2
       8: aload_2
       9: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      14: ifeq          35
      17: aload_2
      18: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #8                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      26: astore_3
      27: aload_0
      28: aload_3
      29: invokespecial #9                  // Method canonicalizeGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
      32: goto          8
      35: aload_1
      36: invokevirtual #10                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
      39: new           #11                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      46: invokestatic  #13                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getCanonicalizationPrefix:()Ljava/lang/String;
      49: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: aload_0
      53: invokevirtual #15                 // Method getName:()Ljava/lang/String;
      56: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokevirtual #17                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setCanonicalizationMethod:(Ljava/lang/String;)V
      65: return

  private void canonicalizeGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph);
    Code:
       0: new           #18                 // class java/util/HashMap
       3: dup
       4: invokespecial #19                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: new           #20                 // class java/util/HashSet
      11: dup
      12: invokespecial #21                 // Method java/util/HashSet."<init>":()V
      15: astore_3
      16: aload_1
      17: invokevirtual #22                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
      20: astore        4
      22: aload         4
      24: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      27: astore        5
      29: aload         5
      31: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          84
      39: aload         5
      41: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: checkcast     #24                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      49: astore        6
      51: aload         6
      53: invokevirtual #25                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getPredicate:()Ljava/lang/String;
      56: aload_0
      57: getfield      #3                  // Field hasLabel:Ljava/lang/String;
      60: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      63: ifeq          81
      66: aload_2
      67: aload         6
      69: invokevirtual #27                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getSubject:()Ljava/lang/String;
      72: aload         6
      74: invokevirtual #28                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getObject:()Ljava/lang/String;
      77: invokevirtual #29                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          29
      84: aload         4
      86: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      89: astore        5
      91: aload         5
      93: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          231
     101: aload         5
     103: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: checkcast     #24                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     111: astore        6
     113: aload         6
     115: invokevirtual #25                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getPredicate:()Ljava/lang/String;
     118: aload_0
     119: getfield      #3                  // Field hasLabel:Ljava/lang/String;
     122: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     125: ifne          228
     128: iconst_0
     129: istore        7
     131: iload         7
     133: iconst_2
     134: if_icmpgt     228
     137: aload         6
     139: iload         7
     141: invokevirtual #30                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getByIndex:(I)Ljava/lang/String;
     144: ldc           #31                 // String _
     146: invokevirtual #32                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     149: ifeq          222
     152: aload_2
     153: aload         6
     155: iload         7
     157: invokevirtual #30                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getByIndex:(I)Ljava/lang/String;
     160: invokevirtual #33                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     163: checkcast     #34                 // class java/lang/String
     166: astore        8
     168: aload         8
     170: ifnull        196
     173: aload         6
     175: iload         7
     177: aload         8
     179: iconst_1
     180: aload         8
     182: invokevirtual #35                 // Method java/lang/String.length:()I
     185: iconst_1
     186: isub
     187: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     190: invokevirtual #37                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.setByIndex:(ILjava/lang/String;)V
     193: goto          222
     196: aload_3
     197: aload         6
     199: iload         7
     201: invokevirtual #30                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getByIndex:(I)Ljava/lang/String;
     204: invokevirtual #38                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     207: ifne          222
     210: aload_3
     211: aload         6
     213: iload         7
     215: invokevirtual #30                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple.getByIndex:(I)Ljava/lang/String;
     218: invokevirtual #39                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     221: pop
     222: iinc          7, 2
     225: goto          131
     228: goto          91
     231: aload_1
     232: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     235: invokevirtual #5                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     238: astore        5
     240: aload         5
     242: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     247: ifeq          340
     250: aload         5
     252: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     257: checkcast     #8                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     260: astore        6
     262: aload         6
     264: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     267: ldc           #31                 // String _
     269: invokevirtual #32                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     272: ifeq          337
     275: aload_2
     276: aload         6
     278: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     281: invokevirtual #33                 // Method java/util/HashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
     284: checkcast     #34                 // class java/lang/String
     287: astore        7
     289: aload         7
     291: ifnull        315
     294: aload         6
     296: aload         7
     298: iconst_1
     299: aload         7
     301: invokevirtual #35                 // Method java/lang/String.length:()I
     304: iconst_1
     305: isub
     306: invokevirtual #36                 // Method java/lang/String.substring:(II)Ljava/lang/String;
     309: invokevirtual #42                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.setName:(Ljava/lang/String;)V
     312: goto          337
     315: aload_3
     316: aload         6
     318: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     321: invokevirtual #38                 // Method java/util/HashSet.contains:(Ljava/lang/Object;)Z
     324: ifne          337
     327: aload_3
     328: aload         6
     330: invokevirtual #41                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getName:()Ljava/lang/String;
     333: invokevirtual #39                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
     336: pop
     337: goto          240
     340: aload_3
     341: invokevirtual #43                 // Method java/util/HashSet.iterator:()Ljava/util/Iterator;
     344: astore        5
     346: aload         5
     348: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     353: ifeq          413
     356: aload         5
     358: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     363: checkcast     #34                 // class java/lang/String
     366: astore        6
     368: aload_1
     369: new           #24                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
     372: dup
     373: aload         6
     375: aload_0
     376: getfield      #3                  // Field hasLabel:Ljava/lang/String;
     379: new           #11                 // class java/lang/StringBuilder
     382: dup
     383: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
     386: ldc           #44                 // String \"
     388: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: aload         6
     393: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     396: ldc           #44                 // String \"
     398: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     401: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     404: invokespecial #45                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     407: invokevirtual #46                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.addTriple:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;)V
     410: goto          346
     413: aload_1
     414: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     417: invokestatic  #47                 // Method java/util/Collections.sort:(Ljava/util/List;)V
     420: aload_1
     421: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
     424: invokevirtual #5                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
     427: astore        5
     429: aload         5
     431: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
     436: ifeq          460
     439: aload         5
     441: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     446: checkcast     #8                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
     449: astore        6
     451: aload_0
     452: aload         6
     454: invokespecial #9                  // Method canonicalizeGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;)V
     457: goto          429
     460: return

  public void postCanonicalize(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: return

  public void hash(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: invokevirtual #10                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getSignature:()Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData;
       4: astore_3
       5: aload_2
       6: invokestatic  #48                 // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       9: astore        4
      11: aload_3
      12: aload         4
      14: invokevirtual #49                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setDigestGen:(Ljava/security/MessageDigest;)V
      17: aload_3
      18: getstatic     #50                 // Field java/math/BigInteger.ONE:Ljava/math/BigInteger;
      21: invokevirtual #51                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setHash:(Ljava/math/BigInteger;)V
      24: aload_1
      25: invokevirtual #4                  // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection.getGraphs:()Ljava/util/LinkedList;
      28: invokevirtual #5                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      31: astore        5
      33: aload         5
      35: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          80
      43: aload         5
      45: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #8                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      53: astore        6
      55: aload_3
      56: aload_3
      57: invokevirtual #52                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.getHash:()Ljava/math/BigInteger;
      60: aload_0
      61: aload         6
      63: aload         4
      65: invokespecial #53                 // Method hashGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;Ljava/security/MessageDigest;)Ljava/math/BigInteger;
      68: getstatic     #54                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
      71: invokestatic  #55                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
      74: invokevirtual #51                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setHash:(Ljava/math/BigInteger;)V
      77: goto          33
      80: aload_3
      81: new           #11                 // class java/lang/StringBuilder
      84: dup
      85: invokespecial #12                 // Method java/lang/StringBuilder."<init>":()V
      88: invokestatic  #56                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getDigestPrefix:()Ljava/lang/String;
      91: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: aload_0
      95: invokevirtual #15                 // Method getName:()Ljava/lang/String;
      98: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: invokevirtual #57                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/SignatureData.setGraphDigestMethod:(Ljava/lang/String;)V
     107: return

  private java.math.BigInteger hashGraph(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.NamedGraph, java.security.MessageDigest) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #58                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/GraphBaseHasher.calculate:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;Ljava/security/MessageDigest;)Ljava/math/BigInteger;
       5: astore_3
       6: aload_1
       7: invokevirtual #22                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getTriples:()Ljava/util/ArrayList;
      10: invokevirtual #23                 // Method java/util/ArrayList.iterator:()Ljava/util/Iterator;
      13: astore        4
      15: aload         4
      17: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      22: ifeq          66
      25: aload         4
      27: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #24                 // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple
      35: astore        5
      37: aload         5
      39: invokestatic  #59                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.isRelevantForHash:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;)Z
      42: ifeq          63
      45: aload         5
      47: aload_2
      48: invokestatic  #60                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/TripleHasher.hashTripleMelnik:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/Triple;Ljava/security/MessageDigest;)Ljava/math/BigInteger;
      51: astore        6
      53: aload_3
      54: aload         6
      56: getstatic     #54                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
      59: invokestatic  #55                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
      62: astore_3
      63: goto          15
      66: aload_1
      67: invokevirtual #40                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph.getChildren:()Ljava/util/LinkedList;
      70: invokevirtual #5                  // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      73: astore        4
      75: aload         4
      77: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      82: ifeq          115
      85: aload         4
      87: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      92: checkcast     #8                  // class de/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph
      95: astore        5
      97: aload_3
      98: aload_0
      99: aload         5
     101: aload_2
     102: invokespecial #53                 // Method hashGraph:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/NamedGraph;Ljava/security/MessageDigest;)Ljava/math/BigInteger;
     105: getstatic     #54                 // Field de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca.Multiply:Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;
     108: invokestatic  #55                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator.combine:(Ljava/math/BigInteger;Ljava/math/BigInteger;Lde/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/auxiliary/HashCombinator$ca;)Ljava/math/BigInteger;
     111: astore_3
     112: goto          75
     115: aload_3
     116: areturn

  public void postHash(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection);
    Code:
       0: return

  public void sign(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.security.Key, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokestatic  #61                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Signer.sign:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/security/Key;Ljava/lang/String;)V
       6: return

  public void assemble(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #62                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Assembler.assemble:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/lang/String;)V
       5: return

  public boolean verify(de.uni_koblenz.aggrimm.icp.crypto.sign.graph.GraphCollection, java.security.Key) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokestatic  #63                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/algorithm/generic/Verifier.verify:(Lde/uni_koblenz/aggrimm/icp/crypto/sign/graph/GraphCollection;Ljava/security/Key;)Z
       5: ireturn

  public java.lang.String getName();
    Code:
       0: invokestatic  #64                 // Method de/uni_koblenz/aggrimm/icp/crypto/sign/ontology/Ontology.getAlgorithmNameSayers2004:()Ljava/lang/String;
       3: areturn
}
