Compiled from "SimpleTokenManager.java"
class antlr.SimpleTokenManager implements antlr.TokenManager,java.lang.Cloneable {
  protected int maxToken;

  protected antlr.collections.impl.Vector vocabulary;

  private java.util.Hashtable table;

  protected antlr.Tool antlrTool;

  protected java.lang.String name;

  protected boolean readOnly;

  antlr.SimpleTokenManager(java.lang.String, antlr.Tool);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_4
       6: putfield      #2                  // Field maxToken:I
       9: aload_0
      10: iconst_0
      11: putfield      #3                  // Field readOnly:Z
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field antlrTool:Lantlr/Tool;
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field name:Ljava/lang/String;
      24: aload_0
      25: new           #6                  // class antlr/collections/impl/Vector
      28: dup
      29: iconst_1
      30: invokespecial #7                  // Method antlr/collections/impl/Vector."<init>":(I)V
      33: putfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      36: aload_0
      37: new           #9                  // class java/util/Hashtable
      40: dup
      41: invokespecial #10                 // Method java/util/Hashtable."<init>":()V
      44: putfield      #11                 // Field table:Ljava/util/Hashtable;
      47: new           #12                 // class antlr/TokenSymbol
      50: dup
      51: ldc           #13                 // String EOF
      53: invokespecial #14                 // Method antlr/TokenSymbol."<init>":(Ljava/lang/String;)V
      56: astore_3
      57: aload_3
      58: iconst_1
      59: invokevirtual #15                 // Method antlr/TokenSymbol.setTokenType:(I)V
      62: aload_0
      63: aload_3
      64: invokevirtual #16                 // Method define:(Lantlr/TokenSymbol;)V
      67: aload_0
      68: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      71: iconst_3
      72: invokevirtual #17                 // Method antlr/collections/impl/Vector.ensureCapacity:(I)V
      75: aload_0
      76: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      79: ldc           #18                 // String NULL_TREE_LOOKAHEAD
      81: iconst_3
      82: invokevirtual #19                 // Method antlr/collections/impl/Vector.setElementAt:(Ljava/lang/Object;I)V
      85: return

  public java.lang.Object clone();
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #21                 // class antlr/SimpleTokenManager
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      13: invokevirtual #22                 // Method antlr/collections/impl/Vector.clone:()Ljava/lang/Object;
      16: checkcast     #6                  // class antlr/collections/impl/Vector
      19: putfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      22: aload_1
      23: aload_0
      24: getfield      #11                 // Field table:Ljava/util/Hashtable;
      27: invokevirtual #23                 // Method java/util/Hashtable.clone:()Ljava/lang/Object;
      30: checkcast     #9                  // class java/util/Hashtable
      33: putfield      #11                 // Field table:Ljava/util/Hashtable;
      36: aload_1
      37: aload_0
      38: getfield      #2                  // Field maxToken:I
      41: putfield      #2                  // Field maxToken:I
      44: aload_1
      45: aload_0
      46: getfield      #4                  // Field antlrTool:Lantlr/Tool;
      49: putfield      #4                  // Field antlrTool:Lantlr/Tool;
      52: aload_1
      53: aload_0
      54: getfield      #5                  // Field name:Ljava/lang/String;
      57: putfield      #5                  // Field name:Ljava/lang/String;
      60: goto          75
      63: astore_2
      64: aload_0
      65: getfield      #4                  // Field antlrTool:Lantlr/Tool;
      68: ldc           #25                 // String cannot clone token manager
      70: invokevirtual #26                 // Method antlr/Tool.panic:(Ljava/lang/String;)V
      73: aconst_null
      74: areturn
      75: aload_1
      76: areturn
    Exception table:
       from    to  target type
           0    60    63   Class java/lang/CloneNotSupportedException

  public void define(antlr.TokenSymbol);
    Code:
       0: aload_0
       1: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
       4: aload_1
       5: invokevirtual #27                 // Method antlr/TokenSymbol.getTokenType:()I
       8: invokevirtual #17                 // Method antlr/collections/impl/Vector.ensureCapacity:(I)V
      11: aload_0
      12: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
      15: aload_1
      16: invokevirtual #28                 // Method antlr/TokenSymbol.getId:()Ljava/lang/String;
      19: aload_1
      20: invokevirtual #27                 // Method antlr/TokenSymbol.getTokenType:()I
      23: invokevirtual #19                 // Method antlr/collections/impl/Vector.setElementAt:(Ljava/lang/Object;I)V
      26: aload_0
      27: aload_1
      28: invokevirtual #28                 // Method antlr/TokenSymbol.getId:()Ljava/lang/String;
      31: aload_1
      32: invokevirtual #29                 // Method mapToTokenSymbol:(Ljava/lang/String;Lantlr/TokenSymbol;)V
      35: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #5                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getTokenStringAt(int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
       4: iload_1
       5: invokevirtual #30                 // Method antlr/collections/impl/Vector.elementAt:(I)Ljava/lang/Object;
       8: checkcast     #31                 // class java/lang/String
      11: areturn

  public antlr.TokenSymbol getTokenSymbol(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field table:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #32                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #12                 // class antlr/TokenSymbol
      11: areturn

  public antlr.TokenSymbol getTokenSymbolAt(int);
    Code:
       0: aload_0
       1: aload_0
       2: iload_1
       3: invokevirtual #33                 // Method getTokenStringAt:(I)Ljava/lang/String;
       6: invokevirtual #34                 // Method getTokenSymbol:(Ljava/lang/String;)Lantlr/TokenSymbol;
       9: areturn

  public java.util.Enumeration getTokenSymbolElements();
    Code:
       0: aload_0
       1: getfield      #11                 // Field table:Ljava/util/Hashtable;
       4: invokevirtual #35                 // Method java/util/Hashtable.elements:()Ljava/util/Enumeration;
       7: areturn

  public java.util.Enumeration getTokenSymbolKeys();
    Code:
       0: aload_0
       1: getfield      #11                 // Field table:Ljava/util/Hashtable;
       4: invokevirtual #36                 // Method java/util/Hashtable.keys:()Ljava/util/Enumeration;
       7: areturn

  public antlr.collections.impl.Vector getVocabulary();
    Code:
       0: aload_0
       1: getfield      #8                  // Field vocabulary:Lantlr/collections/impl/Vector;
       4: areturn

  public boolean isReadOnly();
    Code:
       0: iconst_0
       1: ireturn

  public void mapToTokenSymbol(java.lang.String, antlr.TokenSymbol);
    Code:
       0: aload_0
       1: getfield      #11                 // Field table:Ljava/util/Hashtable;
       4: aload_1
       5: aload_2
       6: invokevirtual #37                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: return

  public int maxTokenType();
    Code:
       0: aload_0
       1: getfield      #2                  // Field maxToken:I
       4: iconst_1
       5: isub
       6: ireturn

  public int nextTokenType();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field maxToken:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field maxToken:I
      11: ireturn

  public void setName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field name:Ljava/lang/String;
       5: return

  public void setReadOnly(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field readOnly:Z
       5: return

  public boolean tokenDefined(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field table:Ljava/util/Hashtable;
       4: aload_1
       5: invokevirtual #38                 // Method java/util/Hashtable.containsKey:(Ljava/lang/Object;)Z
       8: ireturn
}
