Compiled from "ASTFactory.java"
public class antlr.ASTFactory {
  protected java.lang.String theASTNodeType;

  protected java.lang.Class theASTNodeTypeClass;

  protected java.util.Hashtable tokenTypeToASTClassMap;

  static java.lang.Class class$antlr$CommonAST;

  static java.lang.Class class$antlr$Token;

  public antlr.ASTFactory();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field theASTNodeType:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
      14: aload_0
      15: aconst_null
      16: putfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      19: return

  public antlr.ASTFactory(java.util.Hashtable);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #7                  // Field theASTNodeType:Ljava/lang/String;
       9: aload_0
      10: aconst_null
      11: putfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
      14: aload_0
      15: aconst_null
      16: putfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      19: aload_0
      20: aload_1
      21: invokevirtual #10                 // Method setTokenTypeToASTClassMap:(Ljava/util/Hashtable;)V
      24: return

  public void setTokenTypeASTNodeType(int, java.lang.String) throws java.lang.IllegalArgumentException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
       4: ifnonnull     18
       7: aload_0
       8: new           #11                 // class java/util/Hashtable
      11: dup
      12: invokespecial #12                 // Method java/util/Hashtable."<init>":()V
      15: putfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      18: aload_2
      19: ifnonnull     39
      22: aload_0
      23: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      26: new           #13                 // class java/lang/Integer
      29: dup
      30: iload_1
      31: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      34: invokevirtual #15                 // Method java/util/Hashtable.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: return
      39: aconst_null
      40: astore_3
      41: aload_2
      42: invokestatic  #16                 // Method antlr/Utils.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      45: astore_3
      46: aload_0
      47: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      50: new           #13                 // class java/lang/Integer
      53: dup
      54: iload_1
      55: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      58: aload_3
      59: invokevirtual #17                 // Method java/util/Hashtable.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: pop
      63: goto          95
      66: astore        4
      68: new           #19                 // class java/lang/IllegalArgumentException
      71: dup
      72: new           #20                 // class java/lang/StringBuffer
      75: dup
      76: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      79: ldc           #22                 // String Invalid class,
      81: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      84: aload_2
      85: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      88: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      91: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      94: athrow
      95: return
    Exception table:
       from    to  target type
          41    63    66   Class java/lang/Exception

  public java.lang.Class getASTNodeType(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
       4: ifnull        32
       7: aload_0
       8: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
      11: new           #13                 // class java/lang/Integer
      14: dup
      15: iload_1
      16: invokespecial #14                 // Method java/lang/Integer."<init>":(I)V
      19: invokevirtual #26                 // Method java/util/Hashtable.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #27                 // class java/lang/Class
      25: astore_2
      26: aload_2
      27: ifnull        32
      30: aload_2
      31: areturn
      32: aload_0
      33: getfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
      36: ifnull        44
      39: aload_0
      40: getfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
      43: areturn
      44: getstatic     #28                 // Field class$antlr$CommonAST:Ljava/lang/Class;
      47: ifnonnull     62
      50: ldc           #29                 // String antlr.CommonAST
      52: invokestatic  #30                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      55: dup
      56: putstatic     #28                 // Field class$antlr$CommonAST:Ljava/lang/Class;
      59: goto          65
      62: getstatic     #28                 // Field class$antlr$CommonAST:Ljava/lang/Class;
      65: areturn

  public void addASTChild(antlr.ASTPair, antlr.collections.AST);
    Code:
       0: aload_2
       1: ifnull        58
       4: aload_1
       5: getfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
       8: ifnonnull     19
      11: aload_1
      12: aload_2
      13: putfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
      16: goto          49
      19: aload_1
      20: getfield      #32                 // Field antlr/ASTPair.child:Lantlr/collections/AST;
      23: ifnonnull     39
      26: aload_1
      27: getfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
      30: aload_2
      31: invokeinterface #33,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      36: goto          49
      39: aload_1
      40: getfield      #32                 // Field antlr/ASTPair.child:Lantlr/collections/AST;
      43: aload_2
      44: invokeinterface #34,  2           // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      49: aload_1
      50: aload_2
      51: putfield      #32                 // Field antlr/ASTPair.child:Lantlr/collections/AST;
      54: aload_1
      55: invokevirtual #35                 // Method antlr/ASTPair.advanceChildToEnd:()V
      58: return

  public antlr.collections.AST create();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #36                 // Method create:(I)Lantlr/collections/AST;
       5: areturn

  public antlr.collections.AST create(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #37                 // Method getASTNodeType:(I)Ljava/lang/Class;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokevirtual #38                 // Method create:(Ljava/lang/Class;)Lantlr/collections/AST;
      11: astore_3
      12: aload_3
      13: ifnull        25
      16: aload_3
      17: iload_1
      18: ldc           #39                 // String
      20: invokeinterface #40,  3           // InterfaceMethod antlr/collections/AST.initialize:(ILjava/lang/String;)V
      25: aload_3
      26: areturn

  public antlr.collections.AST create(int, java.lang.String);
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #36                 // Method create:(I)Lantlr/collections/AST;
       5: astore_3
       6: aload_3
       7: ifnull        18
      10: aload_3
      11: iload_1
      12: aload_2
      13: invokeinterface #40,  3           // InterfaceMethod antlr/collections/AST.initialize:(ILjava/lang/String;)V
      18: aload_3
      19: areturn

  public antlr.collections.AST create(int, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: invokevirtual #41                 // Method create:(Ljava/lang/String;)Lantlr/collections/AST;
       5: astore        4
       7: aload         4
       9: ifnull        21
      12: aload         4
      14: iload_1
      15: aload_2
      16: invokeinterface #40,  3           // InterfaceMethod antlr/collections/AST.initialize:(ILjava/lang/String;)V
      21: aload         4
      23: areturn

  public antlr.collections.AST create(antlr.collections.AST);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokeinterface #42,  1           // InterfaceMethod antlr/collections/AST.getType:()I
      13: invokevirtual #36                 // Method create:(I)Lantlr/collections/AST;
      16: astore_2
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: aload_1
      23: invokeinterface #43,  2           // InterfaceMethod antlr/collections/AST.initialize:(Lantlr/collections/AST;)V
      28: aload_2
      29: areturn

  public antlr.collections.AST create(antlr.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #44                 // Method antlr/Token.getType:()I
       5: invokevirtual #36                 // Method create:(I)Lantlr/collections/AST;
       8: astore_2
       9: aload_2
      10: ifnull        20
      13: aload_2
      14: aload_1
      15: invokeinterface #45,  2           // InterfaceMethod antlr/collections/AST.initialize:(Lantlr/Token;)V
      20: aload_2
      21: areturn

  public antlr.collections.AST create(antlr.Token, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #46                 // Method createUsingCtor:(Lantlr/Token;Ljava/lang/String;)Lantlr/collections/AST;
       6: astore_3
       7: aload_3
       8: areturn

  public antlr.collections.AST create(java.lang.String);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokestatic  #16                 // Method antlr/Utils.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       6: astore_2
       7: goto          38
      10: astore_3
      11: new           #19                 // class java/lang/IllegalArgumentException
      14: dup
      15: new           #20                 // class java/lang/StringBuffer
      18: dup
      19: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      22: ldc           #22                 // String Invalid class,
      24: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_1
      28: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      31: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      34: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_2
      40: invokevirtual #38                 // Method create:(Ljava/lang/Class;)Lantlr/collections/AST;
      43: areturn
    Exception table:
       from    to  target type
           2     7    10   Class java/lang/Exception

  protected antlr.collections.AST createUsingCtor(antlr.Token, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aconst_null
       3: astore        4
       5: aload_2
       6: invokestatic  #16                 // Method antlr/Utils.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
       9: astore_3
      10: iconst_1
      11: anewarray     #27                 // class java/lang/Class
      14: dup
      15: iconst_0
      16: getstatic     #47                 // Field class$antlr$Token:Ljava/lang/Class;
      19: ifnonnull     34
      22: ldc           #48                 // String antlr.Token
      24: invokestatic  #30                 // Method class$:(Ljava/lang/String;)Ljava/lang/Class;
      27: dup
      28: putstatic     #47                 // Field class$antlr$Token:Ljava/lang/Class;
      31: goto          37
      34: getstatic     #47                 // Field class$antlr$Token:Ljava/lang/Class;
      37: aastore
      38: astore        5
      40: aload_3
      41: aload         5
      43: invokevirtual #49                 // Method java/lang/Class.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      46: astore        6
      48: aload         6
      50: iconst_1
      51: anewarray     #50                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_1
      57: aastore
      58: invokevirtual #51                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #52                 // class antlr/collections/AST
      64: astore        4
      66: goto          91
      69: astore        6
      71: aload_0
      72: aload_3
      73: invokevirtual #38                 // Method create:(Ljava/lang/Class;)Lantlr/collections/AST;
      76: astore        4
      78: aload         4
      80: ifnull        91
      83: aload         4
      85: aload_1
      86: invokeinterface #45,  2           // InterfaceMethod antlr/collections/AST.initialize:(Lantlr/Token;)V
      91: goto          123
      94: astore        5
      96: new           #19                 // class java/lang/IllegalArgumentException
      99: dup
     100: new           #20                 // class java/lang/StringBuffer
     103: dup
     104: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
     107: ldc           #54                 // String Invalid class or can\'t make instance,
     109: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     112: aload_2
     113: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
     116: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
     119: invokespecial #25                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     122: athrow
     123: aload         4
     125: areturn
    Exception table:
       from    to  target type
          40    66    69   Class java/lang/NoSuchMethodException
           5    91    94   Class java/lang/Exception

  protected antlr.collections.AST create(java.lang.Class);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: invokevirtual #55                 // Method java/lang/Class.newInstance:()Ljava/lang/Object;
       6: checkcast     #52                 // class antlr/collections/AST
       9: astore_2
      10: goto          42
      13: astore_3
      14: aload_0
      15: new           #20                 // class java/lang/StringBuffer
      18: dup
      19: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      22: ldc           #56                 // String Can\'t create AST Node
      24: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      27: aload_1
      28: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      31: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      37: invokevirtual #58                 // Method error:(Ljava/lang/String;)V
      40: aconst_null
      41: areturn
      42: aload_2
      43: areturn
    Exception table:
       from    to  target type
           2    10    13   Class java/lang/Exception

  public antlr.collections.AST dup(antlr.collections.AST);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokevirtual #59                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #38                 // Method create:(Ljava/lang/Class;)Lantlr/collections/AST;
      14: astore_2
      15: aload_2
      16: aload_1
      17: invokeinterface #43,  2           // InterfaceMethod antlr/collections/AST.initialize:(Lantlr/collections/AST;)V
      22: aload_2
      23: areturn

  public antlr.collections.AST dupList(antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #60                 // Method dupTree:(Lantlr/collections/AST;)Lantlr/collections/AST;
       5: astore_2
       6: aload_2
       7: astore_3
       8: aload_1
       9: ifnull        40
      12: aload_1
      13: invokeinterface #61,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      18: astore_1
      19: aload_3
      20: aload_0
      21: aload_1
      22: invokevirtual #60                 // Method dupTree:(Lantlr/collections/AST;)Lantlr/collections/AST;
      25: invokeinterface #34,  2           // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      30: aload_3
      31: invokeinterface #61,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
      36: astore_3
      37: goto          8
      40: aload_2
      41: areturn

  public antlr.collections.AST dupTree(antlr.collections.AST);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #62                 // Method dup:(Lantlr/collections/AST;)Lantlr/collections/AST;
       5: astore_2
       6: aload_1
       7: ifnull        26
      10: aload_2
      11: aload_0
      12: aload_1
      13: invokeinterface #63,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      18: invokevirtual #64                 // Method dupList:(Lantlr/collections/AST;)Lantlr/collections/AST;
      21: invokeinterface #33,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      26: aload_2
      27: areturn

  public antlr.collections.AST make(antlr.collections.AST[]);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_1
       5: arraylength
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_1
      12: iconst_0
      13: aaload
      14: astore_2
      15: aconst_null
      16: astore_3
      17: aload_2
      18: ifnull        28
      21: aload_2
      22: aconst_null
      23: invokeinterface #33,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      28: iconst_1
      29: istore        4
      31: iload         4
      33: aload_1
      34: arraylength
      35: if_icmpge     128
      38: aload_1
      39: iload         4
      41: aaload
      42: ifnonnull     48
      45: goto          122
      48: aload_2
      49: ifnonnull     62
      52: aload_1
      53: iload         4
      55: aaload
      56: dup
      57: astore_3
      58: astore_2
      59: goto          103
      62: aload_3
      63: ifnonnull     86
      66: aload_2
      67: aload_1
      68: iload         4
      70: aaload
      71: invokeinterface #33,  2           // InterfaceMethod antlr/collections/AST.setFirstChild:(Lantlr/collections/AST;)V
      76: aload_2
      77: invokeinterface #63,  1           // InterfaceMethod antlr/collections/AST.getFirstChild:()Lantlr/collections/AST;
      82: astore_3
      83: goto          103
      86: aload_3
      87: aload_1
      88: iload         4
      90: aaload
      91: invokeinterface #34,  2           // InterfaceMethod antlr/collections/AST.setNextSibling:(Lantlr/collections/AST;)V
      96: aload_3
      97: invokeinterface #61,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
     102: astore_3
     103: aload_3
     104: invokeinterface #61,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
     109: ifnull        122
     112: aload_3
     113: invokeinterface #61,  1           // InterfaceMethod antlr/collections/AST.getNextSibling:()Lantlr/collections/AST;
     118: astore_3
     119: goto          103
     122: iinc          4, 1
     125: goto          31
     128: aload_2
     129: areturn

  public antlr.collections.AST make(antlr.collections.impl.ASTArray);
    Code:
       0: aload_0
       1: aload_1
       2: getfield      #65                 // Field antlr/collections/impl/ASTArray.array:[Lantlr/collections/AST;
       5: invokevirtual #66                 // Method make:([Lantlr/collections/AST;)Lantlr/collections/AST;
       8: areturn

  public void makeASTRoot(antlr.ASTPair, antlr.collections.AST);
    Code:
       0: aload_2
       1: ifnull        31
       4: aload_2
       5: aload_1
       6: getfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
       9: invokeinterface #67,  2           // InterfaceMethod antlr/collections/AST.addChild:(Lantlr/collections/AST;)V
      14: aload_1
      15: aload_1
      16: getfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
      19: putfield      #32                 // Field antlr/ASTPair.child:Lantlr/collections/AST;
      22: aload_1
      23: invokevirtual #35                 // Method antlr/ASTPair.advanceChildToEnd:()V
      26: aload_1
      27: aload_2
      28: putfield      #31                 // Field antlr/ASTPair.root:Lantlr/collections/AST;
      31: return

  public void setASTNodeClass(java.lang.Class);
    Code:
       0: aload_1
       1: ifnull        17
       4: aload_0
       5: aload_1
       6: putfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
       9: aload_0
      10: aload_1
      11: invokevirtual #57                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: putfield      #7                  // Field theASTNodeType:Ljava/lang/String;
      17: return

  public void setASTNodeClass(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field theASTNodeType:Ljava/lang/String;
       5: aload_0
       6: aload_1
       7: invokestatic  #16                 // Method antlr/Utils.loadClass:(Ljava/lang/String;)Ljava/lang/Class;
      10: putfield      #8                  // Field theASTNodeTypeClass:Ljava/lang/Class;
      13: goto          40
      16: astore_2
      17: aload_0
      18: new           #20                 // class java/lang/StringBuffer
      21: dup
      22: invokespecial #21                 // Method java/lang/StringBuffer."<init>":()V
      25: ldc           #68                 // String Can\'t find/access AST Node type
      27: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      30: aload_1
      31: invokevirtual #23                 // Method java/lang/StringBuffer.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;
      34: invokevirtual #24                 // Method java/lang/StringBuffer.toString:()Ljava/lang/String;
      37: invokevirtual #58                 // Method error:(Ljava/lang/String;)V
      40: return
    Exception table:
       from    to  target type
           5    13    16   Class java/lang/Exception

  public void setASTNodeType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #69                 // Method setASTNodeClass:(Ljava/lang/String;)V
       5: return

  public java.util.Hashtable getTokenTypeToASTClassMap();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
       4: areturn

  public void setTokenTypeToASTClassMap(java.util.Hashtable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field tokenTypeToASTClassMap:Ljava/util/Hashtable;
       5: return

  public void error(java.lang.String);
    Code:
       0: getstatic     #70                 // Field java/lang/System.err:Ljava/io/PrintStream;
       3: aload_1
       4: invokevirtual #71                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
       7: return

  static java.lang.Class class$(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       4: areturn
       5: astore_1
       6: new           #3                  // class java/lang/NoClassDefFoundError
       9: dup
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/ClassNotFoundException.getMessage:()Ljava/lang/String;
      14: invokespecial #5                  // Method java/lang/NoClassDefFoundError."<init>":(Ljava/lang/String;)V
      17: athrow
    Exception table:
       from    to  target type
           0     4     5   Class java/lang/ClassNotFoundException
}
