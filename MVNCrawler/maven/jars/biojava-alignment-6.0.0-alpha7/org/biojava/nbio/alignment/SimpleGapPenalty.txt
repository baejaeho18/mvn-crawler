Compiled from "SimpleGapPenalty.java"
public class org.biojava.nbio.alignment.SimpleGapPenalty implements org.biojava.nbio.alignment.template.GapPenalty,java.io.Serializable {
  private static final long serialVersionUID;

  private static int dgop;

  private static int dgep;

  private org.biojava.nbio.alignment.template.GapPenalty$Type type;

  private int gop;

  private int gep;

  public static void setDefaultExtensionPenalty(int);
    Code:
       0: iload_0
       1: putstatic     #1                  // Field dgep:I
       4: return

  public static void setDefaultOpenPenalty(int);
    Code:
       0: iload_0
       1: putstatic     #2                  // Field dgop:I
       4: return

  public org.biojava.nbio.alignment.SimpleGapPenalty();
    Code:
       0: aload_0
       1: getstatic     #2                  // Field dgop:I
       4: getstatic     #1                  // Field dgep:I
       7: invokespecial #3                  // Method "<init>":(II)V
      10: return

  public org.biojava.nbio.alignment.SimpleGapPenalty(int, int);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #5                  // Method java/lang/Math.abs:(I)I
       9: ineg
      10: putfield      #6                  // Field gop:I
      13: aload_0
      14: iload_2
      15: invokestatic  #5                  // Method java/lang/Math.abs:(I)I
      18: ineg
      19: putfield      #7                  // Field gep:I
      22: aload_0
      23: invokespecial #8                  // Method setType:()V
      26: return

  public int getExtensionPenalty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field gep:I
       4: ireturn

  public int getOpenPenalty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field gop:I
       4: ireturn

  public org.biojava.nbio.alignment.template.GapPenalty$Type getType();
    Code:
       0: aload_0
       1: getfield      #9                  // Field type:Lorg/biojava/nbio/alignment/template/GapPenalty$Type;
       4: areturn

  public void setExtensionPenalty(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method java/lang/Math.abs:(I)I
       5: ineg
       6: putfield      #7                  // Field gep:I
       9: aload_0
      10: invokespecial #8                  // Method setType:()V
      13: return

  public void setOpenPenalty(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #5                  // Method java/lang/Math.abs:(I)I
       5: ineg
       6: putfield      #6                  // Field gop:I
       9: aload_0
      10: invokespecial #8                  // Method setType:()V
      13: return

  private void setType();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #6                  // Field gop:I
       5: ifne          14
       8: getstatic     #10                 // Field org/biojava/nbio/alignment/template/GapPenalty$Type.LINEAR:Lorg/biojava/nbio/alignment/template/GapPenalty$Type;
      11: goto          30
      14: aload_0
      15: getfield      #7                  // Field gep:I
      18: ifne          27
      21: getstatic     #11                 // Field org/biojava/nbio/alignment/template/GapPenalty$Type.CONSTANT:Lorg/biojava/nbio/alignment/template/GapPenalty$Type;
      24: goto          30
      27: getstatic     #12                 // Field org/biojava/nbio/alignment/template/GapPenalty$Type.AFFINE:Lorg/biojava/nbio/alignment/template/GapPenalty$Type;
      30: putfield      #9                  // Field type:Lorg/biojava/nbio/alignment/template/GapPenalty$Type;
      33: return

  static {};
    Code:
       0: bipush        10
       2: putstatic     #2                  // Field dgop:I
       5: iconst_1
       6: putstatic     #1                  // Field dgep:I
       9: return
}
