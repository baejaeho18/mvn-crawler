Compiled from "ChronicleQueueView.java"
public class net.openhft.chronicle.engine.tree.ChronicleQueueView$LocalExcept<T, M> implements net.openhft.chronicle.engine.tree.QueueView$Excerpt<T, M>, net.openhft.chronicle.wire.Marshallable, java.util.Map$Entry<T, M> {
  private T topic;

  private M message;

  private net.openhft.chronicle.bytes.Bytes bytes;

  private long index;

  public net.openhft.chronicle.engine.tree.ChronicleQueueView$LocalExcept();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public T topic();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topic:Ljava/lang/Object;
       4: areturn

  public M message();
    Code:
       0: aload_0
       1: getfield      #3                  // Field message:Ljava/lang/Object;
       4: areturn

  public long index();
    Code:
       0: aload_0
       1: getfield      #4                  // Field index:J
       4: lreturn

  public net.openhft.chronicle.engine.tree.ChronicleQueueView$LocalExcept<T, M> index(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #4                  // Field index:J
       5: aload_0
       6: areturn

  net.openhft.chronicle.engine.tree.ChronicleQueueView$LocalExcept message(M);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field message:Ljava/lang/Object;
       5: aload_0
       6: areturn

  net.openhft.chronicle.engine.tree.ChronicleQueueView$LocalExcept topic(T);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field topic:Ljava/lang/Object;
       5: aload_0
       6: areturn

  public java.lang.String toString();
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #7                  // String Except{topic=
       9: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field topic:Ljava/lang/Object;
      16: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #10                 // String , message=
      21: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #3                  // Field message:Ljava/lang/Object;
      28: invokevirtual #9                  // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #11                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public void writeMarshallable(net.openhft.chronicle.wire.WireOut);
    Code:
       0: aload_1
       1: invokedynamic #13,  0             // InvokeDynamic #0:name:()Lnet/openhft/chronicle/wire/WireKey;
       6: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/wire/WireOut.write:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueOut;
      11: aload_0
      12: getfield      #2                  // Field topic:Ljava/lang/Object;
      15: invokeinterface #15,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.object:(Ljava/lang/Object;)Lnet/openhft/chronicle/wire/WireOut;
      20: pop
      21: aload_1
      22: invokedynamic #16,  0             // InvokeDynamic #1:name:()Lnet/openhft/chronicle/wire/WireKey;
      27: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/wire/WireOut.write:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueOut;
      32: aload_0
      33: getfield      #3                  // Field message:Ljava/lang/Object;
      36: invokeinterface #15,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.object:(Ljava/lang/Object;)Lnet/openhft/chronicle/wire/WireOut;
      41: pop
      42: aload_1
      43: invokedynamic #17,  0             // InvokeDynamic #2:name:()Lnet/openhft/chronicle/wire/WireKey;
      48: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/wire/WireOut.write:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueOut;
      53: aload_0
      54: getfield      #4                  // Field index:J
      57: invokeinterface #18,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.int64:(J)Lnet/openhft/chronicle/wire/WireOut;
      62: pop
      63: return

  public void readMarshallable(net.openhft.chronicle.wire.WireIn) throws net.openhft.chronicle.core.io.IORuntimeException;
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #19,  0             // InvokeDynamic #3:name:()Lnet/openhft/chronicle/wire/WireKey;
       7: invokeinterface #20,  2           // InterfaceMethod net/openhft/chronicle/wire/WireIn.read:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueIn;
      12: ldc           #21                 // class java/lang/Object
      14: invokeinterface #22,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.object:(Ljava/lang/Class;)Ljava/lang/Object;
      19: invokevirtual #23                 // Method topic:(Ljava/lang/Object;)Lnet/openhft/chronicle/engine/tree/ChronicleQueueView$LocalExcept;
      22: pop
      23: aload_0
      24: aload_1
      25: invokedynamic #24,  0             // InvokeDynamic #4:name:()Lnet/openhft/chronicle/wire/WireKey;
      30: invokeinterface #20,  2           // InterfaceMethod net/openhft/chronicle/wire/WireIn.read:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueIn;
      35: ldc           #21                 // class java/lang/Object
      37: invokeinterface #22,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.object:(Ljava/lang/Class;)Ljava/lang/Object;
      42: invokevirtual #25                 // Method message:(Ljava/lang/Object;)Lnet/openhft/chronicle/engine/tree/ChronicleQueueView$LocalExcept;
      45: pop
      46: aload_0
      47: aload_1
      48: invokedynamic #26,  0             // InvokeDynamic #5:name:()Lnet/openhft/chronicle/wire/WireKey;
      53: invokeinterface #20,  2           // InterfaceMethod net/openhft/chronicle/wire/WireIn.read:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueIn;
      58: invokeinterface #27,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.int64:()J
      63: invokevirtual #28                 // Method index:(J)Lnet/openhft/chronicle/engine/tree/ChronicleQueueView$LocalExcept;
      66: pop
      67: return

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #3                  // Field message:Ljava/lang/Object;
       5: aload_0
       6: aconst_null
       7: putfield      #2                  // Field topic:Ljava/lang/Object;
      10: aload_0
      11: ldc2_w        #29                 // long -1l
      14: putfield      #4                  // Field index:J
      17: return

  public net.openhft.chronicle.bytes.Bytes text();
    Code:
       0: aload_0
       1: getfield      #31                 // Field bytes:Lnet/openhft/chronicle/bytes/Bytes;
       4: ifnonnull     17
       7: aload_0
       8: invokestatic  #32                 // InterfaceMethod net/openhft/chronicle/bytes/Bytes.allocateElasticDirect:()Lnet/openhft/chronicle/bytes/NativeBytes;
      11: putfield      #31                 // Field bytes:Lnet/openhft/chronicle/bytes/Bytes;
      14: goto          27
      17: aload_0
      18: getfield      #31                 // Field bytes:Lnet/openhft/chronicle/bytes/Bytes;
      21: invokeinterface #33,  1           // InterfaceMethod net/openhft/chronicle/bytes/Bytes.clear:()Lnet/openhft/chronicle/bytes/StreamingCommon;
      26: pop
      27: aload_0
      28: aload_0
      29: getfield      #31                 // Field bytes:Lnet/openhft/chronicle/bytes/Bytes;
      32: putfield      #3                  // Field message:Ljava/lang/Object;
      35: aload_0
      36: getfield      #31                 // Field bytes:Lnet/openhft/chronicle/bytes/Bytes;
      39: areturn

  public T getKey();
    Code:
       0: aload_0
       1: getfield      #2                  // Field topic:Ljava/lang/Object;
       4: areturn

  public M getValue();
    Code:
       0: aload_0
       1: getfield      #3                  // Field message:Ljava/lang/Object;
       4: areturn

  public M setValue(M);
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #35                 // String todo
       6: invokespecial #36                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  private static java.lang.CharSequence lambda$readMarshallable$5();
    Code:
       0: ldc           #37                 // String index
       2: areturn

  private static java.lang.CharSequence lambda$readMarshallable$4();
    Code:
       0: ldc           #38                 // String message
       2: areturn

  private static java.lang.CharSequence lambda$readMarshallable$3();
    Code:
       0: ldc           #39                 // String topic
       2: areturn

  private static java.lang.CharSequence lambda$writeMarshallable$2();
    Code:
       0: ldc           #37                 // String index
       2: areturn

  private static java.lang.CharSequence lambda$writeMarshallable$1();
    Code:
       0: ldc           #38                 // String message
       2: areturn

  private static java.lang.CharSequence lambda$writeMarshallable$0();
    Code:
       0: ldc           #39                 // String topic
       2: areturn
}
