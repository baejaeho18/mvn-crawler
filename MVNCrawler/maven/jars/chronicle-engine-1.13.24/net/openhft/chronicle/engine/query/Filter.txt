Compiled from "Filter.java"
public class net.openhft.chronicle.engine.query.Filter<E> implements net.openhft.chronicle.wire.Marshallable, java.lang.Iterable<net.openhft.chronicle.engine.query.Operation> {
  static final net.openhft.chronicle.engine.query.Filter EMPTY;

  private java.util.List<net.openhft.chronicle.engine.query.Operation> pipeline;

  public net.openhft.chronicle.engine.query.Filter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field pipeline:Ljava/util/List;
      15: return

  public static <N> net.openhft.chronicle.engine.query.Filter<N> empty();
    Code:
       0: getstatic     #5                  // Field EMPTY:Lnet/openhft/chronicle/engine/query/Filter;
       3: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field pipeline:Ljava/util/List;
      11: invokeinterface #6,  1            // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public void readMarshallable(net.openhft.chronicle.wire.WireIn) throws java.lang.IllegalStateException;
    Code:
       0: aload_0
       1: invokespecial #7                  // Method clearPipeline:()V
       4: aload_1
       5: invokedynamic #8,  0              // InvokeDynamic #0:name:()Lnet/openhft/chronicle/wire/WireKey;
      10: invokeinterface #9,  2            // InterfaceMethod net/openhft/chronicle/wire/WireIn.read:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueIn;
      15: aload_0
      16: getfield      #4                  // Field pipeline:Ljava/util/List;
      19: invokedynamic #10,  0             // InvokeDynamic #1:accept:()Ljava/util/function/BiConsumer;
      24: invokeinterface #11,  3           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.sequence:(Ljava/lang/Object;Ljava/util/function/BiConsumer;)Z
      29: pop
      30: return

  private void clearPipeline();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: ifnonnull     21
       7: aload_0
       8: new           #2                  // class java/util/ArrayList
      11: dup
      12: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      15: putfield      #4                  // Field pipeline:Ljava/util/List;
      18: goto          30
      21: aload_0
      22: getfield      #4                  // Field pipeline:Ljava/util/List;
      25: invokeinterface #12,  1           // InterfaceMethod java/util/List.clear:()V
      30: return

  public void writeMarshallable(net.openhft.chronicle.wire.WireOut);
    Code:
       0: aload_1
       1: invokedynamic #13,  0             // InvokeDynamic #2:name:()Lnet/openhft/chronicle/wire/WireKey;
       6: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/wire/WireOut.write:(Lnet/openhft/chronicle/wire/WireKey;)Lnet/openhft/chronicle/wire/ValueOut;
      11: aload_0
      12: invokedynamic #15,  0             // InvokeDynamic #3:writeValue:(Lnet/openhft/chronicle/engine/query/Filter;)Lnet/openhft/chronicle/wire/WriteValue;
      17: invokeinterface #16,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueOut.sequence:(Lnet/openhft/chronicle/wire/WriteValue;)Lnet/openhft/chronicle/wire/WireOut;
      22: pop
      23: return

  public java.util.Iterator<net.openhft.chronicle.engine.query.Operation> iterator();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: areturn

  protected void add(net.openhft.chronicle.engine.query.Operation);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  void add(net.openhft.chronicle.core.util.SerializablePredicate<? super E>, net.openhft.chronicle.engine.query.Operation$OperationType);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: aload_2
       6: aload_1
       7: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      10: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      13: return

  void add(net.openhft.chronicle.core.util.SerializableFunction<? super E, ?>, net.openhft.chronicle.engine.query.Operation$OperationType);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: aload_2
       6: aload_1
       7: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      10: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      13: return

  <R> void add(java.lang.Class<R>, net.openhft.chronicle.engine.query.Operation$OperationType);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: aload_2
       6: aload_1
       7: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      10: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      13: return

  public java.lang.String toString();
    Code:
       0: new           #22                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #24                 // String Filter{pipeline=
       9: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #4                  // Field pipeline:Ljava/util/List;
      16: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: bipush        125
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      24: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  public void addFilter(net.openhft.chronicle.core.util.SerializablePredicate<? super E>);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: getstatic     #29                 // Field net/openhft/chronicle/engine/query/Operation$OperationType.FILTER:Lnet/openhft/chronicle/engine/query/Operation$OperationType;
       8: aload_1
       9: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      12: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      15: return

  public <R> void addMap(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends R>);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: getstatic     #30                 // Field net/openhft/chronicle/engine/query/Operation$OperationType.MAP:Lnet/openhft/chronicle/engine/query/Operation$OperationType;
       8: aload_1
       9: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      12: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      15: return

  public void addProject(java.lang.Class);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: getstatic     #31                 // Field net/openhft/chronicle/engine/query/Operation$OperationType.PROJECT:Lnet/openhft/chronicle/engine/query/Operation$OperationType;
       8: aload_1
       9: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      12: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      15: return

  public <R> void addFlatMap(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends net.openhft.chronicle.engine.api.query.Query<? extends R>>);
    Code:
       0: aload_0
       1: new           #19                 // class net/openhft/chronicle/engine/query/Operation
       4: dup
       5: getstatic     #32                 // Field net/openhft/chronicle/engine/query/Operation$OperationType.FLAT_MAP:Lnet/openhft/chronicle/engine/query/Operation$OperationType;
       8: aload_1
       9: invokespecial #20                 // Method net/openhft/chronicle/engine/query/Operation."<init>":(Lnet/openhft/chronicle/engine/query/Operation$OperationType;Ljava/lang/Object;)V
      12: invokevirtual #21                 // Method add:(Lnet/openhft/chronicle/engine/query/Operation;)V
      15: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #33                 // class net/openhft/chronicle/engine/query/Filter
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #33                 // class net/openhft/chronicle/engine/query/Filter
      20: astore_2
      21: aload_0
      22: getfield      #4                  // Field pipeline:Ljava/util/List;
      25: ifnull        47
      28: aload_0
      29: getfield      #4                  // Field pipeline:Ljava/util/List;
      32: aload_2
      33: getfield      #4                  // Field pipeline:Ljava/util/List;
      36: invokeinterface #34,  2           // InterfaceMethod java/util/List.equals:(Ljava/lang/Object;)Z
      41: ifne          54
      44: goto          58
      47: aload_2
      48: getfield      #4                  // Field pipeline:Ljava/util/List;
      51: ifnonnull     58
      54: iconst_1
      55: goto          59
      58: iconst_0
      59: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: ifnull        19
       7: aload_0
       8: getfield      #4                  // Field pipeline:Ljava/util/List;
      11: invokeinterface #35,  1           // InterfaceMethod java/util/List.hashCode:()I
      16: goto          20
      19: iconst_0
      20: ireturn

  public int pipelineSize();
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: ifnonnull     11
       7: iconst_0
       8: goto          20
      11: aload_0
      12: getfield      #4                  // Field pipeline:Ljava/util/List;
      15: invokeinterface #36,  1           // InterfaceMethod java/util/List.size:()I
      20: ireturn

  public net.openhft.chronicle.engine.query.Operation getPipeline(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: iload_1
       5: invokeinterface #37,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #19                 // class net/openhft/chronicle/engine/query/Operation
      13: areturn

  private void lambda$writeMarshallable$3(net.openhft.chronicle.wire.ValueOut);
    Code:
       0: aload_0
       1: getfield      #4                  // Field pipeline:Ljava/util/List;
       4: aload_1
       5: dup
       6: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #39,  0             // InvokeDynamic #4:accept:(Lnet/openhft/chronicle/wire/ValueOut;)Ljava/util/function/Consumer;
      15: invokeinterface #40,  2           // InterfaceMethod java/util/List.forEach:(Ljava/util/function/Consumer;)V
      20: return

  private static java.lang.CharSequence lambda$writeMarshallable$2();
    Code:
       0: ldc           #41                 // String pipeline
       2: areturn

  private static void lambda$readMarshallable$1(java.util.List, net.openhft.chronicle.wire.ValueIn);
    Code:
       0: aload_1
       1: invokeinterface #42,  1           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.hasNextSequenceItem:()Z
       6: ifeq          27
       9: aload_0
      10: aload_1
      11: ldc           #19                 // class net/openhft/chronicle/engine/query/Operation
      13: invokeinterface #43,  2           // InterfaceMethod net/openhft/chronicle/wire/ValueIn.object:(Ljava/lang/Class;)Ljava/lang/Object;
      18: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      23: pop
      24: goto          0
      27: return

  private static java.lang.CharSequence lambda$readMarshallable$0();
    Code:
       0: ldc           #41                 // String pipeline
       2: areturn

  static {};
    Code:
       0: new           #44                 // class net/openhft/chronicle/engine/query/Filter$1
       3: dup
       4: invokespecial #45                 // Method net/openhft/chronicle/engine/query/Filter$1."<init>":()V
       7: putstatic     #5                  // Field EMPTY:Lnet/openhft/chronicle/engine/query/Filter;
      10: return
}
