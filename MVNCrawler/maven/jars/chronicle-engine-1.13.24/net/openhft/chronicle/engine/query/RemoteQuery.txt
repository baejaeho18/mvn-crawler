Compiled from "RemoteQuery.java"
public class net.openhft.chronicle.engine.query.RemoteQuery<E> implements net.openhft.chronicle.engine.api.query.Query<E> {
  private static final org.slf4j.Logger LOG;

  private final net.openhft.chronicle.engine.query.Filter<E> filter;

  private final net.openhft.chronicle.engine.query.RemoteQuery$Subscribable<E> subscribable;

  public net.openhft.chronicle.engine.query.RemoteQuery(net.openhft.chronicle.engine.query.RemoteQuery$Subscribable<E>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class net/openhft/chronicle/engine/query/Filter
       8: dup
       9: invokespecial #4                  // Method net/openhft/chronicle/engine/query/Filter."<init>":()V
      12: putfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
      15: aload_0
      16: aload_1
      17: putfield      #6                  // Field subscribable:Lnet/openhft/chronicle/engine/query/RemoteQuery$Subscribable;
      20: return

  public net.openhft.chronicle.engine.api.query.Query<E> filter(net.openhft.chronicle.core.util.SerializablePredicate<? super E>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
       4: aload_1
       5: invokevirtual #7                  // Method net/openhft/chronicle/engine/query/Filter.addFilter:(Lnet/openhft/chronicle/core/util/SerializablePredicate;)V
       8: aload_0
       9: areturn

  public <R> net.openhft.chronicle.engine.api.query.Query<R> map(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
       4: aload_1
       5: invokevirtual #8                  // Method net/openhft/chronicle/engine/query/Filter.addMap:(Lnet/openhft/chronicle/core/util/SerializableFunction;)V
       8: aload_0
       9: areturn

  public <R> net.openhft.chronicle.engine.api.query.Query<R> project(java.lang.Class<R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
       4: aload_1
       5: invokevirtual #9                  // Method net/openhft/chronicle/engine/query/Filter.addProject:(Ljava/lang/Class;)V
       8: aload_0
       9: areturn

  public <R> net.openhft.chronicle.engine.api.query.Query<R> flatMap(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends net.openhft.chronicle.engine.api.query.Query<? extends R>>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
       4: aload_1
       5: invokevirtual #10                 // Method net/openhft/chronicle/engine/query/Filter.addFlatMap:(Lnet/openhft/chronicle/core/util/SerializableFunction;)V
       8: aload_0
       9: areturn

  public java.util.stream.Stream<E> stream();
    Code:
       0: new           #11                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #12                 // String todo
       6: invokespecial #13                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public net.openhft.chronicle.engine.api.query.Subscription subscribe(java.util.function.Consumer<? super E>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribable:Lnet/openhft/chronicle/engine/query/RemoteQuery$Subscribable;
       4: aload_1
       5: dup
       6: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #15,  0             // InvokeDynamic #0:onMessage:(Ljava/util/function/Consumer;)Lnet/openhft/chronicle/engine/api/pubsub/Subscriber;
      15: aload_0
      16: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
      19: getstatic     #16                 // Field net/openhft/chronicle/engine/api/tree/RequestContext$Operation.BOOTSTRAP:Lnet/openhft/chronicle/engine/api/tree/RequestContext$Operation;
      22: invokestatic  #17                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;)Ljava/util/EnumSet;
      25: invokeinterface #18,  4           // InterfaceMethod net/openhft/chronicle/engine/query/RemoteQuery$Subscribable.subscribe:(Lnet/openhft/chronicle/engine/api/pubsub/Subscriber;Lnet/openhft/chronicle/engine/query/Filter;Ljava/util/Set;)V
      30: getstatic     #19                 // Field net/openhft/chronicle/engine/api/query/SubscriptionNotSupported.INSTANCE:Lnet/openhft/chronicle/engine/api/query/SubscriptionNotSupported;
      33: areturn

  public void forEach(java.util.function.Consumer<? super E>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #20                 // Method forEach2:(Ljava/util/function/Consumer;)V
       5: return

  private void forEach2(java.util.function.Consumer<? super E>);
    Code:
       0: new           #21                 // class java/util/concurrent/ArrayBlockingQueue
       3: dup
       4: sipush        128
       7: invokespecial #22                 // Method java/util/concurrent/ArrayBlockingQueue."<init>":(I)V
      10: astore_2
      11: new           #23                 // class java/util/concurrent/atomic/AtomicBoolean
      14: dup
      15: invokespecial #24                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      18: astore_3
      19: new           #25                 // class net/openhft/chronicle/engine/query/RemoteQuery$1
      22: dup
      23: aload_0
      24: aload_2
      25: aload_3
      26: invokespecial #26                 // Method net/openhft/chronicle/engine/query/RemoteQuery$1."<init>":(Lnet/openhft/chronicle/engine/query/RemoteQuery;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      29: astore        4
      31: aload_0
      32: getfield      #6                  // Field subscribable:Lnet/openhft/chronicle/engine/query/RemoteQuery$Subscribable;
      35: aload         4
      37: aload_0
      38: getfield      #5                  // Field filter:Lnet/openhft/chronicle/engine/query/Filter;
      41: getstatic     #16                 // Field net/openhft/chronicle/engine/api/tree/RequestContext$Operation.BOOTSTRAP:Lnet/openhft/chronicle/engine/api/tree/RequestContext$Operation;
      44: getstatic     #27                 // Field net/openhft/chronicle/engine/api/tree/RequestContext$Operation.END_SUBSCRIPTION_AFTER_BOOTSTRAP:Lnet/openhft/chronicle/engine/api/tree/RequestContext$Operation;
      47: invokestatic  #28                 // Method java/util/EnumSet.of:(Ljava/lang/Enum;Ljava/lang/Enum;)Ljava/util/EnumSet;
      50: invokeinterface #18,  4           // InterfaceMethod net/openhft/chronicle/engine/query/RemoteQuery$Subscribable.subscribe:(Lnet/openhft/chronicle/engine/api/pubsub/Subscriber;Lnet/openhft/chronicle/engine/query/Filter;Ljava/util/Set;)V
      55: aload_3
      56: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      59: ifne          126
      62: aload_2
      63: invokeinterface #30,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
      68: astore        5
      70: aload         5
      72: ifnonnull     104
      75: aload_2
      76: dup
      77: astore        6
      79: monitorenter
      80: aload_2
      81: ldc2_w        #31                 // long 1000l
      84: invokevirtual #33                 // Method java/lang/Object.wait:(J)V
      87: aload         6
      89: monitorexit
      90: goto          101
      93: astore        7
      95: aload         6
      97: monitorexit
      98: aload         7
     100: athrow
     101: goto          55
     104: aload_1
     105: aload         5
     107: invokeinterface #34,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     112: goto          55
     115: astore        5
     117: invokestatic  #36                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     120: invokevirtual #37                 // Method java/lang/Thread.interrupt:()V
     123: goto          55
     126: aload_2
     127: aload_1
     128: dup
     129: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     132: pop
     133: invokedynamic #38,  0             // InvokeDynamic #1:accept:(Ljava/util/function/Consumer;)Ljava/util/function/Consumer;
     138: invokeinterface #39,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.forEach:(Ljava/util/function/Consumer;)V
     143: return
    Exception table:
       from    to  target type
          80    90    93   any
          93    98    93   any
          62   101   115   Class java/lang/InterruptedException
         104   112   115   Class java/lang/InterruptedException

  private void dumpThreads();
    Code:
       0: invokestatic  #40                 // Method java/lang/Thread.getAllStackTraces:()Ljava/util/Map;
       3: invokeinterface #41,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       8: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      13: astore_1
      14: aload_1
      15: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          149
      23: aload_1
      24: invokeinterface #44,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #45                 // class java/util/Map$Entry
      32: astore_2
      33: aload_2
      34: invokeinterface #46,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: checkcast     #47                 // class java/lang/Thread
      42: astore_3
      43: aload_3
      44: invokevirtual #48                 // Method java/lang/Thread.getThreadGroup:()Ljava/lang/ThreadGroup;
      47: invokevirtual #49                 // Method java/lang/ThreadGroup.getName:()Ljava/lang/String;
      50: ldc           #50                 // String system
      52: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      55: ifeq          61
      58: goto          14
      61: new           #52                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      68: astore        4
      70: aload         4
      72: aload_3
      73: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      76: ldc           #55                 // String
      78: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_3
      82: invokevirtual #57                 // Method java/lang/Thread.getState:()Ljava/lang/Thread$State;
      85: invokevirtual #54                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      88: pop
      89: aload         4
      91: aload_2
      92: invokeinterface #58,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      97: checkcast     #59                 // class "[Ljava/lang/StackTraceElement;"
     100: invokestatic  #60                 // Method net/openhft/chronicle/core/Jvm.trimStackTrace:(Ljava/lang/StringBuilder;[Ljava/lang/StackTraceElement;)V
     103: aload         4
     105: ldc           #61                 // String \n
     107: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: pop
     111: invokestatic  #62                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
     114: aload_0
     115: invokevirtual #14                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     118: new           #52                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
     125: ldc           #63                 // String \n========= THREAD DUMP =========\n
     127: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload         4
     132: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokevirtual #56                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     138: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     141: invokeinterface #65,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
     146: goto          14
     149: return

  public <R, A> R collect(java.util.stream.Collector<? super E, A, R>);
    Code:
       0: aload_1
       1: invokeinterface #66,  1           // InterfaceMethod java/util/stream/Collector.supplier:()Ljava/util/function/Supplier;
       6: invokeinterface #67,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      11: astore_2
      12: aload_0
      13: aload_1
      14: aload_2
      15: invokedynamic #68,  0             // InvokeDynamic #2:accept:(Ljava/util/stream/Collector;Ljava/lang/Object;)Ljava/util/function/Consumer;
      20: invokevirtual #69                 // Method forEach:(Ljava/util/function/Consumer;)V
      23: aload_1
      24: invokeinterface #70,  1           // InterfaceMethod java/util/stream/Collector.finisher:()Ljava/util/function/Function;
      29: aload_2
      30: invokeinterface #71,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      35: areturn

  private static void lambda$collect$0(java.util.stream.Collector, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokeinterface #72,  1           // InterfaceMethod java/util/stream/Collector.accumulator:()Ljava/util/function/BiConsumer;
       6: aload_1
       7: aload_2
       8: invokeinterface #73,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      13: return

  static void access$000(net.openhft.chronicle.engine.query.RemoteQuery);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method dumpThreads:()V
       4: return

  static {};
    Code:
       0: ldc           #74                 // class net/openhft/chronicle/engine/query/RemoteQuery
       2: invokestatic  #75                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #76                 // Field LOG:Lorg/slf4j/Logger;
       8: return
}
