Compiled from "EngineConnectionManager.java"
public class net.openhft.chronicle.engine.fs.EngineConnectionManager implements net.openhft.chronicle.network.cluster.ConnectionManager {
  private final java.util.Set<net.openhft.chronicle.network.cluster.ConnectionManager$ConnectionListener> connectionListeners;

  private java.util.concurrent.ConcurrentHashMap<net.openhft.chronicle.network.NetworkContext, java.util.concurrent.atomic.AtomicBoolean> isConnected;

  private net.openhft.chronicle.engine.fs.EngineConnectionManager();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/IdentityHashMap
       8: dup
       9: invokespecial #4                  // Method java/util/IdentityHashMap."<init>":()V
      12: invokestatic  #5                  // Method java/util/Collections.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;
      15: putfield      #6                  // Field connectionListeners:Ljava/util/Set;
      18: aload_0
      19: new           #7                  // class java/util/concurrent/ConcurrentHashMap
      22: dup
      23: invokespecial #8                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      26: putfield      #9                  // Field isConnected:Ljava/util/concurrent/ConcurrentHashMap;
      29: return

  public synchronized void addListener(net.openhft.chronicle.network.cluster.ConnectionManager$ConnectionListener);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionListeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: getfield      #9                  // Field isConnected:Ljava/util/concurrent/ConcurrentHashMap;
      15: aload_1
      16: invokedynamic #11,  0             // InvokeDynamic #0:accept:(Lnet/openhft/chronicle/network/cluster/ConnectionManager$ConnectionListener;)Ljava/util/function/BiConsumer;
      21: invokevirtual #12                 // Method java/util/concurrent/ConcurrentHashMap.forEach:(Ljava/util/function/BiConsumer;)V
      24: return

  public synchronized void onConnectionChanged(boolean, net.openhft.chronicle.network.NetworkContext);
    Code:
       0: invokedynamic #13,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
       5: astore_3
       6: aload_0
       7: getfield      #9                  // Field isConnected:Ljava/util/concurrent/ConcurrentHashMap;
      10: aload_2
      11: aload_3
      12: invokevirtual #14                 // Method java/util/concurrent/ConcurrentHashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #15                 // class java/util/concurrent/atomic/AtomicBoolean
      18: iload_1
      19: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.getAndSet:(Z)Z
      22: istore        4
      24: iload         4
      26: iload_1
      27: if_icmpeq     46
      30: aload_0
      31: getfield      #6                  // Field connectionListeners:Ljava/util/Set;
      34: aload_2
      35: iload_1
      36: invokedynamic #17,  0             // InvokeDynamic #2:accept:(Lnet/openhft/chronicle/network/NetworkContext;Z)Ljava/util/function/Consumer;
      41: invokeinterface #18,  2           // InterfaceMethod java/util/Set.forEach:(Ljava/util/function/Consumer;)V
      46: return

  private static void lambda$onConnectionChanged$2(net.openhft.chronicle.network.NetworkContext, boolean, net.openhft.chronicle.network.cluster.ConnectionManager$ConnectionListener);
    Code:
       0: aload_2
       1: aload_0
       2: iload_1
       3: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/network/cluster/ConnectionManager$ConnectionListener.onConnectionChange:(Lnet/openhft/chronicle/network/NetworkContext;Z)V
       8: goto          12
      11: astore_3
      12: return
    Exception table:
       from    to  target type
           0     8    11   Class java/lang/IllegalStateException

  private static java.util.concurrent.atomic.AtomicBoolean lambda$onConnectionChanged$1(net.openhft.chronicle.network.NetworkContext);
    Code:
       0: new           #15                 // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: invokespecial #21                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       7: areturn

  private static void lambda$addListener$0(net.openhft.chronicle.network.cluster.ConnectionManager$ConnectionListener, net.openhft.chronicle.network.NetworkContext, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       6: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/network/cluster/ConnectionManager$ConnectionListener.onConnectionChange:(Lnet/openhft/chronicle/network/NetworkContext;Z)V
      11: return

  net.openhft.chronicle.engine.fs.EngineConnectionManager(net.openhft.chronicle.engine.fs.EngineConnectionManager$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
