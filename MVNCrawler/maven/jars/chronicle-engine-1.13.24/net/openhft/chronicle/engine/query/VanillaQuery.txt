Compiled from "VanillaQuery.java"
public class net.openhft.chronicle.engine.query.VanillaQuery<E> implements net.openhft.chronicle.engine.api.query.Query<E> {
  private final java.util.stream.Stream<E> stream;

  public net.openhft.chronicle.engine.query.VanillaQuery(java.util.stream.Stream<E>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field stream:Ljava/util/stream/Stream;
       9: return

  public net.openhft.chronicle.engine.api.query.Query<E> filter(net.openhft.chronicle.core.util.SerializablePredicate<? super E>);
    Code:
       0: new           #3                  // class net/openhft/chronicle/engine/query/VanillaQuery
       3: dup
       4: aload_0
       5: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       8: aload_1
       9: invokeinterface #4,  2            // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      14: invokespecial #5                  // Method "<init>":(Ljava/util/stream/Stream;)V
      17: areturn

  public <R> net.openhft.chronicle.engine.api.query.Query<R> map(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends R>);
    Code:
       0: new           #3                  // class net/openhft/chronicle/engine/query/VanillaQuery
       3: dup
       4: aload_0
       5: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       8: aload_1
       9: invokeinterface #6,  2            // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      14: invokespecial #5                  // Method "<init>":(Ljava/util/stream/Stream;)V
      17: areturn

  public <R> net.openhft.chronicle.engine.api.query.Query<R> project(java.lang.Class<R>);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #8                  // String todo
       6: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <R> net.openhft.chronicle.engine.api.query.Query<R> flatMap(net.openhft.chronicle.core.util.SerializableFunction<? super E, ? extends net.openhft.chronicle.engine.api.query.Query<? extends R>>);
    Code:
       0: new           #3                  // class net/openhft/chronicle/engine/query/VanillaQuery
       3: dup
       4: aload_0
       5: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       8: aload_1
       9: invokedynamic #10,  0             // InvokeDynamic #0:apply:(Lnet/openhft/chronicle/core/util/SerializableFunction;)Ljava/util/function/Function;
      14: invokeinterface #11,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      19: invokespecial #5                  // Method "<init>":(Ljava/util/stream/Stream;)V
      22: areturn

  public java.util.stream.Stream<E> stream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       4: areturn

  public net.openhft.chronicle.engine.api.query.Subscription subscribe(java.util.function.Consumer<? super E>);
    Code:
       0: new           #7                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #8                  // String todo
       6: invokespecial #9                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <R, A> R collect(java.util.stream.Collector<? super E, A, R>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      10: areturn

  public void forEach(java.util.function.Consumer<? super E>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field stream:Ljava/util/stream/Stream;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      10: return

  private static java.util.stream.Stream lambda$flatMap$0(net.openhft.chronicle.core.util.SerializableFunction, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #14,  2           // InterfaceMethod net/openhft/chronicle/core/util/SerializableFunction.apply:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #15                 // class net/openhft/chronicle/engine/api/query/Query
      10: invokeinterface #16,  1           // InterfaceMethod net/openhft/chronicle/engine/api/query/Query.stream:()Ljava/util/stream/Stream;
      15: areturn
}
