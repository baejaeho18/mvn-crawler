Compiled from "ChronicleConfig.java"
public class net.openhft.chronicle.engine.api.management.mbean.ChronicleConfig implements net.openhft.chronicle.engine.api.management.mbean.ChronicleConfigMBean {
  public net.openhft.chronicle.engine.api.management.mbean.ChronicleConfig();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static void init();
    Code:
       0: invokestatic  #2                  // Method java/lang/management/ManagementFactory.getPlatformMBeanServer:()Ljavax/management/MBeanServer;
       3: astore_0
       4: new           #3                  // class net/openhft/chronicle/engine/api/management/mbean/ChronicleConfig
       7: dup
       8: invokespecial #4                  // Method "<init>":()V
      11: astore_1
      12: new           #5                  // class javax/management/ObjectName
      15: dup
      16: ldc           #6                  // String net.openhft.chronicle.engine:type=ChronicleConfig
      18: invokespecial #7                  // Method javax/management/ObjectName."<init>":(Ljava/lang/String;)V
      21: astore_2
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokeinterface #8,  3            // InterfaceMethod javax/management/MBeanServer.registerMBean:(Ljava/lang/Object;Ljavax/management/ObjectName;)Ljavax/management/ObjectInstance;
      30: pop
      31: goto          44
      34: astore_2
      35: new           #10                 // class java/lang/IllegalStateException
      38: dup
      39: aload_2
      40: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/Throwable;)V
      43: athrow
      44: return
    Exception table:
       from    to  target type
          12    31    34   Class java/lang/Exception

  public boolean getYamlServerReadLogging();
    Code:
       0: invokestatic  #12                 // Method net/openhft/chronicle/wire/YamlLogging.showServerReads:()Z
       3: ireturn

  public void setYamlServerReadLogging(boolean);
    Code:
       0: iload_1
       1: invokestatic  #13                 // Method net/openhft/chronicle/wire/YamlLogging.showServerReads:(Z)V
       4: return

  public boolean getYamlClientReadLogging();
    Code:
       0: invokestatic  #14                 // Method net/openhft/chronicle/wire/YamlLogging.showClientReads:()Z
       3: ireturn

  public void setYamlClientReadLogging(boolean);
    Code:
       0: iload_1
       1: invokestatic  #15                 // Method net/openhft/chronicle/wire/YamlLogging.showClientReads:(Z)V
       4: return

  public boolean getYamlServerWriteLogging();
    Code:
       0: invokestatic  #16                 // Method net/openhft/chronicle/wire/YamlLogging.showServerWrites:()Z
       3: ireturn

  public void setYamlServerWriteLogging(boolean);
    Code:
       0: iload_1
       1: invokestatic  #17                 // Method net/openhft/chronicle/wire/YamlLogging.showServerWrites:(Z)V
       4: return

  public boolean getYamlClientWriteLogging();
    Code:
       0: invokestatic  #18                 // Method net/openhft/chronicle/wire/YamlLogging.showClientWrites:()Z
       3: ireturn

  public void setYamlClientWriteLogging(boolean);
    Code:
       0: iload_1
       1: invokestatic  #19                 // Method net/openhft/chronicle/wire/YamlLogging.showClientWrites:(Z)V
       4: return

  public boolean getShowHeartBeats();
    Code:
       0: invokestatic  #20                 // Method net/openhft/chronicle/wire/YamlLogging.showHeartBeats:()Z
       3: ireturn

  public void setShowHeartBeats(boolean);
    Code:
       0: iload_1
       1: invokestatic  #21                 // Method net/openhft/chronicle/wire/YamlLogging.showHeartBeats:(Z)V
       4: return
}
