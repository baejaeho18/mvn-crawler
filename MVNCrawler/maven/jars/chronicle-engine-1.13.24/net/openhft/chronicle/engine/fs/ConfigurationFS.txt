Compiled from "ConfigurationFS.java"
public class net.openhft.chronicle.engine.fs.ConfigurationFS implements net.openhft.chronicle.engine.fs.MountPoint {
  public static final java.lang.String FSTAB;

  public static final java.lang.String CLUSTERS;

  private final java.lang.String assetName;

  private final java.lang.String etcDir;

  private final java.lang.String baseDir;

  private net.openhft.chronicle.engine.api.tree.AssetTree assetTree;

  public net.openhft.chronicle.engine.fs.ConfigurationFS(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field assetName:Ljava/lang/String;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field etcDir:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field baseDir:Ljava/lang/String;
      19: return

  public void install(java.lang.String, net.openhft.chronicle.engine.api.tree.AssetTree);
    Code:
       0: aload_2
       1: aload_0
       2: getfield      #2                  // Field assetName:Ljava/lang/String;
       5: invokeinterface #5,  2            // InterfaceMethod net/openhft/chronicle/engine/api/tree/AssetTree.acquireAsset:(Ljava/lang/String;)Lnet/openhft/chronicle/engine/api/tree/Asset;
      10: astore_3
      11: aload_3
      12: ldc           #6                  // class net/openhft/chronicle/engine/api/map/MapView
      14: invokeinterface #7,  2            // InterfaceMethod net/openhft/chronicle/engine/api/tree/Asset.getView:(Ljava/lang/Class;)Ljava/lang/Object;
      19: ifnonnull     84
      22: aload_3
      23: checkcast     #8                  // class net/openhft/chronicle/engine/tree/VanillaAsset
      26: invokevirtual #9                  // Method net/openhft/chronicle/engine/tree/VanillaAsset.enableTranslatingValuesToBytesStore:()V
      29: aload_0
      30: getfield      #2                  // Field assetName:Ljava/lang/String;
      33: invokestatic  #10                 // Method net/openhft/chronicle/engine/api/tree/RequestContext.requestContext:(Ljava/lang/String;)Lnet/openhft/chronicle/engine/api/tree/RequestContext;
      36: ldc           #11                 // class java/lang/String
      38: invokevirtual #12                 // Method net/openhft/chronicle/engine/api/tree/RequestContext.keyType:(Ljava/lang/Class;)Lnet/openhft/chronicle/engine/api/tree/RequestContext;
      41: ldc           #11                 // class java/lang/String
      43: invokevirtual #13                 // Method net/openhft/chronicle/engine/api/tree/RequestContext.valueType:(Ljava/lang/Class;)Lnet/openhft/chronicle/engine/api/tree/RequestContext;
      46: astore        4
      48: aload_3
      49: ldc           #14                 // class net/openhft/chronicle/engine/map/AuthenticatedKeyValueStore
      51: new           #15                 // class net/openhft/chronicle/engine/map/FilePerKeyValueStore
      54: dup
      55: aload         4
      57: aload_0
      58: getfield      #3                  // Field etcDir:Ljava/lang/String;
      61: invokevirtual #16                 // Method net/openhft/chronicle/engine/api/tree/RequestContext.basePath:(Ljava/lang/String;)Lnet/openhft/chronicle/engine/api/tree/RequestContext;
      64: aload_3
      65: invokespecial #17                 // Method net/openhft/chronicle/engine/map/FilePerKeyValueStore."<init>":(Lnet/openhft/chronicle/engine/api/tree/RequestContext;Lnet/openhft/chronicle/engine/api/tree/Asset;)V
      68: invokeinterface #18,  3           // InterfaceMethod net/openhft/chronicle/engine/api/tree/Asset.registerView:(Ljava/lang/Class;Ljava/lang/Object;)V
      73: aload_3
      74: ldc           #6                  // class net/openhft/chronicle/engine/api/map/MapView
      76: aload         4
      78: invokeinterface #19,  3           // InterfaceMethod net/openhft/chronicle/engine/api/tree/Asset.acquireView:(Ljava/lang/Class;Lnet/openhft/chronicle/engine/api/tree/RequestContext;)Ljava/lang/Object;
      83: pop
      84: aload_0
      85: aload_2
      86: invokevirtual #20                 // Method subscribeTo:(Lnet/openhft/chronicle/engine/api/tree/AssetTree;)V
      89: return

  public void subscribeTo(net.openhft.chronicle.engine.api.tree.AssetTree);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field assetTree:Lnet/openhft/chronicle/engine/api/tree/AssetTree;
       5: aload_0
       6: invokedynamic #22,  0             // InvokeDynamic #0:onMessage:(Lnet/openhft/chronicle/engine/fs/ConfigurationFS;)Lnet/openhft/chronicle/engine/api/pubsub/Subscriber;
      11: astore_2
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field assetName:Ljava/lang/String;
      17: ldc           #23                 // class net/openhft/chronicle/engine/api/map/MapEvent
      19: aload_2
      20: invokeinterface #24,  4           // InterfaceMethod net/openhft/chronicle/engine/api/tree/AssetTree.registerSubscriber:(Ljava/lang/String;Ljava/lang/Class;Lnet/openhft/chronicle/engine/api/pubsub/Subscriber;)V
      25: return

  private void onFile(net.openhft.chronicle.engine.api.map.MapEvent<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #25,  1           // InterfaceMethod net/openhft/chronicle/engine/api/map/MapEvent.getKey:()Ljava/lang/Object;
       6: checkcast     #11                 // class java/lang/String
       9: astore_2
      10: iconst_m1
      11: istore_3
      12: aload_2
      13: invokevirtual #26                 // Method java/lang/String.hashCode:()I
      16: lookupswitch  { // 2
           -1220454099: 44
            -981585476: 58
               default: 69
          }
      44: aload_2
      45: ldc           #27                 // String fstab.yaml
      47: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      50: ifeq          69
      53: iconst_0
      54: istore_3
      55: goto          69
      58: aload_2
      59: ldc           #29                 // String clusters.yaml
      61: invokevirtual #28                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      64: ifeq          69
      67: iconst_1
      68: istore_3
      69: iload_3
      70: lookupswitch  { // 2
                     0: 96
                     1: 112
               default: 125
          }
      96: aload_0
      97: aload_1
      98: invokeinterface #30,  1           // InterfaceMethod net/openhft/chronicle/engine/api/map/MapEvent.getValue:()Ljava/lang/Object;
     103: checkcast     #11                 // class java/lang/String
     106: invokespecial #31                 // Method processFstab:(Ljava/lang/String;)V
     109: goto          125
     112: aload_0
     113: aload_1
     114: invokeinterface #30,  1           // InterfaceMethod net/openhft/chronicle/engine/api/map/MapEvent.getValue:()Ljava/lang/Object;
     119: checkcast     #11                 // class java/lang/String
     122: invokespecial #32                 // Method processClusters:(Ljava/lang/String;)V
     125: return

  private void processClusters(java.lang.String);
    Code:
       0: new           #33                 // class net/openhft/chronicle/engine/fs/Clusters
       3: dup
       4: invokespecial #34                 // Method net/openhft/chronicle/engine/fs/Clusters."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokestatic  #35                 // Method net/openhft/chronicle/wire/TextWire.from:(Ljava/lang/String;)Lnet/openhft/chronicle/wire/TextWire;
      13: invokevirtual #36                 // Method net/openhft/chronicle/engine/fs/Clusters.readMarshallable:(Lnet/openhft/chronicle/wire/WireIn;)V
      16: aload_2
      17: aload_0
      18: getfield      #21                 // Field assetTree:Lnet/openhft/chronicle/engine/api/tree/AssetTree;
      21: invokevirtual #37                 // Method net/openhft/chronicle/engine/fs/Clusters.install:(Lnet/openhft/chronicle/engine/api/tree/AssetTree;)V
      24: return

  private void processFstab(java.lang.String);
    Code:
       0: new           #38                 // class net/openhft/chronicle/engine/fs/Fstab
       3: dup
       4: invokespecial #39                 // Method net/openhft/chronicle/engine/fs/Fstab."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokestatic  #35                 // Method net/openhft/chronicle/wire/TextWire.from:(Ljava/lang/String;)Lnet/openhft/chronicle/wire/TextWire;
      13: invokevirtual #40                 // Method net/openhft/chronicle/engine/fs/Fstab.readMarshallable:(Lnet/openhft/chronicle/wire/WireIn;)V
      16: aload_2
      17: aload_0
      18: getfield      #4                  // Field baseDir:Ljava/lang/String;
      21: aload_0
      22: getfield      #21                 // Field assetTree:Lnet/openhft/chronicle/engine/api/tree/AssetTree;
      25: invokevirtual #41                 // Method net/openhft/chronicle/engine/fs/Fstab.install:(Ljava/lang/String;Lnet/openhft/chronicle/engine/api/tree/AssetTree;)V
      28: return

  public void readMarshallable(net.openhft.chronicle.wire.WireIn) throws java.lang.IllegalStateException;
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #43                 // String todo
       6: invokespecial #44                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public void writeMarshallable(net.openhft.chronicle.wire.WireOut);
    Code:
       0: new           #42                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #43                 // String todo
       6: invokespecial #44                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.String spec();
    Code:
       0: aload_0
       1: getfield      #3                  // Field etcDir:Ljava/lang/String;
       4: areturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #2                  // Field assetName:Ljava/lang/String;
       4: areturn
}
