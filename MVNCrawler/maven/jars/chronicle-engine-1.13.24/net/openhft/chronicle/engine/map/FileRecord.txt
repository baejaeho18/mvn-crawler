Compiled from "FileRecord.java"
class net.openhft.chronicle.engine.map.FileRecord<T> {
  final long timestamp;

  private final T contents;

  boolean valid;

  net.openhft.chronicle.engine.map.FileRecord(long, T);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field valid:Z
       9: aload_0
      10: lload_1
      11: putfield      #3                  // Field timestamp:J
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field contents:Ljava/lang/Object;
      19: return

  public T contents();
    Code:
       0: aload_0
       1: getfield      #4                  // Field contents:Ljava/lang/Object;
       4: instanceof    #5                  // class net/openhft/chronicle/core/ReferenceCounted
       7: ifeq          28
      10: aload_0
      11: getfield      #4                  // Field contents:Ljava/lang/Object;
      14: checkcast     #5                  // class net/openhft/chronicle/core/ReferenceCounted
      17: invokeinterface #6,  1            // InterfaceMethod net/openhft/chronicle/core/ReferenceCounted.reserve:()V
      22: goto          28
      25: astore_1
      26: aconst_null
      27: areturn
      28: aload_0
      29: getfield      #4                  // Field contents:Ljava/lang/Object;
      32: areturn
    Exception table:
       from    to  target type
          10    22    25   Class java/lang/IllegalStateException
}
