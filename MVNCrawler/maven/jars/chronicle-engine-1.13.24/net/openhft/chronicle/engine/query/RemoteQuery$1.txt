Compiled from "RemoteQuery.java"
class net.openhft.chronicle.engine.query.RemoteQuery$1 implements net.openhft.chronicle.engine.api.pubsub.Subscriber<E> {
  final java.util.concurrent.BlockingQueue val$queue;

  final java.util.concurrent.atomic.AtomicBoolean val$finished;

  final net.openhft.chronicle.engine.query.RemoteQuery this$0;

  net.openhft.chronicle.engine.query.RemoteQuery$1(net.openhft.chronicle.engine.query.RemoteQuery, java.util.concurrent.BlockingQueue, java.util.concurrent.atomic.AtomicBoolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lnet/openhft/chronicle/engine/query/RemoteQuery;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field val$finished:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: invokespecial #4                  // Method java/lang/Object."<init>":()V
      19: return

  public void onMessage(E);
    Code:
       0: aload_0
       1: getfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
       4: aload_1
       5: ldc2_w        #5                  // long 20l
       8: getstatic     #7                  // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokeinterface #8,  5            // InterfaceMethod java/util/concurrent/BlockingQueue.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      16: istore_2
      17: aload_0
      18: getfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
      21: dup
      22: astore_3
      23: monitorenter
      24: aload_0
      25: getfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
      28: invokevirtual #9                  // Method java/lang/Object.notifyAll:()V
      31: aload_3
      32: monitorexit
      33: goto          43
      36: astore        4
      38: aload_3
      39: monitorexit
      40: aload         4
      42: athrow
      43: iload_2
      44: ifne          68
      47: invokestatic  #10                 // Method net/openhft/chronicle/core/Jvm.warn:()Lnet/openhft/chronicle/core/onoes/ExceptionHandler;
      50: aload_0
      51: invokevirtual #11                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      54: ldc           #12                 // String Queue Full
      56: invokeinterface #13,  3           // InterfaceMethod net/openhft/chronicle/core/onoes/ExceptionHandler.on:(Ljava/lang/Class;Ljava/lang/String;)V
      61: aload_0
      62: getfield      #1                  // Field this$0:Lnet/openhft/chronicle/engine/query/RemoteQuery;
      65: invokestatic  #14                 // Method net/openhft/chronicle/engine/query/RemoteQuery.access$000:(Lnet/openhft/chronicle/engine/query/RemoteQuery;)V
      68: goto          78
      71: astore_2
      72: invokestatic  #16                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      75: invokevirtual #17                 // Method java/lang/Thread.interrupt:()V
      78: return
    Exception table:
       from    to  target type
          24    33    36   any
          36    40    36   any
           0    68    71   Class java/lang/InterruptedException

  public void onEndOfSubscription();
    Code:
       0: aload_0
       1: getfield      #3                  // Field val$finished:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
      12: dup
      13: astore_1
      14: monitorenter
      15: aload_0
      16: getfield      #2                  // Field val$queue:Ljava/util/concurrent/BlockingQueue;
      19: invokevirtual #9                  // Method java/lang/Object.notifyAll:()V
      22: aload_1
      23: monitorexit
      24: goto          32
      27: astore_2
      28: aload_1
      29: monitorexit
      30: aload_2
      31: athrow
      32: return
    Exception table:
       from    to  target type
          15    24    27   any
          27    30    27   any
}
