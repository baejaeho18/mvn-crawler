Compiled from "ScalazArbitrary.scala"
public final class scalaz.scalacheck.ScalazArbitrary$ implements java.io.Serializable {
  private static final org.scalacheck.Cogen cogenOrdering;

  private static final org.scalacheck.Arbitrary UnitArbitrary;

  private static final org.scalacheck.Arbitrary AlphaArbitrary;

  private static final org.scalacheck.Arbitrary BooleanConjunctionArbitrary;

  private static final org.scalacheck.Arbitrary arbBigInt;

  private static final org.scalacheck.Arbitrary arbBigInteger;

  private static final org.scalacheck.Arbitrary BigIntegerMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary BigIntMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary ByteMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary CharMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary ShortMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary IntMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary LongMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary FloatMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary DoubleMultiplicationArbitrary;

  private static final org.scalacheck.Arbitrary IntDualArbitrary;

  private static final org.scalacheck.Arbitrary DigitArbitrary;

  private static final org.scalacheck.Arbitrary OrderingArbitrary;

  public static final scalaz.scalacheck.ScalazArbitrary$ MODULE$;

  private scalaz.scalacheck.ScalazArbitrary$();
    Code:
       0: aload_0
       1: invokespecial #105                // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class scalaz/scalacheck/ScalazArbitrary$
       3: dup
       4: invokespecial #108                // Method "<init>":()V
       7: putstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
      10: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      13: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      16: invokevirtual #119                // Method org/scalacheck/Cogen$.cogenInt:()Lorg/scalacheck/Cogen;
      19: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      22: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
      25: invokedynamic #143,  0            // InvokeDynamic #0:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      30: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      35: putstatic     #151                // Field cogenOrdering:Lorg/scalacheck/Cogen;
      38: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      41: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
      44: invokedynamic #167,  0            // InvokeDynamic #1:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function0;
      49: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      52: putstatic     #172                // Field UnitArbitrary:Lorg/scalacheck/Arbitrary;
      55: getstatic     #177                // Field scalaz/Alpha$.MODULE$:Lscalaz/Alpha$;
      58: invokevirtual #181                // Method scalaz/Alpha$.alphas:()Lscalaz/IList;
      61: invokevirtual #187                // Method scalaz/IList.toList:()Lscala/collection/immutable/List;
      64: astore_0
      65: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      68: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
      71: aload_0
      72: invokedynamic #195,  0            // InvokeDynamic #2:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscala/collection/immutable/List;)Lscala/Function0;
      77: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      80: putstatic     #197                // Field AlphaArbitrary:Lorg/scalacheck/Arbitrary;
      83: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
      86: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      89: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
      92: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      95: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
      98: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     101: invokevirtual #218                // Method org/scalacheck/Arbitrary$.arbBool:()Lorg/scalacheck/Arbitrary;
     104: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     107: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     110: invokedynamic #227,  0            // InvokeDynamic #3:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
     115: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     120: checkcast     #235                // class org/scalacheck/Arbitrary
     123: putstatic     #237                // Field BooleanConjunctionArbitrary:Lorg/scalacheck/Arbitrary;
     126: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
     129: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
     132: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
     135: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
     138: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     141: invokedynamic #251,  0            // InvokeDynamic #4:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function0;
     146: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     149: invokedynamic #256,  0            // InvokeDynamic #5:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function0;
     154: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     157: invokedynamic #267,  0            // InvokeDynamic #6:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
     162: invokeinterface #273,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
     167: checkcast     #235                // class org/scalacheck/Arbitrary
     170: putstatic     #275                // Field arbBigInt:Lorg/scalacheck/Arbitrary;
     173: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
     176: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
     179: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
     182: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
     185: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     188: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     191: invokevirtual #277                // Method org/scalacheck/Arbitrary$.arbBigInt:()Lorg/scalacheck/Arbitrary;
     194: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     197: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     200: invokedynamic #284,  0            // InvokeDynamic #7:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
     205: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
     210: checkcast     #235                // class org/scalacheck/Arbitrary
     213: putstatic     #286                // Field arbBigInteger:Lorg/scalacheck/Arbitrary;
     216: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     219: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     222: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     225: invokevirtual #293                // Method arbBigInteger:()Lorg/scalacheck/Arbitrary;
     228: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     231: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     234: checkcast     #235                // class org/scalacheck/Arbitrary
     237: putstatic     #298                // Field BigIntegerMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     240: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     243: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     246: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     249: invokevirtual #277                // Method org/scalacheck/Arbitrary$.arbBigInt:()Lorg/scalacheck/Arbitrary;
     252: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     255: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     258: checkcast     #235                // class org/scalacheck/Arbitrary
     261: putstatic     #300                // Field BigIntMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     264: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     267: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     270: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     273: invokevirtual #303                // Method org/scalacheck/Arbitrary$.arbByte:()Lorg/scalacheck/Arbitrary;
     276: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     279: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     282: checkcast     #235                // class org/scalacheck/Arbitrary
     285: putstatic     #305                // Field ByteMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     288: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     291: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     294: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     297: invokevirtual #308                // Method org/scalacheck/Arbitrary$.arbChar:()Lorg/scalacheck/Arbitrary;
     300: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     303: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     306: checkcast     #235                // class org/scalacheck/Arbitrary
     309: putstatic     #310                // Field CharMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     312: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     315: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     318: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     321: invokevirtual #313                // Method org/scalacheck/Arbitrary$.arbShort:()Lorg/scalacheck/Arbitrary;
     324: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     327: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     330: checkcast     #235                // class org/scalacheck/Arbitrary
     333: putstatic     #315                // Field ShortMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     336: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     339: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     342: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     345: invokevirtual #318                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
     348: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     351: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     354: checkcast     #235                // class org/scalacheck/Arbitrary
     357: putstatic     #320                // Field IntMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     360: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     363: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     366: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     369: invokevirtual #323                // Method org/scalacheck/Arbitrary$.arbLong:()Lorg/scalacheck/Arbitrary;
     372: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     375: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     378: checkcast     #235                // class org/scalacheck/Arbitrary
     381: putstatic     #325                // Field LongMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     384: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     387: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     390: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     393: invokevirtual #328                // Method org/scalacheck/Arbitrary$.arbFloat:()Lorg/scalacheck/Arbitrary;
     396: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     399: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     402: checkcast     #235                // class org/scalacheck/Arbitrary
     405: putstatic     #330                // Field FloatMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     408: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     411: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     414: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     417: invokevirtual #333                // Method org/scalacheck/Arbitrary$.arbDouble:()Lorg/scalacheck/Arbitrary;
     420: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     423: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     426: checkcast     #235                // class org/scalacheck/Arbitrary
     429: putstatic     #335                // Field DoubleMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
     432: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
     435: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     438: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     441: invokevirtual #318                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
     444: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
     447: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
     450: checkcast     #235                // class org/scalacheck/Arbitrary
     453: putstatic     #337                // Field IntDualArbitrary:Lorg/scalacheck/Arbitrary;
     456: getstatic     #342                // Field scalaz/Digit$.MODULE$:Lscalaz/Digit$;
     459: invokevirtual #345                // Method scalaz/Digit$.digits:()Lscalaz/IList;
     462: invokevirtual #187                // Method scalaz/IList.toList:()Lscala/collection/immutable/List;
     465: astore_1
     466: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     469: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     472: aload_1
     473: invokedynamic #350,  0            // InvokeDynamic #8:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscala/collection/immutable/List;)Lscala/Function0;
     478: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
     481: putstatic     #352                // Field DigitArbitrary:Lorg/scalacheck/Arbitrary;
     484: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
     487: getstatic     #110                // Field MODULE$:Lscalaz/scalacheck/ScalazArbitrary$;
     490: invokedynamic #357,  0            // InvokeDynamic #9:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function0;
     495: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
     498: putstatic     #359                // Field OrderingArbitrary:Lorg/scalacheck/Arbitrary;
     501: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #365                // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class scalaz/scalacheck/ScalazArbitrary$
       6: invokespecial #368                // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  private <A> org.scalacheck.Arbitrary<A> arb(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokevirtual #378                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #235                // class org/scalacheck/Arbitrary
      10: areturn

  public <A> org.scalacheck.Cogen<scalaz.IList<A>> cogenIList(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #391,  0            // InvokeDynamic #10:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.Maybe<A>> cogenMaybe(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #397                // Method org/scalacheck/Cogen$.cogenOption:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #404,  0            // InvokeDynamic #11:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.LazyOption<A>> cogenLazyOption(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #397                // Method org/scalacheck/Cogen$.cogenOption:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #414,  0            // InvokeDynamic #12:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.$bslash$amp$div<A, B>> cogenThese(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<B>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_0
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #422                // Method cogenDisjunction:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      13: aload_1
      14: aload_2
      15: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      18: invokevirtual #422                // Method cogenDisjunction:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      21: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      24: aload_0
      25: invokedynamic #432,  0            // InvokeDynamic #13:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      30: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      35: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.LazyEither<A, B>> cogenLazyEither(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<B>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: invokevirtual #439                // Method org/scalacheck/Cogen$.cogenEither:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #446,  0            // InvokeDynamic #14:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.$bslash$div<A, B>> cogenDisjunction(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<B>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: invokevirtual #439                // Method org/scalacheck/Cogen$.cogenEither:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #454,  0            // InvokeDynamic #15:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.Validation<A, B>> cogenValidation(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<B>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: invokevirtual #439                // Method org/scalacheck/Cogen$.cogenEither:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #465,  0            // InvokeDynamic #16:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public org.scalacheck.Cogen<scalaz.Ordering> cogenOrdering();
    Code:
       0: getstatic     #151                // Field cogenOrdering:Lorg/scalacheck/Cogen;
       3: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.OneOr<F, A>> cogenOneOr(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_0
       4: aload_2
       5: aload_1
       6: invokevirtual #422                // Method cogenDisjunction:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
       9: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      12: aload_0
      13: invokedynamic #477,  0            // InvokeDynamic #17:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      18: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      23: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.OneAnd<F, A>> cogenOneAnd(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #487,  0            // InvokeDynamic #18:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public <A> org.scalacheck.Cogen<scalaz.ISet<A>> cogenISet(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #497,  0            // InvokeDynamic #19:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.$eq$eq$greater$greater<A, B>> cogenIMap(org.scalacheck.Cogen<A>, org.scalacheck.Cogen<B>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       9: aload_1
      10: aload_2
      11: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      17: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      20: aload_0
      21: invokedynamic #508,  0            // InvokeDynamic #20:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      26: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      31: areturn

  public <A> org.scalacheck.Cogen<scalaz.DList<A>> cogenDList(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #518,  0            // InvokeDynamic #21:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.EphemeralStream<A>> cogenEphemeralStream(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #528,  0            // InvokeDynamic #22:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.Heap<A>> cogenHeap(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_0
       4: aload_1
       5: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
       8: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: aload_0
      12: invokedynamic #540,  0            // InvokeDynamic #23:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      17: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      22: areturn

  public <A> org.scalacheck.Cogen<scalaz.Dequeue<A>> cogenDequeue(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #550,  0            // InvokeDynamic #24:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.NonEmptyList<A>> cogenNonEmptyList(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_0
       8: aload_1
       9: invokevirtual #555                // Method cogenIList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      12: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      15: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      18: aload_0
      19: invokedynamic #562,  0            // InvokeDynamic #25:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      24: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      29: areturn

  public <A> org.scalacheck.Cogen<scalaz.IndSeq<A>> cogenIndSeq(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: getstatic     #570                // Field scalaz/Foldable$.MODULE$:Lscalaz/Foldable$;
      16: getstatic     #575                // Field scalaz/IndSeq$.MODULE$:Lscalaz/IndSeq$;
      19: invokevirtual #579                // Method scalaz/IndSeq$.indSeqInstance:()Lscalaz/Alt;
      22: checkcast     #581                // class scalaz/Foldable
      25: invokevirtual #584                // Method scalaz/Foldable$.apply:(Lscalaz/Foldable;)Lscalaz/Foldable;
      28: astore_2
      29: aload_0
      30: aload_2
      31: invokedynamic #594,  0            // InvokeDynamic #26:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Foldable;)Lscala/Function1;
      36: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      41: areturn

  public <A> org.scalacheck.Cogen<scalaz.Diev<A>> cogenDiev(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       9: aload_1
      10: aload_1
      11: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: invokevirtual #600                // Method org/scalacheck/Cogen$.cogenVector:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      17: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      20: aload_0
      21: invokedynamic #607,  0            // InvokeDynamic #27:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      26: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      31: areturn

  public <F, G, A> org.scalacheck.Cogen<scalaz.Coproduct<F, G, A>> cogenCoproduct(org.scalacheck.Cogen<scalaz.$bslash$div<java.lang.Object, java.lang.Object>>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_1
       4: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
       7: aload_0
       8: invokedynamic #616,  0            // InvokeDynamic #28:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      13: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      18: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.Const<A, B>> cogenConst(org.scalacheck.Cogen<A>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #625,  0            // InvokeDynamic #29:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <A> org.scalacheck.Cogen<scalaz.Zipper<A>> cogenZipper(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       9: aload_1
      10: invokevirtual #630                // Method org/scalacheck/Cogen$.cogenLazyList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_1
      14: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      17: aload_1
      18: invokevirtual #630                // Method org/scalacheck/Cogen$.cogenLazyList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      21: invokevirtual #634                // Method org/scalacheck/Cogen$.tuple3:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      24: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      27: aload_0
      28: invokedynamic #641,  0            // InvokeDynamic #30:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      33: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      38: areturn

  public <W, A, B> org.scalacheck.Cogen<scalaz.TracedT<W, A, B>> cogenTracedT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #651,  0            // InvokeDynamic #31:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, I, A, B> org.scalacheck.Cogen<scalaz.IndexedStoreT<F, I, A, B>> cogenIndexedStoreT(org.scalacheck.Cogen<I>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_2
       7: aload_1
       8: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #661,  0            // InvokeDynamic #32:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public <W, R, O, M, A> org.scalacheck.Cogen<scalaz.IndexedContsT<W, R, O, M, A>> cogenIndexedContsT(org.scalacheck.Cogen<scala.Function1<java.lang.Object, java.lang.Object>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #670,  0            // InvokeDynamic #33:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <A> org.scalacheck.Cogen<scalaz.Endo<A>> cogenEndo(org.scalacheck.Cogen<scala.Function1<A, A>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #679,  0            // InvokeDynamic #34:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.Endomorphic<F, A>> cogenEndomorphic(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #688,  0            // InvokeDynamic #35:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A, B> org.scalacheck.Cogen<scalaz.Kleisli<F, A, B>> cogenKleisli(org.scalacheck.Cogen<scala.Function1<A, java.lang.Object>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #697,  0            // InvokeDynamic #36:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A, B> org.scalacheck.Cogen<scalaz.Cokleisli<F, A, B>> cogenCokleisli(org.scalacheck.Cogen<scala.Function1<java.lang.Object, B>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #706,  0            // InvokeDynamic #37:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.NullResult<A, B>> cogenNullResult(org.scalacheck.Cogen<scala.Function1<A, scala.Option<B>>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #715,  0            // InvokeDynamic #38:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <A, B> org.scalacheck.Cogen<scalaz.NullArgument<A, B>> cogenNullArgument(org.scalacheck.Cogen<scala.Function1<scala.Option<A>, B>>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #724,  0            // InvokeDynamic #39:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.ContravariantCoyoneda<F, A>> cogenContravariantCoyoneda(scalaz.Contravariant<F>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_2
       4: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
       7: aload_0
       8: aload_1
       9: invokedynamic #738,  0            // InvokeDynamic #40:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Contravariant;)Lscala/Function1;
      14: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      19: areturn

  public <A, F, B> org.scalacheck.Cogen<scalaz.EitherT<A, F, B>> cogenEitherT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #748,  0            // InvokeDynamic #41:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A, B> org.scalacheck.Cogen<scalaz.LazyEitherT<F, A, B>> cogenLazyEitherT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #757,  0            // InvokeDynamic #42:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A, B> org.scalacheck.Cogen<scalaz.TheseT<F, A, B>> cogenTheseT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #766,  0            // InvokeDynamic #43:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.MaybeT<F, A>> cogenMaybeT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #775,  0            // InvokeDynamic #44:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.StreamT<F, A>> cogenStreamT(scalaz.Monad<F>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #789,  0            // InvokeDynamic #45:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monad;)Lscala/Function1;
       8: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      13: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.OptionT<F, A>> cogenOptionT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #799,  0            // InvokeDynamic #46:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.LazyOptionT<F, A>> cogenLazyOptionT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #808,  0            // InvokeDynamic #47:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.IdT<F, A>> cogenIdT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #817,  0            // InvokeDynamic #48:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <R, W, S1, S2, F, A> org.scalacheck.Cogen<scalaz.IndexedReaderWriterStateT<R, W, S1, S2, F, A>> cogenIndexedReaderWriterStateT(scalaz.Monad<F>, org.scalacheck.Cogen<scala.Function2<R, S1, java.lang.Object>>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #828,  0            // InvokeDynamic #49:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monad;)Lscala/Function1;
       8: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      13: areturn

  public <F, S1, S2, A> org.scalacheck.Cogen<scalaz.IndexedStateT<S1, S2, F, A>> cogenIndexedStateT(scalaz.Monad<F>, org.scalacheck.Cogen<scala.Function1<S1, java.lang.Object>>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #839,  0            // InvokeDynamic #50:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monad;)Lscala/Function1;
       8: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      13: areturn

  public <A, F, B> org.scalacheck.Cogen<scalaz.WriterT<A, F, B>> cogenWriterT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #848,  0            // InvokeDynamic #51:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A, B> org.scalacheck.Cogen<scalaz.UnwriterT<F, A, B>> cogenUnwriterT(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #857,  0            // InvokeDynamic #52:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <A> org.scalacheck.Cogen<scalaz.Tree<A>> cogenTree(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #867,  0            // InvokeDynamic #53:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A> org.scalacheck.Cogen<scalaz.TreeLoc<A>> cogenTreeLoc(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #875                // Field scalaz/Divide$.MODULE$:Lscalaz/Divide$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #879                // Method scalaz/scalacheck/ScalaCheckBinding$.CogenInstance:()Lscalaz/Divisible;
       9: invokevirtual #882                // Method scalaz/Divide$.apply:(Lscalaz/Divide;)Lscalaz/Divide;
      12: aload_0
      13: invokedynamic #889,  0            // InvokeDynamic #54:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      18: aload_0
      19: aload_1
      20: invokevirtual #891                // Method cogenTree:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      23: aload_0
      24: aload_0
      25: aload_1
      26: invokevirtual #891                // Method cogenTree:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      29: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      32: aload_0
      33: aload_0
      34: aload_1
      35: invokevirtual #891                // Method cogenTree:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      38: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      41: aload_0
      42: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      45: aload_0
      46: aload_0
      47: aload_1
      48: invokevirtual #891                // Method cogenTree:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      51: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      54: aload_1
      55: aload_0
      56: aload_0
      57: aload_1
      58: invokevirtual #891                // Method cogenTree:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      61: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      64: invokevirtual #634                // Method org/scalacheck/Cogen$.tuple3:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      67: invokevirtual #533                // Method cogenEphemeralStream:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      70: invokeinterface #897,  6          // InterfaceMethod scalaz/Divide.dividing4:(Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: checkcast     #145                // class org/scalacheck/Cogen
      78: areturn

  public <A> org.scalacheck.Cogen<scalaz.StrictTree<A>> cogenStrictTree(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #907,  0            // InvokeDynamic #55:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.Coyoneda<F, A>> cogenCoyoneda(scalaz.Functor<F>, org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokedynamic #921,  0            // InvokeDynamic #56:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Functor;)Lscala/Function1;
       8: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      13: areturn

  private <A> scala.Function1<scalaz.Name<A>, A> nameToValue();
    Code:
       0: aload_0
       1: invokedynamic #932,  0            // InvokeDynamic #57:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       6: areturn

  public <A> org.scalacheck.Cogen<scalaz.Need<A>> cogenNeed(org.scalacheck.Cogen<A>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #936                // Method nameToValue:()Lscala/Function1;
       5: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      10: areturn

  public <A> org.scalacheck.Cogen<scalaz.Value<A>> cogenValue(org.scalacheck.Cogen<A>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #936                // Method nameToValue:()Lscala/Function1;
       5: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      10: areturn

  public <A> org.scalacheck.Cogen<scalaz.Name<A>> cogenName(org.scalacheck.Cogen<A>);
    Code:
       0: aload_1
       1: aload_0
       2: invokespecial #936                // Method nameToValue:()Lscala/Function1;
       5: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      10: areturn

  public <A> org.scalacheck.Cogen<scalaz.ImmutableArray<A>> cogenImmutableArray(org.scalacheck.Cogen<A>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: invokevirtual #384                // Method org/scalacheck/Cogen$.cogenList:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      13: aload_0
      14: invokedynamic #950,  0            // InvokeDynamic #58:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      24: areturn

  public <A1, A2, A3> org.scalacheck.Cogen<scalaz.Either3<A1, A2, A3>> cogenEither3(org.scalacheck.Cogen<A1>, org.scalacheck.Cogen<A2>, org.scalacheck.Cogen<A3>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_0
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokevirtual #422                // Method cogenDisjunction:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      10: aload_3
      11: invokevirtual #422                // Method cogenDisjunction:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      17: aload_0
      18: invokedynamic #962,  0            // InvokeDynamic #59:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      28: areturn

  public <A1, A2> org.scalacheck.Cogen<scalaz.LazyTuple2<A1, A2>> cogenLazyTuple2(org.scalacheck.Cogen<A1>, org.scalacheck.Cogen<A2>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: invokevirtual #425                // Method org/scalacheck/Cogen$.tuple2:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      11: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: aload_0
      15: invokedynamic #973,  0            // InvokeDynamic #60:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      20: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      25: areturn

  public <A1, A2, A3> org.scalacheck.Cogen<scalaz.LazyTuple3<A1, A2, A3>> cogenLazyTuple3(org.scalacheck.Cogen<A1>, org.scalacheck.Cogen<A2>, org.scalacheck.Cogen<A3>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: aload_3
       9: invokevirtual #634                // Method org/scalacheck/Cogen$.tuple3:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      12: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      15: aload_0
      16: invokedynamic #985,  0            // InvokeDynamic #61:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      21: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      26: areturn

  public <A1, A2, A3, A4> org.scalacheck.Cogen<scalaz.LazyTuple4<A1, A2, A3, A4>> cogenLazyTuple4(org.scalacheck.Cogen<A1>, org.scalacheck.Cogen<A2>, org.scalacheck.Cogen<A3>, org.scalacheck.Cogen<A4>);
    Code:
       0: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: getstatic     #115                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       6: aload_1
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokevirtual #995                // Method org/scalacheck/Cogen$.tuple4:(Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      14: invokevirtual #123                // Method org/scalacheck/Cogen$.apply:(Lorg/scalacheck/Cogen;)Lorg/scalacheck/Cogen;
      17: aload_0
      18: invokedynamic #1002,  0           // InvokeDynamic #62:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      28: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.Ap<F, A>> cogenAp(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1011,  0           // InvokeDynamic #63:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, G, A, B> org.scalacheck.Cogen<scalaz.Tannen<F, G, A, B>> cogenTannen(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1020,  0           // InvokeDynamic #64:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, G, A, B> org.scalacheck.Arbitrary<scalaz.Tannen<F, G, A, B>> tannenArbitrary(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1029,  0           // InvokeDynamic #65:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.Ap<F, A>> apArbitrary(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1038,  0           // InvokeDynamic #66:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Cogen<scalaz.Alter<F, A>> cogenAlter(org.scalacheck.Cogen<java.lang.Object>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #1047,  0           // InvokeDynamic #67:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
       7: invokeinterface #149,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
      12: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.Alter<F, A>> alterArbitrary(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1056,  0           // InvokeDynamic #68:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <M, N> org.scalacheck.Arbitrary<scalaz.$colon$plus$colon<M, N>> monoidCoproductArbitrary(org.scalacheck.Arbitrary<M>, org.scalacheck.Arbitrary<N>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_0
      17: aload_1
      18: aload_2
      19: invokevirtual #1064               // Method DisjunctionArbitrary:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      22: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      25: getstatic     #1074               // Field scala/collection/immutable/Vector$.MODULE$:Lscala/collection/immutable/Vector$;
      28: invokevirtual #1078               // Method scala/collection/immutable/Vector$.iterableFactory:()Lscala/collection/Factory;
      31: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      34: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      37: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      40: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      43: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      46: aload_0
      47: invokedynamic #1096,  0           // InvokeDynamic #69:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      52: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      57: checkcast     #235                // class org/scalacheck/Arbitrary
      60: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.$bslash$amp$div<A, B>> theseArb(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: invokedynamic #1108,  0           // InvokeDynamic #70:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      11: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      14: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Endo<A>> endoArb(org.scalacheck.Arbitrary<scala.Function1<A, A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1117,  0           // InvokeDynamic #71:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.EndoByName<A>> endoByNameArb(org.scalacheck.Arbitrary<scala.Function1<A, A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1126,  0           // InvokeDynamic #72:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.Endomorphic<F, A>> endomorphicArbitrary(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1135,  0           // InvokeDynamic #73:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.EphemeralStream<A>> EphemeralStreamArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1143               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      23: invokevirtual #1144               // Method scala/collection/immutable/LazyList$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      41: aload_0
      42: invokedynamic #1151,  0           // InvokeDynamic #74:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      47: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #235                // class org/scalacheck/Arbitrary
      55: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.IStream<A>> IStreamArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1143               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      23: invokevirtual #1144               // Method scala/collection/immutable/LazyList$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      41: aload_0
      42: invokedynamic #1161,  0           // InvokeDynamic #75:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      47: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #235                // class org/scalacheck/Arbitrary
      55: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.CorecursiveList<A>> CorecursiveListArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1143               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      23: invokevirtual #1144               // Method scala/collection/immutable/LazyList$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      41: aload_0
      42: invokedynamic #1171,  0           // InvokeDynamic #76:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      47: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #235                // class org/scalacheck/Arbitrary
      55: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.ImmutableArray<A>> ImmutableArrayArbitrary(org.scalacheck.Arbitrary<A>, scala.reflect.ClassTag<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1181               // Field scala/collection/Factory$.MODULE$:Lscala/collection/Factory$;
      23: aload_2
      24: invokevirtual #1185               // Method scala/collection/Factory$.arrayFactory:(Lscala/reflect/ClassTag;)Lscala/collection/Factory;
      27: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      30: aload_0
      31: invokedynamic #1192,  0           // InvokeDynamic #77:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      36: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      39: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      42: aload_0
      43: invokedynamic #1199,  0           // InvokeDynamic #78:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      48: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      53: checkcast     #235                // class org/scalacheck/Arbitrary
      56: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Value<A>> ValueArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1210,  0           // InvokeDynamic #79:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Name<A>> NameArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1220,  0           // InvokeDynamic #80:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Need<A>> NeedArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1230,  0           // InvokeDynamic #81:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public org.scalacheck.Arbitrary<scala.runtime.BoxedUnit> UnitArbitrary();
    Code:
       0: getstatic     #172                // Field UnitArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<scalaz.Alpha> AlphaArbitrary();
    Code:
       0: getstatic     #197                // Field AlphaArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> BooleanConjunctionArbitrary();
    Code:
       0: getstatic     #237                // Field BooleanConjunctionArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<scala.math.BigInt> arbBigInt();
    Code:
       0: getstatic     #275                // Field arbBigInt:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.math.BigInteger> arbBigInteger();
    Code:
       0: getstatic     #286                // Field arbBigInteger:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> BigIntegerMultiplicationArbitrary();
    Code:
       0: getstatic     #298                // Field BigIntegerMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> BigIntMultiplicationArbitrary();
    Code:
       0: getstatic     #300                // Field BigIntMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> ByteMultiplicationArbitrary();
    Code:
       0: getstatic     #305                // Field ByteMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> CharMultiplicationArbitrary();
    Code:
       0: getstatic     #310                // Field CharMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> ShortMultiplicationArbitrary();
    Code:
       0: getstatic     #315                // Field ShortMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> IntMultiplicationArbitrary();
    Code:
       0: getstatic     #320                // Field IntMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> LongMultiplicationArbitrary();
    Code:
       0: getstatic     #325                // Field LongMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> FloatMultiplicationArbitrary();
    Code:
       0: getstatic     #330                // Field FloatMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> DoubleMultiplicationArbitrary();
    Code:
       0: getstatic     #335                // Field DoubleMultiplicationArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<java.lang.Object> IntDualArbitrary();
    Code:
       0: getstatic     #337                // Field IntDualArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public org.scalacheck.Arbitrary<scalaz.Digit> DigitArbitrary();
    Code:
       0: getstatic     #352                // Field DigitArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.NonEmptyList<A>> NonEmptyListArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: invokedynamic #1246,  0           // InvokeDynamic #82:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_1
      21: invokedynamic #1251,  0           // InvokeDynamic #83:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: invokedynamic #1258,  0           // InvokeDynamic #84:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      32: invokeinterface #273,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #235                // class org/scalacheck/Arbitrary
      40: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.OneAnd<F, A>> OneAndArbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: invokedynamic #1266,  0           // InvokeDynamic #85:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_2
      21: invokedynamic #1271,  0           // InvokeDynamic #86:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: invokedynamic #1278,  0           // InvokeDynamic #87:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      32: invokeinterface #273,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #235                // class org/scalacheck/Arbitrary
      40: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.OneOr<F, A>> OneOrArbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_0
      14: aload_2
      15: aload_1
      16: invokevirtual #1064               // Method DisjunctionArbitrary:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      19: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      22: aload_0
      23: invokedynamic #1287,  0           // InvokeDynamic #88:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      28: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      33: checkcast     #235                // class org/scalacheck/Arbitrary
      36: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.$eq$eq$greater$greater<A, B>> Arbitrary_$eq$eq$greater$greater(scalaz.Order<A>, org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      19: aload_2
      20: aload_3
      21: invokevirtual #1294               // Method org/scalacheck/Arbitrary$.arbTuple2:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      24: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      27: getstatic     #1299               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      30: invokevirtual #1300               // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      33: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      36: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      39: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      42: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      45: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      48: aload_0
      49: aload_1
      50: invokedynamic #1310,  0           // InvokeDynamic #89:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Order;)Lscala/Function1;
      55: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      60: checkcast     #235                // class org/scalacheck/Arbitrary
      63: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.ISet<A>> Arbitrary_ISet(scalaz.Order<A>, org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_2
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1299               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      23: invokevirtual #1300               // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      41: aload_0
      42: aload_1
      43: invokedynamic #1322,  0           // InvokeDynamic #90:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Order;)Lscala/Function1;
      48: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      53: checkcast     #235                // class org/scalacheck/Arbitrary
      56: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Maybe<A>> Arbitrary_Maybe(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: invokevirtual #1328               // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      20: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      23: aload_0
      24: invokedynamic #1335,  0           // InvokeDynamic #91:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      29: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: checkcast     #235                // class org/scalacheck/Arbitrary
      37: areturn

  public org.scalacheck.Arbitrary<scalaz.Ordering> OrderingArbitrary();
    Code:
       0: getstatic     #359                // Field OrderingArbitrary:Lorg/scalacheck/Arbitrary;
       3: areturn

  private <A> org.scalacheck.Gen<scalaz.EphemeralStream<A>> withSize(int, scala.Function1<java.lang.Object, org.scalacheck.Gen<A>>);
    Code:
       0: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
       9: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      12: getstatic     #1357               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
      15: iload_1
      16: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      19: iconst_1
      20: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      23: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      26: iload_1
      27: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      30: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      33: invokevirtual #1377               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Enum;
      36: invokevirtual #1381               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
      39: iconst_1
      40: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      43: invokevirtual #1386               // Method scalaz/syntax/OrderOps.max:(Ljava/lang/Object;)Ljava/lang/Object;
      46: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      49: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      52: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      55: invokevirtual #1401               // Method scalaz/IList$.fill:(ILjava/lang/Object;)Lscalaz/IList;
      58: invokevirtual #1405               // Method scalaz/IList.toEphemeralStream:()Lscalaz/EphemeralStream;
      61: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      64: invokevirtual #1414               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/Align;
      67: checkcast     #1416               // class scalaz/Traverse
      70: invokeinterface #1422,  3         // InterfaceMethod scalaz/Applicative.sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
      75: checkcast     #11                 // class org/scalacheck/Gen
      78: aload_0
      79: iload_1
      80: aload_2
      81: invokedynamic #1432,  0           // InvokeDynamic #92:apply:(Lscalaz/scalacheck/ScalazArbitrary$;ILscala/Function1;)Lscala/Function1;
      86: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      89: areturn

  public <A> org.scalacheck.Gen<scalaz.Tree<A>> treeGenSized(int, scalaz.NotNothing<A>, org.scalacheck.Arbitrary<A>);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: istore        5
       7: iload         5
       9: iconst_1
      10: if_icmpgt     29
      13: aload_3
      14: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      17: aload_0
      18: invokedynamic #1452,  0           // InvokeDynamic #93:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      26: goto          124
      29: iconst_2
      30: iload         4
      32: if_icmpne     62
      35: aload_0
      36: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      39: aload_3
      40: aload_3
      41: invokevirtual #1294               // Method org/scalacheck/Arbitrary$.arbTuple2:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      44: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      47: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      50: aload_0
      51: invokedynamic #1461,  0           // InvokeDynamic #94:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      56: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      59: goto          124
      62: iconst_3
      63: iload         4
      65: if_icmpne     96
      68: aload_0
      69: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      72: aload_3
      73: aload_3
      74: aload_3
      75: invokevirtual #1465               // Method org/scalacheck/Arbitrary$.arbTuple3:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      78: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      81: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      84: aload_0
      85: invokedynamic #1472,  0           // InvokeDynamic #95:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      90: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      93: goto          124
      96: aload_0
      97: iload_1
      98: iconst_1
      99: isub
     100: aload_0
     101: aload_2
     102: aload_3
     103: invokedynamic #1482,  0           // InvokeDynamic #96:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
     108: invokespecial #1484               // Method withSize:(ILscala/Function1;)Lorg/scalacheck/Gen;
     111: aload_0
     112: aload_3
     113: invokedynamic #1492,  0           // InvokeDynamic #97:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
     118: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
     121: goto          124
     124: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Tree<A>> TreeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1503,  0           // InvokeDynamic #98:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      10: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      13: areturn

  public <A> org.scalacheck.Gen<scalaz.StrictTree<A>> strictTreeGenSized(int, scalaz.NotNothing<A>, org.scalacheck.Arbitrary<A>);
    Code:
       0: iload_1
       1: istore        4
       3: iload         4
       5: istore        5
       7: iload         5
       9: iconst_1
      10: if_icmpgt     29
      13: aload_3
      14: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      17: aload_0
      18: invokedynamic #1513,  0           // InvokeDynamic #99:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      26: goto          124
      29: iconst_2
      30: iload         4
      32: if_icmpne     62
      35: aload_0
      36: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      39: aload_3
      40: aload_3
      41: invokevirtual #1294               // Method org/scalacheck/Arbitrary$.arbTuple2:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      44: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      47: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      50: aload_0
      51: invokedynamic #1520,  0           // InvokeDynamic #100:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      56: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      59: goto          124
      62: iconst_3
      63: iload         4
      65: if_icmpne     96
      68: aload_0
      69: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      72: aload_3
      73: aload_3
      74: aload_3
      75: invokevirtual #1465               // Method org/scalacheck/Arbitrary$.arbTuple3:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      78: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      81: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      84: aload_0
      85: invokedynamic #1525,  0           // InvokeDynamic #101:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      90: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      93: goto          124
      96: aload_0
      97: iload_1
      98: iconst_1
      99: isub
     100: aload_0
     101: aload_2
     102: aload_3
     103: invokedynamic #1530,  0           // InvokeDynamic #102:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
     108: invokespecial #1484               // Method withSize:(ILscala/Function1;)Lorg/scalacheck/Gen;
     111: aload_0
     112: aload_3
     113: invokedynamic #1535,  0           // InvokeDynamic #103:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
     118: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
     121: goto          124
     124: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.StrictTree<A>> StrictTreeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1543,  0           // InvokeDynamic #104:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      10: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      13: areturn

  public <A> org.scalacheck.Gen<scalaz.TreeLoc<A>> treeLocGenSized(int, scalaz.NotNothing<A>, org.scalacheck.Arbitrary<A>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokedynamic #1551,  0           // InvokeDynamic #105:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
       8: astore        4
      10: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      13: iconst_1
      14: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      17: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      20: iload_1
      21: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      24: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      27: invokevirtual #1377               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Enum;
      30: invokevirtual #1381               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
      33: iconst_1
      34: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      37: invokevirtual #1386               // Method scalaz/syntax/OrderOps.max:(Ljava/lang/Object;)Ljava/lang/Object;
      40: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      43: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      46: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      49: aload_0
      50: iload_1
      51: invokedynamic #1561,  0           // InvokeDynamic #106:apply:(Lscalaz/scalacheck/ScalazArbitrary$;I)Lscala/Function1;
      56: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      59: aload_0
      60: aload_2
      61: aload_3
      62: aload         4
      64: invokedynamic #1571,  0           // InvokeDynamic #107:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;Lscala/Function1;)Lscala/Function1;
      69: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      72: areturn

  public <A> org.scalacheck.Arbitrary<scala.collection.Iterable<A>> IterableArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: invokedynamic #1580,  0           // InvokeDynamic #108:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_1
      21: invokedynamic #1585,  0           // InvokeDynamic #109:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: invokedynamic #1592,  0           // InvokeDynamic #110:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      32: invokeinterface #273,  4          // InterfaceMethod scalaz/Apply.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #235                // class org/scalacheck/Arbitrary
      40: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.TreeLoc<A>> TreeLocArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: invokedynamic #1600,  0           // InvokeDynamic #111:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      10: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      13: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.$bslash$div<A, B>> DisjunctionArbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: aload_2
      18: invokevirtual #1606               // Method org/scalacheck/Arbitrary$.arbEither:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      21: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      24: aload_0
      25: invokedynamic #1613,  0           // InvokeDynamic #112:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      30: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      35: checkcast     #235                // class org/scalacheck/Arbitrary
      38: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.Validation<A, B>> ValidationArbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokevirtual #1064               // Method DisjunctionArbitrary:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      19: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      22: aload_0
      23: invokedynamic #1624,  0           // InvokeDynamic #113:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      28: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      33: checkcast     #235                // class org/scalacheck/Arbitrary
      36: areturn

  public <A> org.scalacheck.Arbitrary<scala.Tuple1<A>> Tuple1Arbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1634,  0           // InvokeDynamic #114:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<scala.Function0<A>> Function0Arbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1644,  0           // InvokeDynamic #115:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> FirstOptionArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: invokevirtual #1328               // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      20: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      23: aload_0
      24: invokedynamic #1654,  0           // InvokeDynamic #116:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      29: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: checkcast     #235                // class org/scalacheck/Arbitrary
      37: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> LastOptionArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: invokevirtual #1328               // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      20: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      23: aload_0
      24: invokedynamic #1661,  0           // InvokeDynamic #117:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      29: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      34: checkcast     #235                // class org/scalacheck/Arbitrary
      37: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> MinOptionArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       7: aload_1
       8: invokevirtual #1328               // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      11: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      14: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #235                // class org/scalacheck/Arbitrary
      20: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> MaxOptionArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       7: aload_1
       8: invokevirtual #1328               // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      11: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      14: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      17: checkcast     #235                // class org/scalacheck/Arbitrary
      20: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> FirstMaybeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_0
      14: aload_1
      15: invokevirtual #1669               // Method Arbitrary_Maybe:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      18: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      21: aload_0
      22: invokedynamic #1676,  0           // InvokeDynamic #118:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      27: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      32: checkcast     #235                // class org/scalacheck/Arbitrary
      35: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> LastMaybeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_0
      14: aload_1
      15: invokevirtual #1669               // Method Arbitrary_Maybe:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      18: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      21: aload_0
      22: invokedynamic #1683,  0           // InvokeDynamic #119:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      27: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      32: checkcast     #235                // class org/scalacheck/Arbitrary
      35: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> MinMaybeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: aload_0
       5: aload_1
       6: invokevirtual #1669               // Method Arbitrary_Maybe:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       9: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      12: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #235                // class org/scalacheck/Arbitrary
      18: areturn

  public <A> org.scalacheck.Arbitrary<java.lang.Object> MaxMaybeArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #291                // Field scalaz/Tag$.MODULE$:Lscalaz/Tag$;
       3: aload_0
       4: aload_0
       5: aload_1
       6: invokevirtual #1669               // Method Arbitrary_Maybe:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       9: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      12: invokevirtual #296                // Method scalaz/Tag$.subst:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #235                // class org/scalacheck/Arbitrary
      18: areturn

  public <V, A> org.scalacheck.Arbitrary<scalaz.FingerTree$Finger<V, A>> FingerArbitrary(scalaz.Monoid<V>, org.scalacheck.Arbitrary<A>, scalaz.Reducer<A, V>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_2
       5: aload_3
       6: invokedynamic #1701,  0           // InvokeDynamic #120:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function0;
      11: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      14: areturn

  public <V, A> org.scalacheck.Arbitrary<scalaz.FingerTree$Node<V, A>> NodeArbitrary(scalaz.Monoid<V>, org.scalacheck.Arbitrary<A>, scalaz.Reducer<A, V>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_2
       5: aload_3
       6: invokedynamic #1711,  0           // InvokeDynamic #121:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function0;
      11: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      14: areturn

  public <V, A> org.scalacheck.Arbitrary<scalaz.FingerTree<V, A>> FingerTreeArbitrary(scalaz.Monoid<V>, org.scalacheck.Arbitrary<A>, scalaz.Reducer<A, V>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #1722,  0           // InvokeDynamic #122:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function0;
      12: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      15: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.IndSeq<A>> IndSeqArbibrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #1299               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      23: invokevirtual #1300               // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      41: aload_0
      42: invokedynamic #1732,  0           // InvokeDynamic #123:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      47: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      52: checkcast     #235                // class org/scalacheck/Arbitrary
      55: areturn

  public <A> org.scalacheck.Arbitrary<java.util.concurrent.Callable<A>> CallableArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1742,  0           // InvokeDynamic #124:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Zipper<A>> ZipperArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: invokedynamic #1750,  0           // InvokeDynamic #125:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_1
      21: invokedynamic #1755,  0           // InvokeDynamic #126:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: aload_1
      28: invokedynamic #1760,  0           // InvokeDynamic #127:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      33: aload_0
      34: invokedynamic #1771,  0           // InvokeDynamic #128:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function3;
      39: invokeinterface #1775,  5         // InterfaceMethod scalaz/Apply.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      44: checkcast     #235                // class org/scalacheck/Arbitrary
      47: areturn

  public <M, A, B> org.scalacheck.Arbitrary<scalaz.Kleisli<M, A, B>> KleisliArbitrary(org.scalacheck.Arbitrary<scala.Function1<A, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1784,  0           // InvokeDynamic #129:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <M, A, B> org.scalacheck.Arbitrary<scalaz.Cokleisli<M, A, B>> CokleisliArbitrary(org.scalacheck.Arbitrary<scala.Function1<java.lang.Object, B>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1793,  0           // InvokeDynamic #130:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, G, A> org.scalacheck.Arbitrary<scalaz.Coproduct<F, G, A>> CoproductArbitrary(org.scalacheck.Arbitrary<scalaz.$bslash$div<java.lang.Object, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1802,  0           // InvokeDynamic #131:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <W, F, A> org.scalacheck.Arbitrary<scalaz.WriterT<W, F, A>> writerTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1811,  0           // InvokeDynamic #132:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, U, A> org.scalacheck.Arbitrary<scalaz.UnwriterT<F, U, A>> unwriterTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1820,  0           // InvokeDynamic #133:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.OptionT<F, A>> optionTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1829,  0           // InvokeDynamic #134:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.MaybeT<F, A>> maybeTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1838,  0           // InvokeDynamic #135:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.LazyOption<A>> lazyOptionArb(org.scalacheck.Arbitrary<scala.Option<A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1847,  0           // InvokeDynamic #136:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.LazyOptionT<F, A>> lazyOptionTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1856,  0           // InvokeDynamic #137:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A, B> org.scalacheck.Arbitrary<scalaz.LazyEither<A, B>> lazyEitherArb(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      16: aload_1
      17: aload_2
      18: invokevirtual #1606               // Method org/scalacheck/Arbitrary$.arbEither:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      21: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      24: aload_0
      25: invokedynamic #1867,  0           // InvokeDynamic #138:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      30: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      35: checkcast     #235                // class org/scalacheck/Arbitrary
      38: areturn

  public <F, A, B> org.scalacheck.Arbitrary<scalaz.LazyEitherT<F, A, B>> lazyEitherTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1876,  0           // InvokeDynamic #139:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A, F> org.scalacheck.Arbitrary<scalaz.IdT<F, A>> idTArbitrary(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1885,  0           // InvokeDynamic #140:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <S, F, A> org.scalacheck.Arbitrary<scalaz.IndexedStateT<S, S, F, A>> stateTArb(org.scalacheck.Arbitrary<scala.Function1<S, java.lang.Object>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1890               // Method indexedStateTArb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  public <R, W, S1, S2, F, A> org.scalacheck.Arbitrary<scalaz.IndexedReaderWriterStateT<R, W, S1, S2, F, A>> indexedReaderWriterStateTArb(org.scalacheck.Arbitrary<scala.Function2<R, S1, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1899,  0           // InvokeDynamic #141:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <W, A, B> org.scalacheck.Arbitrary<scalaz.TracedT<W, A, B>> tracedTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1908,  0           // InvokeDynamic #142:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <W, R, O, M, A> org.scalacheck.Arbitrary<scalaz.IndexedContsT<W, R, O, M, A>> indexedContsTArb(org.scalacheck.Arbitrary<scala.Function1<java.lang.Object, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1917,  0           // InvokeDynamic #143:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <S1, S2, F, A> org.scalacheck.Arbitrary<scalaz.IndexedStateT<S1, S2, F, A>> indexedStateTArb(org.scalacheck.Arbitrary<scala.Function1<S1, java.lang.Object>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1925,  0           // InvokeDynamic #144:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A, F, B> org.scalacheck.Arbitrary<scalaz.EitherT<A, F, B>> eitherTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1934,  0           // InvokeDynamic #145:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A, B> org.scalacheck.Arbitrary<scalaz.TheseT<F, A, B>> theseTArb(org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1943,  0           // InvokeDynamic #146:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.Const<A, B>> constArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_0
      13: aload_1
      14: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      17: aload_0
      18: invokedynamic #1953,  0           // InvokeDynamic #147:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      23: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      28: checkcast     #235                // class org/scalacheck/Arbitrary
      31: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.DList<A>> dlistArbitrary(org.scalacheck.Arbitrary<scala.collection.immutable.List<A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1962,  0           // InvokeDynamic #148:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.IList<A>> ilistArbitrary(org.scalacheck.Arbitrary<scala.collection.immutable.List<A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1971,  0           // InvokeDynamic #149:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Dequeue<A>> dequeueArbitrary(org.scalacheck.Arbitrary<scala.collection.immutable.List<A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #1980,  0           // InvokeDynamic #150:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <A, B> org.scalacheck.Arbitrary<scalaz.LazyTuple2<A, B>> lazyTuple2Arbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>);
    Code:
       0: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      12: aload_0
      13: aload_1
      14: invokedynamic #1989,  0           // InvokeDynamic #151:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_2
      21: invokedynamic #1994,  0           // InvokeDynamic #152:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: invokedynamic #2001,  0           // InvokeDynamic #153:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      32: invokeinterface #2002,  4         // InterfaceMethod scalaz/Applicative.apply2:(Lscala/Function0;Lscala/Function0;Lscala/Function2;)Ljava/lang/Object;
      37: checkcast     #235                // class org/scalacheck/Arbitrary
      40: areturn

  public <A, B, C> org.scalacheck.Arbitrary<scalaz.LazyTuple3<A, B, C>> lazyTuple3Arbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>, org.scalacheck.Arbitrary<C>);
    Code:
       0: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      12: aload_0
      13: aload_1
      14: invokedynamic #2012,  0           // InvokeDynamic #154:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_2
      21: invokedynamic #2017,  0           // InvokeDynamic #155:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: aload_3
      28: invokedynamic #2022,  0           // InvokeDynamic #156:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      33: aload_0
      34: invokedynamic #2029,  0           // InvokeDynamic #157:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function3;
      39: invokeinterface #2030,  5         // InterfaceMethod scalaz/Applicative.apply3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;)Ljava/lang/Object;
      44: checkcast     #235                // class org/scalacheck/Arbitrary
      47: areturn

  public <A, B, C, D> org.scalacheck.Arbitrary<scalaz.LazyTuple4<A, B, C, D>> lazyTuple4Arbitrary(org.scalacheck.Arbitrary<A>, org.scalacheck.Arbitrary<B>, org.scalacheck.Arbitrary<C>, org.scalacheck.Arbitrary<D>);
    Code:
       0: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      12: aload_0
      13: aload_1
      14: invokedynamic #2042,  0           // InvokeDynamic #158:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      19: aload_0
      20: aload_2
      21: invokedynamic #2047,  0           // InvokeDynamic #159:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      26: aload_0
      27: aload_3
      28: invokedynamic #2052,  0           // InvokeDynamic #160:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      33: aload_0
      34: aload         4
      36: invokedynamic #2057,  0           // InvokeDynamic #161:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      41: aload_0
      42: invokedynamic #2068,  0           // InvokeDynamic #162:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function4;
      47: invokeinterface #2072,  6         // InterfaceMethod scalaz/Applicative.apply4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      52: checkcast     #235                // class org/scalacheck/Arbitrary
      55: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Heap<A>> heapArbitrary(scalaz.Order<A>, org.scalacheck.Arbitrary<scala.collection.immutable.List<A>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_2
      13: aload_0
      14: aload_1
      15: invokedynamic #2083,  0           // InvokeDynamic #163:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Order;)Lscala/Function1;
      20: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: checkcast     #235                // class org/scalacheck/Arbitrary
      28: areturn

  public <F, A, B> org.scalacheck.Arbitrary<scalaz.IndexedStoreT<F, A, A, B>> storeTArb(org.scalacheck.Arbitrary<scala.Tuple2<java.lang.Object, A>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2088               // Method indexedStoreTArb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  public <F, I, A, B> org.scalacheck.Arbitrary<scalaz.IndexedStoreT<F, I, A, B>> indexedStoreTArb(org.scalacheck.Arbitrary<scala.Tuple2<java.lang.Object, I>>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: invokedynamic #2096,  0           // InvokeDynamic #164:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.ListT<F, A>> listTArb(scalaz.Applicative<F>, org.scalacheck.Arbitrary<java.lang.Object>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_2
      13: aload_0
      14: invokedynamic #2107,  0           // InvokeDynamic #165:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      19: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      24: checkcast     #235                // class org/scalacheck/Arbitrary
      27: areturn

  public <F, A> org.scalacheck.Arbitrary<scalaz.StreamT<F, A>> streamTArb(org.scalacheck.Arbitrary<java.lang.Object>, scalaz.Applicative<F>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: aload_2
      15: invokedynamic #2121,  0           // InvokeDynamic #166:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Applicative;)Lscala/Function1;
      20: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: checkcast     #235                // class org/scalacheck/Arbitrary
      28: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.CaseInsensitive<A>> CaseInsensitiveArbitrary(org.scalacheck.Arbitrary<A>, scalaz.FoldCase<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: aload_2
      15: invokedynamic #2136,  0           // InvokeDynamic #167:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/FoldCase;)Lscala/Function1;
      20: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: checkcast     #235                // class org/scalacheck/Arbitrary
      28: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.Diev<A>> dievArbitrary(org.scalacheck.Arbitrary<scala.collection.immutable.List<A>>, scalaz.Enum<A>);
    Code:
       0: getstatic     #202                // Field scalaz/Functor$.MODULE$:Lscalaz/Functor$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #211                // Method scalaz/scalacheck/ScalaCheckBinding$.ArbitraryMonad:()Lscalaz/Monad;
       9: invokevirtual #214                // Method scalaz/Functor$.apply:(Lscalaz/Functor;)Lscalaz/Functor;
      12: aload_1
      13: aload_0
      14: aload_2
      15: invokedynamic #2151,  0           // InvokeDynamic #168:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Enum;)Lscala/Function1;
      20: invokeinterface #233,  3          // InterfaceMethod scalaz/Functor.map:(Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
      25: checkcast     #235                // class org/scalacheck/Arbitrary
      28: areturn

  public <A> org.scalacheck.Arbitrary<scalaz.iteratee.Input<A>> iterateeInputArbitrary(org.scalacheck.Arbitrary<A>);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2160,  0           // InvokeDynamic #169:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      10: invokevirtual #170                // Method org/scalacheck/Arbitrary$.apply:(Lscala/Function0;)Lorg/scalacheck/Arbitrary;
      13: areturn

  private final int $init$$$anonfun$1(scalaz.Ordering);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #2164               // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
       5: aload_2
       6: invokevirtual #2168               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       9: ifeq          16
      12: iconst_0
      13: goto          53
      16: getstatic     #2171               // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
      19: aload_2
      20: invokevirtual #2168               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      23: ifeq          30
      26: iconst_1
      27: goto          53
      30: getstatic     #2174               // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
      33: aload_2
      34: invokevirtual #2168               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ifeq          44
      40: iconst_2
      41: goto          53
      44: new           #2176               // class scala/MatchError
      47: dup
      48: aload_2
      49: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      52: athrow
      53: ireturn

  private final org.scalacheck.Gen $init$$$anonfun$2();
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #2186               // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
       6: invokevirtual #2189               // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen $init$$$anonfun$3(scala.collection.immutable.List);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: invokevirtual #2194               // Method org/scalacheck/Gen$.oneOf:(Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
       7: areturn

  private final java.lang.Object $init$$$anonfun$9(boolean);
    Code:
       0: getstatic     #2202               // Field scalaz/syntax/std/BooleanOps$.MODULE$:Lscalaz/syntax/std/BooleanOps$;
       3: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       6: iload_1
       7: invokevirtual #2206               // Method scalaz/Scalaz$.ToBooleanOpsFromBoolean:(Z)Z
      10: invokevirtual #2209               // Method scalaz/syntax/std/BooleanOps$.conjunction$extension:(Z)Ljava/lang/Object;
      13: areturn

  private java.lang.Object $init$$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2213               // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #2215               // Method $init$$$anonfun$9:(Z)Ljava/lang/Object;
       8: areturn

  private final org.scalacheck.Arbitrary $init$$$anonfun$4();
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: invokevirtual #318                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
       7: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      10: areturn

  private final org.scalacheck.Arbitrary $init$$$anonfun$5();
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: invokevirtual #318                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
       7: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      10: areturn

  private final scala.math.BigInt $init$$$anonfun$10(int, int);
    Code:
       0: getstatic     #2225               // Field scala/math/BigInt$.MODULE$:Lscala/math/BigInt$;
       3: iload_1
       4: iload_2
       5: iadd
       6: invokevirtual #2229               // Method scala/math/BigInt$.int2bigInt:(I)Lscala/math/BigInt;
       9: areturn

  private scala.math.BigInt $init$$$anonfun$adapted$2(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: aload_2
       6: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokespecial #2235               // Method $init$$$anonfun$10:(II)Lscala/math/BigInt;
      12: areturn

  private final java.math.BigInteger $init$$$anonfun$6(scala.math.BigInt);
    Code:
       0: aload_1
       1: invokevirtual #2242               // Method scala/math/BigInt.bigInteger:()Ljava/math/BigInteger;
       4: areturn

  private final org.scalacheck.Gen $init$$$anonfun$7(scala.collection.immutable.List);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_1
       4: invokevirtual #2194               // Method org/scalacheck/Gen$.oneOf:(Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen $init$$$anonfun$8();
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #2174               // Field scalaz/Ordering$LT$.MODULE$:Lscalaz/Ordering$LT$;
       6: getstatic     #2171               // Field scalaz/Ordering$EQ$.MODULE$:Lscalaz/Ordering$EQ$;
       9: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      12: iconst_1
      13: anewarray     #60                 // class scalaz/Ordering
      16: dup
      17: iconst_0
      18: getstatic     #2164               // Field scalaz/Ordering$GT$.MODULE$:Lscalaz/Ordering$GT$;
      21: aastore
      22: invokevirtual #2253               // Method scala/runtime/ScalaRunTime$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      25: invokevirtual #2256               // Method org/scalacheck/Gen$.oneOf:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      28: areturn

  private final scala.collection.immutable.List cogenIList$$anonfun$1(scalaz.IList);
    Code:
       0: aload_1
       1: invokevirtual #187                // Method scalaz/IList.toList:()Lscala/collection/immutable/List;
       4: areturn

  private final scala.Option cogenMaybe$$anonfun$1(scalaz.Maybe);
    Code:
       0: aload_1
       1: invokevirtual #2265               // Method scalaz/Maybe.toOption:()Lscala/Option;
       4: areturn

  private final scala.Option cogenLazyOption$$anonfun$1(scalaz.LazyOption);
    Code:
       0: aload_1
       1: invokevirtual #2270               // Method scalaz/LazyOption.toOption:()Lscala/Option;
       4: areturn

  private final scalaz.$bslash$div cogenThese$$anonfun$1(scalaz.$bslash$amp$div);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #22                 // class scalaz/$bslash$amp$div$Both
       6: ifeq          67
       9: aload_2
      10: checkcast     #22                 // class scalaz/$bslash$amp$div$Both
      13: astore_3
      14: getstatic     #2274               // Field scalaz/$bslash$amp$div$Both$.MODULE$:Lscalaz/$bslash$amp$div$Both$;
      17: aload_3
      18: invokevirtual #2278               // Method scalaz/$bslash$amp$div$Both$.unapply:(Lscalaz/$bslash$amp$div$Both;)Lscalaz/$bslash$amp$div$Both;
      21: astore        4
      23: aload         4
      25: invokevirtual #2281               // Method scalaz/$bslash$amp$div$Both._1:()Ljava/lang/Object;
      28: astore        5
      30: aload         4
      32: invokevirtual #2284               // Method scalaz/$bslash$amp$div$Both._2:()Ljava/lang/Object;
      35: astore        6
      37: aload         5
      39: astore        7
      41: aload         6
      43: astore        8
      45: aload_3
      46: astore        9
      48: getstatic     #2289               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      51: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      54: aload         7
      56: aload         8
      58: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      61: invokevirtual #2300               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      64: goto          170
      67: aload_2
      68: instanceof    #36                 // class scalaz/$bslash$amp$div$This
      71: ifeq          114
      74: getstatic     #2303               // Field scalaz/$bslash$amp$div$This$.MODULE$:Lscalaz/$bslash$amp$div$This$;
      77: aload_2
      78: checkcast     #36                 // class scalaz/$bslash$amp$div$This
      81: invokevirtual #2306               // Method scalaz/$bslash$amp$div$This$.unapply:(Lscalaz/$bslash$amp$div$This;)Lscalaz/$bslash$amp$div$This;
      84: astore        10
      86: aload         10
      88: invokevirtual #2307               // Method scalaz/$bslash$amp$div$This._1:()Ljava/lang/Object;
      91: astore        11
      93: aload         11
      95: astore        12
      97: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
     100: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
     103: aload         12
     105: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     108: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     111: goto          170
     114: aload_2
     115: instanceof    #30                 // class scalaz/$bslash$amp$div$That
     118: ifeq          161
     121: getstatic     #2316               // Field scalaz/$bslash$amp$div$That$.MODULE$:Lscalaz/$bslash$amp$div$That$;
     124: aload_2
     125: checkcast     #30                 // class scalaz/$bslash$amp$div$That
     128: invokevirtual #2319               // Method scalaz/$bslash$amp$div$That$.unapply:(Lscalaz/$bslash$amp$div$That;)Lscalaz/$bslash$amp$div$That;
     131: astore        13
     133: aload         13
     135: invokevirtual #2320               // Method scalaz/$bslash$amp$div$That._1:()Ljava/lang/Object;
     138: astore        14
     140: aload         14
     142: astore        15
     144: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
     147: getstatic     #2289               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     150: aload         15
     152: invokevirtual #2300               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     155: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     158: goto          170
     161: new           #2176               // class scala/MatchError
     164: dup
     165: aload_2
     166: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     169: athrow
     170: areturn

  private final scala.util.Either cogenLazyEither$$anonfun$1(scalaz.LazyEither);
    Code:
       0: aload_1
       1: invokevirtual #2331               // Method scalaz/LazyEither.toEither:()Lscala/util/Either;
       4: areturn

  private final scala.util.Either cogenDisjunction$$anonfun$1(scalaz.$bslash$div);
    Code:
       0: aload_1
       1: invokevirtual #2334               // Method scalaz/$bslash$div.toEither:()Lscala/util/Either;
       4: areturn

  private final scala.util.Either cogenValidation$$anonfun$1(scalaz.Validation);
    Code:
       0: aload_1
       1: invokevirtual #2339               // Method scalaz/Validation.toEither:()Lscala/util/Either;
       4: areturn

  private final scalaz.$bslash$div cogenOneOr$$anonfun$1(scalaz.OneOr);
    Code:
       0: aload_1
       1: invokevirtual #2347               // Method scalaz/OneOr.run:()Lscalaz/$bslash$div;
       4: areturn

  private final scala.Tuple2 cogenOneAnd$$anonfun$1(scalaz.OneAnd);
    Code:
       0: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: invokevirtual #2353               // Method scalaz/OneAnd.head:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #2356               // Method scalaz/OneAnd.tail:()Ljava/lang/Object;
      11: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      14: areturn

  private final scala.collection.immutable.List cogenISet$$anonfun$1(scalaz.ISet);
    Code:
       0: aload_1
       1: invokevirtual #2361               // Method scalaz/ISet.toList:()Lscala/collection/immutable/List;
       4: areturn

  private final scala.collection.immutable.List cogenIMap$$anonfun$1(scalaz.$eq$eq$greater$greater);
    Code:
       0: aload_1
       1: invokevirtual #2366               // Method scalaz/$eq$eq$greater$greater.toList:()Lscala/collection/immutable/List;
       4: areturn

  private final scala.collection.immutable.List cogenDList$$anonfun$1(scalaz.DList);
    Code:
       0: aload_1
       1: invokevirtual #2371               // Method scalaz/DList.toList:()Lscala/collection/immutable/List;
       4: areturn

  private final scala.collection.immutable.List cogenEphemeralStream$$anonfun$1(scalaz.EphemeralStream);
    Code:
       0: aload_1
       1: invokevirtual #2376               // Method scalaz/EphemeralStream.toList:()Lscala/collection/immutable/List;
       4: areturn

  private final scalaz.EphemeralStream cogenHeap$$anonfun$1(scalaz.Heap);
    Code:
       0: aload_1
       1: invokevirtual #2383               // Method scalaz/Heap.toUnsortedStream:()Lscalaz/EphemeralStream;
       4: areturn

  private final scala.collection.immutable.List cogenDequeue$$anonfun$1(scalaz.Dequeue);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: getstatic     #2390               // Field scalaz/Dequeue$.MODULE$:Lscalaz/Dequeue$;
       7: invokevirtual #2393               // Method scalaz/Dequeue$.dequeueInstances:()Lscalaz/Alt;
      10: checkcast     #581                // class scalaz/Foldable
      13: invokevirtual #2397               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
      16: invokevirtual #2400               // Method scalaz/syntax/FoldableOps.toList:()Lscala/collection/immutable/List;
      19: areturn

  private final scala.Tuple2 cogenNonEmptyList$$anonfun$1(scalaz.NonEmptyList);
    Code:
       0: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: invokevirtual #2405               // Method scalaz/NonEmptyList.head:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #2407               // Method scalaz/NonEmptyList.tail:()Lscalaz/IList;
      11: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      14: areturn

  private final scala.collection.immutable.List cogenIndSeq$$anonfun$1(scalaz.Foldable, scalaz.IndSeq);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2413,  2         // InterfaceMethod scalaz/Foldable.toList:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       7: areturn

  private final scala.collection.immutable.Vector cogenDiev$$anonfun$1(scalaz.Diev);
    Code:
       0: aload_1
       1: invokevirtual #2422               // Method scalaz/Diev.intervals:()Lscala/collection/immutable/Vector;
       4: areturn

  private final scalaz.$bslash$div cogenCoproduct$$anonfun$1(scalaz.Coproduct);
    Code:
       0: aload_1
       1: invokevirtual #2427               // Method scalaz/Coproduct.run:()Lscalaz/$bslash$div;
       4: areturn

  private final java.lang.Object cogenConst$$anonfun$1(scalaz.Const);
    Code:
       0: aload_1
       1: invokevirtual #2434               // Method scalaz/Const.getConst:()Ljava/lang/Object;
       4: areturn

  private final scala.Tuple3 cogenZipper$$anonfun$1(scalaz.Zipper);
    Code:
       0: getstatic     #2441               // Field scala/Tuple3$.MODULE$:Lscala/Tuple3$;
       3: aload_1
       4: invokevirtual #2447               // Method scalaz/Zipper.lefts:()Lscala/collection/immutable/LazyList;
       7: aload_1
       8: invokevirtual #2450               // Method scalaz/Zipper.focus:()Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #2453               // Method scalaz/Zipper.rights:()Lscala/collection/immutable/LazyList;
      15: invokevirtual #2456               // Method scala/Tuple3$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple3;
      18: areturn

  private final java.lang.Object cogenTracedT$$anonfun$1(scalaz.TracedT);
    Code:
       0: aload_1
       1: invokevirtual #2462               // Method scalaz/TracedT.run:()Ljava/lang/Object;
       4: areturn

  private final scala.Tuple2 cogenIndexedStoreT$$anonfun$1(scalaz.IndexedStoreT);
    Code:
       0: aload_1
       1: invokevirtual #2469               // Method scalaz/IndexedStoreT.run:()Lscala/Tuple2;
       4: areturn

  private final java.lang.Object cogenIndexedContsT$$anonfun$2$$anonfun$1(scalaz.IndexedContsT, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2478               // Method scalaz/IndexedContsT.run:(Ljava/lang/Object;)Ljava/lang/Object;
       5: areturn

  private final scala.Function1 cogenIndexedContsT$$anonfun$1(scalaz.IndexedContsT);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2486,  0           // InvokeDynamic #170:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/IndexedContsT;)Lscala/Function1;
       7: areturn

  private final scala.Function1 cogenEndo$$anonfun$1(scalaz.Endo);
    Code:
       0: aload_1
       1: invokevirtual #2491               // Method scalaz/Endo.run:()Lscala/Function1;
       4: areturn

  private final java.lang.Object cogenEndomorphic$$anonfun$1(scalaz.Endomorphic);
    Code:
       0: aload_1
       1: invokevirtual #2496               // Method scalaz/Endomorphic.run:()Ljava/lang/Object;
       4: areturn

  private final scala.Function1 cogenKleisli$$anonfun$1(scalaz.Kleisli);
    Code:
       0: aload_1
       1: invokevirtual #2501               // Method scalaz/Kleisli.run:()Lscala/Function1;
       4: areturn

  private final scala.Function1 cogenCokleisli$$anonfun$1(scalaz.Cokleisli);
    Code:
       0: aload_1
       1: invokevirtual #2506               // Method scalaz/Cokleisli.run:()Lscala/Function1;
       4: areturn

  private final scala.Option cogenNullResult$$anonfun$2$$anonfun$1(scalaz.NullResult, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2515               // Method scalaz/NullResult.apply:(Ljava/lang/Object;)Lscala/Option;
       5: areturn

  private final scala.Function1 cogenNullResult$$anonfun$1(scalaz.NullResult);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2524,  0           // InvokeDynamic #171:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NullResult;)Lscala/Function1;
       7: areturn

  private final java.lang.Object cogenNullArgument$$anonfun$2$$anonfun$1(scalaz.NullArgument, scala.Option);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #2531               // Method scalaz/NullArgument.apply:(Lscala/Option;)Ljava/lang/Object;
       5: areturn

  private final scala.Function1 cogenNullArgument$$anonfun$1(scalaz.NullArgument);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2540,  0           // InvokeDynamic #172:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NullArgument;)Lscala/Function1;
       7: areturn

  private final java.lang.Object cogenContravariantCoyoneda$$anonfun$1(scalaz.Contravariant, scalaz.ContravariantCoyoneda);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2547               // Method scalaz/ContravariantCoyoneda.run:(Lscalaz/Contravariant;)Ljava/lang/Object;
       5: areturn

  private final java.lang.Object cogenEitherT$$anonfun$1(scalaz.EitherT);
    Code:
       0: aload_1
       1: invokevirtual #2552               // Method scalaz/EitherT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenLazyEitherT$$anonfun$1(scalaz.LazyEitherT);
    Code:
       0: aload_1
       1: invokevirtual #2557               // Method scalaz/LazyEitherT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenTheseT$$anonfun$1(scalaz.TheseT);
    Code:
       0: aload_1
       1: invokevirtual #2562               // Method scalaz/TheseT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenMaybeT$$anonfun$1(scalaz.MaybeT);
    Code:
       0: aload_1
       1: invokevirtual #2567               // Method scalaz/MaybeT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenStreamT$$anonfun$1(scalaz.Monad, scalaz.StreamT);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2576               // Method scalaz/StreamT.toLazyList:(Lscalaz/Monad;)Ljava/lang/Object;
       5: areturn

  private final java.lang.Object cogenOptionT$$anonfun$1(scalaz.OptionT);
    Code:
       0: aload_1
       1: invokevirtual #2581               // Method scalaz/OptionT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenLazyOptionT$$anonfun$1(scalaz.LazyOptionT);
    Code:
       0: aload_1
       1: invokevirtual #2586               // Method scalaz/LazyOptionT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenIdT$$anonfun$1(scalaz.IdT);
    Code:
       0: aload_1
       1: invokevirtual #2591               // Method scalaz/IdT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenIndexedReaderWriterStateT$$anonfun$2$$anonfun$1(scalaz.Monad, scalaz.IndexedReaderWriterStateT, java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: aload_3
       2: aload         4
       4: aload_1
       5: invokevirtual #2603               // Method scalaz/IndexedReaderWriterStateT.run:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Monad;)Ljava/lang/Object;
       8: areturn

  private final scala.Function2 cogenIndexedReaderWriterStateT$$anonfun$1(scalaz.Monad, scalaz.IndexedReaderWriterStateT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #2612,  0           // InvokeDynamic #173:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monad;Lscalaz/IndexedReaderWriterStateT;)Lscala/Function2;
       8: areturn

  private final java.lang.Object cogenIndexedStateT$$anonfun$2$$anonfun$1(scalaz.Monad, scalaz.IndexedStateT, java.lang.Object);
    Code:
       0: aload_2
       1: aload_3
       2: aload_1
       3: invokevirtual #2622               // Method scalaz/IndexedStateT.apply:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
       6: areturn

  private final scala.Function1 cogenIndexedStateT$$anonfun$1(scalaz.Monad, scalaz.IndexedStateT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokedynamic #2630,  0           // InvokeDynamic #174:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monad;Lscalaz/IndexedStateT;)Lscala/Function1;
       8: areturn

  private final java.lang.Object cogenWriterT$$anonfun$1(scalaz.WriterT);
    Code:
       0: aload_1
       1: invokevirtual #2634               // Method scalaz/WriterT.run:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenUnwriterT$$anonfun$1(scalaz.UnwriterT);
    Code:
       0: aload_1
       1: invokevirtual #2639               // Method scalaz/UnwriterT.run:()Ljava/lang/Object;
       4: areturn

  private final scala.collection.immutable.List cogenTree$$anonfun$1(scalaz.Tree);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: getstatic     #2646               // Field scalaz/Tree$.MODULE$:Lscalaz/Tree$;
       7: invokevirtual #2649               // Method scalaz/Tree$.treeInstance:()Lscalaz/Align;
      10: checkcast     #581                // class scalaz/Foldable
      13: invokevirtual #2397               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
      16: invokevirtual #2400               // Method scalaz/syntax/FoldableOps.toList:()Lscala/collection/immutable/List;
      19: areturn

  private final scala.Tuple4 cogenTreeLoc$$anonfun$1(scalaz.TreeLoc);
    Code:
       0: getstatic     #2655               // Field scala/Tuple4$.MODULE$:Lscala/Tuple4$;
       3: aload_1
       4: invokevirtual #2661               // Method scalaz/TreeLoc.tree:()Lscalaz/Tree;
       7: aload_1
       8: invokevirtual #2663               // Method scalaz/TreeLoc.lefts:()Lscalaz/EphemeralStream;
      11: aload_1
      12: invokevirtual #2665               // Method scalaz/TreeLoc.rights:()Lscalaz/EphemeralStream;
      15: aload_1
      16: invokevirtual #2668               // Method scalaz/TreeLoc.parents:()Lscalaz/EphemeralStream;
      19: invokevirtual #2671               // Method scala/Tuple4$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple4;
      22: areturn

  private final scala.collection.immutable.List cogenStrictTree$$anonfun$1(scalaz.StrictTree);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       7: invokevirtual #2681               // Method scalaz/StrictTree$.strictTreeInstance:()Lscalaz/Align;
      10: checkcast     #581                // class scalaz/Foldable
      13: invokevirtual #2397               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
      16: invokevirtual #2400               // Method scalaz/syntax/FoldableOps.toList:()Lscala/collection/immutable/List;
      19: areturn

  private final java.lang.Object cogenCoyoneda$$anonfun$1(scalaz.Functor, scalaz.Coyoneda);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #2689               // Method scalaz/Coyoneda.run:(Lscalaz/Functor;)Ljava/lang/Object;
       5: areturn

  private final java.lang.Object nameToValue$$anonfun$1(scalaz.Name);
    Code:
       0: aload_1
       1: invokevirtual #2696               // Method scalaz/Name.value:()Ljava/lang/Object;
       4: areturn

  private final scala.collection.immutable.List cogenImmutableArray$$anonfun$1(scalaz.ImmutableArray);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: getstatic     #2703               // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       7: invokevirtual #2707               // Method scalaz/ImmutableArray$.immutableArrayInstance:()Lscalaz/Foldable;
      10: invokevirtual #2397               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
      13: invokevirtual #2400               // Method scalaz/syntax/FoldableOps.toList:()Lscala/collection/immutable/List;
      16: areturn

  private final scalaz.$bslash$div cogenEither3$$anonfun$1(scalaz.Either3);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #2710               // class scalaz/Left3
       6: ifeq          47
       9: getstatic     #2715               // Field scalaz/Left3$.MODULE$:Lscalaz/Left3$;
      12: aload_2
      13: checkcast     #2710               // class scalaz/Left3
      16: invokevirtual #2718               // Method scalaz/Left3$.unapply:(Lscalaz/Left3;)Lscalaz/Left3;
      19: astore_3
      20: aload_3
      21: invokevirtual #2719               // Method scalaz/Left3._1:()Ljava/lang/Object;
      24: astore        4
      26: aload         4
      28: astore        5
      30: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      33: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      36: aload         5
      38: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      41: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      44: goto          144
      47: aload_2
      48: instanceof    #2721               // class scalaz/Middle3
      51: ifeq          94
      54: getstatic     #2726               // Field scalaz/Middle3$.MODULE$:Lscalaz/Middle3$;
      57: aload_2
      58: checkcast     #2721               // class scalaz/Middle3
      61: invokevirtual #2729               // Method scalaz/Middle3$.unapply:(Lscalaz/Middle3;)Lscalaz/Middle3;
      64: astore        6
      66: aload         6
      68: invokevirtual #2730               // Method scalaz/Middle3._1:()Ljava/lang/Object;
      71: astore        7
      73: aload         7
      75: astore        8
      77: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      80: getstatic     #2289               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      83: aload         8
      85: invokevirtual #2300               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      88: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      91: goto          144
      94: aload_2
      95: instanceof    #2732               // class scalaz/Right3
      98: ifeq          135
     101: getstatic     #2737               // Field scalaz/Right3$.MODULE$:Lscalaz/Right3$;
     104: aload_2
     105: checkcast     #2732               // class scalaz/Right3
     108: invokevirtual #2740               // Method scalaz/Right3$.unapply:(Lscalaz/Right3;)Lscalaz/Right3;
     111: astore        9
     113: aload         9
     115: invokevirtual #2741               // Method scalaz/Right3._1:()Ljava/lang/Object;
     118: astore        10
     120: aload         10
     122: astore        11
     124: getstatic     #2289               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
     127: aload         11
     129: invokevirtual #2300               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
     132: goto          144
     135: new           #2176               // class scala/MatchError
     138: dup
     139: aload_2
     140: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     143: athrow
     144: areturn

  private final scala.Tuple2 cogenLazyTuple2$$anonfun$1(scalaz.LazyTuple2);
    Code:
       0: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       3: aload_1
       4: invokevirtual #2748               // Method scalaz/LazyTuple2._1:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #2749               // Method scalaz/LazyTuple2._2:()Ljava/lang/Object;
      11: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      14: areturn

  private final scala.Tuple3 cogenLazyTuple3$$anonfun$1(scalaz.LazyTuple3);
    Code:
       0: getstatic     #2441               // Field scala/Tuple3$.MODULE$:Lscala/Tuple3$;
       3: aload_1
       4: invokevirtual #2753               // Method scalaz/LazyTuple3._1:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #2754               // Method scalaz/LazyTuple3._2:()Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #2757               // Method scalaz/LazyTuple3._3:()Ljava/lang/Object;
      15: invokevirtual #2456               // Method scala/Tuple3$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple3;
      18: areturn

  private final scala.Tuple4 cogenLazyTuple4$$anonfun$1(scalaz.LazyTuple4);
    Code:
       0: getstatic     #2655               // Field scala/Tuple4$.MODULE$:Lscala/Tuple4$;
       3: aload_1
       4: invokevirtual #2761               // Method scalaz/LazyTuple4._1:()Ljava/lang/Object;
       7: aload_1
       8: invokevirtual #2762               // Method scalaz/LazyTuple4._2:()Ljava/lang/Object;
      11: aload_1
      12: invokevirtual #2763               // Method scalaz/LazyTuple4._3:()Ljava/lang/Object;
      15: aload_1
      16: invokevirtual #2766               // Method scalaz/LazyTuple4._4:()Ljava/lang/Object;
      19: invokevirtual #2671               // Method scala/Tuple4$.apply:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple4;
      22: areturn

  private final java.lang.Object cogenAp$$anonfun$1(scalaz.Ap);
    Code:
       0: aload_1
       1: invokevirtual #2772               // Method scalaz/Ap.f:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object cogenTannen$$anonfun$1(scalaz.Tannen);
    Code:
       0: aload_1
       1: invokevirtual #2777               // Method scalaz/Tannen.f:()Ljava/lang/Object;
       4: areturn

  private final scalaz.Tannen tannenArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2784               // Field scalaz/Tannen$.MODULE$:Lscalaz/Tannen$;
       3: aload_1
       4: invokevirtual #2786               // Method scalaz/Tannen$.apply:(Ljava/lang/Object;)Lscalaz/Tannen;
       7: areturn

  private final scalaz.Ap apArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2792               // Field scalaz/Ap$.MODULE$:Lscalaz/Ap$;
       3: aload_1
       4: invokevirtual #2794               // Method scalaz/Ap$.apply:(Ljava/lang/Object;)Lscalaz/Ap;
       7: areturn

  private final java.lang.Object cogenAlter$$anonfun$1(scalaz.Alter);
    Code:
       0: aload_1
       1: invokevirtual #2798               // Method scalaz/Alter.f:()Ljava/lang/Object;
       4: areturn

  private final scalaz.Alter alterArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2805               // Field scalaz/Alter$.MODULE$:Lscalaz/Alter$;
       3: aload_1
       4: invokevirtual #2807               // Method scalaz/Alter$.apply:(Ljava/lang/Object;)Lscalaz/Alter;
       7: areturn

  private final scalaz.$colon$plus$colon monoidCoproductArbitrary$$anonfun$1(scala.collection.immutable.Vector);
    Code:
       0: new           #2810               // class scalaz/$colon$plus$colon
       3: dup
       4: aload_1
       5: invokespecial #2813               // Method scalaz/$colon$plus$colon."<init>":(Lscala/collection/immutable/Vector;)V
       8: areturn

  private final org.scalacheck.Gen theseArb$$anonfun$2$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen theseArb$$anonfun$3$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.$bslash$amp$div$Both theseArb$$anonfun$4$$anonfun$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #2274               // Field scalaz/$bslash$amp$div$Both$.MODULE$:Lscalaz/$bslash$amp$div$Both$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2826               // Method scalaz/$bslash$amp$div$Both$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/$bslash$amp$div$Both;
       8: areturn

  private final scalaz.$bslash$amp$div$This theseArb$$anonfun$5$$anonfun$4(java.lang.Object);
    Code:
       0: getstatic     #2303               // Field scalaz/$bslash$amp$div$This$.MODULE$:Lscalaz/$bslash$amp$div$This$;
       3: aload_1
       4: invokevirtual #2831               // Method scalaz/$bslash$amp$div$This$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$amp$div$This;
       7: areturn

  private final scalaz.$bslash$amp$div$That theseArb$$anonfun$6$$anonfun$5(java.lang.Object);
    Code:
       0: getstatic     #2316               // Field scalaz/$bslash$amp$div$That$.MODULE$:Lscalaz/$bslash$amp$div$That$;
       3: aload_1
       4: invokevirtual #2836               // Method scalaz/$bslash$amp$div$That$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$amp$div$That;
       7: areturn

  private final org.scalacheck.Gen theseArb$$anonfun$1(org.scalacheck.Arbitrary, org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       6: aload_0
       7: aload_1
       8: invokedynamic #2842,  0           // InvokeDynamic #175:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      13: aload_0
      14: aload_2
      15: invokedynamic #2846,  0           // InvokeDynamic #176:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      20: aload_0
      21: invokedynamic #2851,  0           // InvokeDynamic #177:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      26: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      29: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
      32: invokevirtual #2855               // Method scalaz/Scalaz$.$up:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
      35: checkcast     #11                 // class org/scalacheck/Gen
      38: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      41: aload_1
      42: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      45: aload_0
      46: invokedynamic #2860,  0           // InvokeDynamic #178:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      51: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      54: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      57: iconst_1
      58: anewarray     #11                 // class org/scalacheck/Gen
      61: dup
      62: iconst_0
      63: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      66: aload_2
      67: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      70: aload_0
      71: invokedynamic #2865,  0           // InvokeDynamic #179:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      76: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      79: aastore
      80: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      83: invokevirtual #2872               // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      86: areturn

  private final scalaz.Endo endoArb$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #2877               // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: aload_1
       4: invokevirtual #2880               // Method scalaz/Endo$.endo:(Lscala/Function1;)Lscalaz/Endo;
       7: areturn

  private final java.lang.Object endoByNameArb$$anonfun$2$$anonfun$1(scala.Function1, scala.Function0);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #2888,  1         // InterfaceMethod scala/Function0.apply:()Ljava/lang/Object;
       7: invokeinterface #2892,  2         // InterfaceMethod scala/Function1.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: areturn

  private final scalaz.EndoByName endoByNameArb$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #2877               // Field scalaz/Endo$.MODULE$:Lscalaz/Endo$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2901,  0           // InvokeDynamic #180:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscala/Function1;)Lscala/Function1;
      10: invokevirtual #2904               // Method scalaz/Endo$.endoByName:(Lscala/Function1;)Lscalaz/EndoByName;
      13: areturn

  private final scalaz.Endomorphic endomorphicArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2910               // Field scalaz/Endomorphic$.MODULE$:Lscalaz/Endomorphic$;
       3: aload_1
       4: invokevirtual #2912               // Method scalaz/Endomorphic$.apply:(Ljava/lang/Object;)Lscalaz/Endomorphic;
       7: areturn

  private final scalaz.EphemeralStream EphemeralStreamArbitrary$$anonfun$1(scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: aload_1
       4: invokevirtual #2916               // Method scalaz/EphemeralStream$.fromLazyList:(Lscala/collection/immutable/LazyList;)Lscalaz/EphemeralStream;
       7: areturn

  private final scalaz.IStream IStreamArbitrary$$anonfun$1(scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #2923               // Field scalaz/IStream$.MODULE$:Lscalaz/IStream$;
       3: aload_1
       4: invokevirtual #2925               // Method scalaz/IStream$.fromLazyList:(Lscala/collection/immutable/LazyList;)Lscalaz/IStream;
       7: areturn

  private final scalaz.CorecursiveList CorecursiveListArbitrary$$anonfun$1(scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #2930               // Field scalaz/CorecursiveList$.MODULE$:Lscalaz/CorecursiveList$;
       3: aload_1
       4: invokevirtual #2932               // Method scalaz/CorecursiveList$.fromLazyList:(Lscala/collection/immutable/LazyList;)Lscalaz/CorecursiveList;
       7: areturn

  private final scala.collection.Iterable ImmutableArrayArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: aload_1
       4: invokevirtual #2936               // Method scala/Predef$.genericWrapArray:(Ljava/lang/Object;)Lscala/collection/mutable/ArraySeq;
       7: areturn

  private final scalaz.ImmutableArray ImmutableArrayArbitrary$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #2703               // Field scalaz/ImmutableArray$.MODULE$:Lscalaz/ImmutableArray$;
       3: aload_1
       4: invokevirtual #2940               // Method scalaz/ImmutableArray$.fromArray:(Ljava/lang/Object;)Lscalaz/ImmutableArray;
       7: areturn

  private final scalaz.Value ValueArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2945               // Field scalaz/Value$.MODULE$:Lscalaz/Value$;
       3: aload_1
       4: invokevirtual #2947               // Method scalaz/Value$.apply:(Ljava/lang/Object;)Lscalaz/Value;
       7: areturn

  private final java.lang.Object NameArbitrary$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.Name NameArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2954               // Field scalaz/Name$.MODULE$:Lscalaz/Name$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2960,  0           // InvokeDynamic #181:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: invokevirtual #2963               // Method scalaz/Name$.apply:(Lscala/Function0;)Lscalaz/Name;
      13: areturn

  private final java.lang.Object NeedArbitrary$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.Need NeedArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #2970               // Field scalaz/Need$.MODULE$:Lscalaz/Need$;
       3: aload_0
       4: aload_1
       5: invokedynamic #2974,  0           // InvokeDynamic #182:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: invokevirtual #2977               // Method scalaz/Need$.apply:(Lscala/Function0;)Lscalaz/Need;
      13: areturn

  private final org.scalacheck.Arbitrary NonEmptyListArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary NonEmptyListArbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: aload_1
       5: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
       8: getstatic     #1299               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      11: invokevirtual #1300               // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      14: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      17: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      23: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      26: invokevirtual #2981               // Method ilistArbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      29: areturn

  private final scalaz.NonEmptyList NonEmptyListArbitrary$$anonfun$3(java.lang.Object, scalaz.IList);
    Code:
       0: getstatic     #2988               // Field scalaz/NonEmptyList$.MODULE$:Lscalaz/NonEmptyList$;
       3: aload_1
       4: aload_2
       5: invokevirtual #2990               // Method scalaz/NonEmptyList$.nel:(Ljava/lang/Object;Lscalaz/IList;)Lscalaz/NonEmptyList;
       8: areturn

  private final org.scalacheck.Arbitrary OneAndArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary OneAndArbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final scalaz.OneAnd OneAndArbitrary$$anonfun$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #2999               // Field scalaz/OneAnd$.MODULE$:Lscalaz/OneAnd$;
       3: aload_1
       4: aload_2
       5: invokevirtual #3001               // Method scalaz/OneAnd$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscalaz/OneAnd;
       8: areturn

  private final scalaz.OneOr OneOrArbitrary$$anonfun$1(scalaz.$bslash$div);
    Code:
       0: getstatic     #3007               // Field scalaz/OneOr$.MODULE$:Lscalaz/OneOr$;
       3: aload_1
       4: invokevirtual #3009               // Method scalaz/OneOr$.apply:(Lscalaz/$bslash$div;)Lscalaz/OneOr;
       7: areturn

  private final scalaz.$eq$eq$greater$greater Arbitrary_$eq$eq$greater$greater$$anonfun$1(scalaz.Order, scala.collection.immutable.List);
    Code:
       0: getstatic     #3016               // Field scalaz/$eq$eq$greater$greater$.MODULE$:Lscalaz/$eq$eq$greater$greater$;
       3: aload_2
       4: aload_1
       5: invokevirtual #3020               // Method scalaz/$eq$eq$greater$greater$.fromList:(Lscala/collection/immutable/List;Lscalaz/Order;)Lscalaz/$eq$eq$greater$greater;
       8: areturn

  private final scalaz.ISet Arbitrary_ISet$$anonfun$1(scalaz.Order, scala.collection.immutable.List);
    Code:
       0: getstatic     #3026               // Field scalaz/ISet$.MODULE$:Lscalaz/ISet$;
       3: aload_2
       4: aload_1
       5: invokevirtual #3029               // Method scalaz/ISet$.fromList:(Lscala/collection/immutable/List;Lscalaz/Order;)Lscalaz/ISet;
       8: areturn

  private final scalaz.Maybe Arbitrary_Maybe$$anonfun$1(scala.Option);
    Code:
       0: getstatic     #3035               // Field scalaz/Maybe$.MODULE$:Lscalaz/Maybe$;
       3: aload_1
       4: invokevirtual #3038               // Method scalaz/Maybe$.fromOption:(Lscala/Option;)Lscalaz/Maybe;
       7: areturn

  private final scala.Tuple2 $anonfun$1$$anonfun$1$$anonfun$1(int, int, int, int);
    Code:
       0: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload         4
       5: iload_2
       6: iadd
       7: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      10: invokevirtual #3046               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #3048               // class java/lang/Integer
      16: astore        5
      18: getstatic     #3051               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      21: aload         5
      23: getstatic     #3056               // Field scala/Option$.MODULE$:Lscala/Option$;
      26: iload_1
      27: iload_3
      28: isub
      29: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: invokevirtual #3057               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      35: invokevirtual #3060               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      38: areturn

  private scala.Tuple2 $anonfun$2$$anonfun$2$$anonfun$adapted$1(int, int, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokespecial #3067               // Method $anonfun$1$$anonfun$1$$anonfun$1:(IIII)Lscala/Tuple2;
      12: areturn

  private final scala.Tuple2 $anonfun$3$$anonfun$3$$anonfun$2(int, int);
    Code:
       0: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
       3: iload_2
       4: iload_1
       5: iadd
       6: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       9: invokevirtual #3046               // Method scala/Predef$.ArrowAssoc:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #3048               // class java/lang/Integer
      15: astore_3
      16: getstatic     #3051               // Field scala/Predef$ArrowAssoc$.MODULE$:Lscala/Predef$ArrowAssoc$;
      19: aload_3
      20: getstatic     #3056               // Field scala/Option$.MODULE$:Lscala/Option$;
      23: iload_1
      24: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: invokevirtual #3057               // Method scala/Option$.apply:(Ljava/lang/Object;)Lscala/Option;
      30: invokevirtual #3060               // Method scala/Predef$ArrowAssoc$.$minus$greater$extension:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      33: areturn

  private scala.Tuple2 $anonfun$4$$anonfun$4$$anonfun$adapted$2(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3074               // Method $anonfun$3$$anonfun$3$$anonfun$2:(II)Lscala/Tuple2;
       9: areturn

  private final scala.Option $anonfun$5$$anonfun$5$$anonfun$3(scala.Option);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.IndexedStateT $anonfun$6$$anonfun$6(int, int, int);
    Code:
       0: iload_3
       1: iload_1
       2: if_icmplt     17
       5: getstatic     #3086               // Field scalaz/State$.MODULE$:Lscalaz/State$;
       8: getstatic     #3091               // Field scala/None$.MODULE$:Lscala/None$;
      11: invokevirtual #3095               // Method scalaz/State$.state:(Ljava/lang/Object;)Lscalaz/IndexedStateT;
      14: goto          55
      17: iload_3
      18: iload_2
      19: iadd
      20: iload_1
      21: if_icmple     42
      24: getstatic     #3086               // Field scalaz/State$.MODULE$:Lscalaz/State$;
      27: aload_0
      28: iload_1
      29: iload_2
      30: iload_3
      31: invokedynamic #3101,  0           // InvokeDynamic #183:apply:(Lscalaz/scalacheck/ScalazArbitrary$;III)Lscala/Function1;
      36: invokevirtual #3103               // Method scalaz/State$.apply:(Lscala/Function1;)Lscalaz/IndexedStateT;
      39: goto          55
      42: getstatic     #3086               // Field scalaz/State$.MODULE$:Lscalaz/State$;
      45: aload_0
      46: iload_2
      47: invokedynamic #3107,  0           // InvokeDynamic #184:apply:(Lscalaz/scalacheck/ScalazArbitrary$;I)Lscala/Function1;
      52: invokevirtual #3103               // Method scalaz/State$.apply:(Lscala/Function1;)Lscalaz/IndexedStateT;
      55: aload_0
      56: invokedynamic #3112,  0           // InvokeDynamic #185:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      61: getstatic     #3117               // Field scalaz/package$.MODULE$:Lscalaz/package$;
      64: invokevirtual #3120               // Method scalaz/package$.idInstance:()Lscalaz/Align;
      67: checkcast     #1418               // class scalaz/Applicative
      70: invokevirtual #3123               // Method scalaz/IndexedStateT.map:(Lscala/Function1;Lscalaz/Applicative;)Lscalaz/IndexedStateT;
      73: areturn

  private scalaz.IndexedStateT $anonfun$7$$anonfun$adapted$1(int, int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokespecial #3129               // Method $anonfun$6$$anonfun$6:(III)Lscalaz/IndexedStateT;
      10: areturn

  private final scalaz.IndexedStateT $anonfun$8(int, int);
    Code:
       0: getstatic     #3086               // Field scalaz/State$.MODULE$:Lscalaz/State$;
       3: invokevirtual #3136               // Method scalaz/State$.get:()Lscalaz/IndexedStateT;
       6: aload_0
       7: iload_1
       8: iload_2
       9: invokedynamic #3143,  0           // InvokeDynamic #186:apply:(Lscalaz/scalacheck/ScalazArbitrary$;II)Lscala/Function1;
      14: invokevirtual #3145               // Method scalaz/IndexedStateT.flatMap:(Lscala/Function1;)Lscalaz/IndexedStateT;
      17: areturn

  private scalaz.IndexedStateT $anonfun$adapted$2(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3150               // Method $anonfun$8:(II)Lscalaz/IndexedStateT;
       9: areturn

  private final scalaz.EphemeralStream $anonfun$9$$anonfun$1(int);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_1
       7: newarray       int
       9: dup
      10: iconst_0
      11: iload_1
      12: iastore
      13: invokevirtual #3157               // Method scala/runtime/ScalaRunTime$.wrapIntArray:([I)Lscala/collection/immutable/ArraySeq;
      16: invokevirtual #3160               // Method scalaz/EphemeralStream$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/EphemeralStream;
      19: areturn

  private scalaz.EphemeralStream $anonfun$10$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       5: invokespecial #3164               // Method $anonfun$9$$anonfun$1:(I)Lscalaz/EphemeralStream;
       8: areturn

  private final scalaz.EphemeralStream $anonfun$11$$anonfun$2();
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: invokevirtual #3168               // Method scalaz/EphemeralStream$.emptyEphemeralStream:()Lscalaz/EphemeralStream;
       6: areturn

  private final scalaz.EphemeralStream $anonfun$12(scala.Option);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: invokevirtual #3173               // Method scalaz/Scalaz$.ToOptionOpsFromOption:(Lscala/Option;)Lscala/Option;
       7: astore_2
       8: getstatic     #3178               // Field scalaz/syntax/std/OptionOps$.MODULE$:Lscalaz/syntax/std/OptionOps$;
      11: aload_2
      12: aload_0
      13: invokedynamic #3183,  0           // InvokeDynamic #187:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      18: aload_0
      19: invokedynamic #3188,  0           // InvokeDynamic #188:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function0;
      24: invokevirtual #3192               // Method scalaz/syntax/std/OptionOps$.cata$extension:(Lscala/Option;Lscala/Function1;Lscala/Function0;)Ljava/lang/Object;
      27: checkcast     #2375               // class scalaz/EphemeralStream
      30: areturn

  private final org.scalacheck.Gen withSize$$anonfun$1(int, scala.Function1, scalaz.EphemeralStream);
    Code:
       0: getstatic     #3199               // Field scalaz/Traverse$.MODULE$:Lscalaz/Traverse$;
       3: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       6: invokevirtual #1414               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/Align;
       9: checkcast     #1416               // class scalaz/Traverse
      12: invokevirtual #3202               // Method scalaz/Traverse$.apply:(Lscalaz/Traverse;)Lscalaz/Traverse;
      15: aload_3
      16: aload_0
      17: iload_1
      18: invokedynamic #3206,  0           // InvokeDynamic #189:apply:(Lscalaz/scalacheck/ScalazArbitrary$;I)Lscala/Function1;
      23: invokeinterface #3210,  3         // InterfaceMethod scalaz/Traverse.traverseS:(Ljava/lang/Object;Lscala/Function1;)Lscalaz/IndexedStateT;
      28: iconst_0
      29: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      32: getstatic     #3117               // Field scalaz/package$.MODULE$:Lscalaz/package$;
      35: invokevirtual #3120               // Method scalaz/package$.idInstance:()Lscalaz/Align;
      38: checkcast     #3212               // class scalaz/Bind
      41: invokevirtual #3215               // Method scalaz/IndexedStateT.eval:(Ljava/lang/Object;Lscalaz/Bind;)Ljava/lang/Object;
      44: checkcast     #2375               // class scalaz/EphemeralStream
      47: aload_0
      48: invokedynamic #3220,  0           // InvokeDynamic #190:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      53: invokevirtual #3223               // Method scalaz/EphemeralStream.flatMap:(Lscala/Function1;)Lscalaz/EphemeralStream;
      56: astore        4
      58: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
      61: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      64: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
      67: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      70: aload         4
      72: aload_2
      73: invokevirtual #3225               // Method scalaz/EphemeralStream.map:(Lscala/Function1;)Lscalaz/EphemeralStream;
      76: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      79: invokevirtual #1414               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/Align;
      82: checkcast     #1416               // class scalaz/Traverse
      85: invokeinterface #1422,  3         // InterfaceMethod scalaz/Applicative.sequence:(Ljava/lang/Object;Lscalaz/Traverse;)Ljava/lang/Object;
      90: checkcast     #11                 // class org/scalacheck/Gen
      93: areturn

  private final java.lang.Object treeGenSized$$anonfun$5$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.Tree treeGenSized$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #3231               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
       3: aload_0
       4: aload_1
       5: invokedynamic #3235,  0           // InvokeDynamic #191:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: invokevirtual #3238               // Method scalaz/Tree$Leaf$.apply:(Lscala/Function0;)Lscalaz/Tree;
      13: areturn

  private final java.lang.Object treeGenSized$$anonfun$6$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object treeGenSized$$anonfun$7$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.EphemeralStream treeGenSized$$anonfun$8$$anonfun$3(java.lang.Object);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_1
       7: anewarray     #76                 // class scalaz/Tree
      10: dup
      11: iconst_0
      12: getstatic     #3231               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
      15: aload_0
      16: aload_1
      17: invokedynamic #3248,  0           // InvokeDynamic #192:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      22: invokevirtual #3238               // Method scalaz/Tree$Leaf$.apply:(Lscala/Function0;)Lscalaz/Tree;
      25: aastore
      26: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      29: invokevirtual #3160               // Method scalaz/EphemeralStream$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/EphemeralStream;
      32: areturn

  private final scalaz.Tree treeGenSized$$anonfun$2(scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        41
       6: aload_2
       7: invokevirtual #3251               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #3252               // Method scala/Tuple2._2:()Ljava/lang/Object;
      15: astore        4
      17: getstatic     #3255               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      20: aload_0
      21: aload_3
      22: invokedynamic #3259,  0           // InvokeDynamic #193:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      27: aload_0
      28: aload         4
      30: invokedynamic #3263,  0           // InvokeDynamic #194:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      35: invokevirtual #3266               // Method scalaz/Tree$Node$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/Tree;
      38: goto          50
      41: new           #2176               // class scala/MatchError
      44: dup
      45: aload_2
      46: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      49: athrow
      50: areturn

  private final java.lang.Object treeGenSized$$anonfun$9$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object treeGenSized$$anonfun$10$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object treeGenSized$$anonfun$11$$anonfun$3$$anonfun$2(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.EphemeralStream treeGenSized$$anonfun$12$$anonfun$4(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_2
       7: anewarray     #76                 // class scalaz/Tree
      10: dup
      11: iconst_0
      12: getstatic     #3231               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
      15: aload_0
      16: aload_1
      17: invokedynamic #3283,  0           // InvokeDynamic #195:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      22: invokevirtual #3238               // Method scalaz/Tree$Leaf$.apply:(Lscala/Function0;)Lscalaz/Tree;
      25: aastore
      26: dup
      27: iconst_1
      28: getstatic     #3231               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
      31: aload_0
      32: aload_2
      33: invokedynamic #3287,  0           // InvokeDynamic #196:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      38: invokevirtual #3238               // Method scalaz/Tree$Leaf$.apply:(Lscala/Function0;)Lscalaz/Tree;
      41: aastore
      42: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      45: invokevirtual #3160               // Method scalaz/EphemeralStream$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/EphemeralStream;
      48: areturn

  private final java.lang.Object treeGenSized$$anonfun$13$$anonfun$5(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object treeGenSized$$anonfun$14$$anonfun$6$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object treeGenSized$$anonfun$15$$anonfun$7$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.EphemeralStream treeGenSized$$anonfun$16$$anonfun$8$$anonfun$3(java.lang.Object);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_1
       7: anewarray     #76                 // class scalaz/Tree
      10: dup
      11: iconst_0
      12: getstatic     #3231               // Field scalaz/Tree$Leaf$.MODULE$:Lscalaz/Tree$Leaf$;
      15: aload_0
      16: aload_1
      17: invokedynamic #3299,  0           // InvokeDynamic #197:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      22: invokevirtual #3238               // Method scalaz/Tree$Leaf$.apply:(Lscala/Function0;)Lscalaz/Tree;
      25: aastore
      26: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      29: invokevirtual #3160               // Method scalaz/EphemeralStream$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/EphemeralStream;
      32: areturn

  private final scalaz.EphemeralStream treeGenSized$$anonfun$17$$anonfun$9(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
       3: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
       6: iconst_1
       7: anewarray     #76                 // class scalaz/Tree
      10: dup
      11: iconst_0
      12: getstatic     #3255               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      15: aload_0
      16: aload_1
      17: invokedynamic #3306,  0           // InvokeDynamic #198:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      22: aload_0
      23: aload_2
      24: invokedynamic #3310,  0           // InvokeDynamic #199:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      29: invokevirtual #3266               // Method scalaz/Tree$Node$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/Tree;
      32: aastore
      33: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      36: invokevirtual #3160               // Method scalaz/EphemeralStream$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/EphemeralStream;
      39: areturn

  private final org.scalacheck.Gen treeGenSized$$anonfun$3(scala.Tuple3);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        88
       6: aload_2
       7: invokevirtual #3313               // Method scala/Tuple3._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #3314               // Method scala/Tuple3._2:()Ljava/lang/Object;
      15: astore        4
      17: aload_2
      18: invokevirtual #3315               // Method scala/Tuple3._3:()Ljava/lang/Object;
      21: astore        5
      23: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      26: getstatic     #3255               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      29: aload_0
      30: aload_3
      31: invokedynamic #3319,  0           // InvokeDynamic #200:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      36: aload_0
      37: aload         4
      39: aload         5
      41: invokedynamic #3325,  0           // InvokeDynamic #201:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      46: invokevirtual #3266               // Method scalaz/Tree$Node$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/Tree;
      49: getstatic     #3255               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
      52: aload_0
      53: aload_3
      54: invokedynamic #3329,  0           // InvokeDynamic #202:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      59: aload_0
      60: aload         4
      62: aload         5
      64: invokedynamic #3333,  0           // InvokeDynamic #203:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;Ljava/lang/Object;)Lscala/Function0;
      69: invokevirtual #3266               // Method scalaz/Tree$Node$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/Tree;
      72: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      75: iconst_0
      76: anewarray     #76                 // class scalaz/Tree
      79: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      82: invokevirtual #2256               // Method org/scalacheck/Gen$.oneOf:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      85: goto          97
      88: new           #2176               // class scala/MatchError
      91: dup
      92: aload_2
      93: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      96: athrow
      97: areturn

  private final org.scalacheck.Gen treeGenSized$$anonfun$18(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #3341               // Method treeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private org.scalacheck.Gen treeGenSized$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokespecial #3345               // Method treeGenSized$$anonfun$18:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      10: areturn

  private final java.lang.Object treeGenSized$$anonfun$19$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.EphemeralStream treeGenSized$$anonfun$20$$anonfun$2$$anonfun$2(scalaz.EphemeralStream);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.Tree treeGenSized$$anonfun$21$$anonfun$3(scalaz.EphemeralStream, java.lang.Object);
    Code:
       0: getstatic     #3255               // Field scalaz/Tree$Node$.MODULE$:Lscalaz/Tree$Node$;
       3: aload_0
       4: aload_2
       5: invokedynamic #3357,  0           // InvokeDynamic #204:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: aload_0
      11: aload_1
      12: invokedynamic #3363,  0           // InvokeDynamic #205:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/EphemeralStream;)Lscala/Function0;
      17: invokevirtual #3266               // Method scalaz/Tree$Node$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/Tree;
      20: areturn

  private final org.scalacheck.Gen treeGenSized$$anonfun$4(org.scalacheck.Arbitrary, scalaz.EphemeralStream);
    Code:
       0: aload_1
       1: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
       4: aload_0
       5: aload_2
       6: invokedynamic #3370,  0           // InvokeDynamic #206:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/EphemeralStream;)Lscala/Function1;
      11: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      14: areturn

  private final org.scalacheck.Gen TreeArbitrary$$anonfun$2$$anonfun$1$$anonfun$1(org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_2
       2: getstatic     #3378               // Field scalaz/NotNothing$.MODULE$:Lscalaz/NotNothing$;
       5: invokevirtual #3382               // Method scalaz/NotNothing$.isNotNothing:()Lscalaz/NotNothing;
       8: aload_1
       9: invokevirtual #3341               // Method treeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      12: areturn

  private org.scalacheck.Gen TreeArbitrary$$anonfun$3$$anonfun$2$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3387               // Method TreeArbitrary$$anonfun$2$$anonfun$1$$anonfun$1:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen TreeArbitrary$$anonfun$4$$anonfun$3(org.scalacheck.Arbitrary, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpge     20
       5: aload_0
       6: iconst_0
       7: getstatic     #3378               // Field scalaz/NotNothing$.MODULE$:Lscalaz/NotNothing$;
      10: invokevirtual #3382               // Method scalaz/NotNothing$.isNotNothing:()Lscalaz/NotNothing;
      13: aload_1
      14: invokevirtual #3341               // Method treeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      17: goto          50
      20: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      23: iconst_1
      24: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: iload_2
      28: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      31: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      34: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      37: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      40: aload_0
      41: aload_1
      42: invokedynamic #3393,  0           // InvokeDynamic #207:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      47: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      50: areturn

  private org.scalacheck.Gen TreeArbitrary$$anonfun$5$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3397               // Method TreeArbitrary$$anonfun$4$$anonfun$3:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen TreeArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: invokedynamic #3402,  0           // InvokeDynamic #208:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      10: invokevirtual #3405               // Method org/scalacheck/Gen$.sized:(Lscala/Function1;)Lorg/scalacheck/Gen;
      13: areturn

  private final scalaz.StrictTree strictTreeGenSized$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #3408               // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
       3: aload_1
       4: invokevirtual #3410               // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
       7: areturn

  private final scalaz.StrictTree strictTreeGenSized$$anonfun$2(scala.Tuple2);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        60
       6: aload_2
       7: invokevirtual #3251               // Method scala/Tuple2._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #3252               // Method scala/Tuple2._2:()Ljava/lang/Object;
      15: astore        4
      17: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
      20: aload_3
      21: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
      24: invokevirtual #3419               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      27: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      30: iconst_1
      31: anewarray     #71                 // class scalaz/StrictTree
      34: dup
      35: iconst_0
      36: getstatic     #3408               // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
      39: aload         4
      41: invokevirtual #3410               // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
      44: aastore
      45: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      48: invokevirtual #3422               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      51: checkcast     #3424               // class scala/collection/immutable/Vector
      54: invokevirtual #3427               // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      57: goto          69
      60: new           #2176               // class scala/MatchError
      63: dup
      64: aload_2
      65: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      68: athrow
      69: areturn

  private final org.scalacheck.Gen strictTreeGenSized$$anonfun$3(scala.Tuple3);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: ifnull        166
       6: aload_2
       7: invokevirtual #3313               // Method scala/Tuple3._1:()Ljava/lang/Object;
      10: astore_3
      11: aload_2
      12: invokevirtual #3314               // Method scala/Tuple3._2:()Ljava/lang/Object;
      15: astore        4
      17: aload_2
      18: invokevirtual #3315               // Method scala/Tuple3._3:()Ljava/lang/Object;
      21: astore        5
      23: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      26: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
      29: aload_3
      30: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
      33: invokevirtual #3419               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      36: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      39: iconst_2
      40: anewarray     #71                 // class scalaz/StrictTree
      43: dup
      44: iconst_0
      45: getstatic     #3408               // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
      48: aload         4
      50: invokevirtual #3410               // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
      53: aastore
      54: dup
      55: iconst_1
      56: getstatic     #3408               // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
      59: aload         5
      61: invokevirtual #3410               // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
      64: aastore
      65: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      68: invokevirtual #3422               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
      71: checkcast     #3424               // class scala/collection/immutable/Vector
      74: invokevirtual #3427               // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      77: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
      80: aload_3
      81: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
      84: invokevirtual #3419               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
      87: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      90: iconst_1
      91: anewarray     #71                 // class scalaz/StrictTree
      94: dup
      95: iconst_0
      96: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
      99: aload         4
     101: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
     104: invokevirtual #3419               // Method scala/package$.Vector:()Lscala/collection/immutable/Vector$;
     107: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
     110: iconst_1
     111: anewarray     #71                 // class scalaz/StrictTree
     114: dup
     115: iconst_0
     116: getstatic     #3408               // Field scalaz/StrictTree$Leaf$.MODULE$:Lscalaz/StrictTree$Leaf$;
     119: aload         5
     121: invokevirtual #3410               // Method scalaz/StrictTree$Leaf$.apply:(Ljava/lang/Object;)Lscalaz/StrictTree;
     124: aastore
     125: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
     128: invokevirtual #3422               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
     131: checkcast     #3424               // class scala/collection/immutable/Vector
     134: invokevirtual #3427               // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
     137: aastore
     138: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
     141: invokevirtual #3422               // Method scala/collection/immutable/Vector$.apply:(Lscala/collection/immutable/Seq;)Ljava/lang/Object;
     144: checkcast     #3424               // class scala/collection/immutable/Vector
     147: invokevirtual #3427               // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
     150: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
     153: iconst_0
     154: anewarray     #71                 // class scalaz/StrictTree
     157: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
     160: invokevirtual #2256               // Method org/scalacheck/Gen$.oneOf:(Ljava/lang/Object;Ljava/lang/Object;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
     163: goto          175
     166: new           #2176               // class scala/MatchError
     169: dup
     170: aload_2
     171: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
     174: athrow
     175: areturn

  private final org.scalacheck.Gen strictTreeGenSized$$anonfun$5(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #3432               // Method strictTreeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private org.scalacheck.Gen strictTreeGenSized$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokespecial #3436               // Method strictTreeGenSized$$anonfun$5:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      10: areturn

  private final scalaz.StrictTree strictTreeGenSized$$anonfun$6$$anonfun$1(scalaz.EphemeralStream, java.lang.Object);
    Code:
       0: getstatic     #2678               // Field scalaz/StrictTree$.MODULE$:Lscalaz/StrictTree$;
       3: aload_2
       4: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       7: aload_1
       8: getstatic     #1410               // Field scalaz/EphemeralStream$.MODULE$:Lscalaz/EphemeralStream$;
      11: invokevirtual #1414               // Method scalaz/EphemeralStream$.ephemeralStreamInstance:()Lscalaz/Align;
      14: checkcast     #581                // class scalaz/Foldable
      17: invokevirtual #2397               // Method scalaz/Scalaz$.ToFoldableOps:(Ljava/lang/Object;Lscalaz/Foldable;)Lscalaz/syntax/FoldableOps;
      20: invokevirtual #3442               // Method scalaz/syntax/FoldableOps.toVector:()Lscala/collection/immutable/Vector;
      23: invokevirtual #3427               // Method scalaz/StrictTree$.apply:(Ljava/lang/Object;Lscala/collection/immutable/Vector;)Lscalaz/StrictTree;
      26: areturn

  private final org.scalacheck.Gen strictTreeGenSized$$anonfun$4(org.scalacheck.Arbitrary, scalaz.EphemeralStream);
    Code:
       0: aload_1
       1: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
       4: aload_0
       5: aload_2
       6: invokedynamic #3447,  0           // InvokeDynamic #209:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/EphemeralStream;)Lscala/Function1;
      11: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      14: areturn

  private final org.scalacheck.Gen StrictTreeArbitrary$$anonfun$2$$anonfun$1$$anonfun$1(org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_2
       2: getstatic     #3378               // Field scalaz/NotNothing$.MODULE$:Lscalaz/NotNothing$;
       5: invokevirtual #3382               // Method scalaz/NotNothing$.isNotNothing:()Lscalaz/NotNothing;
       8: aload_1
       9: invokevirtual #3432               // Method strictTreeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      12: areturn

  private org.scalacheck.Gen StrictTreeArbitrary$$anonfun$3$$anonfun$2$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3453               // Method StrictTreeArbitrary$$anonfun$2$$anonfun$1$$anonfun$1:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen StrictTreeArbitrary$$anonfun$4$$anonfun$3(org.scalacheck.Arbitrary, int);
    Code:
       0: iload_2
       1: iconst_1
       2: if_icmpge     20
       5: aload_0
       6: iconst_0
       7: getstatic     #3378               // Field scalaz/NotNothing$.MODULE$:Lscalaz/NotNothing$;
      10: invokevirtual #3382               // Method scalaz/NotNothing$.isNotNothing:()Lscalaz/NotNothing;
      13: aload_1
      14: invokevirtual #3432               // Method strictTreeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      17: goto          50
      20: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      23: iconst_1
      24: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      27: iload_2
      28: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      31: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      34: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      37: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      40: aload_0
      41: aload_1
      42: invokedynamic #3459,  0           // InvokeDynamic #210:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      47: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      50: areturn

  private org.scalacheck.Gen StrictTreeArbitrary$$anonfun$5$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3463               // Method StrictTreeArbitrary$$anonfun$4$$anonfun$3:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen StrictTreeArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: invokedynamic #3468,  0           // InvokeDynamic #211:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      10: invokevirtual #3405               // Method org/scalacheck/Gen$.sized:(Lscala/Function1;)Lorg/scalacheck/Gen;
      13: areturn

  private final org.scalacheck.Gen forest$1$$anonfun$1(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #3341               // Method treeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private org.scalacheck.Gen forest$2$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokespecial #3476               // Method forest$1$$anonfun$1:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      10: areturn

  private final org.scalacheck.Gen forest$3(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_0
       3: aload_1
       4: aload_2
       5: invokedynamic #3483,  0           // InvokeDynamic #212:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      10: invokespecial #1484               // Method withSize:(ILscala/Function1;)Lorg/scalacheck/Gen;
      13: areturn

  private final org.scalacheck.Gen $anonfun$13$$anonfun$1$$anonfun$1(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3489               // Method forest$3:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen $anonfun$14$$anonfun$2$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_1
       1: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
       4: areturn

  private final org.scalacheck.Gen $anonfun$15$$anonfun$3$$anonfun$3(scalaz.NotNothing, org.scalacheck.Arbitrary, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: isub
       7: iconst_1
       8: isub
       9: invokespecial #3489               // Method forest$3:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      12: areturn

  private final org.scalacheck.Gen $anonfun$16$$anonfun$4(scalaz.NotNothing, org.scalacheck.Arbitrary, int, int);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: aload_2
      15: iload         4
      17: invokedynamic #3508,  0           // InvokeDynamic #213:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lscala/Function0;
      22: aload_0
      23: aload_2
      24: invokedynamic #3512,  0           // InvokeDynamic #214:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      29: aload_0
      30: aload_1
      31: aload_2
      32: iload_3
      33: iload         4
      35: invokedynamic #3518,  0           // InvokeDynamic #215:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;II)Lscala/Function0;
      40: invokeinterface #3521,  4         // InterfaceMethod scalaz/Apply.tuple3:(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
      45: checkcast     #11                 // class org/scalacheck/Gen
      48: areturn

  private org.scalacheck.Gen $anonfun$17$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aload         4
       6: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokespecial #3528               // Method $anonfun$16$$anonfun$4:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;II)Lorg/scalacheck/Gen;
      12: areturn

  private final org.scalacheck.Gen $anonfun$18(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: iconst_0
       4: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      10: iload_3
      11: iconst_1
      12: isub
      13: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      16: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      19: invokevirtual #1377               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Enum;
      22: invokevirtual #1381               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
      25: iconst_0
      26: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      29: invokevirtual #1386               // Method scalaz/syntax/OrderOps.max:(Ljava/lang/Object;)Ljava/lang/Object;
      32: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      35: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      38: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      41: aload_0
      42: aload_1
      43: aload_2
      44: iload_3
      45: invokedynamic #3537,  0           // InvokeDynamic #216:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lscala/Function1;
      50: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      53: areturn

  private org.scalacheck.Gen $anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       7: invokespecial #3541               // Method $anonfun$18:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      10: areturn

  private final scala.Tuple2 treeLocGenSized$$anonfun$2(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: isub
       3: istore_3
       4: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
       7: iload_2
       8: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: iload_3
      12: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      15: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
      18: areturn

  private scala.Tuple2 treeLocGenSized$$anonfun$adapted$1(int, java.lang.Object);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3546               // Method treeLocGenSized$$anonfun$2:(II)Lscala/Tuple2;
       9: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$3$$anonfun$1$$anonfun$1$$anonfun$1(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #3341               // Method treeGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$4$$anonfun$2$$anonfun$2$$anonfun$2(scalaz.NotNothing, org.scalacheck.Arbitrary, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: iload         4
       6: isub
       7: invokespecial #3489               // Method forest$3:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
      10: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$5$$anonfun$3$$anonfun$3$$anonfun$3(scalaz.NotNothing, org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #3489               // Method forest$3:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$6$$anonfun$4$$anonfun$4$$anonfun$4(scala.Function1, int, int);
    Code:
       0: aload_0
       1: iload_2
       2: iload_3
       3: isub
       4: aload_1
       5: invokespecial #1484               // Method withSize:(ILscala/Function1;)Lorg/scalacheck/Gen;
       8: areturn

  private final scalaz.TreeLoc treeLocGenSized$$anonfun$7$$anonfun$5$$anonfun$5$$anonfun$5(scalaz.Tree, scalaz.EphemeralStream, scalaz.EphemeralStream, scalaz.EphemeralStream);
    Code:
       0: getstatic     #3571               // Field scalaz/TreeLoc$.MODULE$:Lscalaz/TreeLoc$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: aload         4
       8: invokevirtual #3573               // Method scalaz/TreeLoc$.apply:(Lscalaz/Tree;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;Lscalaz/EphemeralStream;)Lscalaz/TreeLoc;
      11: areturn

  private final scalaz.TreeLoc treeLocGenSized$$anonfun$8$$anonfun$6$$anonfun$6$$anonfun$6(scalaz.TreeLoc);
    Code:
       0: aload_1
       1: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$9$$anonfun$7$$anonfun$7(scalaz.NotNothing, org.scalacheck.Arbitrary, scala.Function1, int, int, int, int);
    Code:
       0: getstatic     #242                // Field scalaz/Apply$.MODULE$:Lscalaz/Apply$;
       3: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
       6: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
       9: invokevirtual #245                // Method scalaz/Apply$.apply:(Lscalaz/Apply;)Lscalaz/Apply;
      12: aload_0
      13: aload_1
      14: aload_2
      15: iload         6
      17: invokedynamic #3588,  0           // InvokeDynamic #217:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lscala/Function0;
      22: aload_0
      23: aload_1
      24: aload_2
      25: iload         4
      27: iload         6
      29: invokedynamic #3592,  0           // InvokeDynamic #218:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;II)Lscala/Function0;
      34: aload_0
      35: aload_1
      36: aload_2
      37: iload         7
      39: invokedynamic #3596,  0           // InvokeDynamic #219:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;I)Lscala/Function0;
      44: aload_0
      45: aload_3
      46: iload         5
      48: iload         7
      50: invokedynamic #3602,  0           // InvokeDynamic #220:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscala/Function1;II)Lscala/Function0;
      55: aload_0
      56: invokedynamic #3607,  0           // InvokeDynamic #221:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function4;
      61: invokeinterface #3608,  6         // InterfaceMethod scalaz/Apply.apply4:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;)Ljava/lang/Object;
      66: checkcast     #11                 // class org/scalacheck/Gen
      69: aload_0
      70: invokedynamic #3613,  0           // InvokeDynamic #222:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      75: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      78: areturn

  private org.scalacheck.Gen treeLocGenSized$$anonfun$10$$anonfun$8$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, scala.Function1, int, int, int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: iload         6
      10: aload         7
      12: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      15: invokespecial #3623               // Method treeLocGenSized$$anonfun$9$$anonfun$7$$anonfun$7:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;Lscala/Function1;IIII)Lorg/scalacheck/Gen;
      18: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$11$$anonfun$9(scalaz.NotNothing, org.scalacheck.Arbitrary, scala.Function1, int, int, int);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: iconst_0
       4: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      10: iload         5
      12: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      15: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      18: invokevirtual #1377               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Enum;
      21: invokevirtual #1381               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
      24: iconst_0
      25: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      28: invokevirtual #1386               // Method scalaz/syntax/OrderOps.max:(Ljava/lang/Object;)Ljava/lang/Object;
      31: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      34: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      37: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      40: aload_0
      41: aload_1
      42: aload_2
      43: aload_3
      44: iload         4
      46: iload         5
      48: iload         6
      50: invokedynamic #3637,  0           // InvokeDynamic #223:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;Lscala/Function1;III)Lscala/Function1;
      55: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      58: areturn

  private org.scalacheck.Gen treeLocGenSized$$anonfun$12$$anonfun$adapted$1(scalaz.NotNothing, org.scalacheck.Arbitrary, scala.Function1, int, int, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: iload         5
       8: aload         6
      10: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      13: invokespecial #3646               // Method treeLocGenSized$$anonfun$11$$anonfun$9:(Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;Lscala/Function1;III)Lorg/scalacheck/Gen;
      16: areturn

  private final org.scalacheck.Gen treeLocGenSized$$anonfun$1(scalaz.NotNothing, org.scalacheck.Arbitrary, scala.Function1, scala.Tuple2);
    Code:
       0: aload         4
       2: astore        5
       4: aload         5
       6: ifnull        88
       9: aload         5
      11: invokevirtual #3251               // Method scala/Tuple2._1:()Ljava/lang/Object;
      14: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      17: istore        6
      19: aload         5
      21: invokevirtual #3252               // Method scala/Tuple2._2:()Ljava/lang/Object;
      24: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
      27: istore        7
      29: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      32: iconst_1
      33: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      36: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      39: iload         6
      41: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      44: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      47: invokevirtual #1377               // Method scalaz/Scalaz$.intInstance:()Lscalaz/Enum;
      50: invokevirtual #1381               // Method scalaz/Scalaz$.ToOrderOps:(Ljava/lang/Object;Lscalaz/Order;)Lscalaz/syntax/OrderOps;
      53: iconst_1
      54: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      57: invokevirtual #1386               // Method scalaz/syntax/OrderOps.max:(Ljava/lang/Object;)Ljava/lang/Object;
      60: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      63: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      66: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      69: aload_0
      70: aload_1
      71: aload_2
      72: aload_3
      73: iload         6
      75: iload         7
      77: invokedynamic #3655,  0           // InvokeDynamic #224:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/NotNothing;Lorg/scalacheck/Arbitrary;Lscala/Function1;II)Lscala/Function1;
      82: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      85: goto          98
      88: new           #2176               // class scala/MatchError
      91: dup
      92: aload         5
      94: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      97: athrow
      98: areturn

  private final org.scalacheck.Arbitrary IterableArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary IterableArbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: aload_1
       5: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
       8: getstatic     #1299               // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      11: invokevirtual #1300               // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      14: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      17: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      23: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      26: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      29: areturn

  private final scala.collection.Iterable IterableArbitrary$$anonfun$3(java.lang.Object, scala.collection.immutable.List);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #3665               // Method scala/collection/immutable/List.$colon$colon:(Ljava/lang/Object;)Lscala/collection/immutable/List;
       5: areturn

  private final org.scalacheck.Gen TreeLocArbitrary$$anonfun$2$$anonfun$1$$anonfun$1(org.scalacheck.Arbitrary, int);
    Code:
       0: aload_0
       1: iload_2
       2: getstatic     #3378               // Field scalaz/NotNothing$.MODULE$:Lscalaz/NotNothing$;
       5: invokevirtual #3382               // Method scalaz/NotNothing$.isNotNothing:()Lscalaz/NotNothing;
       8: aload_1
       9: invokevirtual #3669               // Method treeLocGenSized:(ILscalaz/NotNothing;Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      12: areturn

  private org.scalacheck.Gen TreeLocArbitrary$$anonfun$3$$anonfun$2$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3673               // Method TreeLocArbitrary$$anonfun$2$$anonfun$1$$anonfun$1:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen TreeLocArbitrary$$anonfun$4$$anonfun$3(org.scalacheck.Arbitrary, int);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: iconst_0
       4: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
       7: iload_2
       8: invokestatic  #1368               // Method scala/runtime/BoxesRunTime.boxToInteger:(I)Ljava/lang/Integer;
      11: getstatic     #1389               // Field org/scalacheck/Gen$Choose$.MODULE$:Lorg/scalacheck/Gen$Choose$;
      14: invokevirtual #1393               // Method org/scalacheck/Gen$Choose$.chooseInt:()Lorg/scalacheck/Gen$Choose;
      17: invokevirtual #1397               // Method org/scalacheck/Gen$.choose:(Ljava/lang/Object;Ljava/lang/Object;Lorg/scalacheck/Gen$Choose;)Lorg/scalacheck/Gen;
      20: aload_0
      21: aload_1
      22: invokedynamic #3679,  0           // InvokeDynamic #225:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      27: invokevirtual #1436               // Method org/scalacheck/Gen.flatMap:(Lscala/Function1;)Lorg/scalacheck/Gen;
      30: areturn

  private org.scalacheck.Gen TreeLocArbitrary$$anonfun$5$$anonfun$adapted$1(org.scalacheck.Arbitrary, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       6: invokespecial #3683               // Method TreeLocArbitrary$$anonfun$4$$anonfun$3:(Lorg/scalacheck/Arbitrary;I)Lorg/scalacheck/Gen;
       9: areturn

  private final org.scalacheck.Gen TreeLocArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: invokedynamic #3688,  0           // InvokeDynamic #226:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function1;
      10: invokevirtual #3405               // Method org/scalacheck/Gen$.sized:(Lscala/Function1;)Lorg/scalacheck/Gen;
      13: areturn

  private final scalaz.$bslash$div DisjunctionArbitrary$$anonfun$1(scala.util.Either);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #3690               // class scala/util/Left
       6: ifeq          27
       9: aload_2
      10: checkcast     #3690               // class scala/util/Left
      13: invokevirtual #3691               // Method scala/util/Left.value:()Ljava/lang/Object;
      16: astore_3
      17: getstatic     #2312               // Field scalaz/$minus$bslash$div$.MODULE$:Lscalaz/$minus$bslash$div$;
      20: aload_3
      21: invokevirtual #2313               // Method scalaz/$minus$bslash$div$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      24: goto          63
      27: aload_2
      28: instanceof    #3693               // class scala/util/Right
      31: ifeq          54
      34: aload_2
      35: checkcast     #3693               // class scala/util/Right
      38: invokevirtual #3694               // Method scala/util/Right.value:()Ljava/lang/Object;
      41: astore        4
      43: getstatic     #2289               // Field scalaz/$bslash$div$minus$.MODULE$:Lscalaz/$bslash$div$minus$;
      46: aload         4
      48: invokevirtual #2300               // Method scalaz/$bslash$div$minus$.apply:(Ljava/lang/Object;)Lscalaz/$bslash$div;
      51: goto          63
      54: new           #2176               // class scala/MatchError
      57: dup
      58: aload_2
      59: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      62: athrow
      63: areturn

  private final scalaz.Validation ValidationArbitrary$$anonfun$1(scalaz.$bslash$div);
    Code:
       0: aload_1
       1: invokevirtual #3702               // Method scalaz/$bslash$div.toValidation:()Lscalaz/Validation;
       4: areturn

  private final scala.Tuple1 Tuple1Arbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #3708               // Field scala/Tuple1$.MODULE$:Lscala/Tuple1$;
       3: aload_1
       4: invokevirtual #3710               // Method scala/Tuple1$.apply:(Ljava/lang/Object;)Lscala/Tuple1;
       7: areturn

  private final java.lang.Object Function0Arbitrary$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scala.Function0 Function0Arbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #3717,  0           // InvokeDynamic #227:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
       7: areturn

  private final java.lang.Object FirstOptionArbitrary$$anonfun$1(scala.Option);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: invokevirtual #3173               // Method scalaz/Scalaz$.ToOptionOpsFromOption:(Lscala/Option;)Lscala/Option;
       7: astore_2
       8: getstatic     #3178               // Field scalaz/syntax/std/OptionOps$.MODULE$:Lscalaz/syntax/std/OptionOps$;
      11: aload_2
      12: invokevirtual #3721               // Method scalaz/syntax/std/OptionOps$.first$extension:(Lscala/Option;)Ljava/lang/Object;
      15: areturn

  private final java.lang.Object LastOptionArbitrary$$anonfun$1(scala.Option);
    Code:
       0: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       3: aload_1
       4: invokevirtual #3173               // Method scalaz/Scalaz$.ToOptionOpsFromOption:(Lscala/Option;)Lscala/Option;
       7: astore_2
       8: getstatic     #3178               // Field scalaz/syntax/std/OptionOps$.MODULE$:Lscalaz/syntax/std/OptionOps$;
      11: aload_2
      12: invokevirtual #3725               // Method scalaz/syntax/std/OptionOps$.last$extension:(Lscala/Option;)Ljava/lang/Object;
      15: areturn

  private final java.lang.Object FirstMaybeArbitrary$$anonfun$1(scalaz.Maybe);
    Code:
       0: aload_1
       1: invokevirtual #3729               // Method scalaz/Maybe.first:()Ljava/lang/Object;
       4: areturn

  private final java.lang.Object LastMaybeArbitrary$$anonfun$1(scalaz.Maybe);
    Code:
       0: aload_1
       1: invokevirtual #3733               // Method scalaz/Maybe.last:()Ljava/lang/Object;
       4: areturn

  private final scalaz.FingerTree$Finger FingerArbitrary$$anonfun$2$$anonfun$1(scalaz.Reducer, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_1
       5: invokevirtual #3746               // Method scalaz/FingerTree$.one:(Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Finger;
       8: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$3$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$4$$anonfun$3(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.FingerTree$Finger FingerArbitrary$$anonfun$5$$anonfun$4(scalaz.Reducer, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_3
       5: aload_1
       6: invokevirtual #3759               // Method scalaz/FingerTree$.two:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Finger;
       9: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$6$$anonfun$5(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$7$$anonfun$6(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$8$$anonfun$7(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.FingerTree$Finger FingerArbitrary$$anonfun$9$$anonfun$8(scalaz.Reducer, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload_1
       8: invokevirtual #3775               // Method scalaz/FingerTree$.three:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Finger;
      11: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$10$$anonfun$9(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$11$$anonfun$10(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$12$$anonfun$11(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$13$$anonfun$12(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.FingerTree$Finger FingerArbitrary$$anonfun$14$$anonfun$13(scalaz.Reducer, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload         5
       9: aload_1
      10: invokevirtual #3794               // Method scalaz/FingerTree$.four:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Finger;
      13: areturn

  private final org.scalacheck.Gen FingerArbitrary$$anonfun$1(org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       6: aload_1
       7: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      10: aload_0
      11: aload_2
      12: invokedynamic #3804,  0           // InvokeDynamic #228:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function1;
      17: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      20: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      23: aload_0
      24: aload_1
      25: invokedynamic #3808,  0           // InvokeDynamic #229:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      30: aload_0
      31: aload_1
      32: invokedynamic #3812,  0           // InvokeDynamic #230:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      37: aload_0
      38: aload_2
      39: invokedynamic #3820,  0           // InvokeDynamic #231:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function2;
      44: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      47: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
      50: invokevirtual #2855               // Method scalaz/Scalaz$.$up:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
      53: checkcast     #11                 // class org/scalacheck/Gen
      56: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      59: iconst_2
      60: anewarray     #11                 // class org/scalacheck/Gen
      63: dup
      64: iconst_0
      65: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      68: aload_0
      69: aload_1
      70: invokedynamic #3824,  0           // InvokeDynamic #232:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      75: aload_0
      76: aload_1
      77: invokedynamic #3828,  0           // InvokeDynamic #233:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      82: aload_0
      83: aload_1
      84: invokedynamic #3832,  0           // InvokeDynamic #234:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      89: aload_0
      90: aload_2
      91: invokedynamic #3840,  0           // InvokeDynamic #235:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function3;
      96: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      99: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
     102: invokevirtual #3844               // Method scalaz/Scalaz$.$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
     105: checkcast     #11                 // class org/scalacheck/Gen
     108: aastore
     109: dup
     110: iconst_1
     111: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
     114: aload_0
     115: aload_1
     116: invokedynamic #3848,  0           // InvokeDynamic #236:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
     121: aload_0
     122: aload_1
     123: invokedynamic #3852,  0           // InvokeDynamic #237:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
     128: aload_0
     129: aload_1
     130: invokedynamic #3856,  0           // InvokeDynamic #238:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
     135: aload_0
     136: aload_1
     137: invokedynamic #3860,  0           // InvokeDynamic #239:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
     142: aload_0
     143: aload_2
     144: invokedynamic #3868,  0           // InvokeDynamic #240:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function4;
     149: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
     152: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
     155: invokevirtual #3872               // Method scalaz/Scalaz$.$up$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscalaz/Apply;)Ljava/lang/Object;
     158: checkcast     #11                 // class org/scalacheck/Gen
     161: aastore
     162: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
     165: invokevirtual #2872               // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
     168: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$2$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$3$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.FingerTree$Node NodeArbitrary$$anonfun$4$$anonfun$3(scalaz.Reducer, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_3
       5: aload_1
       6: invokevirtual #3885               // Method scalaz/FingerTree$.node2:(Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Node;
       9: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$5$$anonfun$4(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$6$$anonfun$5(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$7$$anonfun$6(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       3: aload_1
       4: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
       7: areturn

  private final scalaz.FingerTree$Node NodeArbitrary$$anonfun$8$$anonfun$7(scalaz.Reducer, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_3
       5: aload         4
       7: aload_1
       8: invokevirtual #3901               // Method scalaz/FingerTree$.node3:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree$Node;
      11: areturn

  private final org.scalacheck.Gen NodeArbitrary$$anonfun$1(org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       6: aload_0
       7: aload_1
       8: invokedynamic #3907,  0           // InvokeDynamic #241:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      13: aload_0
      14: aload_1
      15: invokedynamic #3911,  0           // InvokeDynamic #242:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      20: aload_0
      21: aload_2
      22: invokedynamic #3917,  0           // InvokeDynamic #243:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function2;
      27: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      30: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
      33: invokevirtual #2855               // Method scalaz/Scalaz$.$up:(Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscalaz/Apply;)Ljava/lang/Object;
      36: checkcast     #11                 // class org/scalacheck/Gen
      39: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      42: aload_0
      43: aload_1
      44: invokedynamic #3921,  0           // InvokeDynamic #244:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      49: aload_0
      50: aload_1
      51: invokedynamic #3925,  0           // InvokeDynamic #245:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      56: aload_0
      57: aload_1
      58: invokedynamic #3929,  0           // InvokeDynamic #246:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lorg/scalacheck/Arbitrary;)Lscala/Function0;
      63: aload_0
      64: aload_2
      65: invokedynamic #3935,  0           // InvokeDynamic #247:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function3;
      70: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
      73: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
      76: invokevirtual #3844               // Method scalaz/Scalaz$.$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
      79: checkcast     #11                 // class org/scalacheck/Gen
      82: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      85: iconst_0
      86: anewarray     #11                 // class org/scalacheck/Gen
      89: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      92: invokevirtual #2872               // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      95: areturn

  private final scalaz.FingerTree fingerTree$1$$anonfun$1(scalaz.Reducer, java.lang.Object);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_1
       5: invokevirtual #3943               // Method scalaz/FingerTree$.single:(Ljava/lang/Object;Lscalaz/Reducer;)Lscalaz/FingerTree;
       8: areturn

  private final org.scalacheck.Gen fingerTree$2$$anonfun$2(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #3949               // Method FingerArbitrary:(Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lorg/scalacheck/Arbitrary;
       7: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      10: areturn

  private final org.scalacheck.Gen fingerTree$3$$anonfun$3(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload         4
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokevirtual #3957               // Method NodeArbitrary:(Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lorg/scalacheck/Arbitrary;
      11: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      14: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
      17: aload_1
      18: invokevirtual #3961               // Method scalaz/FingerTree$.nodeMeasure:(Lscalaz/Semigroup;)Lscalaz/Reducer;
      21: invokevirtual #378                // Method scala/Predef$.implicitly:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #3963               // class scalaz/Reducer
      27: invokespecial #3967               // Method fingerTree$4:(Lscalaz/Monoid;ILorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lorg/scalacheck/Gen;
      30: areturn

  private final org.scalacheck.Gen fingerTree$5$$anonfun$4(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #3949               // Method FingerArbitrary:(Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lorg/scalacheck/Arbitrary;
       7: invokevirtual #1445               // Method org/scalacheck/Arbitrary.arbitrary:()Lorg/scalacheck/Gen;
      10: areturn

  private final scalaz.FingerTree fingerTree$6$$anonfun$5$$anonfun$1(scalaz.FingerTree);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.FingerTree fingerTree$7$$anonfun$6(scalaz.Reducer, scalaz.FingerTree$Finger, scalaz.FingerTree, scalaz.FingerTree$Finger);
    Code:
       0: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
       3: aload_2
       4: aload_0
       5: aload_3
       6: invokedynamic #3989,  0           // InvokeDynamic #248:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/FingerTree;)Lscala/Function0;
      11: aload         4
      13: aload_1
      14: invokevirtual #3993               // Method scalaz/FingerTree$.deep:(Lscalaz/FingerTree$Finger;Lscala/Function0;Lscalaz/FingerTree$Finger;Lscalaz/Reducer;)Lscalaz/FingerTree;
      17: areturn

  private final org.scalacheck.Gen fingerTree$4(scalaz.Monoid, int, org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: iload_2
       1: istore        5
       3: iconst_0
       4: iload         5
       6: if_icmpne     26
       9: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      12: getstatic     #3742               // Field scalaz/FingerTree$.MODULE$:Lscalaz/FingerTree$;
      15: aload         4
      17: invokevirtual #4000               // Method scalaz/FingerTree$.empty:(Lscalaz/Reducer;)Lscalaz/FingerTree;
      20: invokevirtual #2189               // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      23: goto          133
      26: iconst_1
      27: iload         5
      29: if_icmpne     53
      32: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      35: aload_3
      36: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      39: aload_0
      40: aload         4
      42: invokedynamic #4006,  0           // InvokeDynamic #249:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function1;
      47: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      50: goto          133
      53: iload         5
      55: istore        6
      57: getstatic     #4011               // Field scala/runtime/RichInt$.MODULE$:Lscala/runtime/RichInt$;
      60: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      63: iload         6
      65: invokevirtual #4015               // Method scala/Predef$.intWrapper:(I)I
      68: invokevirtual #4018               // Method scala/runtime/RichInt$.abs$extension:(I)I
      71: iconst_2
      72: idiv
      73: istore        7
      75: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
      78: aload_0
      79: aload_1
      80: aload_3
      81: aload         4
      83: invokedynamic #4022,  0           // InvokeDynamic #250:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function0;
      88: aload_0
      89: aload_1
      90: aload_3
      91: aload         4
      93: iload         7
      95: invokedynamic #4028,  0           // InvokeDynamic #251:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;I)Lscala/Function0;
     100: aload_0
     101: aload_1
     102: aload_3
     103: aload         4
     105: invokedynamic #4032,  0           // InvokeDynamic #252:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function0;
     110: aload_0
     111: aload         4
     113: invokedynamic #4038,  0           // InvokeDynamic #253:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Reducer;)Lscala/Function3;
     118: getstatic     #207                // Field scalaz/scalacheck/ScalaCheckBinding$.MODULE$:Lscalaz/scalacheck/ScalaCheckBinding$;
     121: invokevirtual #1349               // Method scalaz/scalacheck/ScalaCheckBinding$.GenMonad:()Lscalaz/Monad;
     124: invokevirtual #3844               // Method scalaz/Scalaz$.$up$up:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscalaz/Apply;)Ljava/lang/Object;
     127: checkcast     #11                 // class org/scalacheck/Gen
     130: goto          133
     133: areturn

  private final org.scalacheck.Gen FingerTreeArbitrary$$anonfun$2$$anonfun$1(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload         4
       4: aload_2
       5: aload_3
       6: invokespecial #3967               // Method fingerTree$4:(Lscalaz/Monoid;ILorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lorg/scalacheck/Gen;
       9: areturn

  private org.scalacheck.Gen FingerTreeArbitrary$$anonfun$3$$anonfun$adapted$1(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #2233               // Method scala/runtime/BoxesRunTime.unboxToInt:(Ljava/lang/Object;)I
       9: invokespecial #4050               // Method FingerTreeArbitrary$$anonfun$2$$anonfun$1:(Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;I)Lorg/scalacheck/Gen;
      12: areturn

  private final org.scalacheck.Gen FingerTreeArbitrary$$anonfun$1(scalaz.Monoid, org.scalacheck.Arbitrary, scalaz.Reducer);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: aload_0
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokedynamic #4059,  0           // InvokeDynamic #254:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Lscalaz/Monoid;Lorg/scalacheck/Arbitrary;Lscalaz/Reducer;)Lscala/Function1;
      12: invokevirtual #3405               // Method org/scalacheck/Gen$.sized:(Lscala/Function1;)Lorg/scalacheck/Gen;
      15: areturn

  private final scalaz.IndSeq IndSeqArbibrary$$anonfun$1(scala.collection.immutable.List);
    Code:
       0: getstatic     #575                // Field scalaz/IndSeq$.MODULE$:Lscalaz/IndSeq$;
       3: aload_1
       4: invokevirtual #4063               // Method scalaz/IndSeq$.fromSeq:(Lscala/collection/immutable/Seq;)Lscalaz/IndSeq;
       7: areturn

  private final java.lang.Object CallableArbitrary$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.util.concurrent.Callable CallableArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #1346               // Field scalaz/Applicative$.MODULE$:Lscalaz/Applicative$;
       3: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       6: invokevirtual #4067               // Method scalaz/Scalaz$.callableMonad:()Lscalaz/Monad;
       9: invokevirtual #1352               // Method scalaz/Applicative$.apply:(Lscalaz/Applicative;)Lscalaz/Applicative;
      12: aload_0
      13: aload_1
      14: invokedynamic #4071,  0           // InvokeDynamic #255:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      19: invokeinterface #4074,  2         // InterfaceMethod scalaz/Applicative.point:(Lscala/Function0;)Ljava/lang/Object;
      24: checkcast     #4076               // class java/util/concurrent/Callable
      27: areturn

  private final org.scalacheck.Arbitrary ZipperArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: aload_1
       5: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
       8: getstatic     #1143               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      11: invokevirtual #1144               // Method scala/collection/immutable/LazyList$.iterableFactory:()Lscala/collection/Factory;
      14: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      17: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      23: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      26: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      29: areturn

  private final org.scalacheck.Arbitrary ZipperArbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary ZipperArbitrary$$anonfun$3(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       4: aload_1
       5: getstatic     #1069               // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
       8: getstatic     #1143               // Field scala/collection/immutable/LazyList$.MODULE$:Lscala/collection/immutable/LazyList$;
      11: invokevirtual #1144               // Method scala/collection/immutable/LazyList$.iterableFactory:()Lscala/collection/Factory;
      14: invokevirtual #1082               // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      17: getstatic     #375                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      20: invokevirtual #1085               // Method scala/Predef$.$conforms:()Lscala/Function1;
      23: invokevirtual #1089               // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      26: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      29: areturn

  private final scalaz.Zipper ZipperArbitrary$$anonfun$4(scala.collection.immutable.LazyList, java.lang.Object, scala.collection.immutable.LazyList);
    Code:
       0: getstatic     #4087               // Field scalaz/Zipper$.MODULE$:Lscalaz/Zipper$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokevirtual #4090               // Method scalaz/Zipper$.zipper:(Lscala/collection/immutable/LazyList;Ljava/lang/Object;Lscala/collection/immutable/LazyList;)Lscalaz/Zipper;
       9: areturn

  private final scalaz.Kleisli KleisliArbitrary$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #4096               // Field scalaz/Kleisli$.MODULE$:Lscalaz/Kleisli$;
       3: aload_1
       4: invokevirtual #4098               // Method scalaz/Kleisli$.apply:(Lscala/Function1;)Lscalaz/Kleisli;
       7: areturn

  private final scalaz.Cokleisli CokleisliArbitrary$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #4104               // Field scalaz/Cokleisli$.MODULE$:Lscalaz/Cokleisli$;
       3: aload_1
       4: invokevirtual #4106               // Method scalaz/Cokleisli$.apply:(Lscala/Function1;)Lscalaz/Cokleisli;
       7: areturn

  private final scalaz.Coproduct CoproductArbitrary$$anonfun$1(scalaz.$bslash$div);
    Code:
       0: getstatic     #4112               // Field scalaz/Coproduct$.MODULE$:Lscalaz/Coproduct$;
       3: aload_1
       4: invokevirtual #4114               // Method scalaz/Coproduct$.apply:(Lscalaz/$bslash$div;)Lscalaz/Coproduct;
       7: areturn

  private final scalaz.WriterT writerTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4120               // Field scalaz/WriterT$.MODULE$:Lscalaz/WriterT$;
       3: aload_1
       4: invokevirtual #4122               // Method scalaz/WriterT$.apply:(Ljava/lang/Object;)Lscalaz/WriterT;
       7: areturn

  private final scalaz.UnwriterT unwriterTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4128               // Field scalaz/UnwriterT$.MODULE$:Lscalaz/UnwriterT$;
       3: aload_1
       4: invokevirtual #4130               // Method scalaz/UnwriterT$.apply:(Ljava/lang/Object;)Lscalaz/UnwriterT;
       7: areturn

  private final scalaz.OptionT optionTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4136               // Field scalaz/OptionT$.MODULE$:Lscalaz/OptionT$;
       3: aload_1
       4: invokevirtual #4138               // Method scalaz/OptionT$.apply:(Ljava/lang/Object;)Lscalaz/OptionT;
       7: areturn

  private final scalaz.MaybeT maybeTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4144               // Field scalaz/MaybeT$.MODULE$:Lscalaz/MaybeT$;
       3: aload_1
       4: invokevirtual #4146               // Method scalaz/MaybeT$.apply:(Ljava/lang/Object;)Lscalaz/MaybeT;
       7: areturn

  private final scalaz.LazyOption lazyOptionArb$$anonfun$1(scala.Option);
    Code:
       0: getstatic     #4152               // Field scalaz/LazyOption$.MODULE$:Lscalaz/LazyOption$;
       3: aload_1
       4: invokevirtual #4154               // Method scalaz/LazyOption$.fromOption:(Lscala/Option;)Lscalaz/LazyOption;
       7: areturn

  private final scalaz.LazyOptionT lazyOptionTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4160               // Field scalaz/LazyOptionT$.MODULE$:Lscalaz/LazyOptionT$;
       3: aload_1
       4: invokevirtual #4162               // Method scalaz/LazyOptionT$.apply:(Ljava/lang/Object;)Lscalaz/LazyOptionT;
       7: areturn

  private final java.lang.Object lazyEitherArb$$anonfun$2$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyEitherArb$$anonfun$3$$anonfun$2(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.LazyEither lazyEitherArb$$anonfun$1(scala.util.Either);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: instanceof    #3690               // class scala/util/Left
       6: ifeq          43
       9: aload_2
      10: checkcast     #3690               // class scala/util/Left
      13: invokevirtual #3691               // Method scala/util/Left.value:()Ljava/lang/Object;
      16: astore_3
      17: getstatic     #4171               // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
      20: invokevirtual #4175               // Method scalaz/LazyEither$.lazyLeft:()Z
      23: istore        4
      25: getstatic     #4178               // Field scalaz/LazyEither$LazyLeftConstruct$.MODULE$:Lscalaz/LazyEither$LazyLeftConstruct$;
      28: iload         4
      30: aload_0
      31: aload_3
      32: invokedynamic #4182,  0           // InvokeDynamic #256:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      37: invokevirtual #4186               // Method scalaz/LazyEither$LazyLeftConstruct$.apply$extension:(ZLscala/Function0;)Lscalaz/LazyEither;
      40: goto          95
      43: aload_2
      44: instanceof    #3693               // class scala/util/Right
      47: ifeq          86
      50: aload_2
      51: checkcast     #3693               // class scala/util/Right
      54: invokevirtual #3694               // Method scala/util/Right.value:()Ljava/lang/Object;
      57: astore        5
      59: getstatic     #4171               // Field scalaz/LazyEither$.MODULE$:Lscalaz/LazyEither$;
      62: invokevirtual #4189               // Method scalaz/LazyEither$.lazyRight:()Z
      65: istore        6
      67: getstatic     #4192               // Field scalaz/LazyEither$LazyRightConstruct$.MODULE$:Lscalaz/LazyEither$LazyRightConstruct$;
      70: iload         6
      72: aload_0
      73: aload         5
      75: invokedynamic #4196,  0           // InvokeDynamic #257:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      80: invokevirtual #4197               // Method scalaz/LazyEither$LazyRightConstruct$.apply$extension:(ZLscala/Function0;)Lscalaz/LazyEither;
      83: goto          95
      86: new           #2176               // class scala/MatchError
      89: dup
      90: aload_2
      91: invokespecial #2179               // Method scala/MatchError."<init>":(Ljava/lang/Object;)V
      94: athrow
      95: areturn

  private final scalaz.LazyEitherT lazyEitherTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4203               // Field scalaz/LazyEitherT$.MODULE$:Lscalaz/LazyEitherT$;
       3: aload_1
       4: invokevirtual #4205               // Method scalaz/LazyEitherT$.apply:(Ljava/lang/Object;)Lscalaz/LazyEitherT;
       7: areturn

  private final scalaz.IdT idTArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4210               // Field scalaz/IdT$.MODULE$:Lscalaz/IdT$;
       3: aload_1
       4: invokevirtual #4212               // Method scalaz/IdT$.apply:(Ljava/lang/Object;)Lscalaz/IdT;
       7: areturn

  private final scalaz.IndexedReaderWriterStateT indexedReaderWriterStateTArb$$anonfun$1(scala.Function2);
    Code:
       0: getstatic     #4218               // Field scalaz/IndexedReaderWriterStateT$.MODULE$:Lscalaz/IndexedReaderWriterStateT$;
       3: aload_1
       4: invokevirtual #4220               // Method scalaz/IndexedReaderWriterStateT$.apply:(Lscala/Function2;)Lscalaz/IndexedReaderWriterStateT;
       7: areturn

  private final scalaz.TracedT tracedTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4227               // Field scalaz/TracedT$.MODULE$:Lscalaz/TracedT$;
       3: aload_1
       4: invokevirtual #4229               // Method scalaz/TracedT$.apply:(Ljava/lang/Object;)Lscalaz/TracedT;
       7: areturn

  private final scalaz.IndexedContsT indexedContsTArb$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #4235               // Field scalaz/IndexedContsT$.MODULE$:Lscalaz/IndexedContsT$;
       3: aload_1
       4: invokevirtual #4237               // Method scalaz/IndexedContsT$.apply:(Lscala/Function1;)Lscalaz/IndexedContsT;
       7: areturn

  private final scalaz.IndexedStateT indexedStateTArb$$anonfun$1(scala.Function1);
    Code:
       0: getstatic     #4243               // Field scalaz/IndexedStateT$.MODULE$:Lscalaz/IndexedStateT$;
       3: aload_1
       4: invokevirtual #4244               // Method scalaz/IndexedStateT$.apply:(Lscala/Function1;)Lscalaz/IndexedStateT;
       7: areturn

  private final scalaz.EitherT eitherTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4250               // Field scalaz/EitherT$.MODULE$:Lscalaz/EitherT$;
       3: aload_1
       4: invokevirtual #4252               // Method scalaz/EitherT$.apply:(Ljava/lang/Object;)Lscalaz/EitherT;
       7: areturn

  private final scalaz.TheseT theseTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4258               // Field scalaz/TheseT$.MODULE$:Lscalaz/TheseT$;
       3: aload_1
       4: invokevirtual #4260               // Method scalaz/TheseT$.apply:(Ljava/lang/Object;)Lscalaz/TheseT;
       7: areturn

  private final scalaz.Const constArbitrary$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4266               // Field scalaz/Const$.MODULE$:Lscalaz/Const$;
       3: aload_1
       4: invokevirtual #4268               // Method scalaz/Const$.apply:(Ljava/lang/Object;)Lscalaz/Const;
       7: areturn

  private final scalaz.DList dlistArbitrary$$anonfun$1(scala.collection.immutable.List);
    Code:
       0: getstatic     #4273               // Field scalaz/DList$.MODULE$:Lscalaz/DList$;
       3: aload_1
       4: invokevirtual #4276               // Method scalaz/DList$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/DList;
       7: areturn

  private final scalaz.IList ilistArbitrary$$anonfun$1(scala.collection.immutable.List);
    Code:
       0: getstatic     #1357               // Field scalaz/IList$.MODULE$:Lscalaz/IList$;
       3: aload_1
       4: invokevirtual #4278               // Method scalaz/IList$.fromList:(Lscala/collection/immutable/List;)Lscalaz/IList;
       7: areturn

  private final scalaz.Dequeue dequeueArbitrary$$anonfun$1(scala.collection.immutable.List);
    Code:
       0: getstatic     #2390               // Field scalaz/Dequeue$.MODULE$:Lscalaz/Dequeue$;
       3: aload_1
       4: invokevirtual #4281               // Method scalaz/Dequeue$.apply:(Lscala/collection/immutable/Seq;)Lscalaz/Dequeue;
       7: areturn

  private final org.scalacheck.Arbitrary lazyTuple2Arbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple2Arbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final java.lang.Object lazyTuple2Arbitrary$$anonfun$4$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple2Arbitrary$$anonfun$5$$anonfun$2(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.LazyTuple2 lazyTuple2Arbitrary$$anonfun$3(java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #4294               // Field scalaz/LazyTuple2$.MODULE$:Lscalaz/LazyTuple2$;
       3: aload_0
       4: aload_1
       5: invokedynamic #4298,  0           // InvokeDynamic #258:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: aload_0
      11: aload_2
      12: invokedynamic #4302,  0           // InvokeDynamic #259:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      17: invokevirtual #4305               // Method scalaz/LazyTuple2$.apply:(Lscala/Function0;Lscala/Function0;)Lscalaz/LazyTuple2;
      20: areturn

  private final org.scalacheck.Arbitrary lazyTuple3Arbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple3Arbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple3Arbitrary$$anonfun$3(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final java.lang.Object lazyTuple3Arbitrary$$anonfun$5$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple3Arbitrary$$anonfun$6$$anonfun$2(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple3Arbitrary$$anonfun$7$$anonfun$3(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.LazyTuple3 lazyTuple3Arbitrary$$anonfun$4(java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #4322               // Field scalaz/LazyTuple3$.MODULE$:Lscalaz/LazyTuple3$;
       3: aload_0
       4: aload_1
       5: invokedynamic #4326,  0           // InvokeDynamic #260:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: aload_0
      11: aload_2
      12: invokedynamic #4330,  0           // InvokeDynamic #261:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      17: aload_0
      18: aload_3
      19: invokedynamic #4334,  0           // InvokeDynamic #262:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      24: invokevirtual #4337               // Method scalaz/LazyTuple3$.apply:(Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscalaz/LazyTuple3;
      27: areturn

  private final org.scalacheck.Arbitrary lazyTuple4Arbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple4Arbitrary$$anonfun$2(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple4Arbitrary$$anonfun$3(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final org.scalacheck.Arbitrary lazyTuple4Arbitrary$$anonfun$4(org.scalacheck.Arbitrary);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #222                // Method arb:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
       5: areturn

  private final java.lang.Object lazyTuple4Arbitrary$$anonfun$6$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple4Arbitrary$$anonfun$7$$anonfun$2(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple4Arbitrary$$anonfun$8$$anonfun$3(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final java.lang.Object lazyTuple4Arbitrary$$anonfun$9$$anonfun$4(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.LazyTuple4 lazyTuple4Arbitrary$$anonfun$5(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: getstatic     #4358               // Field scalaz/LazyTuple4$.MODULE$:Lscalaz/LazyTuple4$;
       3: aload_0
       4: aload_1
       5: invokedynamic #4362,  0           // InvokeDynamic #263:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: aload_0
      11: aload_2
      12: invokedynamic #4366,  0           // InvokeDynamic #264:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      17: aload_0
      18: aload_3
      19: invokedynamic #4370,  0           // InvokeDynamic #265:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      24: aload_0
      25: aload         4
      27: invokedynamic #4374,  0           // InvokeDynamic #266:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      32: invokevirtual #4377               // Method scalaz/LazyTuple4$.apply:(Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;)Lscalaz/LazyTuple4;
      35: areturn

  private final scalaz.Heap heapArbitrary$$anonfun$1(scalaz.Order, scala.collection.immutable.List);
    Code:
       0: getstatic     #4383               // Field scalaz/Heap$.MODULE$:Lscalaz/Heap$;
       3: aload_2
       4: getstatic     #1373               // Field scalaz/Scalaz$.MODULE$:Lscalaz/Scalaz$;
       7: invokevirtual #4386               // Method scalaz/Scalaz$.listInstance:()Lscalaz/Align;
      10: checkcast     #581                // class scalaz/Foldable
      13: aload_1
      14: invokevirtual #4390               // Method scalaz/Heap$.fromData:(Ljava/lang/Object;Lscalaz/Foldable;Lscalaz/Order;)Lscalaz/Heap;
      17: areturn

  private final scalaz.IndexedStoreT indexedStoreTArb$$anonfun$1(scala.Tuple2);
    Code:
       0: getstatic     #4396               // Field scalaz/IndexedStoreT$.MODULE$:Lscalaz/IndexedStoreT$;
       3: aload_1
       4: invokevirtual #4398               // Method scalaz/IndexedStoreT$.apply:(Lscala/Tuple2;)Lscalaz/IndexedStoreT;
       7: areturn

  private final scalaz.ListT listTArb$$anonfun$1(java.lang.Object);
    Code:
       0: getstatic     #4404               // Field scalaz/ListT$.MODULE$:Lscalaz/ListT$;
       3: aload_1
       4: invokevirtual #4407               // Method scalaz/ListT$.fromIList:(Ljava/lang/Object;)Lscalaz/ListT;
       7: areturn

  private final scalaz.StreamT streamTArb$$anonfun$1(scalaz.Applicative, java.lang.Object);
    Code:
       0: getstatic     #4414               // Field scalaz/StreamT$.MODULE$:Lscalaz/StreamT$;
       3: aload_2
       4: aload_1
       5: invokevirtual #4417               // Method scalaz/StreamT$.fromLazyList:(Ljava/lang/Object;Lscalaz/Applicative;)Lscalaz/StreamT;
       8: areturn

  private final scalaz.CaseInsensitive CaseInsensitiveArbitrary$$anonfun$1(scalaz.FoldCase, java.lang.Object);
    Code:
       0: getstatic     #4424               // Field scalaz/CaseInsensitive$.MODULE$:Lscalaz/CaseInsensitive$;
       3: aload_2
       4: aload_1
       5: invokevirtual #4427               // Method scalaz/CaseInsensitive$.apply:(Ljava/lang/Object;Lscalaz/FoldCase;)Lscalaz/CaseInsensitive;
       8: areturn

  private final scalaz.Diev dievArbitrary$$anonfun$2$$anonfun$1(scalaz.Diev, scala.collection.immutable.List);
    Code:
       0: aload_2
       1: astore_3
       2: aload_3
       3: instanceof    #4433               // class scala/collection/immutable/$colon$colon
       6: ifeq          149
       9: aload_3
      10: checkcast     #4433               // class scala/collection/immutable/$colon$colon
      13: astore        4
      15: aload         4
      17: invokevirtual #4434               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      20: astore        5
      22: aload         4
      24: invokevirtual #4437               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      27: astore        6
      29: aload         5
      31: astore        7
      33: aload         6
      35: instanceof    #4433               // class scala/collection/immutable/$colon$colon
      38: ifeq          110
      41: aload         6
      43: checkcast     #4433               // class scala/collection/immutable/$colon$colon
      46: astore        8
      48: aload         8
      50: invokevirtual #4437               // Method scala/collection/immutable/$colon$colon.next$access$1:()Lscala/collection/immutable/List;
      53: astore        9
      55: aload         8
      57: invokevirtual #4434               // Method scala/collection/immutable/$colon$colon.head:()Ljava/lang/Object;
      60: astore        10
      62: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
      65: invokevirtual #4441               // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
      68: aload         9
      70: astore        11
      72: dup
      73: ifnonnull     85
      76: pop
      77: aload         11
      79: ifnull        93
      82: goto          110
      85: aload         11
      87: invokevirtual #2168               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      90: ifeq          110
      93: aload_1
      94: getstatic     #2294               // Field scala/Tuple2$.MODULE$:Lscala/Tuple2$;
      97: aload         7
      99: aload         10
     101: invokevirtual #2297               // Method scala/Tuple2$.apply:(Ljava/lang/Object;Ljava/lang/Object;)Lscala/Tuple2;
     104: invokevirtual #4445               // Method scalaz/Diev.$plus:(Lscala/Tuple2;)Lscalaz/Diev;
     107: goto          162
     110: aload         5
     112: astore        12
     114: getstatic     #3415               // Field scala/package$.MODULE$:Lscala/package$;
     117: invokevirtual #4441               // Method scala/package$.Nil:()Lscala/collection/immutable/Nil$;
     120: aload         6
     122: astore        13
     124: dup
     125: ifnonnull     137
     128: pop
     129: aload         13
     131: ifnull        145
     134: goto          149
     137: aload         13
     139: invokevirtual #2168               // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     142: ifeq          149
     145: aload_1
     146: goto          162
     149: getstatic     #4450               // Field scala/sys/package$.MODULE$:Lscala/sys/package$;
     152: ldc_w         #4452               // String Unexpected amount of items in paired list.
     155: invokevirtual #4456               // Method scala/sys/package$.error:(Ljava/lang/String;)Lscala/runtime/Nothing$;
     158: athrow
     159: nop
     160: nop
     161: athrow
     162: areturn

  private final scalaz.Diev dievArbitrary$$anonfun$1(scalaz.Enum, scala.collection.immutable.List);
    Code:
       0: aload_2
       1: iconst_2
       2: invokevirtual #4467               // Method scala/collection/immutable/List.grouped:(I)Lscala/collection/Iterator;
       5: getstatic     #4472               // Field scalaz/Diev$.MODULE$:Lscalaz/Diev$;
       8: aload_1
       9: invokevirtual #4475               // Method scalaz/Diev$.empty:(Lscalaz/Enum;)Lscalaz/Diev;
      12: aload_0
      13: invokedynamic #4480,  0           // InvokeDynamic #267:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function2;
      18: invokeinterface #4486,  3         // InterfaceMethod scala/collection/Iterator.foldLeft:(Ljava/lang/Object;Lscala/Function2;)Ljava/lang/Object;
      23: checkcast     #2418               // class scalaz/Diev
      26: areturn

  private final java.lang.Object iterateeInputArbitrary$$anonfun$2$$anonfun$1$$anonfun$1(java.lang.Object);
    Code:
       0: aload_1
       1: areturn

  private final scalaz.iteratee.Input iterateeInputArbitrary$$anonfun$3$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #4496               // Field scalaz/iteratee/Input$.MODULE$:Lscalaz/iteratee/Input$;
       3: aload_0
       4: aload_1
       5: invokedynamic #4500,  0           // InvokeDynamic #268:apply:(Lscalaz/scalacheck/ScalazArbitrary$;Ljava/lang/Object;)Lscala/Function0;
      10: invokevirtual #4504               // Method scalaz/iteratee/Input$.elInput:(Lscala/Function0;)Lscalaz/iteratee/Input;
      13: areturn

  private final org.scalacheck.Gen iterateeInputArbitrary$$anonfun$1(org.scalacheck.Arbitrary);
    Code:
       0: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       3: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
       6: getstatic     #4496               // Field scalaz/iteratee/Input$.MODULE$:Lscalaz/iteratee/Input$;
       9: invokevirtual #4509               // Method scalaz/iteratee/Input$.emptyInput:()Lscalaz/iteratee/Input;
      12: invokevirtual #2189               // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      15: getstatic     #1362               // Field org/scalacheck/Gen$.MODULE$:Lorg/scalacheck/Gen$;
      18: getstatic     #4496               // Field scalaz/iteratee/Input$.MODULE$:Lscalaz/iteratee/Input$;
      21: invokevirtual #4512               // Method scalaz/iteratee/Input$.eofInput:()Lscalaz/iteratee/Input;
      24: invokevirtual #2189               // Method org/scalacheck/Gen$.const:(Ljava/lang/Object;)Lorg/scalacheck/Gen;
      27: getstatic     #2249               // Field scala/runtime/ScalaRunTime$.MODULE$:Lscala/runtime/ScalaRunTime$;
      30: iconst_1
      31: anewarray     #11                 // class org/scalacheck/Gen
      34: dup
      35: iconst_0
      36: getstatic     #156                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      39: aload_1
      40: invokevirtual #2818               // Method org/scalacheck/Arbitrary$.arbitrary:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Gen;
      43: aload_0
      44: invokedynamic #4517,  0           // InvokeDynamic #269:apply:(Lscalaz/scalacheck/ScalazArbitrary$;)Lscala/Function1;
      49: invokevirtual #1454               // Method org/scalacheck/Gen.map:(Lscala/Function1;)Lorg/scalacheck/Gen;
      52: aastore
      53: invokevirtual #2869               // Method scala/runtime/ScalaRunTime$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/immutable/ArraySeq;
      56: invokevirtual #2872               // Method org/scalacheck/Gen$.oneOf:(Lorg/scalacheck/Gen;Lorg/scalacheck/Gen;Lscala/collection/immutable/Seq;)Lorg/scalacheck/Gen;
      59: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #4531,  0           // InvokeDynamic #270:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
       7: aload_0
       8: invokedynamic #4532,  0           // InvokeDynamic #271:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
      13: areturn
    Exception table:
       from    to  target type
           0     7     7   Class java/lang/IllegalArgumentException
}
