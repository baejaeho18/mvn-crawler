Compiled from "ScalaCheckBinding.scala"
final class scalaz.scalacheck.ScalaCheckBinding$$anon$3 implements scalaz.Divisible<org.scalacheck.Cogen> {
  private scalaz.syntax.InvariantFunctorSyntax invariantFunctorSyntax;

  private scalaz.syntax.ContravariantSyntax contravariantSyntax;

  private scalaz.syntax.DivideSyntax divideSyntax;

  private scalaz.syntax.InvariantApplicativeSyntax invariantApplicativeSyntax;

  private scalaz.syntax.DivisibleSyntax divisibleSyntax;

  public scalaz.scalacheck.ScalaCheckBinding$$anon$3();
    Code:
       0: aload_0
       1: invokespecial #52                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #56                 // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: aload_0
       9: invokestatic  #59                 // InterfaceMethod scalaz/Contravariant.$init$:(Lscalaz/Contravariant;)V
      12: aload_0
      13: invokestatic  #62                 // InterfaceMethod scalaz/Divide.$init$:(Lscalaz/Divide;)V
      16: aload_0
      17: invokestatic  #65                 // InterfaceMethod scalaz/InvariantApplicative.$init$:(Lscalaz/InvariantApplicative;)V
      20: aload_0
      21: invokestatic  #68                 // InterfaceMethod scalaz/Divisible.$init$:(Lscalaz/Divisible;)V
      24: invokestatic  #73                 // Method scala/runtime/Statics.releaseFence:()V
      27: return

  public scalaz.syntax.InvariantFunctorSyntax invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #78                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #78                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #89                 // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #98                 // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor$InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #105                // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public scalaz.syntax.ContravariantSyntax contravariantSyntax();
    Code:
       0: aload_0
       1: getfield      #108                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       4: areturn

  public void scalaz$Contravariant$_setter_$contravariantSyntax_$eq(scalaz.syntax.ContravariantSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #108                // Field contravariantSyntax:Lscalaz/syntax/ContravariantSyntax;
       5: return

  public java.lang.Object narrow(java.lang.Object, scalaz.Liskov);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #118                // InterfaceMethod scalaz/Contravariant.narrow$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscalaz/Liskov;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #127                // InterfaceMethod scalaz/Contravariant.xmap$:(Lscalaz/Contravariant;Ljava/lang/Object;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public scalaz.Functor compose(scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #135                // InterfaceMethod scalaz/Contravariant.compose$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Functor;
       5: areturn

  public scalaz.Contravariant icompose(scalaz.Functor);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #142                // InterfaceMethod scalaz/Contravariant.icompose$:(Lscalaz/Contravariant;Lscalaz/Functor;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant product(scalaz.Contravariant);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #149                // InterfaceMethod scalaz/Contravariant.product$:(Lscalaz/Contravariant;Lscalaz/Contravariant;)Lscalaz/Contravariant;
       5: areturn

  public scalaz.Contravariant$ContravariantLaw contravariantLaw();
    Code:
       0: aload_0
       1: invokestatic  #155                // InterfaceMethod scalaz/Contravariant.contravariantLaw$:(Lscalaz/Contravariant;)Lscalaz/Contravariant$ContravariantLaw;
       4: areturn

  public scalaz.syntax.DivideSyntax divideSyntax();
    Code:
       0: aload_0
       1: getfield      #158                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       4: areturn

  public void scalaz$Divide$_setter_$divideSyntax_$eq(scalaz.syntax.DivideSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #158                // Field divideSyntax:Lscalaz/syntax/DivideSyntax;
       5: return

  public java.lang.Object divide(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #167                // InterfaceMethod scalaz/Divide.divide$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object divide1(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #175                // InterfaceMethod scalaz/Divide.divide1$:(Lscalaz/Divide;Ljava/lang/Object;Lscala/Function1;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object divide3(scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #183                // InterfaceMethod scalaz/Divide.divide3$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object divide4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #190                // InterfaceMethod scalaz/Divide.divide4$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object tuple2(scala.Function0, scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #196                // InterfaceMethod scalaz/Divide.tuple2$:(Lscalaz/Divide;Lscala/Function0;Lscala/Function0;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dividing1(scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #202                // InterfaceMethod scalaz/Divide.dividing1$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object dividing2(scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #208                // InterfaceMethod scalaz/Divide.dividing2$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object dividing3(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #214                // InterfaceMethod scalaz/Divide.dividing3$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object dividing4(scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #220                // InterfaceMethod scalaz/Divide.dividing4$:(Lscalaz/Divide;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public scalaz.Divide$DivideLaw divideLaw();
    Code:
       0: aload_0
       1: invokestatic  #226                // InterfaceMethod scalaz/Divide.divideLaw$:(Lscalaz/Divide;)Lscalaz/Divide$DivideLaw;
       4: areturn

  public scalaz.syntax.InvariantApplicativeSyntax invariantApplicativeSyntax();
    Code:
       0: aload_0
       1: getfield      #229                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       4: areturn

  public void scalaz$InvariantApplicative$_setter_$invariantApplicativeSyntax_$eq(scalaz.syntax.InvariantApplicativeSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #229                // Field invariantApplicativeSyntax:Lscalaz/syntax/InvariantApplicativeSyntax;
       5: return

  public java.lang.Object xderiving0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #238                // InterfaceMethod scalaz/InvariantApplicative.xderiving0$:(Lscalaz/InvariantApplicative;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xderiving1(scala.Function1, scala.Function1, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #244                // InterfaceMethod scalaz/InvariantApplicative.xderiving1$:(Lscalaz/InvariantApplicative;Lscala/Function1;Lscala/Function1;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xderiving2(scala.Function2, scala.Function1, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #250                // InterfaceMethod scalaz/InvariantApplicative.xderiving2$:(Lscalaz/InvariantApplicative;Lscala/Function2;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xderiving3(scala.Function3, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #257                // InterfaceMethod scalaz/InvariantApplicative.xderiving3$:(Lscalaz/InvariantApplicative;Lscala/Function3;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xderiving4(scala.Function4, scala.Function1, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #264                // InterfaceMethod scalaz/InvariantApplicative.xderiving4$:(Lscalaz/InvariantApplicative;Lscala/Function4;Lscala/Function1;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn

  public scalaz.syntax.DivisibleSyntax divisibleSyntax();
    Code:
       0: aload_0
       1: getfield      #268                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       4: areturn

  public void scalaz$Divisible$_setter_$divisibleSyntax_$eq(scalaz.syntax.DivisibleSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #268                // Field divisibleSyntax:Lscalaz/syntax/DivisibleSyntax;
       5: return

  public java.lang.Object xproduct0(scala.Function0);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #275                // InterfaceMethod scalaz/Divisible.xproduct0$:(Lscalaz/Divisible;Lscala/Function0;)Ljava/lang/Object;
       5: areturn

  public java.lang.Object xproduct1(scala.Function0, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokestatic  #281                // InterfaceMethod scalaz/Divisible.xproduct1$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function1;Lscala/Function1;)Ljava/lang/Object;
       7: areturn

  public java.lang.Object xproduct2(scala.Function0, scala.Function0, scala.Function2, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokestatic  #287                // InterfaceMethod scalaz/Divisible.xproduct2$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function2;Lscala/Function1;)Ljava/lang/Object;
       9: areturn

  public java.lang.Object xproduct3(scala.Function0, scala.Function0, scala.Function0, scala.Function3, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokestatic  #293                // InterfaceMethod scalaz/Divisible.xproduct3$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function3;Lscala/Function1;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object xproduct4(scala.Function0, scala.Function0, scala.Function0, scala.Function0, scala.Function4, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: aload         6
      10: invokestatic  #299                // InterfaceMethod scalaz/Divisible.xproduct4$:(Lscalaz/Divisible;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function0;Lscala/Function4;Lscala/Function1;)Ljava/lang/Object;
      13: areturn

  public scalaz.Divisible$DivisibleLaw divisibleLaw();
    Code:
       0: aload_0
       1: invokestatic  #305                // InterfaceMethod scalaz/Divisible.divisibleLaw$:(Lscalaz/Divisible;)Lscalaz/Divisible$DivisibleLaw;
       4: areturn

  public org.scalacheck.Cogen contramap(org.scalacheck.Cogen, scala.Function1);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #313,  2          // InterfaceMethod org/scalacheck/Cogen.contramap:(Lscala/Function1;)Lorg/scalacheck/Cogen;
       7: areturn

  public org.scalacheck.Cogen conquer();
    Code:
       0: getstatic     #322                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: invokedynamic #343,  0            // InvokeDynamic #0:apply:()Lscala/Function2;
       8: invokevirtual #346                // Method org/scalacheck/Cogen$.apply:(Lscala/Function2;)Lorg/scalacheck/Cogen;
      11: areturn

  public org.scalacheck.Cogen divide2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: getstatic     #322                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokedynamic #356,  0            // InvokeDynamic #1:apply:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lscala/Function2;
      11: invokevirtual #346                // Method org/scalacheck/Cogen$.apply:(Lscala/Function2;)Lorg/scalacheck/Cogen;
      14: areturn

  public java.lang.Object contramap(java.lang.Object, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #310                // class org/scalacheck/Cogen
       5: aload_2
       6: invokevirtual #358                // Method contramap:(Lorg/scalacheck/Cogen;Lscala/Function1;)Lorg/scalacheck/Cogen;
       9: areturn

  public java.lang.Object conquer();
    Code:
       0: aload_0
       1: invokevirtual #361                // Method conquer:()Lorg/scalacheck/Cogen;
       4: areturn

  public java.lang.Object divide2(scala.Function0, scala.Function0, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #363                // Method divide2:(Lscala/Function0;Lscala/Function0;Lscala/Function1;)Lorg/scalacheck/Cogen;
       7: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #375,  0            // InvokeDynamic #2:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
