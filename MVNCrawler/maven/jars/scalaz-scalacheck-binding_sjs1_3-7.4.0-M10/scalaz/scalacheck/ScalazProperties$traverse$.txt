Compiled from "ScalazProperties.scala"
public final class scalaz.scalacheck.ScalazProperties$traverse$ implements java.io.Serializable {
  public static final scalaz.scalacheck.ScalazProperties$traverse$ MODULE$;

  public scalaz.scalacheck.ScalazProperties$traverse$();
    Code:
       0: aload_0
       1: invokespecial #32                 // Method java/lang/Object."<init>":()V
       4: return

  public static {};
    Code:
       0: new           #2                  // class scalaz/scalacheck/ScalazProperties$traverse$
       3: dup
       4: invokespecial #35                 // Method "<init>":()V
       7: putstatic     #37                 // Field MODULE$:Lscalaz/scalacheck/ScalazProperties$traverse$;
      10: return

  private java.lang.Object writeReplace();
    Code:
       0: new           #41                 // class scala/runtime/ModuleSerializationProxy
       3: dup
       4: ldc           #2                  // class scalaz/scalacheck/ScalazProperties$traverse$
       6: invokespecial #44                 // Method scala/runtime/ModuleSerializationProxy."<init>":(Ljava/lang/Class;)V
       9: areturn

  public <F, X, Y> org.scalacheck.Prop identityTraverse(scalaz.Traverse<F>, org.scalacheck.Arbitrary<java.lang.Object>, org.scalacheck.Arbitrary<scala.Function1<X, Y>>, scalaz.Equal<java.lang.Object>);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: aload_1
       4: invokeinterface #60,  1           // InterfaceMethod scalaz/Traverse.traverseLaw:()Lscalaz/Traverse$TraverseLaw;
       9: astore        5
      11: aload_0
      12: aload         4
      14: aload         5
      16: invokedynamic #82,  0             // InvokeDynamic #0:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lscalaz/Equal;Lscalaz/Traverse$TraverseLaw;)Lscala/Function2;
      21: aload_0
      22: invokedynamic #93,  0             // InvokeDynamic #1:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      27: aload_2
      28: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      31: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      34: aload_0
      35: invokedynamic #109,  0            // InvokeDynamic #2:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      40: aload_3
      41: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      44: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      47: aload_0
      48: invokedynamic #116,  0            // InvokeDynamic #3:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      53: invokevirtual #120                // Method org/scalacheck/Prop$.forAll:(Lscala/Function2;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;)Lorg/scalacheck/Prop;
      56: areturn

  public <F, G, X> org.scalacheck.Prop purity(scalaz.Traverse<F>, org.scalacheck.Arbitrary<java.lang.Object>, scalaz.Applicative<G>, scalaz.Equal<java.lang.Object>);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: aload_1
       4: invokeinterface #60,  1           // InterfaceMethod scalaz/Traverse.traverseLaw:()Lscalaz/Traverse$TraverseLaw;
       9: astore        5
      11: aload_0
      12: aload_3
      13: aload         4
      15: aload         5
      17: invokedynamic #137,  0            // InvokeDynamic #4:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lscalaz/Applicative;Lscalaz/Equal;Lscalaz/Traverse$TraverseLaw;)Lscala/Function1;
      22: aload_0
      23: invokedynamic #142,  0            // InvokeDynamic #5:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      28: aload_2
      29: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      32: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      35: aload_0
      36: invokedynamic #147,  0            // InvokeDynamic #6:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      41: invokevirtual #150                // Method org/scalacheck/Prop$.forAll:(Lscala/Function1;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;)Lorg/scalacheck/Prop;
      44: areturn

  public <F, N, M, A, B, C> org.scalacheck.Prop sequentialFusion(org.scalacheck.Arbitrary<java.lang.Object>, org.scalacheck.Arbitrary<scala.Function1<A, java.lang.Object>>, org.scalacheck.Arbitrary<scala.Function1<B, java.lang.Object>>, scalaz.Traverse<F>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<java.lang.Object>);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: aload         4
       5: invokeinterface #60,  1           // InterfaceMethod scalaz/Traverse.traverseLaw:()Lscalaz/Traverse$TraverseLaw;
      10: astore        8
      12: aload_0
      13: aload         5
      15: aload         6
      17: aload         7
      19: aload         8
      21: invokedynamic #173,  0            // InvokeDynamic #7:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;Lscalaz/Traverse$TraverseLaw;)Lscala/Function3;
      26: aload_0
      27: invokedynamic #178,  0            // InvokeDynamic #8:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      32: aload_1
      33: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      36: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      39: aload_0
      40: invokedynamic #183,  0            // InvokeDynamic #9:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      45: aload_2
      46: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      49: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      52: aload_0
      53: invokedynamic #188,  0            // InvokeDynamic #10:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      58: aload_3
      59: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      62: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      65: aload_0
      66: invokedynamic #193,  0            // InvokeDynamic #11:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      71: invokevirtual #196                // Method org/scalacheck/Prop$.forAll:(Lscala/Function3;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;)Lorg/scalacheck/Prop;
      74: areturn

  public <F, N, M, A> org.scalacheck.Prop naturality(scalaz.NaturalTransformation<M, N>, org.scalacheck.Arbitrary<java.lang.Object>, scalaz.Traverse<F>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<java.lang.Object>);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: aload_3
       4: invokeinterface #60,  1           // InterfaceMethod scalaz/Traverse.traverseLaw:()Lscalaz/Traverse$TraverseLaw;
       9: astore        7
      11: aload_0
      12: aload_1
      13: aload         4
      15: aload         5
      17: aload         6
      19: aload         7
      21: invokedynamic #210,  0            // InvokeDynamic #12:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lscalaz/NaturalTransformation;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;Lscalaz/Traverse$TraverseLaw;)Lscala/Function1;
      26: aload_0
      27: invokedynamic #215,  0            // InvokeDynamic #13:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      32: aload_2
      33: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      36: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      39: aload_0
      40: invokedynamic #220,  0            // InvokeDynamic #14:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      45: invokevirtual #150                // Method org/scalacheck/Prop$.forAll:(Lscala/Function1;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;)Lorg/scalacheck/Prop;
      48: areturn

  public <F, N, M, A, B> org.scalacheck.Prop parallelFusion(org.scalacheck.Arbitrary<java.lang.Object>, org.scalacheck.Arbitrary<scala.Function1<A, java.lang.Object>>, org.scalacheck.Arbitrary<scala.Function1<A, java.lang.Object>>, scalaz.Traverse<F>, scalaz.Applicative<N>, scalaz.Applicative<M>, scalaz.Equal<scala.Tuple2<java.lang.Object, java.lang.Object>>);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: aload         4
       5: invokeinterface #60,  1           // InterfaceMethod scalaz/Traverse.traverseLaw:()Lscalaz/Traverse$TraverseLaw;
      10: astore        8
      12: aload_0
      13: aload         5
      15: aload         6
      17: aload         7
      19: aload         8
      21: invokedynamic #229,  0            // InvokeDynamic #15:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;Lscalaz/Traverse$TraverseLaw;)Lscala/Function3;
      26: aload_0
      27: invokedynamic #234,  0            // InvokeDynamic #16:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      32: aload_1
      33: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      36: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      39: aload_0
      40: invokedynamic #239,  0            // InvokeDynamic #17:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      45: aload_2
      46: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      49: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      52: aload_0
      53: invokedynamic #244,  0            // InvokeDynamic #18:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      58: aload_3
      59: getstatic     #98                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
      62: invokevirtual #102                // Method org/scalacheck/Shrink$.shrinkAny:()Lorg/scalacheck/Shrink;
      65: aload_0
      66: invokedynamic #249,  0            // InvokeDynamic #19:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;)Lscala/Function1;
      71: invokevirtual #196                // Method org/scalacheck/Prop$.forAll:(Lscala/Function3;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Shrink;Lscala/Function1;)Lorg/scalacheck/Prop;
      74: areturn

  public <F> org.scalacheck.Properties laws(org.scalacheck.Arbitrary<java.lang.Object>, scalaz.Traverse<F>, scalaz.Equal<java.lang.Object>);
    Code:
       0: getstatic     #258                // Field scalaz/scalacheck/ScalazProperties$.MODULE$:Lscalaz/scalacheck/ScalazProperties$;
       3: ldc_w         #260                // String traverse
       6: aload_0
       7: aload_1
       8: aload_2
       9: aload_3
      10: invokedynamic #270,  0            // InvokeDynamic #20:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;)Lscala/Function1;
      15: invokevirtual #274                // Method scalaz/scalacheck/ScalazProperties$.scalaz$scalacheck$ScalazProperties$$$newProperties:(Ljava/lang/String;Lscala/Function1;)Lorg/scalacheck/Properties;
      18: areturn

  private final boolean identityTraverse$$anonfun$1(scalaz.Equal, scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1);
    Code:
       0: aload_2
       1: aload_3
       2: aload         4
       4: aload_1
       5: invokeinterface #279,  4          // InterfaceMethod scalaz/Traverse$TraverseLaw.identityTraverse:(Ljava/lang/Object;Lscala/Function1;Lscalaz/Equal;)Z
      10: ireturn

  private final org.scalacheck.Prop identityTraverse$$anonfun$4(boolean);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: iload_1
       4: invokevirtual #288                // Method org/scalacheck/Prop$.propBoolean:(Z)Lorg/scalacheck/Prop;
       7: areturn

  private org.scalacheck.Prop identityTraverse$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #296                // Method identityTraverse$$anonfun$4:(Z)Lorg/scalacheck/Prop;
       8: areturn

  private final org.scalacheck.util.Pretty identityTraverse$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.util.Pretty identityTraverse$$anonfun$3(scala.Function1);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final boolean purity$$anonfun$1(scalaz.Applicative, scalaz.Equal, scalaz.Traverse$TraverseLaw, java.lang.Object);
    Code:
       0: aload_3
       1: aload         4
       3: aload_1
       4: aload_2
       5: invokeinterface #311,  4          // InterfaceMethod scalaz/Traverse$TraverseLaw.purity:(Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Equal;)Z
      10: ireturn

  private final org.scalacheck.Prop purity$$anonfun$3(boolean);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: iload_1
       4: invokevirtual #288                // Method org/scalacheck/Prop$.propBoolean:(Z)Lorg/scalacheck/Prop;
       7: areturn

  private org.scalacheck.Prop purity$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #314                // Method purity$$anonfun$3:(Z)Lorg/scalacheck/Prop;
       8: areturn

  private final org.scalacheck.util.Pretty purity$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final boolean sequentialFusion$$anonfun$1(scalaz.Applicative, scalaz.Applicative, scalaz.Equal, scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload         4
       2: aload         5
       4: aload         6
       6: aload         7
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #321,  7          // InterfaceMethod scalaz/Traverse$TraverseLaw.sequentialFusion:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      16: ireturn

  private final org.scalacheck.Prop sequentialFusion$$anonfun$5(boolean);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: iload_1
       4: invokevirtual #288                // Method org/scalacheck/Prop$.propBoolean:(Z)Lorg/scalacheck/Prop;
       7: areturn

  private org.scalacheck.Prop sequentialFusion$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #324                // Method sequentialFusion$$anonfun$5:(Z)Lorg/scalacheck/Prop;
       8: areturn

  private final org.scalacheck.util.Pretty sequentialFusion$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.util.Pretty sequentialFusion$$anonfun$3(scala.Function1);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.util.Pretty sequentialFusion$$anonfun$4(scala.Function1);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final boolean naturality$$anonfun$1(scalaz.NaturalTransformation, scalaz.Applicative, scalaz.Applicative, scalaz.Equal, scalaz.Traverse$TraverseLaw, java.lang.Object);
    Code:
       0: aload         5
       2: aload_1
       3: aload         6
       5: aload_2
       6: aload_3
       7: aload         4
       9: invokeinterface #332,  6          // InterfaceMethod scalaz/Traverse$TraverseLaw.naturality:(Lscalaz/NaturalTransformation;Ljava/lang/Object;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      14: ireturn

  private final org.scalacheck.Prop naturality$$anonfun$3(boolean);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: iload_1
       4: invokevirtual #288                // Method org/scalacheck/Prop$.propBoolean:(Z)Lorg/scalacheck/Prop;
       7: areturn

  private org.scalacheck.Prop naturality$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #335                // Method naturality$$anonfun$3:(Z)Lorg/scalacheck/Prop;
       8: areturn

  private final org.scalacheck.util.Pretty naturality$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final boolean parallelFusion$$anonfun$1(scalaz.Applicative, scalaz.Applicative, scalaz.Equal, scalaz.Traverse$TraverseLaw, java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload         4
       2: aload         5
       4: aload         6
       6: aload         7
       8: aload_1
       9: aload_2
      10: aload_3
      11: invokeinterface #341,  7          // InterfaceMethod scalaz/Traverse$TraverseLaw.parallelFusion:(Ljava/lang/Object;Lscala/Function1;Lscala/Function1;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Z
      16: ireturn

  private final org.scalacheck.Prop parallelFusion$$anonfun$5(boolean);
    Code:
       0: getstatic     #56                 // Field org/scalacheck/Prop$.MODULE$:Lorg/scalacheck/Prop$;
       3: iload_1
       4: invokevirtual #288                // Method org/scalacheck/Prop$.propBoolean:(Z)Lorg/scalacheck/Prop;
       7: areturn

  private org.scalacheck.Prop parallelFusion$$anonfun$adapted$1(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #294                // Method scala/runtime/BoxesRunTime.unboxToBoolean:(Ljava/lang/Object;)Z
       5: invokespecial #344                // Method parallelFusion$$anonfun$5:(Z)Lorg/scalacheck/Prop;
       8: areturn

  private final org.scalacheck.util.Pretty parallelFusion$$anonfun$2(java.lang.Object);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.util.Pretty parallelFusion$$anonfun$3(scala.Function1);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.util.Pretty parallelFusion$$anonfun$4(scala.Function1);
    Code:
       0: getstatic     #302                // Field org/scalacheck/util/Pretty$.MODULE$:Lorg/scalacheck/util/Pretty$;
       3: aload_1
       4: invokevirtual #305                // Method org/scalacheck/util/Pretty$.prettyAny:(Ljava/lang/Object;)Lorg/scalacheck/util/Pretty;
       7: areturn

  private final org.scalacheck.Prop laws$$anonfun$1$$anonfun$1(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       6: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       9: invokevirtual #358                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
      12: getstatic     #363                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      15: invokevirtual #367                // Method org/scalacheck/Cogen$.cogenInt:()Lorg/scalacheck/Cogen;
      18: invokevirtual #371                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      21: aload_3
      22: invokevirtual #373                // Method identityTraverse:(Lscalaz/Traverse;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lscalaz/Equal;)Lorg/scalacheck/Prop;
      25: areturn

  private final org.scalacheck.Prop laws$$anonfun$2$$anonfun$2(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: getstatic     #382                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
       6: invokevirtual #386                // Method scalaz/std/option$.optionInstance:()Lscalaz/Align;
       9: checkcast     #388                // class scalaz/Applicative
      12: getstatic     #382                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      15: aload_3
      16: invokevirtual #392                // Method scalaz/std/option$.optionEqual:(Lscalaz/Equal;)Lscalaz/Equal;
      19: invokevirtual #394                // Method purity:(Lscalaz/Traverse;Lorg/scalacheck/Arbitrary;Lscalaz/Applicative;Lscalaz/Equal;)Lorg/scalacheck/Prop;
      22: areturn

  private final org.scalacheck.Prop laws$$anonfun$3$$anonfun$3(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: getstatic     #403                // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
       6: invokevirtual #406                // Method scalaz/std/lazylist$.lazylistInstance:()Lscalaz/Align;
       9: checkcast     #388                // class scalaz/Applicative
      12: getstatic     #403                // Field scalaz/std/lazylist$.MODULE$:Lscalaz/std/lazylist$;
      15: aload_3
      16: invokevirtual #409                // Method scalaz/std/lazylist$.lazylistEqual:(Lscalaz/Equal;)Lscalaz/Equal;
      19: invokevirtual #394                // Method purity:(Lscalaz/Traverse;Lorg/scalacheck/Arbitrary;Lscalaz/Applicative;Lscalaz/Equal;)Lorg/scalacheck/Prop;
      22: areturn

  private final org.scalacheck.Prop laws$$anonfun$4$$anonfun$4(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal);
    Code:
       0: getstatic     #258                // Field scalaz/scalacheck/ScalazProperties$.MODULE$:Lscalaz/scalacheck/ScalazProperties$;
       3: aload_0
       4: aload_1
       5: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
       8: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      11: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      14: invokevirtual #358                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
      17: getstatic     #418                // Field org/scalacheck/util/Buildable$.MODULE$:Lorg/scalacheck/util/Buildable$;
      20: getstatic     #423                // Field scala/collection/immutable/List$.MODULE$:Lscala/collection/immutable/List$;
      23: invokevirtual #427                // Method scala/collection/immutable/List$.iterableFactory:()Lscala/collection/Factory;
      26: invokevirtual #431                // Method org/scalacheck/util/Buildable$.buildableFactory:(Lscala/collection/Factory;)Lorg/scalacheck/util/Buildable;
      29: getstatic     #436                // Field scala/Predef$.MODULE$:Lscala/Predef$;
      32: invokevirtual #440                // Method scala/Predef$.$conforms:()Lscala/Function1;
      35: invokevirtual #444                // Method org/scalacheck/Arbitrary$.arbContainer:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/util/Buildable;Lscala/Function1;)Lorg/scalacheck/Arbitrary;
      38: getstatic     #363                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      41: invokevirtual #367                // Method org/scalacheck/Cogen$.cogenInt:()Lorg/scalacheck/Cogen;
      44: invokevirtual #371                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      47: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      50: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      53: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      56: invokevirtual #358                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
      59: invokevirtual #448                // Method org/scalacheck/Arbitrary$.arbOption:(Lorg/scalacheck/Arbitrary;)Lorg/scalacheck/Arbitrary;
      62: getstatic     #363                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      65: invokevirtual #367                // Method org/scalacheck/Cogen$.cogenInt:()Lorg/scalacheck/Cogen;
      68: invokevirtual #371                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      71: aload_2
      72: getstatic     #382                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      75: invokevirtual #386                // Method scalaz/std/option$.optionInstance:()Lscalaz/Align;
      78: checkcast     #388                // class scalaz/Applicative
      81: getstatic     #453                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
      84: invokevirtual #456                // Method scalaz/std/list$.listInstance:()Lscalaz/Align;
      87: checkcast     #388                // class scalaz/Applicative
      90: getstatic     #453                // Field scalaz/std/list$.MODULE$:Lscalaz/std/list$;
      93: getstatic     #382                // Field scalaz/std/option$.MODULE$:Lscalaz/std/option$;
      96: aload_3
      97: invokevirtual #392                // Method scalaz/std/option$.optionEqual:(Lscalaz/Equal;)Lscalaz/Equal;
     100: invokevirtual #459                // Method scalaz/std/list$.listEqual:(Lscalaz/Equal;)Lscalaz/Equal;
     103: invokevirtual #461                // Method sequentialFusion:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Applicative;Lscalaz/Applicative;Lscalaz/Equal;)Lorg/scalacheck/Prop;
     106: iconst_3
     107: invokevirtual #465                // Method scalaz/scalacheck/ScalazProperties$.scalaz$scalacheck$ScalazProperties$$$resizeProp:(Lorg/scalacheck/Prop;I)Lorg/scalacheck/Prop;
     110: areturn

  private final void laws$$anonfun$5(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal, org.scalacheck.Properties);
    Code:
       0: aload         4
       2: getstatic     #474                // Field scalaz/scalacheck/ScalazProperties$functor$.MODULE$:Lscalaz/scalacheck/ScalazProperties$functor$;
       5: aload_2
       6: aload_1
       7: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      10: getstatic     #354                // Field org/scalacheck/Arbitrary$.MODULE$:Lorg/scalacheck/Arbitrary$;
      13: invokevirtual #358                // Method org/scalacheck/Arbitrary$.arbInt:()Lorg/scalacheck/Arbitrary;
      16: getstatic     #363                // Field org/scalacheck/Cogen$.MODULE$:Lorg/scalacheck/Cogen$;
      19: invokevirtual #367                // Method org/scalacheck/Cogen$.cogenInt:()Lorg/scalacheck/Cogen;
      22: invokevirtual #371                // Method org/scalacheck/Arbitrary$.arbFunction1:(Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Cogen;)Lorg/scalacheck/Arbitrary;
      25: aload_3
      26: invokevirtual #477                // Method scalaz/scalacheck/ScalazProperties$functor$.laws:(Lscalaz/Functor;Lorg/scalacheck/Arbitrary;Lorg/scalacheck/Arbitrary;Lscalaz/Equal;)Lorg/scalacheck/Properties;
      29: invokevirtual #481                // Method org/scalacheck/Properties.include:(Lorg/scalacheck/Properties;)V
      32: aload         4
      34: getstatic     #484                // Field scalaz/scalacheck/ScalazProperties$foldable$.MODULE$:Lscalaz/scalacheck/ScalazProperties$foldable$;
      37: aload_1
      38: aload_2
      39: invokevirtual #487                // Method scalaz/scalacheck/ScalazProperties$foldable$.laws:(Lorg/scalacheck/Arbitrary;Lscalaz/Foldable;)Lorg/scalacheck/Properties;
      42: invokevirtual #481                // Method org/scalacheck/Properties.include:(Lorg/scalacheck/Properties;)V
      45: aload         4
      47: invokevirtual #491                // Method org/scalacheck/Properties.property:()Lorg/scalacheck/Properties$PropertySpecifier;
      50: ldc_w         #493                // String identity traverse
      53: aload_0
      54: aload_1
      55: aload_2
      56: aload_3
      57: invokedynamic #502,  0            // InvokeDynamic #21:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;)Lscala/Function0;
      62: invokevirtual #506                // Method org/scalacheck/Properties$PropertySpecifier.update:(Ljava/lang/String;Lscala/Function0;)Lscala/collection/mutable/ListBuffer;
      65: pop
      66: aload         4
      68: invokevirtual #491                // Method org/scalacheck/Properties.property:()Lorg/scalacheck/Properties$PropertySpecifier;
      71: ldc_w         #508                // String purity.option
      74: aload_0
      75: aload_1
      76: aload_2
      77: aload_3
      78: invokedynamic #512,  0            // InvokeDynamic #22:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;)Lscala/Function0;
      83: invokevirtual #506                // Method org/scalacheck/Properties$PropertySpecifier.update:(Ljava/lang/String;Lscala/Function0;)Lscala/collection/mutable/ListBuffer;
      86: pop
      87: aload         4
      89: invokevirtual #491                // Method org/scalacheck/Properties.property:()Lorg/scalacheck/Properties$PropertySpecifier;
      92: ldc_w         #514                // String purity.LazyList
      95: aload_0
      96: aload_1
      97: aload_2
      98: aload_3
      99: invokedynamic #518,  0            // InvokeDynamic #23:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;)Lscala/Function0;
     104: invokevirtual #506                // Method org/scalacheck/Properties$PropertySpecifier.update:(Ljava/lang/String;Lscala/Function0;)Lscala/collection/mutable/ListBuffer;
     107: pop
     108: aload         4
     110: invokevirtual #491                // Method org/scalacheck/Properties.property:()Lorg/scalacheck/Properties$PropertySpecifier;
     113: ldc_w         #520                // String sequential fusion
     116: aload_0
     117: aload_1
     118: aload_2
     119: aload_3
     120: invokedynamic #524,  0            // InvokeDynamic #24:apply:(Lscalaz/scalacheck/ScalazProperties$traverse$;Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;)Lscala/Function0;
     125: invokevirtual #506                // Method org/scalacheck/Properties$PropertySpecifier.update:(Ljava/lang/String;Lscala/Function0;)Lscala/collection/mutable/ListBuffer;
     128: pop
     129: return

  private java.lang.Object laws$$anonfun$adapted$1(org.scalacheck.Arbitrary, scalaz.Traverse, scalaz.Equal, org.scalacheck.Properties);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #530                // Method laws$$anonfun$5:(Lorg/scalacheck/Arbitrary;Lscalaz/Traverse;Lscalaz/Equal;Lorg/scalacheck/Properties;)V
       9: getstatic     #536                // Field scala/runtime/BoxedUnit.UNIT:Lscala/runtime/BoxedUnit;
      12: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #548,  0            // InvokeDynamic #25:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
