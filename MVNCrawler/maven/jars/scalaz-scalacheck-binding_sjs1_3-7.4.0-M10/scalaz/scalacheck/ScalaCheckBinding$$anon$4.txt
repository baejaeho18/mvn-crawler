Compiled from "ScalaCheckBinding.scala"
final class scalaz.scalacheck.ScalaCheckBinding$$anon$4 implements scalaz.InvariantFunctor<org.scalacheck.Shrink> {
  private scalaz.syntax.InvariantFunctorSyntax invariantFunctorSyntax;

  public scalaz.scalacheck.ScalaCheckBinding$$anon$4();
    Code:
       0: aload_0
       1: invokespecial #27                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: invokestatic  #31                 // InterfaceMethod scalaz/InvariantFunctor.$init$:(Lscalaz/InvariantFunctor;)V
       8: invokestatic  #36                 // Method scala/runtime/Statics.releaseFence:()V
      11: return

  public scalaz.syntax.InvariantFunctorSyntax invariantFunctorSyntax();
    Code:
       0: aload_0
       1: getfield      #41                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       4: areturn

  public void scalaz$InvariantFunctor$_setter_$invariantFunctorSyntax_$eq(scalaz.syntax.InvariantFunctorSyntax);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field invariantFunctorSyntax:Lscalaz/syntax/InvariantFunctorSyntax;
       5: return

  public java.lang.Object xmapb(java.lang.Object, scalaz.BijectionT);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #52                 // InterfaceMethod scalaz/InvariantFunctor.xmapb$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/BijectionT;)Ljava/lang/Object;
       6: areturn

  public java.lang.Object xmapi(java.lang.Object, scalaz.Isomorphisms$Iso);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #61                 // InterfaceMethod scalaz/InvariantFunctor.xmapi$:(Lscalaz/InvariantFunctor;Ljava/lang/Object;Lscalaz/Isomorphisms$Iso;)Ljava/lang/Object;
       6: areturn

  public scalaz.InvariantFunctor$InvariantFunctorLaw invariantFunctorLaw();
    Code:
       0: aload_0
       1: invokestatic  #68                 // InterfaceMethod scalaz/InvariantFunctor.invariantFunctorLaw$:(Lscalaz/InvariantFunctor;)Lscalaz/InvariantFunctor$InvariantFunctorLaw;
       4: areturn

  public org.scalacheck.Shrink xmap(org.scalacheck.Shrink, scala.Function1, scala.Function1);
    Code:
       0: getstatic     #78                 // Field org/scalacheck/Shrink$.MODULE$:Lorg/scalacheck/Shrink$;
       3: aload_1
       4: aload_2
       5: aload_3
       6: invokedynamic #100,  0            // InvokeDynamic #0:apply:(Lorg/scalacheck/Shrink;Lscala/Function1;Lscala/Function1;)Lscala/Function1;
      11: invokevirtual #103                // Method org/scalacheck/Shrink$.apply:(Lscala/Function1;)Lorg/scalacheck/Shrink;
      14: areturn

  public java.lang.Object xmap(java.lang.Object, scala.Function1, scala.Function1);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #108                // class org/scalacheck/Shrink
       5: aload_2
       6: aload_3
       7: invokevirtual #110                // Method xmap:(Lorg/scalacheck/Shrink;Lscala/Function1;Lscala/Function1;)Lorg/scalacheck/Shrink;
      10: areturn

  private static java.lang.Object $deserializeLambda$(java.lang.invoke.SerializedLambda);
    Code:
       0: aload_0
       1: invokedynamic #122,  0            // InvokeDynamic #1:lambdaDeserialize:(Ljava/lang/invoke/SerializedLambda;)Ljava/lang/Object;
       6: areturn
}
