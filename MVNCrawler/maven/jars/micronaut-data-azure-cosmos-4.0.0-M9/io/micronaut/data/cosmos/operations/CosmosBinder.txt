Compiled from "CosmosBinder.java"
final class io.micronaut.data.cosmos.operations.CosmosBinder implements io.micronaut.data.runtime.operations.internal.query.BindableParametersStoredQuery$Binder {
  private final io.micronaut.data.model.runtime.RuntimeEntityRegistry runtimeEntityRegistry;

  private final io.micronaut.data.model.runtime.AttributeConverterRegistry attributeConverterRegistry;

  private final java.util.List<com.azure.cosmos.models.SqlParameter> parameterList;

  private final boolean isRawQuery;

  private final boolean updateQuery;

  private final io.micronaut.data.model.PersistentEntity persistentEntity;

  private final java.util.List<java.lang.String> updatingProperties;

  private final java.util.Map<java.lang.String, java.lang.Object> propertiesToUpdate;

  io.micronaut.data.cosmos.operations.CosmosBinder(io.micronaut.data.model.runtime.RuntimeEntityRegistry, io.micronaut.data.model.runtime.AttributeConverterRegistry, java.util.List<com.azure.cosmos.models.SqlParameter>, boolean, boolean, io.micronaut.data.model.PersistentEntity, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field attributeConverterRegistry:Lio/micronaut/data/model/runtime/AttributeConverterRegistry;
      14: aload_0
      15: aload_3
      16: putfield      #17                 // Field parameterList:Ljava/util/List;
      19: aload_0
      20: iload         4
      22: putfield      #21                 // Field isRawQuery:Z
      25: aload_0
      26: iload         5
      28: putfield      #25                 // Field updateQuery:Z
      31: aload_0
      32: aload         6
      34: putfield      #28                 // Field persistentEntity:Lio/micronaut/data/model/PersistentEntity;
      37: aload_0
      38: aload         7
      40: putfield      #32                 // Field updatingProperties:Ljava/util/List;
      43: aload_0
      44: new           #35                 // class java/util/HashMap
      47: dup
      48: invokespecial #37                 // Method java/util/HashMap."<init>":()V
      51: putfield      #38                 // Field propertiesToUpdate:Ljava/util/Map;
      54: return

  public java.lang.Object autoPopulateRuntimeProperty(io.micronaut.data.model.runtime.RuntimePersistentProperty<?>, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       4: aload_1
       5: aload_2
       6: invokeinterface #42,  3           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.autoPopulateRuntimeProperty:(Lio/micronaut/data/model/runtime/RuntimePersistentProperty;Ljava/lang/Object;)Ljava/lang/Object;
      11: areturn

  public java.lang.Object convert(java.lang.Object, io.micronaut.data.model.runtime.RuntimePersistentProperty<?>);
    Code:
       0: aload_2
       1: invokevirtual #48                 // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getConverter:()Lio/micronaut/data/model/runtime/convert/AttributeConverter;
       4: astore_3
       5: aload_3
       6: ifnull        26
       9: aload_3
      10: aload_1
      11: aload_0
      12: aload_2
      13: aload_2
      14: invokevirtual #54                 // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getArgument:()Lio/micronaut/core/type/Argument;
      17: invokevirtual #58                 // Method createTypeConversionContext:(Lio/micronaut/data/model/runtime/RuntimePersistentProperty;Lio/micronaut/core/type/Argument;)Lio/micronaut/core/convert/ConversionContext;
      20: invokeinterface #62,  3           // InterfaceMethod io/micronaut/data/model/runtime/convert/AttributeConverter.convertToPersistedValue:(Ljava/lang/Object;Lio/micronaut/core/convert/ConversionContext;)Ljava/lang/Object;
      25: areturn
      26: aload_1
      27: areturn

  public java.lang.Object convert(java.lang.Class<?>, java.lang.Object, io.micronaut.core.type.Argument<?>);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aload_2
       5: areturn
       6: aload_0
       7: getfield      #13                 // Field attributeConverterRegistry:Lio/micronaut/data/model/runtime/AttributeConverterRegistry;
      10: aload_1
      11: invokeinterface #68,  2           // InterfaceMethod io/micronaut/data/model/runtime/AttributeConverterRegistry.getConverter:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/convert/AttributeConverter;
      16: astore        4
      18: aload_0
      19: aconst_null
      20: aload_3
      21: invokevirtual #58                 // Method createTypeConversionContext:(Lio/micronaut/data/model/runtime/RuntimePersistentProperty;Lio/micronaut/core/type/Argument;)Lio/micronaut/core/convert/ConversionContext;
      24: astore        5
      26: aload         4
      28: aload_2
      29: aload         5
      31: invokeinterface #62,  3           // InterfaceMethod io/micronaut/data/model/runtime/convert/AttributeConverter.convertToPersistedValue:(Ljava/lang/Object;Lio/micronaut/core/convert/ConversionContext;)Ljava/lang/Object;
      36: areturn

  public void bindOne(io.micronaut.data.model.runtime.QueryParameterBinding, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field isRawQuery:Z
       6: invokevirtual #73                 // Method getParameterName:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Z)Ljava/lang/String;
       9: astore_3
      10: aload_0
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokevirtual #77                 // Method doBind:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Ljava/lang/Object;Ljava/lang/String;)V
      17: return

  public void bindMany(io.micronaut.data.model.runtime.QueryParameterBinding, java.util.Collection<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #21                 // Field isRawQuery:Z
       6: invokevirtual #73                 // Method getParameterName:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Z)Ljava/lang/String;
       9: astore_3
      10: aload_2
      11: invokeinterface #81,  1           // InterfaceMethod java/util/Collection.size:()I
      16: iconst_1
      17: if_icmpne     38
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      28: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: aload_3
      34: invokevirtual #77                 // Method doBind:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Ljava/lang/Object;Ljava/lang/String;)V
      37: return
      38: iconst_1
      39: istore        4
      41: aload_2
      42: invokeinterface #87,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore        5
      49: aload         5
      51: invokeinterface #97,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          106
      59: aload         5
      61: invokeinterface #91,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: astore        6
      68: ldc           #101                // String %s_%d
      70: iconst_2
      71: anewarray     #2                  // class java/lang/Object
      74: dup
      75: iconst_0
      76: aload_3
      77: aastore
      78: dup
      79: iconst_1
      80: iload         4
      82: iinc          4, 1
      85: invokestatic  #103                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      88: aastore
      89: invokestatic  #109                // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      92: astore        7
      94: aload_0
      95: aload_1
      96: aload         6
      98: aload         7
     100: invokevirtual #77                 // Method doBind:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Ljava/lang/Object;Ljava/lang/String;)V
     103: goto          49
     106: return

  public int currentIndex();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Map<java.lang.String, java.lang.Object> getPropertiesToUpdate();
    Code:
       0: aload_0
       1: getfield      #38                 // Field propertiesToUpdate:Ljava/util/Map;
       4: areturn

  private io.micronaut.core.convert.ConversionContext createTypeConversionContext(io.micronaut.data.model.runtime.RuntimePersistentProperty<?>, io.micronaut.core.type.Argument<?>);
    Code:
       0: aload_1
       1: ifnull        12
       4: aload_1
       5: invokevirtual #54                 // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getArgument:()Lio/micronaut/core/type/Argument;
       8: invokestatic  #115                // InterfaceMethod io/micronaut/core/convert/ConversionContext.of:(Lio/micronaut/core/type/Argument;)Lio/micronaut/core/convert/ArgumentConversionContext;
      11: areturn
      12: aload_2
      13: ifnull        21
      16: aload_2
      17: invokestatic  #115                // InterfaceMethod io/micronaut/core/convert/ConversionContext.of:(Lio/micronaut/core/type/Argument;)Lio/micronaut/core/convert/ArgumentConversionContext;
      20: areturn
      21: getstatic     #121                // Field io/micronaut/core/convert/ConversionContext.DEFAULT:Lio/micronaut/core/convert/ConversionContext;
      24: areturn

  private void doBind(io.micronaut.data.model.runtime.QueryParameterBinding, java.lang.Object, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #25                 // Field updateQuery:Z
       4: ifeq          50
       7: aload_0
       8: aload_1
       9: aload_0
      10: getfield      #28                 // Field persistentEntity:Lio/micronaut/data/model/PersistentEntity;
      13: invokevirtual #125                // Method getUpdateProperty:(Lio/micronaut/data/model/runtime/QueryParameterBinding;Lio/micronaut/data/model/PersistentEntity;)Ljava/lang/String;
      16: astore        4
      18: aload         4
      20: ifnull        50
      23: aload_0
      24: getfield      #38                 // Field propertiesToUpdate:Ljava/util/Map;
      27: aload         4
      29: invokeinterface #129,  2          // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      34: ifne          50
      37: aload_0
      38: getfield      #38                 // Field propertiesToUpdate:Ljava/util/Map;
      41: aload         4
      43: aload_2
      44: invokeinterface #135,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #17                 // Field parameterList:Ljava/util/List;
      54: new           #139                // class com/azure/cosmos/models/SqlParameter
      57: dup
      58: aload_3
      59: invokedynamic #141,  0            // InvokeDynamic #0:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      64: aload_2
      65: invokespecial #145                // Method com/azure/cosmos/models/SqlParameter."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      68: invokeinterface #148,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      73: pop
      74: return

  private java.lang.String getParameterName(io.micronaut.data.model.runtime.QueryParameterBinding, boolean);
    Code:
       0: iload_2
       1: ifeq          18
       4: aload_1
       5: invokeinterface #153,  1          // InterfaceMethod io/micronaut/data/model/runtime/QueryParameterBinding.getParameterIndex:()I
      10: iconst_1
      11: iadd
      12: invokedynamic #158,  0            // InvokeDynamic #1:makeConcatWithConstants:(I)Ljava/lang/String;
      17: areturn
      18: aload_1
      19: invokeinterface #161,  1          // InterfaceMethod io/micronaut/data/model/runtime/QueryParameterBinding.getRequiredName:()Ljava/lang/String;
      24: areturn

  private java.lang.String getUpdateProperty(io.micronaut.data.model.runtime.QueryParameterBinding, io.micronaut.data.model.PersistentEntity);
    Code:
       0: aload_1
       1: invokeinterface #165,  1          // InterfaceMethod io/micronaut/data/model/runtime/QueryParameterBinding.getRequiredPropertyPath:()[Ljava/lang/String;
       6: astore_3
       7: aload_2
       8: aload_3
       9: invokeinterface #169,  2          // InterfaceMethod io/micronaut/data/model/PersistentEntity.getPropertyPath:([Ljava/lang/String;)Lio/micronaut/data/model/PersistentPropertyPath;
      14: astore        4
      16: aload         4
      18: ifnull        55
      21: aload         4
      23: invokevirtual #175                // Method io/micronaut/data/model/PersistentPropertyPath.getPath:()Ljava/lang/String;
      26: astore        5
      28: aload_0
      29: getfield      #32                 // Field updatingProperties:Ljava/util/List;
      32: invokestatic  #180                // Method io/micronaut/core/util/CollectionUtils.isNotEmpty:(Ljava/util/Collection;)Z
      35: ifeq          55
      38: aload_0
      39: getfield      #32                 // Field updatingProperties:Ljava/util/List;
      42: aload         5
      44: invokeinterface #186,  2          // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      49: ifeq          55
      52: aload         5
      54: areturn
      55: aconst_null
      56: areturn
}
