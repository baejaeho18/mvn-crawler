Compiled from "DefaultReactiveCosmosRepositoryOperations.java"
public final class io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations extends io.micronaut.data.runtime.operations.internal.AbstractRepositoryOperations implements io.micronaut.data.operations.reactive.ReactorReactiveRepositoryOperations,io.micronaut.data.operations.reactive.ReactiveRepositoryOperations,io.micronaut.data.runtime.query.MethodContextAwareStoredQueryDecorator,io.micronaut.data.runtime.query.PreparedQueryDecorator {
  private static final java.lang.String FIND_ONE_DEFAULT_QUERY;

  private static final java.lang.String FAILED_TO_QUERY_ITEMS;

  private static final org.slf4j.Logger QUERY_LOG;

  private static final org.slf4j.Logger LOG;

  private final io.micronaut.data.cosmos.operations.CosmosSerde cosmosSerde;

  private final com.azure.cosmos.CosmosAsyncDatabase cosmosAsyncDatabase;

  private io.micronaut.data.document.model.query.builder.CosmosSqlQueryBuilder defaultCosmosSqlQueryBuilder;

  private final io.micronaut.data.cosmos.operations.CosmosDiagnosticsProcessor cosmosDiagnosticsProcessor;

  private final boolean queryMetricsEnabled;

  public io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations(io.micronaut.data.runtime.date.DateTimeProvider<java.lang.Object>, io.micronaut.data.model.runtime.RuntimeEntityRegistry, io.micronaut.data.runtime.convert.DataConversionService, io.micronaut.data.model.runtime.AttributeConverterRegistry, com.azure.cosmos.CosmosAsyncClient, io.micronaut.data.cosmos.operations.CosmosSerde, io.micronaut.data.cosmos.operations.CosmosDiagnosticsProcessor, io.micronaut.data.cosmos.config.CosmosDatabaseConfiguration);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #11                 // Method io/micronaut/data/runtime/operations/internal/AbstractRepositoryOperations."<init>":(Lio/micronaut/data/runtime/date/DateTimeProvider;Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;Lio/micronaut/data/runtime/convert/DataConversionService;Lio/micronaut/data/model/runtime/AttributeConverterRegistry;)V
       9: aload_0
      10: aload         6
      12: putfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
      15: aload_0
      16: aload         5
      18: aload         8
      20: invokevirtual #21                 // Method io/micronaut/data/cosmos/config/CosmosDatabaseConfiguration.getDatabaseName:()Ljava/lang/String;
      23: invokevirtual #27                 // Method com/azure/cosmos/CosmosAsyncClient.getDatabase:(Ljava/lang/String;)Lcom/azure/cosmos/CosmosAsyncDatabase;
      26: putfield      #33                 // Field cosmosAsyncDatabase:Lcom/azure/cosmos/CosmosAsyncDatabase;
      29: aload_0
      30: aload         7
      32: putfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
      35: aload_0
      36: aload         8
      38: invokevirtual #41                 // Method io/micronaut/data/cosmos/config/CosmosDatabaseConfiguration.isQueryMetricsEnabled:()Z
      41: putfield      #45                 // Field queryMetricsEnabled:Z
      44: return

  public <E, R> io.micronaut.data.model.runtime.PreparedQuery<E, R> decorate(io.micronaut.data.model.runtime.PreparedQuery<E, R>);
    Code:
       0: new           #49                 // class io/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery
       3: dup
       4: aload_1
       5: invokespecial #51                 // Method io/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery."<init>":(Lio/micronaut/data/model/runtime/PreparedQuery;)V
       8: areturn

  public <E, R> io.micronaut.data.model.runtime.StoredQuery<E, R> decorate(io.micronaut.aop.MethodInvocationContext<?, ?>, io.micronaut.data.model.runtime.StoredQuery<E, R>);
    Code:
       0: aload_0
       1: getfield      #54                 // Field defaultCosmosSqlQueryBuilder:Lio/micronaut/data/document/model/query/builder/CosmosSqlQueryBuilder;
       4: ifnonnull     24
       7: aload_0
       8: new           #58                 // class io/micronaut/data/document/model/query/builder/CosmosSqlQueryBuilder
      11: dup
      12: aload_1
      13: invokeinterface #60,  1           // InterfaceMethod io/micronaut/aop/MethodInvocationContext.getAnnotationMetadata:()Lio/micronaut/core/annotation/AnnotationMetadata;
      18: invokespecial #66                 // Method io/micronaut/data/document/model/query/builder/CosmosSqlQueryBuilder."<init>":(Lio/micronaut/core/annotation/AnnotationMetadata;)V
      21: putfield      #54                 // Field defaultCosmosSqlQueryBuilder:Lio/micronaut/data/document/model/query/builder/CosmosSqlQueryBuilder;
      24: aconst_null
      25: astore_3
      26: aload_2
      27: instanceof    #69                 // class io/micronaut/data/runtime/query/internal/QueryResultStoredQuery
      30: ifeq          46
      33: aload_2
      34: checkcast     #69                 // class io/micronaut/data/runtime/query/internal/QueryResultStoredQuery
      37: invokevirtual #71                 // Method io/micronaut/data/runtime/query/internal/QueryResultStoredQuery.getQueryResult:()Lio/micronaut/data/model/query/builder/QueryResult;
      40: invokeinterface #75,  1           // InterfaceMethod io/micronaut/data/model/query/builder/QueryResult.getUpdate:()Ljava/lang/String;
      45: astore_3
      46: aload_0
      47: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
      50: aload_2
      51: invokeinterface #80,  1           // InterfaceMethod io/micronaut/data/model/runtime/StoredQuery.getRootEntity:()Ljava/lang/Class;
      56: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      61: astore        4
      63: new           #92                 // class io/micronaut/data/cosmos/operations/CosmosSqlStoredQuery
      66: dup
      67: aload_2
      68: aload         4
      70: aload_0
      71: getfield      #54                 // Field defaultCosmosSqlQueryBuilder:Lio/micronaut/data/document/model/query/builder/CosmosSqlQueryBuilder;
      74: aload_3
      75: invokespecial #94                 // Method io/micronaut/data/cosmos/operations/CosmosSqlStoredQuery."<init>":(Lio/micronaut/data/model/runtime/StoredQuery;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Lio/micronaut/data/model/query/builder/sql/SqlQueryBuilder;Ljava/lang/String;)V
      78: areturn

  public <T> reactor.core.publisher.Mono<T> findOne(java.lang.Class<T>, java.io.Serializable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      10: astore_3
      11: aload_0
      12: aload_3
      13: invokevirtual #97                 // Method getContainer:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lcom/azure/cosmos/CosmosAsyncContainer;
      16: astore        4
      18: new           #101                // class com/azure/cosmos/models/SqlParameter
      21: dup
      22: ldc           #103                // String @ROOT_ID
      24: aload_2
      25: invokevirtual #105                // Method java/lang/Object.toString:()Ljava/lang/String;
      28: invokespecial #110                // Method com/azure/cosmos/models/SqlParameter."<init>":(Ljava/lang/String;Ljava/lang/Object;)V
      31: astore        5
      33: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
      36: dup
      37: ldc           #115                // String SELECT * FROM root WHERE root.id = @ROOT_ID
      39: iconst_1
      40: anewarray     #101                // class com/azure/cosmos/models/SqlParameter
      43: dup
      44: iconst_0
      45: aload         5
      47: aastore
      48: invokespecial #117                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;[Lcom/azure/cosmos/models/SqlParameter;)V
      51: astore        6
      53: aload_0
      54: aload         6
      56: invokevirtual #120                // Method logQuery:(Lcom/azure/cosmos/models/SqlQuerySpec;)V
      59: aload_0
      60: invokevirtual #124                // Method createCosmosQueryRequestOptions:()Lcom/azure/cosmos/models/CosmosQueryRequestOptions;
      63: astore        7
      65: aload_0
      66: aload_3
      67: invokevirtual #128                // Method isIdPartitionKey:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Z
      70: ifeq          90
      73: aload         7
      75: new           #132                // class com/azure/cosmos/models/PartitionKey
      78: dup
      79: aload_2
      80: invokevirtual #105                // Method java/lang/Object.toString:()Ljava/lang/String;
      83: invokespecial #134                // Method com/azure/cosmos/models/PartitionKey."<init>":(Ljava/lang/Object;)V
      86: invokevirtual #137                // Method com/azure/cosmos/models/CosmosQueryRequestOptions.setPartitionKey:(Lcom/azure/cosmos/models/PartitionKey;)Lcom/azure/cosmos/models/CosmosQueryRequestOptions;
      89: pop
      90: aload         4
      92: aload         6
      94: aload         7
      96: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      98: invokevirtual #145                // Method com/azure/cosmos/CosmosAsyncContainer.queryItems:(Lcom/azure/cosmos/models/SqlQuerySpec;Lcom/azure/cosmos/models/CosmosQueryRequestOptions;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
     101: astore        8
     103: aload         8
     105: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
     108: aload_0
     109: aload_3
     110: aload_1
     111: invokedynamic #157,  0            // InvokeDynamic #0:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Class;)Ljava/util/function/Function;
     116: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     119: aload_0
     120: invokedynamic #167,  0            // InvokeDynamic #1:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
     125: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     128: invokevirtual #173                // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
     131: areturn

  public <T> reactor.core.publisher.Mono<java.lang.Boolean> exists(io.micronaut.data.model.runtime.PreparedQuery<T, java.lang.Boolean>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #177                // Method getSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery;
       5: astore_2
       6: aload_2
       7: aload_2
       8: invokeinterface #181,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getPageable:()Lio/micronaut/data/model/Pageable;
      13: iconst_1
      14: invokeinterface #187,  3          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.attachPageable:(Lio/micronaut/data/model/Pageable;Z)V
      19: aload_2
      20: aconst_null
      21: invokeinterface #191,  2          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.prepare:(Ljava/lang/Object;)V
      26: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
      29: dup
      30: aload_2
      31: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
      36: new           #197                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder
      39: dup
      40: aload_0
      41: invokespecial #199                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)V
      44: aload_2
      45: invokevirtual #202                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.bindParameters:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/List;
      48: invokespecial #206                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;Ljava/util/List;)V
      51: astore_3
      52: aload_0
      53: aload_3
      54: invokevirtual #120                // Method logQuery:(Lcom/azure/cosmos/models/SqlQuerySpec;)V
      57: aload_0
      58: aload_2
      59: aload_3
      60: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      62: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
      65: astore        4
      67: aload         4
      69: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
      72: aload_0
      73: invokedynamic #213,  0            // InvokeDynamic #2:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
      78: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      81: aload_0
      82: invokedynamic #214,  0            // InvokeDynamic #3:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
      87: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      90: invokevirtual #173                // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
      93: areturn

  public <T, R> reactor.core.publisher.Mono<R> findOne(io.micronaut.data.model.runtime.PreparedQuery<T, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #177                // Method getSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery;
       5: astore_2
       6: aload_2
       7: aload_2
       8: invokeinterface #181,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getPageable:()Lio/micronaut/data/model/Pageable;
      13: iconst_1
      14: invokeinterface #187,  3          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.attachPageable:(Lio/micronaut/data/model/Pageable;Z)V
      19: aload_2
      20: aconst_null
      21: invokeinterface #191,  2          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.prepare:(Ljava/lang/Object;)V
      26: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
      29: dup
      30: aload_2
      31: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
      36: new           #197                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder
      39: dup
      40: aload_0
      41: invokespecial #199                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)V
      44: aload_2
      45: invokevirtual #202                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.bindParameters:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/List;
      48: invokespecial #206                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;Ljava/util/List;)V
      51: astore_3
      52: aload_0
      53: aload_3
      54: invokevirtual #120                // Method logQuery:(Lcom/azure/cosmos/models/SqlQuerySpec;)V
      57: aload_2
      58: invokeinterface #215,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.isDtoProjection:()Z
      63: istore        4
      65: aload_2
      66: invokeinterface #218,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultDataType:()Lio/micronaut/data/model/DataType;
      71: getstatic     #222                // Field io/micronaut/data/model/DataType.ENTITY:Lio/micronaut/data/model/DataType;
      74: if_acmpne     81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: istore        5
      84: iload         5
      86: ifne          94
      89: iload         4
      91: ifeq          101
      94: aload_0
      95: aload_2
      96: aload_3
      97: invokevirtual #228                // Method findOneEntityOrDto:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;)Lreactor/core/publisher/Mono;
     100: areturn
     101: aload_0
     102: aload_2
     103: aload_3
     104: invokevirtual #232                // Method findOneCustomResult:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;)Lreactor/core/publisher/Mono;
     107: areturn

  public <T> reactor.core.publisher.Mono<T> findOptional(java.lang.Class<T>, java.io.Serializable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #235                // Method findOne:(Ljava/lang/Class;Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
       6: ldc           #239                // class io/micronaut/data/exceptions/EmptyResultException
       8: invokestatic  #241                // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      11: invokevirtual #246                // Method reactor/core/publisher/Mono.onErrorReturn:(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      14: areturn

  public <T, R> reactor.core.publisher.Mono<R> findOptional(io.micronaut.data.model.runtime.PreparedQuery<T, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #250                // Method findOne:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: ldc           #239                // class io/micronaut/data/exceptions/EmptyResultException
       7: invokestatic  #241                // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      10: invokevirtual #246                // Method reactor/core/publisher/Mono.onErrorReturn:(Ljava/lang/Class;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      13: areturn

  public <T> reactor.core.publisher.Flux<T> findAll(io.micronaut.data.model.runtime.PagedQuery<T>);
    Code:
       0: new           #253                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #255                // String The findAll method without an explicit query is not supported. Use findAll(PreparedQuery) instead
       6: invokespecial #257                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public <T> reactor.core.publisher.Mono<java.lang.Long> count(io.micronaut.data.model.runtime.PagedQuery<T>);
    Code:
       0: new           #253                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #260                // String The count method without an explicit query is not supported. Use findAll(PreparedQuery) instead
       7: invokespecial #257                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  public <T, R> reactor.core.publisher.Flux<R> findAll(io.micronaut.data.model.runtime.PreparedQuery<T, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #177                // Method getSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery;
       5: astore_2
       6: aload_2
       7: aload_2
       8: invokeinterface #181,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getPageable:()Lio/micronaut/data/model/Pageable;
      13: iconst_0
      14: invokeinterface #187,  3          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.attachPageable:(Lio/micronaut/data/model/Pageable;Z)V
      19: aload_2
      20: aconst_null
      21: invokeinterface #191,  2          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.prepare:(Ljava/lang/Object;)V
      26: aload_2
      27: invokeinterface #215,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.isDtoProjection:()Z
      32: istore_3
      33: aload_2
      34: invokeinterface #218,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultDataType:()Lio/micronaut/data/model/DataType;
      39: getstatic     #222                // Field io/micronaut/data/model/DataType.ENTITY:Lio/micronaut/data/model/DataType;
      42: if_acmpne     49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: istore        4
      52: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
      55: dup
      56: aload_2
      57: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
      62: new           #197                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder
      65: dup
      66: aload_0
      67: invokespecial #199                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)V
      70: aload_2
      71: invokevirtual #202                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.bindParameters:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/List;
      74: invokespecial #206                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;Ljava/util/List;)V
      77: astore        5
      79: aload_0
      80: aload         5
      82: invokevirtual #120                // Method logQuery:(Lcom/azure/cosmos/models/SqlQuerySpec;)V
      85: iload         4
      87: ifne          94
      90: iload_3
      91: ifeq          182
      94: aload_0
      95: aload_2
      96: aload         5
      98: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
     100: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
     103: astore        6
     105: iload_3
     106: ifeq          145
     109: aload_2
     110: invokeinterface #262,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultType:()Ljava/lang/Class;
     115: invokestatic  #265                // Method io/micronaut/core/reflect/ReflectionUtils.getWrapperType:(Ljava/lang/Class;)Ljava/lang/Class;
     118: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
     121: astore        7
     123: aload         6
     125: aload_0
     126: aload         7
     128: invokedynamic #277,  0            // InvokeDynamic #4:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
     133: invokevirtual #280                // Method com/azure/cosmos/util/CosmosPagedFlux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     136: invokedynamic #283,  0            // InvokeDynamic #5:apply:()Ljava/util/function/Function;
     141: invokevirtual #286                // Method reactor/core/publisher/Flux.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     144: areturn
     145: aload_2
     146: invokeinterface #262,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultType:()Ljava/lang/Class;
     151: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
     154: astore        7
     156: aload         6
     158: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
     161: aload_0
     162: aload         7
     164: invokedynamic #289,  0            // InvokeDynamic #6:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
     169: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     172: aload_0
     173: invokedynamic #290,  0            // InvokeDynamic #7:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
     178: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     181: areturn
     182: aload_2
     183: invokeinterface #218,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultDataType:()Lio/micronaut/data/model/DataType;
     188: astore        6
     190: aload_2
     191: invokeinterface #262,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getResultType:()Ljava/lang/Class;
     196: astore        7
     198: aload_0
     199: aload_2
     200: aload         5
     202: aload_0
     203: aload         6
     205: invokevirtual #291                // Method getDataTypeClass:(Lio/micronaut/data/model/DataType;)Ljava/lang/Class;
     208: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
     211: astore        8
     213: aload         8
     215: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
     218: aload_0
     219: aload         7
     221: invokedynamic #295,  0            // InvokeDynamic #8:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Ljava/lang/Class;)Ljava/util/function/Function;
     226: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     229: aload_0
     230: invokedynamic #298,  0            // InvokeDynamic #9:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
     235: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     238: areturn

  public <T> reactor.core.publisher.Mono<T> persist(io.micronaut.data.model.runtime.InsertOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: invokeinterface #303,  1          // InterfaceMethod io/micronaut/data/model/runtime/InsertOperation.getEntity:()Ljava/lang/Object;
      14: invokevirtual #308                // Method createCosmosInsertOneOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Ljava/lang/Object;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation;
      17: astore_3
      18: aload_3
      19: invokevirtual #312                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.persist:()V
      22: aload_3
      23: invokevirtual #318                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.getEntity:()Lreactor/core/publisher/Mono;
      26: areturn

  public <T> reactor.core.publisher.Mono<T> update(io.micronaut.data.model.runtime.UpdateOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: invokeinterface #320,  1          // InterfaceMethod io/micronaut/data/model/runtime/UpdateOperation.getEntity:()Ljava/lang/Object;
      14: invokevirtual #323                // Method createCosmosReactiveReplaceItemOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Ljava/lang/Object;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation;
      17: astore_3
      18: aload_3
      19: invokevirtual #326                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.update:()V
      22: aload_3
      23: invokevirtual #318                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.getEntity:()Lreactor/core/publisher/Mono;
      26: areturn

  public <T> reactor.core.publisher.Flux<T> updateAll(io.micronaut.data.model.runtime.UpdateBatchOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: getstatic     #329                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.UPDATE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
      12: invokevirtual #335                // Method createCosmosReactiveBulkOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/BatchOperation;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation;
      15: astore_3
      16: aload_3
      17: invokevirtual #339                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.update:()V
      20: aload_3
      21: invokevirtual #342                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.getEntities:()Lreactor/core/publisher/Flux;
      24: areturn

  public <T> reactor.core.publisher.Flux<T> persistAll(io.micronaut.data.model.runtime.InsertBatchOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: getstatic     #345                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.CREATE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
      12: invokevirtual #335                // Method createCosmosReactiveBulkOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/BatchOperation;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation;
      15: astore_3
      16: aload_3
      17: invokevirtual #348                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.persist:()V
      20: aload_3
      21: invokevirtual #342                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.getEntities:()Lreactor/core/publisher/Flux;
      24: areturn

  public reactor.core.publisher.Mono<java.lang.Number> executeUpdate(io.micronaut.data.model.runtime.PreparedQuery<?, java.lang.Number>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #349                // Method isRawQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Z
       5: ifeq          22
       8: new           #353                // class java/lang/IllegalStateException
      11: dup
      12: ldc_w         #355                // String Cosmos Db does not support raw update queries.
      15: invokespecial #357                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: invokestatic  #358                // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      21: areturn
      22: aload_0
      23: aload_1
      24: invokevirtual #177                // Method getSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery;
      27: astore_2
      28: aload_2
      29: aconst_null
      30: invokeinterface #191,  2          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.prepare:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
      39: aload_2
      40: invokeinterface #362,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getRootEntity:()Ljava/lang/Class;
      45: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      50: astore_3
      51: aload_2
      52: invokeinterface #363,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getAnnotationMetadata:()Lio/micronaut/core/annotation/AnnotationMetadata;
      57: ldc_w         #364                // class io/micronaut/data/annotation/Query
      60: ldc_w         #366                // String update
      63: invokeinterface #367,  3          // InterfaceMethod io/micronaut/core/annotation/AnnotationMetadata.stringValue:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      68: aconst_null
      69: invokevirtual #373                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      72: checkcast     #379                // class java/lang/String
      75: astore        4
      77: aload         4
      79: ifnonnull     89
      82: aload_0
      83: aload_2
      84: invokevirtual #381                // Method getUpdate:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/lang/String;
      87: astore        4
      89: aload         4
      91: ifnonnull     134
      94: getstatic     #384                // Field LOG:Lorg/slf4j/Logger;
      97: invokeinterface #388,  1          // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
     102: ifeq          126
     105: getstatic     #384                // Field LOG:Lorg/slf4j/Logger;
     108: ldc_w         #393                // String Could not resolve update properties for Cosmos Db entity {} and query [{}]
     111: aload_3
     112: invokevirtual #395                // Method io/micronaut/data/model/runtime/RuntimePersistentEntity.getPersistedName:()Ljava/lang/String;
     115: aload_2
     116: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
     121: invokeinterface #400,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     126: iconst_0
     127: invokestatic  #404                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     130: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     133: areturn
     134: aload         4
     136: ldc_w         #414                // String ,
     139: invokevirtual #416                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     142: invokestatic  #420                // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
     145: astore        5
     147: new           #197                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder
     150: dup
     151: aload_0
     152: iconst_1
     153: aload         5
     155: invokespecial #426                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;ZLjava/util/List;)V
     158: astore        6
     160: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
     163: dup
     164: aload_2
     165: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
     170: aload         6
     172: aload_2
     173: invokevirtual #202                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.bindParameters:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/List;
     176: invokespecial #206                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;Ljava/util/List;)V
     179: astore        7
     181: aload         6
     183: invokevirtual #429                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.getPropertiesToUpdate:()Ljava/util/Map;
     186: astore        8
     188: aload         8
     190: invokeinterface #433,  1          // InterfaceMethod java/util/Map.isEmpty:()Z
     195: ifeq          238
     198: getstatic     #384                // Field LOG:Lorg/slf4j/Logger;
     201: invokeinterface #388,  1          // InterfaceMethod org/slf4j/Logger.isWarnEnabled:()Z
     206: ifeq          230
     209: getstatic     #384                // Field LOG:Lorg/slf4j/Logger;
     212: ldc_w         #438                // String No properties found to be updated for Cosmos Db entity {} and query [{}]
     215: aload_3
     216: invokevirtual #395                // Method io/micronaut/data/model/runtime/RuntimePersistentEntity.getPersistedName:()Ljava/lang/String;
     219: aload_2
     220: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
     225: invokeinterface #400,  4          // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     230: iconst_0
     231: invokestatic  #404                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     234: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     237: areturn
     238: aload_0
     239: aload_3
     240: invokevirtual #97                 // Method getContainer:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lcom/azure/cosmos/CosmosAsyncContainer;
     243: astore        9
     245: aload_2
     246: ldc_w         #442                // String partitionKey
     249: ldc           #132                // class com/azure/cosmos/models/PartitionKey
     251: invokeinterface #444,  3          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getParameterInRole:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
     256: astore        10
     258: aload_0
     259: aload_2
     260: aload         7
     262: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
     264: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
     267: astore        11
     269: aload_0
     270: aload         9
     272: aload         11
     274: getstatic     #329                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.UPDATE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
     277: aload_3
     278: aload         10
     280: aload_0
     281: aload         8
     283: invokedynamic #448,  0            // InvokeDynamic #10:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Ljava/util/Map;)Ljava/util/function/UnaryOperator;
     288: invokevirtual #451                // Method executeBulk:(Lcom/azure/cosmos/CosmosAsyncContainer;Lcom/azure/cosmos/util/CosmosPagedFlux;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/util/Optional;Ljava/util/function/UnaryOperator;)Lreactor/core/publisher/Mono;
     291: aload_0
     292: aload_3
     293: invokedynamic #455,  0            // InvokeDynamic #11:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/util/function/Function;
     298: invokevirtual #458                // Method reactor/core/publisher/Mono.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     301: areturn

  public reactor.core.publisher.Mono<java.lang.Number> executeDelete(io.micronaut.data.model.runtime.PreparedQuery<?, java.lang.Number>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #349                // Method isRawQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Z
       5: ifeq          22
       8: new           #353                // class java/lang/IllegalStateException
      11: dup
      12: ldc_w         #461                // String Cosmos Db does not support raw delete queries.
      15: invokespecial #357                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      18: invokestatic  #358                // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      21: areturn
      22: aload_0
      23: aload_1
      24: invokevirtual #177                // Method getSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery;
      27: astore_2
      28: aload_2
      29: aconst_null
      30: invokeinterface #191,  2          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.prepare:(Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
      39: aload_2
      40: invokeinterface #362,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getRootEntity:()Ljava/lang/Class;
      45: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      50: astore_3
      51: aload_0
      52: aload_3
      53: invokevirtual #97                 // Method getContainer:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lcom/azure/cosmos/CosmosAsyncContainer;
      56: astore        4
      58: aload_2
      59: ldc_w         #442                // String partitionKey
      62: ldc           #132                // class com/azure/cosmos/models/PartitionKey
      64: invokeinterface #444,  3          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getParameterInRole:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
      69: astore        5
      71: new           #113                // class com/azure/cosmos/models/SqlQuerySpec
      74: dup
      75: aload_2
      76: invokeinterface #194,  1          // InterfaceMethod io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery.getQuery:()Ljava/lang/String;
      81: new           #197                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder
      84: dup
      85: aload_0
      86: invokespecial #199                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)V
      89: aload_2
      90: invokevirtual #202                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$ParameterBinder.bindParameters:(Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/List;
      93: invokespecial #206                // Method com/azure/cosmos/models/SqlQuerySpec."<init>":(Ljava/lang/String;Ljava/util/List;)V
      96: astore        6
      98: aload_0
      99: aload_2
     100: aload         6
     102: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
     104: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
     107: astore        7
     109: aload_0
     110: aload         4
     112: aload         7
     114: getstatic     #463                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.DELETE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
     117: aload_3
     118: aload         5
     120: aconst_null
     121: invokevirtual #451                // Method executeBulk:(Lcom/azure/cosmos/CosmosAsyncContainer;Lcom/azure/cosmos/util/CosmosPagedFlux;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/util/Optional;Ljava/util/function/UnaryOperator;)Lreactor/core/publisher/Mono;
     124: aload_0
     125: aload_3
     126: invokedynamic #466,  0            // InvokeDynamic #12:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/util/function/Function;
     131: invokevirtual #458                // Method reactor/core/publisher/Mono.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     134: areturn

  public <T> reactor.core.publisher.Mono<java.lang.Number> delete(io.micronaut.data.model.runtime.DeleteOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: invokeinterface #467,  1          // InterfaceMethod io/micronaut/data/model/runtime/DeleteOperation.getEntity:()Ljava/lang/Object;
      14: invokevirtual #470                // Method createCosmosReactiveDeleteOneOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Ljava/lang/Object;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation;
      17: astore_3
      18: aload_3
      19: invokevirtual #473                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.delete:()V
      22: aload_3
      23: invokevirtual #476                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation.getRowsUpdated:()Lreactor/core/publisher/Mono;
      26: areturn

  public <T> reactor.core.publisher.Mono<java.lang.Number> deleteAll(io.micronaut.data.model.runtime.DeleteBatchOperation<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #299                // Method createCosmosReactiveOperationContext:(Lio/micronaut/data/model/runtime/EntityOperation;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;
       5: astore_2
       6: aload_0
       7: aload_2
       8: aload_1
       9: getstatic     #463                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.DELETE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
      12: invokevirtual #335                // Method createCosmosReactiveBulkOperation:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/BatchOperation;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;)Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation;
      15: astore_3
      16: aload_3
      17: invokevirtual #339                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.update:()V
      20: aload_3
      21: invokevirtual #479                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation.getRowsUpdated:()Lreactor/core/publisher/Mono;
      24: areturn

  public <R> reactor.core.publisher.Mono<io.micronaut.data.model.Page<R>> findPage(io.micronaut.data.model.runtime.PagedQuery<R>);
    Code:
       0: new           #253                // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc_w         #480                // String Not supported
       7: invokespecial #257                // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      10: athrow

  private <T, R, I> com.azure.cosmos.util.CosmosPagedFlux<I> getCosmosResults(io.micronaut.data.model.runtime.PreparedQuery<T, R>, com.azure.cosmos.models.SqlQuerySpec, java.lang.Class<I>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       4: aload_1
       5: invokeinterface #482,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getRootEntity:()Ljava/lang/Class;
      10: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      15: astore        4
      17: aload_0
      18: aload         4
      20: invokevirtual #97                 // Method getContainer:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lcom/azure/cosmos/CosmosAsyncContainer;
      23: astore        5
      25: aload_0
      26: invokevirtual #124                // Method createCosmosQueryRequestOptions:()Lcom/azure/cosmos/models/CosmosQueryRequestOptions;
      29: astore        6
      31: aload_1
      32: ldc_w         #442                // String partitionKey
      35: ldc           #132                // class com/azure/cosmos/models/PartitionKey
      37: invokeinterface #485,  3          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getParameterInRole:(Ljava/lang/String;Ljava/lang/Class;)Ljava/util/Optional;
      42: aload         6
      44: dup
      45: invokestatic  #486                // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: invokedynamic #491,  0            // InvokeDynamic #13:accept:(Lcom/azure/cosmos/models/CosmosQueryRequestOptions;)Ljava/util/function/Consumer;
      54: invokevirtual #495                // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      57: aload         5
      59: aload_2
      60: aload         6
      62: aload_3
      63: invokevirtual #145                // Method com/azure/cosmos/CosmosAsyncContainer.queryItems:(Lcom/azure/cosmos/models/SqlQuerySpec;Lcom/azure/cosmos/models/CosmosQueryRequestOptions;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
      66: areturn

  private <T, R> reactor.core.publisher.Mono<R> findOneEntityOrDto(io.micronaut.data.model.runtime.PreparedQuery<T, R>, com.azure.cosmos.models.SqlQuerySpec);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #143                // class com/fasterxml/jackson/databind/node/ObjectNode
       5: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
       8: astore_3
       9: aload_3
      10: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
      13: aload_0
      14: aload_1
      15: invokedynamic #499,  0            // InvokeDynamic #14:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/model/runtime/PreparedQuery;)Ljava/util/function/Function;
      20: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      23: aload_0
      24: invokedynamic #502,  0            // InvokeDynamic #15:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
      29: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      32: invokevirtual #173                // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
      35: areturn

  private <T, R> reactor.core.publisher.Mono<R> findOneCustomResult(io.micronaut.data.model.runtime.PreparedQuery<T, R>, com.azure.cosmos.models.SqlQuerySpec);
    Code:
       0: aload_1
       1: invokeinterface #503,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getResultDataType:()Lio/micronaut/data/model/DataType;
       6: astore_3
       7: aload_1
       8: invokeinterface #504,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getResultType:()Ljava/lang/Class;
      13: astore        4
      15: aload_0
      16: aload_1
      17: aload_2
      18: aload_0
      19: aload_3
      20: invokevirtual #291                // Method getDataTypeClass:(Lio/micronaut/data/model/DataType;)Ljava/lang/Class;
      23: invokevirtual #209                // Method getCosmosResults:(Lio/micronaut/data/model/runtime/PreparedQuery;Lcom/azure/cosmos/models/SqlQuerySpec;Ljava/lang/Class;)Lcom/azure/cosmos/util/CosmosPagedFlux;
      26: astore        5
      28: aload         5
      30: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
      33: aload_0
      34: aload_3
      35: aload         4
      37: invokedynamic #505,  0            // InvokeDynamic #16:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/model/DataType;Ljava/lang/Class;)Ljava/util/function/Function;
      42: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      45: aload_0
      46: invokedynamic #508,  0            // InvokeDynamic #17:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;)Ljava/util/function/Function;
      51: invokevirtual #170                // Method reactor/core/publisher/Flux.onErrorMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      54: invokevirtual #173                // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
      57: areturn

  private <R> reactor.core.publisher.Mono<R> fetchSingleResult(com.azure.cosmos.models.FeedResponse<?>, java.lang.Class<R>);
    Code:
       0: aload_1
       1: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
       4: invokeinterface #515,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       9: astore_3
      10: aload_3
      11: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          83
      19: aload_3
      20: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: astore        4
      27: aload_3
      28: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          47
      36: new           #528                // class io/micronaut/data/exceptions/NonUniqueResultException
      39: dup
      40: invokespecial #530                // Method io/micronaut/data/exceptions/NonUniqueResultException."<init>":()V
      43: invokestatic  #358                // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      46: areturn
      47: aload_2
      48: aload         4
      50: invokevirtual #532                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      53: ifeq          62
      56: aload         4
      58: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      61: areturn
      62: aload         4
      64: ifnull        83
      67: aload_0
      68: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      71: aload         4
      73: aload_2
      74: invokeinterface #542,  3          // InterfaceMethod io/micronaut/data/runtime/convert/DataConversionService.convertRequired:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      79: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      82: areturn
      83: aconst_null
      84: areturn

  private void logQuery(com.azure.cosmos.models.SqlQuerySpec);
    Code:
       0: getstatic     #548                // Field QUERY_LOG:Lorg/slf4j/Logger;
       3: invokeinterface #551,  1          // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          90
      11: getstatic     #548                // Field QUERY_LOG:Lorg/slf4j/Logger;
      14: ldc_w         #554                // String Executing query: {}
      17: aload_1
      18: invokevirtual #556                // Method com/azure/cosmos/models/SqlQuerySpec.getQueryText:()Ljava/lang/String;
      21: invokeinterface #559,  3          // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      26: getstatic     #548                // Field QUERY_LOG:Lorg/slf4j/Logger;
      29: invokeinterface #562,  1          // InterfaceMethod org/slf4j/Logger.isTraceEnabled:()Z
      34: ifeq          90
      37: aload_1
      38: invokevirtual #565                // Method com/azure/cosmos/models/SqlQuerySpec.getParameters:()Ljava/util/List;
      41: invokeinterface #515,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      46: astore_2
      47: aload_2
      48: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          90
      56: aload_2
      57: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      62: checkcast     #101                // class com/azure/cosmos/models/SqlParameter
      65: astore_3
      66: getstatic     #548                // Field QUERY_LOG:Lorg/slf4j/Logger;
      69: ldc_w         #568                // String Parameter: name={}, value={}
      72: aload_3
      73: invokevirtual #570                // Method com/azure/cosmos/models/SqlParameter.getName:()Ljava/lang/String;
      76: aload_3
      77: ldc           #106                // class java/lang/Object
      79: invokevirtual #573                // Method com/azure/cosmos/models/SqlParameter.getValue:(Ljava/lang/Class;)Ljava/lang/Object;
      82: invokeinterface #577,  4          // InterfaceMethod org/slf4j/Logger.trace:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      87: goto          47
      90: return

  private boolean isRawQuery(io.micronaut.data.model.runtime.PreparedQuery<?, ?>);
    Code:
       0: aload_1
       1: invokeinterface #580,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getAnnotationMetadata:()Lio/micronaut/core/annotation/AnnotationMetadata;
       6: ldc_w         #364                // class io/micronaut/data/annotation/Query
       9: ldc_w         #583                // String rawQuery
      12: invokeinterface #367,  3          // InterfaceMethod io/micronaut/core/annotation/AnnotationMetadata.stringValue:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/Optional;
      17: invokevirtual #585                // Method java/util/Optional.isPresent:()Z
      20: ireturn

  private <E, R> io.micronaut.data.runtime.operations.internal.sql.SqlPreparedQuery<E, R> getSqlPreparedQuery(io.micronaut.data.model.runtime.PreparedQuery<E, R>);
    Code:
       0: aload_1
       1: instanceof    #182                // class io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery
       4: ifeq          12
       7: aload_1
       8: checkcast     #182                // class io/micronaut/data/runtime/operations/internal/sql/SqlPreparedQuery
      11: areturn
      12: new           #353                // class java/lang/IllegalStateException
      15: dup
      16: aload_1
      17: invokevirtual #588                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #591                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokedynamic #592,  0            // InvokeDynamic #18:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      28: invokespecial #357                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow

  private <E, R> io.micronaut.data.cosmos.operations.CosmosSqlPreparedQuery<E, R> getCosmosSqlPreparedQuery(io.micronaut.data.model.runtime.PreparedQuery<E, R>);
    Code:
       0: aload_1
       1: instanceof    #49                 // class io/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery
       4: ifeq          12
       7: aload_1
       8: checkcast     #49                 // class io/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery
      11: areturn
      12: new           #353                // class java/lang/IllegalStateException
      15: dup
      16: aload_1
      17: invokevirtual #588                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: invokevirtual #591                // Method java/lang/Class.getName:()Ljava/lang/String;
      23: invokedynamic #596,  0            // InvokeDynamic #19:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      28: invokespecial #357                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      31: athrow

  private com.azure.cosmos.models.CosmosQueryRequestOptions createCosmosQueryRequestOptions();
    Code:
       0: new           #138                // class com/azure/cosmos/models/CosmosQueryRequestOptions
       3: dup
       4: invokespecial #597                // Method com/azure/cosmos/models/CosmosQueryRequestOptions."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #45                 // Field queryMetricsEnabled:Z
      13: invokevirtual #598                // Method com/azure/cosmos/models/CosmosQueryRequestOptions.setQueryMetricsEnabled:(Z)Lcom/azure/cosmos/models/CosmosQueryRequestOptions;
      16: pop
      17: aload_1
      18: areturn

  private com.azure.cosmos.CosmosAsyncContainer getContainer(io.micronaut.data.model.runtime.RuntimePersistentEntity<?>);
    Code:
       0: aload_0
       1: getfield      #33                 // Field cosmosAsyncDatabase:Lcom/azure/cosmos/CosmosAsyncDatabase;
       4: aload_1
       5: invokestatic  #602                // Method io/micronaut/data/cosmos/common/CosmosEntity.get:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lio/micronaut/data/cosmos/common/CosmosEntity;
       8: invokevirtual #608                // Method io/micronaut/data/cosmos/common/CosmosEntity.getContainerName:()Ljava/lang/String;
      11: invokevirtual #611                // Method com/azure/cosmos/CosmosAsyncDatabase.getContainer:(Ljava/lang/String;)Lcom/azure/cosmos/CosmosAsyncContainer;
      14: areturn

  private boolean isIdPartitionKey(io.micronaut.data.model.runtime.RuntimePersistentEntity<?>);
    Code:
       0: aload_1
       1: invokevirtual #616                // Method io/micronaut/data/model/runtime/RuntimePersistentEntity.getIdentity:()Lio/micronaut/data/model/runtime/RuntimePersistentProperty;
       4: astore_2
       5: aload_2
       6: ifnonnull     11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: aload_1
      13: invokevirtual #620                // Method getPartitionKeyDefinition:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/lang/String;
      16: astore_3
      17: aload_3
      18: aload_2
      19: invokeinterface #624,  1          // InterfaceMethod io/micronaut/data/model/PersistentProperty.getName:()Ljava/lang/String;
      24: invokedynamic #627,  0            // InvokeDynamic #20:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      29: invokevirtual #628                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ireturn

  private java.lang.String getPartitionKeyDefinition(io.micronaut.data.model.runtime.RuntimePersistentEntity<?>);
    Code:
       0: aload_1
       1: invokestatic  #602                // Method io/micronaut/data/cosmos/common/CosmosEntity.get:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lio/micronaut/data/cosmos/common/CosmosEntity;
       4: astore_2
       5: aload_2
       6: invokevirtual #631                // Method io/micronaut/data/cosmos/common/CosmosEntity.getPartitionKey:()Ljava/lang/String;
       9: areturn

  private com.azure.cosmos.models.PartitionKey getPartitionKey(io.micronaut.data.model.runtime.RuntimePersistentEntity<?>, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #620                // Method getPartitionKeyDefinition:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/lang/String;
       5: astore_3
       6: aload_3
       7: ldc_w         #634                // String /
      10: invokevirtual #636                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      13: ifeq          22
      16: aload_3
      17: iconst_1
      18: invokevirtual #640                // Method java/lang/String.substring:(I)Ljava/lang/String;
      21: astore_3
      22: aload_0
      23: aload_3
      24: aload_2
      25: invokevirtual #644                // Method getPartitionKey:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/node/ObjectNode;)Lcom/azure/cosmos/models/PartitionKey;
      28: areturn

  private com.azure.cosmos.models.PartitionKey getPartitionKey(java.lang.String, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_2
       1: aload_1
       2: invokevirtual #647                // Method com/fasterxml/jackson/databind/node/ObjectNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_3
      13: invokevirtual #650                // Method com/fasterxml/jackson/databind/JsonNode.isNumber:()Z
      16: ifeq          28
      19: aload_3
      20: invokevirtual #655                // Method com/fasterxml/jackson/databind/JsonNode.numberValue:()Ljava/lang/Number;
      23: astore        4
      25: goto          53
      28: aload_3
      29: invokevirtual #659                // Method com/fasterxml/jackson/databind/JsonNode.isBoolean:()Z
      32: ifeq          47
      35: aload_3
      36: invokevirtual #662                // Method com/fasterxml/jackson/databind/JsonNode.booleanValue:()Z
      39: invokestatic  #665                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      42: astore        4
      44: goto          53
      47: aload_3
      48: invokevirtual #670                // Method com/fasterxml/jackson/databind/JsonNode.textValue:()Ljava/lang/String;
      51: astore        4
      53: new           #132                // class com/azure/cosmos/models/PartitionKey
      56: dup
      57: aload         4
      59: invokespecial #134                // Method com/azure/cosmos/models/PartitionKey."<init>":(Ljava/lang/Object;)V
      62: areturn

  private java.lang.String getItemId(com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_1
       1: ldc_w         #673                // String id
       4: invokevirtual #647                // Method com/fasterxml/jackson/databind/node/ObjectNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       7: astore_2
       8: aload_2
       9: ifnonnull     14
      12: aconst_null
      13: areturn
      14: aload_2
      15: invokevirtual #670                // Method com/fasterxml/jackson/databind/JsonNode.textValue:()Ljava/lang/String;
      18: areturn

  private java.lang.Class<?> getDataTypeClass(io.micronaut.data.model.DataType);
    Code:
       0: getstatic     #675                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$4.$SwitchMap$io$micronaut$data$model$DataType:[I
       3: aload_1
       4: invokevirtual #681                // Method io/micronaut/data/model/DataType.ordinal:()I
       7: iaload
       8: tableswitch   { // 1 to 15
                     1: 84
                     2: 84
                     3: 88
                     4: 92
                     5: 96
                     6: 100
                     7: 104
                     8: 108
                     9: 108
                    10: 112
                    11: 116
                    12: 120
                    13: 124
                    14: 128
                    15: 132
               default: 136
          }
      84: ldc_w         #379                // class java/lang/String
      87: areturn
      88: ldc_w         #685                // class java/util/UUID
      91: areturn
      92: ldc_w         #687                // class java/lang/Long
      95: areturn
      96: ldc_w         #405                // class java/lang/Integer
      99: areturn
     100: ldc_w         #666                // class java/lang/Boolean
     103: areturn
     104: ldc_w         #689                // class java/lang/Byte
     107: areturn
     108: ldc_w         #691                // class java/util/Date
     111: areturn
     112: ldc_w         #693                // class java/lang/Character
     115: areturn
     116: ldc_w         #695                // class java/lang/Float
     119: areturn
     120: ldc_w         #697                // class java/lang/Short
     123: areturn
     124: ldc_w         #699                // class java/lang/Double
     127: areturn
     128: ldc_w         #701                // class java/math/BigDecimal
     131: areturn
     132: ldc_w         #703                // class java/sql/Time
     135: areturn
     136: ldc           #106                // class java/lang/Object
     138: areturn

  private <T> void generateId(io.micronaut.data.model.runtime.RuntimePersistentEntity<T>, T);
    Code:
       0: aload_1
       1: invokevirtual #616                // Method io/micronaut/data/model/runtime/RuntimePersistentEntity.getIdentity:()Lio/micronaut/data/model/runtime/RuntimePersistentProperty;
       4: astore_3
       5: aload_3
       6: invokevirtual #705                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getProperty:()Lio/micronaut/core/beans/BeanProperty;
       9: aload_2
      10: invokeinterface #711,  2          // InterfaceMethod io/micronaut/core/beans/BeanProperty.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: ifnonnull     73
      18: aload_3
      19: invokevirtual #715                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getDataType:()Lio/micronaut/data/model/DataType;
      22: getstatic     #718                // Field io/micronaut/data/model/DataType.STRING:Lio/micronaut/data/model/DataType;
      25: invokevirtual #721                // Method io/micronaut/data/model/DataType.equals:(Ljava/lang/Object;)Z
      28: ifeq          47
      31: aload_3
      32: invokevirtual #705                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getProperty:()Lio/micronaut/core/beans/BeanProperty;
      35: aload_2
      36: invokestatic  #722                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      39: invokevirtual #726                // Method java/util/UUID.toString:()Ljava/lang/String;
      42: invokeinterface #727,  3          // InterfaceMethod io/micronaut/core/beans/BeanProperty.convertAndSet:(Ljava/lang/Object;Ljava/lang/Object;)V
      47: aload_3
      48: invokevirtual #715                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getDataType:()Lio/micronaut/data/model/DataType;
      51: getstatic     #731                // Field io/micronaut/data/model/DataType.UUID:Lio/micronaut/data/model/DataType;
      54: invokevirtual #721                // Method io/micronaut/data/model/DataType.equals:(Ljava/lang/Object;)Z
      57: ifeq          73
      60: aload_3
      61: invokevirtual #705                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getProperty:()Lio/micronaut/core/beans/BeanProperty;
      64: aload_2
      65: invokestatic  #722                // Method java/util/UUID.randomUUID:()Ljava/util/UUID;
      68: invokeinterface #727,  3          // InterfaceMethod io/micronaut/core/beans/BeanProperty.convertAndSet:(Ljava/lang/Object;Ljava/lang/Object;)V
      73: return

  private <T> void setETagVersion(io.micronaut.data.model.runtime.RuntimePersistentEntity<T>, T, java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: aload_3
       2: invokevirtual #734                // Method io/micronaut/data/model/runtime/RuntimePersistentEntity.getPropertyByName:(Ljava/lang/String;)Lio/micronaut/data/model/runtime/RuntimePersistentProperty;
       5: astore        5
       7: aload         5
       9: ifnonnull     13
      12: return
      13: aload         5
      15: invokevirtual #705                // Method io/micronaut/data/model/runtime/RuntimePersistentProperty.getProperty:()Lio/micronaut/core/beans/BeanProperty;
      18: aload_2
      19: aload         4
      21: invokeinterface #727,  3          // InterfaceMethod io/micronaut/core/beans/BeanProperty.convertAndSet:(Ljava/lang/Object;Ljava/lang/Object;)V
      26: return

  private <T, U> void setETagVersionIfApplicable(com.azure.cosmos.models.CosmosItemResponse<U>, io.micronaut.data.model.runtime.RuntimePersistentEntity<T>, T);
    Code:
       0: aload_2
       1: invokestatic  #602                // Method io/micronaut/data/cosmos/common/CosmosEntity.get:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lio/micronaut/data/cosmos/common/CosmosEntity;
       4: astore        4
       6: aload         4
       8: invokevirtual #738                // Method io/micronaut/data/cosmos/common/CosmosEntity.getVersionField:()Ljava/lang/String;
      11: astore        5
      13: aload         5
      15: ifnonnull     19
      18: return
      19: aload_0
      20: aload_2
      21: aload_3
      22: aload         5
      24: aload_1
      25: invokevirtual #741                // Method com/azure/cosmos/models/CosmosItemResponse.getETag:()Ljava/lang/String;
      28: invokevirtual #746                // Method setETagVersion:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Object;Ljava/lang/String;Ljava/lang/String;)V
      31: return

  private com.fasterxml.jackson.databind.node.ObjectNode updateProperties(com.fasterxml.jackson.databind.node.ObjectNode, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: invokeinterface #750,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #754,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          97
      21: aload_3
      22: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #757                // class java/util/Map$Entry
      30: astore        4
      32: aload         4
      34: invokeinterface #759,  1          // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: checkcast     #379                // class java/lang/String
      42: astore        5
      44: aload         4
      46: invokeinterface #762,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        6
      53: aload         6
      55: ifnonnull     66
      58: invokestatic  #764                // Method com/fasterxml/jackson/databind/node/NullNode.getInstance:()Lcom/fasterxml/jackson/databind/node/NullNode;
      61: astore        7
      63: goto          85
      66: aload_0
      67: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
      70: aload         6
      72: aload         6
      74: invokevirtual #588                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
      80: invokevirtual #770                // Method io/micronaut/data/cosmos/operations/CosmosSerde.serialize:(Ljava/lang/Object;Lio/micronaut/core/type/Argument;)Lcom/fasterxml/jackson/databind/JsonNode;
      83: astore        7
      85: aload_1
      86: aload         5
      88: aload         7
      90: invokevirtual #776                // Method com/fasterxml/jackson/databind/node/ObjectNode.set:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;)Lcom/fasterxml/jackson/databind/JsonNode;
      93: pop
      94: goto          12
      97: aload_1
      98: areturn

  private <E, R> java.lang.String getUpdate(io.micronaut.data.model.runtime.PreparedQuery<E, R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #780                // Method getCosmosSqlPreparedQuery:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery;
       5: astore_2
       6: aload_2
       7: invokevirtual #784                // Method io/micronaut/data/cosmos/operations/CosmosSqlPreparedQuery.getUpdate:()Ljava/lang/String;
      10: areturn

  private java.util.List<com.azure.cosmos.models.CosmosItemOperation> createBulkOperations(java.lang.Iterable<com.fasterxml.jackson.databind.node.ObjectNode>, io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$BulkOperationType, io.micronaut.data.model.runtime.RuntimePersistentEntity<?>, java.util.Optional<com.azure.cosmos.models.PartitionKey>, java.util.function.UnaryOperator<com.fasterxml.jackson.databind.node.ObjectNode>);
    Code:
       0: new           #785                // class java/util/ArrayList
       3: dup
       4: invokespecial #787                // Method java/util/ArrayList."<init>":()V
       7: astore        6
       9: new           #788                // class com/azure/cosmos/implementation/RequestOptions
      12: dup
      13: invokespecial #790                // Method com/azure/cosmos/implementation/RequestOptions."<init>":()V
      16: astore        7
      18: aload_0
      19: aload_3
      20: invokevirtual #620                // Method getPartitionKeyDefinition:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/lang/String;
      23: astore        8
      25: aload         8
      27: ldc_w         #634                // String /
      30: invokevirtual #636                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifeq          44
      36: aload         8
      38: iconst_1
      39: invokevirtual #640                // Method java/lang/String.substring:(I)Ljava/lang/String;
      42: astore        8
      44: aload         8
      46: astore        9
      48: aload_1
      49: invokeinterface #791,  1          // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      54: astore        10
      56: aload         10
      58: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      63: ifeq          160
      66: aload         10
      68: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      73: checkcast     #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      76: astore        11
      78: aload         5
      80: ifnull        97
      83: aload         5
      85: aload         11
      87: invokeinterface #794,  2          // InterfaceMethod java/util/function/UnaryOperator.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      92: checkcast     #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      95: astore        11
      97: aload_0
      98: aload         11
     100: invokevirtual #798                // Method getItemId:(Lcom/fasterxml/jackson/databind/node/ObjectNode;)Ljava/lang/String;
     103: astore        12
     105: aload         11
     107: astore        13
     109: aload         4
     111: aload_0
     112: aload         9
     114: aload         13
     116: invokedynamic #802,  0            // InvokeDynamic #21:get:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Ljava/lang/String;Lcom/fasterxml/jackson/databind/node/ObjectNode;)Ljava/util/function/Supplier;
     121: invokevirtual #805                // Method java/util/Optional.orElseGet:(Ljava/util/function/Supplier;)Ljava/lang/Object;
     124: checkcast     #132                // class com/azure/cosmos/models/PartitionKey
     127: astore        14
     129: aload         6
     131: new           #809                // class com/azure/cosmos/implementation/batch/ItemBulkOperation
     134: dup
     135: aload_2
     136: getfield      #811                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.cosmosItemOperationType:Lcom/azure/cosmos/models/CosmosItemOperationType;
     139: aload         12
     141: aload         14
     143: aload         7
     145: aload         11
     147: aconst_null
     148: invokespecial #815                // Method com/azure/cosmos/implementation/batch/ItemBulkOperation."<init>":(Lcom/azure/cosmos/models/CosmosItemOperationType;Ljava/lang/String;Lcom/azure/cosmos/models/PartitionKey;Lcom/azure/cosmos/implementation/RequestOptions;Ljava/lang/Object;Ljava/lang/Object;)V
     151: invokeinterface #818,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     156: pop
     157: goto          56
     160: aload         6
     162: areturn

  private reactor.core.publisher.Mono<java.lang.Number> executeBulk(com.azure.cosmos.CosmosAsyncContainer, com.azure.cosmos.util.CosmosPagedFlux<com.fasterxml.jackson.databind.node.ObjectNode>, io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$BulkOperationType, io.micronaut.data.model.runtime.RuntimePersistentEntity<?>, java.util.Optional<com.azure.cosmos.models.PartitionKey>, java.util.function.UnaryOperator<com.fasterxml.jackson.databind.node.ObjectNode>);
    Code:
       0: aload_2
       1: invokevirtual #151                // Method com/azure/cosmos/util/CosmosPagedFlux.byPage:()Lreactor/core/publisher/Flux;
       4: aload_0
       5: aload_3
       6: aload         4
       8: aload         5
      10: aload         6
      12: invokedynamic #821,  0            // InvokeDynamic #22:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/util/Optional;Ljava/util/function/UnaryOperator;)Ljava/util/function/Function;
      17: invokevirtual #161                // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      20: astore        7
      22: aload_1
      23: aload         7
      25: invokevirtual #824                // Method com/azure/cosmos/CosmosAsyncContainer.executeBulkOperations:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
      28: iconst_m1
      29: invokestatic  #404                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      32: aload_0
      33: aload_3
      34: invokedynamic #828,  0            // InvokeDynamic #23:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;)Ljava/util/function/BiFunction;
      39: invokevirtual #831                // Method reactor/core/publisher/Flux.reduce:(Ljava/lang/Object;Ljava/util/function/BiFunction;)Lreactor/core/publisher/Mono;
      42: areturn

  private <T> io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation<T> createCosmosInsertOneOperation(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext<T>, T);
    Code:
       0: new           #835                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #837                // Field entityEventRegistry:Lio/micronaut/data/event/EntityEventListener;
       9: aload_0
      10: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      13: aload_1
      14: aload_1
      15: invokevirtual #841                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext.getPersistentEntity:()Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      18: aload_2
      19: iconst_1
      20: invokespecial #847                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$1."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/event/EntityEventListener;Lio/micronaut/core/convert/ConversionService;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Object;Z)V
      23: areturn

  private void setIfMatchETag(com.azure.cosmos.models.CosmosItemRequestOptions, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_2
       1: ldc_w         #850                // String _etag
       4: invokevirtual #647                // Method com/fasterxml/jackson/databind/node/ObjectNode.get:(Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonNode;
       7: astore_3
       8: aload_3
       9: ifnull        21
      12: aload_1
      13: aload_3
      14: invokevirtual #670                // Method com/fasterxml/jackson/databind/JsonNode.textValue:()Ljava/lang/String;
      17: invokevirtual #852                // Method com/azure/cosmos/models/CosmosItemRequestOptions.setIfMatchETag:(Ljava/lang/String;)Lcom/azure/cosmos/models/CosmosItemRequestOptions;
      20: pop
      21: return

  private java.lang.Throwable handleCosmosOperationException(java.lang.String, java.lang.Throwable, java.lang.String, io.micronaut.data.model.runtime.RuntimePersistentEntity<?>);
    Code:
       0: aload_2
       1: instanceof    #858                // class com/azure/cosmos/CosmosException
       4: ifeq          53
       7: aload_2
       8: checkcast     #858                // class com/azure/cosmos/CosmosException
      11: astore        5
      13: aload         5
      15: invokevirtual #860                // Method com/azure/cosmos/CosmosException.getStatusCode:()I
      18: getstatic     #863                // Field io/netty/handler/codec/http/HttpResponseStatus.PRECONDITION_FAILED:Lio/netty/handler/codec/http/HttpResponseStatus;
      21: invokevirtual #869                // Method io/netty/handler/codec/http/HttpResponseStatus.code:()I
      24: if_icmpne     53
      27: aload         4
      29: invokestatic  #602                // Method io/micronaut/data/cosmos/common/CosmosEntity.get:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lio/micronaut/data/cosmos/common/CosmosEntity;
      32: astore        6
      34: aload         6
      36: invokevirtual #738                // Method io/micronaut/data/cosmos/common/CosmosEntity.getVersionField:()Ljava/lang/String;
      39: ifnull        53
      42: new           #872                // class io/micronaut/data/exceptions/OptimisticLockException
      45: dup
      46: ldc_w         #874                // String Operation failed due to optimistic locking conflict.
      49: invokespecial #876                // Method io/micronaut/data/exceptions/OptimisticLockException."<init>":(Ljava/lang/String;)V
      52: areturn
      53: aload_0
      54: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
      57: aload_3
      58: aload_1
      59: aload_2
      60: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      63: areturn

  private <T> io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext<T> createCosmosReactiveOperationContext(io.micronaut.data.model.runtime.EntityOperation<T>);
    Code:
       0: aload_1
       1: invokeinterface #883,  1          // InterfaceMethod io/micronaut/data/model/runtime/EntityOperation.getRootEntity:()Ljava/lang/Class;
       6: astore_2
       7: aload_0
       8: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
      11: aload_2
      12: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      17: astore_3
      18: aload_0
      19: aload_3
      20: invokevirtual #97                 // Method getContainer:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lcom/azure/cosmos/CosmosAsyncContainer;
      23: astore        4
      25: new           #842                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext
      28: dup
      29: aload_1
      30: invokeinterface #886,  1          // InterfaceMethod io/micronaut/data/model/runtime/EntityOperation.getAnnotationMetadata:()Lio/micronaut/core/annotation/AnnotationMetadata;
      35: aload_1
      36: invokeinterface #887,  1          // InterfaceMethod io/micronaut/data/model/runtime/EntityOperation.getRepositoryType:()Ljava/lang/Class;
      41: aload         4
      43: aload_2
      44: aload_3
      45: invokespecial #890                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext."<init>":(Lio/micronaut/core/annotation/AnnotationMetadata;Ljava/lang/Class;Lcom/azure/cosmos/CosmosAsyncContainer;Ljava/lang/Class;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)V
      48: areturn

  private <T> io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation<T> createCosmosReactiveReplaceItemOperation(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext<T>, T);
    Code:
       0: new           #893                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$2
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #837                // Field entityEventRegistry:Lio/micronaut/data/event/EntityEventListener;
       9: aload_0
      10: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      13: aload_1
      14: aload_1
      15: invokevirtual #841                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext.getPersistentEntity:()Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      18: aload_2
      19: iconst_0
      20: invokespecial #895                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$2."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/event/EntityEventListener;Lio/micronaut/core/convert/ConversionService;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Object;Z)V
      23: areturn

  private <T> io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntityOperation<T> createCosmosReactiveDeleteOneOperation(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext<T>, T);
    Code:
       0: new           #896                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$3
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #837                // Field entityEventRegistry:Lio/micronaut/data/event/EntityEventListener;
       9: aload_0
      10: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      13: aload_1
      14: aload_1
      15: invokevirtual #841                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext.getPersistentEntity:()Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      18: aload_2
      19: iconst_0
      20: invokespecial #898                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$3."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/event/EntityEventListener;Lio/micronaut/core/convert/ConversionService;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Object;Z)V
      23: areturn

  private <T> io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveEntitiesOperation<T> createCosmosReactiveBulkOperation(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext<T>, io.micronaut.data.model.runtime.BatchOperation<T>, io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$BulkOperationType);
    Code:
       0: getstatic     #345                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.CREATE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
       3: aload_3
       4: invokevirtual #899                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.equals:(Ljava/lang/Object;)Z
       7: istore        4
       9: getstatic     #463                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.DELETE:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;
      12: aload_3
      13: invokevirtual #899                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.equals:(Ljava/lang/Object;)Z
      16: istore        5
      18: aload_1
      19: invokevirtual #841                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext.getPersistentEntity:()Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      22: invokestatic  #602                // Method io/micronaut/data/cosmos/common/CosmosEntity.get:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Lio/micronaut/data/cosmos/common/CosmosEntity;
      25: astore        6
      27: aload         6
      29: invokevirtual #738                // Method io/micronaut/data/cosmos/common/CosmosEntity.getVersionField:()Ljava/lang/String;
      32: astore        7
      34: aload         7
      36: ifnull        48
      39: iload         5
      41: ifne          48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: istore        8
      51: new           #900                // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveBulkEntitiesOperation
      54: dup
      55: aload_0
      56: aload_0
      57: getfield      #837                // Field entityEventRegistry:Lio/micronaut/data/event/EntityEventListener;
      60: aload_0
      61: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      64: aload_1
      65: aload_1
      66: invokevirtual #841                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext.getPersistentEntity:()Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
      69: aload_2
      70: iload         4
      72: iload         8
      74: aload_3
      75: aload         7
      77: invokespecial #902                // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveBulkEntitiesOperation."<init>":(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/data/event/EntityEventListener;Lio/micronaut/core/convert/ConversionService;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$CosmosReactiveOperationContext;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/lang/Iterable;ZZLio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;Ljava/lang/String;)V
      80: areturn

  public org.reactivestreams.Publisher findPage(io.micronaut.data.model.runtime.PagedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #905                // Method findPage:(Lio/micronaut/data/model/runtime/PagedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher deleteAll(io.micronaut.data.model.runtime.DeleteBatchOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #909                // Method deleteAll:(Lio/micronaut/data/model/runtime/DeleteBatchOperation;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher delete(io.micronaut.data.model.runtime.DeleteOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #913                // Method delete:(Lio/micronaut/data/model/runtime/DeleteOperation;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher executeDelete(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #916                // Method executeDelete:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher executeUpdate(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #919                // Method executeUpdate:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher persistAll(io.micronaut.data.model.runtime.InsertBatchOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #922                // Method persistAll:(Lio/micronaut/data/model/runtime/InsertBatchOperation;)Lreactor/core/publisher/Flux;
       5: areturn

  public org.reactivestreams.Publisher updateAll(io.micronaut.data.model.runtime.UpdateBatchOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #926                // Method updateAll:(Lio/micronaut/data/model/runtime/UpdateBatchOperation;)Lreactor/core/publisher/Flux;
       5: areturn

  public org.reactivestreams.Publisher update(io.micronaut.data.model.runtime.UpdateOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #930                // Method update:(Lio/micronaut/data/model/runtime/UpdateOperation;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher persist(io.micronaut.data.model.runtime.InsertOperation);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #933                // Method persist:(Lio/micronaut/data/model/runtime/InsertOperation;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher findAll(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #936                // Method findAll:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Flux;
       5: areturn

  public org.reactivestreams.Publisher count(io.micronaut.data.model.runtime.PagedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #940                // Method count:(Lio/micronaut/data/model/runtime/PagedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher findAll(io.micronaut.data.model.runtime.PagedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #943                // Method findAll:(Lio/micronaut/data/model/runtime/PagedQuery;)Lreactor/core/publisher/Flux;
       5: areturn

  public org.reactivestreams.Publisher findOptional(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #946                // Method findOptional:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher findOptional(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #949                // Method findOptional:(Ljava/lang/Class;Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
       6: areturn

  public org.reactivestreams.Publisher findOne(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #250                // Method findOne:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher exists(io.micronaut.data.model.runtime.PreparedQuery);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #951                // Method exists:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lreactor/core/publisher/Mono;
       5: areturn

  public org.reactivestreams.Publisher findOne(java.lang.Class, java.io.Serializable);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #235                // Method findOne:(Ljava/lang/Class;Ljava/io/Serializable;)Lreactor/core/publisher/Mono;
       6: areturn

  public io.micronaut.core.convert.ConversionService getConversionService();
    Code:
       0: aload_0
       1: invokespecial #954                // Method io/micronaut/data/runtime/operations/internal/AbstractRepositoryOperations.getConversionService:()Lio/micronaut/data/runtime/convert/DataConversionService;
       4: areturn

  private java.lang.Number lambda$executeBulk$21(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$BulkOperationType, java.lang.Number, com.azure.cosmos.models.CosmosBulkOperationResponse);
    Code:
       0: aload_3
       1: invokevirtual #958                // Method com/azure/cosmos/models/CosmosBulkOperationResponse.getResponse:()Lcom/azure/cosmos/models/CosmosBulkItemResponse;
       4: astore        4
       6: aload_2
       7: invokevirtual #964                // Method java/lang/Number.intValue:()I
      10: iconst_m1
      11: if_icmpne     44
      14: iconst_0
      15: invokestatic  #404                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      18: astore_2
      19: aload_0
      20: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
      23: ldc_w         #971                // String ExecuteBulk
      26: aload         4
      28: invokevirtual #973                // Method com/azure/cosmos/models/CosmosBulkItemResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      31: aload         4
      33: invokevirtual #979                // Method com/azure/cosmos/models/CosmosBulkItemResponse.getActivityId:()Ljava/lang/String;
      36: aload         4
      38: invokevirtual #982                // Method com/azure/cosmos/models/CosmosBulkItemResponse.getRequestCharge:()D
      41: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      44: aload         4
      46: invokevirtual #990                // Method com/azure/cosmos/models/CosmosBulkItemResponse.getStatusCode:()I
      49: aload_1
      50: getfield      #991                // Field io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType.expectedOperationStatusCode:I
      53: if_icmpne     69
      56: aload_2
      57: checkcast     #405                // class java/lang/Integer
      60: invokevirtual #995                // Method java/lang/Integer.intValue:()I
      63: iconst_1
      64: iadd
      65: invokestatic  #404                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      68: astore_2
      69: aload_2
      70: areturn

  private org.reactivestreams.Publisher lambda$executeBulk$20(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations$BulkOperationType, io.micronaut.data.model.runtime.RuntimePersistentEntity, java.util.Optional, java.util.function.UnaryOperator, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: aload         5
       3: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
       6: aload_1
       7: aload_2
       8: aload_3
       9: aload         4
      11: invokevirtual #996                // Method createBulkOperations:(Ljava/lang/Iterable;Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations$BulkOperationType;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Ljava/util/Optional;Ljava/util/function/UnaryOperator;)Ljava/util/List;
      14: astore        6
      16: aload         6
      18: invokestatic  #1000               // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      21: areturn

  private com.azure.cosmos.models.PartitionKey lambda$createBulkOperations$19(java.lang.String, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #644                // Method getPartitionKey:(Ljava/lang/String;Lcom/fasterxml/jackson/databind/node/ObjectNode;)Lcom/azure/cosmos/models/PartitionKey;
       6: areturn

  private java.lang.Throwable lambda$findOneCustomResult$18(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1006               // String Failed to query item
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$findOneCustomResult$17(io.micronaut.data.model.DataType, java.lang.Class, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_3
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_3
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_3
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_1
      23: invokevirtual #1011               // Method io/micronaut/data/model/DataType.isArray:()Z
      26: ifeq          75
      29: aload_3
      30: invokevirtual #1014               // Method com/azure/cosmos/models/FeedResponse.getElements:()Lcom/azure/core/util/IterableStream;
      33: invokestatic  #1018               // Method io/micronaut/core/util/CollectionUtils.iterableToList:(Ljava/lang/Iterable;)Ljava/util/List;
      36: astore        4
      38: aload         4
      40: invokeinterface #1024,  1         // InterfaceMethod java/util/Collection.isEmpty:()Z
      45: ifeq          59
      48: aload         4
      50: invokeinterface #1027,  1         // InterfaceMethod java/util/Collection.toArray:()[Ljava/lang/Object;
      55: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      58: areturn
      59: aload_0
      60: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      63: aload         4
      65: aload_2
      66: invokeinterface #542,  3          // InterfaceMethod io/micronaut/data/runtime/convert/DataConversionService.convertRequired:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      71: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      74: areturn
      75: aload_0
      76: aload_3
      77: aload_2
      78: invokevirtual #1031               // Method fetchSingleResult:(Lcom/azure/cosmos/models/FeedResponse;Ljava/lang/Class;)Lreactor/core/publisher/Mono;
      81: astore        4
      83: aload         4
      85: ifnull        91
      88: aload         4
      90: areturn
      91: invokestatic  #1035               // Method reactor/core/publisher/Flux.empty:()Lreactor/core/publisher/Flux;
      94: areturn

  private java.lang.Throwable lambda$findOneEntityOrDto$16(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1006               // String Failed to query item
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$findOneEntityOrDto$15(io.micronaut.data.model.runtime.PreparedQuery, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_2
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_2
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_2
      23: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
      26: invokeinterface #515,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore_3
      32: aload_3
      33: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      38: ifeq          151
      41: aload_3
      42: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      47: checkcast     #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      50: astore        4
      52: aload_3
      53: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          72
      61: new           #528                // class io/micronaut/data/exceptions/NonUniqueResultException
      64: dup
      65: invokespecial #530                // Method io/micronaut/data/exceptions/NonUniqueResultException."<init>":()V
      68: invokestatic  #1037               // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      71: areturn
      72: aload_1
      73: invokeinterface #1040,  1         // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.isDtoProjection:()Z
      78: ifeq          110
      81: aload_1
      82: invokeinterface #504,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getResultType:()Ljava/lang/Class;
      87: invokestatic  #265                // Method io/micronaut/core/reflect/ReflectionUtils.getWrapperType:(Ljava/lang/Class;)Ljava/lang/Class;
      90: astore        5
      92: aload_0
      93: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
      96: aload         4
      98: aload         5
     100: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
     103: invokevirtual #1041               // Method io/micronaut/data/cosmos/operations/CosmosSerde.deserialize:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Lio/micronaut/core/type/Argument;)Ljava/lang/Object;
     106: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     109: areturn
     110: aload_0
     111: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
     114: aload_1
     115: invokeinterface #482,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getRootEntity:()Ljava/lang/Class;
     120: invokeinterface #86,  2           // InterfaceMethod io/micronaut/data/model/runtime/RuntimeEntityRegistry.getEntity:(Ljava/lang/Class;)Lio/micronaut/data/model/runtime/RuntimePersistentEntity;
     125: astore        5
     127: aload_0
     128: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
     131: aload         5
     133: aload         4
     135: aload_1
     136: invokeinterface #504,  1          // InterfaceMethod io/micronaut/data/model/runtime/PreparedQuery.getResultType:()Ljava/lang/Class;
     141: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
     144: invokevirtual #1045               // Method io/micronaut/data/cosmos/operations/CosmosSerde.deserialize:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Lcom/fasterxml/jackson/databind/node/ObjectNode;Lio/micronaut/core/type/Argument;)Ljava/lang/Object;
     147: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     150: areturn
     151: invokestatic  #1035               // Method reactor/core/publisher/Flux.empty:()Lreactor/core/publisher/Flux;
     154: areturn

  private java.lang.Throwable lambda$executeDelete$14(io.micronaut.data.model.runtime.RuntimePersistentEntity, java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc_w         #1048               // String Failed to delete item(s)
       4: aload_2
       5: ldc_w         #971                // String ExecuteBulk
       8: aload_1
       9: invokevirtual #1050               // Method handleCosmosOperationException:(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/lang/Throwable;
      12: areturn

  private java.lang.Throwable lambda$executeUpdate$13(io.micronaut.data.model.runtime.RuntimePersistentEntity, java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc_w         #1054               // String Failed to update item(s)
       4: aload_2
       5: ldc_w         #971                // String ExecuteBulk
       8: aload_1
       9: invokevirtual #1050               // Method handleCosmosOperationException:(Ljava/lang/String;Ljava/lang/Throwable;Ljava/lang/String;Lio/micronaut/data/model/runtime/RuntimePersistentEntity;)Ljava/lang/Throwable;
      12: areturn

  private com.fasterxml.jackson.databind.node.ObjectNode lambda$executeUpdate$12(java.util.Map, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #1056               // Method updateProperties:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Ljava/util/Map;)Lcom/fasterxml/jackson/databind/node/ObjectNode;
       6: areturn

  private java.lang.Throwable lambda$findAll$11(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1060               // String Failed to query items:
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$findAll$10(java.lang.Class, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_2
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_2
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_2
      23: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
      26: invokeinterface #1062,  1         // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      31: aload_0
      32: aload_1
      33: invokedynamic #1066,  0           // InvokeDynamic #24:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Ljava/lang/Class;)Ljava/util/function/Function;
      38: invokeinterface #1067,  2         // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #1072               // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      46: invokeinterface #1078,  2         // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #792                // class java/lang/Iterable
      54: invokestatic  #1000               // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      57: areturn

  private java.lang.Object lambda$findAll$9(java.lang.Class, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #532                // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          10
       8: aload_2
       9: areturn
      10: aload_2
      11: ifnull        26
      14: aload_0
      15: getfield      #538                // Field conversionService:Lio/micronaut/data/runtime/convert/DataConversionService;
      18: aload_2
      19: aload_1
      20: invokeinterface #542,  3          // InterfaceMethod io/micronaut/data/runtime/convert/DataConversionService.convertRequired:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      25: areturn
      26: aconst_null
      27: areturn

  private java.lang.Throwable lambda$findAll$8(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1060               // String Failed to query items:
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$findAll$7(io.micronaut.core.type.Argument, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_2
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_2
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_2
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_2
      23: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
      26: invokeinterface #1062,  1         // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      31: aload_0
      32: aload_1
      33: invokedynamic #1082,  0           // InvokeDynamic #25:apply:(Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;Lio/micronaut/core/type/Argument;)Ljava/util/function/Function;
      38: invokeinterface #1067,  2         // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      43: invokestatic  #1072               // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      46: invokeinterface #1078,  2         // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      51: checkcast     #792                // class java/lang/Iterable
      54: invokestatic  #1000               // Method reactor/core/publisher/Flux.fromIterable:(Ljava/lang/Iterable;)Lreactor/core/publisher/Flux;
      57: areturn

  private java.lang.Object lambda$findAll$6(io.micronaut.core.type.Argument, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_0
       1: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
       4: aload_2
       5: aload_1
       6: invokevirtual #1041               // Method io/micronaut/data/cosmos/operations/CosmosSerde.deserialize:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Lio/micronaut/core/type/Argument;)Ljava/lang/Object;
       9: areturn

  private static org.reactivestreams.Publisher lambda$findAll$5(java.lang.Throwable);
    Code:
       0: new           #1083               // class io/micronaut/data/cosmos/common/CosmosAccessException
       3: dup
       4: aload_0
       5: invokevirtual #1085               // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
       8: invokedynamic #1090,  0           // InvokeDynamic #26:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
      13: aload_0
      14: invokespecial #1091               // Method io/micronaut/data/cosmos/common/CosmosAccessException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      17: invokestatic  #1037               // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      20: areturn

  private java.lang.Object lambda$findAll$4(io.micronaut.core.type.Argument, com.fasterxml.jackson.databind.node.ObjectNode);
    Code:
       0: aload_0
       1: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
       4: aload_2
       5: aload_1
       6: invokevirtual #1041               // Method io/micronaut/data/cosmos/operations/CosmosSerde.deserialize:(Lcom/fasterxml/jackson/databind/node/ObjectNode;Lio/micronaut/core/type/Argument;)Ljava/lang/Object;
       9: areturn

  private java.lang.Throwable lambda$exists$3(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1094               // String Failed to execute exists query
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$exists$2(com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_1
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_1
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_1
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_1
      23: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
      26: invokeinterface #515,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: invokestatic  #665                // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      39: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      42: areturn

  private java.lang.Throwable lambda$findOne$1(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: ldc_w         #1096               // String Failed to query item by id
      10: aload_1
      11: invokestatic  #877                // Method io/micronaut/data/cosmos/common/CosmosUtils.cosmosAccessException:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)Lio/micronaut/data/cosmos/common/CosmosAccessException;
      14: areturn

  private org.reactivestreams.Publisher lambda$findOne$0(io.micronaut.data.model.runtime.RuntimePersistentEntity, java.lang.Class, com.azure.cosmos.models.FeedResponse);
    Code:
       0: aload_0
       1: getfield      #37                 // Field cosmosDiagnosticsProcessor:Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;
       4: ldc_w         #1004               // String QueryItems
       7: aload_3
       8: invokevirtual #1008               // Method com/azure/cosmos/models/FeedResponse.getCosmosDiagnostics:()Lcom/azure/cosmos/CosmosDiagnostics;
      11: aload_3
      12: invokevirtual #1009               // Method com/azure/cosmos/models/FeedResponse.getActivityId:()Ljava/lang/String;
      15: aload_3
      16: invokevirtual #1010               // Method com/azure/cosmos/models/FeedResponse.getRequestCharge:()D
      19: invokestatic  #986                // Method io/micronaut/data/cosmos/common/CosmosUtils.processDiagnostics:(Lio/micronaut/data/cosmos/operations/CosmosDiagnosticsProcessor;Ljava/lang/String;Lcom/azure/cosmos/CosmosDiagnostics;Ljava/lang/String;D)V
      22: aload_3
      23: invokevirtual #509                // Method com/azure/cosmos/models/FeedResponse.getResults:()Ljava/util/List;
      26: invokeinterface #515,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          94
      43: aload         4
      45: invokeinterface #526,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #143                // class com/fasterxml/jackson/databind/node/ObjectNode
      53: astore        5
      55: aload         4
      57: invokeinterface #521,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          76
      65: new           #528                // class io/micronaut/data/exceptions/NonUniqueResultException
      68: dup
      69: invokespecial #530                // Method io/micronaut/data/exceptions/NonUniqueResultException."<init>":()V
      72: invokestatic  #1037               // Method reactor/core/publisher/Flux.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Flux;
      75: areturn
      76: aload_0
      77: getfield      #17                 // Field cosmosSerde:Lio/micronaut/data/cosmos/operations/CosmosSerde;
      80: aload_1
      81: aload         5
      83: aload_2
      84: invokestatic  #271                // InterfaceMethod io/micronaut/core/type/Argument.of:(Ljava/lang/Class;)Lio/micronaut/core/type/Argument;
      87: invokevirtual #1045               // Method io/micronaut/data/cosmos/operations/CosmosSerde.deserialize:(Lio/micronaut/data/model/runtime/RuntimePersistentEntity;Lcom/fasterxml/jackson/databind/node/ObjectNode;Lio/micronaut/core/type/Argument;)Ljava/lang/Object;
      90: invokestatic  #410                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      93: areturn
      94: invokestatic  #1035               // Method reactor/core/publisher/Flux.empty:()Lreactor/core/publisher/Flux;
      97: areturn

  static io.micronaut.data.model.runtime.RuntimeEntityRegistry access$000(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations);
    Code:
       0: aload_0
       1: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       4: areturn

  static io.micronaut.data.model.runtime.RuntimeEntityRegistry access$100(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations);
    Code:
       0: aload_0
       1: getfield      #7                  // Field runtimeEntityRegistry:Lio/micronaut/data/model/runtime/RuntimeEntityRegistry;
       4: areturn

  static io.micronaut.data.model.runtime.AttributeConverterRegistry access$200(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations);
    Code:
       0: aload_0
       1: getfield      #1                  // Field attributeConverterRegistry:Lio/micronaut/data/model/runtime/AttributeConverterRegistry;
       4: areturn

  static {};
    Code:
       0: getstatic     #1098               // Field io/micronaut/data/runtime/config/DataSettings.QUERY_LOG:Lorg/slf4j/Logger;
       3: putstatic     #548                // Field QUERY_LOG:Lorg/slf4j/Logger;
       6: ldc           #2                  // class io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations
       8: invokestatic  #1101               // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      11: putstatic     #384                // Field LOG:Lorg/slf4j/Logger;
      14: return
}
