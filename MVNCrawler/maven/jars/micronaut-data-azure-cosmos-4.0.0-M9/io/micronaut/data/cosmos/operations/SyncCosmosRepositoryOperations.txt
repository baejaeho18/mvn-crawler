Compiled from "SyncCosmosRepositoryOperations.java"
final class io.micronaut.data.cosmos.operations.SyncCosmosRepositoryOperations implements io.micronaut.data.cosmos.operations.CosmosRepositoryOperations,io.micronaut.data.operations.reactive.BlockingReactorRepositoryOperations,io.micronaut.data.operations.async.AsyncCapableRepository,io.micronaut.data.operations.reactive.ReactiveCapableRepository,io.micronaut.data.runtime.query.MethodContextAwareStoredQueryDecorator,io.micronaut.data.runtime.query.PreparedQueryDecorator {
  private final io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations reactiveCosmosRepositoryOperations;

  private java.util.concurrent.ExecutorService executorService;

  private io.micronaut.data.runtime.operations.ExecutorAsyncOperations asyncOperations;

  protected io.micronaut.data.cosmos.operations.SyncCosmosRepositoryOperations(io.micronaut.data.cosmos.operations.DefaultReactiveCosmosRepositoryOperations, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       9: aload_0
      10: aload_2
      11: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      14: return

  public io.micronaut.data.runtime.operations.ExecutorAsyncOperations async();
    Code:
       0: aload_0
       1: getfield      #17                 // Field asyncOperations:Lio/micronaut/data/runtime/operations/ExecutorAsyncOperations;
       4: astore_1
       5: aload_1
       6: ifnonnull     64
       9: aload_0
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #17                 // Field asyncOperations:Lio/micronaut/data/runtime/operations/ExecutorAsyncOperations;
      17: astore_1
      18: aload_1
      19: ifnonnull     54
      22: new           #21                 // class io/micronaut/data/runtime/operations/ExecutorAsyncOperations
      25: dup
      26: aload_0
      27: aload_0
      28: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      31: ifnull        41
      34: aload_0
      35: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      38: goto          45
      41: aload_0
      42: invokevirtual #23                 // Method newLocalThreadPool:()Ljava/util/concurrent/ExecutorService;
      45: invokespecial #27                 // Method io/micronaut/data/runtime/operations/ExecutorAsyncOperations."<init>":(Lio/micronaut/data/operations/RepositoryOperations;Ljava/util/concurrent/Executor;)V
      48: astore_1
      49: aload_0
      50: aload_1
      51: putfield      #17                 // Field asyncOperations:Lio/micronaut/data/runtime/operations/ExecutorAsyncOperations;
      54: aload_2
      55: monitorexit
      56: goto          64
      59: astore_3
      60: aload_2
      61: monitorexit
      62: aload_3
      63: athrow
      64: aload_0
      65: getfield      #17                 // Field asyncOperations:Lio/micronaut/data/runtime/operations/ExecutorAsyncOperations;
      68: areturn
    Exception table:
       from    to  target type
          13    56    59   any
          59    62    59   any

  public io.micronaut.data.operations.reactive.ReactorReactiveRepositoryOperations reactive();
    Code:
       0: aload_0
       1: getfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       4: areturn

  private java.util.concurrent.ExecutorService newLocalThreadPool();
    Code:
       0: aload_0
       1: invokestatic  #30                 // Method java/util/concurrent/Executors.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;
       4: putfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
       7: aload_0
       8: getfield      #13                 // Field executorService:Ljava/util/concurrent/ExecutorService;
      11: areturn

  public io.micronaut.context.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       4: invokevirtual #35                 // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations.getApplicationContext:()Lio/micronaut/context/ApplicationContext;
       7: areturn

  public <E, R> io.micronaut.data.model.runtime.StoredQuery<E, R> decorate(io.micronaut.aop.MethodInvocationContext<?, ?>, io.micronaut.data.model.runtime.StoredQuery<E, R>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       4: aload_1
       5: aload_2
       6: invokevirtual #41                 // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations.decorate:(Lio/micronaut/aop/MethodInvocationContext;Lio/micronaut/data/model/runtime/StoredQuery;)Lio/micronaut/data/model/runtime/StoredQuery;
       9: areturn

  public <E, R> io.micronaut.data.model.runtime.PreparedQuery<E, R> decorate(io.micronaut.data.model.runtime.PreparedQuery<E, R>);
    Code:
       0: aload_0
       1: getfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       4: aload_1
       5: invokevirtual #45                 // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations.decorate:(Lio/micronaut/data/model/runtime/PreparedQuery;)Lio/micronaut/data/model/runtime/PreparedQuery;
       8: areturn

  public io.micronaut.core.convert.ConversionService getConversionService();
    Code:
       0: aload_0
       1: getfield      #7                  // Field reactiveCosmosRepositoryOperations:Lio/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations;
       4: invokevirtual #48                 // Method io/micronaut/data/cosmos/operations/DefaultReactiveCosmosRepositoryOperations.getConversionService:()Lio/micronaut/data/runtime/convert/DataConversionService;
       7: areturn

  public io.micronaut.data.operations.reactive.ReactiveRepositoryOperations reactive();
    Code:
       0: aload_0
       1: invokevirtual #52                 // Method reactive:()Lio/micronaut/data/operations/reactive/ReactorReactiveRepositoryOperations;
       4: areturn

  public io.micronaut.data.operations.async.AsyncRepositoryOperations async();
    Code:
       0: aload_0
       1: invokevirtual #56                 // Method async:()Lio/micronaut/data/runtime/operations/ExecutorAsyncOperations;
       4: areturn
}
