Compiled from "StringPrefixMap.java"
public class nl.basjes.collections.prefixmap.StringPrefixMap<V extends java.io.Serializable> implements nl.basjes.collections.PrefixMap<V>, java.io.Serializable {
  private final java.lang.Boolean caseSensitive;

  private final nl.basjes.collections.prefixmap.PrefixTrie<V> prefixTrie;

  private final java.util.TreeMap<java.lang.String, V> allPrefixes;

  nl.basjes.collections.prefixmap.PrefixTrie<V> createTrie(boolean);
    Code:
       0: new           #3                  // class nl/basjes/collections/prefixmap/StringPrefixTrie
       3: dup
       4: iload_1
       5: invokespecial #4                  // Method nl/basjes/collections/prefixmap/StringPrefixTrie."<init>":(Z)V
       8: areturn

  public nl.basjes.collections.prefixmap.StringPrefixMap(boolean);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       9: putfield      #2                  // Field caseSensitive:Ljava/lang/Boolean;
      12: aload_0
      13: aload_0
      14: iload_1
      15: invokevirtual #7                  // Method createTrie:(Z)Lnl/basjes/collections/prefixmap/PrefixTrie;
      18: putfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
      21: aload_0
      22: new           #9                  // class java/util/TreeMap
      25: dup
      26: invokespecial #10                 // Method java/util/TreeMap."<init>":()V
      29: putfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
      32: return

  public static void configureKryo(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #11                 // class com/esotericsoftware/kryo/Kryo
       4: astore_1
       5: aload_1
       6: ldc           #12                 // class nl/basjes/collections/prefixmap/StringPrefixMap
       8: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.register:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      11: pop
      12: aload_1
      13: ldc           #3                  // class nl/basjes/collections/prefixmap/StringPrefixTrie
      15: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.register:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      18: pop
      19: aload_1
      20: ldc           #9                  // class java/util/TreeMap
      22: invokevirtual #13                 // Method com/esotericsoftware/kryo/Kryo.register:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      25: pop
      26: return

  public boolean containsPrefix(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.containsPrefix:(Ljava/lang/String;)Z
      10: ireturn

  private java.lang.String storedKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: invokeinterface #15,  1           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.caseSensitive:()Z
       9: ifeq          14
      12: aload_1
      13: areturn
      14: aload_1
      15: invokevirtual #16                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      18: areturn

  public V put(java.lang.String, V);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #18                 // String The prefix may not be null
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #17                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #20                 // String The value may not be null
      24: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
      32: aload_1
      33: aload_2
      34: invokeinterface #21,  3           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.add:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/io/Serializable;
      39: astore_3
      40: aload_3
      41: ifnonnull     58
      44: aload_0
      45: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
      48: aload_0
      49: aload_1
      50: invokespecial #22                 // Method storedKey:(Ljava/lang/String;)Ljava/lang/String;
      53: aload_2
      54: invokevirtual #23                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: aload_3
      59: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: invokevirtual #24                 // Method java/util/TreeMap.size:()I
       7: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: invokeinterface #25,  1           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.clear:()V
       9: aload_0
      10: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
      13: invokevirtual #26                 // Method java/util/TreeMap.clear:()V
      16: return

  public V remove(java.lang.String);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #17                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #18                 // String The prefix may not be null
      10: invokespecial #19                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
      18: aload_1
      19: invokeinterface #27,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.remove:(Ljava/lang/String;)Ljava/io/Serializable;
      24: astore_2
      25: aload_2
      26: ifnull        42
      29: aload_0
      30: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
      33: aload_0
      34: aload_1
      35: invokespecial #22                 // Method storedKey:(Ljava/lang/String;)Ljava/lang/String;
      38: invokevirtual #28                 // Method java/util/TreeMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      41: pop
      42: aload_2
      43: areturn

  public V get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.get:(Ljava/lang/String;)Ljava/io/Serializable;
      10: areturn

  public V getShortestMatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.getShortestMatch:(Ljava/lang/String;)Ljava/io/Serializable;
      10: areturn

  public V getLongestMatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field prefixTrie:Lnl/basjes/collections/prefixmap/PrefixTrie;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.getLongestMatch:(Ljava/lang/String;)Ljava/io/Serializable;
      10: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: invokevirtual #32                 // Method java/util/TreeMap.entrySet:()Ljava/util/Set;
       7: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: aload_0
       5: aload_1
       6: checkcast     #33                 // class java/lang/String
       9: invokespecial #22                 // Method storedKey:(Ljava/lang/String;)Ljava/lang/String;
      12: invokevirtual #34                 // Method java/util/TreeMap.containsKey:(Ljava/lang/Object;)Z
      15: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: aload_1
       5: invokevirtual #35                 // Method java/util/TreeMap.containsValue:(Ljava/lang/Object;)Z
       8: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: invokevirtual #36                 // Method java/util/TreeMap.keySet:()Ljava/util/Set;
       7: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: invokevirtual #37                 // Method java/util/TreeMap.values:()Ljava/util/Collection;
       7: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #33                 // class java/lang/String
       5: aload_2
       6: checkcast     #38                 // class java/io/Serializable
       9: invokevirtual #39                 // Method put:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/io/Serializable;
      12: areturn

  static java.lang.Boolean access$000(nl.basjes.collections.prefixmap.StringPrefixMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field caseSensitive:Ljava/lang/Boolean;
       4: areturn

  static java.util.TreeMap access$100(nl.basjes.collections.prefixmap.StringPrefixMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field allPrefixes:Ljava/util/TreeMap;
       4: areturn
}
