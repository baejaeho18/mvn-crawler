Compiled from "StringPrefixTrie.java"
class nl.basjes.collections.prefixmap.StringPrefixTrie<V extends java.io.Serializable> implements nl.basjes.collections.prefixmap.PrefixTrie<V> {
  private final boolean caseSensitive;

  private final int charIndex;

  protected java.util.TreeMap<java.lang.Character, nl.basjes.collections.prefixmap.PrefixTrie<V>> childNodes;

  private V theValue;

  nl.basjes.collections.prefixmap.StringPrefixTrie(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #1                  // Method "<init>":(ZI)V
       6: return

  nl.basjes.collections.prefixmap.StringPrefixTrie(boolean, int);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field caseSensitive:Z
       9: aload_0
      10: iload_2
      11: putfield      #4                  // Field charIndex:I
      14: return

  public V add(java.lang.String, V);
    Code:
       0: aload_0
       1: getfield      #5                  // Field theValue:Ljava/io/Serializable;
       4: astore_3
       5: aload_0
       6: getfield      #4                  // Field charIndex:I
       9: aload_1
      10: invokevirtual #6                  // Method java/lang/String.length:()I
      13: if_icmpne     23
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field theValue:Ljava/io/Serializable;
      21: aload_3
      22: areturn
      23: aload_1
      24: aload_0
      25: getfield      #4                  // Field charIndex:I
      28: invokevirtual #7                  // Method java/lang/String.charAt:(I)C
      31: istore        4
      33: aload_0
      34: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      37: ifnonnull     51
      40: aload_0
      41: new           #9                  // class java/util/TreeMap
      44: dup
      45: invokespecial #10                 // Method java/util/TreeMap."<init>":()V
      48: putfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      51: aload_0
      52: getfield      #3                  // Field caseSensitive:Z
      55: ifeq          94
      58: aload_0
      59: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      62: iload         4
      64: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      67: aload_0
      68: invokedynamic #12,  0             // InvokeDynamic #0:apply:(Lnl/basjes/collections/prefixmap/StringPrefixTrie;)Ljava/util/function/Function;
      73: invokevirtual #13                 // Method java/util/TreeMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      76: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
      79: astore        5
      81: aload         5
      83: aload_1
      84: aload_2
      85: invokeinterface #15,  3           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.add:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/io/Serializable;
      90: astore_3
      91: goto          156
      94: iload         4
      96: invokestatic  #16                 // Method java/lang/Character.toLowerCase:(C)C
      99: istore        5
     101: iload         4
     103: invokestatic  #17                 // Method java/lang/Character.toUpperCase:(C)C
     106: istore        6
     108: aload_0
     109: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
     112: iload         5
     114: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     117: aload_0
     118: invokedynamic #18,  0             // InvokeDynamic #1:apply:(Lnl/basjes/collections/prefixmap/StringPrefixTrie;)Ljava/util/function/Function;
     123: invokevirtual #13                 // Method java/util/TreeMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
     126: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
     129: astore        7
     131: aload         7
     133: aload_1
     134: aload_2
     135: invokeinterface #15,  3           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.add:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/io/Serializable;
     140: astore_3
     141: aload_0
     142: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
     145: iload         6
     147: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
     150: aload         7
     152: invokevirtual #19                 // Method java/util/TreeMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     155: pop
     156: aload_3
     157: areturn

  public V remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charIndex:I
       4: aload_1
       5: invokevirtual #6                  // Method java/lang/String.length:()I
       8: if_icmpne     23
      11: aload_0
      12: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      15: astore_2
      16: aload_0
      17: aconst_null
      18: putfield      #5                  // Field theValue:Ljava/io/Serializable;
      21: aload_2
      22: areturn
      23: aload_0
      24: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      27: ifnonnull     32
      30: aconst_null
      31: areturn
      32: aload_1
      33: aload_0
      34: getfield      #4                  // Field charIndex:I
      37: invokevirtual #7                  // Method java/lang/String.charAt:(I)C
      40: istore_2
      41: aload_0
      42: getfield      #3                  // Field caseSensitive:Z
      45: ifne          53
      48: iload_2
      49: invokestatic  #16                 // Method java/lang/Character.toLowerCase:(C)C
      52: istore_2
      53: aload_0
      54: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      57: iload_2
      58: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      61: invokevirtual #20                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
      67: astore_3
      68: aload_3
      69: ifnonnull     74
      72: aconst_null
      73: areturn
      74: aload_3
      75: aload_1
      76: invokeinterface #21,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.remove:(Ljava/lang/String;)Ljava/io/Serializable;
      81: areturn

  public boolean containsPrefix(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #22                 // Method get:(Ljava/lang/String;)Ljava/io/Serializable;
       5: ifnull        12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public V get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charIndex:I
       4: aload_1
       5: invokevirtual #6                  // Method java/lang/String.length:()I
       8: if_icmpne     16
      11: aload_0
      12: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      15: areturn
      16: aload_0
      17: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      20: ifnonnull     25
      23: aconst_null
      24: areturn
      25: aload_1
      26: aload_0
      27: getfield      #4                  // Field charIndex:I
      30: invokevirtual #7                  // Method java/lang/String.charAt:(I)C
      33: istore_2
      34: aload_0
      35: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      38: iload_2
      39: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      42: invokevirtual #20                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
      48: astore_3
      49: aload_3
      50: ifnonnull     55
      53: aconst_null
      54: areturn
      55: aload_3
      56: aload_1
      57: invokeinterface #23,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.get:(Ljava/lang/String;)Ljava/io/Serializable;
      62: areturn

  public V getShortestMatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #5                  // Field theValue:Ljava/io/Serializable;
       4: ifnonnull     25
       7: aload_0
       8: getfield      #4                  // Field charIndex:I
      11: aload_1
      12: invokevirtual #6                  // Method java/lang/String.length:()I
      15: if_icmpeq     25
      18: aload_0
      19: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      22: ifnonnull     30
      25: aload_0
      26: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      29: areturn
      30: aload_1
      31: aload_0
      32: getfield      #4                  // Field charIndex:I
      35: invokevirtual #7                  // Method java/lang/String.charAt:(I)C
      38: istore_2
      39: aload_0
      40: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      43: iload_2
      44: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      47: invokevirtual #20                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
      53: astore_3
      54: aload_3
      55: ifnonnull     60
      58: aconst_null
      59: areturn
      60: aload_3
      61: aload_1
      62: invokeinterface #24,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.getShortestMatch:(Ljava/lang/String;)Ljava/io/Serializable;
      67: areturn

  public V getLongestMatch(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charIndex:I
       4: aload_1
       5: invokevirtual #6                  // Method java/lang/String.length:()I
       8: if_icmpeq     18
      11: aload_0
      12: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      15: ifnonnull     23
      18: aload_0
      19: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      22: areturn
      23: aload_1
      24: aload_0
      25: getfield      #4                  // Field charIndex:I
      28: invokevirtual #7                  // Method java/lang/String.charAt:(I)C
      31: istore_2
      32: aload_0
      33: getfield      #8                  // Field childNodes:Ljava/util/TreeMap;
      36: iload_2
      37: invokestatic  #11                 // Method java/lang/Character.valueOf:(C)Ljava/lang/Character;
      40: invokevirtual #20                 // Method java/util/TreeMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #14                 // class nl/basjes/collections/prefixmap/PrefixTrie
      46: astore_3
      47: aload_3
      48: ifnonnull     56
      51: aload_0
      52: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      55: areturn
      56: aload_3
      57: aload_1
      58: invokeinterface #25,  2           // InterfaceMethod nl/basjes/collections/prefixmap/PrefixTrie.getLongestMatch:(Ljava/lang/String;)Ljava/io/Serializable;
      63: astore        4
      65: aload         4
      67: ifnonnull     77
      70: aload_0
      71: getfield      #5                  // Field theValue:Ljava/io/Serializable;
      74: goto          79
      77: aload         4
      79: areturn

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #8                  // Field childNodes:Ljava/util/TreeMap;
       5: aload_0
       6: aconst_null
       7: putfield      #5                  // Field theValue:Ljava/io/Serializable;
      10: return

  public boolean caseSensitive();
    Code:
       0: aload_0
       1: getfield      #3                  // Field caseSensitive:Z
       4: ireturn

  private nl.basjes.collections.prefixmap.PrefixTrie lambda$add$1(java.lang.Character);
    Code:
       0: new           #26                 // class nl/basjes/collections/prefixmap/StringPrefixTrie
       3: dup
       4: iconst_0
       5: aload_0
       6: getfield      #4                  // Field charIndex:I
       9: iconst_1
      10: iadd
      11: invokespecial #1                  // Method "<init>":(ZI)V
      14: areturn

  private nl.basjes.collections.prefixmap.PrefixTrie lambda$add$0(java.lang.Character);
    Code:
       0: new           #26                 // class nl/basjes/collections/prefixmap/StringPrefixTrie
       3: dup
       4: iconst_1
       5: aload_0
       6: getfield      #4                  // Field charIndex:I
       9: iconst_1
      10: iadd
      11: invokespecial #1                  // Method "<init>":(ZI)V
      14: areturn
}
