Compiled from "StringPrefixMap.java"
public class nl.basjes.collections.prefixmap.StringPrefixMap$KryoSerializer extends com.esotericsoftware.kryo.Serializer<nl.basjes.collections.prefixmap.StringPrefixMap<java.io.Serializable>> {
  public nl.basjes.collections.prefixmap.StringPrefixMap$KryoSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, nl.basjes.collections.prefixmap.StringPrefixMap<java.io.Serializable>);
    Code:
       0: aload_2
       1: aload_3
       2: invokestatic  #2                  // Method nl/basjes/collections/prefixmap/StringPrefixMap.access$000:(Lnl/basjes/collections/prefixmap/StringPrefixMap;)Ljava/lang/Boolean;
       5: invokevirtual #3                  // Method java/lang/Boolean.booleanValue:()Z
       8: invokevirtual #4                  // Method com/esotericsoftware/kryo/io/Output.writeBoolean:(Z)V
      11: aload_1
      12: aload_2
      13: aload_3
      14: invokestatic  #5                  // Method nl/basjes/collections/prefixmap/StringPrefixMap.access$100:(Lnl/basjes/collections/prefixmap/StringPrefixMap;)Ljava/util/TreeMap;
      17: invokevirtual #6                  // Method com/esotericsoftware/kryo/Kryo.writeClassAndObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      20: return

  public nl.basjes.collections.prefixmap.StringPrefixMap<java.io.Serializable> read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<? extends nl.basjes.collections.prefixmap.StringPrefixMap<java.io.Serializable>>);
    Code:
       0: aload_2
       1: invokevirtual #7                  // Method com/esotericsoftware/kryo/io/Input.readBoolean:()Z
       4: istore        4
       6: aload_3
       7: iconst_1
       8: anewarray     #8                  // class java/lang/Class
      11: dup
      12: iconst_0
      13: getstatic     #9                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      16: aastore
      17: invokevirtual #10                 // Method java/lang/Class.getDeclaredConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;
      20: iconst_1
      21: anewarray     #11                 // class java/lang/Object
      24: dup
      25: iconst_0
      26: iload         4
      28: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      31: aastore
      32: invokevirtual #13                 // Method java/lang/reflect/Constructor.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;
      35: checkcast     #14                 // class nl/basjes/collections/prefixmap/StringPrefixMap
      38: astore        5
      40: aload_1
      41: aload_2
      42: invokevirtual #15                 // Method com/esotericsoftware/kryo/Kryo.readClassAndObject:(Lcom/esotericsoftware/kryo/io/Input;)Ljava/lang/Object;
      45: checkcast     #16                 // class java/util/TreeMap
      48: astore        6
      50: aload         6
      52: invokeinterface #17,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      57: invokeinterface #18,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      62: astore        7
      64: aload         7
      66: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      71: ifeq          119
      74: aload         7
      76: invokeinterface #20,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      81: checkcast     #21                 // class java/util/Map$Entry
      84: astore        8
      86: aload         8
      88: invokeinterface #22,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      93: checkcast     #23                 // class java/io/Serializable
      96: astore        9
      98: aload         5
     100: aload         8
     102: invokeinterface #24,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     107: checkcast     #25                 // class java/lang/String
     110: aload         9
     112: invokevirtual #26                 // Method nl/basjes/collections/prefixmap/StringPrefixMap.put:(Ljava/lang/String;Ljava/io/Serializable;)Ljava/io/Serializable;
     115: pop
     116: goto          64
     119: aload         5
     121: areturn
     122: astore        4
     124: new           #31                 // class com/esotericsoftware/kryo/KryoException
     127: dup
     128: ldc           #32                 // String Deserialization of StringPrefixMap failed
     130: aload         4
     132: invokespecial #33                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     135: athrow
    Exception table:
       from    to  target type
           0   121   122   Class java/lang/InstantiationException
           0   121   122   Class java/lang/IllegalAccessException
           0   121   122   Class java/lang/reflect/InvocationTargetException
           0   121   122   Class java/lang/NoSuchMethodException

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #34                 // Method read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Lnl/basjes/collections/prefixmap/StringPrefixMap;
       7: areturn

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: checkcast     #14                 // class nl/basjes/collections/prefixmap/StringPrefixMap
       7: invokevirtual #35                 // Method write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Lnl/basjes/collections/prefixmap/StringPrefixMap;)V
      10: return
}
