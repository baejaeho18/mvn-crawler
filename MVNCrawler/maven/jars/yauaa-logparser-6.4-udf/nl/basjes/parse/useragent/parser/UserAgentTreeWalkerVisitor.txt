Compiled from "UserAgentTreeWalkerVisitor.java"
public interface nl.basjes.parse.useragent.parser.UserAgentTreeWalkerVisitor<T> extends nl.basjes.shaded.org.antlr.v4.runtime.tree.ParseTreeVisitor<T> {
  public abstract T visitMatcherBase(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherBaseContext);

  public abstract T visitIsSyntaxError(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$IsSyntaxErrorContext);

  public abstract T visitMatcherPathIsNull(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathIsNullContext);

  public abstract T visitMatcherExtract(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherExtractContext);

  public abstract T visitMatcherVariable(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherVariableContext);

  public abstract T visitMatcherCleanVersion(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherCleanVersionContext);

  public abstract T visitMatcherPathLookupPrefix(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathLookupPrefixContext);

  public abstract T visitMatcherPathLookupContains(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathLookupContainsContext);

  public abstract T visitMatcherConcatPrefix(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherConcatPrefixContext);

  public abstract T visitMatcherPathIsInLookup(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathIsInLookupContext);

  public abstract T visitMatcherWordRange(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherWordRangeContext);

  public abstract T visitMatcherSegmentRange(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherSegmentRangeContext);

  public abstract T visitMatcherNormalizeBrand(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherNormalizeBrandContext);

  public abstract T visitMatcherConcat(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherConcatContext);

  public abstract T visitMatcherPathIsInLookupContains(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathIsInLookupContainsContext);

  public abstract T visitMatcherDefaultIfNull(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherDefaultIfNullContext);

  public abstract T visitMatcherPath(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathContext);

  public abstract T visitMatcherPathIsNotInLookupPrefix(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathIsNotInLookupPrefixContext);

  public abstract T visitMatcherReplaceString(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherReplaceStringContext);

  public abstract T visitMatcherPathLookup(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathLookupContext);

  public abstract T visitMatcherExtractBrandFromUrl(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherExtractBrandFromUrlContext);

  public abstract T visitMatcherConcatPostfix(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherConcatPostfixContext);

  public abstract T visitMatcherPathIsInLookupPrefix(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$MatcherPathIsInLookupPrefixContext);

  public abstract T visitPathFixedValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$PathFixedValueContext);

  public abstract T visitPathVariable(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$PathVariableContext);

  public abstract T visitPathWalk(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$PathWalkContext);

  public abstract T visitStepDown(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepDownContext);

  public abstract T visitStepUp(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepUpContext);

  public abstract T visitStepNext(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNextContext);

  public abstract T visitStepNext2(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNext2Context);

  public abstract T visitStepNext3(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNext3Context);

  public abstract T visitStepNext4(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNext4Context);

  public abstract T visitStepPrev(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepPrevContext);

  public abstract T visitStepPrev2(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepPrev2Context);

  public abstract T visitStepPrev3(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepPrev3Context);

  public abstract T visitStepPrev4(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepPrev4Context);

  public abstract T visitStepEqualsValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepEqualsValueContext);

  public abstract T visitStepNotEqualsValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNotEqualsValueContext);

  public abstract T visitStepStartsWithValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepStartsWithValueContext);

  public abstract T visitStepEndsWithValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepEndsWithValueContext);

  public abstract T visitStepContainsValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepContainsValueContext);

  public abstract T visitStepNotContainsValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepNotContainsValueContext);

  public abstract T visitStepIsInSet(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepIsInSetContext);

  public abstract T visitStepIsNotInSet(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepIsNotInSetContext);

  public abstract T visitStepWordRange(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepWordRangeContext);

  public abstract T visitStepBackToFull(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$StepBackToFullContext);

  public abstract T visitNumberRangeStartToEnd(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeStartToEndContext);

  public abstract T visitNumberRangeOpenStartToEnd(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeOpenStartToEndContext);

  public abstract T visitNumberRangeStartToOpenEnd(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeStartToOpenEndContext);

  public abstract T visitNumberRangeSingleValue(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeSingleValueContext);

  public abstract T visitNumberRangeAll(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeAllContext);

  public abstract T visitNumberRangeEmpty(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$NumberRangeEmptyContext);

  public abstract T visitWordRangeStartToEnd(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$WordRangeStartToEndContext);

  public abstract T visitWordRangeFirstWords(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$WordRangeFirstWordsContext);

  public abstract T visitWordRangeLastWords(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$WordRangeLastWordsContext);

  public abstract T visitWordRangeSingleWord(nl.basjes.parse.useragent.parser.UserAgentTreeWalkerParser$WordRangeSingleWordContext);
}
