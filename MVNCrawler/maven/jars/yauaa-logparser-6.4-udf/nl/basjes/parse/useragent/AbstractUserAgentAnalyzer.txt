Compiled from "AbstractUserAgentAnalyzer.java"
public class nl.basjes.parse.useragent.AbstractUserAgentAnalyzer extends nl.basjes.parse.useragent.AbstractUserAgentAnalyzerDirect implements java.io.Serializable {
  public static final int DEFAULT_PARSE_CACHE_SIZE;

  protected int cacheSize;

  private transient java.util.Map<java.lang.String, nl.basjes.parse.useragent.UserAgent$ImmutableUserAgent> parseCache;

  protected nl.basjes.parse.useragent.AbstractUserAgentAnalyzer();
    Code:
       0: aload_0
       1: invokespecial #35                 // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect."<init>":()V
       4: aload_0
       5: sipush        10000
       8: putfield      #37                 // Field cacheSize:I
      11: aload_0
      12: aconst_null
      13: putfield      #39                 // Field parseCache:Ljava/util/Map;
      16: aload_0
      17: invokespecial #42                 // Method initializeCache:()V
      20: return

  public synchronized void destroy();
    Code:
       0: aload_0
       1: invokespecial #47                 // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect.destroy:()V
       4: aload_0
       5: getfield      #39                 // Field parseCache:Ljava/util/Map;
       8: ifnull        25
      11: aload_0
      12: getfield      #39                 // Field parseCache:Ljava/util/Map;
      15: invokeinterface #52,  1           // InterfaceMethod java/util/Map.clear:()V
      20: aload_0
      21: aconst_null
      22: putfield      #39                 // Field parseCache:Ljava/util/Map;
      25: return

  private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #63                 // Method java/io/ObjectInputStream.defaultReadObject:()V
       4: aload_0
       5: invokespecial #42                 // Method initializeCache:()V
       8: return

  public static void configureKryo(java.lang.Object);
    Code:
       0: aload_0
       1: checkcast     #69                 // class com/esotericsoftware/kryo/Kryo
       4: astore_1
       5: aload_1
       6: ldc           #2                  // class nl/basjes/parse/useragent/AbstractUserAgentAnalyzer
       8: invokevirtual #73                 // Method com/esotericsoftware/kryo/Kryo.register:(Ljava/lang/Class;)Lcom/esotericsoftware/kryo/Registration;
      11: pop
      12: aload_1
      13: invokestatic  #75                 // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect.configureKryo:(Ljava/lang/Object;)V
      16: return

  public void disableCaching();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #84                 // Method setCacheSize:(I)V
       5: return

  public void setCacheSize(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokestatic  #90                 // Method java/lang/Math.max:(II)I
       6: putfield      #37                 // Field cacheSize:I
       9: aload_0
      10: invokespecial #42                 // Method initializeCache:()V
      13: return

  public void clearCache();
    Code:
       0: aload_0
       1: getfield      #39                 // Field parseCache:Ljava/util/Map;
       4: ifnull        16
       7: aload_0
       8: getfield      #39                 // Field parseCache:Ljava/util/Map;
      11: invokeinterface #52,  1           // InterfaceMethod java/util/Map.clear:()V
      16: return

  private synchronized void initializeCache();
    Code:
       0: aload_0
       1: getfield      #37                 // Field cacheSize:I
       4: iconst_1
       5: if_icmplt     29
       8: aload_0
       9: new           #94                 // class org/apache/commons/collections4/map/LRUMap
      12: dup
      13: aload_0
      14: getfield      #37                 // Field cacheSize:I
      17: invokespecial #96                 // Method org/apache/commons/collections4/map/LRUMap."<init>":(I)V
      20: invokestatic  #102                // Method java/util/Collections.synchronizedMap:(Ljava/util/Map;)Ljava/util/Map;
      23: putfield      #39                 // Field parseCache:Ljava/util/Map;
      26: goto          34
      29: aload_0
      30: aconst_null
      31: putfield      #39                 // Field parseCache:Ljava/util/Map;
      34: return

  public int getCacheSize();
    Code:
       0: aload_0
       1: getfield      #37                 // Field cacheSize:I
       4: ireturn

  public nl.basjes.parse.useragent.UserAgent$ImmutableUserAgent parse(nl.basjes.parse.useragent.UserAgent$MutableUserAgent);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: getfield      #39                 // Field parseCache:Ljava/util/Map;
      10: ifnonnull     23
      13: aload_1
      14: invokevirtual #109                // Method nl/basjes/parse/useragent/UserAgent$MutableUserAgent.reset:()V
      17: aload_0
      18: aload_1
      19: invokespecial #111                // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect.parse:(Lnl/basjes/parse/useragent/UserAgent$MutableUserAgent;)Lnl/basjes/parse/useragent/UserAgent$ImmutableUserAgent;
      22: areturn
      23: aload_1
      24: invokevirtual #115                // Method nl/basjes/parse/useragent/UserAgent$MutableUserAgent.getUserAgentString:()Ljava/lang/String;
      27: astore_2
      28: aload_0
      29: getfield      #39                 // Field parseCache:Ljava/util/Map;
      32: aload_2
      33: invokeinterface #119,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      38: checkcast     #18                 // class nl/basjes/parse/useragent/UserAgent$ImmutableUserAgent
      41: astore_3
      42: aload_3
      43: ifnull        48
      46: aload_3
      47: areturn
      48: aload_0
      49: aload_1
      50: invokespecial #111                // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect.parse:(Lnl/basjes/parse/useragent/UserAgent$MutableUserAgent;)Lnl/basjes/parse/useragent/UserAgent$ImmutableUserAgent;
      53: astore_3
      54: aload_0
      55: getfield      #39                 // Field parseCache:Ljava/util/Map;
      58: aload_2
      59: aload_3
      60: invokeinterface #125,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_3
      67: areturn

  public java.lang.String toString();
    Code:
       0: new           #134                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #135                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #137                // String UserAgentAnalyzer{cacheSize=
       9: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #37                 // Field cacheSize:I
      16: invokevirtual #144                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #146                // String ,
      21: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokespecial #148                // Method nl/basjes/parse/useragent/AbstractUserAgentAnalyzerDirect.toString:()Ljava/lang/String;
      28: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #150                // String }
      33: invokevirtual #141                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #151                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static void access$000(nl.basjes.parse.useragent.AbstractUserAgentAnalyzer);
    Code:
       0: aload_0
       1: invokespecial #42                 // Method initializeCache:()V
       4: return
}
