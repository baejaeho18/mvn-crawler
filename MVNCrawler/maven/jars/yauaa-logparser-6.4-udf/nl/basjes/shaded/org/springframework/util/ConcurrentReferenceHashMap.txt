Compiled from "ConcurrentReferenceHashMap.java"
public class nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V> extends java.util.AbstractMap<K, V> implements java.util.concurrent.ConcurrentMap<K, V> {
  private static final int DEFAULT_INITIAL_CAPACITY;

  private static final float DEFAULT_LOAD_FACTOR;

  private static final int DEFAULT_CONCURRENCY_LEVEL;

  private static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceType DEFAULT_REFERENCE_TYPE;

  private static final int MAXIMUM_CONCURRENCY_LEVEL;

  private static final int MAXIMUM_SEGMENT_SIZE;

  private final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V>.Segment[] segments;

  private final float loadFactor;

  private final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceType referenceType;

  private final int shift;

  private volatile java.util.Set<java.util.Map$Entry<K, V>> entrySet;

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap();
    Code:
       0: aload_0
       1: bipush        16
       3: ldc           #67                 // float 0.75f
       5: bipush        16
       7: getstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
      10: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      13: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #67                 // float 0.75f
       4: bipush        16
       6: getstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       9: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      12: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int, float);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: bipush        16
       5: getstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       8: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      11: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #67                 // float 0.75f
       4: iload_2
       5: getstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       8: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      11: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int, nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceType);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #67                 // float 0.75f
       4: bipush        16
       6: aload_2
       7: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      10: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int, float, int);
    Code:
       0: aload_0
       1: iload_1
       2: fload_2
       3: iload_3
       4: getstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       7: invokespecial #91                 // Method "<init>":(IFILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;)V
      10: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap(int, float, int, nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceType);
    Code:
       0: aload_0
       1: invokespecial #103                // Method java/util/AbstractMap."<init>":()V
       4: iload_1
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ldc           #105                // String Initial capacity must not be negative
      15: invokestatic  #111                // Method nl/basjes/shaded/org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      18: fload_2
      19: fconst_0
      20: fcmpl
      21: ifle          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #113                // String Load factor must be positive
      31: invokestatic  #111                // Method nl/basjes/shaded/org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: iload_3
      35: ifle          42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ldc           #115                // String Concurrency level must be positive
      45: invokestatic  #111                // Method nl/basjes/shaded/org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      48: aload         4
      50: ldc           #117                // String Reference type must not be null
      52: invokestatic  #121                // Method nl/basjes/shaded/org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      55: aload_0
      56: fload_2
      57: putfield      #123                // Field loadFactor:F
      60: aload_0
      61: iload_3
      62: ldc           #72                 // int 65536
      64: invokestatic  #127                // Method calculateShift:(II)I
      67: putfield      #129                // Field shift:I
      70: iconst_1
      71: aload_0
      72: getfield      #129                // Field shift:I
      75: ishl
      76: istore        5
      78: aload_0
      79: aload         4
      81: putfield      #131                // Field referenceType:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
      84: iload_1
      85: iload         5
      87: iadd
      88: i2l
      89: lconst_1
      90: lsub
      91: iload         5
      93: i2l
      94: ldiv
      95: l2i
      96: istore        6
      98: iconst_1
      99: iload         6
     101: ldc           #74                 // int 1073741824
     103: invokestatic  #127                // Method calculateShift:(II)I
     106: ishl
     107: istore        7
     109: ldc           #43                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment
     111: iload         5
     113: invokestatic  #137                // Method java/lang/reflect/Array.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;
     116: checkcast     #138                // class "[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;"
     119: checkcast     #138                // class "[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;"
     122: astore        8
     124: iload         7
     126: i2f
     127: aload_0
     128: invokevirtual #142                // Method getLoadFactor:()F
     131: fmul
     132: f2i
     133: istore        9
     135: iconst_0
     136: istore        10
     138: iload         10
     140: aload         8
     142: arraylength
     143: if_icmpge     169
     146: aload         8
     148: iload         10
     150: new           #43                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment
     153: dup
     154: aload_0
     155: iload         7
     157: iload         9
     159: invokespecial #145                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;II)V
     162: aastore
     163: iinc          10, 1
     166: goto          138
     169: aload_0
     170: aload         8
     172: putfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
     175: return

  protected final float getLoadFactor();
    Code:
       0: aload_0
       1: getfield      #123                // Field loadFactor:F
       4: freturn

  protected final int getSegmentsSize();
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: arraylength
       5: ireturn

  protected final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V>.Segment getSegment(int);
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: iload_1
       5: aaload
       6: areturn

  protected nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V>.ReferenceManager createReferenceManager();
    Code:
       0: new           #16                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager
       3: dup
       4: aload_0
       5: invokespecial #164                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;)V
       8: areturn

  protected int getHash(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #172                // Method java/lang/Object.hashCode:()I
       8: goto          12
      11: iconst_0
      12: istore_2
      13: iload_2
      14: iload_2
      15: bipush        15
      17: ishl
      18: sipush        -12931
      21: ixor
      22: iadd
      23: istore_2
      24: iload_2
      25: iload_2
      26: bipush        10
      28: iushr
      29: ixor
      30: istore_2
      31: iload_2
      32: iload_2
      33: iconst_3
      34: ishl
      35: iadd
      36: istore_2
      37: iload_2
      38: iload_2
      39: bipush        6
      41: iushr
      42: ixor
      43: istore_2
      44: iload_2
      45: iload_2
      46: iconst_2
      47: ishl
      48: iload_2
      49: bipush        14
      51: ishl
      52: iadd
      53: iadd
      54: istore_2
      55: iload_2
      56: iload_2
      57: bipush        16
      59: iushr
      60: ixor
      61: istore_2
      62: iload_2
      63: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #182                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;
       5: invokevirtual #186                // Method getReference:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;
       8: astore_2
       9: aload_2
      10: ifnull        22
      13: aload_2
      14: invokeinterface #189,  1          // InterfaceMethod nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry;
      19: goto          23
      22: aconst_null
      23: astore_3
      24: aload_3
      25: ifnull        35
      28: aload_3
      29: invokevirtual #193                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry.getValue:()Ljava/lang/Object;
      32: goto          36
      35: aconst_null
      36: areturn

  public V getOrDefault(java.lang.Object, V);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #182                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;
       5: invokevirtual #186                // Method getReference:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;
       8: astore_3
       9: aload_3
      10: ifnull        22
      13: aload_3
      14: invokeinterface #189,  1          // InterfaceMethod nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry;
      19: goto          23
      22: aconst_null
      23: astore        4
      25: aload         4
      27: ifnull        38
      30: aload         4
      32: invokevirtual #193                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry.getValue:()Ljava/lang/Object;
      35: goto          39
      38: aload_2
      39: areturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #182                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;
       5: invokevirtual #186                // Method getReference:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;
       8: astore_2
       9: aload_2
      10: ifnull        22
      13: aload_2
      14: invokeinterface #189,  1          // InterfaceMethod nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry;
      19: goto          23
      22: aconst_null
      23: astore_3
      24: aload_3
      25: ifnull        43
      28: aload_3
      29: invokevirtual #209                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry.getKey:()Ljava/lang/Object;
      32: aload_1
      33: invokestatic  #215                // Method nl/basjes/shaded/org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      36: ifeq          43
      39: iconst_1
      40: goto          44
      43: iconst_0
      44: ireturn

  protected final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> getReference(java.lang.Object, nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Restructure);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method getHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: iload_3
       8: invokespecial #222                // Method getSegmentForHash:(I)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
      11: aload_1
      12: iload_3
      13: aload_2
      14: invokevirtual #225                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.getReference:(Ljava/lang/Object;ILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Restructure;)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;
      17: areturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokespecial #231                // Method put:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
       7: areturn

  public V putIfAbsent(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #231                // Method put:(Ljava/lang/Object;Ljava/lang/Object;Z)Ljava/lang/Object;
       7: areturn

  private V put(K, V, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: new           #57                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$1
       5: dup
       6: aload_0
       7: iconst_2
       8: anewarray     #31                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      11: dup
      12: iconst_0
      13: getstatic     #239                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #242                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESIZE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      22: aastore
      23: iload_3
      24: aload_2
      25: invokespecial #245                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$1."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;ZLjava/lang/Object;)V
      28: invokespecial #249                // Method doTask:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      31: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: new           #55                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$2
       5: dup
       6: aload_0
       7: iconst_2
       8: anewarray     #31                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      11: dup
      12: iconst_0
      13: getstatic     #254                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #257                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      22: aastore
      23: invokespecial #260                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$2."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;)V
      26: invokespecial #249                // Method doTask:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      29: areturn

  public boolean remove(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: new           #53                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$3
       5: dup
       6: aload_0
       7: iconst_2
       8: anewarray     #31                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      11: dup
      12: iconst_0
      13: getstatic     #254                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #257                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      22: aastore
      23: aload_2
      24: invokespecial #263                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$3."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;Ljava/lang/Object;)V
      27: invokespecial #249                // Method doTask:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      30: checkcast     #265                // class java/lang/Boolean
      33: astore_3
      34: getstatic     #269                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      37: aload_3
      38: invokevirtual #272                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      41: ireturn

  public boolean replace(K, V, V);
    Code:
       0: aload_0
       1: aload_1
       2: new           #51                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$4
       5: dup
       6: aload_0
       7: iconst_2
       8: anewarray     #31                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      11: dup
      12: iconst_0
      13: getstatic     #239                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #257                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      22: aastore
      23: aload_2
      24: aload_3
      25: invokespecial #281                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$4."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;Ljava/lang/Object;Ljava/lang/Object;)V
      28: invokespecial #249                // Method doTask:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      31: checkcast     #265                // class java/lang/Boolean
      34: astore        4
      36: getstatic     #269                // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      39: aload         4
      41: invokevirtual #272                // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      44: ireturn

  public V replace(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: new           #49                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$5
       5: dup
       6: aload_0
       7: iconst_2
       8: anewarray     #31                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      11: dup
      12: iconst_0
      13: getstatic     #239                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      16: aastore
      17: dup
      18: iconst_1
      19: getstatic     #257                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      22: aastore
      23: aload_2
      24: invokespecial #282                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$5."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;Ljava/lang/Object;)V
      27: invokespecial #249                // Method doTask:(Ljava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      30: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #285                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.clear:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  public void purgeUnreferencedEntries();
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     32
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: iconst_0
      23: invokevirtual #293                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.restructureIfNecessary:(Z)V
      26: iinc          3, 1
      29: goto          10
      32: return

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       6: astore_2
       7: aload_2
       8: arraylength
       9: istore_3
      10: iconst_0
      11: istore        4
      13: iload         4
      15: iload_3
      16: if_icmpge     39
      19: aload_2
      20: iload         4
      22: aaload
      23: astore        5
      25: iload_1
      26: aload         5
      28: invokevirtual #296                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.getCount:()I
      31: iadd
      32: istore_1
      33: iinc          4, 1
      36: goto          13
      39: iload_1
      40: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     36
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #296                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.getCount:()I
      25: ifle          30
      28: iconst_0
      29: ireturn
      30: iinc          3, 1
      33: goto          10
      36: iconst_1
      37: ireturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #302                // Field entrySet:Ljava/util/Set;
       4: astore_1
       5: aload_1
       6: ifnonnull     24
       9: new           #25                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$EntrySet
      12: dup
      13: aload_0
      14: aconst_null
      15: invokespecial #305                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$EntrySet."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$1;)V
      18: astore_1
      19: aload_0
      20: aload_1
      21: putfield      #302                // Field entrySet:Ljava/util/Set;
      24: aload_1
      25: areturn

  private <T> T doTask(java.lang.Object, nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #219                // Method getHash:(Ljava/lang/Object;)I
       5: istore_3
       6: aload_0
       7: iload_3
       8: invokespecial #222                // Method getSegmentForHash:(I)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
      11: iload_3
      12: aload_1
      13: aload_2
      14: invokevirtual #312                // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment.doTask:(ILjava/lang/Object;Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Task;)Ljava/lang/Object;
      17: areturn

  private nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap<K, V>.Segment getSegmentForHash(int);
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: iload_1
       5: bipush        32
       7: aload_0
       8: getfield      #129                // Field shift:I
      11: isub
      12: iushr
      13: aload_0
      14: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
      17: arraylength
      18: iconst_1
      19: isub
      20: iand
      21: aaload
      22: areturn

  protected static int calculateShift(int, int);
    Code:
       0: iconst_0
       1: istore_2
       2: iconst_1
       3: istore_3
       4: iload_3
       5: iload_0
       6: if_icmpge     24
       9: iload_3
      10: iload_1
      11: if_icmpge     24
      14: iload_3
      15: iconst_1
      16: ishl
      17: istore_3
      18: iinc          2, 1
      21: goto          4
      24: iload_2
      25: ireturn

  static nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Segment[] access$200(nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap);
    Code:
       0: aload_0
       1: getfield      #147                // Field segments:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Segment;
       4: areturn

  static nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceType access$400(nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap);
    Code:
       0: aload_0
       1: getfield      #131                // Field referenceType:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       4: areturn

  static {};
    Code:
       0: getstatic     #325                // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.SOFT:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       3: putstatic     #88                 // Field DEFAULT_REFERENCE_TYPE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       6: return
}
