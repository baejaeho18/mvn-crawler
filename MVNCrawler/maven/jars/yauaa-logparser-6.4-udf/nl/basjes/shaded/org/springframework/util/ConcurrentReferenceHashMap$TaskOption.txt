Compiled from "ConcurrentReferenceHashMap.java"
final class nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption extends java.lang.Enum<nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption> {
  public static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption RESTRUCTURE_BEFORE;

  public static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption RESTRUCTURE_AFTER;

  public static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption SKIP_IF_EMPTY;

  public static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption RESIZE;

  private static final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption[] $VALUES;

  public static nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption[] values();
    Code:
       0: getstatic     #20                 // Field $VALUES:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
       3: invokevirtual #25                 // Method "[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;".clone:()Ljava/lang/Object;
       6: checkcast     #21                 // class "[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;"
       9: areturn

  public static nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
       2: aload_0
       3: invokestatic  #31                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
       9: areturn

  private nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$TaskOption();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #39                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  static {};
    Code:
       0: new           #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
       3: dup
       4: ldc           #42                 // String RESTRUCTURE_BEFORE
       6: iconst_0
       7: invokespecial #43                 // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #45                 // Field RESTRUCTURE_BEFORE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      13: new           #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      16: dup
      17: ldc           #46                 // String RESTRUCTURE_AFTER
      19: iconst_1
      20: invokespecial #43                 // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #48                 // Field RESTRUCTURE_AFTER:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      26: new           #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      29: dup
      30: ldc           #49                 // String SKIP_IF_EMPTY
      32: iconst_2
      33: invokespecial #43                 // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #51                 // Field SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      39: new           #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      42: dup
      43: ldc           #52                 // String RESIZE
      45: iconst_3
      46: invokespecial #43                 // Method "<init>":(Ljava/lang/String;I)V
      49: putstatic     #54                 // Field RESIZE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      52: iconst_4
      53: anewarray     #2                  // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption
      56: dup
      57: iconst_0
      58: getstatic     #45                 // Field RESTRUCTURE_BEFORE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      61: aastore
      62: dup
      63: iconst_1
      64: getstatic     #48                 // Field RESTRUCTURE_AFTER:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      67: aastore
      68: dup
      69: iconst_2
      70: getstatic     #51                 // Field SKIP_IF_EMPTY:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      73: aastore
      74: dup
      75: iconst_3
      76: getstatic     #54                 // Field RESIZE:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      79: aastore
      80: putstatic     #20                 // Field $VALUES:[Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      83: return
}
