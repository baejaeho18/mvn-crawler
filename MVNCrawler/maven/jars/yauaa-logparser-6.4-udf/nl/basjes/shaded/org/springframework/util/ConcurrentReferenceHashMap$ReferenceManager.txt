Compiled from "ConcurrentReferenceHashMap.java"
public class nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager {
  private final java.lang.ref.ReferenceQueue<nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>> queue;

  final nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap this$0;

  protected nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager(nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field this$0:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #35                 // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #37                 // class java/lang/ref/ReferenceQueue
      13: dup
      14: invokespecial #38                 // Method java/lang/ref/ReferenceQueue."<init>":()V
      17: putfield      #40                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      20: return

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> createReference(nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>, int, nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>);
    Code:
       0: aload_0
       1: getfield      #32                 // Field this$0:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;
       4: invokestatic  #54                 // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap.access$400:(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap;)Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
       7: getstatic     #58                 // Field nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType.WEAK:Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$ReferenceType;
      10: if_acmpne     28
      13: new           #16                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$WeakEntryReference
      16: dup
      17: aload_1
      18: iload_2
      19: aload_3
      20: aload_0
      21: getfield      #40                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      24: invokespecial #61                 // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$WeakEntryReference."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry;ILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/ref/ReferenceQueue;)V
      27: areturn
      28: new           #19                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference
      31: dup
      32: aload_1
      33: iload_2
      34: aload_3
      35: aload_0
      36: getfield      #40                 // Field queue:Ljava/lang/ref/ReferenceQueue;
      39: invokespecial #62                 // Method nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$SoftEntryReference."<init>":(Lnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Entry;ILnl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/ref/ReferenceQueue;)V
      42: areturn

  public nl.basjes.shaded.org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> pollForPurge();
    Code:
       0: aload_0
       1: getfield      #40                 // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #74                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: checkcast     #13                 // class nl/basjes/shaded/org/springframework/util/ConcurrentReferenceHashMap$Reference
      10: areturn
}
