Compiled from "PredictionMode.java"
public final class nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode extends java.lang.Enum<nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode> {
  public static final nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode SLL;

  public static final nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode LL;

  public static final nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode LL_EXACT_AMBIG_DETECTION;

  private static final nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode[] $VALUES;

  public static nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode[] values();
    Code:
       0: getstatic     #22                 // Field $VALUES:[Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
       3: invokevirtual #27                 // Method "[Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;".clone:()Ljava/lang/Object;
       6: checkcast     #23                 // class "[Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;"
       9: areturn

  public static nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode valueOf(java.lang.String);
    Code:
       0: ldc           #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
       2: aload_0
       3: invokestatic  #32                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
       9: areturn

  private nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode();
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #39                 // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: return

  public static boolean hasSLLConflictTerminatingPrediction(nl.basjes.shaded.org.antlr.v4.runtime.atn.PredictionMode, nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: aload_1
       1: invokestatic  #46                 // Method allConfigsInRuleStopStates:(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet;)Z
       4: ifeq          9
       7: iconst_1
       8: ireturn
       9: aload_0
      10: getstatic     #48                 // Field SLL:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      13: if_acmpne     82
      16: aload_1
      17: getfield      #54                 // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.hasSemanticContext:Z
      20: ifeq          82
      23: new           #50                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet
      26: dup
      27: invokespecial #56                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet."<init>":()V
      30: astore_2
      31: aload_1
      32: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          80
      45: aload_3
      46: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      54: astore        4
      56: new           #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      59: dup
      60: aload         4
      62: getstatic     #77                 // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/SemanticContext.NONE:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/SemanticContext;
      65: invokespecial #80                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig."<init>":(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig;Lnl/basjes/shaded/org/antlr/v4/runtime/atn/SemanticContext;)V
      68: astore        4
      70: aload_2
      71: aload         4
      73: invokevirtual #84                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.add:(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig;)Z
      76: pop
      77: goto          36
      80: aload_2
      81: astore_1
      82: aload_1
      83: invokestatic  #88                 // Method getConflictingAltSubsets:(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet;)Ljava/util/Collection;
      86: astore_2
      87: aload_2
      88: invokestatic  #92                 // Method hasConflictingAltSet:(Ljava/util/Collection;)Z
      91: ifeq          105
      94: aload_1
      95: invokestatic  #95                 // Method hasStateAssociatedWithOneAlt:(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet;)Z
      98: ifne          105
     101: iconst_1
     102: goto          106
     105: iconst_0
     106: istore_3
     107: iload_3
     108: ireturn

  public static boolean hasConfigInRuleStopState(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          39
      14: aload_1
      15: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      23: astore_2
      24: aload_2
      25: getfield      #112                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.state:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNState;
      28: instanceof    #114                // class nl/basjes/shaded/org/antlr/v4/runtime/atn/RuleStopState
      31: ifeq          36
      34: iconst_1
      35: ireturn
      36: goto          5
      39: iconst_0
      40: ireturn

  public static boolean allConfigsInRuleStopStates(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: aload_0
       1: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      11: ifeq          39
      14: aload_1
      15: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      20: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      23: astore_2
      24: aload_2
      25: getfield      #112                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.state:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNState;
      28: instanceof    #114                // class nl/basjes/shaded/org/antlr/v4/runtime/atn/RuleStopState
      31: ifne          36
      34: iconst_0
      35: ireturn
      36: goto          5
      39: iconst_1
      40: ireturn

  public static int resolvesToJustOneViableAlt(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokestatic  #121                // Method getSingleViableAlt:(Ljava/util/Collection;)I
       4: ireturn

  public static boolean allSubsetsConflict(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokestatic  #126                // Method hasNonConflictingAltSet:(Ljava/util/Collection;)Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public static boolean hasNonConflictingAltSet(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_1
      17: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #129                // class java/util/BitSet
      25: astore_2
      26: aload_2
      27: invokevirtual #133                // Method java/util/BitSet.cardinality:()I
      30: iconst_1
      31: if_icmpne     36
      34: iconst_1
      35: ireturn
      36: goto          7
      39: iconst_0
      40: ireturn

  public static boolean hasConflictingAltSet(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          39
      16: aload_1
      17: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #129                // class java/util/BitSet
      25: astore_2
      26: aload_2
      27: invokevirtual #133                // Method java/util/BitSet.cardinality:()I
      30: iconst_1
      31: if_icmple     36
      34: iconst_1
      35: ireturn
      36: goto          7
      39: iconst_0
      40: ireturn

  public static boolean allSubsetsEqual(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_1
       7: aload_1
       8: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      13: checkcast     #129                // class java/util/BitSet
      16: astore_2
      17: aload_1
      18: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          49
      26: aload_1
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #129                // class java/util/BitSet
      35: astore_3
      36: aload_3
      37: aload_2
      38: invokevirtual #140                // Method java/util/BitSet.equals:(Ljava/lang/Object;)Z
      41: ifne          46
      44: iconst_0
      45: ireturn
      46: goto          17
      49: iconst_1
      50: ireturn

  public static int getUniqueAlt(java.util.Collection<java.util.BitSet>);
    Code:
       0: aload_0
       1: invokestatic  #149                // Method getAlts:(Ljava/util/Collection;)Ljava/util/BitSet;
       4: astore_1
       5: aload_1
       6: invokevirtual #133                // Method java/util/BitSet.cardinality:()I
       9: iconst_1
      10: if_icmpne     19
      13: aload_1
      14: iconst_0
      15: invokevirtual #153                // Method java/util/BitSet.nextSetBit:(I)I
      18: ireturn
      19: iconst_0
      20: ireturn

  public static java.util.BitSet getAlts(java.util.Collection<java.util.BitSet>);
    Code:
       0: new           #129                // class java/util/BitSet
       3: dup
       4: invokespecial #156                // Method java/util/BitSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_2
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #129                // class java/util/BitSet
      33: astore_3
      34: aload_1
      35: aload_3
      36: invokevirtual #160                // Method java/util/BitSet.or:(Ljava/util/BitSet;)V
      39: goto          15
      42: aload_1
      43: areturn

  public static java.util.BitSet getAlts(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: new           #129                // class java/util/BitSet
       3: dup
       4: invokespecial #156                // Method java/util/BitSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          43
      22: aload_2
      23: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      31: astore_3
      32: aload_1
      33: aload_3
      34: getfield      #165                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.alt:I
      37: invokevirtual #169                // Method java/util/BitSet.set:(I)V
      40: goto          13
      43: aload_1
      44: areturn

  public static java.util.Collection<java.util.BitSet> getConflictingAltSubsets(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: new           #11                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode$AltAndContextMap
       3: dup
       4: invokespecial #171                // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode$AltAndContextMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          76
      22: aload_2
      23: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      31: astore_3
      32: aload_1
      33: aload_3
      34: invokevirtual #175                // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode$AltAndContextMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      37: checkcast     #129                // class java/util/BitSet
      40: astore        4
      42: aload         4
      44: ifnonnull     64
      47: new           #129                // class java/util/BitSet
      50: dup
      51: invokespecial #156                // Method java/util/BitSet."<init>":()V
      54: astore        4
      56: aload_1
      57: aload_3
      58: aload         4
      60: invokevirtual #179                // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode$AltAndContextMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: pop
      64: aload         4
      66: aload_3
      67: getfield      #165                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.alt:I
      70: invokevirtual #169                // Method java/util/BitSet.set:(I)V
      73: goto          13
      76: aload_1
      77: invokevirtual #182                // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode$AltAndContextMap.values:()Ljava/util/Collection;
      80: areturn

  public static java.util.Map<nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNState, java.util.BitSet> getStateToAltMap(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: new           #189                // class java/util/HashMap
       3: dup
       4: invokespecial #190                // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokevirtual #60                 // Method nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet.iterator:()Ljava/util/Iterator;
      12: astore_2
      13: aload_2
      14: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      19: ifeq          86
      22: aload_2
      23: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: checkcast     #71                 // class nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig
      31: astore_3
      32: aload_1
      33: aload_3
      34: getfield      #112                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.state:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNState;
      37: invokeinterface #193,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      42: checkcast     #129                // class java/util/BitSet
      45: astore        4
      47: aload         4
      49: ifnonnull     74
      52: new           #129                // class java/util/BitSet
      55: dup
      56: invokespecial #156                // Method java/util/BitSet."<init>":()V
      59: astore        4
      61: aload_1
      62: aload_3
      63: getfield      #112                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.state:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNState;
      66: aload         4
      68: invokeinterface #194,  3          // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload         4
      76: aload_3
      77: getfield      #165                // Field nl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfig.alt:I
      80: invokevirtual #169                // Method java/util/BitSet.set:(I)V
      83: goto          13
      86: aload_1
      87: areturn

  public static boolean hasStateAssociatedWithOneAlt(nl.basjes.shaded.org.antlr.v4.runtime.atn.ATNConfigSet);
    Code:
       0: aload_0
       1: invokestatic  #199                // Method getStateToAltMap:(Lnl/basjes/shaded/org/antlr/v4/runtime/atn/ATNConfigSet;)Ljava/util/Map;
       4: astore_1
       5: aload_1
       6: invokeinterface #200,  1          // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          49
      26: aload_2
      27: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #129                // class java/util/BitSet
      35: astore_3
      36: aload_3
      37: invokevirtual #133                // Method java/util/BitSet.cardinality:()I
      40: iconst_1
      41: if_icmpne     46
      44: iconst_1
      45: ireturn
      46: goto          17
      49: iconst_0
      50: ireturn

  public static int getSingleViableAlt(java.util.Collection<java.util.BitSet>);
    Code:
       0: new           #129                // class java/util/BitSet
       3: dup
       4: invokespecial #156                // Method java/util/BitSet."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #127,  1          // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #66,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_2
      25: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #129                // class java/util/BitSet
      33: astore_3
      34: aload_3
      35: iconst_0
      36: invokevirtual #153                // Method java/util/BitSet.nextSetBit:(I)I
      39: istore        4
      41: aload_1
      42: iload         4
      44: invokevirtual #169                // Method java/util/BitSet.set:(I)V
      47: aload_1
      48: invokevirtual #133                // Method java/util/BitSet.cardinality:()I
      51: iconst_1
      52: if_icmple     57
      55: iconst_0
      56: ireturn
      57: goto          15
      60: aload_1
      61: iconst_0
      62: invokevirtual #153                // Method java/util/BitSet.nextSetBit:(I)I
      65: ireturn

  static {};
    Code:
       0: new           #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
       3: dup
       4: ldc           #205                // String SLL
       6: iconst_0
       7: invokespecial #206                // Method "<init>":(Ljava/lang/String;I)V
      10: putstatic     #48                 // Field SLL:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      13: new           #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
      16: dup
      17: ldc           #207                // String LL
      19: iconst_1
      20: invokespecial #206                // Method "<init>":(Ljava/lang/String;I)V
      23: putstatic     #209                // Field LL:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      26: new           #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
      29: dup
      30: ldc           #210                // String LL_EXACT_AMBIG_DETECTION
      32: iconst_2
      33: invokespecial #206                // Method "<init>":(Ljava/lang/String;I)V
      36: putstatic     #212                // Field LL_EXACT_AMBIG_DETECTION:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      39: iconst_3
      40: anewarray     #2                  // class nl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode
      43: dup
      44: iconst_0
      45: getstatic     #48                 // Field SLL:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      48: aastore
      49: dup
      50: iconst_1
      51: getstatic     #209                // Field LL:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      54: aastore
      55: dup
      56: iconst_2
      57: getstatic     #212                // Field LL_EXACT_AMBIG_DETECTION:Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      60: aastore
      61: putstatic     #22                 // Field $VALUES:[Lnl/basjes/shaded/org/antlr/v4/runtime/atn/PredictionMode;
      64: return
}
