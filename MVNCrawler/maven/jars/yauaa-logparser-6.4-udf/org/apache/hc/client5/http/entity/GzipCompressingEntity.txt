Compiled from "GzipCompressingEntity.java"
public class org.apache.hc.client5.http.entity.GzipCompressingEntity extends org.apache.hc.core5.http.io.entity.HttpEntityWrapper {
  private static final java.lang.String GZIP_CODEC;

  public org.apache.hc.client5.http.entity.GzipCompressingEntity(org.apache.hc.core5.http.HttpEntity);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/apache/hc/core5/http/io/entity/HttpEntityWrapper."<init>":(Lorg/apache/hc/core5/http/HttpEntity;)V
       5: return

  public java.lang.String getContentEncoding();
    Code:
       0: ldc           #2                  // String gzip
       2: areturn

  public long getContentLength();
    Code:
       0: ldc2_w        #3                  // long -1l
       3: lreturn

  public boolean isChunked();
    Code:
       0: iconst_1
       1: ireturn

  public java.io.InputStream getContent() throws java.io.IOException;
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #6                  // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public void writeTo(java.io.OutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #7                  // String Output stream
       3: invokestatic  #8                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #9                  // class java/util/zip/GZIPOutputStream
      10: dup
      11: aload_1
      12: invokespecial #10                 // Method java/util/zip/GZIPOutputStream."<init>":(Ljava/io/OutputStream;)V
      15: astore_2
      16: aload_0
      17: aload_2
      18: invokespecial #11                 // Method org/apache/hc/core5/http/io/entity/HttpEntityWrapper.writeTo:(Ljava/io/OutputStream;)V
      21: aload_2
      22: invokevirtual #12                 // Method java/util/zip/GZIPOutputStream.close:()V
      25: return
}
