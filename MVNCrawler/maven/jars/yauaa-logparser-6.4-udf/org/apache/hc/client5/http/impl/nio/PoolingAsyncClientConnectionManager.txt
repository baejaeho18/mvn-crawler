Compiled from "PoolingAsyncClientConnectionManager.java"
public class org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager implements org.apache.hc.client5.http.nio.AsyncClientConnectionManager, org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute> {
  private static final org.slf4j.Logger LOG;

  public static final int DEFAULT_MAX_TOTAL_CONNECTIONS;

  public static final int DEFAULT_MAX_CONNECTIONS_PER_ROUTE;

  private final org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.nio.ManagedAsyncClientConnection> pool;

  private final org.apache.hc.client5.http.nio.AsyncClientConnectionOperator connectionOperator;

  private final java.util.concurrent.atomic.AtomicBoolean closed;

  private volatile org.apache.hc.core5.util.TimeValue validateAfterInactivity;

  private static final java.util.concurrent.atomic.AtomicLong COUNT;

  public org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager();
    Code:
       0: aload_0
       1: invokestatic  #5                  // Method org/apache/hc/core5/http/config/RegistryBuilder.create:()Lorg/apache/hc/core5/http/config/RegistryBuilder;
       4: ldc           #6                  // String https
       6: invokestatic  #7                  // Method org/apache/hc/client5/http/ssl/DefaultClientTlsStrategy.getDefault:()Lorg/apache/hc/core5/http/nio/ssl/TlsStrategy;
       9: invokevirtual #8                  // Method org/apache/hc/core5/http/config/RegistryBuilder.register:(Ljava/lang/String;Ljava/lang/Object;)Lorg/apache/hc/core5/http/config/RegistryBuilder;
      12: invokevirtual #9                  // Method org/apache/hc/core5/http/config/RegistryBuilder.build:()Lorg/apache/hc/core5/http/config/Registry;
      15: invokespecial #10                 // Method "<init>":(Lorg/apache/hc/core5/http/config/Lookup;)V
      18: return

  public org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #11                 // Field org/apache/hc/core5/pool/PoolConcurrencyPolicy.STRICT:Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;
       5: getstatic     #12                 // Field org/apache/hc/core5/util/TimeValue.NEG_ONE_MILLISECOND:Lorg/apache/hc/core5/util/TimeValue;
       8: invokespecial #13                 // Method "<init>":(Lorg/apache/hc/core5/http/config/Lookup;Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;Lorg/apache/hc/core5/util/TimeValue;)V
      11: return

  public org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>, org.apache.hc.core5.pool.PoolConcurrencyPolicy, org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #14                 // Field org/apache/hc/core5/pool/PoolReusePolicy.LIFO:Lorg/apache/hc/core5/pool/PoolReusePolicy;
       6: aload_3
       7: invokespecial #15                 // Method "<init>":(Lorg/apache/hc/core5/http/config/Lookup;Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/util/TimeValue;)V
      10: return

  public org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>, org.apache.hc.core5.pool.PoolConcurrencyPolicy, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: aconst_null
       8: invokespecial #16                 // Method "<init>":(Lorg/apache/hc/core5/http/config/Lookup;Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/client5/http/SchemePortResolver;Lorg/apache/hc/client5/http/DnsResolver;)V
      11: return

  public org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.core5.http.config.Lookup<org.apache.hc.core5.http.nio.ssl.TlsStrategy>, org.apache.hc.core5.pool.PoolConcurrencyPolicy, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.util.TimeValue, org.apache.hc.client5.http.SchemePortResolver, org.apache.hc.client5.http.DnsResolver);
    Code:
       0: aload_0
       1: new           #17                 // class org/apache/hc/client5/http/impl/nio/DefaultAsyncClientConnectionOperator
       4: dup
       5: aload_1
       6: aload         5
       8: aload         6
      10: invokespecial #18                 // Method org/apache/hc/client5/http/impl/nio/DefaultAsyncClientConnectionOperator."<init>":(Lorg/apache/hc/core5/http/config/Lookup;Lorg/apache/hc/client5/http/SchemePortResolver;Lorg/apache/hc/client5/http/DnsResolver;)V
      13: aload_2
      14: aload_3
      15: aload         4
      17: invokespecial #19                 // Method "<init>":(Lorg/apache/hc/client5/http/nio/AsyncClientConnectionOperator;Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/util/TimeValue;)V
      20: return

  protected org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.client5.http.nio.AsyncClientConnectionOperator, org.apache.hc.core5.pool.PoolConcurrencyPolicy, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #21                 // String Connection operator
       8: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #23                 // class org/apache/hc/client5/http/nio/AsyncClientConnectionOperator
      14: putfield      #24                 // Field connectionOperator:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionOperator;
      17: getstatic     #25                 // Field org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$3.$SwitchMap$org$apache$hc$core5$pool$PoolConcurrencyPolicy:[I
      20: aload_2
      21: ifnull        28
      24: aload_2
      25: goto          31
      28: getstatic     #11                 // Field org/apache/hc/core5/pool/PoolConcurrencyPolicy.STRICT:Lorg/apache/hc/core5/pool/PoolConcurrencyPolicy;
      31: invokevirtual #26                 // Method org/apache/hc/core5/pool/PoolConcurrencyPolicy.ordinal:()I
      34: iaload
      35: lookupswitch  { // 2
                     1: 60
                     2: 81
               default: 100
          }
      60: aload_0
      61: new           #27                 // class org/apache/hc/core5/pool/StrictConnPool
      64: dup
      65: iconst_5
      66: bipush        25
      68: aload         4
      70: aload_3
      71: aconst_null
      72: invokespecial #28                 // Method org/apache/hc/core5/pool/StrictConnPool."<init>":(IILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      75: putfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
      78: goto          127
      81: aload_0
      82: new           #29                 // class org/apache/hc/core5/pool/LaxConnPool
      85: dup
      86: iconst_5
      87: aload         4
      89: aload_3
      90: aconst_null
      91: invokespecial #30                 // Method org/apache/hc/core5/pool/LaxConnPool."<init>":(ILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      94: putfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
      97: goto          127
     100: new           #31                 // class java/lang/IllegalArgumentException
     103: dup
     104: new           #32                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #34                 // String Unexpected PoolConcurrencyPolicy value:
     113: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_2
     117: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     123: invokespecial #38                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: aload_0
     128: new           #39                 // class java/util/concurrent/atomic/AtomicBoolean
     131: dup
     132: iconst_0
     133: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     136: putfield      #41                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
     139: return

  protected org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager(org.apache.hc.core5.pool.ManagedConnPool<org.apache.hc.client5.http.HttpRoute, org.apache.hc.client5.http.nio.ManagedAsyncClientConnection>, org.apache.hc.client5.http.nio.AsyncClientConnectionOperator);
    Code:
       0: aload_0
       1: invokespecial #20                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: ldc           #21                 // String Connection operator
       8: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #23                 // class org/apache/hc/client5/http/nio/AsyncClientConnectionOperator
      14: putfield      #24                 // Field connectionOperator:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionOperator;
      17: aload_0
      18: aload_1
      19: ldc           #42                 // String Connection pool
      21: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #43                 // class org/apache/hc/core5/pool/ManagedConnPool
      27: putfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
      30: aload_0
      31: new           #39                 // class java/util/concurrent/atomic/AtomicBoolean
      34: dup
      35: iconst_0
      36: invokespecial #40                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      39: putfield      #41                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
      42: return

  public void close();
    Code:
       0: aload_0
       1: getstatic     #44                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
       4: invokevirtual #45                 // Method close:(Lorg/apache/hc/core5/io/CloseMode;)V
       7: return

  public void close(org.apache.hc.core5.io.CloseMode);
    Code:
       0: aload_0
       1: getfield      #41                 // Field closed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          54
      12: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      15: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      20: ifeq          34
      23: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      26: ldc           #48                 // String Shutdown connection pool {}
      28: aload_1
      29: invokeinterface #49,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
      38: aload_1
      39: invokeinterface #50,  2           // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.close:(Lorg/apache/hc/core5/io/CloseMode;)V
      44: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      47: ldc           #51                 // String Connection pool shut down
      49: invokeinterface #52,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      54: return

  private org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager$InternalConnectionEndpoint cast(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint);
    Code:
       0: aload_1
       1: instanceof    #53                 // class org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint
       4: ifeq          12
       7: aload_1
       8: checkcast     #53                 // class org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint
      11: areturn
      12: new           #54                 // class java/lang/IllegalStateException
      15: dup
      16: new           #32                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #55                 // String Unexpected endpoint class:
      25: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #56                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      35: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokespecial #57                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: athrow

  public java.util.concurrent.Future<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint> lease(java.lang.String, org.apache.hc.client5.http.HttpRoute, java.lang.Object, org.apache.hc.core5.util.Timeout, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>);
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       8: ifeq          46
      11: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      14: ldc           #58                 // String {} endpoint lease request ({}) {}
      16: iconst_3
      17: anewarray     #59                 // class java/lang/Object
      20: dup
      21: iconst_0
      22: aload_1
      23: aastore
      24: dup
      25: iconst_1
      26: aload         4
      28: aastore
      29: dup
      30: iconst_2
      31: aload_2
      32: aload_3
      33: aload_0
      34: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
      37: invokestatic  #60                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.formatStats:(Lorg/apache/hc/client5/http/HttpRoute;Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolControl;)Ljava/lang/String;
      40: aastore
      41: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      46: new           #62                 // class org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$1
      49: dup
      50: aload_0
      51: aload         5
      53: aload_2
      54: aload_3
      55: aload         4
      57: aload_1
      58: invokespecial #63                 // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$1."<init>":(Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager;Lorg/apache/hc/core5/concurrent/FutureCallback;Lorg/apache/hc/client5/http/HttpRoute;Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Ljava/lang/String;)V
      61: areturn

  public void release(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint, java.lang.Object, org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_1
       1: ldc           #64                 // String Managed endpoint
       3: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #65                 // String Keep-alive time
      10: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: aload_1
      16: invokespecial #66                 // Method cast:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint;
      19: invokevirtual #67                 // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint.detach:()Lorg/apache/hc/core5/pool/PoolEntry;
      22: astore        4
      24: aload         4
      26: ifnonnull     30
      29: return
      30: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      33: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          55
      41: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      44: ldc           #68                 // String {} releasing endpoint
      46: aload_1
      47: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      50: invokeinterface #49,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      55: aload         4
      57: invokevirtual #70                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      60: checkcast     #71                 // class org/apache/hc/client5/http/nio/ManagedAsyncClientConnection
      63: astore        5
      65: aload         5
      67: ifnull        84
      70: aload         5
      72: invokeinterface #72,  1           // InterfaceMethod org/apache/hc/client5/http/nio/ManagedAsyncClientConnection.isOpen:()Z
      77: ifeq          84
      80: iconst_1
      81: goto          85
      84: iconst_0
      85: istore        6
      87: iload         6
      89: ifeq          191
      92: aload         4
      94: aload_2
      95: invokevirtual #73                 // Method org/apache/hc/core5/pool/PoolEntry.updateState:(Ljava/lang/Object;)V
      98: aload         4
     100: aload_3
     101: invokevirtual #74                 // Method org/apache/hc/core5/pool/PoolEntry.updateExpiry:(Lorg/apache/hc/core5/util/TimeValue;)V
     104: aload         5
     106: invokeinterface #75,  1           // InterfaceMethod org/apache/hc/client5/http/nio/ManagedAsyncClientConnection.passivate:()V
     111: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     114: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     119: ifeq          191
     122: aload_3
     123: invokestatic  #76                 // Method org/apache/hc/core5/util/TimeValue.isPositive:(Lorg/apache/hc/core5/util/TimeValue;)Z
     126: ifeq          153
     129: new           #32                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     136: ldc           #77                 // String for
     138: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: aload_3
     142: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     145: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: astore        7
     150: goto          157
     153: ldc           #78                 // String indefinitely
     155: astore        7
     157: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     160: ldc           #79                 // String {} connection {} can be kept alive {}
     162: iconst_3
     163: anewarray     #59                 // class java/lang/Object
     166: dup
     167: iconst_0
     168: aload_1
     169: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     172: aastore
     173: dup
     174: iconst_1
     175: aload         5
     177: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     180: aastore
     181: dup
     182: iconst_2
     183: aload         7
     185: aastore
     186: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     191: aload_0
     192: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
     195: aload         4
     197: iload         6
     199: invokeinterface #80,  3           // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
     204: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     207: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     212: ifeq          323
     215: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     218: ldc           #81                 // String {} connection released {}
     220: aload_1
     221: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     224: aload         4
     226: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     229: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
     232: aload         4
     234: invokevirtual #84                 // Method org/apache/hc/core5/pool/PoolEntry.getState:()Ljava/lang/Object;
     237: aload_0
     238: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
     241: invokestatic  #60                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.formatStats:(Lorg/apache/hc/client5/http/HttpRoute;Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolControl;)Ljava/lang/String;
     244: invokeinterface #85,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     249: goto          323
     252: astore        7
     254: iconst_0
     255: istore        6
     257: aload         7
     259: athrow
     260: astore        8
     262: aload_0
     263: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
     266: aload         4
     268: iload         6
     270: invokeinterface #80,  3           // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
     275: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     278: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     283: ifeq          320
     286: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     289: ldc           #81                 // String {} connection released {}
     291: aload_1
     292: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     295: aload         4
     297: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     300: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
     303: aload         4
     305: invokevirtual #84                 // Method org/apache/hc/core5/pool/PoolEntry.getState:()Ljava/lang/Object;
     308: aload_0
     309: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
     312: invokestatic  #60                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.formatStats:(Lorg/apache/hc/client5/http/HttpRoute;Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolControl;)Ljava/lang/String;
     315: invokeinterface #85,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
     320: aload         8
     322: athrow
     323: return
    Exception table:
       from    to  target type
          87   191   252   Class java/lang/RuntimeException
          87   191   260   any
         252   262   260   any

  public java.util.concurrent.Future<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint> connect(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint, org.apache.hc.core5.reactor.ConnectionInitiator, org.apache.hc.core5.util.Timeout, java.lang.Object, org.apache.hc.core5.http.protocol.HttpContext, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint>);
    Code:
       0: aload_1
       1: ldc           #87                 // String Endpoint
       3: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_2
       8: ldc           #88                 // String Connection initiator
      10: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_3
      15: ldc           #89                 // String Timeout
      17: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: aload_1
      23: invokespecial #66                 // Method cast:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint;
      26: astore        7
      28: new           #90                 // class org/apache/hc/core5/concurrent/ComplexFuture
      31: dup
      32: aload         6
      34: invokespecial #91                 // Method org/apache/hc/core5/concurrent/ComplexFuture."<init>":(Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      37: astore        8
      39: aload         7
      41: invokevirtual #92                 // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint.isConnected:()Z
      44: ifeq          57
      47: aload         8
      49: aload_1
      50: invokevirtual #93                 // Method org/apache/hc/core5/concurrent/ComplexFuture.completed:(Ljava/lang/Object;)Z
      53: pop
      54: aload         8
      56: areturn
      57: aload         7
      59: invokevirtual #94                 // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint.getPoolEntry:()Lorg/apache/hc/core5/pool/PoolEntry;
      62: astore        9
      64: aload         9
      66: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      69: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
      72: astore        10
      74: aload         10
      76: invokevirtual #95                 // Method org/apache/hc/client5/http/HttpRoute.getProxyHost:()Lorg/apache/hc/core5/http/HttpHost;
      79: ifnull        92
      82: aload         10
      84: invokevirtual #95                 // Method org/apache/hc/client5/http/HttpRoute.getProxyHost:()Lorg/apache/hc/core5/http/HttpHost;
      87: astore        11
      89: goto          99
      92: aload         10
      94: invokevirtual #96                 // Method org/apache/hc/client5/http/HttpRoute.getTargetHost:()Lorg/apache/hc/core5/http/HttpHost;
      97: astore        11
      99: aload         10
     101: invokevirtual #97                 // Method org/apache/hc/client5/http/HttpRoute.getLocalSocketAddress:()Ljava/net/InetSocketAddress;
     104: astore        12
     106: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     109: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
     114: ifeq          147
     117: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
     120: ldc           #98                 // String {} connecting endpoint to {} ({})
     122: iconst_3
     123: anewarray     #59                 // class java/lang/Object
     126: dup
     127: iconst_0
     128: aload_1
     129: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     132: aastore
     133: dup
     134: iconst_1
     135: aload         11
     137: aastore
     138: dup
     139: iconst_2
     140: aload_3
     141: aastore
     142: invokeinterface #61,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     147: aload_0
     148: getfield      #24                 // Field connectionOperator:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionOperator;
     151: aload_2
     152: aload         11
     154: aload         12
     156: aload_3
     157: aload         4
     159: new           #99                 // class org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$2
     162: dup
     163: aload_0
     164: aload_1
     165: aload         9
     167: aload         8
     169: aload         7
     171: invokespecial #100                // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$2."<init>":(Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager;Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Lorg/apache/hc/core5/pool/PoolEntry;Lorg/apache/hc/core5/concurrent/ComplexFuture;Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint;)V
     174: invokeinterface #101,  7          // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionOperator.connect:(Lorg/apache/hc/core5/reactor/ConnectionInitiator;Lorg/apache/hc/core5/http/HttpHost;Ljava/net/SocketAddress;Lorg/apache/hc/core5/util/Timeout;Ljava/lang/Object;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
     179: astore        13
     181: aload         8
     183: aload         13
     185: invokevirtual #102                // Method org/apache/hc/core5/concurrent/ComplexFuture.setDependency:(Ljava/util/concurrent/Future;)V
     188: aload         8
     190: areturn

  public void upgrade(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint, java.lang.Object, org.apache.hc.core5.http.protocol.HttpContext);
    Code:
       0: aload_1
       1: ldc           #64                 // String Managed endpoint
       3: invokestatic  #22                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #66                 // Method cast:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)Lorg/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint;
      12: astore        4
      14: aload         4
      16: invokevirtual #103                // Method org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager$InternalConnectionEndpoint.getValidatedPoolEntry:()Lorg/apache/hc/core5/pool/PoolEntry;
      19: astore        5
      21: aload         5
      23: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      26: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
      29: astore        6
      31: aload         5
      33: invokevirtual #70                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      36: checkcast     #71                 // class org/apache/hc/client5/http/nio/ManagedAsyncClientConnection
      39: astore        7
      41: aload_0
      42: getfield      #24                 // Field connectionOperator:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionOperator;
      45: aload         5
      47: invokevirtual #70                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      50: checkcast     #71                 // class org/apache/hc/client5/http/nio/ManagedAsyncClientConnection
      53: aload         6
      55: invokevirtual #96                 // Method org/apache/hc/client5/http/HttpRoute.getTargetHost:()Lorg/apache/hc/core5/http/HttpHost;
      58: aload_2
      59: invokeinterface #104,  4          // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionOperator.upgrade:(Lorg/apache/hc/client5/http/nio/ManagedAsyncClientConnection;Lorg/apache/hc/core5/http/HttpHost;Ljava/lang/Object;)V
      64: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      67: invokeinterface #47,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      72: ifeq          95
      75: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
      78: ldc           #105                // String {} upgraded {}
      80: aload         4
      82: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      85: aload         7
      87: invokestatic  #69                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      90: invokeinterface #85,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      95: return

  public java.util.Set<org.apache.hc.client5.http.HttpRoute> getRoutes();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: invokeinterface #106,  1          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getRoutes:()Ljava/util/Set;
       9: areturn

  public void setMaxTotal(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: iload_1
       5: invokeinterface #107,  2          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.setMaxTotal:(I)V
      10: return

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: invokeinterface #108,  1          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getMaxTotal:()I
       9: ireturn

  public void setDefaultMaxPerRoute(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: iload_1
       5: invokeinterface #109,  2          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.setDefaultMaxPerRoute:(I)V
      10: return

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: invokeinterface #110,  1          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getDefaultMaxPerRoute:()I
       9: ireturn

  public void setMaxPerRoute(org.apache.hc.client5.http.HttpRoute, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: aload_1
       5: iload_2
       6: invokeinterface #111,  3          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.setMaxPerRoute:(Ljava/lang/Object;I)V
      11: return

  public int getMaxPerRoute(org.apache.hc.client5.http.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: aload_1
       5: invokeinterface #112,  2          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getMaxPerRoute:(Ljava/lang/Object;)I
      10: ireturn

  public void closeIdle(org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: aload_1
       5: invokeinterface #113,  2          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.closeIdle:(Lorg/apache/hc/core5/util/TimeValue;)V
      10: return

  public void closeExpired();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: invokeinterface #114,  1          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.closeExpired:()V
       9: return

  public org.apache.hc.core5.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: invokeinterface #115,  1          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getTotalStats:()Lorg/apache/hc/core5/pool/PoolStats;
       9: areturn

  public org.apache.hc.core5.pool.PoolStats getStats(org.apache.hc.client5.http.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: aload_1
       5: invokeinterface #116,  2          // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.getStats:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/PoolStats;
      10: areturn

  public org.apache.hc.core5.util.TimeValue getValidateAfterInactivity();
    Code:
       0: aload_0
       1: getfield      #4                  // Field validateAfterInactivity:Lorg/apache/hc/core5/util/TimeValue;
       4: areturn

  public void setValidateAfterInactivity(org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field validateAfterInactivity:Lorg/apache/hc/core5/util/TimeValue;
       5: return

  public int getMaxPerRoute(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
       5: invokevirtual #117                // Method getMaxPerRoute:(Lorg/apache/hc/client5/http/HttpRoute;)I
       8: ireturn

  public void setMaxPerRoute(java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
       5: iload_2
       6: invokevirtual #118                // Method setMaxPerRoute:(Lorg/apache/hc/client5/http/HttpRoute;I)V
       9: return

  public org.apache.hc.core5.pool.PoolStats getStats(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #83                 // class org/apache/hc/client5/http/HttpRoute
       5: invokevirtual #119                // Method getStats:(Lorg/apache/hc/client5/http/HttpRoute;)Lorg/apache/hc/core5/pool/PoolStats;
       8: areturn

  static org.apache.hc.core5.util.TimeValue access$000(org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager);
    Code:
       0: aload_0
       1: getfield      #4                  // Field validateAfterInactivity:Lorg/apache/hc/core5/util/TimeValue;
       4: areturn

  static org.slf4j.Logger access$100();
    Code:
       0: getstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       3: areturn

  static org.apache.hc.core5.pool.ManagedConnPool access$200(org.apache.hc.client5.http.impl.nio.PoolingAsyncClientConnectionManager);
    Code:
       0: aload_0
       1: getfield      #2                  // Field pool:Lorg/apache/hc/core5/pool/ManagedConnPool;
       4: areturn

  static java.util.concurrent.atomic.AtomicLong access$300();
    Code:
       0: getstatic     #1                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
       3: areturn

  static {};
    Code:
       0: ldc_w         #120                // class org/apache/hc/client5/http/impl/nio/PoolingAsyncClientConnectionManager
       3: invokestatic  #121                // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       6: putstatic     #3                  // Field LOG:Lorg/slf4j/Logger;
       9: new           #122                // class java/util/concurrent/atomic/AtomicLong
      12: dup
      13: lconst_0
      14: invokespecial #123                // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      17: putstatic     #1                  // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      20: return
}
