Compiled from "AIMDBackoffManager.java"
public class org.apache.hc.client5.http.impl.classic.AIMDBackoffManager implements org.apache.hc.client5.http.classic.BackoffManager {
  private final org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute> connPerRoute;

  private final org.apache.hc.client5.http.impl.classic.Clock clock;

  private final java.util.Map<org.apache.hc.client5.http.HttpRoute, java.lang.Long> lastRouteProbes;

  private final java.util.Map<org.apache.hc.client5.http.HttpRoute, java.lang.Long> lastRouteBackoffs;

  private org.apache.hc.core5.util.TimeValue coolDown;

  private double backoffFactor;

  private int cap;

  public org.apache.hc.client5.http.impl.classic.AIMDBackoffManager(org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>);
    Code:
       0: aload_0
       1: aload_1
       2: new           #1                  // class org/apache/hc/client5/http/impl/classic/SystemClock
       5: dup
       6: invokespecial #2                  // Method org/apache/hc/client5/http/impl/classic/SystemClock."<init>":()V
       9: invokespecial #3                  // Method "<init>":(Lorg/apache/hc/core5/pool/ConnPoolControl;Lorg/apache/hc/client5/http/impl/classic/Clock;)V
      12: return

  org.apache.hc.client5.http.impl.classic.AIMDBackoffManager(org.apache.hc.core5.pool.ConnPoolControl<org.apache.hc.client5.http.HttpRoute>, org.apache.hc.client5.http.impl.classic.Clock);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #5                  // long 5l
       8: invokestatic  #7                  // Method org/apache/hc/core5/util/TimeValue.ofSeconds:(J)Lorg/apache/hc/core5/util/TimeValue;
      11: putfield      #8                  // Field coolDown:Lorg/apache/hc/core5/util/TimeValue;
      14: aload_0
      15: ldc2_w        #9                  // double 0.5d
      18: putfield      #11                 // Field backoffFactor:D
      21: aload_0
      22: iconst_2
      23: putfield      #12                 // Field cap:I
      26: aload_0
      27: aload_2
      28: putfield      #13                 // Field clock:Lorg/apache/hc/client5/http/impl/classic/Clock;
      31: aload_0
      32: aload_1
      33: putfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
      36: aload_0
      37: new           #15                 // class java/util/HashMap
      40: dup
      41: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      44: putfield      #17                 // Field lastRouteProbes:Ljava/util/Map;
      47: aload_0
      48: new           #15                 // class java/util/HashMap
      51: dup
      52: invokespecial #16                 // Method java/util/HashMap."<init>":()V
      55: putfield      #18                 // Field lastRouteBackoffs:Ljava/util/Map;
      58: return

  public void backOff(org.apache.hc.client5.http.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
      11: aload_1
      12: invokeinterface #19,  2           // InterfaceMethod org/apache/hc/core5/pool/ConnPoolControl.getMaxPerRoute:(Ljava/lang/Object;)I
      17: istore_3
      18: aload_0
      19: aload_0
      20: getfield      #18                 // Field lastRouteBackoffs:Ljava/util/Map;
      23: aload_1
      24: invokespecial #20                 // Method getLastUpdate:(Ljava/util/Map;Lorg/apache/hc/client5/http/HttpRoute;)Ljava/lang/Long;
      27: astore        4
      29: aload_0
      30: getfield      #13                 // Field clock:Lorg/apache/hc/client5/http/impl/classic/Clock;
      33: invokeinterface #21,  1           // InterfaceMethod org/apache/hc/client5/http/impl/classic/Clock.getCurrentTime:()J
      38: lstore        5
      40: lload         5
      42: aload         4
      44: invokevirtual #22                 // Method java/lang/Long.longValue:()J
      47: lsub
      48: aload_0
      49: getfield      #8                  // Field coolDown:Lorg/apache/hc/core5/util/TimeValue;
      52: invokevirtual #23                 // Method org/apache/hc/core5/util/TimeValue.toMilliseconds:()J
      55: lcmp
      56: ifge          62
      59: aload_2
      60: monitorexit
      61: return
      62: aload_0
      63: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
      66: aload_1
      67: aload_0
      68: iload_3
      69: invokespecial #24                 // Method getBackedOffPoolSize:(I)I
      72: invokeinterface #25,  3           // InterfaceMethod org/apache/hc/core5/pool/ConnPoolControl.setMaxPerRoute:(Ljava/lang/Object;I)V
      77: aload_0
      78: getfield      #18                 // Field lastRouteBackoffs:Ljava/util/Map;
      81: aload_1
      82: lload         5
      84: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      87: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      92: pop
      93: aload_2
      94: monitorexit
      95: goto          105
      98: astore        7
     100: aload_2
     101: monitorexit
     102: aload         7
     104: athrow
     105: return
    Exception table:
       from    to  target type
           7    61    98   any
          62    95    98   any
          98   102    98   any

  private int getBackedOffPoolSize(int);
    Code:
       0: iload_1
       1: iconst_1
       2: if_icmpgt     7
       5: iconst_1
       6: ireturn
       7: aload_0
       8: getfield      #11                 // Field backoffFactor:D
      11: iload_1
      12: i2d
      13: dmul
      14: invokestatic  #28                 // Method java/lang/Math.floor:(D)D
      17: d2i
      18: ireturn

  public void probe(org.apache.hc.client5.http.HttpRoute);
    Code:
       0: aload_0
       1: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
      11: aload_1
      12: invokeinterface #19,  2           // InterfaceMethod org/apache/hc/core5/pool/ConnPoolControl.getMaxPerRoute:(Ljava/lang/Object;)I
      17: istore_3
      18: iload_3
      19: aload_0
      20: getfield      #12                 // Field cap:I
      23: if_icmplt     33
      26: aload_0
      27: getfield      #12                 // Field cap:I
      30: goto          36
      33: iload_3
      34: iconst_1
      35: iadd
      36: istore        4
      38: aload_0
      39: aload_0
      40: getfield      #17                 // Field lastRouteProbes:Ljava/util/Map;
      43: aload_1
      44: invokespecial #20                 // Method getLastUpdate:(Ljava/util/Map;Lorg/apache/hc/client5/http/HttpRoute;)Ljava/lang/Long;
      47: astore        5
      49: aload_0
      50: aload_0
      51: getfield      #18                 // Field lastRouteBackoffs:Ljava/util/Map;
      54: aload_1
      55: invokespecial #20                 // Method getLastUpdate:(Ljava/util/Map;Lorg/apache/hc/client5/http/HttpRoute;)Ljava/lang/Long;
      58: astore        6
      60: aload_0
      61: getfield      #13                 // Field clock:Lorg/apache/hc/client5/http/impl/classic/Clock;
      64: invokeinterface #21,  1           // InterfaceMethod org/apache/hc/client5/http/impl/classic/Clock.getCurrentTime:()J
      69: lstore        7
      71: lload         7
      73: aload         5
      75: invokevirtual #22                 // Method java/lang/Long.longValue:()J
      78: lsub
      79: aload_0
      80: getfield      #8                  // Field coolDown:Lorg/apache/hc/core5/util/TimeValue;
      83: invokevirtual #23                 // Method org/apache/hc/core5/util/TimeValue.toMilliseconds:()J
      86: lcmp
      87: iflt          109
      90: lload         7
      92: aload         6
      94: invokevirtual #22                 // Method java/lang/Long.longValue:()J
      97: lsub
      98: aload_0
      99: getfield      #8                  // Field coolDown:Lorg/apache/hc/core5/util/TimeValue;
     102: invokevirtual #23                 // Method org/apache/hc/core5/util/TimeValue.toMilliseconds:()J
     105: lcmp
     106: ifge          112
     109: aload_2
     110: monitorexit
     111: return
     112: aload_0
     113: getfield      #14                 // Field connPerRoute:Lorg/apache/hc/core5/pool/ConnPoolControl;
     116: aload_1
     117: iload         4
     119: invokeinterface #25,  3           // InterfaceMethod org/apache/hc/core5/pool/ConnPoolControl.setMaxPerRoute:(Ljava/lang/Object;I)V
     124: aload_0
     125: getfield      #17                 // Field lastRouteProbes:Ljava/util/Map;
     128: aload_1
     129: lload         7
     131: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     134: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: aload_2
     141: monitorexit
     142: goto          152
     145: astore        9
     147: aload_2
     148: monitorexit
     149: aload         9
     151: athrow
     152: return
    Exception table:
       from    to  target type
           7   111   145   any
         112   142   145   any
         145   149   145   any

  private java.lang.Long getLastUpdate(java.util.Map<org.apache.hc.client5.http.HttpRoute, java.lang.Long>, org.apache.hc.client5.http.HttpRoute);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #29,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #30                 // class java/lang/Long
      10: astore_3
      11: aload_3
      12: ifnonnull     20
      15: lconst_0
      16: invokestatic  #26                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      19: astore_3
      20: aload_3
      21: areturn

  public void setBackoffFactor(double);
    Code:
       0: dload_1
       1: dconst_0
       2: dcmpl
       3: ifle          16
       6: dload_1
       7: dconst_1
       8: dcmpg
       9: ifge          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #31                 // String Backoff factor must be 0.0 < f < 1.0
      19: invokestatic  #32                 // Method org/apache/hc/core5/util/Args.check:(ZLjava/lang/String;)V
      22: aload_0
      23: dload_1
      24: putfield      #11                 // Field backoffFactor:D
      27: return

  public void setCoolDown(org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method org/apache/hc/core5/util/TimeValue.getDuration:()J
       4: ldc           #34                 // String coolDown
       6: invokestatic  #35                 // Method org/apache/hc/core5/util/Args.positive:(JLjava/lang/String;)J
       9: pop2
      10: aload_0
      11: aload_1
      12: putfield      #8                  // Field coolDown:Lorg/apache/hc/core5/util/TimeValue;
      15: return

  public void setPerHostConnectionCap(int);
    Code:
       0: iload_1
       1: ldc           #36                 // String Per host connection cap
       3: invokestatic  #37                 // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: iload_1
       9: putfield      #12                 // Field cap:I
      12: return
}
