Compiled from "InternalHttpAsyncExecRuntime.java"
class org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime implements org.apache.hc.client5.http.async.AsyncExecRuntime {
  private final org.slf4j.Logger log;

  private final org.apache.hc.client5.http.nio.AsyncClientConnectionManager manager;

  private final org.apache.hc.core5.reactor.ConnectionInitiator connectionInitiator;

  private final org.apache.hc.core5.http.nio.HandlerFactory<org.apache.hc.core5.http.nio.AsyncPushConsumer> pushHandlerFactory;

  private final org.apache.hc.core5.http2.HttpVersionPolicy versionPolicy;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.client5.http.nio.AsyncConnectionEndpoint> endpointRef;

  private volatile boolean reusable;

  private volatile java.lang.Object state;

  private volatile org.apache.hc.core5.util.TimeValue validDuration;

  org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime(org.slf4j.Logger, org.apache.hc.client5.http.nio.AsyncClientConnectionManager, org.apache.hc.core5.reactor.ConnectionInitiator, org.apache.hc.core5.http.nio.HandlerFactory<org.apache.hc.core5.http.nio.AsyncPushConsumer>, org.apache.hc.core5.http2.HttpVersionPolicy);
    Code:
       0: aload_0
       1: invokespecial #5                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field log:Lorg/slf4j/Logger;
       9: aload_0
      10: aload_2
      11: putfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      14: aload_0
      15: aload_3
      16: putfield      #7                  // Field connectionInitiator:Lorg/apache/hc/core5/reactor/ConnectionInitiator;
      19: aload_0
      20: aload         4
      22: putfield      #1                  // Field pushHandlerFactory:Lorg/apache/hc/core5/http/nio/HandlerFactory;
      25: aload_0
      26: aload         5
      28: putfield      #8                  // Field versionPolicy:Lorg/apache/hc/core5/http2/HttpVersionPolicy;
      31: aload_0
      32: new           #9                  // class java/util/concurrent/atomic/AtomicReference
      35: dup
      36: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      39: putfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
      42: aload_0
      43: getstatic     #11                 // Field org/apache/hc/core5/util/TimeValue.NEG_ONE_MILLISECOND:Lorg/apache/hc/core5/util/TimeValue;
      46: putfield      #12                 // Field validDuration:Lorg/apache/hc/core5/util/TimeValue;
      49: return

  public boolean isEndpointAcquired();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnull        14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public org.apache.hc.core5.concurrent.Cancellable acquireEndpoint(java.lang.String, org.apache.hc.client5.http.HttpRoute, java.lang.Object, org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.async.AsyncExecRuntime>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: ifnonnull     84
      10: aload_0
      11: aload_3
      12: putfield      #14                 // Field state:Ljava/lang/Object;
      15: aload         4
      17: invokevirtual #15                 // Method org/apache/hc/client5/http/protocol/HttpClientContext.getRequestConfig:()Lorg/apache/hc/client5/http/config/RequestConfig;
      20: astore        6
      22: aload         6
      24: invokevirtual #16                 // Method org/apache/hc/client5/http/config/RequestConfig.getConnectionRequestTimeout:()Lorg/apache/hc/core5/util/Timeout;
      27: astore        7
      29: aload_0
      30: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      33: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      38: ifeq          55
      41: aload_0
      42: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      45: ldc           #18                 // String {} acquiring endpoint ({})
      47: aload_1
      48: aload         7
      50: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      59: aload_1
      60: aload_2
      61: aload_3
      62: aload         7
      64: new           #20                 // class org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$1
      67: dup
      68: aload_0
      69: aload_1
      70: aload         5
      72: invokespecial #21                 // Method org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$1."<init>":(Lorg/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime;Ljava/lang/String;Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      75: invokeinterface #22,  6           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.lease:(Ljava/lang/String;Lorg/apache/hc/client5/http/HttpRoute;Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      80: invokestatic  #23                 // Method org/apache/hc/client5/http/impl/Operations.cancellable:(Ljava/util/concurrent/Future;)Lorg/apache/hc/core5/concurrent/Cancellable;
      83: areturn
      84: aload         5
      86: aload_0
      87: invokeinterface #24,  2           // InterfaceMethod org/apache/hc/core5/concurrent/FutureCallback.completed:(Ljava/lang/Object;)V
      92: invokestatic  #25                 // Method org/apache/hc/client5/http/impl/Operations.nonCancellable:()Lorg/apache/hc/core5/concurrent/Cancellable;
      95: areturn

  private void discardEndpoint(org.apache.hc.client5.http.nio.AsyncConnectionEndpoint);
    Code:
       0: aload_1
       1: getstatic     #26                 // Field org/apache/hc/core5/io/CloseMode.IMMEDIATE:Lorg/apache/hc/core5/io/CloseMode;
       4: invokevirtual #27                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.close:(Lorg/apache/hc/core5/io/CloseMode;)V
       7: aload_0
       8: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      11: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      16: ifeq          34
      19: aload_0
      20: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      23: ldc           #28                 // String {} endpoint closed
      25: aload_1
      26: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      29: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      38: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      43: ifeq          61
      46: aload_0
      47: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      50: ldc           #31                 // String {} discarding endpoint
      52: aload_1
      53: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      56: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      65: aload_1
      66: aconst_null
      67: getstatic     #32                 // Field org/apache/hc/core5/util/TimeValue.ZERO_MILLISECONDS:Lorg/apache/hc/core5/util/TimeValue;
      70: invokeinterface #33,  4           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.release:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Ljava/lang/Object;Lorg/apache/hc/core5/util/TimeValue;)V
      75: goto          122
      78: astore_2
      79: aload_0
      80: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      83: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      88: ifeq          106
      91: aload_0
      92: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      95: ldc           #31                 // String {} discarding endpoint
      97: aload_1
      98: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
     101: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
     106: aload_0
     107: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
     110: aload_1
     111: aconst_null
     112: getstatic     #32                 // Field org/apache/hc/core5/util/TimeValue.ZERO_MILLISECONDS:Lorg/apache/hc/core5/util/TimeValue;
     115: invokeinterface #33,  4           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.release:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Ljava/lang/Object;Lorg/apache/hc/core5/util/TimeValue;)V
     120: aload_2
     121: athrow
     122: return
    Exception table:
       from    to  target type
           0    34    78   any
          78    79    78   any

  public void releaseEndpoint();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      11: astore_1
      12: aload_1
      13: ifnull        76
      16: aload_0
      17: getfield      #3                  // Field reusable:Z
      20: ifeq          71
      23: aload_0
      24: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      27: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      32: ifeq          50
      35: aload_0
      36: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      39: ldc           #36                 // String {} releasing valid endpoint
      41: aload_1
      42: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      45: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      50: aload_0
      51: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      54: aload_1
      55: aload_0
      56: getfield      #14                 // Field state:Ljava/lang/Object;
      59: aload_0
      60: getfield      #12                 // Field validDuration:Lorg/apache/hc/core5/util/TimeValue;
      63: invokeinterface #33,  4           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.release:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Ljava/lang/Object;Lorg/apache/hc/core5/util/TimeValue;)V
      68: goto          76
      71: aload_0
      72: aload_1
      73: invokespecial #37                 // Method discardEndpoint:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)V
      76: return

  public void discardEndpoint();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      11: astore_1
      12: aload_1
      13: ifnull        21
      16: aload_0
      17: aload_1
      18: invokespecial #37                 // Method discardEndpoint:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)V
      21: return

  public boolean validateConnection();
    Code:
       0: aload_0
       1: getfield      #3                  // Field reusable:Z
       4: ifeq          35
       7: aload_0
       8: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
      11: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      14: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      17: astore_1
      18: aload_1
      19: ifnull        33
      22: aload_1
      23: invokevirtual #38                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.isConnected:()Z
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn
      35: aload_0
      36: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
      39: aconst_null
      40: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      43: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      46: astore_1
      47: aload_1
      48: ifnull        56
      51: aload_0
      52: aload_1
      53: invokespecial #37                 // Method discardEndpoint:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;)V
      56: iconst_0
      57: ireturn

  org.apache.hc.client5.http.nio.AsyncConnectionEndpoint ensureValid();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      10: astore_1
      11: aload_1
      12: ifnonnull     25
      15: new           #39                 // class java/lang/IllegalStateException
      18: dup
      19: ldc           #40                 // String Endpoint not acquired / already released
      21: invokespecial #41                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: areturn

  public boolean isEndpointConnected();
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #35                 // class org/apache/hc/client5/http/nio/AsyncConnectionEndpoint
      10: astore_1
      11: aload_1
      12: ifnull        26
      15: aload_1
      16: invokevirtual #38                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.isConnected:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public org.apache.hc.core5.concurrent.Cancellable connectEndpoint(org.apache.hc.client5.http.protocol.HttpClientContext, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.client5.http.async.AsyncExecRuntime>);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method ensureValid:()Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;
       4: astore_3
       5: aload_3
       6: invokevirtual #38                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.isConnected:()Z
       9: ifeq          23
      12: aload_2
      13: aload_0
      14: invokeinterface #24,  2           // InterfaceMethod org/apache/hc/core5/concurrent/FutureCallback.completed:(Ljava/lang/Object;)V
      19: invokestatic  #25                 // Method org/apache/hc/client5/http/impl/Operations.nonCancellable:()Lorg/apache/hc/core5/concurrent/Cancellable;
      22: areturn
      23: aload_1
      24: invokevirtual #15                 // Method org/apache/hc/client5/http/protocol/HttpClientContext.getRequestConfig:()Lorg/apache/hc/client5/http/config/RequestConfig;
      27: astore        4
      29: aload         4
      31: invokevirtual #43                 // Method org/apache/hc/client5/http/config/RequestConfig.getConnectTimeout:()Lorg/apache/hc/core5/util/Timeout;
      34: astore        5
      36: aload_0
      37: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      40: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      45: ifeq          65
      48: aload_0
      49: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      52: ldc           #44                 // String {} connecting endpoint ({})
      54: aload_3
      55: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      58: aload         5
      60: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      65: aload_0
      66: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      69: aload_3
      70: aload_0
      71: getfield      #7                  // Field connectionInitiator:Lorg/apache/hc/core5/reactor/ConnectionInitiator;
      74: aload         5
      76: aload_0
      77: getfield      #8                  // Field versionPolicy:Lorg/apache/hc/core5/http2/HttpVersionPolicy;
      80: aload_1
      81: new           #45                 // class org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$2
      84: dup
      85: aload_0
      86: aload_2
      87: invokespecial #46                 // Method org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$2."<init>":(Lorg/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime;Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      90: invokeinterface #47,  7           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.connect:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Lorg/apache/hc/core5/reactor/ConnectionInitiator;Lorg/apache/hc/core5/util/Timeout;Ljava/lang/Object;Lorg/apache/hc/core5/http/protocol/HttpContext;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      95: invokestatic  #23                 // Method org/apache/hc/client5/http/impl/Operations.cancellable:(Ljava/util/concurrent/Future;)Lorg/apache/hc/core5/concurrent/Cancellable;
      98: areturn

  public void upgradeTls(org.apache.hc.client5.http.protocol.HttpClientContext);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method ensureValid:()Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       9: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      14: ifeq          32
      17: aload_0
      18: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      21: ldc           #48                 // String {} upgrading endpoint
      23: aload_2
      24: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      27: invokeinterface #30,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      32: aload_0
      33: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      36: aload_2
      37: aload_0
      38: getfield      #8                  // Field versionPolicy:Lorg/apache/hc/core5/http2/HttpVersionPolicy;
      41: aload_1
      42: invokeinterface #49,  4           // InterfaceMethod org/apache/hc/client5/http/nio/AsyncClientConnectionManager.upgrade:(Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Ljava/lang/Object;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      47: return

  public org.apache.hc.core5.concurrent.Cancellable execute(java.lang.String, org.apache.hc.core5.http.nio.AsyncClientExchangeHandler, org.apache.hc.client5.http.protocol.HttpClientContext);
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method ensureValid:()Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;
       4: astore        4
       6: aload         4
       8: invokevirtual #38                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.isConnected:()Z
      11: ifeq          99
      14: aload_0
      15: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      18: invokeinterface #17,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
      23: ifeq          43
      26: aload_0
      27: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      30: ldc           #50                 // String {} start execution {}
      32: aload         4
      34: invokestatic  #29                 // Method org/apache/hc/client5/http/impl/ConnPoolSupport.getId:(Ljava/lang/Object;)Ljava/lang/String;
      37: aload_1
      38: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      43: aload_3
      44: invokevirtual #15                 // Method org/apache/hc/client5/http/protocol/HttpClientContext.getRequestConfig:()Lorg/apache/hc/client5/http/config/RequestConfig;
      47: astore        5
      49: aload         5
      51: invokevirtual #51                 // Method org/apache/hc/client5/http/config/RequestConfig.getResponseTimeout:()Lorg/apache/hc/core5/util/Timeout;
      54: astore        6
      56: aload         6
      58: ifnull        68
      61: aload         4
      63: aload         6
      65: invokevirtual #52                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.setSocketTimeout:(Lorg/apache/hc/core5/util/Timeout;)V
      68: aload         4
      70: aload_1
      71: aload_2
      72: aload_3
      73: invokevirtual #53                 // Method org/apache/hc/client5/http/nio/AsyncConnectionEndpoint.execute:(Ljava/lang/String;Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      76: aload_3
      77: invokevirtual #15                 // Method org/apache/hc/client5/http/protocol/HttpClientContext.getRequestConfig:()Lorg/apache/hc/client5/http/config/RequestConfig;
      80: invokevirtual #54                 // Method org/apache/hc/client5/http/config/RequestConfig.isHardCancellationEnabled:()Z
      83: ifeq          96
      86: new           #55                 // class org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$3
      89: dup
      90: aload_0
      91: aload_2
      92: invokespecial #56                 // Method org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$3."<init>":(Lorg/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime;Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;)V
      95: areturn
      96: goto          118
      99: aload_0
     100: aload_3
     101: new           #57                 // class org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$4
     104: dup
     105: aload_0
     106: aload         4
     108: aload_1
     109: aload_2
     110: aload_3
     111: invokespecial #58                 // Method org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime$4."<init>":(Lorg/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime;Lorg/apache/hc/client5/http/nio/AsyncConnectionEndpoint;Ljava/lang/String;Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;Lorg/apache/hc/client5/http/protocol/HttpClientContext;)V
     114: invokevirtual #59                 // Method connectEndpoint:(Lorg/apache/hc/client5/http/protocol/HttpClientContext;Lorg/apache/hc/core5/concurrent/FutureCallback;)Lorg/apache/hc/core5/concurrent/Cancellable;
     117: pop
     118: invokestatic  #25                 // Method org/apache/hc/client5/http/impl/Operations.nonCancellable:()Lorg/apache/hc/core5/concurrent/Cancellable;
     121: areturn

  public void markConnectionReusable(java.lang.Object, org.apache.hc.core5.util.TimeValue);
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #3                  // Field reusable:Z
       5: aload_0
       6: aload_1
       7: putfield      #14                 // Field state:Ljava/lang/Object;
      10: aload_0
      11: aload_2
      12: putfield      #12                 // Field validDuration:Lorg/apache/hc/core5/util/TimeValue;
      15: return

  public void markConnectionNonReusable();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #3                  // Field reusable:Z
       5: aload_0
       6: aconst_null
       7: putfield      #14                 // Field state:Ljava/lang/Object;
      10: aload_0
      11: aconst_null
      12: putfield      #12                 // Field validDuration:Lorg/apache/hc/core5/util/TimeValue;
      15: return

  public org.apache.hc.client5.http.async.AsyncExecRuntime fork();
    Code:
       0: new           #60                 // class org/apache/hc/client5/http/impl/async/InternalHttpAsyncExecRuntime
       3: dup
       4: aload_0
       5: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       8: aload_0
       9: getfield      #6                  // Field manager:Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;
      12: aload_0
      13: getfield      #7                  // Field connectionInitiator:Lorg/apache/hc/core5/reactor/ConnectionInitiator;
      16: aload_0
      17: getfield      #1                  // Field pushHandlerFactory:Lorg/apache/hc/core5/http/nio/HandlerFactory;
      20: aload_0
      21: getfield      #8                  // Field versionPolicy:Lorg/apache/hc/core5/http2/HttpVersionPolicy;
      24: invokespecial #61                 // Method "<init>":(Lorg/slf4j/Logger;Lorg/apache/hc/client5/http/nio/AsyncClientConnectionManager;Lorg/apache/hc/core5/reactor/ConnectionInitiator;Lorg/apache/hc/core5/http/nio/HandlerFactory;Lorg/apache/hc/core5/http2/HttpVersionPolicy;)V
      27: areturn

  static java.util.concurrent.atomic.AtomicReference access$000(org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime);
    Code:
       0: aload_0
       1: getfield      #4                  // Field endpointRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static boolean access$102(org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #3                  // Field reusable:Z
       6: ireturn

  static org.slf4j.Logger access$200(org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: areturn

  static org.apache.hc.core5.http.nio.HandlerFactory access$300(org.apache.hc.client5.http.impl.async.InternalHttpAsyncExecRuntime);
    Code:
       0: aload_0
       1: getfield      #1                  // Field pushHandlerFactory:Lorg/apache/hc/core5/http/nio/HandlerFactory;
       4: areturn
}
