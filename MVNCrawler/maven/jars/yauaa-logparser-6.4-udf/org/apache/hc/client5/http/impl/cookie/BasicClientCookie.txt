Compiled from "BasicClientCookie.java"
public final class org.apache.hc.client5.http.impl.cookie.BasicClientCookie implements org.apache.hc.client5.http.cookie.SetCookie,java.lang.Cloneable,java.io.Serializable {
  private static final long serialVersionUID;

  private final java.lang.String name;

  private java.util.Map<java.lang.String, java.lang.String> attribs;

  private java.lang.String value;

  private java.lang.String cookieDomain;

  private java.util.Date cookieExpiryDate;

  private java.lang.String cookiePath;

  private boolean isSecure;

  private java.util.Date creationDate;

  public org.apache.hc.client5.http.impl.cookie.BasicClientCookie(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Name
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field name:Ljava/lang/String;
      16: aload_0
      17: new           #5                  // class java/util/HashMap
      20: dup
      21: invokespecial #6                  // Method java/util/HashMap."<init>":()V
      24: putfield      #7                  // Field attribs:Ljava/util/Map;
      27: aload_0
      28: aload_2
      29: putfield      #8                  // Field value:Ljava/lang/String;
      32: return

  public java.lang.String getName();
    Code:
       0: aload_0
       1: getfield      #4                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #8                  // Field value:Ljava/lang/String;
       4: areturn

  public void setValue(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field value:Ljava/lang/String;
       5: return

  public java.util.Date getExpiryDate();
    Code:
       0: aload_0
       1: getfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
       4: areturn

  public void setExpiryDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
       5: return

  public boolean isPersistent();
    Code:
       0: aconst_null
       1: aload_0
       2: getfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
       5: if_acmpeq     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.String getDomain();
    Code:
       0: aload_0
       1: getfield      #10                 // Field cookieDomain:Ljava/lang/String;
       4: areturn

  public void setDomain(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: aload_1
       6: getstatic     #11                 // Field java/util/Locale.ROOT:Ljava/util/Locale;
       9: invokevirtual #12                 // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
      12: putfield      #10                 // Field cookieDomain:Ljava/lang/String;
      15: goto          23
      18: aload_0
      19: aconst_null
      20: putfield      #10                 // Field cookieDomain:Ljava/lang/String;
      23: return

  public java.lang.String getPath();
    Code:
       0: aload_0
       1: getfield      #13                 // Field cookiePath:Ljava/lang/String;
       4: areturn

  public void setPath(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field cookiePath:Ljava/lang/String;
       5: return

  public boolean isSecure();
    Code:
       0: aload_0
       1: getfield      #14                 // Field isSecure:Z
       4: ireturn

  public void setSecure(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #14                 // Field isSecure:Z
       5: return

  public boolean isExpired(java.util.Date);
    Code:
       0: aload_1
       1: ldc           #15                 // String Date
       3: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
      11: ifnull        33
      14: aload_0
      15: getfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
      18: invokevirtual #16                 // Method java/util/Date.getTime:()J
      21: aload_1
      22: invokevirtual #16                 // Method java/util/Date.getTime:()J
      25: lcmp
      26: ifgt          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: ireturn

  public java.util.Date getCreationDate();
    Code:
       0: aload_0
       1: getfield      #17                 // Field creationDate:Ljava/util/Date;
       4: areturn

  public void setCreationDate(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field creationDate:Ljava/util/Date;
       5: return

  public void setAttribute(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field attribs:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.String getAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field attribs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #19,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #20                 // class java/lang/String
      13: areturn

  public boolean containsAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field attribs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean removeAttribute(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field attribs:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object.clone:()Ljava/lang/Object;
       4: checkcast     #24                 // class org/apache/hc/client5/http/impl/cookie/BasicClientCookie
       7: astore_1
       8: aload_1
       9: new           #5                  // class java/util/HashMap
      12: dup
      13: aload_0
      14: getfield      #7                  // Field attribs:Ljava/util/Map;
      17: invokespecial #25                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      20: putfield      #7                  // Field attribs:Ljava/util/Map;
      23: aload_1
      24: areturn

  public java.lang.String toString();
    Code:
       0: new           #26                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #28                 // String [name:
      11: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #4                  // Field name:Ljava/lang/String;
      20: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #30                 // String ;
      27: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #31                 // String value:
      34: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_1
      39: aload_0
      40: getfield      #8                  // Field value:Ljava/lang/String;
      43: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: ldc           #30                 // String ;
      50: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: pop
      54: aload_1
      55: ldc           #32                 // String domain:
      57: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: pop
      61: aload_1
      62: aload_0
      63: getfield      #10                 // Field cookieDomain:Ljava/lang/String;
      66: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: pop
      70: aload_1
      71: ldc           #30                 // String ;
      73: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: pop
      77: aload_1
      78: ldc           #33                 // String path:
      80: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: aload_0
      86: getfield      #13                 // Field cookiePath:Ljava/lang/String;
      89: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: pop
      93: aload_1
      94: ldc           #30                 // String ;
      96: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: pop
     100: aload_1
     101: ldc           #34                 // String expiry:
     103: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     106: pop
     107: aload_1
     108: aload_0
     109: getfield      #9                  // Field cookieExpiryDate:Ljava/util/Date;
     112: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     115: pop
     116: aload_1
     117: ldc           #36                 // String ]
     119: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     122: pop
     123: aload_1
     124: invokevirtual #37                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     127: areturn
}
