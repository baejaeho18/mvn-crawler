Compiled from "LoggingAsyncClientExchangeHandler.java"
final class org.apache.hc.client5.http.impl.async.LoggingAsyncClientExchangeHandler implements org.apache.hc.core5.http.nio.AsyncClientExchangeHandler,org.apache.hc.core5.util.Identifiable {
  private final org.slf4j.Logger log;

  private final java.lang.String exchangeId;

  private final org.apache.hc.core5.http.nio.AsyncClientExchangeHandler handler;

  org.apache.hc.client5.http.impl.async.LoggingAsyncClientExchangeHandler(org.slf4j.Logger, java.lang.String, org.apache.hc.core5.http.nio.AsyncClientExchangeHandler);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field log:Lorg/slf4j/Logger;
       9: aload_0
      10: aload_2
      11: putfield      #1                  // Field exchangeId:Ljava/lang/String;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      19: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #1                  // Field exchangeId:Ljava/lang/String;
       4: areturn

  public void releaseResources();
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
       4: invokeinterface #5,  1            // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.releaseResources:()V
       9: return

  public void produceRequest(org.apache.hc.core5.http.nio.RequestChannel, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
       4: new           #6                  // class org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$1
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #7                  // Method org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$1."<init>":(Lorg/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler;Lorg/apache/hc/core5/http/nio/RequestChannel;)V
      13: aload_2
      14: invokeinterface #8,  3            // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.produceRequest:(Lorg/apache/hc/core5/http/nio/RequestChannel;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      19: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
       4: invokeinterface #9,  1            // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.available:()I
       9: ireturn

  public void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          27
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #11                 // String {} produce request data
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      31: new           #13                 // class org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$2
      34: dup
      35: aload_0
      36: aload_1
      37: invokespecial #14                 // Method org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$2."<init>":(Lorg/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler;Lorg/apache/hc/core5/http/nio/DataStreamChannel;)V
      40: invokeinterface #15,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.produce:(Lorg/apache/hc/core5/http/nio/DataStreamChannel;)V
      45: return

  public void consumeInformation(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          35
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #16                 // String {} information response {}
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: new           #17                 // class org/apache/hc/core5/http/message/StatusLine
      25: dup
      26: aload_1
      27: invokespecial #18                 // Method org/apache/hc/core5/http/message/StatusLine."<init>":(Lorg/apache/hc/core5/http/HttpResponse;)V
      30: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      35: aload_0
      36: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      39: aload_1
      40: aload_2
      41: invokeinterface #20,  3           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.consumeInformation:(Lorg/apache/hc/core5/http/HttpResponse;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      46: return

  public void consumeResponse(org.apache.hc.core5.http.HttpResponse, org.apache.hc.core5.http.EntityDetails, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          81
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #21                 // String {} consume response {}, {}
      18: iconst_3
      19: anewarray     #22                 // class java/lang/Object
      22: dup
      23: iconst_0
      24: aload_0
      25: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      28: aastore
      29: dup
      30: iconst_1
      31: new           #17                 // class org/apache/hc/core5/http/message/StatusLine
      34: dup
      35: aload_1
      36: invokespecial #18                 // Method org/apache/hc/core5/http/message/StatusLine."<init>":(Lorg/apache/hc/core5/http/HttpResponse;)V
      39: aastore
      40: dup
      41: iconst_2
      42: aload_2
      43: ifnull        73
      46: new           #23                 // class java/lang/StringBuilder
      49: dup
      50: invokespecial #24                 // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #25                 // String entity len
      55: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_2
      59: invokeinterface #27,  1           // InterfaceMethod org/apache/hc/core5/http/EntityDetails.getContentLength:()J
      64: invokevirtual #28                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      67: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: goto          75
      73: ldc           #30                 // String  null entity
      75: aastore
      76: invokeinterface #31,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: aload_0
      82: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      85: aload_1
      86: aload_2
      87: aload_3
      88: invokeinterface #32,  4           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.consumeResponse:(Lorg/apache/hc/core5/http/HttpResponse;Lorg/apache/hc/core5/http/EntityDetails;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      93: return

  public void updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
       4: new           #33                 // class org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$3
       7: dup
       8: aload_0
       9: aload_1
      10: invokespecial #34                 // Method org/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler$3."<init>":(Lorg/apache/hc/client5/http/impl/async/LoggingAsyncClientExchangeHandler;Lorg/apache/hc/core5/http/nio/CapacityChannel;)V
      13: invokeinterface #35,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.updateCapacity:(Lorg/apache/hc/core5/http/nio/CapacityChannel;)V
      18: return

  public void consume(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          34
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #36                 // String {} consume response data, len {} bytes
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: aload_1
      23: invokevirtual #37                 // Method java/nio/ByteBuffer.remaining:()I
      26: invokestatic  #38                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      38: aload_1
      39: invokeinterface #39,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.consume:(Ljava/nio/ByteBuffer;)V
      44: return

  public void streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          27
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #40                 // String {} end of response data
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      31: aload_1
      32: invokeinterface #41,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.streamEnd:(Ljava/util/List;)V
      37: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          31
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #42                 // String {} execution failed: {}
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: aload_1
      23: invokevirtual #43                 // Method java/lang/Exception.getMessage:()Ljava/lang/String;
      26: invokeinterface #19,  4           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      35: aload_1
      36: invokeinterface #44,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      41: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: invokeinterface #10,  1           // InterfaceMethod org/slf4j/Logger.isDebugEnabled:()Z
       9: ifeq          27
      12: aload_0
      13: getfield      #2                  // Field log:Lorg/slf4j/Logger;
      16: ldc           #45                 // String {} execution cancelled
      18: aload_0
      19: getfield      #1                  // Field exchangeId:Ljava/lang/String;
      22: invokeinterface #12,  3           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;Ljava/lang/Object;)V
      27: aload_0
      28: getfield      #4                  // Field handler:Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;
      31: invokeinterface #46,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.cancel:()V
      36: return

  static org.slf4j.Logger access$000(org.apache.hc.client5.http.impl.async.LoggingAsyncClientExchangeHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field log:Lorg/slf4j/Logger;
       4: areturn

  static java.lang.String access$100(org.apache.hc.client5.http.impl.async.LoggingAsyncClientExchangeHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field exchangeId:Ljava/lang/String;
       4: areturn
}
