Compiled from "SharedOutputBuffer.java"
public final class org.apache.hc.core5.http.nio.support.classic.SharedOutputBuffer extends org.apache.hc.core5.http.nio.support.classic.AbstractSharedBuffer implements org.apache.hc.core5.http.nio.support.classic.ContentOutputBuffer {
  private volatile org.apache.hc.core5.http.nio.DataStreamChannel dataStreamChannel;

  private volatile boolean hasCapacity;

  private volatile boolean endStreamPropagated;

  public org.apache.hc.core5.http.nio.support.classic.SharedOutputBuffer(java.util.concurrent.locks.ReentrantLock, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #1                  // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer."<init>":(Ljava/util/concurrent/locks/ReentrantLock;I)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field hasCapacity:Z
      11: aload_0
      12: iconst_0
      13: putfield      #3                  // Field endStreamPropagated:Z
      16: return

  public org.apache.hc.core5.http.nio.support.classic.SharedOutputBuffer(int);
    Code:
       0: aload_0
       1: new           #4                  // class java/util/concurrent/locks/ReentrantLock
       4: dup
       5: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       8: iload_1
       9: invokespecial #6                  // Method "<init>":(Ljava/util/concurrent/locks/ReentrantLock;I)V
      12: return

  public void flush(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: aload_1
       9: putfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      12: aload_0
      13: iconst_1
      14: putfield      #2                  // Field hasCapacity:Z
      17: aload_0
      18: invokevirtual #10                 // Method setOutputMode:()V
      21: aload_0
      22: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      25: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      28: ifeq          45
      31: aload_0
      32: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      35: aload_0
      36: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      39: invokeinterface #13,  2           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.write:(Ljava/nio/ByteBuffer;)I
      44: pop
      45: aload_0
      46: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      49: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      52: ifne          66
      55: aload_0
      56: getfield      #14                 // Field endStream:Z
      59: ifeq          66
      62: aload_0
      63: invokespecial #15                 // Method propagateEndStream:()V
      66: aload_0
      67: getfield      #16                 // Field condition:Ljava/util/concurrent/locks/Condition;
      70: invokeinterface #17,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      75: aload_0
      76: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      79: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      82: goto          95
      85: astore_2
      86: aload_0
      87: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      90: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      93: aload_2
      94: athrow
      95: return
    Exception table:
       from    to  target type
           7    75    85   any
          85    86    85   any

  private void ensureNotAborted() throws java.io.InterruptedIOException;
    Code:
       0: aload_0
       1: getfield      #19                 // Field aborted:Z
       4: ifeq          17
       7: new           #20                 // class java/io/InterruptedIOException
      10: dup
      11: ldc           #21                 // String Operation aborted
      13: invokespecial #22                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_1
       1: iload_2
       2: iload_3
       3: invokestatic  #23                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
       6: astore        4
       8: aload_0
       9: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: invokespecial #24                 // Method ensureNotAborted:()V
      19: aload_0
      20: invokevirtual #25                 // Method setInputMode:()V
      23: aload         4
      25: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      28: ifeq          138
      31: aload         4
      33: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      36: sipush        1024
      39: if_icmpge     70
      42: aload_0
      43: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      46: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      49: aload         4
      51: invokevirtual #26                 // Method java/nio/ByteBuffer.remaining:()I
      54: if_icmple     70
      57: aload_0
      58: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      61: aload         4
      63: invokevirtual #27                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      66: pop
      67: goto          23
      70: aload_0
      71: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      74: invokevirtual #28                 // Method java/nio/ByteBuffer.position:()I
      77: ifgt          87
      80: aload_0
      81: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      84: ifnonnull     91
      87: aload_0
      88: invokespecial #29                 // Method waitFlush:()V
      91: aload_0
      92: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      95: invokevirtual #28                 // Method java/nio/ByteBuffer.position:()I
      98: ifne          23
     101: aload_0
     102: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
     105: ifnull        23
     108: aload_0
     109: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
     112: aload         4
     114: invokeinterface #13,  2           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.write:(Ljava/nio/ByteBuffer;)I
     119: istore        5
     121: iload         5
     123: ifne          135
     126: aload_0
     127: iconst_0
     128: putfield      #2                  // Field hasCapacity:Z
     131: aload_0
     132: invokespecial #29                 // Method waitFlush:()V
     135: goto          23
     138: aload_0
     139: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     142: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     145: goto          160
     148: astore        6
     150: aload_0
     151: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
     154: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
     157: aload         6
     159: athrow
     160: return
    Exception table:
       from    to  target type
          15   138   148   any
         148   150   148   any

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #24                 // Method ensureNotAborted:()V
      11: aload_0
      12: invokevirtual #25                 // Method setInputMode:()V
      15: aload_0
      16: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      19: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      22: ifne          29
      25: aload_0
      26: invokespecial #29                 // Method waitFlush:()V
      29: aload_0
      30: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      33: iload_1
      34: i2b
      35: invokevirtual #30                 // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      38: pop
      39: aload_0
      40: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      43: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      46: goto          59
      49: astore_2
      50: aload_0
      51: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      54: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      57: aload_2
      58: athrow
      59: return
    Exception table:
       from    to  target type
           7    39    49   any
          49    50    49   any

  public void writeCompleted() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field endStream:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: getfield      #14                 // Field endStream:Z
      19: ifne          64
      22: aload_0
      23: iconst_1
      24: putfield      #14                 // Field endStream:Z
      27: aload_0
      28: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      31: ifnull        64
      34: aload_0
      35: invokevirtual #10                 // Method setOutputMode:()V
      38: aload_0
      39: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      42: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      45: ifeq          60
      48: aload_0
      49: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      52: invokeinterface #31,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.requestOutput:()V
      57: goto          64
      60: aload_0
      61: invokespecial #15                 // Method propagateEndStream:()V
      64: aload_0
      65: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      68: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      71: goto          84
      74: astore_1
      75: aload_0
      76: getfield      #7                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      79: invokevirtual #18                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      82: aload_1
      83: athrow
      84: return
    Exception table:
       from    to  target type
          15    64    74   any
          74    75    74   any

  private void waitFlush() throws java.io.InterruptedIOException;
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method setOutputMode:()V
       4: aload_0
       5: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
       8: ifnull        20
      11: aload_0
      12: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      15: invokeinterface #31,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.requestOutput:()V
      20: aload_0
      21: invokespecial #24                 // Method ensureNotAborted:()V
      24: aload_0
      25: invokevirtual #11                 // Method buffer:()Ljava/nio/ByteBuffer;
      28: invokevirtual #12                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      31: ifne          41
      34: aload_0
      35: getfield      #2                  // Field hasCapacity:Z
      38: ifne          79
      41: aload_0
      42: getfield      #16                 // Field condition:Ljava/util/concurrent/locks/Condition;
      45: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      50: goto          72
      53: astore_1
      54: invokestatic  #34                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      57: invokevirtual #35                 // Method java/lang/Thread.interrupt:()V
      60: new           #20                 // class java/io/InterruptedIOException
      63: dup
      64: aload_1
      65: invokevirtual #36                 // Method java/lang/InterruptedException.getMessage:()Ljava/lang/String;
      68: invokespecial #22                 // Method java/io/InterruptedIOException."<init>":(Ljava/lang/String;)V
      71: athrow
      72: aload_0
      73: invokespecial #24                 // Method ensureNotAborted:()V
      76: goto          24
      79: aload_0
      80: invokevirtual #25                 // Method setInputMode:()V
      83: return
    Exception table:
       from    to  target type
          41    50    53   Class java/lang/InterruptedException

  private void propagateEndStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field endStreamPropagated:Z
       4: ifne          21
       7: aload_0
       8: getfield      #9                  // Field dataStreamChannel:Lorg/apache/hc/core5/http/nio/DataStreamChannel;
      11: invokeinterface #37,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.endStream:()V
      16: aload_0
      17: iconst_1
      18: putfield      #3                  // Field endStreamPropagated:Z
      21: return

  public boolean isEndStream();
    Code:
       0: aload_0
       1: invokespecial #38                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.isEndStream:()Z
       4: ireturn

  public void reset();
    Code:
       0: aload_0
       1: invokespecial #39                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.reset:()V
       4: return

  public void abort();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.abort:()V
       4: return

  public int length();
    Code:
       0: aload_0
       1: invokespecial #41                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.length:()I
       4: ireturn

  public int capacity();
    Code:
       0: aload_0
       1: invokespecial #42                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.capacity:()I
       4: ireturn

  public boolean hasData();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractSharedBuffer.hasData:()Z
       4: ireturn
}
