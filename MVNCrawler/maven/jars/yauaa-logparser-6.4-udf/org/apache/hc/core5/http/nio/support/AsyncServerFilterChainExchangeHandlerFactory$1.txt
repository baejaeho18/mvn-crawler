Compiled from "AsyncServerFilterChainExchangeHandlerFactory.java"
class org.apache.hc.core5.http.nio.support.AsyncServerFilterChainExchangeHandlerFactory$1 implements org.apache.hc.core5.http.nio.AsyncServerExchangeHandler {
  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.http.nio.AsyncDataConsumer> dataConsumerRef;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.http.nio.AsyncResponseProducer> responseProducerRef;

  final org.apache.hc.core5.http.nio.support.AsyncServerFilterChainExchangeHandlerFactory this$0;

  org.apache.hc.core5.http.nio.support.AsyncServerFilterChainExchangeHandlerFactory$1(org.apache.hc.core5.http.nio.support.AsyncServerFilterChainExchangeHandlerFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      17: putfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      20: aload_0
      21: new           #4                  // class java/util/concurrent/atomic/AtomicReference
      24: dup
      25: invokespecial #5                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      28: putfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      31: return

  public void handleRequest(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.EntityDetails, org.apache.hc.core5.http.nio.ResponseChannel, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_0
       5: getfield      #2                  // Field this$0:Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;
       8: invokestatic  #7                  // Method org/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory.access$100:(Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;)Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainElement;
      11: aload_1
      12: aload_2
      13: aload         4
      15: new           #8                  // class org/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory$1$1
      18: dup
      19: aload_0
      20: aload_3
      21: aload         4
      23: invokespecial #9                  // Method org/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory$1$1."<init>":(Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory$1;Lorg/apache/hc/core5/http/nio/ResponseChannel;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      26: invokevirtual #10                 // Method org/apache/hc/core5/http/nio/support/AsyncServerFilterChainElement.handle:(Lorg/apache/hc/core5/http/HttpRequest;Lorg/apache/hc/core5/http/EntityDetails;Lorg/apache/hc/core5/http/protocol/HttpContext;Lorg/apache/hc/core5/http/nio/AsyncFilterChain$ResponseTrigger;)Lorg/apache/hc/core5/http/nio/AsyncDataConsumer;
      29: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      32: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;
       4: invokestatic  #12                 // Method org/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory.access$200:(Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;)Lorg/apache/hc/core5/function/Callback;
       7: ifnull        23
      10: aload_0
      11: getfield      #2                  // Field this$0:Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;
      14: invokestatic  #12                 // Method org/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory.access$200:(Lorg/apache/hc/core5/http/nio/support/AsyncServerFilterChainExchangeHandlerFactory;)Lorg/apache/hc/core5/function/Callback;
      17: aload_1
      18: invokeinterface #13,  2           // InterfaceMethod org/apache/hc/core5/function/Callback.execute:(Ljava/lang/Object;)V
      23: aload_0
      24: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      27: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      30: checkcast     #15                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      33: astore_2
      34: aload_2
      35: ifnull        45
      38: aload_2
      39: aload_1
      40: invokeinterface #16,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.failed:(Ljava/lang/Exception;)V
      45: return

  public void updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncDataConsumer
      10: astore_2
      11: aload_2
      12: ifnull        25
      15: aload_2
      16: aload_1
      17: invokeinterface #18,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncDataConsumer.updateCapacity:(Lorg/apache/hc/core5/http/nio/CapacityChannel;)V
      22: goto          33
      25: aload_1
      26: ldc           #19                 // int 2147483647
      28: invokeinterface #20,  2           // InterfaceMethod org/apache/hc/core5/http/nio/CapacityChannel.update:(I)V
      33: return

  public void consume(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncDataConsumer
      10: astore_2
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: aload_1
      17: invokeinterface #21,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncDataConsumer.consume:(Ljava/nio/ByteBuffer;)V
      22: return

  public void streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncDataConsumer
      10: astore_2
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: aload_1
      17: invokeinterface #22,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncDataConsumer.streamEnd:(Ljava/util/List;)V
      22: return

  public int available();
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #15                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      10: astore_1
      11: aload_1
      12: ldc           #23                 // String Response producer
      14: invokestatic  #24                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_1
      18: invokeinterface #25,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.available:()I
      23: ireturn

  public void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #15                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      10: astore_2
      11: aload_2
      12: ldc           #23                 // String Response producer
      14: invokestatic  #24                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #26,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.produce:(Lorg/apache/hc/core5/http/nio/DataStreamChannel;)V
      24: return

  public void releaseResources();
    Code:
       0: aload_0
       1: getfield      #6                  // Field dataConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncDataConsumer
      11: astore_1
      12: aload_1
      13: ifnull        22
      16: aload_1
      17: invokeinterface #28,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncDataConsumer.releaseResources:()V
      22: aload_0
      23: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      26: aconst_null
      27: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #15                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      33: astore_2
      34: aload_2
      35: ifnull        44
      38: aload_2
      39: invokeinterface #29,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.releaseResources:()V
      44: return

  static java.util.concurrent.atomic.AtomicReference access$000(org.apache.hc.core5.http.nio.support.AsyncServerFilterChainExchangeHandlerFactory$1);
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn
}
