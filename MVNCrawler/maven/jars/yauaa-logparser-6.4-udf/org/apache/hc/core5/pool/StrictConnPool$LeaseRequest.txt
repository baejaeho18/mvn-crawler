Compiled from "StrictConnPool.java"
class org.apache.hc.core5.pool.StrictConnPool$LeaseRequest<T, C extends org.apache.hc.core5.io.ModalCloseable> {
  private final T route;

  private final java.lang.Object state;

  private final org.apache.hc.core5.util.Deadline deadline;

  private final org.apache.hc.core5.concurrent.BasicFuture<org.apache.hc.core5.pool.PoolEntry<T, C>> future;

  private final java.util.concurrent.atomic.AtomicBoolean completed;

  private volatile org.apache.hc.core5.pool.PoolEntry<T, C> result;

  private volatile java.lang.Exception ex;

  public org.apache.hc.core5.pool.StrictConnPool$LeaseRequest(T, java.lang.Object, org.apache.hc.core5.util.Timeout, org.apache.hc.core5.concurrent.BasicFuture<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field route:Ljava/lang/Object;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field state:Ljava/lang/Object;
      14: aload_0
      15: aload_3
      16: invokestatic  #4                  // Method org/apache/hc/core5/util/Deadline.calculate:(Lorg/apache/hc/core5/util/TimeValue;)Lorg/apache/hc/core5/util/Deadline;
      19: putfield      #5                  // Field deadline:Lorg/apache/hc/core5/util/Deadline;
      22: aload_0
      23: aload         4
      25: putfield      #6                  // Field future:Lorg/apache/hc/core5/concurrent/BasicFuture;
      28: aload_0
      29: new           #7                  // class java/util/concurrent/atomic/AtomicBoolean
      32: dup
      33: iconst_0
      34: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      37: putfield      #9                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
      40: return

  public T getRoute();
    Code:
       0: aload_0
       1: getfield      #2                  // Field route:Ljava/lang/Object;
       4: areturn

  public java.lang.Object getState();
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:Ljava/lang/Object;
       4: areturn

  public org.apache.hc.core5.util.Deadline getDeadline();
    Code:
       0: aload_0
       1: getfield      #5                  // Field deadline:Lorg/apache/hc/core5/util/Deadline;
       4: areturn

  public boolean isDone();
    Code:
       0: aload_0
       1: getfield      #9                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #9                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: putfield      #12                 // Field ex:Ljava/lang/Exception;
      17: return

  public void completed(org.apache.hc.core5.pool.PoolEntry<T, C>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field completed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          17
      12: aload_0
      13: aload_1
      14: putfield      #13                 // Field result:Lorg/apache/hc/core5/pool/PoolEntry;
      17: return

  public org.apache.hc.core5.concurrent.BasicFuture<org.apache.hc.core5.pool.PoolEntry<T, C>> getFuture();
    Code:
       0: aload_0
       1: getfield      #6                  // Field future:Lorg/apache/hc/core5/concurrent/BasicFuture;
       4: areturn

  public org.apache.hc.core5.pool.PoolEntry<T, C> getResult();
    Code:
       0: aload_0
       1: getfield      #13                 // Field result:Lorg/apache/hc/core5/pool/PoolEntry;
       4: areturn

  public java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #12                 // Field ex:Ljava/lang/Exception;
       4: areturn

  public java.lang.String toString();
    Code:
       0: new           #14                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #16                 // String [
      11: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #2                  // Field route:Ljava/lang/Object;
      20: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_1
      25: ldc           #19                 // String ][
      27: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: aload_0
      33: getfield      #3                  // Field state:Ljava/lang/Object;
      36: invokevirtual #18                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      39: pop
      40: aload_1
      41: ldc           #20                 // String ]
      43: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: pop
      47: aload_1
      48: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: areturn
}
