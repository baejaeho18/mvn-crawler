Compiled from "MonitoringResponseOutOfOrderStrategy.java"
public final class org.apache.hc.core5.http.impl.io.MonitoringResponseOutOfOrderStrategy implements org.apache.hc.core5.http.io.ResponseOutOfOrderStrategy {
  private static final int DEFAULT_CHUNK_SIZE;

  public static final org.apache.hc.core5.http.impl.io.MonitoringResponseOutOfOrderStrategy INSTANCE;

  private final long chunkSize;

  private final long maxChunksToCheck;

  public org.apache.hc.core5.http.impl.io.MonitoringResponseOutOfOrderStrategy();
    Code:
       0: aload_0
       1: ldc2_w        #1                  // long 8192l
       4: invokespecial #3                  // Method "<init>":(J)V
       7: return

  public org.apache.hc.core5.http.impl.io.MonitoringResponseOutOfOrderStrategy(long);
    Code:
       0: aload_0
       1: lload_1
       2: ldc2_w        #4                  // long 9223372036854775807l
       5: invokespecial #6                  // Method "<init>":(JJ)V
       8: return

  public org.apache.hc.core5.http.impl.io.MonitoringResponseOutOfOrderStrategy(long, long);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lload_1
       6: ldc           #8                  // String chunkSize
       8: invokestatic  #9                  // Method org/apache/hc/core5/util/Args.positive:(JLjava/lang/String;)J
      11: putfield      #10                 // Field chunkSize:J
      14: aload_0
      15: lload_3
      16: ldc           #11                 // String maxChunksToCheck
      18: invokestatic  #9                  // Method org/apache/hc/core5/util/Args.positive:(JLjava/lang/String;)J
      21: putfield      #12                 // Field maxChunksToCheck:J
      24: return

  public boolean isEarlyResponseDetected(org.apache.hc.core5.http.ClassicHttpRequest, org.apache.hc.core5.http.io.HttpClientConnection, java.io.InputStream, long, long) throws java.io.IOException;
    Code:
       0: aload_0
       1: lload         4
       3: lload         6
       5: invokespecial #13                 // Method nextWriteStartsNewChunk:(JJ)Z
       8: ifeq          57
      11: aload_2
      12: invokeinterface #14,  1           // InterfaceMethod org/apache/hc/core5/http/io/HttpClientConnection.getSSLSession:()Ljavax/net/ssl/SSLSession;
      17: ifnull        24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: istore        8
      27: iload         8
      29: ifeq          44
      32: aload_2
      33: getstatic     #15                 // Field org/apache/hc/core5/util/Timeout.ONE_MILLISECOND:Lorg/apache/hc/core5/util/Timeout;
      36: invokeinterface #16,  2           // InterfaceMethod org/apache/hc/core5/http/io/HttpClientConnection.isDataAvailable:(Lorg/apache/hc/core5/util/Timeout;)Z
      41: goto          56
      44: aload_3
      45: invokevirtual #17                 // Method java/io/InputStream.available:()I
      48: ifle          55
      51: iconst_1
      52: goto          56
      55: iconst_0
      56: ireturn
      57: iconst_0
      58: ireturn

  private boolean nextWriteStartsNewChunk(long, long);
    Code:
       0: lload_1
       1: aload_0
       2: getfield      #10                 // Field chunkSize:J
       5: ldiv
       6: aload_0
       7: getfield      #12                 // Field maxChunksToCheck:J
      10: invokestatic  #18                 // Method java/lang/Math.min:(JJ)J
      13: lstore        5
      15: lload_1
      16: lload_3
      17: ladd
      18: aload_0
      19: getfield      #10                 // Field chunkSize:J
      22: ldiv
      23: aload_0
      24: getfield      #12                 // Field maxChunksToCheck:J
      27: invokestatic  #18                 // Method java/lang/Math.min:(JJ)J
      30: lstore        7
      32: lload         5
      34: lload         7
      36: lcmp
      37: ifge          44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ireturn

  public java.lang.String toString();
    Code:
       0: new           #19                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #20                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #21                 // String DefaultResponseOutOfOrderStrategy{chunkSize=
       9: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #10                 // Field chunkSize:J
      16: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #24                 // String , maxChunksToCheck=
      21: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #12                 // Field maxChunksToCheck:J
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: bipush        125
      33: invokevirtual #25                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  static {};
    Code:
       0: new           #27                 // class org/apache/hc/core5/http/impl/io/MonitoringResponseOutOfOrderStrategy
       3: dup
       4: invokespecial #28                 // Method "<init>":()V
       7: putstatic     #29                 // Field INSTANCE:Lorg/apache/hc/core5/http/impl/io/MonitoringResponseOutOfOrderStrategy;
      10: return
}
