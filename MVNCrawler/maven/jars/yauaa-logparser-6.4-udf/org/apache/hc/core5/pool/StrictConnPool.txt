Compiled from "StrictConnPool.java"
public class org.apache.hc.core5.pool.StrictConnPool<T, C extends org.apache.hc.core5.io.ModalCloseable> implements org.apache.hc.core5.pool.ManagedConnPool<T, C> {
  private final org.apache.hc.core5.util.TimeValue timeToLive;

  private final org.apache.hc.core5.pool.PoolReusePolicy policy;

  private final org.apache.hc.core5.pool.DisposalCallback<C> disposalCallback;

  private final org.apache.hc.core5.pool.ConnPoolListener<T> connPoolListener;

  private final java.util.Map<T, org.apache.hc.core5.pool.StrictConnPool$PerRoutePool<T, C>> routeToPool;

  private final java.util.LinkedList<org.apache.hc.core5.pool.StrictConnPool$LeaseRequest<T, C>> leasingRequests;

  private final java.util.Set<org.apache.hc.core5.pool.PoolEntry<T, C>> leased;

  private final java.util.LinkedList<org.apache.hc.core5.pool.PoolEntry<T, C>> available;

  private final java.util.concurrent.ConcurrentLinkedQueue<org.apache.hc.core5.pool.StrictConnPool$LeaseRequest<T, C>> completedRequests;

  private final java.util.Map<T, java.lang.Integer> maxPerRoute;

  private final java.util.concurrent.locks.Lock lock;

  private final java.util.concurrent.atomic.AtomicBoolean isShutDown;

  private volatile int defaultMaxPerRoute;

  private volatile int maxTotal;

  public org.apache.hc.core5.pool.StrictConnPool(int, int, org.apache.hc.core5.util.TimeValue, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.pool.DisposalCallback<C>, org.apache.hc.core5.pool.ConnPoolListener<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ldc           #2                  // String Max per route value
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
      10: pop
      11: iload_2
      12: ldc           #4                  // String Max total value
      14: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
      17: pop
      18: aload_0
      19: aload_3
      20: invokestatic  #5                  // Method org/apache/hc/core5/util/TimeValue.defaultsToNegativeOneMillisecond:(Lorg/apache/hc/core5/util/TimeValue;)Lorg/apache/hc/core5/util/TimeValue;
      23: putfield      #6                  // Field timeToLive:Lorg/apache/hc/core5/util/TimeValue;
      26: aload_0
      27: aload         4
      29: ifnull        37
      32: aload         4
      34: goto          40
      37: getstatic     #7                  // Field org/apache/hc/core5/pool/PoolReusePolicy.LIFO:Lorg/apache/hc/core5/pool/PoolReusePolicy;
      40: putfield      #8                  // Field policy:Lorg/apache/hc/core5/pool/PoolReusePolicy;
      43: aload_0
      44: aload         5
      46: putfield      #9                  // Field disposalCallback:Lorg/apache/hc/core5/pool/DisposalCallback;
      49: aload_0
      50: aload         6
      52: putfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
      55: aload_0
      56: new           #11                 // class java/util/HashMap
      59: dup
      60: invokespecial #12                 // Method java/util/HashMap."<init>":()V
      63: putfield      #13                 // Field routeToPool:Ljava/util/Map;
      66: aload_0
      67: new           #14                 // class java/util/LinkedList
      70: dup
      71: invokespecial #15                 // Method java/util/LinkedList."<init>":()V
      74: putfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      77: aload_0
      78: new           #17                 // class java/util/HashSet
      81: dup
      82: invokespecial #18                 // Method java/util/HashSet."<init>":()V
      85: putfield      #19                 // Field leased:Ljava/util/Set;
      88: aload_0
      89: new           #14                 // class java/util/LinkedList
      92: dup
      93: invokespecial #15                 // Method java/util/LinkedList."<init>":()V
      96: putfield      #20                 // Field available:Ljava/util/LinkedList;
      99: aload_0
     100: new           #21                 // class java/util/concurrent/ConcurrentLinkedQueue
     103: dup
     104: invokespecial #22                 // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
     107: putfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
     110: aload_0
     111: new           #11                 // class java/util/HashMap
     114: dup
     115: invokespecial #12                 // Method java/util/HashMap."<init>":()V
     118: putfield      #24                 // Field maxPerRoute:Ljava/util/Map;
     121: aload_0
     122: new           #25                 // class java/util/concurrent/locks/ReentrantLock
     125: dup
     126: invokespecial #26                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
     129: putfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     132: aload_0
     133: new           #28                 // class java/util/concurrent/atomic/AtomicBoolean
     136: dup
     137: iconst_0
     138: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
     141: putfield      #30                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
     144: aload_0
     145: iload_1
     146: putfield      #31                 // Field defaultMaxPerRoute:I
     149: aload_0
     150: iload_2
     151: putfield      #32                 // Field maxTotal:I
     154: return

  public org.apache.hc.core5.pool.StrictConnPool(int, int, org.apache.hc.core5.util.TimeValue, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.pool.ConnPoolListener<T>);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: aload         5
       9: invokespecial #33                 // Method "<init>":(IILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/DisposalCallback;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      12: return

  public org.apache.hc.core5.pool.StrictConnPool(int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: getstatic     #34                 // Field org/apache/hc/core5/util/TimeValue.NEG_ONE_MILLISECOND:Lorg/apache/hc/core5/util/TimeValue;
       6: getstatic     #7                  // Field org/apache/hc/core5/pool/PoolReusePolicy.LIFO:Lorg/apache/hc/core5/pool/PoolReusePolicy;
       9: aconst_null
      10: invokespecial #35                 // Method "<init>":(IILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      13: return

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #30                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void close(org.apache.hc.core5.io.CloseMode);
    Code:
       0: aload_0
       1: getfield      #30                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #37                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          125
      12: aload_0
      13: invokespecial #38                 // Method fireCallbacks:()V
      16: aload_0
      17: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      25: aload_0
      26: getfield      #13                 // Field routeToPool:Ljava/util/Map;
      29: invokeinterface #40,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      34: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      39: astore_2
      40: aload_2
      41: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          67
      49: aload_2
      50: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #44                 // class org/apache/hc/core5/pool/StrictConnPool$PerRoutePool
      58: astore_3
      59: aload_3
      60: aload_1
      61: invokevirtual #45                 // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.shutdown:(Lorg/apache/hc/core5/io/CloseMode;)V
      64: goto          40
      67: aload_0
      68: getfield      #13                 // Field routeToPool:Ljava/util/Map;
      71: invokeinterface #46,  1           // InterfaceMethod java/util/Map.clear:()V
      76: aload_0
      77: getfield      #19                 // Field leased:Ljava/util/Set;
      80: invokeinterface #47,  1           // InterfaceMethod java/util/Set.clear:()V
      85: aload_0
      86: getfield      #20                 // Field available:Ljava/util/LinkedList;
      89: invokevirtual #48                 // Method java/util/LinkedList.clear:()V
      92: aload_0
      93: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      96: invokevirtual #48                 // Method java/util/LinkedList.clear:()V
      99: aload_0
     100: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     103: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     108: goto          125
     111: astore        4
     113: aload_0
     114: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     117: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     122: aload         4
     124: athrow
     125: return
    Exception table:
       from    to  target type
          25    99   111   any
         111   113   111   any

  public void close();
    Code:
       0: aload_0
       1: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
       4: invokevirtual #51                 // Method close:(Lorg/apache/hc/core5/io/CloseMode;)V
       7: return

  private org.apache.hc.core5.pool.StrictConnPool$PerRoutePool<T, C> getPool(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field routeToPool:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #44                 // class org/apache/hc/core5/pool/StrictConnPool$PerRoutePool
      13: astore_2
      14: aload_2
      15: ifnonnull     43
      18: new           #44                 // class org/apache/hc/core5/pool/StrictConnPool$PerRoutePool
      21: dup
      22: aload_1
      23: aload_0
      24: getfield      #9                  // Field disposalCallback:Lorg/apache/hc/core5/pool/DisposalCallback;
      27: invokespecial #53                 // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool."<init>":(Ljava/lang/Object;Lorg/apache/hc/core5/pool/DisposalCallback;)V
      30: astore_2
      31: aload_0
      32: getfield      #13                 // Field routeToPool:Ljava/util/Map;
      35: aload_1
      36: aload_2
      37: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: aload_2
      44: areturn

  public java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T, C>> lease(T, java.lang.Object, org.apache.hc.core5.util.Timeout, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_1
       1: ldc           #55                 // String Route
       3: invokestatic  #56                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_3
       8: ldc           #57                 // String Request timeout
      10: invokestatic  #56                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #30                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
      18: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ldc           #58                 // String Connection pool shut down
      31: invokestatic  #59                 // Method org/apache/hc/core5/util/Asserts.check:(ZLjava/lang/String;)V
      34: aload_3
      35: invokestatic  #60                 // Method org/apache/hc/core5/util/Deadline.calculate:(Lorg/apache/hc/core5/util/TimeValue;)Lorg/apache/hc/core5/util/Deadline;
      38: astore        5
      40: new           #61                 // class org/apache/hc/core5/pool/StrictConnPool$1
      43: dup
      44: aload_0
      45: aload         4
      47: invokespecial #62                 // Method org/apache/hc/core5/pool/StrictConnPool$1."<init>":(Lorg/apache/hc/core5/pool/StrictConnPool;Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      50: astore        6
      52: aload_0
      53: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      56: aload_3
      57: invokevirtual #63                 // Method org/apache/hc/core5/util/Timeout.getDuration:()J
      60: aload_3
      61: invokevirtual #64                 // Method org/apache/hc/core5/util/Timeout.getTimeUnit:()Ljava/util/concurrent/TimeUnit;
      64: invokeinterface #65,  4           // InterfaceMethod java/util/concurrent/locks/Lock.tryLock:(JLjava/util/concurrent/TimeUnit;)Z
      69: istore        7
      71: goto          91
      74: astore        8
      76: invokestatic  #67                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      79: invokevirtual #68                 // Method java/lang/Thread.interrupt:()V
      82: aload         6
      84: invokevirtual #69                 // Method org/apache/hc/core5/concurrent/BasicFuture.cancel:()Z
      87: pop
      88: aload         6
      90: areturn
      91: iload         7
      93: ifeq          192
      96: new           #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      99: dup
     100: aload_1
     101: aload_2
     102: aload_3
     103: aload         6
     105: invokespecial #71                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest."<init>":(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Lorg/apache/hc/core5/concurrent/BasicFuture;)V
     108: astore        8
     110: aload_0
     111: aload         8
     113: invokespecial #72                 // Method processPendingRequest:(Lorg/apache/hc/core5/pool/StrictConnPool$LeaseRequest;)Z
     116: istore        9
     118: aload         8
     120: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
     123: ifne          141
     126: iload         9
     128: ifne          141
     131: aload_0
     132: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
     135: aload         8
     137: invokevirtual #74                 // Method java/util/LinkedList.add:(Ljava/lang/Object;)Z
     140: pop
     141: aload         8
     143: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
     146: ifeq          159
     149: aload_0
     150: getfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
     153: aload         8
     155: invokevirtual #75                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
     158: pop
     159: aload_0
     160: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     163: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     168: goto          185
     171: astore        10
     173: aload_0
     174: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     177: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     182: aload         10
     184: athrow
     185: aload_0
     186: invokespecial #38                 // Method fireCallbacks:()V
     189: goto          203
     192: aload         6
     194: aload         5
     196: invokestatic  #76                 // Method org/apache/hc/core5/util/DeadlineTimeoutException.from:(Lorg/apache/hc/core5/util/Deadline;)Lorg/apache/hc/core5/util/DeadlineTimeoutException;
     199: invokevirtual #77                 // Method org/apache/hc/core5/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
     202: pop
     203: aload         6
     205: areturn
    Exception table:
       from    to  target type
          52    71    74   Class java/lang/InterruptedException
          96   159   171   any
         171   173   171   any

  public java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T, C>> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #78                 // Field org/apache/hc/core5/util/Timeout.DISABLED:Lorg/apache/hc/core5/util/Timeout;
       6: aconst_null
       7: invokevirtual #79                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      10: areturn

  public void release(org.apache.hc.core5.pool.PoolEntry<T, C>, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #30                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       9: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      12: ifeq          16
      15: return
      16: iload_2
      17: ifne          27
      20: aload_1
      21: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
      24: invokevirtual #80                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
      27: aload_0
      28: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      31: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      36: aload_0
      37: getfield      #19                 // Field leased:Ljava/util/Set;
      40: aload_1
      41: invokeinterface #81,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      46: ifeq          214
      49: aload_0
      50: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
      53: ifnull        70
      56: aload_0
      57: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
      60: aload_1
      61: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      64: aload_0
      65: invokeinterface #83,  3           // InterfaceMethod org/apache/hc/core5/pool/ConnPoolListener.onRelease:(Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolStats;)V
      70: aload_0
      71: aload_1
      72: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      75: invokespecial #84                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/StrictConnPool$PerRoutePool;
      78: astore_3
      79: aload_1
      80: invokevirtual #85                 // Method org/apache/hc/core5/pool/PoolEntry.hasConnection:()Z
      83: ifeq          94
      86: iload_2
      87: ifeq          94
      90: iconst_1
      91: goto          95
      94: iconst_0
      95: istore        4
      97: aload_3
      98: aload_1
      99: iload         4
     101: invokevirtual #86                 // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.free:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
     104: iload         4
     106: ifeq          200
     109: getstatic     #87                 // Field org/apache/hc/core5/pool/StrictConnPool$4.$SwitchMap$org$apache$hc$core5$pool$PoolReusePolicy:[I
     112: aload_0
     113: getfield      #8                  // Field policy:Lorg/apache/hc/core5/pool/PoolReusePolicy;
     116: invokevirtual #88                 // Method org/apache/hc/core5/pool/PoolReusePolicy.ordinal:()I
     119: iaload
     120: lookupswitch  { // 2
                     1: 148
                     2: 159
               default: 170
          }
     148: aload_0
     149: getfield      #20                 // Field available:Ljava/util/LinkedList;
     152: aload_1
     153: invokevirtual #89                 // Method java/util/LinkedList.addFirst:(Ljava/lang/Object;)V
     156: goto          207
     159: aload_0
     160: getfield      #20                 // Field available:Ljava/util/LinkedList;
     163: aload_1
     164: invokevirtual #90                 // Method java/util/LinkedList.addLast:(Ljava/lang/Object;)V
     167: goto          207
     170: new           #91                 // class java/lang/IllegalStateException
     173: dup
     174: new           #92                 // class java/lang/StringBuilder
     177: dup
     178: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
     181: ldc           #94                 // String Unexpected ConnPoolPolicy value:
     183: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     186: aload_0
     187: getfield      #8                  // Field policy:Lorg/apache/hc/core5/pool/PoolReusePolicy;
     190: invokevirtual #96                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     193: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     196: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     199: athrow
     200: aload_1
     201: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
     204: invokevirtual #80                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
     207: aload_0
     208: invokespecial #99                 // Method processNextPendingRequest:()V
     211: goto          224
     214: new           #91                 // class java/lang/IllegalStateException
     217: dup
     218: ldc           #100                // String Pool entry is not present in the set of leased entries
     220: invokespecial #98                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     223: athrow
     224: aload_0
     225: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     228: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     233: goto          250
     236: astore        5
     238: aload_0
     239: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     242: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     247: aload         5
     249: athrow
     250: aload_0
     251: invokespecial #38                 // Method fireCallbacks:()V
     254: return
    Exception table:
       from    to  target type
          36   224   236   any
         236   238   236   any

  private void processPendingRequests();
    Code:
       0: aload_0
       1: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
       4: invokevirtual #101                // Method java/util/LinkedList.listIterator:()Ljava/util/ListIterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #102,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
      14: ifeq          92
      17: aload_1
      18: invokeinterface #103,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      23: checkcast     #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #104                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getFuture:()Lorg/apache/hc/core5/concurrent/BasicFuture;
      31: astore_3
      32: aload_3
      33: invokevirtual #105                // Method org/apache/hc/core5/concurrent/BasicFuture.isCancelled:()Z
      36: ifeq          48
      39: aload_1
      40: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
      45: goto          8
      48: aload_0
      49: aload_2
      50: invokespecial #72                 // Method processPendingRequest:(Lorg/apache/hc/core5/pool/StrictConnPool$LeaseRequest;)Z
      53: istore        4
      55: aload_2
      56: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
      59: ifne          67
      62: iload         4
      64: ifeq          73
      67: aload_1
      68: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
      73: aload_2
      74: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
      77: ifeq          89
      80: aload_0
      81: getfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
      84: aload_2
      85: invokevirtual #75                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      88: pop
      89: goto          8
      92: return

  private void processNextPendingRequest();
    Code:
       0: aload_0
       1: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
       4: invokevirtual #101                // Method java/util/LinkedList.listIterator:()Ljava/util/ListIterator;
       7: astore_1
       8: aload_1
       9: invokeinterface #102,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
      14: ifeq          98
      17: aload_1
      18: invokeinterface #103,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      23: checkcast     #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      26: astore_2
      27: aload_2
      28: invokevirtual #104                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getFuture:()Lorg/apache/hc/core5/concurrent/BasicFuture;
      31: astore_3
      32: aload_3
      33: invokevirtual #105                // Method org/apache/hc/core5/concurrent/BasicFuture.isCancelled:()Z
      36: ifeq          48
      39: aload_1
      40: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
      45: goto          8
      48: aload_0
      49: aload_2
      50: invokespecial #72                 // Method processPendingRequest:(Lorg/apache/hc/core5/pool/StrictConnPool$LeaseRequest;)Z
      53: istore        4
      55: aload_2
      56: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
      59: ifne          67
      62: iload         4
      64: ifeq          73
      67: aload_1
      68: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
      73: aload_2
      74: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
      77: ifeq          89
      80: aload_0
      81: getfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
      84: aload_2
      85: invokevirtual #75                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
      88: pop
      89: iload         4
      91: ifeq          95
      94: return
      95: goto          8
      98: return

  private boolean processPendingRequest(org.apache.hc.core5.pool.StrictConnPool$LeaseRequest<T, C>);
    Code:
       0: aload_1
       1: invokevirtual #107                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getRoute:()Ljava/lang/Object;
       4: astore_2
       5: aload_1
       6: invokevirtual #108                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getState:()Ljava/lang/Object;
       9: astore_3
      10: aload_1
      11: invokevirtual #109                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getDeadline:()Lorg/apache/hc/core5/util/Deadline;
      14: astore        4
      16: aload         4
      18: invokevirtual #110                // Method org/apache/hc/core5/util/Deadline.isExpired:()Z
      21: ifeq          35
      24: aload_1
      25: aload         4
      27: invokestatic  #76                 // Method org/apache/hc/core5/util/DeadlineTimeoutException.from:(Lorg/apache/hc/core5/util/Deadline;)Lorg/apache/hc/core5/util/DeadlineTimeoutException;
      30: invokevirtual #111                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.failed:(Ljava/lang/Exception;)V
      33: iconst_0
      34: ireturn
      35: aload_0
      36: aload_2
      37: invokespecial #84                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/StrictConnPool$PerRoutePool;
      40: astore        5
      42: aload         5
      44: aload_3
      45: invokevirtual #112                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getFree:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/PoolEntry;
      48: astore        6
      50: aload         6
      52: ifnonnull     58
      55: goto          98
      58: aload         6
      60: invokevirtual #113                // Method org/apache/hc/core5/pool/PoolEntry.getExpiryDeadline:()Lorg/apache/hc/core5/util/Deadline;
      63: invokevirtual #110                // Method org/apache/hc/core5/util/Deadline.isExpired:()Z
      66: ifeq          98
      69: aload         6
      71: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
      74: invokevirtual #80                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
      77: aload_0
      78: getfield      #20                 // Field available:Ljava/util/LinkedList;
      81: aload         6
      83: invokevirtual #114                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
      86: pop
      87: aload         5
      89: aload         6
      91: iconst_0
      92: invokevirtual #86                 // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.free:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
      95: goto          42
      98: aload         6
     100: ifnull        155
     103: aload_0
     104: getfield      #20                 // Field available:Ljava/util/LinkedList;
     107: aload         6
     109: invokevirtual #114                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     112: pop
     113: aload_0
     114: getfield      #19                 // Field leased:Ljava/util/Set;
     117: aload         6
     119: invokeinterface #115,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: aload_1
     126: aload         6
     128: invokevirtual #116                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.completed:(Lorg/apache/hc/core5/pool/PoolEntry;)V
     131: aload_0
     132: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
     135: ifnull        153
     138: aload_0
     139: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
     142: aload         6
     144: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     147: aload_0
     148: invokeinterface #117,  3          // InterfaceMethod org/apache/hc/core5/pool/ConnPoolListener.onLease:(Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolStats;)V
     153: iconst_1
     154: ireturn
     155: aload_0
     156: aload_2
     157: invokespecial #118                // Method getMax:(Ljava/lang/Object;)I
     160: istore        7
     162: iconst_0
     163: aload         5
     165: invokevirtual #119                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getAllocatedCount:()I
     168: iconst_1
     169: iadd
     170: iload         7
     172: isub
     173: invokestatic  #120                // Method java/lang/Math.max:(II)I
     176: istore        8
     178: iload         8
     180: ifle          240
     183: iconst_0
     184: istore        9
     186: iload         9
     188: iload         8
     190: if_icmpge     240
     193: aload         5
     195: invokevirtual #121                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getLastUsed:()Lorg/apache/hc/core5/pool/PoolEntry;
     198: astore        10
     200: aload         10
     202: ifnonnull     208
     205: goto          240
     208: aload         10
     210: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
     213: invokevirtual #80                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
     216: aload_0
     217: getfield      #20                 // Field available:Ljava/util/LinkedList;
     220: aload         10
     222: invokevirtual #114                // Method java/util/LinkedList.remove:(Ljava/lang/Object;)Z
     225: pop
     226: aload         5
     228: aload         10
     230: invokevirtual #122                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.remove:(Lorg/apache/hc/core5/pool/PoolEntry;)Z
     233: pop
     234: iinc          9, 1
     237: goto          186
     240: aload         5
     242: invokevirtual #119                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getAllocatedCount:()I
     245: iload         7
     247: if_icmpge     397
     250: aload_0
     251: getfield      #32                 // Field maxTotal:I
     254: aload_0
     255: getfield      #19                 // Field leased:Ljava/util/Set;
     258: invokeinterface #123,  1          // InterfaceMethod java/util/Set.size:()I
     263: isub
     264: iconst_0
     265: invokestatic  #120                // Method java/lang/Math.max:(II)I
     268: istore        9
     270: iload         9
     272: ifne          277
     275: iconst_0
     276: ireturn
     277: aload_0
     278: getfield      #20                 // Field available:Ljava/util/LinkedList;
     281: invokevirtual #124                // Method java/util/LinkedList.size:()I
     284: istore        10
     286: iload         10
     288: iload         9
     290: iconst_1
     291: isub
     292: if_icmple     344
     295: aload_0
     296: getfield      #20                 // Field available:Ljava/util/LinkedList;
     299: invokevirtual #125                // Method java/util/LinkedList.isEmpty:()Z
     302: ifne          344
     305: aload_0
     306: getfield      #20                 // Field available:Ljava/util/LinkedList;
     309: invokevirtual #126                // Method java/util/LinkedList.removeLast:()Ljava/lang/Object;
     312: checkcast     #127                // class org/apache/hc/core5/pool/PoolEntry
     315: astore        11
     317: aload         11
     319: getstatic     #50                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
     322: invokevirtual #80                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
     325: aload_0
     326: aload         11
     328: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     331: invokespecial #84                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/StrictConnPool$PerRoutePool;
     334: astore        12
     336: aload         12
     338: aload         11
     340: invokevirtual #122                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.remove:(Lorg/apache/hc/core5/pool/PoolEntry;)Z
     343: pop
     344: aload         5
     346: aload_0
     347: getfield      #6                  // Field timeToLive:Lorg/apache/hc/core5/util/TimeValue;
     350: invokevirtual #128                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.createEntry:(Lorg/apache/hc/core5/util/TimeValue;)Lorg/apache/hc/core5/pool/PoolEntry;
     353: astore        6
     355: aload_0
     356: getfield      #19                 // Field leased:Ljava/util/Set;
     359: aload         6
     361: invokeinterface #115,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     366: pop
     367: aload_1
     368: aload         6
     370: invokevirtual #116                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.completed:(Lorg/apache/hc/core5/pool/PoolEntry;)V
     373: aload_0
     374: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
     377: ifnull        395
     380: aload_0
     381: getfield      #10                 // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
     384: aload         6
     386: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
     389: aload_0
     390: invokeinterface #117,  3          // InterfaceMethod org/apache/hc/core5/pool/ConnPoolListener.onLease:(Ljava/lang/Object;Lorg/apache/hc/core5/pool/ConnPoolStats;)V
     395: iconst_1
     396: ireturn
     397: iconst_0
     398: ireturn

  private void fireCallbacks();
    Code:
       0: aload_0
       1: getfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
       4: invokevirtual #129                // Method java/util/concurrent/ConcurrentLinkedQueue.poll:()Ljava/lang/Object;
       7: checkcast     #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      10: dup
      11: astore_1
      12: ifnull        87
      15: aload_1
      16: invokevirtual #104                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getFuture:()Lorg/apache/hc/core5/concurrent/BasicFuture;
      19: astore_2
      20: aload_1
      21: invokevirtual #130                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getException:()Ljava/lang/Exception;
      24: astore_3
      25: aload_1
      26: invokevirtual #131                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getResult:()Lorg/apache/hc/core5/pool/PoolEntry;
      29: astore        4
      31: iconst_0
      32: istore        5
      34: aload_3
      35: ifnull        47
      38: aload_2
      39: aload_3
      40: invokevirtual #77                 // Method org/apache/hc/core5/concurrent/BasicFuture.failed:(Ljava/lang/Exception;)Z
      43: pop
      44: goto          72
      47: aload         4
      49: ifnull        67
      52: aload_2
      53: aload         4
      55: invokevirtual #132                // Method org/apache/hc/core5/concurrent/BasicFuture.completed:(Ljava/lang/Object;)Z
      58: ifeq          72
      61: iconst_1
      62: istore        5
      64: goto          72
      67: aload_2
      68: invokevirtual #69                 // Method org/apache/hc/core5/concurrent/BasicFuture.cancel:()Z
      71: pop
      72: iload         5
      74: ifne          84
      77: aload_0
      78: aload         4
      80: iconst_1
      81: invokevirtual #133                // Method release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
      84: goto          0
      87: return

  public void validatePendingRequests();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: invokestatic  #134                // Method java/lang/System.currentTimeMillis:()J
      12: lstore_1
      13: aload_0
      14: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      17: invokevirtual #101                // Method java/util/LinkedList.listIterator:()Ljava/util/ListIterator;
      20: astore_3
      21: aload_3
      22: invokeinterface #102,  1          // InterfaceMethod java/util/ListIterator.hasNext:()Z
      27: ifeq          126
      30: aload_3
      31: invokeinterface #103,  1          // InterfaceMethod java/util/ListIterator.next:()Ljava/lang/Object;
      36: checkcast     #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      39: astore        4
      41: aload         4
      43: invokevirtual #104                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getFuture:()Lorg/apache/hc/core5/concurrent/BasicFuture;
      46: astore        5
      48: aload         5
      50: invokevirtual #105                // Method org/apache/hc/core5/concurrent/BasicFuture.isCancelled:()Z
      53: ifeq          73
      56: aload         4
      58: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
      61: ifne          73
      64: aload_3
      65: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
      70: goto          123
      73: aload         4
      75: invokevirtual #109                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getDeadline:()Lorg/apache/hc/core5/util/Deadline;
      78: astore        6
      80: aload         6
      82: lload_1
      83: invokevirtual #135                // Method org/apache/hc/core5/util/Deadline.isBefore:(J)Z
      86: ifeq          99
      89: aload         4
      91: aload         6
      93: invokestatic  #76                 // Method org/apache/hc/core5/util/DeadlineTimeoutException.from:(Lorg/apache/hc/core5/util/Deadline;)Lorg/apache/hc/core5/util/DeadlineTimeoutException;
      96: invokevirtual #111                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.failed:(Ljava/lang/Exception;)V
      99: aload         4
     101: invokevirtual #73                 // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.isDone:()Z
     104: ifeq          123
     107: aload_3
     108: invokeinterface #106,  1          // InterfaceMethod java/util/ListIterator.remove:()V
     113: aload_0
     114: getfield      #23                 // Field completedRequests:Ljava/util/concurrent/ConcurrentLinkedQueue;
     117: aload         4
     119: invokevirtual #75                 // Method java/util/concurrent/ConcurrentLinkedQueue.add:(Ljava/lang/Object;)Z
     122: pop
     123: goto          21
     126: aload_0
     127: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     130: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     135: goto          152
     138: astore        7
     140: aload_0
     141: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     144: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     149: aload         7
     151: athrow
     152: aload_0
     153: invokespecial #38                 // Method fireCallbacks:()V
     156: return
    Exception table:
       from    to  target type
           9   126   138   any
         138   140   138   any

  private int getMax(T);
    Code:
       0: aload_0
       1: getfield      #24                 // Field maxPerRoute:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #52,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #136                // class java/lang/Integer
      13: astore_2
      14: aload_2
      15: ifnull        23
      18: aload_2
      19: invokevirtual #137                // Method java/lang/Integer.intValue:()I
      22: ireturn
      23: aload_0
      24: getfield      #31                 // Field defaultMaxPerRoute:I
      27: ireturn

  public void setMaxTotal(int);
    Code:
       0: iload_1
       1: ldc           #138                // String Max value
       3: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #32                 // Field maxTotal:I
      21: aload_0
      22: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getMaxTotal();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #32                 // Field maxTotal:I
      13: istore_1
      14: aload_0
      15: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ldc           #138                // String Max value
       3: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: iload_1
      18: putfield      #31                 // Field defaultMaxPerRoute:I
      21: aload_0
      22: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      25: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      30: goto          45
      33: astore_2
      34: aload_0
      35: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_2
      44: athrow
      45: return
    Exception table:
       from    to  target type
          16    21    33   any
          33    34    33   any

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #31                 // Field defaultMaxPerRoute:I
      13: istore_1
      14: aload_0
      15: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      18: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      23: iload_1
      24: ireturn
      25: astore_2
      26: aload_0
      27: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
           9    14    25   any
          25    26    25   any

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ldc           #55                 // String Route
       3: invokestatic  #56                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: iload_2
      17: iconst_m1
      18: if_icmple     39
      21: aload_0
      22: getfield      #24                 // Field maxPerRoute:Ljava/util/Map;
      25: aload_1
      26: iload_2
      27: invokestatic  #139                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      30: invokeinterface #54,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: goto          50
      39: aload_0
      40: getfield      #24                 // Field maxPerRoute:Ljava/util/Map;
      43: aload_1
      44: invokeinterface #140,  2          // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      54: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: goto          74
      62: astore_3
      63: aload_0
      64: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      67: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      72: aload_3
      73: athrow
      74: return
    Exception table:
       from    to  target type
          16    50    62   any
          62    63    62   any

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ldc           #55                 // String Route
       3: invokestatic  #56                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #118                // Method getMax:(Ljava/lang/Object;)I
      21: istore_2
      22: aload_0
      23: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      26: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      31: iload_2
      32: ireturn
      33: astore_3
      34: aload_0
      35: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      38: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: aload_3
      44: athrow
    Exception table:
       from    to  target type
          16    22    33   any
          33    34    33   any

  public org.apache.hc.core5.pool.PoolStats getTotalStats();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #141                // class org/apache/hc/core5/pool/PoolStats
      12: dup
      13: aload_0
      14: getfield      #19                 // Field leased:Ljava/util/Set;
      17: invokeinterface #123,  1          // InterfaceMethod java/util/Set.size:()I
      22: aload_0
      23: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      26: invokevirtual #124                // Method java/util/LinkedList.size:()I
      29: aload_0
      30: getfield      #20                 // Field available:Ljava/util/LinkedList;
      33: invokevirtual #124                // Method java/util/LinkedList.size:()I
      36: aload_0
      37: getfield      #32                 // Field maxTotal:I
      40: invokespecial #142                // Method org/apache/hc/core5/pool/PoolStats."<init>":(IIII)V
      43: astore_1
      44: aload_0
      45: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      48: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_1
      54: areturn
      55: astore_2
      56: aload_0
      57: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
    Exception table:
       from    to  target type
           9    44    55   any
          55    56    55   any

  public org.apache.hc.core5.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ldc           #55                 // String Route
       3: invokestatic  #56                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      11: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
      16: aload_0
      17: aload_1
      18: invokespecial #84                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/StrictConnPool$PerRoutePool;
      21: astore_2
      22: iconst_0
      23: istore_3
      24: aload_0
      25: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      28: invokevirtual #143                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          73
      43: aload         4
      45: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #70                 // class org/apache/hc/core5/pool/StrictConnPool$LeaseRequest
      53: astore        5
      55: aload_1
      56: aload         5
      58: invokevirtual #107                // Method org/apache/hc/core5/pool/StrictConnPool$LeaseRequest.getRoute:()Ljava/lang/Object;
      61: invokestatic  #144                // Method org/apache/hc/core5/util/LangUtils.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      64: ifeq          70
      67: iinc          3, 1
      70: goto          33
      73: new           #141                // class org/apache/hc/core5/pool/PoolStats
      76: dup
      77: aload_2
      78: invokevirtual #145                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getLeasedCount:()I
      81: iload_3
      82: aload_2
      83: invokevirtual #146                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getAvailableCount:()I
      86: aload_0
      87: aload_1
      88: invokespecial #118                // Method getMax:(Ljava/lang/Object;)I
      91: invokespecial #142                // Method org/apache/hc/core5/pool/PoolStats."<init>":(IIII)V
      94: astore        4
      96: aload_0
      97: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     100: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     105: aload         4
     107: areturn
     108: astore        6
     110: aload_0
     111: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     114: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     119: aload         6
     121: athrow
    Exception table:
       from    to  target type
          16    96   108   any
         108   110   108   any

  public java.util.Set<T> getRoutes();
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: new           #17                 // class java/util/HashSet
      12: dup
      13: aload_0
      14: getfield      #13                 // Field routeToPool:Ljava/util/Map;
      17: invokeinterface #147,  1          // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      22: invokespecial #148                // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: astore_1
      26: aload_0
      27: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      30: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      35: aload_1
      36: areturn
      37: astore_2
      38: aload_0
      39: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      42: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      47: aload_2
      48: athrow
    Exception table:
       from    to  target type
           9    26    37   any
          37    38    37   any

  public void enumAvailable(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #20                 // Field available:Ljava/util/LinkedList;
      13: invokevirtual #149                // Method java/util/LinkedList.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          76
      26: aload_2
      27: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #127                // class org/apache/hc/core5/pool/PoolEntry
      35: astore_3
      36: aload_1
      37: aload_3
      38: invokeinterface #150,  2          // InterfaceMethod org/apache/hc/core5/function/Callback.execute:(Ljava/lang/Object;)V
      43: aload_3
      44: invokevirtual #85                 // Method org/apache/hc/core5/pool/PoolEntry.hasConnection:()Z
      47: ifne          73
      50: aload_0
      51: aload_3
      52: invokevirtual #82                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      55: invokespecial #84                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/StrictConnPool$PerRoutePool;
      58: astore        4
      60: aload         4
      62: aload_3
      63: invokevirtual #122                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.remove:(Lorg/apache/hc/core5/pool/PoolEntry;)Z
      66: pop
      67: aload_2
      68: invokeinterface #151,  1          // InterfaceMethod java/util/Iterator.remove:()V
      73: goto          17
      76: aload_0
      77: invokespecial #152                // Method processPendingRequests:()V
      80: aload_0
      81: invokespecial #153                // Method purgePoolMap:()V
      84: aload_0
      85: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      88: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      93: goto          110
      96: astore        5
      98: aload_0
      99: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
     102: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     107: aload         5
     109: athrow
     110: return
    Exception table:
       from    to  target type
           9    84    96   any
          96    98    96   any

  public void enumLeased(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: getfield      #19                 // Field leased:Ljava/util/Set;
      13: invokeinterface #154,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          48
      28: aload_2
      29: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #127                // class org/apache/hc/core5/pool/PoolEntry
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokeinterface #150,  2          // InterfaceMethod org/apache/hc/core5/function/Callback.execute:(Ljava/lang/Object;)V
      45: goto          19
      48: aload_0
      49: invokespecial #152                // Method processPendingRequests:()V
      52: aload_0
      53: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      56: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      61: goto          78
      64: astore        4
      66: aload_0
      67: getfield      #27                 // Field lock:Ljava/util/concurrent/locks/Lock;
      70: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      75: aload         4
      77: athrow
      78: return
    Exception table:
       from    to  target type
           9    52    64   any
          64    66    64   any

  private void purgePoolMap();
    Code:
       0: aload_0
       1: getfield      #13                 // Field routeToPool:Ljava/util/Map;
       4: invokeinterface #155,  1          // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokeinterface #154,  1          // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #42,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          60
      24: aload_1
      25: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #156                // class java/util/Map$Entry
      33: astore_2
      34: aload_2
      35: invokeinterface #157,  1          // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      40: checkcast     #44                 // class org/apache/hc/core5/pool/StrictConnPool$PerRoutePool
      43: astore_3
      44: aload_3
      45: invokevirtual #119                // Method org/apache/hc/core5/pool/StrictConnPool$PerRoutePool.getAllocatedCount:()I
      48: ifne          57
      51: aload_1
      52: invokeinterface #151,  1          // InterfaceMethod java/util/Iterator.remove:()V
      57: goto          15
      60: return

  public void closeIdle(org.apache.hc.core5.util.TimeValue);
    Code:
       0: invokestatic  #134                // Method java/lang/System.currentTimeMillis:()J
       3: aload_1
       4: invokestatic  #158                // Method org/apache/hc/core5/util/TimeValue.isPositive:(Lorg/apache/hc/core5/util/TimeValue;)Z
       7: ifeq          17
      10: aload_1
      11: invokevirtual #159                // Method org/apache/hc/core5/util/TimeValue.toMilliseconds:()J
      14: goto          18
      17: lconst_0
      18: lsub
      19: lstore_2
      20: aload_0
      21: new           #160                // class org/apache/hc/core5/pool/StrictConnPool$2
      24: dup
      25: aload_0
      26: lload_2
      27: invokespecial #161                // Method org/apache/hc/core5/pool/StrictConnPool$2."<init>":(Lorg/apache/hc/core5/pool/StrictConnPool;J)V
      30: invokevirtual #162                // Method enumAvailable:(Lorg/apache/hc/core5/function/Callback;)V
      33: return

  public void closeExpired();
    Code:
       0: invokestatic  #134                // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: new           #163                // class org/apache/hc/core5/pool/StrictConnPool$3
       8: dup
       9: aload_0
      10: lload_1
      11: invokespecial #164                // Method org/apache/hc/core5/pool/StrictConnPool$3."<init>":(Lorg/apache/hc/core5/pool/StrictConnPool;J)V
      14: invokevirtual #162                // Method enumAvailable:(Lorg/apache/hc/core5/function/Callback;)V
      17: return

  public java.lang.String toString();
    Code:
       0: new           #92                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #93                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #165                // String [leased:
      11: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      14: pop
      15: aload_1
      16: aload_0
      17: getfield      #19                 // Field leased:Ljava/util/Set;
      20: invokeinterface #123,  1          // InterfaceMethod java/util/Set.size:()I
      25: invokevirtual #166                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: pop
      29: aload_1
      30: ldc           #167                // String ][available:
      32: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_1
      37: aload_0
      38: getfield      #20                 // Field available:Ljava/util/LinkedList;
      41: invokevirtual #124                // Method java/util/LinkedList.size:()I
      44: invokevirtual #166                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      47: pop
      48: aload_1
      49: ldc           #168                // String ][pending:
      51: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: pop
      55: aload_1
      56: aload_0
      57: getfield      #16                 // Field leasingRequests:Ljava/util/LinkedList;
      60: invokevirtual #124                // Method java/util/LinkedList.size:()I
      63: invokevirtual #166                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      66: pop
      67: aload_1
      68: ldc           #169                // String ]
      70: invokevirtual #95                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: pop
      74: aload_1
      75: invokevirtual #97                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      78: areturn
}
