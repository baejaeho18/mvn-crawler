Compiled from "IOSessionImpl.java"
class org.apache.hc.core5.reactor.IOSessionImpl implements org.apache.hc.core5.reactor.IOSession {
  private static final java.util.concurrent.atomic.AtomicLong COUNT;

  private final java.nio.channels.SelectionKey key;

  private final java.nio.channels.SocketChannel channel;

  private final java.util.Deque<org.apache.hc.core5.reactor.Command> commandQueue;

  private final java.util.concurrent.locks.Lock lock;

  private final java.lang.String id;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.reactor.IOEventHandler> handlerRef;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.reactor.IOSession$Status> status;

  private volatile org.apache.hc.core5.util.Timeout socketTimeout;

  private volatile long lastReadTime;

  private volatile long lastWriteTime;

  private volatile long lastEventTime;

  public org.apache.hc.core5.reactor.IOSessionImpl(java.lang.String, java.nio.channels.SelectionKey, java.nio.channels.SocketChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: ldc           #2                  // String Selection key
       8: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/nio/channels/SelectionKey
      14: putfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      17: aload_0
      18: aload_3
      19: ldc           #6                  // String Socket channel
      21: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class java/nio/channels/SocketChannel
      27: putfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
      30: aload_0
      31: new           #9                  // class java/util/concurrent/ConcurrentLinkedDeque
      34: dup
      35: invokespecial #10                 // Method java/util/concurrent/ConcurrentLinkedDeque."<init>":()V
      38: putfield      #11                 // Field commandQueue:Ljava/util/Deque;
      41: aload_0
      42: new           #12                 // class java/util/concurrent/locks/ReentrantLock
      45: dup
      46: invokespecial #13                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      49: putfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      52: aload_0
      53: getstatic     #15                 // Field org/apache/hc/core5/util/Timeout.DISABLED:Lorg/apache/hc/core5/util/Timeout;
      56: putfield      #16                 // Field socketTimeout:Lorg/apache/hc/core5/util/Timeout;
      59: aload_0
      60: new           #17                 // class java/lang/StringBuilder
      63: dup
      64: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      67: aload_1
      68: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      71: ldc           #20                 // String -%010d
      73: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      79: iconst_1
      80: anewarray     #22                 // class java/lang/Object
      83: dup
      84: iconst_0
      85: getstatic     #23                 // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      88: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      91: invokestatic  #25                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      94: aastore
      95: invokestatic  #26                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      98: putfield      #27                 // Field id:Ljava/lang/String;
     101: aload_0
     102: new           #28                 // class java/util/concurrent/atomic/AtomicReference
     105: dup
     106: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     109: putfield      #30                 // Field handlerRef:Ljava/util/concurrent/atomic/AtomicReference;
     112: aload_0
     113: new           #28                 // class java/util/concurrent/atomic/AtomicReference
     116: dup
     117: getstatic     #31                 // Field org/apache/hc/core5/reactor/IOSession$Status.ACTIVE:Lorg/apache/hc/core5/reactor/IOSession$Status;
     120: invokespecial #32                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
     123: putfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
     126: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J
     129: lstore        4
     131: aload_0
     132: lload         4
     134: putfield      #35                 // Field lastReadTime:J
     137: aload_0
     138: lload         4
     140: putfield      #36                 // Field lastWriteTime:J
     143: aload_0
     144: lload         4
     146: putfield      #37                 // Field lastEventTime:J
     149: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #27                 // Field id:Ljava/lang/String;
       4: areturn

  public org.apache.hc.core5.reactor.IOEventHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #30                 // Field handlerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #39                 // class org/apache/hc/core5/reactor/IOEventHandler
      10: areturn

  public void upgrade(org.apache.hc.core5.reactor.IOEventHandler);
    Code:
       0: aload_0
       1: getfield      #30                 // Field handlerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: return

  public java.util.concurrent.locks.Lock getLock();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  public void enqueue(org.apache.hc.core5.reactor.Command, org.apache.hc.core5.reactor.Command$Priority);
    Code:
       0: aload_2
       1: getstatic     #41                 // Field org/apache/hc/core5/reactor/Command$Priority.IMMEDIATE:Lorg/apache/hc/core5/reactor/Command$Priority;
       4: if_acmpne     20
       7: aload_0
       8: getfield      #11                 // Field commandQueue:Ljava/util/Deque;
      11: aload_1
      12: invokeinterface #42,  2           // InterfaceMethod java/util/Deque.addFirst:(Ljava/lang/Object;)V
      17: goto          31
      20: aload_0
      21: getfield      #11                 // Field commandQueue:Ljava/util/Deque;
      24: aload_1
      25: invokeinterface #43,  2           // InterfaceMethod java/util/Deque.add:(Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: iconst_4
      33: invokevirtual #44                 // Method setEvent:(I)V
      36: aload_0
      37: invokespecial #45                 // Method isStatusClosed:()Z
      40: ifeq          50
      43: aload_1
      44: invokeinterface #46,  1           // InterfaceMethod org/apache/hc/core5/reactor/Command.cancel:()Z
      49: pop
      50: return

  public boolean hasCommands();
    Code:
       0: aload_0
       1: getfield      #11                 // Field commandQueue:Ljava/util/Deque;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/Deque.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public org.apache.hc.core5.reactor.Command poll();
    Code:
       0: aload_0
       1: getfield      #11                 // Field commandQueue:Ljava/util/Deque;
       4: invokeinterface #48,  1           // InterfaceMethod java/util/Deque.poll:()Ljava/lang/Object;
       9: checkcast     #49                 // class org/apache/hc/core5/reactor/Command
      12: areturn

  public java.nio.channels.ByteChannel channel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: areturn

  public java.net.SocketAddress getLocalAddress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: invokevirtual #50                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #51                 // Method java/net/Socket.getLocalSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  public java.net.SocketAddress getRemoteAddress();
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: invokevirtual #50                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
       7: invokevirtual #52                 // Method java/net/Socket.getRemoteSocketAddress:()Ljava/net/SocketAddress;
      10: areturn

  public int getEventMask();
    Code:
       0: aload_0
       1: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
       4: invokevirtual #53                 // Method java/nio/channels/SelectionKey.interestOps:()I
       7: ireturn

  public void setEventMask(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: invokespecial #45                 // Method isStatusClosed:()Z
      13: ifeq          26
      16: aload_0
      17: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      30: iload_1
      31: invokevirtual #56                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      34: pop
      35: aload_0
      36: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      39: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      44: goto          59
      47: astore_2
      48: aload_0
      49: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      52: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      57: aload_2
      58: athrow
      59: aload_0
      60: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      63: invokevirtual #57                 // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      66: invokevirtual #58                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      69: pop
      70: return
    Exception table:
       from    to  target type
           9    16    47   any
          26    35    47   any
          47    48    47   any

  public void setEvent(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: invokespecial #45                 // Method isStatusClosed:()Z
      13: ifeq          26
      16: aload_0
      17: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      30: aload_0
      31: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      34: invokevirtual #53                 // Method java/nio/channels/SelectionKey.interestOps:()I
      37: iload_1
      38: ior
      39: invokevirtual #56                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      42: pop
      43: aload_0
      44: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      47: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      52: goto          67
      55: astore_2
      56: aload_0
      57: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      60: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_2
      66: athrow
      67: aload_0
      68: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      71: invokevirtual #57                 // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      74: invokevirtual #58                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      77: pop
      78: return
    Exception table:
       from    to  target type
           9    16    55   any
          26    43    55   any
          55    56    55   any

  public void clearEvent(int);
    Code:
       0: aload_0
       1: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: invokespecial #45                 // Method isStatusClosed:()Z
      13: ifeq          26
      16: aload_0
      17: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      20: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: return
      26: aload_0
      27: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      30: aload_0
      31: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      34: invokevirtual #53                 // Method java/nio/channels/SelectionKey.interestOps:()I
      37: iload_1
      38: iconst_m1
      39: ixor
      40: iand
      41: invokevirtual #56                 // Method java/nio/channels/SelectionKey.interestOps:(I)Ljava/nio/channels/SelectionKey;
      44: pop
      45: aload_0
      46: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      49: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      54: goto          69
      57: astore_2
      58: aload_0
      59: getfield      #14                 // Field lock:Ljava/util/concurrent/locks/Lock;
      62: invokeinterface #55,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      67: aload_2
      68: athrow
      69: aload_0
      70: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      73: invokevirtual #57                 // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      76: invokevirtual #58                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      79: pop
      80: return
    Exception table:
       from    to  target type
           9    16    57   any
          26    45    57   any
          57    58    57   any

  public org.apache.hc.core5.util.Timeout getSocketTimeout();
    Code:
       0: aload_0
       1: getfield      #16                 // Field socketTimeout:Lorg/apache/hc/core5/util/Timeout;
       4: areturn

  public void setSocketTimeout(org.apache.hc.core5.util.Timeout);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #59                 // Method org/apache/hc/core5/util/Timeout.defaultsToDisabled:(Lorg/apache/hc/core5/util/Timeout;)Lorg/apache/hc/core5/util/Timeout;
       5: putfield      #16                 // Field socketTimeout:Lorg/apache/hc/core5/util/Timeout;
       8: aload_0
       9: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J
      12: putfield      #37                 // Field lastEventTime:J
      15: return

  public int read(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: invokevirtual #60                 // Method java/nio/channels/SocketChannel.read:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public int write(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
       4: aload_1
       5: invokevirtual #61                 // Method java/nio/channels/SocketChannel.write:(Ljava/nio/ByteBuffer;)I
       8: ireturn

  public void updateReadTime();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #35                 // Field lastReadTime:J
       7: aload_0
       8: aload_0
       9: getfield      #35                 // Field lastReadTime:J
      12: putfield      #37                 // Field lastEventTime:J
      15: return

  public void updateWriteTime();
    Code:
       0: aload_0
       1: invokestatic  #34                 // Method java/lang/System.currentTimeMillis:()J
       4: putfield      #36                 // Field lastWriteTime:J
       7: aload_0
       8: aload_0
       9: getfield      #36                 // Field lastWriteTime:J
      12: putfield      #37                 // Field lastEventTime:J
      15: return

  public long getLastReadTime();
    Code:
       0: aload_0
       1: getfield      #35                 // Field lastReadTime:J
       4: lreturn

  public long getLastWriteTime();
    Code:
       0: aload_0
       1: getfield      #36                 // Field lastWriteTime:J
       4: lreturn

  public long getLastEventTime();
    Code:
       0: aload_0
       1: getfield      #37                 // Field lastEventTime:J
       4: lreturn

  public org.apache.hc.core5.reactor.IOSession$Status getStatus();
    Code:
       0: aload_0
       1: getfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #62                 // class org/apache/hc/core5/reactor/IOSession$Status
      10: areturn

  private boolean isStatusClosed();
    Code:
       0: aload_0
       1: getfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #63                 // Field org/apache/hc/core5/reactor/IOSession$Status.CLOSED:Lorg/apache/hc/core5/reactor/IOSession$Status;
      10: if_acmpne     17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  public boolean isOpen();
    Code:
       0: aload_0
       1: getfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: getstatic     #31                 // Field org/apache/hc/core5/reactor/IOSession$Status.ACTIVE:Lorg/apache/hc/core5/reactor/IOSession$Status;
      10: if_acmpne     27
      13: aload_0
      14: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
      17: invokevirtual #64                 // Method java/nio/channels/SocketChannel.isOpen:()Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public void close();
    Code:
       0: aload_0
       1: getstatic     #65                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
       4: invokevirtual #66                 // Method close:(Lorg/apache/hc/core5/io/CloseMode;)V
       7: return

  public void close(org.apache.hc.core5.io.CloseMode);
    Code:
       0: aload_0
       1: getfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
       4: getstatic     #31                 // Field org/apache/hc/core5/reactor/IOSession$Status.ACTIVE:Lorg/apache/hc/core5/reactor/IOSession$Status;
       7: getstatic     #63                 // Field org/apache/hc/core5/reactor/IOSession$Status.CLOSED:Lorg/apache/hc/core5/reactor/IOSession$Status;
      10: invokevirtual #67                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      13: ifeq          89
      16: aload_1
      17: getstatic     #68                 // Field org/apache/hc/core5/io/CloseMode.IMMEDIATE:Lorg/apache/hc/core5/io/CloseMode;
      20: if_acmpne     39
      23: aload_0
      24: getfield      #8                  // Field channel:Ljava/nio/channels/SocketChannel;
      27: invokevirtual #50                 // Method java/nio/channels/SocketChannel.socket:()Ljava/net/Socket;
      30: iconst_1
      31: iconst_0
      32: invokevirtual #69                 // Method java/net/Socket.setSoLinger:(ZI)V
      35: goto          39
      38: astore_2
      39: aload_0
      40: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      43: invokevirtual #71                 // Method java/nio/channels/SelectionKey.cancel:()V
      46: aload_0
      47: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      50: aconst_null
      51: invokevirtual #72                 // Method java/nio/channels/SelectionKey.attach:(Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: aload_0
      56: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      59: invokevirtual #73                 // Method java/nio/channels/SelectionKey.channel:()Ljava/nio/channels/SelectableChannel;
      62: invokestatic  #74                 // Method org/apache/hc/core5/io/Closer.closeQuietly:(Ljava/io/Closeable;)V
      65: aload_0
      66: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      69: invokevirtual #57                 // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      72: invokevirtual #75                 // Method java/nio/channels/Selector.isOpen:()Z
      75: ifeq          89
      78: aload_0
      79: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      82: invokevirtual #57                 // Method java/nio/channels/SelectionKey.selector:()Ljava/nio/channels/Selector;
      85: invokevirtual #58                 // Method java/nio/channels/Selector.wakeup:()Ljava/nio/channels/Selector;
      88: pop
      89: return
    Exception table:
       from    to  target type
          23    35    38   Class java/net/SocketException

  private static void formatOps(java.lang.StringBuilder, int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifle          13
       6: aload_0
       7: bipush        114
       9: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      12: pop
      13: iload_1
      14: iconst_4
      15: iand
      16: ifle          26
      19: aload_0
      20: bipush        119
      22: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      25: pop
      26: iload_1
      27: bipush        16
      29: iand
      30: ifle          40
      33: aload_0
      34: bipush        97
      36: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      39: pop
      40: iload_1
      41: bipush        8
      43: iand
      44: ifle          54
      47: aload_0
      48: bipush        99
      50: invokevirtual #76                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      53: pop
      54: return

  public java.lang.String toString();
    Code:
       0: new           #17                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #27                 // Field id:Ljava/lang/String;
      13: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #77                 // String [
      18: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: pop
      22: aload_1
      23: aload_0
      24: getfield      #33                 // Field status:Ljava/util/concurrent/atomic/AtomicReference;
      27: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: pop
      31: aload_1
      32: ldc           #79                 // String ][
      34: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: aload_0
      39: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      42: invokevirtual #80                 // Method java/nio/channels/SelectionKey.isValid:()Z
      45: ifeq          77
      48: aload_1
      49: aload_0
      50: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      53: invokevirtual #53                 // Method java/nio/channels/SelectionKey.interestOps:()I
      56: invokestatic  #81                 // Method formatOps:(Ljava/lang/StringBuilder;I)V
      59: aload_1
      60: ldc           #82                 // String :
      62: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: aload_0
      68: getfield      #5                  // Field key:Ljava/nio/channels/SelectionKey;
      71: invokevirtual #83                 // Method java/nio/channels/SelectionKey.readyOps:()I
      74: invokestatic  #81                 // Method formatOps:(Ljava/lang/StringBuilder;I)V
      77: aload_1
      78: ldc           #84                 // String ]
      80: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: pop
      84: aload_1
      85: invokevirtual #21                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: areturn

  static {};
    Code:
       0: new           #85                 // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_0
       5: invokespecial #86                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #23                 // Field COUNT:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
