Compiled from "FileEntityProducer.java"
public final class org.apache.hc.core5.http.nio.entity.FileEntityProducer implements org.apache.hc.core5.http.nio.AsyncEntityProducer {
  private final java.io.File file;

  private final java.nio.ByteBuffer byteBuffer;

  private final long length;

  private final org.apache.hc.core5.http.ContentType contentType;

  private final boolean chunked;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Exception> exception;

  private final java.util.concurrent.atomic.AtomicReference<java.io.RandomAccessFile> accessFileRef;

  private boolean eof;

  public org.apache.hc.core5.http.nio.entity.FileEntityProducer(java.io.File, int, org.apache.hc.core5.http.ContentType, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String File
       8: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/io/File
      14: putfield      #5                  // Field file:Ljava/io/File;
      17: aload_0
      18: aload_1
      19: invokevirtual #6                  // Method java/io/File.length:()J
      22: putfield      #7                  // Field length:J
      25: aload_0
      26: iload_2
      27: invokestatic  #8                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      30: putfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      33: aload_0
      34: aload_3
      35: putfield      #10                 // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      38: aload_0
      39: iload         4
      41: putfield      #11                 // Field chunked:Z
      44: aload_0
      45: new           #12                 // class java/util/concurrent/atomic/AtomicReference
      48: dup
      49: aconst_null
      50: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      53: putfield      #14                 // Field accessFileRef:Ljava/util/concurrent/atomic/AtomicReference;
      56: aload_0
      57: new           #12                 // class java/util/concurrent/atomic/AtomicReference
      60: dup
      61: aconst_null
      62: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      65: putfield      #15                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
      68: return

  public org.apache.hc.core5.http.nio.entity.FileEntityProducer(java.io.File, org.apache.hc.core5.http.ContentType, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        8192
       5: aload_2
       6: iload_3
       7: invokespecial #16                 // Method "<init>":(Ljava/io/File;ILorg/apache/hc/core5/http/ContentType;Z)V
      10: return

  public org.apache.hc.core5.http.nio.entity.FileEntityProducer(java.io.File, org.apache.hc.core5.http.ContentType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #17                 // Method "<init>":(Ljava/io/File;Lorg/apache/hc/core5/http/ContentType;Z)V
       7: return

  public org.apache.hc.core5.http.nio.entity.FileEntityProducer(java.io.File);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #18                 // Field org/apache/hc/core5/http/ContentType.APPLICATION_OCTET_STREAM:Lorg/apache/hc/core5/http/ContentType;
       5: invokespecial #19                 // Method "<init>":(Ljava/io/File;Lorg/apache/hc/core5/http/ContentType;)V
       8: return

  public boolean isRepeatable();
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #10                 // Field contentType:Lorg/apache/hc/core5/http/ContentType;
       4: ifnull        17
       7: aload_0
       8: getfield      #10                 // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      11: invokevirtual #20                 // Method org/apache/hc/core5/http/ContentType.toString:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field length:J
       4: lreturn

  public int available();
    Code:
       0: ldc           #21                 // int 2147483647
       2: ireturn

  public java.lang.String getContentEncoding();
    Code:
       0: aconst_null
       1: areturn

  public boolean isChunked();
    Code:
       0: aload_0
       1: getfield      #11                 // Field chunked:Z
       4: ireturn

  public java.util.Set<java.lang.String> getTrailerNames();
    Code:
       0: aconst_null
       1: areturn

  public void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #14                 // Field accessFileRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class java/io/RandomAccessFile
      10: astore_2
      11: aload_2
      12: ifnonnull     50
      15: new           #23                 // class java/io/RandomAccessFile
      18: dup
      19: aload_0
      20: getfield      #5                  // Field file:Ljava/io/File;
      23: ldc           #24                 // String r
      25: invokespecial #25                 // Method java/io/RandomAccessFile."<init>":(Ljava/io/File;Ljava/lang/String;)V
      28: astore_2
      29: aload_0
      30: getfield      #14                 // Field accessFileRef:Ljava/util/concurrent/atomic/AtomicReference;
      33: aload_2
      34: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      37: ifnonnull     44
      40: iconst_1
      41: goto          45
      44: iconst_0
      45: ldc           #27                 // String Illegal producer state
      47: invokestatic  #28                 // Method org/apache/hc/core5/util/Asserts.check:(ZLjava/lang/String;)V
      50: aload_0
      51: getfield      #29                 // Field eof:Z
      54: ifne          78
      57: aload_2
      58: invokevirtual #30                 // Method java/io/RandomAccessFile.getChannel:()Ljava/nio/channels/FileChannel;
      61: aload_0
      62: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      65: invokevirtual #31                 // Method java/nio/channels/FileChannel.read:(Ljava/nio/ByteBuffer;)I
      68: istore_3
      69: iload_3
      70: ifge          78
      73: aload_0
      74: iconst_1
      75: putfield      #29                 // Field eof:Z
      78: aload_0
      79: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      82: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
      85: ifle          115
      88: aload_0
      89: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      92: invokevirtual #33                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      95: pop
      96: aload_1
      97: aload_0
      98: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     101: invokeinterface #34,  2           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.write:(Ljava/nio/ByteBuffer;)I
     106: pop
     107: aload_0
     108: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     111: invokevirtual #35                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     114: pop
     115: aload_0
     116: getfield      #29                 // Field eof:Z
     119: ifeq          142
     122: aload_0
     123: getfield      #9                  // Field byteBuffer:Ljava/nio/ByteBuffer;
     126: invokevirtual #32                 // Method java/nio/ByteBuffer.position:()I
     129: ifne          142
     132: aload_1
     133: invokeinterface #36,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.endStream:()V
     138: aload_0
     139: invokevirtual #37                 // Method releaseResources:()V
     142: return

  public void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #15                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_1
       6: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #37                 // Method releaseResources:()V
      16: return

  public java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #15                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #39                 // class java/lang/Exception
      10: areturn

  public void releaseResources();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #29                 // Field eof:Z
       5: aload_0
       6: getfield      #14                 // Field accessFileRef:Ljava/util/concurrent/atomic/AtomicReference;
       9: aconst_null
      10: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #40                 // class java/io/Closeable
      16: invokestatic  #41                 // Method org/apache/hc/core5/io/Closer.closeQuietly:(Ljava/io/Closeable;)V
      19: return
}
