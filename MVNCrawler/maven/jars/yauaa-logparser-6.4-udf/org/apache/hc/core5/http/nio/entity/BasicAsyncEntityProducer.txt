Compiled from "BasicAsyncEntityProducer.java"
public class org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer implements org.apache.hc.core5.http.nio.AsyncEntityProducer {
  private final java.nio.ByteBuffer bytebuf;

  private final int length;

  private final org.apache.hc.core5.http.ContentType contentType;

  private final boolean chunked;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Exception> exception;

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(byte[], org.apache.hc.core5.http.ContentType, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Content
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_1
      13: invokestatic  #4                  // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      16: putfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      19: aload_0
      20: aload_0
      21: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      24: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      27: putfield      #7                  // Field length:I
      30: aload_0
      31: aload_2
      32: putfield      #8                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      35: aload_0
      36: iload_3
      37: putfield      #9                  // Field chunked:Z
      40: aload_0
      41: new           #10                 // class java/util/concurrent/atomic/AtomicReference
      44: dup
      45: aconst_null
      46: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      49: putfield      #12                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
      52: return

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(byte[], org.apache.hc.core5.http.ContentType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #13                 // Method "<init>":([BLorg/apache/hc/core5/http/ContentType;Z)V
       7: return

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #14                 // Field org/apache/hc/core5/http/ContentType.APPLICATION_OCTET_STREAM:Lorg/apache/hc/core5/http/ContentType;
       5: invokespecial #15                 // Method "<init>":([BLorg/apache/hc/core5/http/ContentType;)V
       8: return

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(java.lang.CharSequence, org.apache.hc.core5.http.ContentType, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Content
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: aload_2
      13: putfield      #8                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      16: aload_2
      17: ifnull        27
      20: aload_2
      21: invokevirtual #16                 // Method org/apache/hc/core5/http/ContentType.getCharset:()Ljava/nio/charset/Charset;
      24: goto          28
      27: aconst_null
      28: astore        4
      30: aload         4
      32: ifnonnull     40
      35: getstatic     #17                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      38: astore        4
      40: aload_0
      41: aload         4
      43: aload_1
      44: invokestatic  #18                 // Method java/nio/CharBuffer.wrap:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      47: invokevirtual #19                 // Method java/nio/charset/Charset.encode:(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;
      50: putfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      53: aload_0
      54: aload_0
      55: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      58: invokevirtual #6                  // Method java/nio/ByteBuffer.remaining:()I
      61: putfield      #7                  // Field length:I
      64: aload_0
      65: iload_3
      66: putfield      #9                  // Field chunked:Z
      69: aload_0
      70: new           #10                 // class java/util/concurrent/atomic/AtomicReference
      73: dup
      74: aconst_null
      75: invokespecial #11                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      78: putfield      #12                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
      81: return

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(java.lang.CharSequence, org.apache.hc.core5.http.ContentType);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #20                 // Method "<init>":(Ljava/lang/CharSequence;Lorg/apache/hc/core5/http/ContentType;Z)V
       7: return

  public org.apache.hc.core5.http.nio.entity.BasicAsyncEntityProducer(java.lang.CharSequence);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #21                 // Field org/apache/hc/core5/http/ContentType.TEXT_PLAIN:Lorg/apache/hc/core5/http/ContentType;
       5: invokespecial #22                 // Method "<init>":(Ljava/lang/CharSequence;Lorg/apache/hc/core5/http/ContentType;)V
       8: return

  public boolean isRepeatable();
    Code:
       0: iconst_1
       1: ireturn

  public final java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
       4: ifnull        17
       7: aload_0
       8: getfield      #8                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      11: invokevirtual #23                 // Method org/apache/hc/core5/http/ContentType.toString:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public long getContentLength();
    Code:
       0: aload_0
       1: getfield      #7                  // Field length:I
       4: i2l
       5: lreturn

  public int available();
    Code:
       0: ldc           #24                 // int 2147483647
       2: ireturn

  public java.lang.String getContentEncoding();
    Code:
       0: aconst_null
       1: areturn

  public boolean isChunked();
    Code:
       0: aload_0
       1: getfield      #9                  // Field chunked:Z
       4: ireturn

  public java.util.Set<java.lang.String> getTrailerNames();
    Code:
       0: aconst_null
       1: areturn

  public final void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #25                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          21
      10: aload_1
      11: aload_0
      12: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      15: invokeinterface #26,  2           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.write:(Ljava/nio/ByteBuffer;)I
      20: pop
      21: aload_0
      22: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
      25: invokevirtual #25                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      28: ifne          37
      31: aload_1
      32: invokeinterface #27,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.endStream:()V
      37: return

  public final void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #12                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_1
       6: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #29                 // Method releaseResources:()V
      16: return

  public final java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #12                 // Field exception:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #31                 // class java/lang/Exception
      10: areturn

  public void releaseResources();
    Code:
       0: aload_0
       1: getfield      #5                  // Field bytebuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #32                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
       7: pop
       8: return
}
