Compiled from "AbstractServerExchangeHandler.java"
public abstract class org.apache.hc.core5.http.nio.support.AbstractServerExchangeHandler<T> implements org.apache.hc.core5.http.nio.AsyncServerExchangeHandler {
  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.http.nio.AsyncRequestConsumer<T>> requestConsumerRef;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.http.nio.AsyncResponseProducer> responseProducerRef;

  public org.apache.hc.core5.http.nio.support.AbstractServerExchangeHandler();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/concurrent/atomic/AtomicReference
       8: dup
       9: aconst_null
      10: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      13: putfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: aload_0
      17: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: aconst_null
      22: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      25: putfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      28: return

  protected abstract org.apache.hc.core5.http.nio.AsyncRequestConsumer<T> supplyConsumer(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.EntityDetails, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException;

  protected abstract void handle(T, org.apache.hc.core5.http.nio.AsyncServerRequestHandler$ResponseTrigger, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;

  public final void handleRequest(org.apache.hc.core5.http.HttpRequest, org.apache.hc.core5.http.EntityDetails, org.apache.hc.core5.http.nio.ResponseChannel, org.apache.hc.core5.http.protocol.HttpContext) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokevirtual #6                  // Method supplyConsumer:(Lorg/apache/hc/core5/http/HttpRequest;Lorg/apache/hc/core5/http/EntityDetails;Lorg/apache/hc/core5/http/protocol/HttpContext;)Lorg/apache/hc/core5/http/nio/AsyncRequestConsumer;
       8: astore        5
      10: aload         5
      12: ifnonnull     25
      15: new           #7                  // class org/apache/hc/core5/http/HttpException
      18: dup
      19: ldc           #8                  // String Unable to handle request
      21: invokespecial #9                  // Method org/apache/hc/core5/http/HttpException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
      29: aload         5
      31: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      34: new           #11                 // class org/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler$1
      37: dup
      38: aload_0
      39: aload_3
      40: invokespecial #12                 // Method org/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler$1."<init>":(Lorg/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler;Lorg/apache/hc/core5/http/nio/ResponseChannel;)V
      43: astore        6
      45: aload         5
      47: aload_1
      48: aload_2
      49: aload         4
      51: new           #13                 // class org/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler$2
      54: dup
      55: aload_0
      56: aload         6
      58: aload         4
      60: invokespecial #14                 // Method org/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler$2."<init>":(Lorg/apache/hc/core5/http/nio/support/AbstractServerExchangeHandler;Lorg/apache/hc/core5/http/nio/AsyncServerRequestHandler$ResponseTrigger;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      63: invokeinterface #15,  5           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.consumeRequest:(Lorg/apache/hc/core5/http/HttpRequest;Lorg/apache/hc/core5/http/EntityDetails;Lorg/apache/hc/core5/http/protocol/HttpContext;Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      68: return

  public final void updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncRequestConsumer
      10: astore_2
      11: aload_2
      12: ldc           #18                 // String Data consumer
      14: invokestatic  #19                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #20,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.updateCapacity:(Lorg/apache/hc/core5/http/nio/CapacityChannel;)V
      24: return

  public final void consume(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncRequestConsumer
      10: astore_2
      11: aload_2
      12: ldc           #18                 // String Data consumer
      14: invokestatic  #19                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #21,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.consume:(Ljava/nio/ByteBuffer;)V
      24: return

  public final void streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncRequestConsumer
      10: astore_2
      11: aload_2
      12: ldc           #18                 // String Data consumer
      14: invokestatic  #19                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #22,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.streamEnd:(Ljava/util/List;)V
      24: return

  public final int available();
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      10: astore_1
      11: aload_1
      12: ifnull        24
      15: aload_1
      16: invokeinterface #24,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.available:()I
      21: goto          25
      24: iconst_0
      25: ireturn

  public final void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #23                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      10: astore_2
      11: aload_2
      12: ldc           #25                 // String Data producer
      14: invokestatic  #19                 // Method org/apache/hc/core5/util/Asserts.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: aload_1
      19: invokeinterface #26,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.produce:(Lorg/apache/hc/core5/http/nio/DataStreamChannel;)V
      24: return

  public final void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncRequestConsumer
      10: astore_2
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: aload_1
      17: invokeinterface #27,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.failed:(Ljava/lang/Exception;)V
      22: aload_0
      23: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      26: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      29: checkcast     #23                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      32: astore_3
      33: aload_3
      34: ifnull        44
      37: aload_3
      38: aload_1
      39: invokeinterface #28,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.failed:(Ljava/lang/Exception;)V
      44: aload_0
      45: invokevirtual #29                 // Method releaseResources:()V
      48: goto          60
      51: astore        4
      53: aload_0
      54: invokevirtual #29                 // Method releaseResources:()V
      57: aload         4
      59: athrow
      60: return
    Exception table:
       from    to  target type
           0    44    51   any
          51    53    51   any

  public final void releaseResources();
    Code:
       0: aload_0
       1: getfield      #5                  // Field requestConsumerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #17                 // class org/apache/hc/core5/http/nio/AsyncRequestConsumer
      11: astore_1
      12: aload_1
      13: ifnull        22
      16: aload_1
      17: invokeinterface #31,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncRequestConsumer.releaseResources:()V
      22: aload_0
      23: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
      26: aconst_null
      27: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      30: checkcast     #23                 // class org/apache/hc/core5/http/nio/AsyncResponseProducer
      33: astore_2
      34: aload_2
      35: ifnull        44
      38: aload_2
      39: invokeinterface #32,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncResponseProducer.releaseResources:()V
      44: return

  static java.util.concurrent.atomic.AtomicReference access$000(org.apache.hc.core5.http.nio.support.AbstractServerExchangeHandler);
    Code:
       0: aload_0
       1: getfield      #1                  // Field responseProducerRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn
}
