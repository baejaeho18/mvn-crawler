Compiled from "HttpAsyncRequester.java"
class org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester$InternalAsyncClientEndpoint extends org.apache.hc.core5.http.nio.AsyncClientEndpoint {
  final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.pool.PoolEntry<org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.reactor.IOSession>> poolEntryRef;

  final org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester this$0;

  org.apache.hc.core5.http.impl.bootstrap.HttpAsyncRequester$InternalAsyncClientEndpoint(org.apache.hc.core5.pool.PoolEntry<org.apache.hc.core5.http.HttpHost, org.apache.hc.core5.reactor.IOSession>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester;
       5: aload_0
       6: invokespecial #2                  // Method org/apache/hc/core5/http/nio/AsyncClientEndpoint."<init>":()V
       9: aload_0
      10: new           #3                  // class java/util/concurrent/atomic/AtomicReference
      13: dup
      14: aload_2
      15: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      18: putfield      #5                  // Field poolEntryRef:Ljava/util/concurrent/atomic/AtomicReference;
      21: return

  private org.apache.hc.core5.reactor.IOSession getIOSession();
    Code:
       0: aload_0
       1: getfield      #5                  // Field poolEntryRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class org/apache/hc/core5/pool/PoolEntry
      10: astore_1
      11: aload_1
      12: ifnonnull     25
      15: new           #8                  // class java/lang/IllegalStateException
      18: dup
      19: ldc           #9                  // String Endpoint has already been released
      21: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_1
      26: invokevirtual #11                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      29: checkcast     #12                 // class org/apache/hc/core5/reactor/IOSession
      32: astore_2
      33: aload_2
      34: ifnonnull     47
      37: new           #8                  // class java/lang/IllegalStateException
      40: dup
      41: ldc           #13                 // String I/O session is invalid
      43: invokespecial #10                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      46: athrow
      47: aload_2
      48: areturn

  public void execute(org.apache.hc.core5.http.nio.AsyncClientExchangeHandler, org.apache.hc.core5.http.nio.HandlerFactory<org.apache.hc.core5.http.nio.AsyncPushConsumer>, org.apache.hc.core5.http.protocol.HttpContext);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method getIOSession:()Lorg/apache/hc/core5/reactor/IOSession;
       4: astore        4
       6: aload         4
       8: new           #15                 // class org/apache/hc/core5/http/nio/command/RequestExecutionCommand
      11: dup
      12: aload_1
      13: aload_2
      14: aconst_null
      15: aload_3
      16: invokespecial #16                 // Method org/apache/hc/core5/http/nio/command/RequestExecutionCommand."<init>":(Lorg/apache/hc/core5/http/nio/AsyncClientExchangeHandler;Lorg/apache/hc/core5/http/nio/HandlerFactory;Lorg/apache/hc/core5/concurrent/CancellableDependency;Lorg/apache/hc/core5/http/protocol/HttpContext;)V
      19: getstatic     #17                 // Field org/apache/hc/core5/reactor/Command$Priority.NORMAL:Lorg/apache/hc/core5/reactor/Command$Priority;
      22: invokeinterface #18,  3           // InterfaceMethod org/apache/hc/core5/reactor/IOSession.enqueue:(Lorg/apache/hc/core5/reactor/Command;Lorg/apache/hc/core5/reactor/Command$Priority;)V
      27: aload         4
      29: invokeinterface #19,  1           // InterfaceMethod org/apache/hc/core5/reactor/IOSession.isOpen:()Z
      34: ifne          70
      37: aload_1
      38: new           #20                 // class org/apache/hc/core5/http/ConnectionClosedException
      41: dup
      42: invokespecial #21                 // Method org/apache/hc/core5/http/ConnectionClosedException."<init>":()V
      45: invokeinterface #22,  2           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.failed:(Ljava/lang/Exception;)V
      50: aload_1
      51: invokeinterface #23,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.releaseResources:()V
      56: goto          70
      59: astore        5
      61: aload_1
      62: invokeinterface #23,  1           // InterfaceMethod org/apache/hc/core5/http/nio/AsyncClientExchangeHandler.releaseResources:()V
      67: aload         5
      69: athrow
      70: return
    Exception table:
       from    to  target type
          37    50    59   any
          59    61    59   any

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #5                  // Field poolEntryRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #7                  // class org/apache/hc/core5/pool/PoolEntry
      10: astore_1
      11: aload_1
      12: ifnull        70
      15: aload_1
      16: invokevirtual #11                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      19: checkcast     #12                 // class org/apache/hc/core5/reactor/IOSession
      22: astore_2
      23: aload_2
      24: ifnull        36
      27: aload_2
      28: invokeinterface #19,  1           // InterfaceMethod org/apache/hc/core5/reactor/IOSession.isOpen:()Z
      33: ifne          38
      36: iconst_0
      37: ireturn
      38: aload_2
      39: invokeinterface #24,  1           // InterfaceMethod org/apache/hc/core5/reactor/IOSession.getHandler:()Lorg/apache/hc/core5/reactor/IOEventHandler;
      44: astore_3
      45: aload_3
      46: instanceof    #25                 // class org/apache/hc/core5/http/HttpConnection
      49: ifeq          68
      52: aload_3
      53: checkcast     #25                 // class org/apache/hc/core5/http/HttpConnection
      56: invokeinterface #26,  1           // InterfaceMethod org/apache/hc/core5/http/HttpConnection.isOpen:()Z
      61: ifeq          68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ireturn
      70: iconst_0
      71: ireturn

  public void releaseAndReuse();
    Code:
       0: aload_0
       1: getfield      #5                  // Field poolEntryRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class org/apache/hc/core5/pool/PoolEntry
      11: astore_1
      12: aload_1
      13: ifnull        55
      16: aload_1
      17: invokevirtual #11                 // Method org/apache/hc/core5/pool/PoolEntry.getConnection:()Lorg/apache/hc/core5/io/ModalCloseable;
      20: checkcast     #12                 // class org/apache/hc/core5/reactor/IOSession
      23: astore_2
      24: aload_0
      25: getfield      #1                  // Field this$0:Lorg/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester;
      28: invokestatic  #28                 // Method org/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester.access$000:(Lorg/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester;)Lorg/apache/hc/core5/pool/ManagedConnPool;
      31: aload_1
      32: aload_2
      33: ifnull        49
      36: aload_2
      37: invokeinterface #19,  1           // InterfaceMethod org/apache/hc/core5/reactor/IOSession.isOpen:()Z
      42: ifeq          49
      45: iconst_1
      46: goto          50
      49: iconst_0
      50: invokeinterface #29,  3           // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
      55: return

  public void releaseAndDiscard();
    Code:
       0: aload_0
       1: getfield      #5                  // Field poolEntryRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #7                  // class org/apache/hc/core5/pool/PoolEntry
      11: astore_1
      12: aload_1
      13: ifnull        37
      16: aload_1
      17: getstatic     #30                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
      20: invokevirtual #31                 // Method org/apache/hc/core5/pool/PoolEntry.discardConnection:(Lorg/apache/hc/core5/io/CloseMode;)V
      23: aload_0
      24: getfield      #1                  // Field this$0:Lorg/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester;
      27: invokestatic  #28                 // Method org/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester.access$000:(Lorg/apache/hc/core5/http/impl/bootstrap/HttpAsyncRequester;)Lorg/apache/hc/core5/pool/ManagedConnPool;
      30: aload_1
      31: iconst_0
      32: invokeinterface #29,  3           // InterfaceMethod org/apache/hc/core5/pool/ManagedConnPool.release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
      37: return
}
