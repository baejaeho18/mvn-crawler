Compiled from "RawFrame.java"
public final class org.apache.hc.core5.http2.frame.RawFrame extends org.apache.hc.core5.http2.frame.Frame<java.nio.ByteBuffer> {
  private final java.nio.ByteBuffer payload;

  private final int len;

  public org.apache.hc.core5.http2.frame.RawFrame(int, int, int, java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iload_3
       4: invokespecial #1                  // Method org/apache/hc/core5/http2/frame/Frame."<init>":(III)V
       7: aload_0
       8: aload         4
      10: putfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
      13: aload_0
      14: aload         4
      16: ifnull        27
      19: aload         4
      21: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      24: goto          28
      27: iconst_0
      28: putfield      #4                  // Field len:I
      31: return

  public boolean isPadded();
    Code:
       0: aload_0
       1: getstatic     #5                  // Field org/apache/hc/core5/http2/frame/FrameFlag.PADDED:Lorg/apache/hc/core5/http2/frame/FrameFlag;
       4: invokevirtual #6                  // Method isFlagSet:(Lorg/apache/hc/core5/http2/frame/FrameFlag;)Z
       7: ireturn

  public int getLength();
    Code:
       0: aload_0
       1: getfield      #4                  // Field len:I
       4: ireturn

  public java.nio.ByteBuffer getPayloadContent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
       4: ifnull        71
       7: aload_0
       8: invokevirtual #7                  // Method isPadded:()Z
      11: ifeq          63
      14: aload_0
      15: getfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
      18: invokevirtual #8                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      21: astore_1
      22: aload_1
      23: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      26: ifne          31
      29: aconst_null
      30: areturn
      31: aload_1
      32: invokevirtual #9                  // Method java/nio/ByteBuffer.get:()B
      35: sipush        255
      38: iand
      39: istore_2
      40: iload_2
      41: aload_1
      42: invokevirtual #3                  // Method java/nio/ByteBuffer.remaining:()I
      45: if_icmple     50
      48: aconst_null
      49: areturn
      50: aload_1
      51: aload_1
      52: invokevirtual #10                 // Method java/nio/ByteBuffer.limit:()I
      55: iload_2
      56: isub
      57: invokevirtual #11                 // Method java/nio/ByteBuffer.limit:(I)Ljava/nio/Buffer;
      60: pop
      61: aload_1
      62: areturn
      63: aload_0
      64: getfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
      67: invokevirtual #8                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      70: areturn
      71: aconst_null
      72: areturn

  public java.nio.ByteBuffer getPayload();
    Code:
       0: aload_0
       1: getfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
       4: ifnull        17
       7: aload_0
       8: getfield      #2                  // Field payload:Ljava/nio/ByteBuffer;
      11: invokevirtual #8                  // Method java/nio/ByteBuffer.duplicate:()Ljava/nio/ByteBuffer;
      14: goto          18
      17: aconst_null
      18: areturn

  public java.lang.Object getPayload();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method getPayload:()Ljava/nio/ByteBuffer;
       4: areturn
}
