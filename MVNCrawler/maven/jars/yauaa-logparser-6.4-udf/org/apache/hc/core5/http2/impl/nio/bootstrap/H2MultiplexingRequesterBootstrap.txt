Compiled from "H2MultiplexingRequesterBootstrap.java"
public class org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap {
  private final java.util.List<org.apache.hc.core5.http2.impl.nio.bootstrap.HandlerEntry<org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncPushConsumer>>> pushConsumerList;

  private org.apache.hc.core5.http.protocol.UriPatternType uriPatternType;

  private org.apache.hc.core5.reactor.IOReactorConfig ioReactorConfig;

  private org.apache.hc.core5.http.protocol.HttpProcessor httpProcessor;

  private org.apache.hc.core5.http.config.CharCodingConfig charCodingConfig;

  private org.apache.hc.core5.http2.config.H2Config h2Config;

  private org.apache.hc.core5.http.nio.ssl.TlsStrategy tlsStrategy;

  private boolean strictALPNHandshake;

  private org.apache.hc.core5.function.Decorator<org.apache.hc.core5.reactor.IOSession> ioSessionDecorator;

  private org.apache.hc.core5.function.Callback<java.lang.Exception> exceptionCallback;

  private org.apache.hc.core5.reactor.IOSessionListener sessionListener;

  private org.apache.hc.core5.http2.impl.nio.H2StreamListener streamListener;

  private org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class java/util/ArrayList
       8: dup
       9: invokespecial #4                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #5                  // Field pushConsumerList:Ljava/util/List;
      15: return

  public static org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap bootstrap();
    Code:
       0: new           #6                  // class org/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequesterBootstrap
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setIOReactorConfig(org.apache.hc.core5.reactor.IOReactorConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field ioReactorConfig:Lorg/apache/hc/core5/reactor/IOReactorConfig;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setHttpProcessor(org.apache.hc.core5.http.protocol.HttpProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field httpProcessor:Lorg/apache/hc/core5/http/protocol/HttpProcessor;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setH2Config(org.apache.hc.core5.http2.config.H2Config);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field h2Config:Lorg/apache/hc/core5/http2/config/H2Config;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setCharCodingConfig(org.apache.hc.core5.http.config.CharCodingConfig);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field charCodingConfig:Lorg/apache/hc/core5/http/config/CharCodingConfig;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setTlsStrategy(org.apache.hc.core5.http.nio.ssl.TlsStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field tlsStrategy:Lorg/apache/hc/core5/http/nio/ssl/TlsStrategy;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setStrictALPNHandshake(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #1                  // Field strictALPNHandshake:Z
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setIOSessionDecorator(org.apache.hc.core5.function.Decorator<org.apache.hc.core5.reactor.IOSession>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field ioSessionDecorator:Lorg/apache/hc/core5/function/Decorator;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setExceptionCallback(org.apache.hc.core5.function.Callback<java.lang.Exception>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field exceptionCallback:Lorg/apache/hc/core5/function/Callback;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setIOSessionListener(org.apache.hc.core5.reactor.IOSessionListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field sessionListener:Lorg/apache/hc/core5/reactor/IOSessionListener;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setStreamListener(org.apache.hc.core5.http2.impl.nio.H2StreamListener);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field streamListener:Lorg/apache/hc/core5/http2/impl/nio/H2StreamListener;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap setUriPatternType(org.apache.hc.core5.http.protocol.UriPatternType);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field uriPatternType:Lorg/apache/hc/core5/http/protocol/UriPatternType;
       5: aload_0
       6: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap register(java.lang.String, org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncPushConsumer>);
    Code:
       0: aload_1
       1: ldc           #18                 // String URI pattern
       3: invokestatic  #19                 // Method org/apache/hc/core5/util/Args.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/CharSequence;
       6: pop
       7: aload_2
       8: ldc           #20                 // String Supplier
      10: invokestatic  #21                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      13: pop
      14: aload_0
      15: getfield      #5                  // Field pushConsumerList:Ljava/util/List;
      18: new           #22                 // class org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry
      21: dup
      22: aconst_null
      23: aload_1
      24: aload_2
      25: invokespecial #23                 // Method org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      28: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      33: pop
      34: aload_0
      35: areturn

  public final org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap registerVirtual(java.lang.String, java.lang.String, org.apache.hc.core5.function.Supplier<org.apache.hc.core5.http.nio.AsyncPushConsumer>);
    Code:
       0: aload_1
       1: ldc           #25                 // String Hostname
       3: invokestatic  #19                 // Method org/apache/hc/core5/util/Args.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/CharSequence;
       6: pop
       7: aload_2
       8: ldc           #18                 // String URI pattern
      10: invokestatic  #19                 // Method org/apache/hc/core5/util/Args.notBlank:(Ljava/lang/CharSequence;Ljava/lang/String;)Ljava/lang/CharSequence;
      13: pop
      14: aload_3
      15: ldc           #20                 // String Supplier
      17: invokestatic  #21                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      20: pop
      21: aload_0
      22: getfield      #5                  // Field pushConsumerList:Ljava/util/List;
      25: new           #22                 // class org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry
      28: dup
      29: aload_1
      30: aload_2
      31: aload_3
      32: invokespecial #23                 // Method org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      35: invokeinterface #24,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      40: pop
      41: aload_0
      42: areturn

  public org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequester create();
    Code:
       0: new           #26                 // class org/apache/hc/core5/http/protocol/RequestHandlerRegistry
       3: dup
       4: aload_0
       5: getfield      #17                 // Field uriPatternType:Lorg/apache/hc/core5/http/protocol/UriPatternType;
       8: invokespecial #27                 // Method org/apache/hc/core5/http/protocol/RequestHandlerRegistry."<init>":(Lorg/apache/hc/core5/http/protocol/UriPatternType;)V
      11: astore_1
      12: aload_0
      13: getfield      #5                  // Field pushConsumerList:Ljava/util/List;
      16: invokeinterface #28,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      21: astore_2
      22: aload_2
      23: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      28: ifeq          60
      31: aload_2
      32: invokeinterface #30,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #22                 // class org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry
      40: astore_3
      41: aload_1
      42: aload_3
      43: getfield      #31                 // Field org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry.hostname:Ljava/lang/String;
      46: aload_3
      47: getfield      #32                 // Field org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry.uriPattern:Ljava/lang/String;
      50: aload_3
      51: getfield      #33                 // Field org/apache/hc/core5/http2/impl/nio/bootstrap/HandlerEntry.handler:Ljava/lang/Object;
      54: invokevirtual #34                 // Method org/apache/hc/core5/http/protocol/RequestHandlerRegistry.register:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V
      57: goto          22
      60: new           #35                 // class org/apache/hc/core5/http2/impl/nio/ClientH2StreamMultiplexerFactory
      63: dup
      64: aload_0
      65: getfield      #9                  // Field httpProcessor:Lorg/apache/hc/core5/http/protocol/HttpProcessor;
      68: ifnull        78
      71: aload_0
      72: getfield      #9                  // Field httpProcessor:Lorg/apache/hc/core5/http/protocol/HttpProcessor;
      75: goto          81
      78: invokestatic  #36                 // Method org/apache/hc/core5/http2/impl/H2Processors.client:()Lorg/apache/hc/core5/http/protocol/HttpProcessor;
      81: new           #37                 // class org/apache/hc/core5/http2/nio/support/DefaultAsyncPushConsumerFactory
      84: dup
      85: aload_1
      86: invokespecial #38                 // Method org/apache/hc/core5/http2/nio/support/DefaultAsyncPushConsumerFactory."<init>":(Lorg/apache/hc/core5/http/HttpRequestMapper;)V
      89: aload_0
      90: getfield      #10                 // Field h2Config:Lorg/apache/hc/core5/http2/config/H2Config;
      93: ifnull        103
      96: aload_0
      97: getfield      #10                 // Field h2Config:Lorg/apache/hc/core5/http2/config/H2Config;
     100: goto          106
     103: getstatic     #39                 // Field org/apache/hc/core5/http2/config/H2Config.DEFAULT:Lorg/apache/hc/core5/http2/config/H2Config;
     106: aload_0
     107: getfield      #11                 // Field charCodingConfig:Lorg/apache/hc/core5/http/config/CharCodingConfig;
     110: ifnull        120
     113: aload_0
     114: getfield      #11                 // Field charCodingConfig:Lorg/apache/hc/core5/http/config/CharCodingConfig;
     117: goto          123
     120: getstatic     #40                 // Field org/apache/hc/core5/http/config/CharCodingConfig.DEFAULT:Lorg/apache/hc/core5/http/config/CharCodingConfig;
     123: aload_0
     124: getfield      #16                 // Field streamListener:Lorg/apache/hc/core5/http2/impl/nio/H2StreamListener;
     127: invokespecial #41                 // Method org/apache/hc/core5/http2/impl/nio/ClientH2StreamMultiplexerFactory."<init>":(Lorg/apache/hc/core5/http/protocol/HttpProcessor;Lorg/apache/hc/core5/http/nio/HandlerFactory;Lorg/apache/hc/core5/http2/config/H2Config;Lorg/apache/hc/core5/http/config/CharCodingConfig;Lorg/apache/hc/core5/http2/impl/nio/H2StreamListener;)V
     130: astore_2
     131: new           #42                 // class org/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequester
     134: dup
     135: aload_0
     136: getfield      #8                  // Field ioReactorConfig:Lorg/apache/hc/core5/reactor/IOReactorConfig;
     139: new           #43                 // class org/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequesterBootstrap$1
     142: dup
     143: aload_0
     144: aload_2
     145: invokespecial #44                 // Method org/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequesterBootstrap$1."<init>":(Lorg/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequesterBootstrap;Lorg/apache/hc/core5/http2/impl/nio/ClientH2StreamMultiplexerFactory;)V
     148: aload_0
     149: getfield      #13                 // Field ioSessionDecorator:Lorg/apache/hc/core5/function/Decorator;
     152: aload_0
     153: getfield      #14                 // Field exceptionCallback:Lorg/apache/hc/core5/function/Callback;
     156: aload_0
     157: getfield      #15                 // Field sessionListener:Lorg/apache/hc/core5/reactor/IOSessionListener;
     160: getstatic     #45                 // Field org/apache/hc/core5/http/impl/DefaultAddressResolver.INSTANCE:Lorg/apache/hc/core5/http/impl/DefaultAddressResolver;
     163: aload_0
     164: getfield      #12                 // Field tlsStrategy:Lorg/apache/hc/core5/http/nio/ssl/TlsStrategy;
     167: ifnull        177
     170: aload_0
     171: getfield      #12                 // Field tlsStrategy:Lorg/apache/hc/core5/http/nio/ssl/TlsStrategy;
     174: goto          184
     177: new           #46                 // class org/apache/hc/core5/http2/ssl/H2ClientTlsStrategy
     180: dup
     181: invokespecial #47                 // Method org/apache/hc/core5/http2/ssl/H2ClientTlsStrategy."<init>":()V
     184: invokespecial #48                 // Method org/apache/hc/core5/http2/impl/nio/bootstrap/H2MultiplexingRequester."<init>":(Lorg/apache/hc/core5/reactor/IOReactorConfig;Lorg/apache/hc/core5/reactor/IOEventHandlerFactory;Lorg/apache/hc/core5/function/Decorator;Lorg/apache/hc/core5/function/Callback;Lorg/apache/hc/core5/reactor/IOSessionListener;Lorg/apache/hc/core5/function/Resolver;Lorg/apache/hc/core5/http/nio/ssl/TlsStrategy;)V
     187: areturn

  static boolean access$000(org.apache.hc.core5.http2.impl.nio.bootstrap.H2MultiplexingRequesterBootstrap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field strictALPNHandshake:Z
       4: ireturn
}
