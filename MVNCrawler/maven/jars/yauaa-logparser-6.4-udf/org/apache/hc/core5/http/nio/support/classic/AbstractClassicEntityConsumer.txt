Compiled from "AbstractClassicEntityConsumer.java"
public abstract class org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer<T> implements org.apache.hc.core5.http.nio.AsyncEntityConsumer<T> {
  private final java.util.concurrent.Executor executor;

  private final org.apache.hc.core5.http.nio.support.classic.SharedInputBuffer buffer;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer$State> state;

  private final java.util.concurrent.atomic.AtomicReference<T> resultRef;

  private final java.util.concurrent.atomic.AtomicReference<java.lang.Exception> exceptionRef;

  public org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer(int, java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: ldc           #5                  // String Executor
       8: invokestatic  #6                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class java/util/concurrent/Executor
      14: putfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
      17: aload_0
      18: new           #9                  // class org/apache/hc/core5/http/nio/support/classic/SharedInputBuffer
      21: dup
      22: iload_1
      23: invokespecial #10                 // Method org/apache/hc/core5/http/nio/support/classic/SharedInputBuffer."<init>":(I)V
      26: putfield      #3                  // Field buffer:Lorg/apache/hc/core5/http/nio/support/classic/SharedInputBuffer;
      29: aload_0
      30: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      33: dup
      34: getstatic     #12                 // Field org/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State.IDLE:Lorg/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State;
      37: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      40: putfield      #1                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      43: aload_0
      44: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      47: dup
      48: aconst_null
      49: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      52: putfield      #2                  // Field resultRef:Ljava/util/concurrent/atomic/AtomicReference;
      55: aload_0
      56: new           #11                 // class java/util/concurrent/atomic/AtomicReference
      59: dup
      60: aconst_null
      61: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      64: putfield      #14                 // Field exceptionRef:Ljava/util/concurrent/atomic/AtomicReference;
      67: return

  protected abstract T consumeData(org.apache.hc.core5.http.ContentType, java.io.InputStream) throws java.io.IOException;

  public final void updateCapacity(org.apache.hc.core5.http.nio.CapacityChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lorg/apache/hc/core5/http/nio/support/classic/SharedInputBuffer;
       4: aload_1
       5: invokevirtual #15                 // Method org/apache/hc/core5/http/nio/support/classic/SharedInputBuffer.updateCapacity:(Lorg/apache/hc/core5/http/nio/CapacityChannel;)V
       8: return

  public final void streamStart(org.apache.hc.core5.http.EntityDetails, org.apache.hc.core5.concurrent.FutureCallback<T>) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_1
       1: invokeinterface #16,  1           // InterfaceMethod org/apache/hc/core5/http/EntityDetails.getContentType:()Ljava/lang/String;
       6: invokestatic  #17                 // Method org/apache/hc/core5/http/ContentType.parse:(Ljava/lang/CharSequence;)Lorg/apache/hc/core5/http/ContentType;
       9: astore_3
      10: goto          28
      13: astore        4
      15: new           #19                 // class java/io/UnsupportedEncodingException
      18: dup
      19: aload         4
      21: invokevirtual #20                 // Method java/nio/charset/UnsupportedCharsetException.getMessage:()Ljava/lang/String;
      24: invokespecial #21                 // Method java/io/UnsupportedEncodingException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: getfield      #1                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
      32: getstatic     #12                 // Field org/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State.IDLE:Lorg/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State;
      35: getstatic     #22                 // Field org/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$State;
      38: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      41: ifeq          63
      44: aload_0
      45: getfield      #8                  // Field executor:Ljava/util/concurrent/Executor;
      48: new           #24                 // class org/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$1
      51: dup
      52: aload_0
      53: aload_3
      54: aload_2
      55: invokespecial #25                 // Method org/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer$1."<init>":(Lorg/apache/hc/core5/http/nio/support/classic/AbstractClassicEntityConsumer;Lorg/apache/hc/core5/http/ContentType;Lorg/apache/hc/core5/concurrent/FutureCallback;)V
      58: invokeinterface #26,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      63: return
    Exception table:
       from    to  target type
           0    10    13   Class java/nio/charset/UnsupportedCharsetException

  public final void consume(java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lorg/apache/hc/core5/http/nio/support/classic/SharedInputBuffer;
       4: aload_1
       5: invokevirtual #27                 // Method org/apache/hc/core5/http/nio/support/classic/SharedInputBuffer.fill:(Ljava/nio/ByteBuffer;)I
       8: pop
       9: return

  public final void streamEnd(java.util.List<? extends org.apache.hc.core5.http.Header>) throws org.apache.hc.core5.http.HttpException, java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lorg/apache/hc/core5/http/nio/support/classic/SharedInputBuffer;
       4: invokevirtual #28                 // Method org/apache/hc/core5/http/nio/support/classic/SharedInputBuffer.markEndStream:()V
       7: return

  public final void failed(java.lang.Exception);
    Code:
       0: aload_0
       1: getfield      #14                 // Field exceptionRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aconst_null
       5: aload_1
       6: invokevirtual #23                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          16
      12: aload_0
      13: invokevirtual #29                 // Method releaseResources:()V
      16: return

  public final java.lang.Exception getException();
    Code:
       0: aload_0
       1: getfield      #14                 // Field exceptionRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #31                 // class java/lang/Exception
      10: areturn

  public final T getContent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field resultRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: areturn

  public void releaseResources();
    Code:
       0: return

  static org.apache.hc.core5.http.nio.support.classic.SharedInputBuffer access$000(org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field buffer:Lorg/apache/hc/core5/http/nio/support/classic/SharedInputBuffer;
       4: areturn

  static java.util.concurrent.atomic.AtomicReference access$100(org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer);
    Code:
       0: aload_0
       1: getfield      #2                  // Field resultRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn

  static java.util.concurrent.atomic.AtomicReference access$200(org.apache.hc.core5.http.nio.support.classic.AbstractClassicEntityConsumer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field state:Ljava/util/concurrent/atomic/AtomicReference;
       4: areturn
}
