Compiled from "AbstractBinAsyncEntityProducer.java"
public abstract class org.apache.hc.core5.http.nio.entity.AbstractBinAsyncEntityProducer implements org.apache.hc.core5.http.nio.AsyncEntityProducer {
  private final int fragmentSizeHint;

  private final java.nio.ByteBuffer bytebuf;

  private final org.apache.hc.core5.http.ContentType contentType;

  private volatile org.apache.hc.core5.http.nio.entity.AbstractBinAsyncEntityProducer$State state;

  public org.apache.hc.core5.http.nio.entity.AbstractBinAsyncEntityProducer(int, org.apache.hc.core5.http.ContentType);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: iflt          13
       9: iload_1
      10: goto          14
      13: iconst_0
      14: putfield      #3                  // Field fragmentSizeHint:I
      17: aload_0
      18: aload_0
      19: getfield      #3                  // Field fragmentSizeHint:I
      22: invokestatic  #4                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
      25: putfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      28: aload_0
      29: aload_2
      30: putfield      #5                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      33: aload_0
      34: getstatic     #6                  // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      37: putfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      40: return

  private void flush(org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
       7: ifle          37
      10: aload_0
      11: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      14: invokevirtual #9                  // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      17: pop
      18: aload_1
      19: aload_0
      20: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      23: invokeinterface #10,  2           // InterfaceMethod org/apache/hc/core5/http/nio/StreamChannel.write:(Ljava/nio/Buffer;)I
      28: pop
      29: aload_0
      30: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      33: invokevirtual #11                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      36: pop
      37: return

  final int writeData(org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>, java.nio.ByteBuffer) throws java.io.IOException;
    Code:
       0: aload_2
       1: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
       4: istore_3
       5: iload_3
       6: ifne          11
       9: iconst_0
      10: ireturn
      11: iload_3
      12: aload_0
      13: getfield      #3                  // Field fragmentSizeHint:I
      16: if_icmple     42
      19: aload_0
      20: aload_1
      21: invokespecial #13                 // Method flush:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      24: aload_0
      25: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      28: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      31: ifne          95
      34: aload_1
      35: aload_2
      36: invokeinterface #10,  2           // InterfaceMethod org/apache/hc/core5/http/nio/StreamChannel.write:(Ljava/nio/Buffer;)I
      41: ireturn
      42: aload_0
      43: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      46: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      49: iload_3
      50: if_icmpge     58
      53: aload_0
      54: aload_1
      55: invokespecial #13                 // Method flush:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      58: aload_0
      59: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      62: invokevirtual #12                 // Method java/nio/ByteBuffer.remaining:()I
      65: iload_3
      66: if_icmplt     95
      69: aload_0
      70: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      73: aload_2
      74: invokevirtual #14                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      77: pop
      78: aload_0
      79: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      82: invokevirtual #15                 // Method java/nio/ByteBuffer.hasRemaining:()Z
      85: ifne          93
      88: aload_0
      89: aload_1
      90: invokespecial #13                 // Method flush:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      93: iload_3
      94: ireturn
      95: iconst_0
      96: ireturn

  final void streamEnd(org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       4: getstatic     #6                  // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       7: if_acmpne     45
      10: aload_0
      11: getstatic     #16                 // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.FLUSHING:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      14: putfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      17: aload_0
      18: aload_1
      19: invokespecial #13                 // Method flush:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      22: aload_0
      23: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      26: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      29: ifne          45
      32: aload_0
      33: getstatic     #17                 // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.END_STREAM:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      36: putfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      39: aload_1
      40: invokeinterface #18,  1           // InterfaceMethod org/apache/hc/core5/http/nio/StreamChannel.endStream:()V
      45: return

  protected abstract int availableData();

  protected abstract void produceData(org.apache.hc.core5.http.nio.StreamChannel<java.nio.ByteBuffer>) throws java.io.IOException;

  public final java.lang.String getContentType();
    Code:
       0: aload_0
       1: getfield      #5                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
       4: ifnull        17
       7: aload_0
       8: getfield      #5                  // Field contentType:Lorg/apache/hc/core5/http/ContentType;
      11: invokevirtual #19                 // Method org/apache/hc/core5/http/ContentType.toString:()Ljava/lang/String;
      14: goto          18
      17: aconst_null
      18: areturn

  public java.lang.String getContentEncoding();
    Code:
       0: aconst_null
       1: areturn

  public boolean isChunked();
    Code:
       0: iconst_0
       1: ireturn

  public java.util.Set<java.lang.String> getTrailerNames();
    Code:
       0: aconst_null
       1: areturn

  public long getContentLength();
    Code:
       0: ldc2_w        #20                 // long -1l
       3: lreturn

  public final int available();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       4: getstatic     #6                  // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       7: if_acmpne     15
      10: aload_0
      11: invokevirtual #22                 // Method availableData:()I
      14: ireturn
      15: aload_0
      16: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      19: dup
      20: astore_1
      21: monitorenter
      22: aload_0
      23: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      26: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      29: aload_1
      30: monitorexit
      31: ireturn
      32: astore_2
      33: aload_1
      34: monitorexit
      35: aload_2
      36: athrow
    Exception table:
       from    to  target type
          22    31    32   any
          32    35    32   any

  public final void produce(org.apache.hc.core5.http.nio.DataStreamChannel) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
       4: dup
       5: astore_2
       6: monitorenter
       7: aload_0
       8: getfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      11: getstatic     #6                  // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      14: if_acmpne     30
      17: aload_0
      18: new           #23                 // class org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$1
      21: dup
      22: aload_0
      23: aload_1
      24: invokespecial #24                 // Method org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$1."<init>":(Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer;Lorg/apache/hc/core5/http/nio/DataStreamChannel;)V
      27: invokevirtual #25                 // Method produceData:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      30: aload_0
      31: getfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      34: getstatic     #16                 // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.FLUSHING:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      37: if_acmpne     68
      40: aload_0
      41: aload_1
      42: invokespecial #13                 // Method flush:(Lorg/apache/hc/core5/http/nio/StreamChannel;)V
      45: aload_0
      46: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
      49: invokevirtual #8                  // Method java/nio/ByteBuffer.position:()I
      52: ifne          68
      55: aload_0
      56: getstatic     #17                 // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.END_STREAM:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      59: putfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
      62: aload_1
      63: invokeinterface #26,  1           // InterfaceMethod org/apache/hc/core5/http/nio/DataStreamChannel.endStream:()V
      68: aload_2
      69: monitorexit
      70: goto          78
      73: astore_3
      74: aload_2
      75: monitorexit
      76: aload_3
      77: athrow
      78: return
    Exception table:
       from    to  target type
           7    70    73   any
          73    76    73   any

  public void releaseResources();
    Code:
       0: aload_0
       1: getstatic     #6                  // Field org/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State.ACTIVE:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       4: putfield      #7                  // Field state:Lorg/apache/hc/core5/http/nio/entity/AbstractBinAsyncEntityProducer$State;
       7: return

  static java.nio.ByteBuffer access$000(org.apache.hc.core5.http.nio.entity.AbstractBinAsyncEntityProducer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bytebuf:Ljava/nio/ByteBuffer;
       4: areturn
}
