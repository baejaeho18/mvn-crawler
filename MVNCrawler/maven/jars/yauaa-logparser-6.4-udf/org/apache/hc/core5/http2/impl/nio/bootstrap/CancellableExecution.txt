Compiled from "CancellableExecution.java"
final class org.apache.hc.core5.http2.impl.nio.bootstrap.CancellableExecution implements org.apache.hc.core5.concurrent.CancellableDependency {
  private final java.util.concurrent.atomic.AtomicBoolean cancelled;

  private final java.util.concurrent.atomic.AtomicReference<org.apache.hc.core5.concurrent.Cancellable> dependencyRef;

  org.apache.hc.core5.http2.impl.nio.bootstrap.CancellableExecution();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: iconst_0
      10: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      13: putfield      #4                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      16: aload_0
      17: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      20: dup
      21: aconst_null
      22: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      25: putfield      #7                  // Field dependencyRef:Ljava/util/concurrent/atomic/AtomicReference;
      28: return

  public void setDependency(org.apache.hc.core5.concurrent.Cancellable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field dependencyRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: aload_1
       5: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
       8: aload_0
       9: getfield      #4                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      15: ifeq          41
      18: aload_0
      19: getfield      #7                  // Field dependencyRef:Ljava/util/concurrent/atomic/AtomicReference;
      22: aconst_null
      23: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      26: checkcast     #11                 // class org/apache/hc/core5/concurrent/Cancellable
      29: astore_2
      30: aload_2
      31: ifnull        41
      34: aload_2
      35: invokeinterface #12,  1           // InterfaceMethod org/apache/hc/core5/concurrent/Cancellable.cancel:()Z
      40: pop
      41: return

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #9                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public boolean cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancelled:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          37
      12: aload_0
      13: getfield      #7                  // Field dependencyRef:Ljava/util/concurrent/atomic/AtomicReference;
      16: aconst_null
      17: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;
      20: checkcast     #11                 // class org/apache/hc/core5/concurrent/Cancellable
      23: astore_1
      24: aload_1
      25: ifnull        35
      28: aload_1
      29: invokeinterface #12,  1           // InterfaceMethod org/apache/hc/core5/concurrent/Cancellable.cancel:()Z
      34: pop
      35: iconst_1
      36: ireturn
      37: iconst_0
      38: ireturn
}
