Compiled from "SocketHolder.java"
public class org.apache.hc.core5.http.impl.io.SocketHolder {
  private final java.net.Socket socket;

  private final java.util.concurrent.atomic.AtomicReference<java.io.InputStream> inputStreamRef;

  private final java.util.concurrent.atomic.AtomicReference<java.io.OutputStream> outputStreamRef;

  public org.apache.hc.core5.http.impl.io.SocketHolder(java.net.Socket);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String Socket
       8: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/net/Socket
      14: putfield      #5                  // Field socket:Ljava/net/Socket;
      17: aload_0
      18: new           #6                  // class java/util/concurrent/atomic/AtomicReference
      21: dup
      22: aconst_null
      23: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      26: putfield      #8                  // Field inputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      29: aload_0
      30: new           #6                  // class java/util/concurrent/atomic/AtomicReference
      33: dup
      34: aconst_null
      35: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReference."<init>":(Ljava/lang/Object;)V
      38: putfield      #9                  // Field outputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      41: return

  public final java.net.Socket getSocket();
    Code:
       0: aload_0
       1: getfield      #5                  // Field socket:Ljava/net/Socket;
       4: areturn

  public final java.io.InputStream getInputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field inputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #11                 // class java/io/InputStream
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aload_0
      18: aload_0
      19: getfield      #5                  // Field socket:Ljava/net/Socket;
      22: invokevirtual #12                 // Method getInputStream:(Ljava/net/Socket;)Ljava/io/InputStream;
      25: astore_1
      26: aload_0
      27: getfield      #8                  // Field inputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      30: aconst_null
      31: aload_1
      32: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ifeq          40
      38: aload_1
      39: areturn
      40: aload_0
      41: getfield      #8                  // Field inputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      44: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      47: checkcast     #11                 // class java/io/InputStream
      50: areturn

  protected java.io.InputStream getInputStream(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #14                 // Method java/net/Socket.getInputStream:()Ljava/io/InputStream;
       4: areturn

  protected java.io.OutputStream getOutputStream(java.net.Socket) throws java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/net/Socket.getOutputStream:()Ljava/io/OutputStream;
       4: areturn

  public final java.io.OutputStream getOutputStream() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #9                  // Field outputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
       4: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       7: checkcast     #16                 // class java/io/OutputStream
      10: astore_1
      11: aload_1
      12: ifnull        17
      15: aload_1
      16: areturn
      17: aload_0
      18: aload_0
      19: getfield      #5                  // Field socket:Ljava/net/Socket;
      22: invokevirtual #17                 // Method getOutputStream:(Ljava/net/Socket;)Ljava/io/OutputStream;
      25: astore_1
      26: aload_0
      27: getfield      #9                  // Field outputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      30: aconst_null
      31: aload_1
      32: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReference.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ifeq          40
      38: aload_1
      39: areturn
      40: aload_0
      41: getfield      #9                  // Field outputStreamRef:Ljava/util/concurrent/atomic/AtomicReference;
      44: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      47: checkcast     #16                 // class java/io/OutputStream
      50: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #5                  // Field socket:Ljava/net/Socket;
       4: invokevirtual #18                 // Method java/net/Socket.toString:()Ljava/lang/String;
       7: areturn
}
