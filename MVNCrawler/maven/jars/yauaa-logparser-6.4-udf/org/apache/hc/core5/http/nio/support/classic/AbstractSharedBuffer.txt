Compiled from "AbstractSharedBuffer.java"
abstract class org.apache.hc.core5.http.nio.support.classic.AbstractSharedBuffer extends org.apache.hc.core5.http.impl.nio.ExpandableBuffer {
  final java.util.concurrent.locks.ReentrantLock lock;

  final java.util.concurrent.locks.Condition condition;

  volatile boolean endStream;

  volatile boolean aborted;

  public org.apache.hc.core5.http.nio.support.classic.AbstractSharedBuffer(java.util.concurrent.locks.ReentrantLock, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #1                  // Method org/apache/hc/core5/http/impl/nio/ExpandableBuffer."<init>":(I)V
       5: aload_0
       6: aload_1
       7: ldc           #2                  // String Lock
       9: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/concurrent/locks/ReentrantLock
      15: putfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      18: aload_0
      19: aload_1
      20: invokevirtual #6                  // Method java/util/concurrent/locks/ReentrantLock.newCondition:()Ljava/util/concurrent/locks/Condition;
      23: putfield      #7                  // Field condition:Ljava/util/concurrent/locks/Condition;
      26: return

  public boolean hasData();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #9                  // Method org/apache/hc/core5/http/impl/nio/ExpandableBuffer.hasData:()Z
      11: istore_1
      12: aload_0
      13: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int capacity();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #11                 // Method org/apache/hc/core5/http/impl/nio/ExpandableBuffer.capacity:()I
      11: istore_1
      12: aload_0
      13: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public int length();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: invokespecial #12                 // Method org/apache/hc/core5/http/impl/nio/ExpandableBuffer.length:()I
      11: istore_1
      12: aload_0
      13: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      16: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      19: iload_1
      20: ireturn
      21: astore_2
      22: aload_0
      23: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      26: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      29: aload_2
      30: athrow
    Exception table:
       from    to  target type
           7    12    21   any
          21    22    21   any

  public void abort();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: iconst_1
       9: putfield      #13                 // Field endStream:Z
      12: aload_0
      13: iconst_1
      14: putfield      #14                 // Field aborted:Z
      17: aload_0
      18: getfield      #7                  // Field condition:Ljava/util/concurrent/locks/Condition;
      21: invokeinterface #15,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signalAll:()V
      26: aload_0
      27: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      30: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      33: goto          46
      36: astore_1
      37: aload_0
      38: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      41: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      44: aload_1
      45: athrow
      46: return
    Exception table:
       from    to  target type
           7    26    36   any
          36    37    36   any

  public void reset();
    Code:
       0: aload_0
       1: getfield      #14                 // Field aborted:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      12: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
      15: aload_0
      16: invokevirtual #16                 // Method setInputMode:()V
      19: aload_0
      20: invokevirtual #17                 // Method buffer:()Ljava/nio/ByteBuffer;
      23: invokevirtual #18                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      26: pop
      27: aload_0
      28: iconst_0
      29: putfield      #13                 // Field endStream:Z
      32: aload_0
      33: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      36: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      39: goto          52
      42: astore_1
      43: aload_0
      44: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      47: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      50: aload_1
      51: athrow
      52: return
    Exception table:
       from    to  target type
          15    32    42   any
          42    43    42   any

  public boolean isEndStream();
    Code:
       0: aload_0
       1: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
       4: invokevirtual #8                  // Method java/util/concurrent/locks/ReentrantLock.lock:()V
       7: aload_0
       8: getfield      #13                 // Field endStream:Z
      11: ifeq          25
      14: aload_0
      15: invokespecial #9                  // Method org/apache/hc/core5/http/impl/nio/ExpandableBuffer.hasData:()Z
      18: ifne          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: istore_1
      27: aload_0
      28: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      31: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      34: iload_1
      35: ireturn
      36: astore_2
      37: aload_0
      38: getfield      #5                  // Field lock:Ljava/util/concurrent/locks/ReentrantLock;
      41: invokevirtual #10                 // Method java/util/concurrent/locks/ReentrantLock.unlock:()V
      44: aload_2
      45: athrow
    Exception table:
       from    to  target type
           7    27    36   any
          36    37    36   any
}
