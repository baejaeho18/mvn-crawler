Compiled from "LaxConnPool.java"
public class org.apache.hc.core5.pool.LaxConnPool<T, C extends org.apache.hc.core5.io.ModalCloseable> implements org.apache.hc.core5.pool.ManagedConnPool<T, C> {
  private final org.apache.hc.core5.util.TimeValue timeToLive;

  private final org.apache.hc.core5.pool.PoolReusePolicy policy;

  private final org.apache.hc.core5.pool.DisposalCallback<C> disposalCallback;

  private final org.apache.hc.core5.pool.ConnPoolListener<T> connPoolListener;

  private final java.util.concurrent.ConcurrentMap<T, org.apache.hc.core5.pool.LaxConnPool$PerRoutePool<T, C>> routeToPool;

  private final java.util.concurrent.atomic.AtomicBoolean isShutDown;

  private volatile int defaultMaxPerRoute;

  public org.apache.hc.core5.pool.LaxConnPool(int, org.apache.hc.core5.util.TimeValue, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.pool.DisposalCallback<C>, org.apache.hc.core5.pool.ConnPoolListener<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: iload_1
       5: ldc           #2                  // String Max per route value
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
      10: pop
      11: aload_0
      12: aload_2
      13: invokestatic  #4                  // Method org/apache/hc/core5/util/TimeValue.defaultsToNegativeOneMillisecond:(Lorg/apache/hc/core5/util/TimeValue;)Lorg/apache/hc/core5/util/TimeValue;
      16: putfield      #5                  // Field timeToLive:Lorg/apache/hc/core5/util/TimeValue;
      19: aload_0
      20: aload_3
      21: ifnull        28
      24: aload_3
      25: goto          31
      28: getstatic     #6                  // Field org/apache/hc/core5/pool/PoolReusePolicy.LIFO:Lorg/apache/hc/core5/pool/PoolReusePolicy;
      31: putfield      #7                  // Field policy:Lorg/apache/hc/core5/pool/PoolReusePolicy;
      34: aload_0
      35: aload         4
      37: putfield      #8                  // Field disposalCallback:Lorg/apache/hc/core5/pool/DisposalCallback;
      40: aload_0
      41: aload         5
      43: putfield      #9                  // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
      46: aload_0
      47: new           #10                 // class java/util/concurrent/ConcurrentHashMap
      50: dup
      51: invokespecial #11                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      54: putfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
      57: aload_0
      58: new           #13                 // class java/util/concurrent/atomic/AtomicBoolean
      61: dup
      62: iconst_0
      63: invokespecial #14                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      66: putfield      #15                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
      69: aload_0
      70: iload_1
      71: putfield      #16                 // Field defaultMaxPerRoute:I
      74: return

  public org.apache.hc.core5.pool.LaxConnPool(int, org.apache.hc.core5.util.TimeValue, org.apache.hc.core5.pool.PoolReusePolicy, org.apache.hc.core5.pool.ConnPoolListener<T>);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: aload         4
       7: invokespecial #17                 // Method "<init>":(ILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/DisposalCallback;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      10: return

  public org.apache.hc.core5.pool.LaxConnPool(int);
    Code:
       0: aload_0
       1: iload_1
       2: getstatic     #18                 // Field org/apache/hc/core5/util/TimeValue.NEG_ONE_MILLISECOND:Lorg/apache/hc/core5/util/TimeValue;
       5: getstatic     #6                  // Field org/apache/hc/core5/pool/PoolReusePolicy.LIFO:Lorg/apache/hc/core5/pool/PoolReusePolicy;
       8: aconst_null
       9: aconst_null
      10: invokespecial #17                 // Method "<init>":(ILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/DisposalCallback;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      13: return

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #15                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  public void close(org.apache.hc.core5.io.CloseMode);
    Code:
       0: aload_0
       1: getfield      #15                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: iconst_1
       6: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
       9: ifeq          63
      12: aload_0
      13: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
      16: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      21: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          54
      36: aload_2
      37: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      45: astore_3
      46: aload_3
      47: aload_1
      48: invokevirtual #26                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.shutdown:(Lorg/apache/hc/core5/io/CloseMode;)V
      51: goto          27
      54: aload_0
      55: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
      58: invokeinterface #27,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
      63: return

  public void close();
    Code:
       0: aload_0
       1: getstatic     #28                 // Field org/apache/hc/core5/io/CloseMode.GRACEFUL:Lorg/apache/hc/core5/io/CloseMode;
       4: invokevirtual #29                 // Method close:(Lorg/apache/hc/core5/io/CloseMode;)V
       7: return

  private org.apache.hc.core5.pool.LaxConnPool$PerRoutePool<T, C> getPool(T);
    Code:
       0: aload_0
       1: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      13: astore_2
      14: aload_2
      15: ifnonnull     69
      18: new           #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      21: dup
      22: aload_1
      23: aload_0
      24: getfield      #16                 // Field defaultMaxPerRoute:I
      27: aload_0
      28: getfield      #5                  // Field timeToLive:Lorg/apache/hc/core5/util/TimeValue;
      31: aload_0
      32: getfield      #7                  // Field policy:Lorg/apache/hc/core5/pool/PoolReusePolicy;
      35: aload_0
      36: aload_0
      37: getfield      #8                  // Field disposalCallback:Lorg/apache/hc/core5/pool/DisposalCallback;
      40: aload_0
      41: getfield      #9                  // Field connPoolListener:Lorg/apache/hc/core5/pool/ConnPoolListener;
      44: invokespecial #31                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool."<init>":(Ljava/lang/Object;ILorg/apache/hc/core5/util/TimeValue;Lorg/apache/hc/core5/pool/PoolReusePolicy;Lorg/apache/hc/core5/pool/ConnPoolStats;Lorg/apache/hc/core5/pool/DisposalCallback;Lorg/apache/hc/core5/pool/ConnPoolListener;)V
      47: astore_3
      48: aload_0
      49: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
      52: aload_1
      53: aload_3
      54: invokeinterface #32,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      62: astore_2
      63: aload_2
      64: ifnonnull     69
      67: aload_3
      68: astore_2
      69: aload_2
      70: areturn

  public java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T, C>> lease(T, java.lang.Object, org.apache.hc.core5.util.Timeout, org.apache.hc.core5.concurrent.FutureCallback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_1
       1: ldc           #33                 // String Route
       3: invokestatic  #34                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #15                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
      11: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ldc           #35                 // String Connection pool shut down
      24: invokestatic  #36                 // Method org/apache/hc/core5/util/Asserts.check:(ZLjava/lang/String;)V
      27: aload_0
      28: aload_1
      29: invokespecial #37                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/LaxConnPool$PerRoutePool;
      32: astore        5
      34: aload         5
      36: aload_2
      37: aload_3
      38: aload         4
      40: invokevirtual #38                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.lease:(Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      43: areturn

  public java.util.concurrent.Future<org.apache.hc.core5.pool.PoolEntry<T, C>> lease(T, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: getstatic     #39                 // Field org/apache/hc/core5/util/Timeout.DISABLED:Lorg/apache/hc/core5/util/Timeout;
       6: aconst_null
       7: invokevirtual #40                 // Method lease:(Ljava/lang/Object;Ljava/lang/Object;Lorg/apache/hc/core5/util/Timeout;Lorg/apache/hc/core5/concurrent/FutureCallback;)Ljava/util/concurrent/Future;
      10: areturn

  public void release(org.apache.hc.core5.pool.PoolEntry<T, C>, boolean);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aload_0
       6: getfield      #15                 // Field isShutDown:Ljava/util/concurrent/atomic/AtomicBoolean;
       9: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      12: ifeq          16
      15: return
      16: aload_0
      17: aload_1
      18: invokevirtual #41                 // Method org/apache/hc/core5/pool/PoolEntry.getRoute:()Ljava/lang/Object;
      21: invokespecial #37                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/LaxConnPool$PerRoutePool;
      24: astore_3
      25: aload_3
      26: aload_1
      27: iload_2
      28: invokevirtual #42                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.release:(Lorg/apache/hc/core5/pool/PoolEntry;Z)V
      31: return

  public void validatePendingRequests();
    Code:
       0: aload_0
       1: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_1
      15: aload_1
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          41
      24: aload_1
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      33: astore_2
      34: aload_2
      35: invokevirtual #44                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.validatePendingRequests:()V
      38: goto          15
      41: return

  public void setMaxTotal(int);
    Code:
       0: return

  public int getMaxTotal();
    Code:
       0: iconst_0
       1: ireturn

  public void setDefaultMaxPerRoute(int);
    Code:
       0: iload_1
       1: ldc           #45                 // String Max value
       3: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
       6: pop
       7: aload_0
       8: iload_1
       9: putfield      #16                 // Field defaultMaxPerRoute:I
      12: return

  public int getDefaultMaxPerRoute();
    Code:
       0: aload_0
       1: getfield      #16                 // Field defaultMaxPerRoute:I
       4: ireturn

  public void setMaxPerRoute(T, int);
    Code:
       0: aload_1
       1: ldc           #33                 // String Route
       3: invokestatic  #34                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #37                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/LaxConnPool$PerRoutePool;
      12: astore_3
      13: aload_3
      14: iload_2
      15: iconst_m1
      16: if_icmple     23
      19: iload_2
      20: goto          27
      23: aload_0
      24: getfield      #16                 // Field defaultMaxPerRoute:I
      27: invokevirtual #46                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.setMax:(I)V
      30: return

  public int getMaxPerRoute(T);
    Code:
       0: aload_1
       1: ldc           #33                 // String Route
       3: invokestatic  #34                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #37                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/LaxConnPool$PerRoutePool;
      12: astore_2
      13: aload_2
      14: invokevirtual #47                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getMax:()I
      17: ireturn

  public org.apache.hc.core5.pool.PoolStats getTotalStats();
    Code:
       0: iconst_0
       1: istore_1
       2: iconst_0
       3: istore_2
       4: iconst_0
       5: istore_3
       6: iconst_0
       7: istore        4
       9: aload_0
      10: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
      13: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
      18: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      23: astore        5
      25: aload         5
      27: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      32: ifeq          84
      35: aload         5
      37: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      45: astore        6
      47: iload_1
      48: aload         6
      50: invokevirtual #48                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getLeasedCount:()I
      53: iadd
      54: istore_1
      55: iload_2
      56: aload         6
      58: invokevirtual #49                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getPendingCount:()I
      61: iadd
      62: istore_2
      63: iload_3
      64: aload         6
      66: invokevirtual #50                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getAvailableCount:()I
      69: iadd
      70: istore_3
      71: iload         4
      73: aload         6
      75: invokevirtual #47                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getMax:()I
      78: iadd
      79: istore        4
      81: goto          25
      84: new           #51                 // class org/apache/hc/core5/pool/PoolStats
      87: dup
      88: iload_1
      89: iload_2
      90: iload_3
      91: iload         4
      93: invokespecial #52                 // Method org/apache/hc/core5/pool/PoolStats."<init>":(IIII)V
      96: areturn

  public org.apache.hc.core5.pool.PoolStats getStats(T);
    Code:
       0: aload_1
       1: ldc           #33                 // String Route
       3: invokestatic  #34                 // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokespecial #37                 // Method getPool:(Ljava/lang/Object;)Lorg/apache/hc/core5/pool/LaxConnPool$PerRoutePool;
      12: astore_2
      13: new           #51                 // class org/apache/hc/core5/pool/PoolStats
      16: dup
      17: aload_2
      18: invokevirtual #48                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getLeasedCount:()I
      21: aload_2
      22: invokevirtual #49                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getPendingCount:()I
      25: aload_2
      26: invokevirtual #50                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getAvailableCount:()I
      29: aload_2
      30: invokevirtual #47                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.getMax:()I
      33: invokespecial #52                 // Method org/apache/hc/core5/pool/PoolStats."<init>":(IIII)V
      36: areturn

  public java.util.Set<T> getRoutes();
    Code:
       0: new           #53                 // class java/util/HashSet
       3: dup
       4: aload_0
       5: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
       8: invokeinterface #54,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.keySet:()Ljava/util/Set;
      13: invokespecial #55                 // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      16: areturn

  public void enumAvailable(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #56                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.enumAvailable:(Lorg/apache/hc/core5/function/Callback;)V
      39: goto          15
      42: return

  public void enumLeased(org.apache.hc.core5.function.Callback<org.apache.hc.core5.pool.PoolEntry<T, C>>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field routeToPool:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       9: invokeinterface #43,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          42
      24: aload_2
      25: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #25                 // class org/apache/hc/core5/pool/LaxConnPool$PerRoutePool
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #57                 // Method org/apache/hc/core5/pool/LaxConnPool$PerRoutePool.enumLeased:(Lorg/apache/hc/core5/function/Callback;)V
      39: goto          15
      42: return

  public void closeIdle(org.apache.hc.core5.util.TimeValue);
    Code:
       0: invokestatic  #58                 // Method java/lang/System.currentTimeMillis:()J
       3: aload_1
       4: invokestatic  #59                 // Method org/apache/hc/core5/util/TimeValue.isPositive:(Lorg/apache/hc/core5/util/TimeValue;)Z
       7: ifeq          17
      10: aload_1
      11: invokevirtual #60                 // Method org/apache/hc/core5/util/TimeValue.toMilliseconds:()J
      14: goto          18
      17: lconst_0
      18: lsub
      19: lstore_2
      20: aload_0
      21: new           #61                 // class org/apache/hc/core5/pool/LaxConnPool$1
      24: dup
      25: aload_0
      26: lload_2
      27: invokespecial #62                 // Method org/apache/hc/core5/pool/LaxConnPool$1."<init>":(Lorg/apache/hc/core5/pool/LaxConnPool;J)V
      30: invokevirtual #63                 // Method enumAvailable:(Lorg/apache/hc/core5/function/Callback;)V
      33: return

  public void closeExpired();
    Code:
       0: invokestatic  #58                 // Method java/lang/System.currentTimeMillis:()J
       3: lstore_1
       4: aload_0
       5: new           #64                 // class org/apache/hc/core5/pool/LaxConnPool$2
       8: dup
       9: aload_0
      10: lload_1
      11: invokespecial #65                 // Method org/apache/hc/core5/pool/LaxConnPool$2."<init>":(Lorg/apache/hc/core5/pool/LaxConnPool;J)V
      14: invokevirtual #63                 // Method enumAvailable:(Lorg/apache/hc/core5/function/Callback;)V
      17: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #66                 // Method getTotalStats:()Lorg/apache/hc/core5/pool/PoolStats;
       4: astore_1
       5: new           #67                 // class java/lang/StringBuilder
       8: dup
       9: invokespecial #68                 // Method java/lang/StringBuilder."<init>":()V
      12: astore_2
      13: aload_2
      14: ldc           #69                 // String [leased:
      16: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: pop
      20: aload_2
      21: aload_1
      22: invokevirtual #71                 // Method org/apache/hc/core5/pool/PoolStats.getLeased:()I
      25: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      28: pop
      29: aload_2
      30: ldc           #73                 // String ][available:
      32: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: pop
      36: aload_2
      37: aload_1
      38: invokevirtual #74                 // Method org/apache/hc/core5/pool/PoolStats.getAvailable:()I
      41: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      44: pop
      45: aload_2
      46: ldc           #75                 // String ][pending:
      48: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: pop
      52: aload_2
      53: aload_1
      54: invokevirtual #76                 // Method org/apache/hc/core5/pool/PoolStats.getPending:()I
      57: invokevirtual #72                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      60: pop
      61: aload_2
      62: ldc           #77                 // String ]
      64: invokevirtual #70                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: pop
      68: aload_2
      69: invokevirtual #78                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: areturn
}
