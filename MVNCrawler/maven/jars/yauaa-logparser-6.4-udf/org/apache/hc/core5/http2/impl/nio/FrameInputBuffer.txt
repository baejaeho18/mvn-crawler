Compiled from "FrameInputBuffer.java"
public final class org.apache.hc.core5.http2.impl.nio.FrameInputBuffer {
  private final org.apache.hc.core5.http2.impl.BasicH2TransportMetrics metrics;

  private final int maxFramePayloadSize;

  private final byte[] bytes;

  private final java.nio.ByteBuffer buffer;

  private org.apache.hc.core5.http2.impl.nio.FrameInputBuffer$State state;

  private int payloadLen;

  private int type;

  private int flags;

  private int streamId;

  org.apache.hc.core5.http2.impl.nio.FrameInputBuffer(org.apache.hc.core5.http2.impl.BasicH2TransportMetrics, int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String HTTP2 transport metrics
       7: invokestatic  #3                  // Method org/apache/hc/core5/util/Args.notNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: iload_3
      12: ldc           #4                  // String Maximum payload size
      14: invokestatic  #5                  // Method org/apache/hc/core5/util/Args.positive:(ILjava/lang/String;)I
      17: pop
      18: aload_0
      19: aload_1
      20: putfield      #6                  // Field metrics:Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;
      23: aload_0
      24: iload_3
      25: sipush        16384
      28: invokestatic  #7                  // Method java/lang/Math.max:(II)I
      31: putfield      #8                  // Field maxFramePayloadSize:I
      34: aload_0
      35: iload_2
      36: newarray       byte
      38: putfield      #9                  // Field bytes:[B
      41: aload_0
      42: aload_0
      43: getfield      #9                  // Field bytes:[B
      46: invokestatic  #10                 // Method java/nio/ByteBuffer.wrap:([B)Ljava/nio/ByteBuffer;
      49: putfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      52: aload_0
      53: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      56: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      59: pop
      60: aload_0
      61: getstatic     #13                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.HEAD_EXPECTED:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
      64: putfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
      67: return

  public org.apache.hc.core5.http2.impl.nio.FrameInputBuffer(org.apache.hc.core5.http2.impl.BasicH2TransportMetrics, int);
    Code:
       0: aload_0
       1: aload_1
       2: bipush        9
       4: iload_2
       5: iadd
       6: iload_2
       7: invokespecial #15                 // Method "<init>":(Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;II)V
      10: return

  public org.apache.hc.core5.http2.impl.nio.FrameInputBuffer(int);
    Code:
       0: aload_0
       1: new           #16                 // class org/apache/hc/core5/http2/impl/BasicH2TransportMetrics
       4: dup
       5: invokespecial #17                 // Method org/apache/hc/core5/http2/impl/BasicH2TransportMetrics."<init>":()V
       8: iload_1
       9: invokespecial #18                 // Method "<init>":(Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;I)V
      12: return

  public void put(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifeq          21
      10: aload_0
      11: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      14: invokevirtual #20                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
      17: pop
      18: goto          29
      21: aload_0
      22: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      25: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
      28: pop
      29: aload_0
      30: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      33: aload_1
      34: invokevirtual #22                 // Method java/nio/ByteBuffer.put:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;
      37: pop
      38: aload_0
      39: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      42: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
      45: pop
      46: return

  public org.apache.hc.core5.http2.frame.RawFrame read(java.nio.channels.ReadableByteChannel) throws java.io.IOException;
    Code:
       0: getstatic     #23                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$1.$SwitchMap$org$apache$hc$core5$http2$impl$nio$FrameInputBuffer$State:[I
       3: aload_0
       4: getfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
       7: invokevirtual #24                 // Method org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.ordinal:()I
      10: iaload
      11: lookupswitch  { // 2
                     1: 36
                     2: 129
               default: 309
          }
      36: aload_0
      37: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      40: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
      43: bipush        9
      45: if_icmplt     309
      48: aload_0
      49: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
      52: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
      55: istore_2
      56: aload_0
      57: iload_2
      58: bipush        8
      60: ishr
      61: putfield      #27                 // Field payloadLen:I
      64: aload_0
      65: getfield      #27                 // Field payloadLen:I
      68: aload_0
      69: getfield      #8                  // Field maxFramePayloadSize:I
      72: if_icmple     88
      75: new           #28                 // class org/apache/hc/core5/http2/H2ConnectionException
      78: dup
      79: getstatic     #29                 // Field org/apache/hc/core5/http2/H2Error.FRAME_SIZE_ERROR:Lorg/apache/hc/core5/http2/H2Error;
      82: ldc           #30                 // String Frame size exceeds maximum
      84: invokespecial #31                 // Method org/apache/hc/core5/http2/H2ConnectionException."<init>":(Lorg/apache/hc/core5/http2/H2Error;Ljava/lang/String;)V
      87: athrow
      88: aload_0
      89: iload_2
      90: sipush        255
      93: iand
      94: putfield      #32                 // Field type:I
      97: aload_0
      98: aload_0
      99: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     102: invokevirtual #33                 // Method java/nio/ByteBuffer.get:()B
     105: putfield      #34                 // Field flags:I
     108: aload_0
     109: aload_0
     110: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     113: invokevirtual #26                 // Method java/nio/ByteBuffer.getInt:()I
     116: invokestatic  #35                 // Method java/lang/Math.abs:(I)I
     119: putfield      #36                 // Field streamId:I
     122: aload_0
     123: getstatic     #37                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.PAYLOAD_EXPECTED:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     126: putfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     129: aload_0
     130: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     133: invokevirtual #25                 // Method java/nio/ByteBuffer.remaining:()I
     136: aload_0
     137: getfield      #27                 // Field payloadLen:I
     140: if_icmplt     309
     143: aload_0
     144: getfield      #34                 // Field flags:I
     147: getstatic     #38                 // Field org/apache/hc/core5/http2/frame/FrameFlag.PADDED:Lorg/apache/hc/core5/http2/frame/FrameFlag;
     150: invokevirtual #39                 // Method org/apache/hc/core5/http2/frame/FrameFlag.getValue:()I
     153: iand
     154: ifle          224
     157: aload_0
     158: getfield      #27                 // Field payloadLen:I
     161: ifne          177
     164: new           #28                 // class org/apache/hc/core5/http2/H2ConnectionException
     167: dup
     168: getstatic     #40                 // Field org/apache/hc/core5/http2/H2Error.PROTOCOL_ERROR:Lorg/apache/hc/core5/http2/H2Error;
     171: ldc           #41                 // String Inconsistent padding
     173: invokespecial #31                 // Method org/apache/hc/core5/http2/H2ConnectionException."<init>":(Lorg/apache/hc/core5/http2/H2Error;Ljava/lang/String;)V
     176: athrow
     177: aload_0
     178: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     181: invokevirtual #42                 // Method java/nio/ByteBuffer.mark:()Ljava/nio/Buffer;
     184: pop
     185: aload_0
     186: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     189: invokevirtual #33                 // Method java/nio/ByteBuffer.get:()B
     192: istore_2
     193: aload_0
     194: getfield      #27                 // Field payloadLen:I
     197: iload_2
     198: iconst_1
     199: iadd
     200: if_icmpge     216
     203: new           #28                 // class org/apache/hc/core5/http2/H2ConnectionException
     206: dup
     207: getstatic     #40                 // Field org/apache/hc/core5/http2/H2Error.PROTOCOL_ERROR:Lorg/apache/hc/core5/http2/H2Error;
     210: ldc           #41                 // String Inconsistent padding
     212: invokespecial #31                 // Method org/apache/hc/core5/http2/H2ConnectionException."<init>":(Lorg/apache/hc/core5/http2/H2Error;Ljava/lang/String;)V
     215: athrow
     216: aload_0
     217: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     220: invokevirtual #43                 // Method java/nio/ByteBuffer.reset:()Ljava/nio/Buffer;
     223: pop
     224: aload_0
     225: getfield      #27                 // Field payloadLen:I
     228: ifle          252
     231: aload_0
     232: getfield      #9                  // Field bytes:[B
     235: aload_0
     236: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     239: invokevirtual #44                 // Method java/nio/ByteBuffer.position:()I
     242: aload_0
     243: getfield      #27                 // Field payloadLen:I
     246: invokestatic  #45                 // Method java/nio/ByteBuffer.wrap:([BII)Ljava/nio/ByteBuffer;
     249: goto          253
     252: aconst_null
     253: astore_2
     254: aload_0
     255: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     258: aload_0
     259: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     262: invokevirtual #44                 // Method java/nio/ByteBuffer.position:()I
     265: aload_0
     266: getfield      #27                 // Field payloadLen:I
     269: iadd
     270: invokevirtual #46                 // Method java/nio/ByteBuffer.position:(I)Ljava/nio/Buffer;
     273: pop
     274: aload_0
     275: getstatic     #13                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.HEAD_EXPECTED:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     278: putfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     281: aload_0
     282: getfield      #6                  // Field metrics:Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;
     285: invokevirtual #47                 // Method org/apache/hc/core5/http2/impl/BasicH2TransportMetrics.incrementFramesTransferred:()V
     288: new           #48                 // class org/apache/hc/core5/http2/frame/RawFrame
     291: dup
     292: aload_0
     293: getfield      #32                 // Field type:I
     296: aload_0
     297: getfield      #34                 // Field flags:I
     300: aload_0
     301: getfield      #36                 // Field streamId:I
     304: aload_2
     305: invokespecial #49                 // Method org/apache/hc/core5/http2/frame/RawFrame."<init>":(IIILjava/nio/ByteBuffer;)V
     308: areturn
     309: aload_0
     310: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     313: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     316: ifeq          330
     319: aload_0
     320: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     323: invokevirtual #20                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
     326: pop
     327: goto          338
     330: aload_0
     331: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     334: invokevirtual #21                 // Method java/nio/ByteBuffer.clear:()Ljava/nio/Buffer;
     337: pop
     338: aload_1
     339: aload_0
     340: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     343: invokeinterface #50,  2           // InterfaceMethod java/nio/channels/ReadableByteChannel.read:(Ljava/nio/ByteBuffer;)I
     348: istore_2
     349: aload_0
     350: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     353: invokevirtual #12                 // Method java/nio/ByteBuffer.flip:()Ljava/nio/Buffer;
     356: pop
     357: iload_2
     358: ifle          370
     361: aload_0
     362: getfield      #6                  // Field metrics:Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;
     365: iload_2
     366: i2l
     367: invokevirtual #51                 // Method org/apache/hc/core5/http2/impl/BasicH2TransportMetrics.incrementBytesTransferred:(J)V
     370: iload_2
     371: ifne          377
     374: goto          422
     377: iload_2
     378: ifge          419
     381: aload_0
     382: getfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     385: getstatic     #13                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.HEAD_EXPECTED:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
     388: if_acmpne     401
     391: aload_0
     392: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
     395: invokevirtual #19                 // Method java/nio/ByteBuffer.hasRemaining:()Z
     398: ifeq          411
     401: new           #52                 // class org/apache/hc/core5/http2/H2CorruptFrameException
     404: dup
     405: ldc           #53                 // String Corrupt or incomplete HTTP2 frame
     407: invokespecial #54                 // Method org/apache/hc/core5/http2/H2CorruptFrameException."<init>":(Ljava/lang/String;)V
     410: athrow
     411: new           #55                 // class org/apache/hc/core5/http/ConnectionClosedException
     414: dup
     415: invokespecial #56                 // Method org/apache/hc/core5/http/ConnectionClosedException."<init>":()V
     418: athrow
     419: goto          0
     422: aconst_null
     423: areturn

  public void reset();
    Code:
       0: aload_0
       1: getfield      #11                 // Field buffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #20                 // Method java/nio/ByteBuffer.compact:()Ljava/nio/ByteBuffer;
       7: pop
       8: aload_0
       9: getstatic     #13                 // Field org/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State.HEAD_EXPECTED:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
      12: putfield      #14                 // Field state:Lorg/apache/hc/core5/http2/impl/nio/FrameInputBuffer$State;
      15: return

  public org.apache.hc.core5.http2.H2TransportMetrics getMetrics();
    Code:
       0: aload_0
       1: getfield      #6                  // Field metrics:Lorg/apache/hc/core5/http2/impl/BasicH2TransportMetrics;
       4: areturn
}
