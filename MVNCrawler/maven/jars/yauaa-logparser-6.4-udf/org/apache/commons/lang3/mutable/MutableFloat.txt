Compiled from "MutableFloat.java"
public class org.apache.commons.lang3.mutable.MutableFloat extends java.lang.Number implements java.lang.Comparable<org.apache.commons.lang3.mutable.MutableFloat>, org.apache.commons.lang3.mutable.Mutable<java.lang.Number> {
  private static final long serialVersionUID;

  private float value;

  public org.apache.commons.lang3.mutable.MutableFloat();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: return

  public org.apache.commons.lang3.mutable.MutableFloat(float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: fload_1
       6: putfield      #2                  // Field value:F
       9: return

  public org.apache.commons.lang3.mutable.MutableFloat(java.lang.Number);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
       9: putfield      #2                  // Field value:F
      12: return

  public org.apache.commons.lang3.mutable.MutableFloat(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Number."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #4                  // Method java/lang/Float.parseFloat:(Ljava/lang/String;)F
       9: putfield      #2                  // Field value:F
      12: return

  public java.lang.Float getValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #5                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public void setValue(float);
    Code:
       0: aload_0
       1: fload_1
       2: putfield      #2                  // Field value:F
       5: return

  public void setValue(java.lang.Number);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
       5: putfield      #2                  // Field value:F
       8: return

  public boolean isNaN();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #6                  // Method java/lang/Float.isNaN:(F)Z
       7: ireturn

  public boolean isInfinite();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #7                  // Method java/lang/Float.isInfinite:(F)Z
       7: ireturn

  public void increment();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fconst_1
       6: fadd
       7: putfield      #2                  // Field value:F
      10: return

  public float getAndIncrement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fstore_1
       5: aload_0
       6: dup
       7: getfield      #2                  // Field value:F
      10: fconst_1
      11: fadd
      12: putfield      #2                  // Field value:F
      15: fload_1
      16: freturn

  public float incrementAndGet();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fconst_1
       6: fadd
       7: putfield      #2                  // Field value:F
      10: aload_0
      11: getfield      #2                  // Field value:F
      14: freturn

  public void decrement();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fconst_1
       6: fsub
       7: putfield      #2                  // Field value:F
      10: return

  public float getAndDecrement();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fstore_1
       5: aload_0
       6: dup
       7: getfield      #2                  // Field value:F
      10: fconst_1
      11: fsub
      12: putfield      #2                  // Field value:F
      15: fload_1
      16: freturn

  public float decrementAndGet();
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fconst_1
       6: fsub
       7: putfield      #2                  // Field value:F
      10: aload_0
      11: getfield      #2                  // Field value:F
      14: freturn

  public void add(float);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fload_1
       6: fadd
       7: putfield      #2                  // Field value:F
      10: return

  public void add(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
       9: fadd
      10: putfield      #2                  // Field value:F
      13: return

  public void subtract(float);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fload_1
       6: fsub
       7: putfield      #2                  // Field value:F
      10: return

  public void subtract(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
       9: fsub
      10: putfield      #2                  // Field value:F
      13: return

  public float addAndGet(float);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: fload_1
       6: fadd
       7: putfield      #2                  // Field value:F
      10: aload_0
      11: getfield      #2                  // Field value:F
      14: freturn

  public float addAndGet(java.lang.Number);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field value:F
       5: aload_1
       6: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
       9: fadd
      10: putfield      #2                  // Field value:F
      13: aload_0
      14: getfield      #2                  // Field value:F
      17: freturn

  public float getAndAdd(float);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fstore_2
       5: aload_0
       6: dup
       7: getfield      #2                  // Field value:F
      10: fload_1
      11: fadd
      12: putfield      #2                  // Field value:F
      15: fload_2
      16: freturn

  public float getAndAdd(java.lang.Number);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: fstore_2
       5: aload_0
       6: dup
       7: getfield      #2                  // Field value:F
      10: aload_1
      11: invokevirtual #3                  // Method java/lang/Number.floatValue:()F
      14: fadd
      15: putfield      #2                  // Field value:F
      18: fload_2
      19: freturn

  public int intValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: f2i
       5: ireturn

  public long longValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: f2l
       5: lreturn

  public float floatValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: freturn

  public double doubleValue();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: f2d
       5: dreturn

  public java.lang.Float toFloat();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method floatValue:()F
       4: invokestatic  #5                  // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
       7: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #9                  // class org/apache/commons/lang3/mutable/MutableFloat
       4: ifeq          31
       7: aload_1
       8: checkcast     #9                  // class org/apache/commons/lang3/mutable/MutableFloat
      11: getfield      #2                  // Field value:F
      14: invokestatic  #10                 // Method java/lang/Float.floatToIntBits:(F)I
      17: aload_0
      18: getfield      #2                  // Field value:F
      21: invokestatic  #10                 // Method java/lang/Float.floatToIntBits:(F)I
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #10                 // Method java/lang/Float.floatToIntBits:(F)I
       7: ireturn

  public int compareTo(org.apache.commons.lang3.mutable.MutableFloat);
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: aload_1
       5: getfield      #2                  // Field value:F
       8: invokestatic  #11                 // Method java/lang/Float.compare:(FF)I
      11: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field value:F
       4: invokestatic  #12                 // Method java/lang/String.valueOf:(F)Ljava/lang/String;
       7: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class org/apache/commons/lang3/mutable/MutableFloat
       5: invokevirtual #13                 // Method compareTo:(Lorg/apache/commons/lang3/mutable/MutableFloat;)I
       8: ireturn

  public void setValue(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #14                 // class java/lang/Number
       5: invokevirtual #15                 // Method setValue:(Ljava/lang/Number;)V
       8: return

  public java.lang.Object getValue();
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getValue:()Ljava/lang/Float;
       4: areturn
}
