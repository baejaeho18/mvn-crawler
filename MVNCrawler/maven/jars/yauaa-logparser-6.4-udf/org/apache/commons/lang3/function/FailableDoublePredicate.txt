Compiled from "FailableDoublePredicate.java"
public interface org.apache.commons.lang3.function.FailableDoublePredicate<E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableDoublePredicate FALSE;

  public static final org.apache.commons.lang3.function.FailableDoublePredicate TRUE;

  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoublePredicate<E> falsePredicate();
    Code:
       0: getstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailableDoublePredicate;
       3: areturn

  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoublePredicate<E> truePredicate();
    Code:
       0: getstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableDoublePredicate;
       3: areturn

  public default org.apache.commons.lang3.function.FailableDoublePredicate<E> and(org.apache.commons.lang3.function.FailableDoublePredicate<E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/apache/commons/lang3/function/FailableDoublePredicate;Lorg/apache/commons/lang3/function/FailableDoublePredicate;)Lorg/apache/commons/lang3/function/FailableDoublePredicate;
      12: areturn

  public default org.apache.commons.lang3.function.FailableDoublePredicate<E> negate();
    Code:
       0: aload_0
       1: invokedynamic #5,  0              // InvokeDynamic #1:test:(Lorg/apache/commons/lang3/function/FailableDoublePredicate;)Lorg/apache/commons/lang3/function/FailableDoublePredicate;
       6: areturn

  public default org.apache.commons.lang3.function.FailableDoublePredicate<E> or(org.apache.commons.lang3.function.FailableDoublePredicate<E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #6,  0              // InvokeDynamic #2:test:(Lorg/apache/commons/lang3/function/FailableDoublePredicate;Lorg/apache/commons/lang3/function/FailableDoublePredicate;)Lorg/apache/commons/lang3/function/FailableDoublePredicate;
      12: areturn

  public abstract boolean test(double) throws E;

  private boolean lambda$or$4(org.apache.commons.lang3.function.FailableDoublePredicate, double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: dload_2
       2: invokeinterface #7,  3            // InterfaceMethod test:(D)Z
       7: ifne          20
      10: aload_1
      11: dload_2
      12: invokeinterface #7,  3            // InterfaceMethod test:(D)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private boolean lambda$negate$3(double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: dload_1
       2: invokeinterface #7,  3            // InterfaceMethod test:(D)Z
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  private boolean lambda$and$2(org.apache.commons.lang3.function.FailableDoublePredicate, double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: dload_2
       2: invokeinterface #7,  3            // InterfaceMethod test:(D)Z
       7: ifeq          24
      10: aload_1
      11: dload_2
      12: invokeinterface #7,  3            // InterfaceMethod test:(D)Z
      17: ifeq          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  private static boolean lambda$static$1(double) throws java.lang.Throwable;
    Code:
       0: iconst_1
       1: ireturn

  private static boolean lambda$static$0(double) throws java.lang.Throwable;
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: invokedynamic #8,  0              // InvokeDynamic #3:test:()Lorg/apache/commons/lang3/function/FailableDoublePredicate;
       5: putstatic     #1                  // Field FALSE:Lorg/apache/commons/lang3/function/FailableDoublePredicate;
       8: invokedynamic #9,  0              // InvokeDynamic #4:test:()Lorg/apache/commons/lang3/function/FailableDoublePredicate;
      13: putstatic     #2                  // Field TRUE:Lorg/apache/commons/lang3/function/FailableDoublePredicate;
      16: return
}
