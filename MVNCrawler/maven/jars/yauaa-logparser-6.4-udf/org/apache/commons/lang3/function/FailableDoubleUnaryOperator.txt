Compiled from "FailableDoubleUnaryOperator.java"
public interface org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E extends java.lang.Throwable> {
  public static final org.apache.commons.lang3.function.FailableDoubleUnaryOperator NOP;

  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> identity();
    Code:
       0: invokedynamic #1,  0              // InvokeDynamic #0:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
       5: areturn

  public static <E extends java.lang.Throwable> org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> nop();
    Code:
       0: getstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
       3: areturn

  public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> andThen(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #4,  0              // InvokeDynamic #1:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
      12: areturn

  public abstract double applyAsDouble(double) throws E;

  public default org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E> compose(org.apache.commons.lang3.function.FailableDoubleUnaryOperator<E>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_0
       6: aload_1
       7: invokedynamic #5,  0              // InvokeDynamic #2:applyAsDouble:(Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;)Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
      12: areturn

  private double lambda$compose$3(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: aload_1
       2: dload_2
       3: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D
       8: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D
      13: dreturn

  private double lambda$andThen$2(org.apache.commons.lang3.function.FailableDoubleUnaryOperator, double) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: aload_0
       2: dload_2
       3: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D
       8: invokeinterface #6,  3            // InterfaceMethod applyAsDouble:(D)D
      13: dreturn

  private static double lambda$identity$1(double) throws java.lang.Throwable;
    Code:
       0: dload_0
       1: dreturn

  private static double lambda$static$0(double) throws java.lang.Throwable;
    Code:
       0: dconst_0
       1: dreturn

  static {};
    Code:
       0: invokedynamic #7,  0              // InvokeDynamic #3:applyAsDouble:()Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
       5: putstatic     #2                  // Field NOP:Lorg/apache/commons/lang3/function/FailableDoubleUnaryOperator;
       8: return
}
