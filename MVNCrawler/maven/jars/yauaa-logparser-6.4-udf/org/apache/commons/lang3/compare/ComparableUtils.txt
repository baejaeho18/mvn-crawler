Compiled from "ComparableUtils.java"
public class org.apache.commons.lang3.compare.ComparableUtils {
  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> between(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #1,  0              // InvokeDynamic #0:test:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       7: areturn

  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> betweenExclusive(A, A);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2,  0              // InvokeDynamic #1:test:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       7: areturn

  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> ge(A);
    Code:
       0: aload_0
       1: invokedynamic #3,  0              // InvokeDynamic #2:test:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       6: areturn

  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> gt(A);
    Code:
       0: aload_0
       1: invokedynamic #4,  0              // InvokeDynamic #3:test:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       6: areturn

  public static <A extends java.lang.Comparable<A>> org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder<A> is(A);
    Code:
       0: new           #5                  // class org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder
       3: dup
       4: aload_0
       5: aconst_null
       6: invokespecial #6                  // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder."<init>":(Ljava/lang/Comparable;Lorg/apache/commons/lang3/compare/ComparableUtils$1;)V
       9: areturn

  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> le(A);
    Code:
       0: aload_0
       1: invokedynamic #7,  0              // InvokeDynamic #4:test:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       6: areturn

  public static <A extends java.lang.Comparable<A>> java.util.function.Predicate<A> lt(A);
    Code:
       0: aload_0
       1: invokedynamic #8,  0              // InvokeDynamic #5:test:(Ljava/lang/Comparable;)Ljava/util/function/Predicate;
       6: areturn

  private org.apache.commons.lang3.compare.ComparableUtils();
    Code:
       0: aload_0
       1: invokespecial #9                  // Method java/lang/Object."<init>":()V
       4: return

  private static boolean lambda$lt$5(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: invokevirtual #11                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.lessThan:(Ljava/lang/Comparable;)Z
       8: ireturn

  private static boolean lambda$le$4(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: invokevirtual #12                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.lessThanOrEqualTo:(Ljava/lang/Comparable;)Z
       8: ireturn

  private static boolean lambda$gt$3(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: invokevirtual #13                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.greaterThan:(Ljava/lang/Comparable;)Z
       8: ireturn

  private static boolean lambda$ge$2(java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_1
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: invokevirtual #14                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.greaterThanOrEqualTo:(Ljava/lang/Comparable;)Z
       8: ireturn

  private static boolean lambda$betweenExclusive$1(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_2
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: aload_1
       6: invokevirtual #15                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.betweenExclusive:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
       9: ireturn

  private static boolean lambda$between$0(java.lang.Comparable, java.lang.Comparable, java.lang.Comparable);
    Code:
       0: aload_2
       1: invokestatic  #10                 // Method is:(Ljava/lang/Comparable;)Lorg/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder;
       4: aload_0
       5: aload_1
       6: invokevirtual #16                 // Method org/apache/commons/lang3/compare/ComparableUtils$ComparableCheckBuilder.between:(Ljava/lang/Comparable;Ljava/lang/Comparable;)Z
       9: ireturn
}
