Compiled from "AbstractHashedMap.java"
public class org.apache.commons.collections4.map.AbstractHashedMap<K, V> extends java.util.AbstractMap<K, V> implements org.apache.commons.collections4.IterableMap<K, V> {
  protected static final java.lang.String NO_NEXT_ENTRY;

  protected static final java.lang.String NO_PREVIOUS_ENTRY;

  protected static final java.lang.String REMOVE_INVALID;

  protected static final java.lang.String GETKEY_INVALID;

  protected static final java.lang.String GETVALUE_INVALID;

  protected static final java.lang.String SETVALUE_INVALID;

  protected static final int DEFAULT_CAPACITY;

  protected static final int DEFAULT_THRESHOLD;

  protected static final float DEFAULT_LOAD_FACTOR;

  protected static final int MAXIMUM_CAPACITY;

  protected static final java.lang.Object NULL;

  transient float loadFactor;

  transient int size;

  transient org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>[] data;

  transient int threshold;

  transient int modCount;

  transient org.apache.commons.collections4.map.AbstractHashedMap$EntrySet<K, V> entrySet;

  transient org.apache.commons.collections4.map.AbstractHashedMap$KeySet<K> keySet;

  transient org.apache.commons.collections4.map.AbstractHashedMap$Values<V> values;

  protected org.apache.commons.collections4.map.AbstractHashedMap();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: return

  protected org.apache.commons.collections4.map.AbstractHashedMap(int, float, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: aload_0
       5: fload_2
       6: putfield      #2                  // Field loadFactor:F
       9: aload_0
      10: iload_1
      11: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      14: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      17: aload_0
      18: iload_3
      19: putfield      #5                  // Field threshold:I
      22: aload_0
      23: invokevirtual #6                  // Method init:()V
      26: return

  protected org.apache.commons.collections4.map.AbstractHashedMap(int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #8                  // float 0.75f
       4: invokespecial #9                  // Method "<init>":(IF)V
       7: return

  protected org.apache.commons.collections4.map.AbstractHashedMap(int, float);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractMap."<init>":()V
       4: iload_1
       5: ifge          18
       8: new           #10                 // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #11                 // String Initial capacity must be a non negative number
      14: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: fload_2
      19: fconst_0
      20: fcmpg
      21: ifle          31
      24: fload_2
      25: invokestatic  #13                 // Method java/lang/Float.isNaN:(F)Z
      28: ifeq          41
      31: new           #10                 // class java/lang/IllegalArgumentException
      34: dup
      35: ldc           #14                 // String Load factor must be greater than 0
      37: invokespecial #12                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: aload_0
      42: fload_2
      43: putfield      #2                  // Field loadFactor:F
      46: aload_0
      47: iload_1
      48: invokevirtual #15                 // Method calculateNewCapacity:(I)I
      51: istore_1
      52: aload_0
      53: aload_0
      54: iload_1
      55: fload_2
      56: invokevirtual #16                 // Method calculateThreshold:(IF)I
      59: putfield      #5                  // Field threshold:I
      62: aload_0
      63: iload_1
      64: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      67: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      70: aload_0
      71: invokevirtual #6                  // Method init:()V
      74: return

  protected org.apache.commons.collections4.map.AbstractHashedMap(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: iconst_2
       2: aload_1
       3: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
       8: imul
       9: bipush        16
      11: invokestatic  #18                 // Method java/lang/Math.max:(II)I
      14: ldc           #8                  // float 0.75f
      16: invokespecial #9                  // Method "<init>":(IF)V
      19: aload_0
      20: aload_1
      21: invokespecial #19                 // Method _putAll:(Ljava/util/Map;)V
      24: return

  protected void init();
    Code:
       0: return

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method hash:(Ljava/lang/Object;)I
      11: istore_2
      12: aload_0
      13: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      16: aload_0
      17: iload_2
      18: aload_0
      19: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      22: arraylength
      23: invokevirtual #22                 // Method hashIndex:(II)I
      26: aaload
      27: astore_3
      28: aload_3
      29: ifnull        65
      32: aload_3
      33: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      36: iload_2
      37: if_icmpne     57
      40: aload_0
      41: aload_1
      42: aload_3
      43: getfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      46: invokevirtual #25                 // Method isEqualKey:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          57
      52: aload_3
      53: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
      56: areturn
      57: aload_3
      58: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      61: astore_3
      62: goto          28
      65: aconst_null
      66: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #28                 // Field size:I
       4: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #28                 // Field size:I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method hash:(Ljava/lang/Object;)I
      11: istore_2
      12: aload_0
      13: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      16: aload_0
      17: iload_2
      18: aload_0
      19: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      22: arraylength
      23: invokevirtual #22                 // Method hashIndex:(II)I
      26: aaload
      27: astore_3
      28: aload_3
      29: ifnull        62
      32: aload_3
      33: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      36: iload_2
      37: if_icmpne     54
      40: aload_0
      41: aload_1
      42: aload_3
      43: getfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      46: invokevirtual #25                 // Method isEqualKey:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: aload_3
      55: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      58: astore_3
      59: goto          28
      62: iconst_0
      63: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     65
       4: aload_0
       5: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     62
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload         5
      29: astore        6
      31: aload         6
      33: ifnull        56
      36: aload         6
      38: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
      41: ifnonnull     46
      44: iconst_1
      45: ireturn
      46: aload         6
      48: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      51: astore        6
      53: goto          31
      56: iinc          4, 1
      59: goto          15
      62: goto          128
      65: aload_0
      66: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      69: astore_2
      70: aload_2
      71: arraylength
      72: istore_3
      73: iconst_0
      74: istore        4
      76: iload         4
      78: iload_3
      79: if_icmpge     128
      82: aload_2
      83: iload         4
      85: aaload
      86: astore        5
      88: aload         5
      90: astore        6
      92: aload         6
      94: ifnull        122
      97: aload_0
      98: aload_1
      99: aload         6
     101: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
     104: invokevirtual #29                 // Method isEqualValue:(Ljava/lang/Object;Ljava/lang/Object;)Z
     107: ifeq          112
     110: iconst_1
     111: ireturn
     112: aload         6
     114: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
     117: astore        6
     119: goto          92
     122: iinc          4, 1
     125: goto          76
     128: iconst_0
     129: ireturn

  public V put(K, V);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: invokevirtual #21                 // Method hash:(Ljava/lang/Object;)I
      11: istore        4
      13: aload_0
      14: iload         4
      16: aload_0
      17: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      20: arraylength
      21: invokevirtual #22                 // Method hashIndex:(II)I
      24: istore        5
      26: aload_0
      27: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      30: iload         5
      32: aaload
      33: astore        6
      35: aload         6
      37: ifnull        90
      40: aload         6
      42: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      45: iload         4
      47: if_icmpne     80
      50: aload_0
      51: aload_3
      52: aload         6
      54: getfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      57: invokevirtual #25                 // Method isEqualKey:(Ljava/lang/Object;Ljava/lang/Object;)Z
      60: ifeq          80
      63: aload         6
      65: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
      68: astore        7
      70: aload_0
      71: aload         6
      73: aload_2
      74: invokevirtual #30                 // Method updateEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;Ljava/lang/Object;)V
      77: aload         7
      79: areturn
      80: aload         6
      82: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      85: astore        6
      87: goto          35
      90: aload_0
      91: iload         5
      93: iload         4
      95: aload_1
      96: aload_2
      97: invokevirtual #31                 // Method addMapping:(IILjava/lang/Object;Ljava/lang/Object;)V
     100: aconst_null
     101: areturn

  public void putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method _putAll:(Ljava/util/Map;)V
       5: return

  private void _putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
       6: istore_2
       7: iload_2
       8: ifne          12
      11: return
      12: aload_0
      13: getfield      #28                 // Field size:I
      16: iload_2
      17: iadd
      18: i2f
      19: aload_0
      20: getfield      #2                  // Field loadFactor:F
      23: fdiv
      24: fconst_1
      25: fadd
      26: f2i
      27: istore_3
      28: aload_0
      29: aload_0
      30: iload_3
      31: invokevirtual #15                 // Method calculateNewCapacity:(I)I
      34: invokevirtual #32                 // Method ensureCapacity:(I)V
      37: aload_1
      38: invokeinterface #33,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      43: invokeinterface #34,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      48: astore        4
      50: aload         4
      52: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      57: ifeq          94
      60: aload         4
      62: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      67: checkcast     #37                 // class java/util/Map$Entry
      70: astore        5
      72: aload_0
      73: aload         5
      75: invokeinterface #38,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      80: aload         5
      82: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      87: invokevirtual #40                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      90: pop
      91: goto          50
      94: return

  public V remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method hash:(Ljava/lang/Object;)I
      11: istore_2
      12: aload_0
      13: iload_2
      14: aload_0
      15: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      18: arraylength
      19: invokevirtual #22                 // Method hashIndex:(II)I
      22: istore_3
      23: aload_0
      24: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      27: iload_3
      28: aaload
      29: astore        4
      31: aconst_null
      32: astore        5
      34: aload         4
      36: ifnull        94
      39: aload         4
      41: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      44: iload_2
      45: if_icmpne     80
      48: aload_0
      49: aload_1
      50: aload         4
      52: getfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      55: invokevirtual #25                 // Method isEqualKey:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifeq          80
      61: aload         4
      63: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
      66: astore        6
      68: aload_0
      69: aload         4
      71: iload_3
      72: aload         5
      74: invokevirtual #41                 // Method removeMapping:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;)V
      77: aload         6
      79: areturn
      80: aload         4
      82: astore        5
      84: aload         4
      86: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      89: astore        4
      91: goto          34
      94: aconst_null
      95: areturn

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #42                 // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #42                 // Field modCount:I
      10: aload_0
      11: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      14: astore_1
      15: aload_1
      16: arraylength
      17: iconst_1
      18: isub
      19: istore_2
      20: iload_2
      21: iflt          34
      24: aload_1
      25: iload_2
      26: aconst_null
      27: aastore
      28: iinc          2, -1
      31: goto          20
      34: aload_0
      35: iconst_0
      36: putfield      #28                 // Field size:I
      39: return

  protected java.lang.Object convertKey(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     10
       4: getstatic     #43                 // Field NULL:Ljava/lang/Object;
       7: goto          11
      10: aload_1
      11: areturn

  protected int hash(java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method java/lang/Object.hashCode:()I
       4: istore_2
       5: iload_2
       6: iload_2
       7: bipush        9
       9: ishl
      10: iconst_m1
      11: ixor
      12: iadd
      13: istore_2
      14: iload_2
      15: iload_2
      16: bipush        14
      18: iushr
      19: ixor
      20: istore_2
      21: iload_2
      22: iload_2
      23: iconst_4
      24: ishl
      25: iadd
      26: istore_2
      27: iload_2
      28: iload_2
      29: bipush        10
      31: iushr
      32: ixor
      33: istore_2
      34: iload_2
      35: ireturn

  protected boolean isEqualKey(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     13
       5: aload_1
       6: aload_2
       7: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  protected boolean isEqualValue(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: aload_2
       2: if_acmpeq     13
       5: aload_1
       6: aload_2
       7: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifeq          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ireturn

  protected int hashIndex(int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iconst_1
       3: isub
       4: iand
       5: ireturn

  protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V> getEntry(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokevirtual #21                 // Method hash:(Ljava/lang/Object;)I
      11: istore_2
      12: aload_0
      13: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      16: aload_0
      17: iload_2
      18: aload_0
      19: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      22: arraylength
      23: invokevirtual #22                 // Method hashIndex:(II)I
      26: aaload
      27: astore_3
      28: aload_3
      29: ifnull        62
      32: aload_3
      33: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      36: iload_2
      37: if_icmpne     54
      40: aload_0
      41: aload_1
      42: aload_3
      43: getfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      46: invokevirtual #25                 // Method isEqualKey:(Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: aload_3
      53: areturn
      54: aload_3
      55: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      58: astore_3
      59: goto          28
      62: aconst_null
      63: areturn

  protected void updateEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, V);
    Code:
       0: aload_1
       1: aload_2
       2: invokevirtual #46                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.setValue:(Ljava/lang/Object;)Ljava/lang/Object;
       5: pop
       6: return

  protected void reuseEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int, int, K, V);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       5: iload_2
       6: aaload
       7: putfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      10: aload_1
      11: iload_3
      12: putfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
      15: aload_1
      16: aload         4
      18: putfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      21: aload_1
      22: aload         5
      24: putfield      #47                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.value:Ljava/lang/Object;
      27: return

  protected void addMapping(int, int, K, V);
    Code:
       0: aload_0
       1: dup
       2: getfield      #42                 // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #42                 // Field modCount:I
      10: aload_0
      11: aload_0
      12: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      15: iload_1
      16: aaload
      17: iload_2
      18: aload_3
      19: aload         4
      21: invokevirtual #48                 // Method createEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      24: astore        5
      26: aload_0
      27: aload         5
      29: iload_1
      30: invokevirtual #49                 // Method addEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;I)V
      33: aload_0
      34: dup
      35: getfield      #28                 // Field size:I
      38: iconst_1
      39: iadd
      40: putfield      #28                 // Field size:I
      43: aload_0
      44: invokevirtual #50                 // Method checkCapacity:()V
      47: return

  protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V> createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int, K, V);
    Code:
       0: new           #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
       3: dup
       4: aload_1
       5: iload_2
       6: aload_0
       7: aload_3
       8: invokevirtual #20                 // Method convertKey:(Ljava/lang/Object;)Ljava/lang/Object;
      11: aload         4
      13: invokespecial #51                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)V
      16: areturn

  protected void addEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       4: iload_2
       5: aload_1
       6: aastore
       7: return

  protected void removeMapping(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_0
       1: dup
       2: getfield      #42                 // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #42                 // Field modCount:I
      10: aload_0
      11: aload_1
      12: iload_2
      13: aload_3
      14: invokevirtual #52                 // Method removeEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;)V
      17: aload_0
      18: dup
      19: getfield      #28                 // Field size:I
      22: iconst_1
      23: isub
      24: putfield      #28                 // Field size:I
      27: aload_0
      28: aload_1
      29: invokevirtual #53                 // Method destroyEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;)V
      32: return

  protected void removeEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int, org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_3
       1: ifnonnull     17
       4: aload_0
       5: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       8: iload_2
       9: aload_1
      10: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      13: aastore
      14: goto          25
      17: aload_3
      18: aload_1
      19: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      22: putfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      25: return

  protected void destroyEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_1
       1: aconst_null
       2: putfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       5: aload_1
       6: aconst_null
       7: putfield      #24                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.key:Ljava/lang/Object;
      10: aload_1
      11: aconst_null
      12: putfield      #47                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.value:Ljava/lang/Object;
      15: return

  protected void checkCapacity();
    Code:
       0: aload_0
       1: getfield      #28                 // Field size:I
       4: aload_0
       5: getfield      #5                  // Field threshold:I
       8: if_icmplt     30
      11: aload_0
      12: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      15: arraylength
      16: iconst_2
      17: imul
      18: istore_1
      19: iload_1
      20: ldc           #54                 // int 1073741824
      22: if_icmpgt     30
      25: aload_0
      26: iload_1
      27: invokevirtual #32                 // Method ensureCapacity:(I)V
      30: return

  protected void ensureCapacity(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       4: arraylength
       5: istore_2
       6: iload_1
       7: iload_2
       8: if_icmpgt     12
      11: return
      12: aload_0
      13: getfield      #28                 // Field size:I
      16: ifne          43
      19: aload_0
      20: aload_0
      21: iload_1
      22: aload_0
      23: getfield      #2                  // Field loadFactor:F
      26: invokevirtual #16                 // Method calculateThreshold:(IF)I
      29: putfield      #5                  // Field threshold:I
      32: aload_0
      33: iload_1
      34: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      37: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      40: goto          160
      43: aload_0
      44: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      47: astore_3
      48: iload_1
      49: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      52: astore        4
      54: aload_0
      55: dup
      56: getfield      #42                 // Field modCount:I
      59: iconst_1
      60: iadd
      61: putfield      #42                 // Field modCount:I
      64: iload_2
      65: iconst_1
      66: isub
      67: istore        5
      69: iload         5
      71: iflt          141
      74: aload_3
      75: iload         5
      77: aaload
      78: astore        6
      80: aload         6
      82: ifnull        135
      85: aload_3
      86: iload         5
      88: aconst_null
      89: aastore
      90: aload         6
      92: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      95: astore        7
      97: aload_0
      98: aload         6
     100: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
     103: iload_1
     104: invokevirtual #22                 // Method hashIndex:(II)I
     107: istore        8
     109: aload         6
     111: aload         4
     113: iload         8
     115: aaload
     116: putfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
     119: aload         4
     121: iload         8
     123: aload         6
     125: aastore
     126: aload         7
     128: astore        6
     130: aload         6
     132: ifnonnull     90
     135: iinc          5, -1
     138: goto          69
     141: aload_0
     142: aload_0
     143: iload_1
     144: aload_0
     145: getfield      #2                  // Field loadFactor:F
     148: invokevirtual #16                 // Method calculateThreshold:(IF)I
     151: putfield      #5                  // Field threshold:I
     154: aload_0
     155: aload         4
     157: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
     160: return

  protected int calculateNewCapacity(int);
    Code:
       0: iconst_1
       1: istore_2
       2: iload_1
       3: ldc           #54                 // int 1073741824
       5: if_icmple     14
       8: ldc           #54                 // int 1073741824
      10: istore_2
      11: goto          35
      14: iload_2
      15: iload_1
      16: if_icmpge     26
      19: iload_2
      20: iconst_1
      21: ishl
      22: istore_2
      23: goto          14
      26: iload_2
      27: ldc           #54                 // int 1073741824
      29: if_icmple     35
      32: ldc           #54                 // int 1073741824
      34: istore_2
      35: iload_2
      36: ireturn

  protected int calculateThreshold(int, float);
    Code:
       0: iload_1
       1: i2f
       2: fload_2
       3: fmul
       4: f2i
       5: ireturn

  protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V> entryNext(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_1
       1: getfield      #27                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       4: areturn

  protected int entryHashCode(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_1
       1: getfield      #23                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.hashCode:I
       4: ireturn

  protected K entryKey(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_1
       1: invokevirtual #55                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getKey:()Ljava/lang/Object;
       4: areturn

  protected V entryValue(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>);
    Code:
       0: aload_1
       1: invokevirtual #26                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.getValue:()Ljava/lang/Object;
       4: areturn

  public org.apache.commons.collections4.MapIterator<K, V> mapIterator();
    Code:
       0: aload_0
       1: getfield      #28                 // Field size:I
       4: ifne          11
       7: invokestatic  #56                 // Method org/apache/commons/collections4/iterators/EmptyMapIterator.emptyMapIterator:()Lorg/apache/commons/collections4/MapIterator;
      10: areturn
      11: new           #57                 // class org/apache/commons/collections4/map/AbstractHashedMap$HashMapIterator
      14: dup
      15: aload_0
      16: invokespecial #58                 // Method org/apache/commons/collections4/map/AbstractHashedMap$HashMapIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      19: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #59                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #60                 // class org/apache/commons/collections4/map/AbstractHashedMap$EntrySet
      11: dup
      12: aload_0
      13: invokespecial #61                 // Method org/apache/commons/collections4/map/AbstractHashedMap$EntrySet."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #59                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
      19: aload_0
      20: getfield      #59                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
      23: areturn

  protected java.util.Iterator<java.util.Map$Entry<K, V>> createEntrySetIterator();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method size:()I
       4: ifne          11
       7: invokestatic  #63                 // Method org/apache/commons/collections4/iterators/EmptyIterator.emptyIterator:()Ljava/util/Iterator;
      10: areturn
      11: new           #64                 // class org/apache/commons/collections4/map/AbstractHashedMap$EntrySetIterator
      14: dup
      15: aload_0
      16: invokespecial #65                 // Method org/apache/commons/collections4/map/AbstractHashedMap$EntrySetIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      19: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #66                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #67                 // class org/apache/commons/collections4/map/AbstractHashedMap$KeySet
      11: dup
      12: aload_0
      13: invokespecial #68                 // Method org/apache/commons/collections4/map/AbstractHashedMap$KeySet."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #66                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
      19: aload_0
      20: getfield      #66                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
      23: areturn

  protected java.util.Iterator<K> createKeySetIterator();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method size:()I
       4: ifne          11
       7: invokestatic  #63                 // Method org/apache/commons/collections4/iterators/EmptyIterator.emptyIterator:()Ljava/util/Iterator;
      10: areturn
      11: new           #69                 // class org/apache/commons/collections4/map/AbstractHashedMap$KeySetIterator
      14: dup
      15: aload_0
      16: invokespecial #70                 // Method org/apache/commons/collections4/map/AbstractHashedMap$KeySetIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      19: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #71                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
       4: ifnonnull     19
       7: aload_0
       8: new           #72                 // class org/apache/commons/collections4/map/AbstractHashedMap$Values
      11: dup
      12: aload_0
      13: invokespecial #73                 // Method org/apache/commons/collections4/map/AbstractHashedMap$Values."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #71                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
      19: aload_0
      20: getfield      #71                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
      23: areturn

  protected java.util.Iterator<V> createValuesIterator();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method size:()I
       4: ifne          11
       7: invokestatic  #63                 // Method org/apache/commons/collections4/iterators/EmptyIterator.emptyIterator:()Ljava/util/Iterator;
      10: areturn
      11: new           #74                 // class org/apache/commons/collections4/map/AbstractHashedMap$ValuesIterator
      14: dup
      15: aload_0
      16: invokespecial #75                 // Method org/apache/commons/collections4/map/AbstractHashedMap$ValuesIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      19: areturn

  protected void doWriteObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field loadFactor:F
       5: invokevirtual #76                 // Method java/io/ObjectOutputStream.writeFloat:(F)V
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      13: arraylength
      14: invokevirtual #77                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      17: aload_1
      18: aload_0
      19: getfield      #28                 // Field size:I
      22: invokevirtual #77                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      25: aload_0
      26: invokevirtual #78                 // Method mapIterator:()Lorg/apache/commons/collections4/MapIterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.hasNext:()Z
      36: ifeq          62
      39: aload_1
      40: aload_2
      41: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.next:()Ljava/lang/Object;
      46: invokevirtual #81                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      49: aload_1
      50: aload_2
      51: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.getValue:()Ljava/lang/Object;
      56: invokevirtual #81                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      59: goto          30
      62: return

  protected void doReadObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #83                 // Method java/io/ObjectInputStream.readFloat:()F
       5: putfield      #2                  // Field loadFactor:F
       8: aload_1
       9: invokevirtual #84                 // Method java/io/ObjectInputStream.readInt:()I
      12: istore_2
      13: aload_1
      14: invokevirtual #84                 // Method java/io/ObjectInputStream.readInt:()I
      17: istore_3
      18: aload_0
      19: invokevirtual #6                  // Method init:()V
      22: aload_0
      23: aload_0
      24: iload_2
      25: aload_0
      26: getfield      #2                  // Field loadFactor:F
      29: invokevirtual #16                 // Method calculateThreshold:(IF)I
      32: putfield      #5                  // Field threshold:I
      35: aload_0
      36: iload_2
      37: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      40: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      43: iconst_0
      44: istore        4
      46: iload         4
      48: iload_3
      49: if_icmpge     79
      52: aload_1
      53: invokevirtual #85                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      56: astore        5
      58: aload_1
      59: invokevirtual #85                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      62: astore        6
      64: aload_0
      65: aload         5
      67: aload         6
      69: invokevirtual #40                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      72: pop
      73: iinc          4, 1
      76: goto          46
      79: return

  protected org.apache.commons.collections4.map.AbstractHashedMap<K, V> clone();
    Code:
       0: aload_0
       1: invokespecial #86                 // Method java/util/AbstractMap.clone:()Ljava/lang/Object;
       4: checkcast     #7                  // class org/apache/commons/collections4/map/AbstractHashedMap
       7: astore_1
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      13: arraylength
      14: anewarray     #3                  // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      17: putfield      #4                  // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      20: aload_1
      21: aconst_null
      22: putfield      #59                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
      25: aload_1
      26: aconst_null
      27: putfield      #66                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
      30: aload_1
      31: aconst_null
      32: putfield      #71                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
      35: aload_1
      36: iconst_0
      37: putfield      #42                 // Field modCount:I
      40: aload_1
      41: iconst_0
      42: putfield      #28                 // Field size:I
      45: aload_1
      46: invokevirtual #6                  // Method init:()V
      49: aload_1
      50: aload_0
      51: invokevirtual #87                 // Method putAll:(Ljava/util/Map;)V
      54: aload_1
      55: areturn
      56: astore_1
      57: new           #89                 // class java/lang/InternalError
      60: dup
      61: invokespecial #90                 // Method java/lang/InternalError."<init>":()V
      64: athrow
    Exception table:
       from    to  target type
           0    55    56   Class java/lang/CloneNotSupportedException

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #91                 // class java/util/Map
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #91                 // class java/util/Map
      20: astore_2
      21: aload_2
      22: invokeinterface #17,  1           // InterfaceMethod java/util/Map.size:()I
      27: aload_0
      28: invokevirtual #62                 // Method size:()I
      31: if_icmpeq     36
      34: iconst_0
      35: ireturn
      36: aload_0
      37: invokevirtual #78                 // Method mapIterator:()Lorg/apache/commons/collections4/MapIterator;
      40: astore_3
      41: aload_3
      42: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.hasNext:()Z
      47: ifeq          116
      50: aload_3
      51: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.next:()Ljava/lang/Object;
      56: astore        4
      58: aload_3
      59: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.getValue:()Ljava/lang/Object;
      64: astore        5
      66: aload         5
      68: ifnonnull     95
      71: aload_2
      72: aload         4
      74: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      79: ifnonnull     93
      82: aload_2
      83: aload         4
      85: invokeinterface #93,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      90: ifne          113
      93: iconst_0
      94: ireturn
      95: aload         5
      97: aload_2
      98: aload         4
     100: invokeinterface #92,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     105: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
     108: ifne          113
     111: iconst_0
     112: ireturn
     113: goto          41
     116: goto          127
     119: astore        4
     121: iconst_0
     122: ireturn
     123: astore        4
     125: iconst_0
     126: ireturn
     127: iconst_1
     128: ireturn
    Exception table:
       from    to  target type
          41    94   119   Class java/lang/ClassCastException
          95   112   119   Class java/lang/ClassCastException
         113   116   119   Class java/lang/ClassCastException
          41    94   123   Class java/lang/NullPointerException
          95   112   123   Class java/lang/NullPointerException
         113   116   123   Class java/lang/NullPointerException

  public int hashCode();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #96                 // Method createEntrySetIterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          36
      16: iload_1
      17: aload_2
      18: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      23: checkcast     #37                 // class java/util/Map$Entry
      26: invokeinterface #97,  1           // InterfaceMethod java/util/Map$Entry.hashCode:()I
      31: iadd
      32: istore_1
      33: goto          7
      36: iload_1
      37: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #62                 // Method size:()I
       4: ifne          10
       7: ldc           #98                 // String {}
       9: areturn
      10: new           #99                 // class java/lang/StringBuilder
      13: dup
      14: bipush        32
      16: aload_0
      17: invokevirtual #62                 // Method size:()I
      20: imul
      21: invokespecial #100                // Method java/lang/StringBuilder."<init>":(I)V
      24: astore_1
      25: aload_1
      26: bipush        123
      28: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      31: pop
      32: aload_0
      33: invokevirtual #78                 // Method mapIterator:()Lorg/apache/commons/collections4/MapIterator;
      36: astore_2
      37: aload_2
      38: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.hasNext:()Z
      43: istore_3
      44: iload_3
      45: ifeq          129
      48: aload_2
      49: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.next:()Ljava/lang/Object;
      54: astore        4
      56: aload_2
      57: invokeinterface #82,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.getValue:()Ljava/lang/Object;
      62: astore        5
      64: aload_1
      65: aload         4
      67: aload_0
      68: if_acmpne     76
      71: ldc           #102                // String (this Map)
      73: goto          78
      76: aload         4
      78: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: bipush        61
      83: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      86: aload         5
      88: aload_0
      89: if_acmpne     97
      92: ldc           #102                // String (this Map)
      94: goto          99
      97: aload         5
      99: invokevirtual #103                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     102: pop
     103: aload_2
     104: invokeinterface #79,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.hasNext:()Z
     109: istore_3
     110: iload_3
     111: ifeq          126
     114: aload_1
     115: bipush        44
     117: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     120: bipush        32
     122: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     125: pop
     126: goto          44
     129: aload_1
     130: bipush        125
     132: invokevirtual #101                // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
     135: pop
     136: aload_1
     137: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     140: areturn

  protected java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #105                // Method clone:()Lorg/apache/commons/collections4/map/AbstractHashedMap;
       4: areturn

  static {};
    Code:
       0: new           #106                // class java/lang/Object
       3: dup
       4: invokespecial #107                // Method java/lang/Object."<init>":()V
       7: putstatic     #43                 // Field NULL:Ljava/lang/Object;
      10: return
}
