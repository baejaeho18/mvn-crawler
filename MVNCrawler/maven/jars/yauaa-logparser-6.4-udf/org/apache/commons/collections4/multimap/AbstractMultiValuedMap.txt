Compiled from "AbstractMultiValuedMap.java"
public abstract class org.apache.commons.collections4.multimap.AbstractMultiValuedMap<K, V> implements org.apache.commons.collections4.MultiValuedMap<K, V> {
  private transient java.util.Collection<V> valuesView;

  private transient org.apache.commons.collections4.multimap.AbstractMultiValuedMap<K, V>.EntryValues entryValuesView;

  private transient org.apache.commons.collections4.MultiSet<K> keysMultiSetView;

  private transient org.apache.commons.collections4.multimap.AbstractMultiValuedMap<K, V>.AsMap asMapView;

  private transient java.util.Map<K, java.util.Collection<V>> map;

  protected org.apache.commons.collections4.multimap.AbstractMultiValuedMap();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.apache.commons.collections4.multimap.AbstractMultiValuedMap(java.util.Map<K, ? extends java.util.Collection<V>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     18
       8: new           #3                  // class java/lang/NullPointerException
      11: dup
      12: ldc           #4                  // String Map must not be null.
      14: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: aload_0
      19: aload_1
      20: putfield      #1                  // Field map:Ljava/util/Map;
      23: return

  protected java.util.Map<K, ? extends java.util.Collection<V>> getMap();
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/Map;
       4: areturn

  protected void setMap(java.util.Map<K, ? extends java.util.Collection<V>>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field map:Ljava/util/Map;
       5: return

  protected abstract java.util.Collection<V> createCollection();

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method values:()Ljava/util/Collection;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsMapping(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/util/Collection
      13: astore_3
      14: aload_3
      15: ifnull        32
      18: aload_3
      19: aload_2
      20: invokeinterface #9,  2            // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  public java.util.Collection<java.util.Map$Entry<K, V>> entries();
    Code:
       0: aload_0
       1: getfield      #12                 // Field entryValuesView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$EntryValues;
       4: ifnull        14
       7: aload_0
       8: getfield      #12                 // Field entryValuesView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$EntryValues;
      11: goto          28
      14: aload_0
      15: new           #13                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$EntryValues
      18: dup
      19: aload_0
      20: aconst_null
      21: invokespecial #14                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$EntryValues."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$1;)V
      24: dup_x1
      25: putfield      #12                 // Field entryValuesView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$EntryValues;
      28: areturn

  public java.util.Collection<V> get(K);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method wrappedCollection:(Ljava/lang/Object;)Ljava/util/Collection;
       5: areturn

  java.util.Collection<V> wrappedCollection(K);
    Code:
       0: new           #16                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$WrappedCollection
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #17                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$WrappedCollection."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;Ljava/lang/Object;)V
       9: areturn

  public java.util.Collection<V> remove(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/util/Collection
      13: invokestatic  #19                 // Method org/apache/commons/collections4/CollectionUtils.emptyIfNull:(Ljava/util/Collection;)Ljava/util/Collection;
      16: areturn

  public boolean removeMapping(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/util/Collection
      13: astore_3
      14: aload_3
      15: ifnonnull     20
      18: iconst_0
      19: ireturn
      20: aload_3
      21: aload_2
      22: invokeinterface #20,  2           // InterfaceMethod java/util/Collection.remove:(Ljava/lang/Object;)Z
      27: istore        4
      29: aload_3
      30: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      35: ifeq          49
      38: aload_0
      39: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
      42: aload_1
      43: invokeinterface #18,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: iload         4
      51: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: invokeinterface #23,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public int size();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       6: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      11: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      16: astore_2
      17: aload_2
      18: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      23: ifeq          48
      26: aload_2
      27: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      32: checkcast     #11                 // class java/util/Collection
      35: astore_3
      36: iload_1
      37: aload_3
      38: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
      43: iadd
      44: istore_1
      45: goto          17
      48: iload_1
      49: ireturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #29                 // Field valuesView:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        13
       9: aload_1
      10: goto          27
      13: aload_0
      14: new           #30                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$Values
      17: dup
      18: aload_0
      19: aconst_null
      20: invokespecial #31                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$Values."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$1;)V
      23: dup_x1
      24: putfield      #29                 // Field valuesView:Ljava/util/Collection;
      27: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: invokeinterface #32,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public boolean put(K, V);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #11                 // class java/util/Collection
      13: astore_3
      14: aload_3
      15: ifnonnull     49
      18: aload_0
      19: invokevirtual #33                 // Method createCollection:()Ljava/util/Collection;
      22: astore_3
      23: aload_3
      24: aload_2
      25: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      30: ifeq          47
      33: aload_0
      34: getfield      #1                  // Field map:Ljava/util/Map;
      37: aload_1
      38: aload_3
      39: invokeinterface #35,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      44: pop
      45: iconst_1
      46: ireturn
      47: iconst_0
      48: ireturn
      49: aload_3
      50: aload_2
      51: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      56: ireturn

  public boolean putAll(java.util.Map<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #4                  // String Map must not be null.
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_0
      15: istore_2
      16: aload_1
      17: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload_3
      38: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #38                 // class java/util/Map$Entry
      46: astore        4
      48: iload_2
      49: aload_0
      50: aload         4
      52: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: aload         4
      59: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: invokevirtual #41                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ior
      68: istore_2
      69: goto          28
      72: iload_2
      73: ireturn

  public boolean putAll(org.apache.commons.collections4.MultiValuedMap<? extends K, ? extends V>);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #4                  // String Map must not be null.
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iconst_0
      15: istore_2
      16: aload_1
      17: invokeinterface #42,  1           // InterfaceMethod org/apache/commons/collections4/MultiValuedMap.entries:()Ljava/util/Collection;
      22: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      27: astore_3
      28: aload_3
      29: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          72
      37: aload_3
      38: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #38                 // class java/util/Map$Entry
      46: astore        4
      48: iload_2
      49: aload_0
      50: aload         4
      52: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      57: aload         4
      59: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: invokevirtual #41                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ior
      68: istore_2
      69: goto          28
      72: iload_2
      73: ireturn

  public org.apache.commons.collections4.MultiSet<K> keys();
    Code:
       0: aload_0
       1: getfield      #43                 // Field keysMultiSetView:Lorg/apache/commons/collections4/MultiSet;
       4: ifnonnull     23
       7: aload_0
       8: new           #44                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$KeysMultiSet
      11: dup
      12: aload_0
      13: aconst_null
      14: invokespecial #45                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$KeysMultiSet."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$1;)V
      17: invokestatic  #46                 // Method org/apache/commons/collections4/multiset/UnmodifiableMultiSet.unmodifiableMultiSet:(Lorg/apache/commons/collections4/MultiSet;)Lorg/apache/commons/collections4/MultiSet;
      20: putfield      #43                 // Field keysMultiSetView:Lorg/apache/commons/collections4/MultiSet;
      23: aload_0
      24: getfield      #43                 // Field keysMultiSetView:Lorg/apache/commons/collections4/MultiSet;
      27: areturn

  public java.util.Map<K, java.util.Collection<V>> asMap();
    Code:
       0: aload_0
       1: getfield      #47                 // Field asMapView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$AsMap;
       4: ifnull        14
       7: aload_0
       8: getfield      #47                 // Field asMapView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$AsMap;
      11: goto          31
      14: aload_0
      15: new           #48                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$AsMap
      18: dup
      19: aload_0
      20: aload_0
      21: getfield      #1                  // Field map:Ljava/util/Map;
      24: invokespecial #49                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$AsMap."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;Ljava/util/Map;)V
      27: dup_x1
      28: putfield      #47                 // Field asMapView:Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap$AsMap;
      31: areturn

  public boolean putAll(K, java.lang.Iterable<? extends V>);
    Code:
       0: aload_2
       1: ifnonnull     14
       4: new           #3                  // class java/lang/NullPointerException
       7: dup
       8: ldc           #50                 // String Values must not be null.
      10: invokespecial #5                  // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: instanceof    #11                 // class java/util/Collection
      18: ifeq          55
      21: aload_2
      22: checkcast     #11                 // class java/util/Collection
      25: astore_3
      26: aload_3
      27: invokeinterface #21,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      32: ifne          53
      35: aload_0
      36: aload_1
      37: invokevirtual #51                 // Method get:(Ljava/lang/Object;)Ljava/util/Collection;
      40: aload_3
      41: invokeinterface #52,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn
      55: aload_2
      56: invokeinterface #53,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      61: astore_3
      62: aload_3
      63: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      68: ifeq          87
      71: aload_0
      72: aload_1
      73: invokevirtual #51                 // Method get:(Ljava/lang/Object;)Ljava/util/Collection;
      76: aload_3
      77: invokestatic  #54                 // Method org/apache/commons/collections4/CollectionUtils.addAll:(Ljava/util/Collection;Ljava/util/Iterator;)Z
      80: ifeq          87
      83: iconst_1
      84: goto          88
      87: iconst_0
      88: ireturn

  public org.apache.commons.collections4.MapIterator<K, V> mapIterator();
    Code:
       0: aload_0
       1: invokevirtual #55                 // Method size:()I
       4: ifne          11
       7: invokestatic  #56                 // Method org/apache/commons/collections4/iterators/EmptyMapIterator.emptyMapIterator:()Lorg/apache/commons/collections4/MapIterator;
      10: areturn
      11: new           #57                 // class org/apache/commons/collections4/multimap/AbstractMultiValuedMap$MultiValuedMapIterator
      14: dup
      15: aload_0
      16: invokespecial #58                 // Method org/apache/commons/collections4/multimap/AbstractMultiValuedMap$MultiValuedMapIterator."<init>":(Lorg/apache/commons/collections4/multimap/AbstractMultiValuedMap;)V
      19: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #59                 // class org/apache/commons/collections4/MultiValuedMap
      11: ifeq          33
      14: aload_0
      15: invokevirtual #60                 // Method asMap:()Ljava/util/Map;
      18: aload_1
      19: checkcast     #59                 // class org/apache/commons/collections4/MultiValuedMap
      22: invokeinterface #61,  1           // InterfaceMethod org/apache/commons/collections4/MultiValuedMap.asMap:()Ljava/util/Map;
      27: invokeinterface #62,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      32: ireturn
      33: iconst_0
      34: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: invokeinterface #63,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getMap:()Ljava/util/Map;
       4: invokevirtual #64                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  protected void doWriteObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #1                  // Field map:Ljava/util/Map;
       5: invokeinterface #65,  1           // InterfaceMethod java/util/Map.size:()I
      10: invokevirtual #66                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      13: aload_0
      14: getfield      #1                  // Field map:Ljava/util/Map;
      17: invokeinterface #36,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      22: invokeinterface #37,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore_2
      28: aload_2
      29: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      34: ifeq          122
      37: aload_2
      38: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      43: checkcast     #38                 // class java/util/Map$Entry
      46: astore_3
      47: aload_1
      48: aload_3
      49: invokeinterface #39,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      54: invokevirtual #67                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      57: aload_1
      58: aload_3
      59: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      64: checkcast     #11                 // class java/util/Collection
      67: invokeinterface #28,  1           // InterfaceMethod java/util/Collection.size:()I
      72: invokevirtual #66                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      75: aload_3
      76: invokeinterface #40,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      81: checkcast     #11                 // class java/util/Collection
      84: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      89: astore        4
      91: aload         4
      93: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      98: ifeq          119
     101: aload         4
     103: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     108: astore        5
     110: aload_1
     111: aload         5
     113: invokevirtual #67                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
     116: goto          91
     119: goto          28
     122: return

  protected void doReadObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method java/io/ObjectInputStream.readInt:()I
       4: istore_2
       5: iconst_0
       6: istore_3
       7: iload_3
       8: iload_2
       9: if_icmpge     70
      12: aload_1
      13: invokevirtual #69                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      16: astore        4
      18: aload_0
      19: aload         4
      21: invokevirtual #51                 // Method get:(Ljava/lang/Object;)Ljava/util/Collection;
      24: astore        5
      26: aload_1
      27: invokevirtual #68                 // Method java/io/ObjectInputStream.readInt:()I
      30: istore        6
      32: iconst_0
      33: istore        7
      35: iload         7
      37: iload         6
      39: if_icmpge     64
      42: aload_1
      43: invokevirtual #69                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      46: astore        8
      48: aload         5
      50: aload         8
      52: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      57: pop
      58: iinc          7, 1
      61: goto          35
      64: iinc          3, 1
      67: goto          7
      70: return

  static java.util.Map access$300(org.apache.commons.collections4.multimap.AbstractMultiValuedMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field map:Ljava/util/Map;
       4: areturn
}
