Compiled from "AbstractReferenceMap.java"
public abstract class org.apache.commons.collections4.map.AbstractReferenceMap<K, V> extends org.apache.commons.collections4.map.AbstractHashedMap<K, V> {
  private org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength keyType;

  private org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength valueType;

  private boolean purgeValues;

  private transient java.lang.ref.ReferenceQueue<java.lang.Object> queue;

  protected org.apache.commons.collections4.map.AbstractReferenceMap();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/apache/commons/collections4/map/AbstractHashedMap."<init>":()V
       4: return

  protected org.apache.commons.collections4.map.AbstractReferenceMap(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength, int, float, boolean);
    Code:
       0: aload_0
       1: iload_3
       2: fload         4
       4: invokespecial #6                  // Method org/apache/commons/collections4/map/AbstractHashedMap."<init>":(IF)V
       7: aload_0
       8: aload_1
       9: putfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      12: aload_0
      13: aload_2
      14: putfield      #3                  // Field valueType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      17: aload_0
      18: iload         5
      20: putfield      #1                  // Field purgeValues:Z
      23: return

  protected void init();
    Code:
       0: aload_0
       1: new           #7                  // class java/lang/ref/ReferenceQueue
       4: dup
       5: invokespecial #8                  // Method java/lang/ref/ReferenceQueue."<init>":()V
       8: putfield      #2                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      11: return

  public int size();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method purgeBeforeRead:()V
       4: aload_0
       5: invokespecial #10                 // Method org/apache/commons/collections4/map/AbstractHashedMap.size:()I
       8: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method purgeBeforeRead:()V
       4: aload_0
       5: invokespecial #11                 // Method org/apache/commons/collections4/map/AbstractHashedMap.isEmpty:()Z
       8: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method purgeBeforeRead:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #12                 // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: iconst_0
      15: ireturn
      16: aload_2
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      22: ifnull        29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method purgeBeforeRead:()V
       4: aload_1
       5: ifnonnull     10
       8: iconst_0
       9: ireturn
      10: aload_0
      11: aload_1
      12: invokespecial #14                 // Method org/apache/commons/collections4/map/AbstractHashedMap.containsValue:(Ljava/lang/Object;)Z
      15: ireturn

  public V get(java.lang.Object);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method purgeBeforeRead:()V
       4: aload_0
       5: aload_1
       6: invokevirtual #12                 // Method getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
       9: astore_2
      10: aload_2
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_2
      17: invokeinterface #13,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      22: areturn

  public V put(K, V);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #15                 // class java/lang/NullPointerException
       7: dup
       8: ldc           #16                 // String null keys not allowed
      10: invokespecial #17                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_2
      15: ifnonnull     28
      18: new           #15                 // class java/lang/NullPointerException
      21: dup
      22: ldc           #18                 // String null values not allowed
      24: invokespecial #17                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      27: athrow
      28: aload_0
      29: invokevirtual #19                 // Method purgeBeforeWrite:()V
      32: aload_0
      33: aload_1
      34: aload_2
      35: invokespecial #20                 // Method org/apache/commons/collections4/map/AbstractHashedMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      38: areturn

  public V remove(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: invokevirtual #19                 // Method purgeBeforeWrite:()V
      10: aload_0
      11: aload_1
      12: invokespecial #21                 // Method org/apache/commons/collections4/map/AbstractHashedMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      15: areturn

  public void clear();
    Code:
       0: aload_0
       1: invokespecial #22                 // Method org/apache/commons/collections4/map/AbstractHashedMap.clear:()V
       4: aload_0
       5: getfield      #2                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       8: invokevirtual #23                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      11: ifnull        17
      14: goto          4
      17: return

  public org.apache.commons.collections4.MapIterator<K, V> mapIterator();
    Code:
       0: new           #24                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceMapIterator
       3: dup
       4: aload_0
       5: invokespecial #25                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceMapIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractReferenceMap;)V
       8: areturn

  public java.util.Set<java.util.Map$Entry<K, V>> entrySet();
    Code:
       0: aload_0
       1: getfield      #26                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #27                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntrySet
      11: dup
      12: aload_0
      13: invokespecial #28                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntrySet."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #26                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
      19: aload_0
      20: getfield      #26                 // Field entrySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$EntrySet;
      23: areturn

  public java.util.Set<K> keySet();
    Code:
       0: aload_0
       1: getfield      #29                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
       4: ifnonnull     19
       7: aload_0
       8: new           #30                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceKeySet
      11: dup
      12: aload_0
      13: invokespecial #31                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceKeySet."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #29                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
      19: aload_0
      20: getfield      #29                 // Field keySet:Lorg/apache/commons/collections4/map/AbstractHashedMap$KeySet;
      23: areturn

  public java.util.Collection<V> values();
    Code:
       0: aload_0
       1: getfield      #32                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
       4: ifnonnull     19
       7: aload_0
       8: new           #33                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceValues
      11: dup
      12: aload_0
      13: invokespecial #34                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceValues."<init>":(Lorg/apache/commons/collections4/map/AbstractHashedMap;)V
      16: putfield      #32                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
      19: aload_0
      20: getfield      #32                 // Field values:Lorg/apache/commons/collections4/map/AbstractHashedMap$Values;
      23: areturn

  protected void purgeBeforeRead();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method purge:()V
       4: return

  protected void purgeBeforeWrite();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method purge:()V
       4: return

  protected void purge();
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: invokevirtual #23                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
       7: astore_1
       8: aload_1
       9: ifnull        28
      12: aload_0
      13: aload_1
      14: invokevirtual #36                 // Method purge:(Ljava/lang/ref/Reference;)V
      17: aload_0
      18: getfield      #2                  // Field queue:Ljava/lang/ref/ReferenceQueue;
      21: invokevirtual #23                 // Method java/lang/ref/ReferenceQueue.poll:()Ljava/lang/ref/Reference;
      24: astore_1
      25: goto          8
      28: return

  protected void purge(java.lang.ref.Reference<?>);
    Code:
       0: aload_1
       1: invokevirtual #37                 // Method java/lang/Object.hashCode:()I
       4: istore_2
       5: aload_0
       6: iload_2
       7: aload_0
       8: getfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      11: arraylength
      12: invokevirtual #39                 // Method hashIndex:(II)I
      15: istore_3
      16: aconst_null
      17: astore        4
      19: aload_0
      20: getfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      23: iload_3
      24: aaload
      25: astore        5
      27: aload         5
      29: ifnull        107
      32: aload         5
      34: checkcast     #40                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry
      37: astore        6
      39: aload         6
      41: aload_1
      42: invokevirtual #41                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry.purge:(Ljava/lang/ref/Reference;)Z
      45: ifeq          93
      48: aload         4
      50: ifnonnull     67
      53: aload_0
      54: getfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      57: iload_3
      58: aload         5
      60: getfield      #42                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      63: aastore
      64: goto          77
      67: aload         4
      69: aload         5
      71: getfield      #42                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      74: putfield      #42                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      77: aload_0
      78: dup
      79: getfield      #43                 // Field size:I
      82: iconst_1
      83: isub
      84: putfield      #43                 // Field size:I
      87: aload         6
      89: invokevirtual #44                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry.onPurge:()V
      92: return
      93: aload         5
      95: astore        4
      97: aload         5
      99: getfield      #42                 // Field org/apache/commons/collections4/map/AbstractHashedMap$HashEntry.next:Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
     102: astore        5
     104: goto          27
     107: return

  protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V> getEntry(java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     6
       4: aconst_null
       5: areturn
       6: aload_0
       7: aload_1
       8: invokespecial #45                 // Method org/apache/commons/collections4/map/AbstractHashedMap.getEntry:(Ljava/lang/Object;)Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      11: areturn

  protected int hashEntry(java.lang.Object, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     8
       4: iconst_0
       5: goto          12
       8: aload_1
       9: invokevirtual #37                 // Method java/lang/Object.hashCode:()I
      12: aload_2
      13: ifnonnull     20
      16: iconst_0
      17: goto          24
      20: aload_2
      21: invokevirtual #37                 // Method java/lang/Object.hashCode:()I
      24: ixor
      25: ireturn

  protected boolean isEqualKey(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       4: getstatic     #46                 // Field org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength.HARD:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       7: if_acmpne     14
      10: aload_2
      11: goto          21
      14: aload_2
      15: checkcast     #47                 // class java/lang/ref/Reference
      18: invokevirtual #48                 // Method java/lang/ref/Reference.get:()Ljava/lang/Object;
      21: astore_2
      22: aload_1
      23: aload_2
      24: if_acmpeq     35
      27: aload_1
      28: aload_2
      29: invokevirtual #49                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  protected org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceEntry<K, V> createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry<K, V>, int, K, V);
    Code:
       0: new           #40                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry
       3: dup
       4: aload_0
       5: aload_1
       6: iload_2
       7: aload_3
       8: aload         4
      10: invokespecial #50                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry."<init>":(Lorg/apache/commons/collections4/map/AbstractReferenceMap;Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)V
      13: areturn

  protected java.util.Iterator<java.util.Map$Entry<K, V>> createEntrySetIterator();
    Code:
       0: new           #51                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntrySetIterator
       3: dup
       4: aload_0
       5: invokespecial #52                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntrySetIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractReferenceMap;)V
       8: areturn

  protected java.util.Iterator<K> createKeySetIterator();
    Code:
       0: new           #53                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceKeySetIterator
       3: dup
       4: aload_0
       5: invokespecial #54                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceKeySetIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractReferenceMap;)V
       8: areturn

  protected java.util.Iterator<V> createValuesIterator();
    Code:
       0: new           #55                 // class org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceValuesIterator
       3: dup
       4: aload_0
       5: invokespecial #56                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceValuesIterator."<init>":(Lorg/apache/commons/collections4/map/AbstractReferenceMap;)V
       8: areturn

  protected void doWriteObject(java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       5: getfield      #57                 // Field org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength.value:I
       8: invokevirtual #58                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      11: aload_1
      12: aload_0
      13: getfield      #3                  // Field valueType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      16: getfield      #57                 // Field org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength.value:I
      19: invokevirtual #58                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      22: aload_1
      23: aload_0
      24: getfield      #1                  // Field purgeValues:Z
      27: invokevirtual #59                 // Method java/io/ObjectOutputStream.writeBoolean:(Z)V
      30: aload_1
      31: aload_0
      32: getfield      #60                 // Field loadFactor:F
      35: invokevirtual #61                 // Method java/io/ObjectOutputStream.writeFloat:(F)V
      38: aload_1
      39: aload_0
      40: getfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      43: arraylength
      44: invokevirtual #58                 // Method java/io/ObjectOutputStream.writeInt:(I)V
      47: aload_0
      48: invokevirtual #62                 // Method mapIterator:()Lorg/apache/commons/collections4/MapIterator;
      51: astore_2
      52: aload_2
      53: invokeinterface #63,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.hasNext:()Z
      58: ifeq          84
      61: aload_1
      62: aload_2
      63: invokeinterface #64,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.next:()Ljava/lang/Object;
      68: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      71: aload_1
      72: aload_2
      73: invokeinterface #66,  1           // InterfaceMethod org/apache/commons/collections4/MapIterator.getValue:()Ljava/lang/Object;
      78: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      81: goto          52
      84: aload_1
      85: aconst_null
      86: invokevirtual #65                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      89: return

  protected void doReadObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #67                 // Method java/io/ObjectInputStream.readInt:()I
       5: invokestatic  #68                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength.resolve:(I)Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       8: putfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      11: aload_0
      12: aload_1
      13: invokevirtual #67                 // Method java/io/ObjectInputStream.readInt:()I
      16: invokestatic  #68                 // Method org/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength.resolve:(I)Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      19: putfield      #3                  // Field valueType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
      22: aload_0
      23: aload_1
      24: invokevirtual #69                 // Method java/io/ObjectInputStream.readBoolean:()Z
      27: putfield      #1                  // Field purgeValues:Z
      30: aload_0
      31: aload_1
      32: invokevirtual #70                 // Method java/io/ObjectInputStream.readFloat:()F
      35: putfield      #60                 // Field loadFactor:F
      38: aload_1
      39: invokevirtual #67                 // Method java/io/ObjectInputStream.readInt:()I
      42: istore_2
      43: aload_0
      44: invokevirtual #71                 // Method init:()V
      47: aload_0
      48: iload_2
      49: anewarray     #72                 // class org/apache/commons/collections4/map/AbstractHashedMap$HashEntry
      52: putfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      55: aload_0
      56: aload_0
      57: aload_0
      58: getfield      #38                 // Field data:[Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;
      61: arraylength
      62: aload_0
      63: getfield      #60                 // Field loadFactor:F
      66: invokevirtual #73                 // Method calculateThreshold:(IF)I
      69: putfield      #74                 // Field threshold:I
      72: aload_1
      73: invokevirtual #75                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      76: astore_3
      77: aload_3
      78: ifnonnull     84
      81: goto          101
      84: aload_1
      85: invokevirtual #75                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
      88: astore        4
      90: aload_0
      91: aload_3
      92: aload         4
      94: invokevirtual #76                 // Method put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      97: pop
      98: goto          72
     101: return

  protected boolean isKeyType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       4: aload_1
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected boolean isValueType(org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength);
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       4: aload_1
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  protected org.apache.commons.collections4.map.AbstractHashedMap$HashEntry createEntry(org.apache.commons.collections4.map.AbstractHashedMap$HashEntry, int, java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: aload         4
       6: invokevirtual #77                 // Method createEntry:(Lorg/apache/commons/collections4/map/AbstractHashedMap$HashEntry;ILjava/lang/Object;Ljava/lang/Object;)Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceEntry;
       9: areturn

  static org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$000(org.apache.commons.collections4.map.AbstractReferenceMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field keyType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       4: areturn

  static org.apache.commons.collections4.map.AbstractReferenceMap$ReferenceStrength access$100(org.apache.commons.collections4.map.AbstractReferenceMap);
    Code:
       0: aload_0
       1: getfield      #3                  // Field valueType:Lorg/apache/commons/collections4/map/AbstractReferenceMap$ReferenceStrength;
       4: areturn

  static java.lang.ref.ReferenceQueue access$200(org.apache.commons.collections4.map.AbstractReferenceMap);
    Code:
       0: aload_0
       1: getfield      #2                  // Field queue:Ljava/lang/ref/ReferenceQueue;
       4: areturn

  static boolean access$300(org.apache.commons.collections4.map.AbstractReferenceMap);
    Code:
       0: aload_0
       1: getfield      #1                  // Field purgeValues:Z
       4: ireturn
}
