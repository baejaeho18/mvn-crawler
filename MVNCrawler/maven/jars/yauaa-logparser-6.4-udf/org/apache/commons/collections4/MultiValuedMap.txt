Compiled from "MultiValuedMap.java"
public interface org.apache.commons.collections4.MultiValuedMap<K, V> {
  public abstract int size();

  public abstract boolean isEmpty();

  public abstract boolean containsKey(java.lang.Object);

  public abstract boolean containsValue(java.lang.Object);

  public abstract boolean containsMapping(java.lang.Object, java.lang.Object);

  public abstract java.util.Collection<V> get(K);

  public abstract boolean put(K, V);

  public abstract boolean putAll(K, java.lang.Iterable<? extends V>);

  public abstract boolean putAll(java.util.Map<? extends K, ? extends V>);

  public abstract boolean putAll(org.apache.commons.collections4.MultiValuedMap<? extends K, ? extends V>);

  public abstract java.util.Collection<V> remove(java.lang.Object);

  public abstract boolean removeMapping(java.lang.Object, java.lang.Object);

  public abstract void clear();

  public abstract java.util.Collection<java.util.Map$Entry<K, V>> entries();

  public abstract org.apache.commons.collections4.MultiSet<K> keys();

  public abstract java.util.Set<K> keySet();

  public abstract java.util.Collection<V> values();

  public abstract java.util.Map<K, java.util.Collection<V>> asMap();

  public abstract org.apache.commons.collections4.MapIterator<K, V> mapIterator();
}
