Compiled from "TreeList.java"
public class org.apache.commons.collections4.list.TreeList<E> extends java.util.AbstractList<E> {
  private org.apache.commons.collections4.list.TreeList$AVLNode<E> root;

  private int size;

  public org.apache.commons.collections4.list.TreeList();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/util/AbstractList."<init>":()V
       4: return

  public org.apache.commons.collections4.list.TreeList(java.util.Collection<? extends E>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/util/AbstractList."<init>":()V
       4: aload_1
       5: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
      10: ifne          36
      13: aload_0
      14: new           #5                  // class org/apache/commons/collections4/list/TreeList$AVLNode
      17: dup
      18: aload_1
      19: aconst_null
      20: invokespecial #6                  // Method org/apache/commons/collections4/list/TreeList$AVLNode."<init>":(Ljava/util/Collection;Lorg/apache/commons/collections4/list/TreeList$1;)V
      23: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      26: aload_0
      27: aload_1
      28: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.size:()I
      33: putfield      #8                  // Field size:I
      36: return

  public E get(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_0
       4: invokevirtual #9                  // Method size:()I
       7: iconst_1
       8: isub
       9: invokespecial #10                 // Method checkInterval:(III)V
      12: aload_0
      13: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      16: iload_1
      17: invokevirtual #11                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.get:(I)Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      20: invokevirtual #12                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.getValue:()Ljava/lang/Object;
      23: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #8                  // Field size:I
       4: ireturn

  public java.util.Iterator<E> iterator();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #13                 // Method listIterator:(I)Ljava/util/ListIterator;
       5: areturn

  public java.util.ListIterator<E> listIterator();
    Code:
       0: aload_0
       1: iconst_0
       2: invokevirtual #13                 // Method listIterator:(I)Ljava/util/ListIterator;
       5: areturn

  public java.util.ListIterator<E> listIterator(int);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_0
       4: invokevirtual #9                  // Method size:()I
       7: invokespecial #10                 // Method checkInterval:(III)V
      10: new           #14                 // class org/apache/commons/collections4/list/TreeList$TreeListIterator
      13: dup
      14: aload_0
      15: iload_1
      16: invokespecial #15                 // Method org/apache/commons/collections4/list/TreeList$TreeListIterator."<init>":(Lorg/apache/commons/collections4/list/TreeList;I)V
      19: areturn

  public int indexOf(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      13: aload_1
      14: aload_0
      15: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      18: invokestatic  #16                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.access$100:(Lorg/apache/commons/collections4/list/TreeList$AVLNode;)I
      21: invokevirtual #17                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.indexOf:(Ljava/lang/Object;I)I
      24: ireturn

  public boolean contains(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method indexOf:(Ljava/lang/Object;)I
       5: iflt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public java.lang.Object[] toArray();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method size:()I
       4: anewarray     #19                 // class java/lang/Object
       7: astore_1
       8: aload_0
       9: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      12: ifnull        30
      15: aload_0
      16: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      19: aload_1
      20: aload_0
      21: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      24: invokestatic  #16                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.access$100:(Lorg/apache/commons/collections4/list/TreeList$AVLNode;)I
      27: invokevirtual #20                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.toArray:([Ljava/lang/Object;I)V
      30: aload_1
      31: areturn

  public void add(int, E);
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #1                  // Field modCount:I
      10: aload_0
      11: iload_1
      12: iconst_0
      13: aload_0
      14: invokevirtual #9                  // Method size:()I
      17: invokespecial #10                 // Method checkInterval:(III)V
      20: aload_0
      21: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      24: ifnonnull     46
      27: aload_0
      28: new           #5                  // class org/apache/commons/collections4/list/TreeList$AVLNode
      31: dup
      32: iload_1
      33: aload_2
      34: aconst_null
      35: aconst_null
      36: aconst_null
      37: invokespecial #21                 // Method org/apache/commons/collections4/list/TreeList$AVLNode."<init>":(ILjava/lang/Object;Lorg/apache/commons/collections4/list/TreeList$AVLNode;Lorg/apache/commons/collections4/list/TreeList$AVLNode;Lorg/apache/commons/collections4/list/TreeList$1;)V
      40: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      43: goto          59
      46: aload_0
      47: aload_0
      48: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      51: iload_1
      52: aload_2
      53: invokevirtual #22                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.insert:(ILjava/lang/Object;)Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      56: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      59: aload_0
      60: dup
      61: getfield      #8                  // Field size:I
      64: iconst_1
      65: iadd
      66: putfield      #8                  // Field size:I
      69: return

  public boolean addAll(java.util.Collection<? extends E>);
    Code:
       0: aload_1
       1: invokeinterface #4,  1            // InterfaceMethod java/util/Collection.isEmpty:()Z
       6: ifeq          11
       9: iconst_0
      10: ireturn
      11: aload_0
      12: dup
      13: getfield      #1                  // Field modCount:I
      16: aload_1
      17: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.size:()I
      22: iadd
      23: putfield      #1                  // Field modCount:I
      26: new           #5                  // class org/apache/commons/collections4/list/TreeList$AVLNode
      29: dup
      30: aload_1
      31: aconst_null
      32: invokespecial #6                  // Method org/apache/commons/collections4/list/TreeList$AVLNode."<init>":(Ljava/util/Collection;Lorg/apache/commons/collections4/list/TreeList$1;)V
      35: astore_2
      36: aload_0
      37: aload_0
      38: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      41: ifnonnull     48
      44: aload_2
      45: goto          60
      48: aload_0
      49: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      52: aload_2
      53: aload_0
      54: getfield      #8                  // Field size:I
      57: invokestatic  #23                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.access$300:(Lorg/apache/commons/collections4/list/TreeList$AVLNode;Lorg/apache/commons/collections4/list/TreeList$AVLNode;I)Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      60: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      63: aload_0
      64: dup
      65: getfield      #8                  // Field size:I
      68: aload_1
      69: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.size:()I
      74: iadd
      75: putfield      #8                  // Field size:I
      78: iconst_1
      79: ireturn

  public E set(int, E);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: aload_0
       4: invokevirtual #9                  // Method size:()I
       7: iconst_1
       8: isub
       9: invokespecial #10                 // Method checkInterval:(III)V
      12: aload_0
      13: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      16: iload_1
      17: invokevirtual #11                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.get:(I)Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      20: astore_3
      21: aload_3
      22: invokestatic  #24                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.access$400:(Lorg/apache/commons/collections4/list/TreeList$AVLNode;)Ljava/lang/Object;
      25: astore        4
      27: aload_3
      28: aload_2
      29: invokevirtual #25                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.setValue:(Ljava/lang/Object;)V
      32: aload         4
      34: areturn

  public E remove(int);
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #1                  // Field modCount:I
      10: aload_0
      11: iload_1
      12: iconst_0
      13: aload_0
      14: invokevirtual #9                  // Method size:()I
      17: iconst_1
      18: isub
      19: invokespecial #10                 // Method checkInterval:(III)V
      22: aload_0
      23: iload_1
      24: invokevirtual #26                 // Method get:(I)Ljava/lang/Object;
      27: astore_2
      28: aload_0
      29: aload_0
      30: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      33: iload_1
      34: invokevirtual #27                 // Method org/apache/commons/collections4/list/TreeList$AVLNode.remove:(I)Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      37: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      40: aload_0
      41: dup
      42: getfield      #8                  // Field size:I
      45: iconst_1
      46: isub
      47: putfield      #8                  // Field size:I
      50: aload_2
      51: areturn

  public void clear();
    Code:
       0: aload_0
       1: dup
       2: getfield      #1                  // Field modCount:I
       5: iconst_1
       6: iadd
       7: putfield      #1                  // Field modCount:I
      10: aload_0
      11: aconst_null
      12: putfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
      15: aload_0
      16: iconst_0
      17: putfield      #8                  // Field size:I
      20: return

  private void checkInterval(int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: if_icmplt     10
       5: iload_1
       6: iload_3
       7: if_icmple     49
      10: new           #28                 // class java/lang/IndexOutOfBoundsException
      13: dup
      14: new           #29                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #31                 // String Invalid index:
      23: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload_1
      27: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: ldc           #34                 // String , size=
      32: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_0
      36: invokevirtual #9                  // Method size:()I
      39: invokevirtual #33                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      42: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #36                 // Method java/lang/IndexOutOfBoundsException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: return

  static int access$500(org.apache.commons.collections4.list.TreeList);
    Code:
       0: aload_0
       1: getfield      #1                  // Field modCount:I
       4: ireturn

  static org.apache.commons.collections4.list.TreeList$AVLNode access$600(org.apache.commons.collections4.list.TreeList);
    Code:
       0: aload_0
       1: getfield      #2                  // Field root:Lorg/apache/commons/collections4/list/TreeList$AVLNode;
       4: areturn

  static int access$700(org.apache.commons.collections4.list.TreeList);
    Code:
       0: aload_0
       1: getfield      #1                  // Field modCount:I
       4: ireturn
}
