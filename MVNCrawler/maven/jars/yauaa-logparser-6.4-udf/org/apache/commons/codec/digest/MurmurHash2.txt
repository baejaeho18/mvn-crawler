Compiled from "MurmurHash2.java"
public final class org.apache.commons.codec.digest.MurmurHash2 {
  private static final int M32;

  private static final int R32;

  private static final long M64;

  private static final int R64;

  private org.apache.commons.codec.digest.MurmurHash2();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static int hash32(byte[], int, int);
    Code:
       0: iload_2
       1: iload_1
       2: ixor
       3: istore_3
       4: iload_1
       5: iconst_2
       6: ishr
       7: istore        4
       9: iconst_0
      10: istore        5
      12: iload         5
      14: iload         4
      16: if_icmpge     73
      19: iload         5
      21: iconst_2
      22: ishl
      23: istore        6
      25: aload_0
      26: iload         6
      28: invokestatic  #2                  // Method getLittleEndianInt:([BI)I
      31: istore        7
      33: iload         7
      35: ldc           #4                  // int 1540483477
      37: imul
      38: istore        7
      40: iload         7
      42: iload         7
      44: bipush        24
      46: iushr
      47: ixor
      48: istore        7
      50: iload         7
      52: ldc           #4                  // int 1540483477
      54: imul
      55: istore        7
      57: iload_3
      58: ldc           #4                  // int 1540483477
      60: imul
      61: istore_3
      62: iload_3
      63: iload         7
      65: ixor
      66: istore_3
      67: iinc          5, 1
      70: goto          12
      73: iload         4
      75: iconst_2
      76: ishl
      77: istore        5
      79: iload_1
      80: iload         5
      82: isub
      83: tableswitch   { // 1 to 3
                     1: 140
                     2: 124
                     3: 108
               default: 156
          }
     108: iload_3
     109: aload_0
     110: iload         5
     112: iconst_2
     113: iadd
     114: baload
     115: sipush        255
     118: iand
     119: bipush        16
     121: ishl
     122: ixor
     123: istore_3
     124: iload_3
     125: aload_0
     126: iload         5
     128: iconst_1
     129: iadd
     130: baload
     131: sipush        255
     134: iand
     135: bipush        8
     137: ishl
     138: ixor
     139: istore_3
     140: iload_3
     141: aload_0
     142: iload         5
     144: baload
     145: sipush        255
     148: iand
     149: ixor
     150: istore_3
     151: iload_3
     152: ldc           #4                  // int 1540483477
     154: imul
     155: istore_3
     156: iload_3
     157: iload_3
     158: bipush        13
     160: iushr
     161: ixor
     162: istore_3
     163: iload_3
     164: ldc           #4                  // int 1540483477
     166: imul
     167: istore_3
     168: iload_3
     169: iload_3
     170: bipush        15
     172: iushr
     173: ixor
     174: istore_3
     175: iload_3
     176: ireturn

  public static int hash32(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #5                  // int -1756908916
       4: invokestatic  #6                  // Method hash32:([BII)I
       7: ireturn

  public static int hash32(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: astore_1
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokestatic  #8                  // Method hash32:([BI)I
      11: ireturn

  public static int hash32(java.lang.String, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: iload_2
       4: iadd
       5: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;
       8: invokestatic  #10                 // Method hash32:(Ljava/lang/String;)I
      11: ireturn

  public static long hash64(byte[], int, int);
    Code:
       0: iload_2
       1: i2l
       2: ldc2_w        #11                 // long 4294967295l
       5: land
       6: iload_1
       7: i2l
       8: ldc2_w        #13                 // long -4132994306676758123l
      11: lmul
      12: lxor
      13: lstore_3
      14: iload_1
      15: iconst_3
      16: ishr
      17: istore        5
      19: iconst_0
      20: istore        6
      22: iload         6
      24: iload         5
      26: if_icmpge     86
      29: iload         6
      31: iconst_3
      32: ishl
      33: istore        7
      35: aload_0
      36: iload         7
      38: invokestatic  #15                 // Method getLittleEndianLong:([BI)J
      41: lstore        8
      43: lload         8
      45: ldc2_w        #13                 // long -4132994306676758123l
      48: lmul
      49: lstore        8
      51: lload         8
      53: lload         8
      55: bipush        47
      57: lushr
      58: lxor
      59: lstore        8
      61: lload         8
      63: ldc2_w        #13                 // long -4132994306676758123l
      66: lmul
      67: lstore        8
      69: lload_3
      70: lload         8
      72: lxor
      73: lstore_3
      74: lload_3
      75: ldc2_w        #13                 // long -4132994306676758123l
      78: lmul
      79: lstore_3
      80: iinc          6, 1
      83: goto          22
      86: iload         5
      88: iconst_3
      89: ishl
      90: istore        6
      92: iload_1
      93: iload         6
      95: isub
      96: tableswitch   { // 1 to 7
                     1: 243
                     2: 226
                     3: 209
                     4: 192
                     5: 175
                     6: 158
                     7: 140
               default: 261
          }
     140: lload_3
     141: aload_0
     142: iload         6
     144: bipush        6
     146: iadd
     147: baload
     148: i2l
     149: ldc2_w        #16                 // long 255l
     152: land
     153: bipush        48
     155: lshl
     156: lxor
     157: lstore_3
     158: lload_3
     159: aload_0
     160: iload         6
     162: iconst_5
     163: iadd
     164: baload
     165: i2l
     166: ldc2_w        #16                 // long 255l
     169: land
     170: bipush        40
     172: lshl
     173: lxor
     174: lstore_3
     175: lload_3
     176: aload_0
     177: iload         6
     179: iconst_4
     180: iadd
     181: baload
     182: i2l
     183: ldc2_w        #16                 // long 255l
     186: land
     187: bipush        32
     189: lshl
     190: lxor
     191: lstore_3
     192: lload_3
     193: aload_0
     194: iload         6
     196: iconst_3
     197: iadd
     198: baload
     199: i2l
     200: ldc2_w        #16                 // long 255l
     203: land
     204: bipush        24
     206: lshl
     207: lxor
     208: lstore_3
     209: lload_3
     210: aload_0
     211: iload         6
     213: iconst_2
     214: iadd
     215: baload
     216: i2l
     217: ldc2_w        #16                 // long 255l
     220: land
     221: bipush        16
     223: lshl
     224: lxor
     225: lstore_3
     226: lload_3
     227: aload_0
     228: iload         6
     230: iconst_1
     231: iadd
     232: baload
     233: i2l
     234: ldc2_w        #16                 // long 255l
     237: land
     238: bipush        8
     240: lshl
     241: lxor
     242: lstore_3
     243: lload_3
     244: aload_0
     245: iload         6
     247: baload
     248: i2l
     249: ldc2_w        #16                 // long 255l
     252: land
     253: lxor
     254: lstore_3
     255: lload_3
     256: ldc2_w        #13                 // long -4132994306676758123l
     259: lmul
     260: lstore_3
     261: lload_3
     262: lload_3
     263: bipush        47
     265: lushr
     266: lxor
     267: lstore_3
     268: lload_3
     269: ldc2_w        #13                 // long -4132994306676758123l
     272: lmul
     273: lstore_3
     274: lload_3
     275: lload_3
     276: bipush        47
     278: lushr
     279: lxor
     280: lstore_3
     281: lload_3
     282: lreturn

  public static long hash64(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: ldc           #18                 // int -512093083
       4: invokestatic  #19                 // Method hash64:([BII)J
       7: lreturn

  public static long hash64(java.lang.String);
    Code:
       0: aload_0
       1: invokestatic  #7                  // Method org/apache/commons/codec/binary/StringUtils.getBytesUtf8:(Ljava/lang/String;)[B
       4: astore_1
       5: aload_1
       6: aload_1
       7: arraylength
       8: invokestatic  #20                 // Method hash64:([BI)J
      11: lreturn

  public static long hash64(java.lang.String, int, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_1
       3: iload_2
       4: iadd
       5: invokevirtual #9                  // Method java/lang/String.substring:(II)Ljava/lang/String;
       8: invokestatic  #21                 // Method hash64:(Ljava/lang/String;)J
      11: lreturn

  private static int getLittleEndianInt(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: sipush        255
       6: iand
       7: aload_0
       8: iload_1
       9: iconst_1
      10: iadd
      11: baload
      12: sipush        255
      15: iand
      16: bipush        8
      18: ishl
      19: ior
      20: aload_0
      21: iload_1
      22: iconst_2
      23: iadd
      24: baload
      25: sipush        255
      28: iand
      29: bipush        16
      31: ishl
      32: ior
      33: aload_0
      34: iload_1
      35: iconst_3
      36: iadd
      37: baload
      38: sipush        255
      41: iand
      42: bipush        24
      44: ishl
      45: ior
      46: ireturn

  private static long getLittleEndianLong(byte[], int);
    Code:
       0: aload_0
       1: iload_1
       2: baload
       3: i2l
       4: ldc2_w        #16                 // long 255l
       7: land
       8: aload_0
       9: iload_1
      10: iconst_1
      11: iadd
      12: baload
      13: i2l
      14: ldc2_w        #16                 // long 255l
      17: land
      18: bipush        8
      20: lshl
      21: lor
      22: aload_0
      23: iload_1
      24: iconst_2
      25: iadd
      26: baload
      27: i2l
      28: ldc2_w        #16                 // long 255l
      31: land
      32: bipush        16
      34: lshl
      35: lor
      36: aload_0
      37: iload_1
      38: iconst_3
      39: iadd
      40: baload
      41: i2l
      42: ldc2_w        #16                 // long 255l
      45: land
      46: bipush        24
      48: lshl
      49: lor
      50: aload_0
      51: iload_1
      52: iconst_4
      53: iadd
      54: baload
      55: i2l
      56: ldc2_w        #16                 // long 255l
      59: land
      60: bipush        32
      62: lshl
      63: lor
      64: aload_0
      65: iload_1
      66: iconst_5
      67: iadd
      68: baload
      69: i2l
      70: ldc2_w        #16                 // long 255l
      73: land
      74: bipush        40
      76: lshl
      77: lor
      78: aload_0
      79: iload_1
      80: bipush        6
      82: iadd
      83: baload
      84: i2l
      85: ldc2_w        #16                 // long 255l
      88: land
      89: bipush        48
      91: lshl
      92: lor
      93: aload_0
      94: iload_1
      95: bipush        7
      97: iadd
      98: baload
      99: i2l
     100: ldc2_w        #16                 // long 255l
     103: land
     104: bipush        56
     106: lshl
     107: lor
     108: lreturn
}
