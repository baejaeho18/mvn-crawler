Compiled from "MurmurHash3.java"
public class org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32 extends org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32x86 {
  public org.apache.commons.codec.digest.MurmurHash3$IncrementalHash32();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/apache/commons/codec/digest/MurmurHash3$IncrementalHash32x86."<init>":()V
       4: return

  int finalise(int, int, byte[], int);
    Code:
       0: iload_1
       1: istore        5
       3: iconst_0
       4: istore        6
       6: iload_2
       7: tableswitch   { // 1 to 3
                     1: 54
                     2: 43
                     3: 32
               default: 92
          }
      32: iload         6
      34: aload_3
      35: iconst_2
      36: baload
      37: bipush        16
      39: ishl
      40: ixor
      41: istore        6
      43: iload         6
      45: aload_3
      46: iconst_1
      47: baload
      48: bipush        8
      50: ishl
      51: ixor
      52: istore        6
      54: iload         6
      56: aload_3
      57: iconst_0
      58: baload
      59: ixor
      60: istore        6
      62: iload         6
      64: ldc           #3                  // int -862048943
      66: imul
      67: istore        6
      69: iload         6
      71: bipush        15
      73: invokestatic  #4                  // Method java/lang/Integer.rotateLeft:(II)I
      76: istore        6
      78: iload         6
      80: ldc           #5                  // int 461845907
      82: imul
      83: istore        6
      85: iload         5
      87: iload         6
      89: ixor
      90: istore        5
      92: iload         5
      94: iload         4
      96: ixor
      97: istore        5
      99: iload         5
     101: invokestatic  #6                  // Method org/apache/commons/codec/digest/MurmurHash3.access$200:(I)I
     104: ireturn
}
