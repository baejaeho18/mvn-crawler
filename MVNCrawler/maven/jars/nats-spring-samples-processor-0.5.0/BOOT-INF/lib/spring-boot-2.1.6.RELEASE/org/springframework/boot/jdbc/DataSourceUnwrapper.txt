Compiled from "DataSourceUnwrapper.java"
public final class org.springframework.boot.jdbc.DataSourceUnwrapper {
  private static final boolean DELEGATING_DATA_SOURCE_PRESENT;

  private org.springframework.boot.jdbc.DataSourceUnwrapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> T unwrap(javax.sql.DataSource, java.lang.Class<T>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
       5: ifeq          14
       8: aload_1
       9: aload_0
      10: invokevirtual #3                  // Method java/lang/Class.cast:(Ljava/lang/Object;)Ljava/lang/Object;
      13: areturn
      14: aload_0
      15: aload_1
      16: invokestatic  #4                  // Method safeUnwrap:(Ljava/sql/Wrapper;Ljava/lang/Class;)Ljava/lang/Object;
      19: astore_2
      20: aload_2
      21: ifnull        26
      24: aload_2
      25: areturn
      26: getstatic     #5                  // Field DELEGATING_DATA_SOURCE_PRESENT:Z
      29: ifeq          47
      32: aload_0
      33: invokestatic  #6                  // Method org/springframework/boot/jdbc/DataSourceUnwrapper$DelegatingDataSourceUnwrapper.access$000:(Ljavax/sql/DataSource;)Ljavax/sql/DataSource;
      36: astore_3
      37: aload_3
      38: ifnull        47
      41: aload_3
      42: aload_1
      43: invokestatic  #7                  // Method unwrap:(Ljavax/sql/DataSource;Ljava/lang/Class;)Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: invokestatic  #8                  // Method org/springframework/aop/support/AopUtils.isAopProxy:(Ljava/lang/Object;)Z
      51: ifeq          75
      54: aload_0
      55: invokestatic  #9                  // Method org/springframework/aop/framework/AopProxyUtils.getSingletonTarget:(Ljava/lang/Object;)Ljava/lang/Object;
      58: astore_3
      59: aload_3
      60: instanceof    #10                 // class javax/sql/DataSource
      63: ifeq          75
      66: aload_3
      67: checkcast     #10                 // class javax/sql/DataSource
      70: aload_1
      71: invokestatic  #7                  // Method unwrap:(Ljavax/sql/DataSource;Ljava/lang/Class;)Ljava/lang/Object;
      74: areturn
      75: aconst_null
      76: areturn

  private static <S> S safeUnwrap(java.sql.Wrapper, java.lang.Class<S>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod java/sql/Wrapper.isWrapperFor:(Ljava/lang/Class;)Z
       7: ifeq          18
      10: aload_0
      11: aload_1
      12: invokeinterface #12,  2           // InterfaceMethod java/sql/Wrapper.unwrap:(Ljava/lang/Class;)Ljava/lang/Object;
      17: areturn
      18: goto          22
      21: astore_2
      22: aconst_null
      23: areturn
    Exception table:
       from    to  target type
           0    17    21   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #14                 // String org.springframework.jdbc.datasource.DelegatingDataSource
       2: ldc           #15                 // class org/springframework/boot/jdbc/DataSourceUnwrapper
       4: invokevirtual #16                 // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #17                 // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #5                  // Field DELEGATING_DATA_SOURCE_PRESENT:Z
      13: return
}
