Compiled from "LogbackConfigurator.java"
class org.springframework.boot.logging.logback.LogbackConfigurator {
  private ch.qos.logback.classic.LoggerContext context;

  org.springframework.boot.logging.logback.LogbackConfigurator(ch.qos.logback.classic.LoggerContext);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Context must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
      15: return

  public ch.qos.logback.classic.LoggerContext getContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
       4: areturn

  public java.lang.Object getConfigurationLock();
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
       4: invokevirtual #5                  // Method ch/qos/logback/classic/LoggerContext.getConfigurationLock:()Ljava/lang/Object;
       7: areturn

  public void conversionRule(java.lang.String, java.lang.Class<? extends ch.qos.logback.core.pattern.Converter>);
    Code:
       0: aload_1
       1: ldc           #6                  // String Conversion word must not be empty
       3: invokestatic  #7                  // Method org/springframework/util/Assert.hasLength:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #8                  // String Converter class must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
      16: ldc           #10                 // String PATTERN_RULE_REGISTRY
      18: invokevirtual #11                 // Method ch/qos/logback/classic/LoggerContext.getObject:(Ljava/lang/String;)Ljava/lang/Object;
      21: checkcast     #12                 // class java/util/Map
      24: astore_3
      25: aload_3
      26: ifnonnull     47
      29: new           #13                 // class java/util/HashMap
      32: dup
      33: invokespecial #14                 // Method java/util/HashMap."<init>":()V
      36: astore_3
      37: aload_0
      38: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
      41: ldc           #10                 // String PATTERN_RULE_REGISTRY
      43: aload_3
      44: invokevirtual #15                 // Method ch/qos/logback/classic/LoggerContext.putObject:(Ljava/lang/String;Ljava/lang/Object;)V
      47: aload_3
      48: aload_1
      49: aload_2
      50: invokevirtual #16                 // Method java/lang/Class.getName:()Ljava/lang/String;
      53: invokeinterface #17,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      58: pop
      59: return

  public void appender(java.lang.String, ch.qos.logback.core.Appender<?>);
    Code:
       0: aload_2
       1: aload_1
       2: invokeinterface #18,  2           // InterfaceMethod ch/qos/logback/core/Appender.setName:(Ljava/lang/String;)V
       7: aload_0
       8: aload_2
       9: invokevirtual #19                 // Method start:(Lch/qos/logback/core/spi/LifeCycle;)V
      12: return

  public void logger(java.lang.String, ch.qos.logback.classic.Level);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_1
       4: invokevirtual #20                 // Method logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;Z)V
       7: return

  public void logger(java.lang.String, ch.qos.logback.classic.Level, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: aconst_null
       5: invokevirtual #21                 // Method logger:(Ljava/lang/String;Lch/qos/logback/classic/Level;ZLch/qos/logback/core/Appender;)V
       8: return

  public void logger(java.lang.String, ch.qos.logback.classic.Level, boolean, ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
       4: aload_1
       5: invokevirtual #22                 // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       8: astore        5
      10: aload_2
      11: ifnull        20
      14: aload         5
      16: aload_2
      17: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
      20: aload         5
      22: iload_3
      23: invokevirtual #24                 // Method ch/qos/logback/classic/Logger.setAdditive:(Z)V
      26: aload         4
      28: ifnull        38
      31: aload         5
      33: aload         4
      35: invokevirtual #25                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
      38: return

  public final void root(ch.qos.logback.classic.Level, ch.qos.logback.core.Appender<ch.qos.logback.classic.spi.ILoggingEvent>...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
       4: ldc           #27                 // String ROOT
       6: invokevirtual #22                 // Method ch/qos/logback/classic/LoggerContext.getLogger:(Ljava/lang/String;)Lch/qos/logback/classic/Logger;
       9: astore_3
      10: aload_1
      11: ifnull        19
      14: aload_3
      15: aload_1
      16: invokevirtual #23                 // Method ch/qos/logback/classic/Logger.setLevel:(Lch/qos/logback/classic/Level;)V
      19: aload_2
      20: astore        4
      22: aload         4
      24: arraylength
      25: istore        5
      27: iconst_0
      28: istore        6
      30: iload         6
      32: iload         5
      34: if_icmpge     56
      37: aload         4
      39: iload         6
      41: aaload
      42: astore        7
      44: aload_3
      45: aload         7
      47: invokevirtual #25                 // Method ch/qos/logback/classic/Logger.addAppender:(Lch/qos/logback/core/Appender;)V
      50: iinc          6, 1
      53: goto          30
      56: return

  public void start(ch.qos.logback.core.spi.LifeCycle);
    Code:
       0: aload_1
       1: instanceof    #28                 // class ch/qos/logback/core/spi/ContextAware
       4: ifeq          20
       7: aload_1
       8: checkcast     #28                 // class ch/qos/logback/core/spi/ContextAware
      11: aload_0
      12: getfield      #4                  // Field context:Lch/qos/logback/classic/LoggerContext;
      15: invokeinterface #29,  2           // InterfaceMethod ch/qos/logback/core/spi/ContextAware.setContext:(Lch/qos/logback/core/Context;)V
      20: aload_1
      21: invokeinterface #30,  1           // InterfaceMethod ch/qos/logback/core/spi/LifeCycle.start:()V
      26: return
}
