Compiled from "FileSessionPersistence.java"
class org.springframework.boot.web.embedded.undertow.FileSessionPersistence implements io.undertow.servlet.api.SessionPersistenceManager {
  private final java.io.File dir;

  org.springframework.boot.web.embedded.undertow.FileSessionPersistence(java.io.File);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field dir:Ljava/io/File;
       9: return

  public void persistSessions(java.lang.String, java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_0
       3: aload_1
       4: invokespecial #3                  // Method getSessionFile:(Ljava/lang/String;)Ljava/io/File;
       7: invokespecial #4                  // Method save:(Ljava/util/Map;Ljava/io/File;)V
      10: goto          23
      13: astore_3
      14: getstatic     #6                  // Field io/undertow/servlet/UndertowServletLogger.ROOT_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      17: aload_3
      18: invokeinterface #7,  2            // InterfaceMethod io/undertow/servlet/UndertowServletLogger.failedToPersistSessions:(Ljava/lang/Exception;)V
      23: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  private void save(java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession>, java.io.File) throws java.io.IOException;
    Code:
       0: new           #8                  // class java/io/ObjectOutputStream
       3: dup
       4: new           #9                  // class java/io/FileOutputStream
       7: dup
       8: aload_2
       9: invokespecial #10                 // Method java/io/FileOutputStream."<init>":(Ljava/io/File;)V
      12: invokespecial #11                 // Method java/io/ObjectOutputStream."<init>":(Ljava/io/OutputStream;)V
      15: astore_3
      16: aconst_null
      17: astore        4
      19: aload_0
      20: aload_1
      21: aload_3
      22: invokespecial #12                 // Method save:(Ljava/util/Map;Ljava/io/ObjectOutputStream;)V
      25: aload_3
      26: ifnull        106
      29: aload         4
      31: ifnull        53
      34: aload_3
      35: invokevirtual #13                 // Method java/io/ObjectOutputStream.close:()V
      38: goto          106
      41: astore        5
      43: aload         4
      45: aload         5
      47: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      50: goto          106
      53: aload_3
      54: invokevirtual #13                 // Method java/io/ObjectOutputStream.close:()V
      57: goto          106
      60: astore        5
      62: aload         5
      64: astore        4
      66: aload         5
      68: athrow
      69: astore        6
      71: aload_3
      72: ifnull        103
      75: aload         4
      77: ifnull        99
      80: aload_3
      81: invokevirtual #13                 // Method java/io/ObjectOutputStream.close:()V
      84: goto          103
      87: astore        7
      89: aload         4
      91: aload         7
      93: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      96: goto          103
      99: aload_3
     100: invokevirtual #13                 // Method java/io/ObjectOutputStream.close:()V
     103: aload         6
     105: athrow
     106: return
    Exception table:
       from    to  target type
          34    38    41   Class java/lang/Throwable
          19    25    60   Class java/lang/Throwable
          19    25    69   any
          80    84    87   Class java/lang/Throwable
          60    71    69   any

  private void save(java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession>, java.io.ObjectOutputStream) throws java.io.IOException;
    Code:
       0: new           #16                 // class java/util/LinkedHashMap
       3: dup
       4: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":()V
       7: astore_3
       8: aload_1
       9: aload_3
      10: invokedynamic #18,  0             // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      15: invokeinterface #19,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      20: aload_2
      21: aload_3
      22: invokevirtual #20                 // Method java/io/ObjectOutputStream.writeObject:(Ljava/lang/Object;)V
      25: return

  public java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession> loadSessionAttributes(java.lang.String, java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getSessionFile:(Ljava/lang/String;)Ljava/io/File;
       5: astore_3
       6: aload_3
       7: invokevirtual #21                 // Method java/io/File.exists:()Z
      10: ifeq          20
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokespecial #22                 // Method load:(Ljava/io/File;Ljava/lang/ClassLoader;)Ljava/util/Map;
      19: areturn
      20: goto          33
      23: astore_3
      24: getstatic     #6                  // Field io/undertow/servlet/UndertowServletLogger.ROOT_LOGGER:Lio/undertow/servlet/UndertowServletLogger;
      27: aload_3
      28: invokeinterface #23,  2           // InterfaceMethod io/undertow/servlet/UndertowServletLogger.failedtoLoadPersistentSessions:(Ljava/lang/Exception;)V
      33: aconst_null
      34: areturn
    Exception table:
       from    to  target type
           0    19    23   Class java/lang/Exception

  private java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession> load(java.io.File, java.lang.ClassLoader) throws java.io.IOException, java.lang.ClassNotFoundException;
    Code:
       0: new           #24                 // class org/springframework/core/ConfigurableObjectInputStream
       3: dup
       4: new           #25                 // class java/io/FileInputStream
       7: dup
       8: aload_1
       9: invokespecial #26                 // Method java/io/FileInputStream."<init>":(Ljava/io/File;)V
      12: aload_2
      13: invokespecial #27                 // Method org/springframework/core/ConfigurableObjectInputStream."<init>":(Ljava/io/InputStream;Ljava/lang/ClassLoader;)V
      16: astore_3
      17: aconst_null
      18: astore        4
      20: aload_0
      21: aload_3
      22: invokespecial #28                 // Method load:(Ljava/io/ObjectInputStream;)Ljava/util/Map;
      25: astore        5
      27: aload_3
      28: ifnull        59
      31: aload         4
      33: ifnull        55
      36: aload_3
      37: invokevirtual #29                 // Method java/io/ObjectInputStream.close:()V
      40: goto          59
      43: astore        6
      45: aload         4
      47: aload         6
      49: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      52: goto          59
      55: aload_3
      56: invokevirtual #29                 // Method java/io/ObjectInputStream.close:()V
      59: aload         5
      61: areturn
      62: astore        5
      64: aload         5
      66: astore        4
      68: aload         5
      70: athrow
      71: astore        7
      73: aload_3
      74: ifnull        105
      77: aload         4
      79: ifnull        101
      82: aload_3
      83: invokevirtual #29                 // Method java/io/ObjectInputStream.close:()V
      86: goto          105
      89: astore        8
      91: aload         4
      93: aload         8
      95: invokevirtual #15                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      98: goto          105
     101: aload_3
     102: invokevirtual #29                 // Method java/io/ObjectInputStream.close:()V
     105: aload         7
     107: athrow
    Exception table:
       from    to  target type
          36    40    43   Class java/lang/Throwable
          20    27    62   Class java/lang/Throwable
          20    27    71   any
          82    86    89   Class java/lang/Throwable
          62    73    71   any

  private java.util.Map<java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession> load(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #30                 // Method readSession:(Ljava/io/ObjectInputStream;)Ljava/util/Map;
       5: astore_2
       6: invokestatic  #31                 // Method java/lang/System.currentTimeMillis:()J
       9: lstore_3
      10: new           #16                 // class java/util/LinkedHashMap
      13: dup
      14: invokespecial #17                 // Method java/util/LinkedHashMap."<init>":()V
      17: astore        5
      19: aload_2
      20: lload_3
      21: aload         5
      23: invokedynamic #32,  0             // InvokeDynamic #1:accept:(JLjava/util/Map;)Ljava/util/function/BiConsumer;
      28: invokeinterface #19,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      33: aload         5
      35: areturn

  private java.util.Map<java.lang.String, org.springframework.boot.web.embedded.undertow.FileSessionPersistence$SerializablePersistentSession> readSession(java.io.ObjectInputStream) throws java.lang.ClassNotFoundException, java.io.IOException;
    Code:
       0: aload_1
       1: invokevirtual #33                 // Method java/io/ObjectInputStream.readObject:()Ljava/lang/Object;
       4: checkcast     #34                 // class java/util/Map
       7: areturn

  private java.io.File getSessionFile(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field dir:Ljava/io/File;
       4: invokevirtual #21                 // Method java/io/File.exists:()Z
       7: ifne          18
      10: aload_0
      11: getfield      #2                  // Field dir:Ljava/io/File;
      14: invokevirtual #35                 // Method java/io/File.mkdirs:()Z
      17: pop
      18: new           #36                 // class java/io/File
      21: dup
      22: aload_0
      23: getfield      #2                  // Field dir:Ljava/io/File;
      26: new           #37                 // class java/lang/StringBuilder
      29: dup
      30: invokespecial #38                 // Method java/lang/StringBuilder."<init>":()V
      33: aload_1
      34: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #40                 // String .session
      39: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: invokevirtual #41                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      45: invokespecial #42                 // Method java/io/File."<init>":(Ljava/io/File;Ljava/lang/String;)V
      48: areturn

  public void clear(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method getSessionFile:(Ljava/lang/String;)Ljava/io/File;
       5: invokevirtual #43                 // Method java/io/File.delete:()Z
       8: pop
       9: return

  private static void lambda$load$1(long, java.util.Map, java.lang.String, org.springframework.boot.web.embedded.undertow.FileSessionPersistence$SerializablePersistentSession);
    Code:
       0: aload         4
       2: invokevirtual #44                 // Method org/springframework/boot/web/embedded/undertow/FileSessionPersistence$SerializablePersistentSession.getPersistentSession:()Lio/undertow/servlet/api/SessionPersistenceManager$PersistentSession;
       5: astore        5
       7: aload         5
       9: invokevirtual #45                 // Method io/undertow/servlet/api/SessionPersistenceManager$PersistentSession.getExpiration:()Ljava/util/Date;
      12: invokevirtual #46                 // Method java/util/Date.getTime:()J
      15: lload_0
      16: lcmp
      17: ifle          30
      20: aload_2
      21: aload_3
      22: aload         5
      24: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: return

  private static void lambda$save$0(java.util.Map, java.lang.String, io.undertow.servlet.api.SessionPersistenceManager$PersistentSession);
    Code:
       0: aload_0
       1: aload_1
       2: new           #48                 // class org/springframework/boot/web/embedded/undertow/FileSessionPersistence$SerializablePersistentSession
       5: dup
       6: aload_2
       7: invokespecial #49                 // Method org/springframework/boot/web/embedded/undertow/FileSessionPersistence$SerializablePersistentSession."<init>":(Lio/undertow/servlet/api/SessionPersistenceManager$PersistentSession;)V
      10: invokeinterface #47,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #50                 // class java/io/Serializable
      18: pop
      19: return
}
