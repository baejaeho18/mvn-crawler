Compiled from "IterableConfigurationPropertySource.java"
public interface org.springframework.boot.context.properties.source.IterableConfigurationPropertySource extends org.springframework.boot.context.properties.source.ConfigurationPropertySource, java.lang.Iterable<org.springframework.boot.context.properties.source.ConfigurationPropertyName> {
  public default java.util.Iterator<org.springframework.boot.context.properties.source.ConfigurationPropertyName> iterator();
    Code:
       0: aload_0
       1: invokeinterface #1,  1            // InterfaceMethod stream:()Ljava/util/stream/Stream;
       6: invokeinterface #2,  1            // InterfaceMethod java/util/stream/Stream.iterator:()Ljava/util/Iterator;
      11: areturn

  public abstract java.util.stream.Stream<org.springframework.boot.context.properties.source.ConfigurationPropertyName> stream();

  public default org.springframework.boot.context.properties.source.ConfigurationPropertyState containsDescendantOf(org.springframework.boot.context.properties.source.ConfigurationPropertyName);
    Code:
       0: aload_0
       1: aload_1
       2: dup
       3: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       6: pop
       7: invokedynamic #4,  0              // InvokeDynamic #0:test:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyName;)Ljava/util/function/Predicate;
      12: invokestatic  #5                  // Method org/springframework/boot/context/properties/source/ConfigurationPropertyState.search:(Ljava/lang/Iterable;Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/ConfigurationPropertyState;
      15: areturn

  public default org.springframework.boot.context.properties.source.IterableConfigurationPropertySource filter(java.util.function.Predicate<org.springframework.boot.context.properties.source.ConfigurationPropertyName>);
    Code:
       0: new           #6                  // class org/springframework/boot/context/properties/source/FilteredIterableConfigurationPropertiesSource
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #7                  // Method org/springframework/boot/context/properties/source/FilteredIterableConfigurationPropertiesSource."<init>":(Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;Ljava/util/function/Predicate;)V
       9: areturn

  public default org.springframework.boot.context.properties.source.IterableConfigurationPropertySource withAliases(org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases);
    Code:
       0: new           #8                  // class org/springframework/boot/context/properties/source/AliasedIterableConfigurationPropertySource
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #9                  // Method org/springframework/boot/context/properties/source/AliasedIterableConfigurationPropertySource."<init>":(Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)V
       9: areturn

  public default org.springframework.boot.context.properties.source.ConfigurationPropertySource withAliases(org.springframework.boot.context.properties.source.ConfigurationPropertyNameAliases);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #10,  2           // InterfaceMethod withAliases:(Lorg/springframework/boot/context/properties/source/ConfigurationPropertyNameAliases;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
       7: areturn

  public default org.springframework.boot.context.properties.source.ConfigurationPropertySource filter(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #11,  2           // InterfaceMethod filter:(Ljava/util/function/Predicate;)Lorg/springframework/boot/context/properties/source/IterableConfigurationPropertySource;
       7: areturn
}
