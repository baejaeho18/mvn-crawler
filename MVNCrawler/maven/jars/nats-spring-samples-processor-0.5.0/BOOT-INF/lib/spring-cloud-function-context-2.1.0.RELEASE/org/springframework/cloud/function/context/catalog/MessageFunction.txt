Compiled from "MessageFunction.java"
public class org.springframework.cloud.function.context.catalog.MessageFunction implements java.util.function.Function<org.reactivestreams.Publisher<org.springframework.messaging.Message<?>>, org.reactivestreams.Publisher<org.springframework.messaging.Message<?>>> {
  private final java.util.function.Function<?, ?> delegate;

  public org.springframework.cloud.function.context.catalog.MessageFunction(java.util.function.Function<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field delegate:Ljava/util/function/Function;
       9: return

  public org.reactivestreams.Publisher<org.springframework.messaging.Message<?>> apply(org.reactivestreams.Publisher<org.springframework.messaging.Message<?>>);
    Code:
       0: aload_1
       1: invokestatic  #3                  // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field delegate:Ljava/util/function/Function;
       9: instanceof    #4                  // class org/springframework/cloud/function/core/FluxFunction
      12: ifeq          40
      15: aload_0
      16: getfield      #2                  // Field delegate:Ljava/util/function/Function;
      19: checkcast     #4                  // class org/springframework/cloud/function/core/FluxFunction
      22: invokevirtual #5                  // Method org/springframework/cloud/function/core/FluxFunction.getTarget:()Ljava/lang/Object;
      25: checkcast     #6                  // class java/util/function/Function
      28: astore_3
      29: aload_2
      30: aload_3
      31: invokedynamic #7,  0              // InvokeDynamic #0:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      36: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      39: areturn
      40: aload_0
      41: getfield      #2                  // Field delegate:Ljava/util/function/Function;
      44: instanceof    #9                  // class org/springframework/cloud/function/core/MonoToFluxFunction
      47: ifeq          78
      50: aload_0
      51: getfield      #2                  // Field delegate:Ljava/util/function/Function;
      54: checkcast     #9                  // class org/springframework/cloud/function/core/MonoToFluxFunction
      57: invokevirtual #10                 // Method org/springframework/cloud/function/core/MonoToFluxFunction.getTarget:()Ljava/lang/Object;
      60: checkcast     #6                  // class java/util/function/Function
      63: astore_3
      64: aload_2
      65: invokevirtual #11                 // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
      68: aload_3
      69: invokedynamic #12,  0             // InvokeDynamic #1:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      74: invokevirtual #13                 // Method reactor/core/publisher/Mono.flatMapMany:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      77: areturn
      78: aload_0
      79: getfield      #2                  // Field delegate:Ljava/util/function/Function;
      82: instanceof    #14                 // class org/springframework/cloud/function/core/FluxToMonoFunction
      85: ifeq          142
      88: aload_0
      89: getfield      #2                  // Field delegate:Ljava/util/function/Function;
      92: checkcast     #14                 // class org/springframework/cloud/function/core/FluxToMonoFunction
      95: invokevirtual #15                 // Method org/springframework/cloud/function/core/FluxToMonoFunction.getTarget:()Ljava/lang/Object;
      98: checkcast     #6                  // class java/util/function/Function
     101: astore_3
     102: new           #16                 // class java/util/concurrent/atomic/AtomicReference
     105: dup
     106: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     109: astore        4
     111: aload_3
     112: aload_2
     113: aload         4
     115: invokedynamic #18,  0             // InvokeDynamic #2:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
     120: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     123: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     128: checkcast     #20                 // class reactor/core/publisher/Mono
     131: aload         4
     133: invokedynamic #21,  0             // InvokeDynamic #3:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
     138: invokevirtual #22                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     141: areturn
     142: aload_0
     143: getfield      #2                  // Field delegate:Ljava/util/function/Function;
     146: instanceof    #23                 // class org/springframework/cloud/function/core/FluxConsumer
     149: ifeq          199
     152: aload_0
     153: getfield      #2                  // Field delegate:Ljava/util/function/Function;
     156: checkcast     #23                 // class org/springframework/cloud/function/core/FluxConsumer
     159: astore_3
     160: new           #16                 // class java/util/concurrent/atomic/AtomicReference
     163: dup
     164: invokespecial #17                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
     167: astore        4
     169: aload_3
     170: aload_2
     171: aload         4
     173: invokedynamic #24,  0             // InvokeDynamic #4:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
     178: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     181: invokevirtual #25                 // Method org/springframework/cloud/function/core/FluxConsumer.apply:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Mono;
     184: astore        5
     186: aload         5
     188: aload         4
     190: invokedynamic #26,  0             // InvokeDynamic #5:apply:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
     195: invokevirtual #22                 // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
     198: areturn
     199: aload_0
     200: getfield      #2                  // Field delegate:Ljava/util/function/Function;
     203: astore_3
     204: aload_2
     205: aload_3
     206: invokedynamic #27,  0             // InvokeDynamic #6:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
     211: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     214: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class org/reactivestreams/Publisher
       5: invokevirtual #29                 // Method apply:(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
       8: areturn

  private static org.springframework.messaging.Message lambda$apply$7(java.util.function.Function, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #30,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       7: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokestatic  #31                 // Method org/springframework/messaging/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
      15: aload_1
      16: invokeinterface #32,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      21: invokevirtual #33                 // Method org/springframework/messaging/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
      24: invokevirtual #34                 // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      27: areturn

  private static org.springframework.messaging.Message lambda$apply$6(java.util.concurrent.atomic.AtomicReference, java.lang.Void);
    Code:
       0: aconst_null
       1: aload_0
       2: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       5: checkcast     #36                 // class org/springframework/messaging/MessageHeaders
       8: invokestatic  #37                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      11: areturn

  private static java.lang.Object lambda$apply$5(java.util.concurrent.atomic.AtomicReference, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #32,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       7: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_1
      11: invokeinterface #30,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      16: areturn

  private static org.springframework.messaging.Message lambda$apply$4(java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/springframework/messaging/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
       4: aload_0
       5: invokevirtual #35                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       8: checkcast     #39                 // class java/util/Map
      11: invokevirtual #33                 // Method org/springframework/messaging/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
      14: invokevirtual #34                 // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      17: areturn

  private static java.lang.Object lambda$apply$3(java.util.concurrent.atomic.AtomicReference, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #32,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       7: invokevirtual #38                 // Method java/util/concurrent/atomic/AtomicReference.set:(Ljava/lang/Object;)V
      10: aload_1
      11: invokeinterface #30,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      16: areturn

  private static org.reactivestreams.Publisher lambda$apply$2(java.util.function.Function, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #30,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       7: invokestatic  #40                 // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      10: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      15: checkcast     #41                 // class reactor/core/publisher/Flux
      18: aload_1
      19: invokedynamic #42,  0             // InvokeDynamic #7:apply:(Lorg/springframework/messaging/Message;)Ljava/util/function/Function;
      24: invokevirtual #8                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      27: areturn

  private static org.springframework.messaging.Message lambda$null$1(org.springframework.messaging.Message, java.lang.Object);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/springframework/messaging/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
       4: aload_0
       5: invokeinterface #32,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      10: invokevirtual #33                 // Method org/springframework/messaging/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
      13: invokevirtual #34                 // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      16: areturn

  private static org.springframework.messaging.Message lambda$apply$0(java.util.function.Function, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #30,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       7: invokeinterface #19,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      12: invokestatic  #31                 // Method org/springframework/messaging/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
      15: aload_1
      16: invokeinterface #32,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      21: invokevirtual #33                 // Method org/springframework/messaging/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
      24: invokevirtual #34                 // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      27: areturn
}
