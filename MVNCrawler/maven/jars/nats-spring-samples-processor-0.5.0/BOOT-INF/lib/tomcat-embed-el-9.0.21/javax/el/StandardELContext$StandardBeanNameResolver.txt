Compiled from "StandardELContext.java"
class javax.el.StandardELContext$StandardBeanNameResolver extends javax.el.BeanNameResolver {
  private final java.util.Map<java.lang.String, java.lang.Object> beans;

  public javax.el.StandardELContext$StandardBeanNameResolver(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/el/BeanNameResolver."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field beans:Ljava/util/Map;
       9: return

  public boolean isNameResolved(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field beans:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public java.lang.Object getBean(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field beans:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #4,  2            // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  public void setBeanValue(java.lang.String, java.lang.Object) throws javax.el.PropertyNotWritableException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field beans:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #5,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public boolean isReadOnly(java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public boolean canCreateBean(java.lang.String);
    Code:
       0: iconst_1
       1: ireturn
}
