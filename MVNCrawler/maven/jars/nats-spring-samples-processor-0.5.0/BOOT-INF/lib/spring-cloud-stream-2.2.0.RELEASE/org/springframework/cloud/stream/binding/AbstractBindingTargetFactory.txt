Compiled from "AbstractBindingTargetFactory.java"
public abstract class org.springframework.cloud.stream.binding.AbstractBindingTargetFactory<T> implements org.springframework.cloud.stream.binding.BindingTargetFactory {
  private final java.lang.Class<T> bindingTargetType;

  protected org.springframework.cloud.stream.binding.AbstractBindingTargetFactory(java.lang.Class<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String The binding target type cannot be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field bindingTargetType:Ljava/lang/Class;
      15: return

  public final boolean canCreate(java.lang.Class<?>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #4                  // Field bindingTargetType:Ljava/lang/Class;
       5: invokevirtual #5                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       8: ireturn

  public abstract T createInput(java.lang.String);

  public abstract T createOutput(java.lang.String);
}
