Compiled from "KryoMessageConverter.java"
public class org.springframework.cloud.stream.converter.KryoMessageConverter implements org.springframework.messaging.converter.SmartMessageConverter {
  public static final java.lang.String KRYO_MIME_TYPE;

  protected final com.esotericsoftware.kryo.pool.KryoPool pool;

  private final org.springframework.integration.codec.kryo.CompositeKryoRegistrar kryoRegistrar;

  private final boolean useReferences;

  private final java.util.List<org.springframework.util.MimeType> supportedMimeTypes;

  private java.util.concurrent.ConcurrentMap<java.lang.String, org.springframework.util.MimeType> mimeTypesCache;

  private org.springframework.messaging.converter.ContentTypeResolver contentTypeResolver;

  public org.springframework.cloud.stream.converter.KryoMessageConverter(java.util.List<org.springframework.integration.codec.kryo.KryoRegistrar>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      12: putfield      #4                  // Field mimeTypesCache:Ljava/util/concurrent/ConcurrentMap;
      15: aload_0
      16: new           #5                  // class org/springframework/messaging/converter/DefaultContentTypeResolver
      19: dup
      20: invokespecial #6                  // Method org/springframework/messaging/converter/DefaultContentTypeResolver."<init>":()V
      23: putfield      #7                  // Field contentTypeResolver:Lorg/springframework/messaging/converter/ContentTypeResolver;
      26: aload_0
      27: iload_2
      28: putfield      #8                  // Field useReferences:Z
      31: aload_0
      32: aload_1
      33: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
      36: ifeq          43
      39: aconst_null
      40: goto          51
      43: new           #10                 // class org/springframework/integration/codec/kryo/CompositeKryoRegistrar
      46: dup
      47: aload_1
      48: invokespecial #11                 // Method org/springframework/integration/codec/kryo/CompositeKryoRegistrar."<init>":(Ljava/util/List;)V
      51: putfield      #12                 // Field kryoRegistrar:Lorg/springframework/integration/codec/kryo/CompositeKryoRegistrar;
      54: aload_0
      55: invokedynamic #13,  0             // InvokeDynamic #0:create:(Lorg/springframework/cloud/stream/converter/KryoMessageConverter;)Lcom/esotericsoftware/kryo/pool/KryoFactory;
      60: astore_3
      61: aload_0
      62: new           #14                 // class com/esotericsoftware/kryo/pool/KryoPool$Builder
      65: dup
      66: aload_3
      67: invokespecial #15                 // Method com/esotericsoftware/kryo/pool/KryoPool$Builder."<init>":(Lcom/esotericsoftware/kryo/pool/KryoFactory;)V
      70: invokevirtual #16                 // Method com/esotericsoftware/kryo/pool/KryoPool$Builder.softReferences:()Lcom/esotericsoftware/kryo/pool/KryoPool$Builder;
      73: invokevirtual #17                 // Method com/esotericsoftware/kryo/pool/KryoPool$Builder.build:()Lcom/esotericsoftware/kryo/pool/KryoPool;
      76: putfield      #18                 // Field pool:Lcom/esotericsoftware/kryo/pool/KryoPool;
      79: aload_0
      80: ldc           #20                 // String application/x-java-object
      82: invokestatic  #21                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      85: invokestatic  #22                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      88: putfield      #23                 // Field supportedMimeTypes:Ljava/util/List;
      91: return

  public java.lang.Object fromMessage(org.springframework.messaging.Message<?>, java.lang.Class<?>, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #24                 // Method canConvertFrom:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_1
      12: invokeinterface #25,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      17: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      20: ldc           #27                 // class "[B"
      22: invokevirtual #28                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      25: ifne          38
      28: new           #29                 // class org/springframework/messaging/converter/MessageConversionException
      31: dup
      32: ldc           #30                 // String This converter can only convert messages with byte[] payload
      34: invokespecial #31                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_1
      39: invokeinterface #25,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      44: checkcast     #27                 // class "[B"
      47: checkcast     #27                 // class "[B"
      50: astore        4
      52: aload_0
      53: aload         4
      55: aload_2
      56: invokevirtual #32                 // Method deserialize:([BLjava/lang/Class;)Ljava/lang/Object;
      59: areturn
      60: astore        5
      62: new           #29                 // class org/springframework/messaging/converter/MessageConversionException
      65: dup
      66: ldc           #34                 // String Could not deserialize payload
      68: aload         5
      70: invokespecial #35                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      73: athrow
    Exception table:
       from    to  target type
          52    59    60   Class java/io/IOException

  public org.springframework.messaging.Message<?> toMessage(java.lang.Object, org.springframework.messaging.MessageHeaders, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #36                 // Method canConvertTo:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Z
       6: ifne          11
       9: aconst_null
      10: areturn
      11: aload_0
      12: aload_1
      13: invokevirtual #37                 // Method serialize:(Ljava/lang/Object;)[B
      16: astore        4
      18: aload_0
      19: aload_1
      20: invokevirtual #38                 // Method getDefaultContentType:(Ljava/lang/Object;)Lorg/springframework/util/MimeType;
      23: astore        5
      25: aload_2
      26: ifnull        75
      29: aload_2
      30: ldc           #39                 // class org/springframework/messaging/support/MessageHeaderAccessor
      32: invokestatic  #40                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      35: astore        6
      37: aload         6
      39: ifnull        75
      42: aload         6
      44: invokevirtual #41                 // Method org/springframework/messaging/support/MessageHeaderAccessor.isMutable:()Z
      47: ifeq          75
      50: aload         5
      52: ifnull        64
      55: aload         6
      57: ldc           #43                 // String contentType
      59: aload         5
      61: invokevirtual #44                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      64: aload         4
      66: aload         6
      68: invokevirtual #45                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      71: invokestatic  #46                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      74: areturn
      75: aload         4
      77: invokestatic  #47                 // Method org/springframework/messaging/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
      80: astore        6
      82: aload_2
      83: ifnull        93
      86: aload         6
      88: aload_2
      89: invokevirtual #48                 // Method org/springframework/messaging/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/support/MessageBuilder;
      92: pop
      93: aload         5
      95: ifnull        108
      98: aload         6
     100: ldc           #43                 // String contentType
     102: aload         5
     104: invokevirtual #49                 // Method org/springframework/messaging/support/MessageBuilder.setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
     107: pop
     108: aload         6
     110: invokevirtual #50                 // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
     113: areturn

  private boolean canConvertTo(java.lang.Object, org.springframework.messaging.MessageHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: invokespecial #51                 // Method supports:(Ljava/lang/Class;)Z
       8: ifeq          23
      11: aload_0
      12: aload_2
      13: invokevirtual #52                 // Method supportsMimeType:(Lorg/springframework/messaging/MessageHeaders;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  protected org.springframework.util.MimeType getDefaultContentType(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #53                 // Method mimeTypeFromObject:(Ljava/lang/Object;)Lorg/springframework/util/MimeType;
       5: areturn

  protected byte[] serialize(java.lang.Object);
    Code:
       0: new           #54                 // class java/io/ByteArrayOutputStream
       3: dup
       4: invokespecial #55                 // Method java/io/ByteArrayOutputStream."<init>":()V
       7: astore_2
       8: new           #56                 // class com/esotericsoftware/kryo/io/Output
      11: dup
      12: aload_2
      13: invokespecial #57                 // Method com/esotericsoftware/kryo/io/Output."<init>":(Ljava/io/OutputStream;)V
      16: astore_3
      17: aload_0
      18: getfield      #18                 // Field pool:Lcom/esotericsoftware/kryo/pool/KryoPool;
      21: aload_3
      22: aload_1
      23: invokedynamic #58,  0             // InvokeDynamic #1:execute:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)Lcom/esotericsoftware/kryo/pool/KryoCallback;
      28: invokeinterface #59,  2           // InterfaceMethod com/esotericsoftware/kryo/pool/KryoPool.run:(Lcom/esotericsoftware/kryo/pool/KryoCallback;)Ljava/lang/Object;
      33: pop
      34: aload_3
      35: invokevirtual #60                 // Method com/esotericsoftware/kryo/io/Output.close:()V
      38: aload_2
      39: invokevirtual #61                 // Method java/io/ByteArrayOutputStream.toByteArray:()[B
      42: areturn

  protected <T> T deserialize(byte[], java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #62                 // String \'bytes\' cannot be null
       3: invokestatic  #63                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: new           #64                 // class com/esotericsoftware/kryo/io/Input
       9: dup
      10: aload_1
      11: invokespecial #65                 // Method com/esotericsoftware/kryo/io/Input."<init>":([B)V
      14: astore_3
      15: aload_0
      16: aload_3
      17: aload_2
      18: invokevirtual #66                 // Method deserialize:(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
      21: astore        4
      23: aload_3
      24: invokevirtual #67                 // Method com/esotericsoftware/kryo/io/Input.close:()V
      27: aload         4
      29: areturn
      30: astore        5
      32: aload_3
      33: invokevirtual #67                 // Method com/esotericsoftware/kryo/io/Input.close:()V
      36: aload         5
      38: athrow
    Exception table:
       from    to  target type
          15    23    30   any
          30    32    30   any

  protected <T> T deserialize(java.io.InputStream, java.lang.Class<T>) throws java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #68                 // String \'inputStream\' cannot be null
       3: invokestatic  #63                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #69                 // String \'type\' cannot be null
       9: invokestatic  #63                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_1
      13: instanceof    #64                 // class com/esotericsoftware/kryo/io/Input
      16: ifeq          26
      19: aload_1
      20: checkcast     #64                 // class com/esotericsoftware/kryo/io/Input
      23: goto          34
      26: new           #64                 // class com/esotericsoftware/kryo/io/Input
      29: dup
      30: aload_1
      31: invokespecial #70                 // Method com/esotericsoftware/kryo/io/Input."<init>":(Ljava/io/InputStream;)V
      34: astore_3
      35: aconst_null
      36: astore        4
      38: aload_0
      39: getfield      #18                 // Field pool:Lcom/esotericsoftware/kryo/pool/KryoPool;
      42: aload_3
      43: aload_2
      44: invokedynamic #71,  0             // InvokeDynamic #2:execute:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Lcom/esotericsoftware/kryo/pool/KryoCallback;
      49: invokeinterface #59,  2           // InterfaceMethod com/esotericsoftware/kryo/pool/KryoPool.run:(Lcom/esotericsoftware/kryo/pool/KryoCallback;)Ljava/lang/Object;
      54: astore        4
      56: aload_3
      57: invokevirtual #67                 // Method com/esotericsoftware/kryo/io/Input.close:()V
      60: goto          72
      63: astore        5
      65: aload_3
      66: invokevirtual #67                 // Method com/esotericsoftware/kryo/io/Input.close:()V
      69: aload         5
      71: athrow
      72: aload         4
      74: areturn
    Exception table:
       from    to  target type
          38    56    63   any
          63    65    63   any

  protected void configureKryoInstance(com.esotericsoftware.kryo.Kryo);
    Code:
       0: aload_1
       1: new           #72                 // class com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy
       4: dup
       5: new           #73                 // class org/objenesis/strategy/StdInstantiatorStrategy
       8: dup
       9: invokespecial #74                 // Method org/objenesis/strategy/StdInstantiatorStrategy."<init>":()V
      12: invokespecial #75                 // Method com/esotericsoftware/kryo/Kryo$DefaultInstantiatorStrategy."<init>":(Lorg/objenesis/strategy/InstantiatorStrategy;)V
      15: invokevirtual #76                 // Method com/esotericsoftware/kryo/Kryo.setInstantiatorStrategy:(Lorg/objenesis/strategy/InstantiatorStrategy;)V
      18: aload_0
      19: getfield      #12                 // Field kryoRegistrar:Lorg/springframework/integration/codec/kryo/CompositeKryoRegistrar;
      22: ifnull        33
      25: aload_0
      26: getfield      #12                 // Field kryoRegistrar:Lorg/springframework/integration/codec/kryo/CompositeKryoRegistrar;
      29: aload_1
      30: invokevirtual #77                 // Method org/springframework/integration/codec/kryo/CompositeKryoRegistrar.registerTypes:(Lcom/esotericsoftware/kryo/Kryo;)V
      33: aload_1
      34: aload_0
      35: getfield      #8                  // Field useReferences:Z
      38: invokevirtual #78                 // Method com/esotericsoftware/kryo/Kryo.setReferences:(Z)Z
      41: pop
      42: return

  protected org.springframework.util.MimeType mimeTypeFromObject(java.lang.Object);
    Code:
       0: aload_1
       1: ldc           #79                 // String payload object cannot be null.
       3: invokestatic  #63                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: invokevirtual #80                 // Method java/lang/Class.getName:()Ljava/lang/String;
      13: astore_2
      14: aload_0
      15: getfield      #4                  // Field mimeTypesCache:Ljava/util/concurrent/ConcurrentMap;
      18: aload_2
      19: invokeinterface #81,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #82                 // class org/springframework/util/MimeType
      27: astore_3
      28: aload_3
      29: ifnonnull     133
      32: aload_2
      33: astore        4
      35: aload_1
      36: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokevirtual #83                 // Method java/lang/Class.isArray:()Z
      42: ifeq          97
      45: aload         4
      47: ldc           #84                 // String ;
      49: invokevirtual #85                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      52: ifeq          70
      55: aload         4
      57: iconst_0
      58: aload         4
      60: invokevirtual #86                 // Method java/lang/String.length:()I
      63: iconst_1
      64: isub
      65: invokevirtual #87                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      68: astore        4
      70: new           #88                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #90                 // String \"
      79: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload         4
      84: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: ldc           #90                 // String \"
      89: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      92: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: astore        4
      97: new           #88                 // class java/lang/StringBuilder
     100: dup
     101: invokespecial #89                 // Method java/lang/StringBuilder."<init>":()V
     104: ldc           #93                 // String application/x-java-object;type=
     106: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     109: aload         4
     111: invokevirtual #91                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #92                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokestatic  #21                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
     120: astore_3
     121: aload_0
     122: getfield      #4                  // Field mimeTypesCache:Ljava/util/concurrent/ConcurrentMap;
     125: aload_2
     126: aload_3
     127: invokeinterface #94,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: pop
     133: aload_3
     134: areturn

  protected boolean canConvertFrom(org.springframework.messaging.Message<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #51                 // Method supports:(Ljava/lang/Class;)Z
       5: ifeq          25
       8: aload_0
       9: aload_1
      10: invokeinterface #95,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      15: invokevirtual #52                 // Method supportsMimeType:(Lorg/springframework/messaging/MessageHeaders;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected boolean supportsMimeType(org.springframework.messaging.MessageHeaders);
    Code:
       0: aload_0
       1: invokevirtual #96                 // Method getSupportedMimeTypes:()Ljava/util/List;
       4: invokeinterface #97,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifeq          14
      12: iconst_1
      13: ireturn
      14: aload_0
      15: aload_1
      16: invokevirtual #98                 // Method getMimeType:(Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/util/MimeType;
      19: astore_2
      20: aload_2
      21: ifnonnull     26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: invokevirtual #96                 // Method getSupportedMimeTypes:()Ljava/util/List;
      30: invokeinterface #99,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      35: astore_3
      36: aload_3
      37: invokeinterface #100,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      42: ifeq          91
      45: aload_3
      46: invokeinterface #101,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      51: checkcast     #82                 // class org/springframework/util/MimeType
      54: astore        4
      56: aload         4
      58: invokevirtual #102                // Method org/springframework/util/MimeType.getType:()Ljava/lang/String;
      61: aload_2
      62: invokevirtual #102                // Method org/springframework/util/MimeType.getType:()Ljava/lang/String;
      65: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      68: ifeq          88
      71: aload         4
      73: invokevirtual #104                // Method org/springframework/util/MimeType.getSubtype:()Ljava/lang/String;
      76: aload_2
      77: invokevirtual #104                // Method org/springframework/util/MimeType.getSubtype:()Ljava/lang/String;
      80: invokevirtual #103                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      83: ifeq          88
      86: iconst_1
      87: ireturn
      88: goto          36
      91: iconst_0
      92: ireturn

  protected org.springframework.util.MimeType getMimeType(org.springframework.messaging.MessageHeaders);
    Code:
       0: aload_1
       1: ifnull        24
       4: aload_0
       5: getfield      #7                  // Field contentTypeResolver:Lorg/springframework/messaging/converter/ContentTypeResolver;
       8: ifnull        24
      11: aload_0
      12: getfield      #7                  // Field contentTypeResolver:Lorg/springframework/messaging/converter/ContentTypeResolver;
      15: aload_1
      16: invokeinterface #105,  2          // InterfaceMethod org/springframework/messaging/converter/ContentTypeResolver.resolve:(Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/util/MimeType;
      21: goto          25
      24: aconst_null
      25: areturn

  private boolean supports(java.lang.Class<?>);
    Code:
       0: iconst_1
       1: ireturn

  public java.lang.Object fromMessage(org.springframework.messaging.Message<?>, java.lang.Class<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #106                // Method fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;Ljava/lang/Object;)Ljava/lang/Object;
       7: areturn

  public org.springframework.messaging.Message<?> toMessage(java.lang.Object, org.springframework.messaging.MessageHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: invokevirtual #107                // Method toMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
       7: areturn

  public java.util.List<org.springframework.util.MimeType> getSupportedMimeTypes();
    Code:
       0: aload_0
       1: getfield      #23                 // Field supportedMimeTypes:Ljava/util/List;
       4: areturn

  private static java.lang.Object lambda$deserialize$2(com.esotericsoftware.kryo.io.Input, java.lang.Class, com.esotericsoftware.kryo.Kryo);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #108                // Method com/esotericsoftware/kryo/Kryo.readObject:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
       6: areturn

  private static java.lang.Class lambda$serialize$1(com.esotericsoftware.kryo.io.Output, java.lang.Object, com.esotericsoftware.kryo.Kryo);
    Code:
       0: aload_2
       1: aload_0
       2: aload_1
       3: invokevirtual #109                // Method com/esotericsoftware/kryo/Kryo.writeObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
       6: getstatic     #110                // Field java/lang/Void.TYPE:Ljava/lang/Class;
       9: areturn

  private com.esotericsoftware.kryo.Kryo lambda$new$0();
    Code:
       0: new           #111                // class com/esotericsoftware/kryo/Kryo
       3: dup
       4: invokespecial #112                // Method com/esotericsoftware/kryo/Kryo."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #113                // Method configureKryoInstance:(Lcom/esotericsoftware/kryo/Kryo;)V
      13: aload_1
      14: areturn
}
