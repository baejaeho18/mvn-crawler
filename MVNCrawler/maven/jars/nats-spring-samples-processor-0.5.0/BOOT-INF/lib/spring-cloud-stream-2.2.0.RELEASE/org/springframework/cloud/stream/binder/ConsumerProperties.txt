Compiled from "ConsumerProperties.java"
public class org.springframework.cloud.stream.binder.ConsumerProperties {
  private boolean autoStartup;

  private int concurrency;

  private boolean partitioned;

  private int instanceCount;

  private int instanceIndex;

  private int maxAttempts;

  private int backOffInitialInterval;

  private int backOffMaxInterval;

  private double backOffMultiplier;

  private boolean defaultRetryable;

  private java.lang.String retryTemplateName;

  private java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean> retryableExceptions;

  private org.springframework.cloud.stream.binder.HeaderMode headerMode;

  private boolean useNativeDecoding;

  private boolean multiplex;

  public org.springframework.cloud.stream.binder.ConsumerProperties();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field autoStartup:Z
       9: aload_0
      10: iconst_1
      11: putfield      #3                  // Field concurrency:I
      14: aload_0
      15: iconst_m1
      16: putfield      #4                  // Field instanceCount:I
      19: aload_0
      20: iconst_m1
      21: putfield      #5                  // Field instanceIndex:I
      24: aload_0
      25: iconst_3
      26: putfield      #6                  // Field maxAttempts:I
      29: aload_0
      30: sipush        1000
      33: putfield      #7                  // Field backOffInitialInterval:I
      36: aload_0
      37: sipush        10000
      40: putfield      #8                  // Field backOffMaxInterval:I
      43: aload_0
      44: ldc2_w        #9                  // double 2.0d
      47: putfield      #11                 // Field backOffMultiplier:D
      50: aload_0
      51: iconst_1
      52: putfield      #12                 // Field defaultRetryable:Z
      55: aload_0
      56: new           #13                 // class java/util/LinkedHashMap
      59: dup
      60: invokespecial #14                 // Method java/util/LinkedHashMap."<init>":()V
      63: putfield      #15                 // Field retryableExceptions:Ljava/util/Map;
      66: return

  public java.lang.String getRetryTemplateName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field retryTemplateName:Ljava/lang/String;
       4: areturn

  public void setRetryTemplateName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field retryTemplateName:Ljava/lang/String;
       5: return

  public int getConcurrency();
    Code:
       0: aload_0
       1: getfield      #3                  // Field concurrency:I
       4: ireturn

  public void setConcurrency(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field concurrency:I
       5: return

  public boolean isPartitioned();
    Code:
       0: aload_0
       1: getfield      #17                 // Field partitioned:Z
       4: ireturn

  public void setPartitioned(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field partitioned:Z
       5: return

  public int getInstanceCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field instanceCount:I
       4: ireturn

  public void setInstanceCount(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field instanceCount:I
       5: return

  public int getInstanceIndex();
    Code:
       0: aload_0
       1: getfield      #5                  // Field instanceIndex:I
       4: ireturn

  public void setInstanceIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field instanceIndex:I
       5: return

  public int getMaxAttempts();
    Code:
       0: aload_0
       1: getfield      #6                  // Field maxAttempts:I
       4: ireturn

  public void setMaxAttempts(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field maxAttempts:I
       5: return

  public int getBackOffInitialInterval();
    Code:
       0: aload_0
       1: getfield      #7                  // Field backOffInitialInterval:I
       4: ireturn

  public void setBackOffInitialInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field backOffInitialInterval:I
       5: return

  public int getBackOffMaxInterval();
    Code:
       0: aload_0
       1: getfield      #8                  // Field backOffMaxInterval:I
       4: ireturn

  public void setBackOffMaxInterval(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field backOffMaxInterval:I
       5: return

  public double getBackOffMultiplier();
    Code:
       0: aload_0
       1: getfield      #11                 // Field backOffMultiplier:D
       4: dreturn

  public void setBackOffMultiplier(double);
    Code:
       0: aload_0
       1: dload_1
       2: putfield      #11                 // Field backOffMultiplier:D
       5: return

  public boolean isDefaultRetryable();
    Code:
       0: aload_0
       1: getfield      #12                 // Field defaultRetryable:Z
       4: ireturn

  public void setDefaultRetryable(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field defaultRetryable:Z
       5: return

  public java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean> getRetryableExceptions();
    Code:
       0: aload_0
       1: getfield      #15                 // Field retryableExceptions:Ljava/util/Map;
       4: areturn

  public void setRetryableExceptions(java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field retryableExceptions:Ljava/util/Map;
       5: return

  public org.springframework.cloud.stream.binder.HeaderMode getHeaderMode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field headerMode:Lorg/springframework/cloud/stream/binder/HeaderMode;
       4: areturn

  public void setHeaderMode(org.springframework.cloud.stream.binder.HeaderMode);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field headerMode:Lorg/springframework/cloud/stream/binder/HeaderMode;
       5: return

  public boolean isUseNativeDecoding();
    Code:
       0: aload_0
       1: getfield      #19                 // Field useNativeDecoding:Z
       4: ireturn

  public void setUseNativeDecoding(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #19                 // Field useNativeDecoding:Z
       5: return

  public boolean isMultiplex();
    Code:
       0: aload_0
       1: getfield      #20                 // Field multiplex:Z
       4: ireturn

  public void setMultiplex(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field multiplex:Z
       5: return

  public boolean isAutoStartup();
    Code:
       0: aload_0
       1: getfield      #2                  // Field autoStartup:Z
       4: ireturn

  public void setAutoStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field autoStartup:Z
       5: return
}
