Compiled from "FunctionInvoker.java"
class org.springframework.cloud.stream.function.FunctionInvoker<I, O> implements java.util.function.Function<reactor.core.publisher.Flux<org.springframework.messaging.Message<I>>, reactor.core.publisher.Flux<org.springframework.messaging.Message<O>>> {
  private static final org.apache.commons.logging.Log logger;

  private static final java.lang.reflect.Field MESSAGE_HEADERS_FIELD;

  private final java.lang.Class<?> inputClass;

  private final java.lang.Class<?> outputClass;

  private final java.util.function.Function<reactor.core.publisher.Flux<?>, reactor.core.publisher.Flux<?>> userFunction;

  private final org.springframework.messaging.converter.CompositeMessageConverter messageConverter;

  private final org.springframework.messaging.MessageChannel errorChannel;

  private final boolean isInputArgumentMessage;

  private final org.springframework.cloud.stream.binder.ConsumerProperties consumerProperties;

  private final org.springframework.cloud.stream.binder.ProducerProperties producerProperties;

  private final org.springframework.cloud.stream.config.BindingServiceProperties bindingServiceProperties;

  private final org.springframework.cloud.stream.function.StreamFunctionProperties functionProperties;

  org.springframework.cloud.stream.function.FunctionInvoker(org.springframework.cloud.stream.function.StreamFunctionProperties, org.springframework.cloud.function.context.FunctionCatalog, org.springframework.cloud.function.context.catalog.FunctionInspector, org.springframework.cloud.stream.converter.CompositeMessageConverterFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aconst_null
       7: invokespecial #1                  // Method "<init>":(Lorg/springframework/cloud/stream/function/StreamFunctionProperties;Lorg/springframework/cloud/function/context/FunctionCatalog;Lorg/springframework/cloud/function/context/catalog/FunctionInspector;Lorg/springframework/cloud/stream/converter/CompositeMessageConverterFactory;Lorg/springframework/messaging/MessageChannel;)V
      10: return

  org.springframework.cloud.stream.function.FunctionInvoker(org.springframework.cloud.stream.function.StreamFunctionProperties, org.springframework.cloud.function.context.FunctionCatalog, org.springframework.cloud.function.context.catalog.FunctionInspector, org.springframework.cloud.stream.converter.CompositeMessageConverterFactory, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field functionProperties:Lorg/springframework/cloud/stream/function/StreamFunctionProperties;
       9: aload_2
      10: aload_1
      11: invokevirtual #4                  // Method org/springframework/cloud/stream/function/StreamFunctionProperties.getDefinition:()Ljava/lang/String;
      14: invokeinterface #5,  2            // InterfaceMethod org/springframework/cloud/function/context/FunctionCatalog.lookup:(Ljava/lang/String;)Ljava/lang/Object;
      19: astore        6
      21: aload_0
      22: aload         6
      24: checkcast     #6                  // class java/util/function/Function
      27: putfield      #7                  // Field userFunction:Ljava/util/function/Function;
      30: ldc           #6                  // class java/util/function/Function
      32: aload_0
      33: getfield      #7                  // Field userFunction:Ljava/util/function/Function;
      36: invokestatic  #8                  // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
      39: aload_0
      40: aload         4
      42: invokevirtual #9                  // Method org/springframework/cloud/stream/converter/CompositeMessageConverterFactory.getMessageConverterForAllRegistered:()Lorg/springframework/messaging/converter/CompositeMessageConverter;
      45: putfield      #10                 // Field messageConverter:Lorg/springframework/messaging/converter/CompositeMessageConverter;
      48: aload_3
      49: aload         6
      51: invokeinterface #11,  2           // InterfaceMethod org/springframework/cloud/function/context/catalog/FunctionInspector.getRegistration:(Ljava/lang/Object;)Lorg/springframework/cloud/function/context/FunctionRegistration;
      56: invokevirtual #12                 // Method org/springframework/cloud/function/context/FunctionRegistration.getType:()Lorg/springframework/cloud/function/context/FunctionType;
      59: astore        7
      61: aload_0
      62: aload         7
      64: invokevirtual #13                 // Method org/springframework/cloud/function/context/FunctionType.isMessage:()Z
      67: putfield      #14                 // Field isInputArgumentMessage:Z
      70: aload_0
      71: aload         7
      73: invokevirtual #15                 // Method org/springframework/cloud/function/context/FunctionType.getInputType:()Ljava/lang/Class;
      76: putfield      #16                 // Field inputClass:Ljava/lang/Class;
      79: aload_0
      80: aload         7
      82: invokevirtual #17                 // Method org/springframework/cloud/function/context/FunctionType.getOutputType:()Ljava/lang/Class;
      85: putfield      #18                 // Field outputClass:Ljava/lang/Class;
      88: aload_0
      89: aload         5
      91: putfield      #19                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
      94: aload_0
      95: aload_1
      96: invokevirtual #20                 // Method org/springframework/cloud/stream/function/StreamFunctionProperties.getBindingServiceProperties:()Lorg/springframework/cloud/stream/config/BindingServiceProperties;
      99: putfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     102: aload_0
     103: aload_0
     104: getfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     107: aload_1
     108: invokevirtual #22                 // Method org/springframework/cloud/stream/function/StreamFunctionProperties.getInputDestinationName:()Ljava/lang/String;
     111: invokevirtual #23                 // Method org/springframework/cloud/stream/config/BindingServiceProperties.getConsumerProperties:(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/ConsumerProperties;
     114: putfield      #24                 // Field consumerProperties:Lorg/springframework/cloud/stream/binder/ConsumerProperties;
     117: aload_0
     118: aload_0
     119: getfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     122: aload_1
     123: invokevirtual #25                 // Method org/springframework/cloud/stream/function/StreamFunctionProperties.getOutputDestinationName:()Ljava/lang/String;
     126: invokevirtual #26                 // Method org/springframework/cloud/stream/config/BindingServiceProperties.getProducerProperties:(Ljava/lang/String;)Lorg/springframework/cloud/stream/binder/ProducerProperties;
     129: putfield      #27                 // Field producerProperties:Lorg/springframework/cloud/stream/binder/ProducerProperties;
     132: return

  public reactor.core.publisher.Flux<org.springframework.messaging.Message<O>> apply(reactor.core.publisher.Flux<org.springframework.messaging.Message<I>>);
    Code:
       0: new           #28                 // class java/util/concurrent/atomic/AtomicReference
       3: dup
       4: invokespecial #29                 // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
       7: astore_2
       8: aload_1
       9: aload_0
      10: aload_2
      11: invokedynamic #30,  0             // InvokeDynamic #0:apply:(Lorg/springframework/cloud/stream/function/FunctionInvoker;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
      16: invokevirtual #31                 // Method reactor/core/publisher/Flux.concatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      19: aload_0
      20: aload_2
      21: invokedynamic #32,  0             // InvokeDynamic #1:apply:(Lorg/springframework/cloud/stream/function/FunctionInvoker;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
      26: invokevirtual #33                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      29: areturn

  private void onError(java.lang.Throwable, org.springframework.messaging.Message<I>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
       4: ifnull        40
       7: new           #34                 // class org/springframework/messaging/support/ErrorMessage
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #35                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;Lorg/springframework/messaging/Message;)V
      16: astore_3
      17: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      20: aload_3
      21: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      26: aload_0
      27: getfield      #19                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
      30: aload_3
      31: invokeinterface #38,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      36: pop
      37: goto          49
      40: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      43: aload_1
      44: invokeinterface #37,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      49: return

  private <T> org.springframework.messaging.Message<O> toMessage(T, org.springframework.messaging.Message<I>);
    Code:
       0: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #40                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #42                 // String Converting result back to message using the original message:
      23: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_2
      27: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      38: aload_0
      39: getfield      #27                 // Field producerProperties:Lorg/springframework/cloud/stream/binder/ProducerProperties;
      42: invokevirtual #47                 // Method org/springframework/cloud/stream/binder/ProducerProperties.isUseNativeEncoding:()Z
      45: ifeq          96
      48: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      51: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      56: ifeq          86
      59: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      62: new           #40                 // class java/lang/StringBuilder
      65: dup
      66: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      69: ldc           #48                 // String Native encoding enabled wrapping result to message using the original message:
      71: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload_2
      75: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      78: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      86: aload_0
      87: aload_1
      88: aload_2
      89: invokespecial #49                 // Method wrapOutputToMessage:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      92: astore_3
      93: goto          260
      96: aload_1
      97: instanceof    #50                 // class org/springframework/messaging/Message
     100: ifeq          107
     103: aload_1
     104: goto          121
     107: aload_0
     108: getfield      #10                 // Field messageConverter:Lorg/springframework/messaging/converter/CompositeMessageConverter;
     111: aload_1
     112: aload_2
     113: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     118: invokevirtual #52                 // Method org/springframework/messaging/converter/CompositeMessageConverter.toMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     121: checkcast     #50                 // class org/springframework/messaging/Message
     124: checkcast     #50                 // class org/springframework/messaging/Message
     127: astore_3
     128: aload_3
     129: ifnonnull     156
     132: aload_1
     133: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     136: aload_0
     137: getfield      #18                 // Field outputClass:Ljava/lang/Class;
     140: invokevirtual #54                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     143: ifeq          156
     146: aload_0
     147: aload_1
     148: aload_2
     149: invokespecial #49                 // Method wrapOutputToMessage:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
     152: astore_3
     153: goto          232
     156: aload_0
     157: getfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     160: ifnull        232
     163: aload_0
     164: getfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     167: aload_0
     168: getfield      #3                  // Field functionProperties:Lorg/springframework/cloud/stream/function/StreamFunctionProperties;
     171: invokevirtual #25                 // Method org/springframework/cloud/stream/function/StreamFunctionProperties.getOutputDestinationName:()Ljava/lang/String;
     174: invokevirtual #55                 // Method org/springframework/cloud/stream/config/BindingServiceProperties.getBindingProperties:(Ljava/lang/String;)Lorg/springframework/cloud/stream/config/BindingProperties;
     177: ifnull        232
     180: aload_3
     181: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     186: ldc           #57                 // String contentType
     188: invokevirtual #58                 // Method org/springframework/messaging/MessageHeaders.containsKey:(Ljava/lang/Object;)Z
     191: ifne          232
     194: getstatic     #59                 // Field MESSAGE_HEADERS_FIELD:Ljava/lang/reflect/Field;
     197: aload_3
     198: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     203: invokestatic  #60                 // Method org/springframework/util/ReflectionUtils.getField:(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;
     206: checkcast     #61                 // class java/util/Map
     209: ldc           #57                 // String contentType
     211: aload_0
     212: getfield      #21                 // Field bindingServiceProperties:Lorg/springframework/cloud/stream/config/BindingServiceProperties;
     215: ldc           #62                 // String output
     217: invokevirtual #55                 // Method org/springframework/cloud/stream/config/BindingServiceProperties.getBindingProperties:(Ljava/lang/String;)Lorg/springframework/cloud/stream/config/BindingProperties;
     220: invokevirtual #63                 // Method org/springframework/cloud/stream/config/BindingProperties.getContentType:()Ljava/lang/String;
     223: invokestatic  #64                 // Method org/springframework/util/MimeType.valueOf:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
     226: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     231: pop
     232: aload_3
     233: new           #40                 // class java/lang/StringBuilder
     236: dup
     237: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
     240: ldc           #66                 // String Failed to convert result value \'
     242: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     245: aload_1
     246: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     249: ldc           #67                 // String \' to message.
     251: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     254: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     257: invokestatic  #68                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     260: aload_3
     261: areturn

  private <T> org.springframework.messaging.Message<O> wrapOutputToMessage(T, org.springframework.messaging.Message<I>);
    Code:
       0: aload_1
       1: invokestatic  #69                 // Method org/springframework/integration/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
       4: aload_2
       5: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      10: invokevirtual #70                 // Method org/springframework/integration/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/integration/support/MessageBuilder;
      13: ldc           #57                 // String contentType
      15: invokevirtual #71                 // Method org/springframework/integration/support/MessageBuilder.removeHeader:(Ljava/lang/String;)Lorg/springframework/integration/support/MessageBuilder;
      18: invokevirtual #72                 // Method org/springframework/integration/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      21: astore_3
      22: aload_3
      23: areturn

  private <T> T resolveArgument(org.springframework.messaging.Message<I>);
    Code:
       0: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #39,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          38
      11: getstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #40                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #73                 // String Resolving input argument from message:
      23: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      30: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokeinterface #46,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      38: aload_0
      39: aload_1
      40: invokespecial #74                 // Method shouldConvertFromMessage:(Lorg/springframework/messaging/Message;)Z
      43: ifeq          61
      46: aload_0
      47: getfield      #10                 // Field messageConverter:Lorg/springframework/messaging/converter/CompositeMessageConverter;
      50: aload_1
      51: aload_0
      52: getfield      #16                 // Field inputClass:Ljava/lang/Class;
      55: invokevirtual #75                 // Method org/springframework/messaging/converter/CompositeMessageConverter.fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
      58: goto          62
      61: aload_1
      62: astore_2
      63: aload_2
      64: new           #40                 // class java/lang/StringBuilder
      67: dup
      68: invokespecial #41                 // Method java/lang/StringBuilder."<init>":()V
      71: ldc           #76                 // String Failed to resolve argument type \'
      73: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: aload_0
      77: getfield      #16                 // Field inputClass:Ljava/lang/Class;
      80: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      83: ldc           #77                 // String \' from message:
      85: invokevirtual #43                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: aload_1
      89: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      92: invokevirtual #45                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      95: invokestatic  #68                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      98: aload_0
      99: getfield      #14                 // Field isInputArgumentMessage:Z
     102: ifeq          132
     105: aload_2
     106: instanceof    #50                 // class org/springframework/messaging/Message
     109: ifne          132
     112: aload_2
     113: invokestatic  #69                 // Method org/springframework/integration/support/MessageBuilder.withPayload:(Ljava/lang/Object;)Lorg/springframework/integration/support/MessageBuilder;
     116: aload_1
     117: invokeinterface #51,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     122: invokevirtual #70                 // Method org/springframework/integration/support/MessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/integration/support/MessageBuilder;
     125: invokevirtual #72                 // Method org/springframework/integration/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
     128: astore_2
     129: goto          156
     132: aload_0
     133: getfield      #14                 // Field isInputArgumentMessage:Z
     136: ifne          156
     139: aload_2
     140: instanceof    #50                 // class org/springframework/messaging/Message
     143: ifeq          156
     146: aload_2
     147: checkcast     #50                 // class org/springframework/messaging/Message
     150: invokeinterface #78,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     155: astore_2
     156: aload_2
     157: areturn

  private boolean shouldConvertFromMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #16                 // Field inputClass:Ljava/lang/Class;
       4: ldc           #50                 // class org/springframework/messaging/Message
       6: invokevirtual #54                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
       9: ifne          47
      12: aload_0
      13: getfield      #16                 // Field inputClass:Ljava/lang/Class;
      16: aload_1
      17: invokeinterface #78,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      22: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      25: invokevirtual #54                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      28: ifne          47
      31: aload_0
      32: getfield      #16                 // Field inputClass:Ljava/lang/Class;
      35: ldc           #79                 // class java/lang/Object
      37: invokevirtual #54                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: ireturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #80                 // class reactor/core/publisher/Flux
       5: invokevirtual #81                 // Method apply:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Flux;
       8: areturn

  private org.springframework.messaging.Message lambda$apply$2(java.util.concurrent.atomic.AtomicReference, java.lang.Object);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #50                 // class org/springframework/messaging/Message
       9: invokespecial #83                 // Method toMessage:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      12: areturn

  private org.reactivestreams.Publisher lambda$apply$1(java.util.concurrent.atomic.AtomicReference, org.springframework.messaging.Message);
    Code:
       0: aload_2
       1: invokestatic  #84                 // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
       4: aload_1
       5: dup
       6: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: pop
      10: invokedynamic #85,  0             // InvokeDynamic #2:accept:(Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Consumer;
      15: invokevirtual #86                 // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      18: aload_0
      19: invokedynamic #87,  0             // InvokeDynamic #3:apply:(Lorg/springframework/cloud/stream/function/FunctionInvoker;)Ljava/util/function/Function;
      24: invokevirtual #33                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      27: aload_0
      28: getfield      #7                  // Field userFunction:Ljava/util/function/Function;
      31: dup
      32: invokevirtual #53                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      35: pop
      36: invokedynamic #88,  0             // InvokeDynamic #4:apply:(Ljava/util/function/Function;)Ljava/util/function/Function;
      41: invokevirtual #89                 // Method reactor/core/publisher/Flux.transform:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      44: aload_0
      45: getfield      #24                 // Field consumerProperties:Lorg/springframework/cloud/stream/binder/ConsumerProperties;
      48: invokevirtual #90                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getMaxAttempts:()I
      51: i2l
      52: aload_0
      53: getfield      #24                 // Field consumerProperties:Lorg/springframework/cloud/stream/binder/ConsumerProperties;
      56: invokevirtual #91                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getBackOffInitialInterval:()I
      59: i2l
      60: invokestatic  #92                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      63: aload_0
      64: getfield      #24                 // Field consumerProperties:Lorg/springframework/cloud/stream/binder/ConsumerProperties;
      67: invokevirtual #93                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getBackOffMaxInterval:()I
      70: i2l
      71: invokestatic  #92                 // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      74: invokevirtual #94                 // Method reactor/core/publisher/Flux.retryBackoff:(JLjava/time/Duration;Ljava/time/Duration;)Lreactor/core/publisher/Flux;
      77: aload_0
      78: aload_1
      79: invokedynamic #95,  0             // InvokeDynamic #5:apply:(Lorg/springframework/cloud/stream/function/FunctionInvoker;Ljava/util/concurrent/atomic/AtomicReference;)Ljava/util/function/Function;
      84: invokevirtual #96                 // Method reactor/core/publisher/Flux.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      87: areturn

  private org.reactivestreams.Publisher lambda$null$0(java.util.concurrent.atomic.AtomicReference, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: invokevirtual #82                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
       6: checkcast     #50                 // class org/springframework/messaging/Message
       9: invokespecial #97                 // Method onError:(Ljava/lang/Throwable;Lorg/springframework/messaging/Message;)V
      12: invokestatic  #98                 // Method reactor/core/publisher/Mono.empty:()Lreactor/core/publisher/Mono;
      15: areturn

  static {};
    Code:
       0: ldc           #99                 // class org/springframework/cloud/stream/function/FunctionInvoker
       2: invokestatic  #100                // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #36                 // Field logger:Lorg/apache/commons/logging/Log;
       8: ldc           #56                 // class org/springframework/messaging/MessageHeaders
      10: ldc           #101                // String headers
      12: invokestatic  #102                // Method org/springframework/util/ReflectionUtils.findField:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/reflect/Field;
      15: putstatic     #59                 // Field MESSAGE_HEADERS_FIELD:Ljava/lang/reflect/Field;
      18: getstatic     #59                 // Field MESSAGE_HEADERS_FIELD:Ljava/lang/reflect/Field;
      21: iconst_1
      22: invokevirtual #103                // Method java/lang/reflect/Field.setAccessible:(Z)V
      25: return
}
