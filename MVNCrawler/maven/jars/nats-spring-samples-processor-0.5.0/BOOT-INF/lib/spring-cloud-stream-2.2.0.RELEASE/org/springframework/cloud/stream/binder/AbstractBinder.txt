Compiled from "AbstractBinder.java"
public abstract class org.springframework.cloud.stream.binder.AbstractBinder<T, C extends org.springframework.cloud.stream.binder.ConsumerProperties, P extends org.springframework.cloud.stream.binder.ProducerProperties> implements org.springframework.context.ApplicationContextAware, org.springframework.beans.factory.InitializingBean, org.springframework.cloud.stream.binder.Binder<T, C, P> {
  private static final java.lang.String GROUP_INDEX_DELIMITER;

  protected final org.apache.commons.logging.Log logger;

  private volatile org.springframework.context.support.GenericApplicationContext applicationContext;

  private volatile org.springframework.expression.EvaluationContext evaluationContext;

  private java.util.Map<java.lang.String, org.springframework.retry.support.RetryTemplate> consumerBindingRetryTemplates;

  public org.springframework.cloud.stream.binder.AbstractBinder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: return

  public static java.lang.String applyPrefix(java.lang.String, java.lang.String);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: aload_1
      12: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      18: areturn

  public static java.lang.String constructDLQName(java.lang.String);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #9                  // String .dlq
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn

  protected org.springframework.context.support.AbstractApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #10                 // Field applicationContext:Lorg/springframework/context/support/GenericApplicationContext;
       4: areturn

  public void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException;
    Code:
       0: ldc           #11                 // class org/springframework/context/support/GenericApplicationContext
       2: aload_1
       3: invokestatic  #12                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
       6: aload_0
       7: aload_1
       8: checkcast     #11                 // class org/springframework/context/support/GenericApplicationContext
      11: putfield      #10                 // Field applicationContext:Lorg/springframework/context/support/GenericApplicationContext;
      14: return

  protected org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #10                 // Field applicationContext:Lorg/springframework/context/support/GenericApplicationContext;
       4: invokevirtual #13                 // Method org/springframework/context/support/GenericApplicationContext.getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
       7: areturn

  protected org.springframework.expression.EvaluationContext getEvaluationContext();
    Code:
       0: aload_0
       1: getfield      #14                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
       4: areturn

  public final void afterPropertiesSet() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #10                 // Field applicationContext:Lorg/springframework/context/support/GenericApplicationContext;
       4: ldc           #15                 // String The \'applicationContext\' property must not be null
       6: invokestatic  #16                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #14                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
      13: ifnonnull     27
      16: aload_0
      17: aload_0
      18: invokevirtual #17                 // Method getBeanFactory:()Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;
      21: invokestatic  #18                 // Method org/springframework/integration/expression/ExpressionUtils.createStandardEvaluationContext:(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
      24: putfield      #14                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
      27: aload_0
      28: invokevirtual #19                 // Method onInit:()V
      31: return

  protected void onInit() throws java.lang.Exception;
    Code:
       0: return

  public final org.springframework.cloud.stream.binder.Binding<T> bindConsumer(java.lang.String, java.lang.String, T, C);
    Code:
       0: aload_2
       1: invokestatic  #20                 // Method org/springframework/util/StringUtils.isEmpty:(Ljava/lang/Object;)Z
       4: ifeq          25
       7: aload         4
       9: invokevirtual #21                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.isPartitioned:()Z
      12: ifne          19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: ldc           #22                 // String A consumer group is required for a partitioned subscription
      22: invokestatic  #23                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      25: aload_0
      26: aload_1
      27: aload_2
      28: aload_3
      29: aload         4
      31: invokevirtual #24                 // Method doBindConsumer:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cloud/stream/binder/ConsumerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
      34: areturn

  protected abstract org.springframework.cloud.stream.binder.Binding<T> doBindConsumer(java.lang.String, java.lang.String, T, C);

  public final org.springframework.cloud.stream.binder.Binding<T> bindProducer(java.lang.String, T, P);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #25                 // Method doBindProducer:(Ljava/lang/String;Ljava/lang/Object;Lorg/springframework/cloud/stream/binder/ProducerProperties;)Lorg/springframework/cloud/stream/binder/Binding;
       7: areturn

  protected abstract org.springframework.cloud.stream.binder.Binding<T> doBindProducer(java.lang.String, T, P);

  protected final java.lang.String groupedName(java.lang.String, java.lang.String);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: aload_1
       8: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      11: ldc           #27                 // String .
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: aload_2
      17: invokestatic  #28                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      20: ifeq          27
      23: aload_2
      24: goto          29
      27: ldc           #29                 // String default
      29: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: areturn

  protected final org.springframework.cloud.stream.binder.MessageValues serializePayloadIfNecessary(org.springframework.messaging.Message<?>);
    Code:
       0: new           #30                 // class org/springframework/cloud/stream/binder/MessageValues
       3: dup
       4: aload_1
       5: invokespecial #31                 // Method org/springframework/cloud/stream/binder/MessageValues."<init>":(Lorg/springframework/messaging/Message;)V
       8: areturn

  protected java.lang.String buildPartitionRoutingExpression(java.lang.String);
    Code:
       0: new           #5                  // class java/lang/StringBuilder
       3: dup
       4: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #32                 // String \'
       9: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_1
      13: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: ldc           #33                 // String -\' + headers[\'
      18: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #35                 // String scst_partition
      23: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: ldc           #36                 // String \']
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: areturn

  protected org.springframework.retry.support.RetryTemplate buildRetryTemplate(org.springframework.cloud.stream.binder.ConsumerProperties);
    Code:
       0: aload_0
       1: getfield      #37                 // Field consumerBindingRetryTemplates:Ljava/util/Map;
       4: invokestatic  #38                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       7: ifeq          115
      10: new           #39                 // class org/springframework/retry/support/RetryTemplate
      13: dup
      14: invokespecial #40                 // Method org/springframework/retry/support/RetryTemplate."<init>":()V
      17: astore_2
      18: aload_1
      19: invokevirtual #41                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getRetryableExceptions:()Ljava/util/Map;
      22: invokestatic  #38                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      25: ifeq          42
      28: new           #42                 // class org/springframework/retry/policy/SimpleRetryPolicy
      31: dup
      32: aload_1
      33: invokevirtual #43                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getMaxAttempts:()I
      36: invokespecial #44                 // Method org/springframework/retry/policy/SimpleRetryPolicy."<init>":(I)V
      39: goto          62
      42: new           #42                 // class org/springframework/retry/policy/SimpleRetryPolicy
      45: dup
      46: aload_1
      47: invokevirtual #43                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getMaxAttempts:()I
      50: aload_1
      51: invokevirtual #41                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getRetryableExceptions:()Ljava/util/Map;
      54: iconst_1
      55: aload_1
      56: invokevirtual #45                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.isDefaultRetryable:()Z
      59: invokespecial #46                 // Method org/springframework/retry/policy/SimpleRetryPolicy."<init>":(ILjava/util/Map;ZZ)V
      62: astore_3
      63: new           #47                 // class org/springframework/retry/backoff/ExponentialBackOffPolicy
      66: dup
      67: invokespecial #48                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy."<init>":()V
      70: astore        4
      72: aload         4
      74: aload_1
      75: invokevirtual #49                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getBackOffInitialInterval:()I
      78: i2l
      79: invokevirtual #50                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setInitialInterval:(J)V
      82: aload         4
      84: aload_1
      85: invokevirtual #51                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getBackOffMultiplier:()D
      88: invokevirtual #52                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setMultiplier:(D)V
      91: aload         4
      93: aload_1
      94: invokevirtual #53                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getBackOffMaxInterval:()I
      97: i2l
      98: invokevirtual #54                 // Method org/springframework/retry/backoff/ExponentialBackOffPolicy.setMaxInterval:(J)V
     101: aload_2
     102: aload_3
     103: invokevirtual #55                 // Method org/springframework/retry/support/RetryTemplate.setRetryPolicy:(Lorg/springframework/retry/RetryPolicy;)V
     106: aload_2
     107: aload         4
     109: invokevirtual #56                 // Method org/springframework/retry/support/RetryTemplate.setBackOffPolicy:(Lorg/springframework/retry/backoff/BackOffPolicy;)V
     112: goto          167
     115: aload_1
     116: invokevirtual #57                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getRetryTemplateName:()Ljava/lang/String;
     119: invokestatic  #28                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
     122: ifeq          144
     125: aload_0
     126: getfield      #37                 // Field consumerBindingRetryTemplates:Ljava/util/Map;
     129: aload_1
     130: invokevirtual #57                 // Method org/springframework/cloud/stream/binder/ConsumerProperties.getRetryTemplateName:()Ljava/lang/String;
     133: invokeinterface #58,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     138: checkcast     #39                 // class org/springframework/retry/support/RetryTemplate
     141: goto          166
     144: aload_0
     145: getfield      #37                 // Field consumerBindingRetryTemplates:Ljava/util/Map;
     148: invokeinterface #59,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     153: invokeinterface #60,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     158: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #39                 // class org/springframework/retry/support/RetryTemplate
     166: astore_2
     167: aload_2
     168: areturn
}
