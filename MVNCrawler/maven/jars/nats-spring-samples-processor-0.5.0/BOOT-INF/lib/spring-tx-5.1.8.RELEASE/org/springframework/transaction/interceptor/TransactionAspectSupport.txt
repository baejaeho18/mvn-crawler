Compiled from "TransactionAspectSupport.java"
public abstract class org.springframework.transaction.interceptor.TransactionAspectSupport implements org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private static final java.lang.Object DEFAULT_TRANSACTION_MANAGER_KEY;

  private static final java.lang.ThreadLocal<org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo> transactionInfoHolder;

  protected final org.apache.commons.logging.Log logger;

  private java.lang.String transactionManagerBeanName;

  private org.springframework.transaction.PlatformTransactionManager transactionManager;

  private org.springframework.transaction.interceptor.TransactionAttributeSource transactionAttributeSource;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, org.springframework.transaction.PlatformTransactionManager> transactionManagerCache;

  public org.springframework.transaction.interceptor.TransactionAspectSupport();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #3                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #4                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #6                  // class org/springframework/util/ConcurrentReferenceHashMap
      19: dup
      20: iconst_4
      21: invokespecial #7                  // Method org/springframework/util/ConcurrentReferenceHashMap."<init>":(I)V
      24: putfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      27: return

  protected static org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo currentTransactionInfo() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: getstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: invokevirtual #9                  // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       6: checkcast     #10                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       9: areturn

  public static org.springframework.transaction.TransactionStatus currentTransactionStatus() throws org.springframework.transaction.NoTransactionException;
    Code:
       0: invokestatic  #11                 // Method currentTransactionInfo:()Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
       3: astore_0
       4: aload_0
       5: ifnull        15
       8: aload_0
       9: invokestatic  #12                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      12: ifnonnull     25
      15: new           #13                 // class org/springframework/transaction/NoTransactionException
      18: dup
      19: ldc           #14                 // String No transaction aspect-managed TransactionStatus in scope
      21: invokespecial #15                 // Method org/springframework/transaction/NoTransactionException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: aload_0
      26: invokestatic  #12                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$000:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/TransactionStatus;
      29: areturn

  public void setTransactionManagerBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
       5: return

  protected final java.lang.String getTransactionManagerBeanName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
       4: areturn

  public void setTransactionManager(org.springframework.transaction.PlatformTransactionManager);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #17                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       5: return

  public org.springframework.transaction.PlatformTransactionManager getTransactionManager();
    Code:
       0: aload_0
       1: getfield      #17                 // Field transactionManager:Lorg/springframework/transaction/PlatformTransactionManager;
       4: areturn

  public void setTransactionAttributes(java.util.Properties);
    Code:
       0: new           #18                 // class org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource
       3: dup
       4: invokespecial #19                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource."<init>":()V
       7: astore_2
       8: aload_2
       9: aload_1
      10: invokevirtual #20                 // Method org/springframework/transaction/interceptor/NameMatchTransactionAttributeSource.setProperties:(Ljava/util/Properties;)V
      13: aload_0
      14: aload_2
      15: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      18: return

  public void setTransactionAttributeSources(org.springframework.transaction.interceptor.TransactionAttributeSource...);
    Code:
       0: aload_0
       1: new           #22                 // class org/springframework/transaction/interceptor/CompositeTransactionAttributeSource
       4: dup
       5: aload_1
       6: invokespecial #23                 // Method org/springframework/transaction/interceptor/CompositeTransactionAttributeSource."<init>":([Lorg/springframework/transaction/interceptor/TransactionAttributeSource;)V
       9: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      12: return

  public void setTransactionAttributeSource(org.springframework.transaction.interceptor.TransactionAttributeSource);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       5: return

  public org.springframework.transaction.interceptor.TransactionAttributeSource getTransactionAttributeSource();
    Code:
       0: aload_0
       1: getfield      #21                 // Field transactionAttributeSource:Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: areturn

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       5: return

  protected final org.springframework.beans.factory.BeanFactory getBeanFactory();
    Code:
       0: aload_0
       1: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: areturn

  public void afterPropertiesSet();
    Code:
       0: aload_0
       1: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
       4: ifnonnull     24
       7: aload_0
       8: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      11: ifnonnull     24
      14: new           #26                 // class java/lang/IllegalStateException
      17: dup
      18: ldc           #27                 // String Set the \'transactionManager\' property or make sure to run within a BeanFactory containing a PlatformTransactionManager bean!
      20: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: invokevirtual #29                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
      28: ifnonnull     41
      31: new           #26                 // class java/lang/IllegalStateException
      34: dup
      35: ldc           #30                 // String Either \'transactionAttributeSource\' or \'transactionAttributes\' is required: If there are no transactional methods, then don\'t use a transaction aspect.
      37: invokespecial #28                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      40: athrow
      41: return

  protected java.lang.Object invokeWithinTransaction(java.lang.reflect.Method, java.lang.Class<?>, org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback) throws java.lang.Throwable;
    Code:
       0: aload_0
       1: invokevirtual #29                 // Method getTransactionAttributeSource:()Lorg/springframework/transaction/interceptor/TransactionAttributeSource;
       4: astore        4
       6: aload         4
       8: ifnull        23
      11: aload         4
      13: aload_1
      14: aload_2
      15: invokeinterface #31,  3           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttributeSource.getTransactionAttribute:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      20: goto          24
      23: aconst_null
      24: astore        5
      26: aload_0
      27: aload         5
      29: invokevirtual #32                 // Method determineTransactionManager:(Lorg/springframework/transaction/interceptor/TransactionAttribute;)Lorg/springframework/transaction/PlatformTransactionManager;
      32: astore        6
      34: aload_0
      35: aload_1
      36: aload_2
      37: aload         5
      39: invokespecial #33                 // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;Lorg/springframework/transaction/interceptor/TransactionAttribute;)Ljava/lang/String;
      42: astore        7
      44: aload         5
      46: ifnull        57
      49: aload         6
      51: instanceof    #34                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
      54: ifne          119
      57: aload_0
      58: aload         6
      60: aload         5
      62: aload         7
      64: invokevirtual #35                 // Method createTransactionIfNecessary:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
      67: astore        8
      69: aload_3
      70: invokeinterface #36,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback.proceedWithInvocation:()Ljava/lang/Object;
      75: astore        9
      77: aload_0
      78: aload         8
      80: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      83: goto          110
      86: astore        10
      88: aload_0
      89: aload         8
      91: aload         10
      93: invokevirtual #39                 // Method completeTransactionAfterThrowing:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;Ljava/lang/Throwable;)V
      96: aload         10
      98: athrow
      99: astore        11
     101: aload_0
     102: aload         8
     104: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     107: aload         11
     109: athrow
     110: aload_0
     111: aload         8
     113: invokevirtual #40                 // Method commitTransactionAfterReturning:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     116: aload         9
     118: areturn
     119: new           #41                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder
     122: dup
     123: aconst_null
     124: invokespecial #42                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$1;)V
     127: astore        8
     129: aload         6
     131: checkcast     #34                 // class org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager
     134: aload         5
     136: aload_0
     137: aload         6
     139: aload         5
     141: aload         7
     143: aload_3
     144: aload         8
     146: invokedynamic #43,  0             // InvokeDynamic #0:doInTransaction:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback;Lorg/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder;)Lorg/springframework/transaction/support/TransactionCallback;
     151: invokeinterface #44,  3           // InterfaceMethod org/springframework/transaction/support/CallbackPreferringPlatformTransactionManager.execute:(Lorg/springframework/transaction/TransactionDefinition;Lorg/springframework/transaction/support/TransactionCallback;)Ljava/lang/Object;
     156: astore        9
     158: aload         8
     160: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     163: ifnull        172
     166: aload         8
     168: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     171: athrow
     172: aload         9
     174: areturn
     175: astore        9
     177: aload         9
     179: invokevirtual #47                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException.getCause:()Ljava/lang/Throwable;
     182: athrow
     183: astore        9
     185: aload         8
     187: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     190: ifnull        219
     193: aload_0
     194: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     197: ldc           #49                 // String Application exception overridden by commit exception
     199: aload         8
     201: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     204: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     209: aload         9
     211: aload         8
     213: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     216: invokevirtual #51                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     219: aload         9
     221: athrow
     222: astore        9
     224: aload         8
     226: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     229: ifnull        248
     232: aload_0
     233: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     236: ldc           #49                 // String Application exception overridden by commit exception
     238: aload         8
     240: getfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
     243: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     248: aload         9
     250: athrow
    Exception table:
       from    to  target type
          69    77    86   Class java/lang/Throwable
          69    77    99   any
          86   101    99   any
         129   174   175   Class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException
         129   174   183   Class org/springframework/transaction/TransactionSystemException
         129   174   222   Class java/lang/Throwable

  protected void clearTransactionManagerCache();
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: invokeinterface #52,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.clear:()V
       9: aload_0
      10: aconst_null
      11: putfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      14: return

  protected org.springframework.transaction.PlatformTransactionManager determineTransactionManager(org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_0
       5: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       8: ifnonnull     16
      11: aload_0
      12: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      15: areturn
      16: aload_1
      17: invokeinterface #53,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getQualifier:()Ljava/lang/String;
      22: astore_2
      23: aload_2
      24: invokestatic  #54                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      27: ifeq          40
      30: aload_0
      31: aload_0
      32: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      35: aload_2
      36: invokespecial #55                 // Method determineQualifiedTransactionManager:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
      39: areturn
      40: aload_0
      41: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
      44: invokestatic  #54                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      47: ifeq          63
      50: aload_0
      51: aload_0
      52: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      55: aload_0
      56: getfield      #16                 // Field transactionManagerBeanName:Ljava/lang/String;
      59: invokespecial #55                 // Method determineQualifiedTransactionManager:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/String;)Lorg/springframework/transaction/PlatformTransactionManager;
      62: areturn
      63: aload_0
      64: invokevirtual #25                 // Method getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      67: astore_3
      68: aload_3
      69: ifnonnull     121
      72: aload_0
      73: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      76: getstatic     #56                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      79: invokeinterface #57,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #58                 // class org/springframework/transaction/PlatformTransactionManager
      87: astore_3
      88: aload_3
      89: ifnonnull     121
      92: aload_0
      93: getfield      #24                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      96: ldc           #58                 // class org/springframework/transaction/PlatformTransactionManager
      98: invokeinterface #59,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/Class;)Ljava/lang/Object;
     103: checkcast     #58                 // class org/springframework/transaction/PlatformTransactionManager
     106: astore_3
     107: aload_0
     108: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
     111: getstatic     #56                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
     114: aload_3
     115: invokeinterface #60,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     120: pop
     121: aload_3
     122: areturn

  private org.springframework.transaction.PlatformTransactionManager determineQualifiedTransactionManager(org.springframework.beans.factory.BeanFactory, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #57,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #58                 // class org/springframework/transaction/PlatformTransactionManager
      13: astore_3
      14: aload_3
      15: ifnonnull     41
      18: aload_1
      19: ldc           #58                 // class org/springframework/transaction/PlatformTransactionManager
      21: aload_2
      22: invokestatic  #61                 // Method org/springframework/beans/factory/annotation/BeanFactoryAnnotationUtils.qualifiedBeanOfType:(Lorg/springframework/beans/factory/BeanFactory;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;
      25: checkcast     #58                 // class org/springframework/transaction/PlatformTransactionManager
      28: astore_3
      29: aload_0
      30: getfield      #8                  // Field transactionManagerCache:Ljava/util/concurrent/ConcurrentMap;
      33: aload_2
      34: aload_3
      35: invokeinterface #60,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_3
      42: areturn

  private java.lang.String methodIdentification(java.lang.reflect.Method, java.lang.Class<?>, org.springframework.transaction.interceptor.TransactionAttribute);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #62                 // Method methodIdentification:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
       6: astore        4
       8: aload         4
      10: ifnonnull     41
      13: aload_3
      14: instanceof    #63                 // class org/springframework/transaction/interceptor/DefaultTransactionAttribute
      17: ifeq          29
      20: aload_3
      21: checkcast     #63                 // class org/springframework/transaction/interceptor/DefaultTransactionAttribute
      24: invokevirtual #64                 // Method org/springframework/transaction/interceptor/DefaultTransactionAttribute.getDescriptor:()Ljava/lang/String;
      27: astore        4
      29: aload         4
      31: ifnonnull     41
      34: aload_1
      35: aload_2
      36: invokestatic  #65                 // Method org/springframework/util/ClassUtils.getQualifiedMethodName:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/String;
      39: astore        4
      41: aload         4
      43: areturn

  protected java.lang.String methodIdentification(java.lang.reflect.Method, java.lang.Class<?>);
    Code:
       0: aconst_null
       1: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo createTransactionIfNecessary(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String);
    Code:
       0: aload_2
       1: ifnull        24
       4: aload_2
       5: invokeinterface #66,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.getName:()Ljava/lang/String;
      10: ifnonnull     24
      13: new           #67                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$1
      16: dup
      17: aload_0
      18: aload_2
      19: aload_3
      20: invokespecial #68                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$1."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      23: astore_2
      24: aconst_null
      25: astore        4
      27: aload_2
      28: ifnull        92
      31: aload_1
      32: ifnull        47
      35: aload_1
      36: aload_2
      37: invokeinterface #69,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.getTransaction:(Lorg/springframework/transaction/TransactionDefinition;)Lorg/springframework/transaction/TransactionStatus;
      42: astore        4
      44: goto          92
      47: aload_0
      48: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      51: invokeinterface #70,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      56: ifeq          92
      59: aload_0
      60: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      63: new           #71                 // class java/lang/StringBuilder
      66: dup
      67: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      70: ldc           #73                 // String Skipping transactional joinpoint [
      72: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      75: aload_3
      76: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: ldc           #75                 // String ] because no transaction manager has been configured
      81: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokeinterface #77,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      92: aload_0
      93: aload_1
      94: aload_2
      95: aload_3
      96: aload         4
      98: invokevirtual #78                 // Method prepareTransactionInfo:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/TransactionStatus;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
     101: areturn

  protected org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo prepareTransactionInfo(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.TransactionStatus);
    Code:
       0: new           #10                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo
       3: dup
       4: aload_0
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokespecial #79                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo."<init>":(Lorg/springframework/transaction/interceptor/TransactionAspectSupport;Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;)V
      11: astore        5
      13: aload_2
      14: ifnull        76
      17: aload_0
      18: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      21: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      26: ifeq          66
      29: aload_0
      30: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      33: new           #71                 // class java/lang/StringBuilder
      36: dup
      37: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      40: ldc           #81                 // String Getting transaction for [
      42: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: aload         5
      47: invokevirtual #82                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      50: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: ldc           #83                 // String ]
      55: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      61: invokeinterface #84,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      66: aload         5
      68: aload         4
      70: invokevirtual #85                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.newTransactionStatus:(Lorg/springframework/transaction/TransactionStatus;)V
      73: goto          121
      76: aload_0
      77: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      80: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      85: ifeq          121
      88: aload_0
      89: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      92: new           #71                 // class java/lang/StringBuilder
      95: dup
      96: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      99: ldc           #86                 // String No need to create transaction for [
     101: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     104: aload_3
     105: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: ldc           #87                 // String ]: This method is not transactional.
     110: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     116: invokeinterface #84,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     121: aload         5
     123: invokestatic  #88                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$200:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
     126: aload         5
     128: areturn

  protected void commitTransactionAfterReturning(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        72
       4: aload_1
       5: invokevirtual #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
       8: ifnull        72
      11: aload_0
      12: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          59
      23: aload_0
      24: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #71                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #90                 // String Completing transaction for [
      36: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #82                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #83                 // String ]
      48: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #84,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      59: aload_1
      60: invokevirtual #91                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      63: aload_1
      64: invokevirtual #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      67: invokeinterface #92,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
      72: return

  protected void completeTransactionAfterThrowing(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo, java.lang.Throwable);
    Code:
       0: aload_1
       1: ifnull        185
       4: aload_1
       5: invokevirtual #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
       8: ifnull        185
      11: aload_0
      12: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      15: invokeinterface #80,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      20: ifeq          63
      23: aload_0
      24: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #71                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #72                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #90                 // String Completing transaction for [
      36: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #82                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getJoinpointIdentification:()Ljava/lang/String;
      43: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #93                 // String ] after exception:
      48: invokevirtual #74                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      55: invokevirtual #76                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: invokeinterface #84,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      63: aload_1
      64: invokestatic  #95                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$300:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      67: ifnull        134
      70: aload_1
      71: invokestatic  #95                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$300:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)Lorg/springframework/transaction/interceptor/TransactionAttribute;
      74: aload_2
      75: invokeinterface #96,  2           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.rollbackOn:(Ljava/lang/Throwable;)Z
      80: ifeq          134
      83: aload_1
      84: invokevirtual #91                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
      87: aload_1
      88: invokevirtual #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
      91: invokeinterface #97,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.rollback:(Lorg/springframework/transaction/TransactionStatus;)V
      96: goto          185
      99: astore_3
     100: aload_0
     101: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     104: ldc           #98                 // String Application exception overridden by rollback exception
     106: aload_2
     107: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     112: aload_3
     113: aload_2
     114: invokevirtual #51                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     117: aload_3
     118: athrow
     119: astore_3
     120: aload_0
     121: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     124: ldc           #98                 // String Application exception overridden by rollback exception
     126: aload_2
     127: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     132: aload_3
     133: athrow
     134: aload_1
     135: invokevirtual #91                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionManager:()Lorg/springframework/transaction/PlatformTransactionManager;
     138: aload_1
     139: invokevirtual #89                 // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.getTransactionStatus:()Lorg/springframework/transaction/TransactionStatus;
     142: invokeinterface #92,  2           // InterfaceMethod org/springframework/transaction/PlatformTransactionManager.commit:(Lorg/springframework/transaction/TransactionStatus;)V
     147: goto          185
     150: astore_3
     151: aload_0
     152: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     155: ldc           #49                 // String Application exception overridden by commit exception
     157: aload_2
     158: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     163: aload_3
     164: aload_2
     165: invokevirtual #51                 // Method org/springframework/transaction/TransactionSystemException.initApplicationException:(Ljava/lang/Throwable;)V
     168: aload_3
     169: athrow
     170: astore_3
     171: aload_0
     172: getfield      #5                  // Field logger:Lorg/apache/commons/logging/Log;
     175: ldc           #49                 // String Application exception overridden by commit exception
     177: aload_2
     178: invokeinterface #50,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     183: aload_3
     184: athrow
     185: return
    Exception table:
       from    to  target type
          83    96    99   Class org/springframework/transaction/TransactionSystemException
          83    96   119   Class java/lang/RuntimeException
          83    96   119   Class java/lang/Error
         134   147   150   Class org/springframework/transaction/TransactionSystemException
         134   147   170   Class java/lang/RuntimeException
         134   147   170   Class java/lang/Error

  protected void cleanupTransactionInfo(org.springframework.transaction.interceptor.TransactionAspectSupport$TransactionInfo);
    Code:
       0: aload_1
       1: ifnull        8
       4: aload_1
       5: invokestatic  #101                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo.access$400:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
       8: return

  private java.lang.Object lambda$invokeWithinTransaction$0(org.springframework.transaction.PlatformTransactionManager, org.springframework.transaction.interceptor.TransactionAttribute, java.lang.String, org.springframework.transaction.interceptor.TransactionAspectSupport$InvocationCallback, org.springframework.transaction.interceptor.TransactionAspectSupport$ThrowableHolder, org.springframework.transaction.TransactionStatus);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         6
       6: invokevirtual #78                 // Method prepareTransactionInfo:(Lorg/springframework/transaction/PlatformTransactionManager;Lorg/springframework/transaction/interceptor/TransactionAttribute;Ljava/lang/String;Lorg/springframework/transaction/TransactionStatus;)Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;
       9: astore        7
      11: aload         4
      13: invokeinterface #36,  1           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAspectSupport$InvocationCallback.proceedWithInvocation:()Ljava/lang/Object;
      18: astore        8
      20: aload_0
      21: aload         7
      23: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      26: aload         8
      28: areturn
      29: astore        8
      31: aload_2
      32: aload         8
      34: invokeinterface #96,  2           // InterfaceMethod org/springframework/transaction/interceptor/TransactionAttribute.rollbackOn:(Ljava/lang/Throwable;)Z
      39: ifeq          66
      42: aload         8
      44: instanceof    #99                 // class java/lang/RuntimeException
      47: ifeq          56
      50: aload         8
      52: checkcast     #99                 // class java/lang/RuntimeException
      55: athrow
      56: new           #46                 // class org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException
      59: dup
      60: aload         8
      62: invokespecial #102                // Method org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolderException."<init>":(Ljava/lang/Throwable;)V
      65: athrow
      66: aload         5
      68: aload         8
      70: putfield      #45                 // Field org/springframework/transaction/interceptor/TransactionAspectSupport$ThrowableHolder.throwable:Ljava/lang/Throwable;
      73: aconst_null
      74: astore        9
      76: aload_0
      77: aload         7
      79: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      82: aload         9
      84: areturn
      85: astore        10
      87: aload_0
      88: aload         7
      90: invokevirtual #37                 // Method cleanupTransactionInfo:(Lorg/springframework/transaction/interceptor/TransactionAspectSupport$TransactionInfo;)V
      93: aload         10
      95: athrow
    Exception table:
       from    to  target type
          11    20    29   Class java/lang/Throwable
          11    20    85   any
          29    76    85   any
          85    87    85   any

  static java.lang.ThreadLocal access$500();
    Code:
       0: getstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
       3: areturn

  static {};
    Code:
       0: new           #103                // class java/lang/Object
       3: dup
       4: invokespecial #2                  // Method java/lang/Object."<init>":()V
       7: putstatic     #56                 // Field DEFAULT_TRANSACTION_MANAGER_KEY:Ljava/lang/Object;
      10: new           #104                // class org/springframework/core/NamedThreadLocal
      13: dup
      14: ldc           #105                // String Current aspect-driven transaction
      16: invokespecial #106                // Method org/springframework/core/NamedThreadLocal."<init>":(Ljava/lang/String;)V
      19: putstatic     #1                  // Field transactionInfoHolder:Ljava/lang/ThreadLocal;
      22: return
}
