Compiled from "ConcurrentReferenceHashMap.java"
class org.springframework.util.ConcurrentReferenceHashMap$2 extends org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<V> {
  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  org.springframework.util.ConcurrentReferenceHashMap$2(org.springframework.util.ConcurrentReferenceHashMap, org.springframework.util.ConcurrentReferenceHashMap$TaskOption...);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #2                  // Method org/springframework/util/ConcurrentReferenceHashMap$Task."<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap;[Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)V
      11: return

  protected V execute(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, org.springframework.util.ConcurrentReferenceHashMap$Entry<K, V>);
    Code:
       0: aload_2
       1: ifnull        19
       4: aload_1
       5: ifnull        14
       8: aload_1
       9: invokeinterface #3,  1            // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.release:()V
      14: aload_2
      15: invokestatic  #4                  // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.access$000:(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;)Ljava/lang/Object;
      18: areturn
      19: aconst_null
      20: areturn
}
