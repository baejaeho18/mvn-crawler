Compiled from "CompositeLog.java"
final class org.springframework.core.log.CompositeLog implements org.apache.commons.logging.Log {
  private static final org.apache.commons.logging.Log NO_OP_LOG;

  private final org.apache.commons.logging.Log fatalLogger;

  private final org.apache.commons.logging.Log errorLogger;

  private final org.apache.commons.logging.Log warnLogger;

  private final org.apache.commons.logging.Log infoLogger;

  private final org.apache.commons.logging.Log debugLogger;

  private final org.apache.commons.logging.Log traceLogger;

  public org.springframework.core.log.CompositeLog(java.util.List<org.apache.commons.logging.Log>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokedynamic #2,  0              // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      11: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      14: putfield      #4                  // Field fatalLogger:Lorg/apache/commons/logging/Log;
      17: aload_0
      18: aload_1
      19: invokedynamic #5,  0              // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      24: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      27: putfield      #6                  // Field errorLogger:Lorg/apache/commons/logging/Log;
      30: aload_0
      31: aload_1
      32: invokedynamic #7,  0              // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      37: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      40: putfield      #8                  // Field warnLogger:Lorg/apache/commons/logging/Log;
      43: aload_0
      44: aload_1
      45: invokedynamic #9,  0              // InvokeDynamic #3:test:()Ljava/util/function/Predicate;
      50: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      53: putfield      #10                 // Field infoLogger:Lorg/apache/commons/logging/Log;
      56: aload_0
      57: aload_1
      58: invokedynamic #11,  0             // InvokeDynamic #4:test:()Ljava/util/function/Predicate;
      63: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      66: putfield      #12                 // Field debugLogger:Lorg/apache/commons/logging/Log;
      69: aload_0
      70: aload_1
      71: invokedynamic #13,  0             // InvokeDynamic #5:test:()Ljava/util/function/Predicate;
      76: invokestatic  #3                  // Method initLogger:(Ljava/util/List;Ljava/util/function/Predicate;)Lorg/apache/commons/logging/Log;
      79: putfield      #14                 // Field traceLogger:Lorg/apache/commons/logging/Log;
      82: return

  private static org.apache.commons.logging.Log initLogger(java.util.List<org.apache.commons.logging.Log>, java.util.function.Predicate<org.apache.commons.logging.Log>);
    Code:
       0: aload_0
       1: invokeinterface #15,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #16,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          41
      16: aload_2
      17: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #18                 // class org/apache/commons/logging/Log
      25: astore_3
      26: aload_1
      27: aload_3
      28: invokeinterface #19,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      33: ifeq          38
      36: aload_3
      37: areturn
      38: goto          7
      41: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
      44: areturn

  public boolean isFatalEnabled();
    Code:
       0: aload_0
       1: getfield      #4                  // Field fatalLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isErrorEnabled();
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isWarnEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field warnLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isInfoEnabled();
    Code:
       0: aload_0
       1: getfield      #10                 // Field infoLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isDebugEnabled();
    Code:
       0: aload_0
       1: getfield      #12                 // Field debugLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public boolean isTraceEnabled();
    Code:
       0: aload_0
       1: getfield      #14                 // Field traceLogger:Lorg/apache/commons/logging/Log;
       4: getstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
       7: if_acmpeq     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void fatal(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fatalLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #21,  2           // InterfaceMethod org/apache/commons/logging/Log.fatal:(Ljava/lang/Object;)V
      10: return

  public void fatal(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #4                  // Field fatalLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #22,  3           // InterfaceMethod org/apache/commons/logging/Log.fatal:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void error(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #23,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
      10: return

  public void error(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field errorLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #24,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void warn(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #8                  // Field warnLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      10: return

  public void warn(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field warnLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #26,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void info(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field infoLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      10: return

  public void info(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #10                 // Field infoLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #28,  3           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void debug(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field debugLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      10: return

  public void debug(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #12                 // Field debugLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #30,  3           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  public void trace(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #14                 // Field traceLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      10: return

  public void trace(java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #14                 // Field traceLogger:Lorg/apache/commons/logging/Log;
       4: aload_1
       5: aload_2
       6: invokeinterface #32,  3           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      11: return

  static {};
    Code:
       0: new           #33                 // class org/apache/commons/logging/impl/NoOpLog
       3: dup
       4: invokespecial #34                 // Method org/apache/commons/logging/impl/NoOpLog."<init>":()V
       7: putstatic     #20                 // Field NO_OP_LOG:Lorg/apache/commons/logging/Log;
      10: return
}
