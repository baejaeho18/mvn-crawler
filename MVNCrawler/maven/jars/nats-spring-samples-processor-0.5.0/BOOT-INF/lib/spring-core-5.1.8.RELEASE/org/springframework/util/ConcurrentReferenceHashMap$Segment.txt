Compiled from "ConcurrentReferenceHashMap.java"
public final class org.springframework.util.ConcurrentReferenceHashMap$Segment extends java.util.concurrent.locks.ReentrantLock {
  private final org.springframework.util.ConcurrentReferenceHashMap<K, V>.ReferenceManager referenceManager;

  private final int initialSize;

  private volatile org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] references;

  private volatile int count;

  private int resizeThreshold;

  final org.springframework.util.ConcurrentReferenceHashMap this$0;

  public org.springframework.util.ConcurrentReferenceHashMap$Segment(org.springframework.util.ConcurrentReferenceHashMap, int, int);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
       5: aload_0
       6: invokespecial #6                  // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
       9: aload_0
      10: iconst_0
      11: putfield      #2                  // Field count:I
      14: aload_0
      15: aload_1
      16: invokevirtual #7                  // Method org/springframework/util/ConcurrentReferenceHashMap.createReferenceManager:()Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      19: putfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      22: aload_0
      23: iload_2
      24: putfield      #8                  // Field initialSize:I
      27: aload_0
      28: aload_0
      29: iload_2
      30: invokespecial #9                  // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      33: putfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      36: aload_0
      37: iload_3
      38: putfield      #10                 // Field resizeThreshold:I
      41: return

  public org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> getReference(java.lang.Object, int, org.springframework.util.ConcurrentReferenceHashMap$Restructure);
    Code:
       0: aload_3
       1: getstatic     #11                 // Field org/springframework/util/ConcurrentReferenceHashMap$Restructure.WHEN_NECESSARY:Lorg/springframework/util/ConcurrentReferenceHashMap$Restructure;
       4: if_acmpne     12
       7: aload_0
       8: iconst_0
       9: invokevirtual #12                 // Method restructureIfNecessary:(Z)V
      12: aload_0
      13: getfield      #2                  // Field count:I
      16: ifne          21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      25: astore        4
      27: aload_0
      28: iload_2
      29: aload         4
      31: invokespecial #13                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      34: istore        5
      36: aload         4
      38: iload         5
      40: aaload
      41: astore        6
      43: aload_0
      44: aload         6
      46: aload_1
      47: iload_2
      48: invokespecial #14                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      51: areturn

  public <T> T doTask(int, java.lang.Object, org.springframework.util.ConcurrentReferenceHashMap<K, V>.Task<T>);
    Code:
       0: aload_3
       1: getstatic     #15                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESIZE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
       4: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
       7: istore        4
       9: aload_3
      10: getstatic     #17                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_BEFORE:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      13: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      16: ifeq          25
      19: aload_0
      20: iload         4
      22: invokevirtual #12                 // Method restructureIfNecessary:(Z)V
      25: aload_3
      26: getstatic     #18                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.SKIP_IF_EMPTY:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
      29: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
      32: ifeq          50
      35: aload_0
      36: getfield      #2                  // Field count:I
      39: ifne          50
      42: aload_3
      43: aconst_null
      44: aconst_null
      45: aconst_null
      46: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
      49: areturn
      50: aload_0
      51: invokevirtual #20                 // Method lock:()V
      54: aload_0
      55: iload_1
      56: aload_0
      57: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      60: invokespecial #13                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
      63: istore        5
      65: aload_0
      66: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      69: iload         5
      71: aaload
      72: astore        6
      74: aload_0
      75: aload         6
      77: aload_2
      78: iload_1
      79: invokespecial #14                 // Method findInChain:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Ljava/lang/Object;I)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      82: astore        7
      84: aload         7
      86: ifnull        99
      89: aload         7
      91: invokeinterface #21,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      96: goto          100
      99: aconst_null
     100: astore        8
     102: new           #22                 // class org/springframework/util/ConcurrentReferenceHashMap$Segment$1
     105: dup
     106: aload_0
     107: aload_2
     108: iload_1
     109: aload         6
     111: iload         5
     113: invokespecial #23                 // Method org/springframework/util/ConcurrentReferenceHashMap$Segment$1."<init>":(Lorg/springframework/util/ConcurrentReferenceHashMap$Segment;Ljava/lang/Object;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;I)V
     116: astore        9
     118: aload_3
     119: aload         7
     121: aload         8
     123: aload         9
     125: invokevirtual #19                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.execute:(Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;Lorg/springframework/util/ConcurrentReferenceHashMap$Entries;)Ljava/lang/Object;
     128: astore        10
     130: aload_0
     131: invokevirtual #24                 // Method unlock:()V
     134: aload_3
     135: getstatic     #25                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     138: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     141: ifeq          150
     144: aload_0
     145: iload         4
     147: invokevirtual #12                 // Method restructureIfNecessary:(Z)V
     150: aload         10
     152: areturn
     153: astore        11
     155: aload_0
     156: invokevirtual #24                 // Method unlock:()V
     159: aload_3
     160: getstatic     #25                 // Field org/springframework/util/ConcurrentReferenceHashMap$TaskOption.RESTRUCTURE_AFTER:Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;
     163: invokevirtual #16                 // Method org/springframework/util/ConcurrentReferenceHashMap$Task.hasOption:(Lorg/springframework/util/ConcurrentReferenceHashMap$TaskOption;)Z
     166: ifeq          175
     169: aload_0
     170: iload         4
     172: invokevirtual #12                 // Method restructureIfNecessary:(Z)V
     175: aload         11
     177: athrow
    Exception table:
       from    to  target type
          54   130   153   any
         153   155   153   any

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #20                 // Method lock:()V
      12: aload_0
      13: aload_0
      14: aload_0
      15: getfield      #8                  // Field initialSize:I
      18: invokespecial #9                  // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      21: putfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      29: arraylength
      30: i2f
      31: aload_0
      32: getfield      #5                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
      35: invokevirtual #26                 // Method org/springframework/util/ConcurrentReferenceHashMap.getLoadFactor:()F
      38: fmul
      39: f2i
      40: putfield      #10                 // Field resizeThreshold:I
      43: aload_0
      44: iconst_0
      45: putfield      #2                  // Field count:I
      48: aload_0
      49: invokevirtual #24                 // Method unlock:()V
      52: goto          62
      55: astore_1
      56: aload_0
      57: invokevirtual #24                 // Method unlock:()V
      60: aload_1
      61: athrow
      62: return
    Exception table:
       from    to  target type
          12    48    55   any

  protected final void restructureIfNecessary(boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: istore_2
       5: iload_2
       6: ifle          21
       9: iload_2
      10: aload_0
      11: getfield      #10                 // Field resizeThreshold:I
      14: if_icmplt     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: istore_3
      23: aload_0
      24: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      27: invokevirtual #27                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      30: astore        4
      32: aload         4
      34: ifnonnull     45
      37: iload_3
      38: ifeq          366
      41: iload_1
      42: ifeq          366
      45: aload_0
      46: invokevirtual #20                 // Method lock:()V
      49: aload_0
      50: getfield      #2                  // Field count:I
      53: istore        5
      55: invokestatic  #28                 // Method java/util/Collections.emptySet:()Ljava/util/Set;
      58: astore        6
      60: aload         4
      62: ifnull        101
      65: new           #29                 // class java/util/HashSet
      68: dup
      69: invokespecial #30                 // Method java/util/HashSet."<init>":()V
      72: astore        6
      74: aload         4
      76: ifnull        101
      79: aload         6
      81: aload         4
      83: invokeinterface #31,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      88: pop
      89: aload_0
      90: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
      93: invokevirtual #27                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.pollForPurge:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      96: astore        4
      98: goto          74
     101: iload         5
     103: aload         6
     105: invokeinterface #32,  1           // InterfaceMethod java/util/Set.size:()I
     110: isub
     111: istore        5
     113: iload         5
     115: ifle          131
     118: iload         5
     120: aload_0
     121: getfield      #10                 // Field resizeThreshold:I
     124: if_icmplt     131
     127: iconst_1
     128: goto          132
     131: iconst_0
     132: istore_3
     133: iconst_0
     134: istore        7
     136: aload_0
     137: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     140: arraylength
     141: istore        8
     143: iload_1
     144: ifeq          167
     147: iload_3
     148: ifeq          167
     151: iload         8
     153: ldc           #33                 // int 1073741824
     155: if_icmpge     167
     158: iload         8
     160: iconst_1
     161: ishl
     162: istore        8
     164: iconst_1
     165: istore        7
     167: iload         7
     169: ifeq          181
     172: aload_0
     173: iload         8
     175: invokespecial #9                  // Method createReferenceArray:(I)[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     178: goto          185
     181: aload_0
     182: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     185: astore        9
     187: iconst_0
     188: istore        10
     190: iload         10
     192: aload_0
     193: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     196: arraylength
     197: if_icmpge     310
     200: aload_0
     201: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     204: iload         10
     206: aaload
     207: astore        4
     209: iload         7
     211: ifne          220
     214: aload         9
     216: iload         10
     218: aconst_null
     219: aastore
     220: aload         4
     222: ifnull        304
     225: aload         6
     227: aload         4
     229: invokeinterface #34,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
     234: ifne          292
     237: aload         4
     239: invokeinterface #21,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
     244: astore        11
     246: aload         11
     248: ifnull        292
     251: aload_0
     252: aload         4
     254: invokeinterface #35,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     259: aload         9
     261: invokespecial #13                 // Method getIndex:(I[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;)I
     264: istore        12
     266: aload         9
     268: iload         12
     270: aload_0
     271: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
     274: aload         11
     276: aload         4
     278: invokeinterface #35,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
     283: aload         9
     285: iload         12
     287: aaload
     288: invokevirtual #36                 // Method org/springframework/util/ConcurrentReferenceHashMap$ReferenceManager.createReference:(Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;ILorg/springframework/util/ConcurrentReferenceHashMap$Reference;)Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     291: aastore
     292: aload         4
     294: invokeinterface #37,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     299: astore        4
     301: goto          220
     304: iinc          10, 1
     307: goto          190
     310: iload         7
     312: ifeq          340
     315: aload_0
     316: aload         9
     318: putfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     321: aload_0
     322: aload_0
     323: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
     326: arraylength
     327: i2f
     328: aload_0
     329: getfield      #5                  // Field this$0:Lorg/springframework/util/ConcurrentReferenceHashMap;
     332: invokevirtual #26                 // Method org/springframework/util/ConcurrentReferenceHashMap.getLoadFactor:()F
     335: fmul
     336: f2i
     337: putfield      #10                 // Field resizeThreshold:I
     340: aload_0
     341: iload         5
     343: iconst_0
     344: invokestatic  #38                 // Method java/lang/Math.max:(II)I
     347: putfield      #2                  // Field count:I
     350: aload_0
     351: invokevirtual #24                 // Method unlock:()V
     354: goto          366
     357: astore        13
     359: aload_0
     360: invokevirtual #24                 // Method unlock:()V
     363: aload         13
     365: athrow
     366: return
    Exception table:
       from    to  target type
          49   350   357   any
         357   359   357   any

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V> findInChain(org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>, java.lang.Object, int);
    Code:
       0: aload_1
       1: astore        4
       3: aload         4
       5: ifnull        64
       8: aload         4
      10: invokeinterface #35,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getHash:()I
      15: iload_3
      16: if_icmpne     52
      19: aload         4
      21: invokeinterface #21,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.get:()Lorg/springframework/util/ConcurrentReferenceHashMap$Entry;
      26: astore        5
      28: aload         5
      30: ifnull        52
      33: aload         5
      35: invokevirtual #39                 // Method org/springframework/util/ConcurrentReferenceHashMap$Entry.getKey:()Ljava/lang/Object;
      38: astore        6
      40: aload         6
      42: aload_2
      43: invokestatic  #40                 // Method org/springframework/util/ObjectUtils.nullSafeEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      46: ifeq          52
      49: aload         4
      51: areturn
      52: aload         4
      54: invokeinterface #37,  1           // InterfaceMethod org/springframework/util/ConcurrentReferenceHashMap$Reference.getNext:()Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
      59: astore        4
      61: goto          3
      64: aconst_null
      65: areturn

  private org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[] createReferenceArray(int);
    Code:
       0: iload_1
       1: anewarray     #41                 // class org/springframework/util/ConcurrentReferenceHashMap$Reference
       4: areturn

  private int getIndex(int, org.springframework.util.ConcurrentReferenceHashMap$Reference<K, V>[]);
    Code:
       0: iload_1
       1: aload_2
       2: arraylength
       3: iconst_1
       4: isub
       5: iand
       6: ireturn

  public final int getSize();
    Code:
       0: aload_0
       1: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: arraylength
       5: ireturn

  public final int getCount();
    Code:
       0: aload_0
       1: getfield      #2                  // Field count:I
       4: ireturn

  static org.springframework.util.ConcurrentReferenceHashMap$ReferenceManager access$300(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: getfield      #4                  // Field referenceManager:Lorg/springframework/util/ConcurrentReferenceHashMap$ReferenceManager;
       4: areturn

  static org.springframework.util.ConcurrentReferenceHashMap$Reference[] access$400(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: getfield      #3                  // Field references:[Lorg/springframework/util/ConcurrentReferenceHashMap$Reference;
       4: areturn

  static int access$508(org.springframework.util.ConcurrentReferenceHashMap$Segment);
    Code:
       0: aload_0
       1: dup
       2: getfield      #2                  // Field count:I
       5: dup_x1
       6: iconst_1
       7: iadd
       8: putfield      #2                  // Field count:I
      11: ireturn
}
