Compiled from "DataBufferUtils.java"
class org.springframework.core.io.buffer.DataBufferUtils$ReadCompletionHandler implements java.nio.channels.CompletionHandler<java.lang.Integer, org.springframework.core.io.buffer.DataBuffer> {
  private final java.nio.channels.AsynchronousFileChannel channel;

  private final reactor.core.publisher.FluxSink<org.springframework.core.io.buffer.DataBuffer> sink;

  private final org.springframework.core.io.buffer.DataBufferFactory dataBufferFactory;

  private final int bufferSize;

  private final java.util.concurrent.atomic.AtomicLong position;

  private final java.util.concurrent.atomic.AtomicBoolean disposed;

  public org.springframework.core.io.buffer.DataBufferUtils$ReadCompletionHandler(java.nio.channels.AsynchronousFileChannel, reactor.core.publisher.FluxSink<org.springframework.core.io.buffer.DataBuffer>, long, org.springframework.core.io.buffer.DataBufferFactory, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicBoolean
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
      12: putfield      #4                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field sink:Lreactor/core/publisher/FluxSink;
      25: aload_0
      26: new           #7                  // class java/util/concurrent/atomic/AtomicLong
      29: dup
      30: lload_3
      31: invokespecial #8                  // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      34: putfield      #9                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      37: aload_0
      38: aload         5
      40: putfield      #10                 // Field dataBufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      43: aload_0
      44: iload         6
      46: putfield      #11                 // Field bufferSize:I
      49: return

  public void completed(java.lang.Integer, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_1
       1: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
       4: iconst_m1
       5: if_icmpeq     115
       8: aload_0
       9: getfield      #4                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      12: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      15: ifne          115
      18: aload_0
      19: getfield      #9                  // Field position:Ljava/util/concurrent/atomic/AtomicLong;
      22: aload_1
      23: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      26: i2l
      27: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      30: lstore_3
      31: aload_2
      32: aload_1
      33: invokevirtual #12                 // Method java/lang/Integer.intValue:()I
      36: invokeinterface #15,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.writePosition:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      41: pop
      42: aload_0
      43: getfield      #6                  // Field sink:Lreactor/core/publisher/FluxSink;
      46: aload_2
      47: invokeinterface #16,  2           // InterfaceMethod reactor/core/publisher/FluxSink.next:(Ljava/lang/Object;)Lreactor/core/publisher/FluxSink;
      52: pop
      53: aload_0
      54: getfield      #4                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
      57: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      60: ifeq          70
      63: aload_0
      64: invokespecial #17                 // Method complete:()V
      67: goto          112
      70: aload_0
      71: getfield      #10                 // Field dataBufferFactory:Lorg/springframework/core/io/buffer/DataBufferFactory;
      74: aload_0
      75: getfield      #11                 // Field bufferSize:I
      78: invokeinterface #18,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      83: astore        5
      85: aload         5
      87: iconst_0
      88: aload_0
      89: getfield      #11                 // Field bufferSize:I
      92: invokeinterface #19,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.asByteBuffer:(II)Ljava/nio/ByteBuffer;
      97: astore        6
      99: aload_0
     100: getfield      #5                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
     103: aload         6
     105: lload_3
     106: aload         5
     108: aload_0
     109: invokevirtual #20                 // Method java/nio/channels/AsynchronousFileChannel.read:(Ljava/nio/ByteBuffer;JLjava/lang/Object;Ljava/nio/channels/CompletionHandler;)V
     112: goto          124
     115: aload_2
     116: invokestatic  #21                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     119: pop
     120: aload_0
     121: invokespecial #17                 // Method complete:()V
     124: return

  private void complete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field sink:Lreactor/core/publisher/FluxSink;
       4: invokeinterface #22,  1           // InterfaceMethod reactor/core/publisher/FluxSink.complete:()V
       9: aload_0
      10: getfield      #5                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      13: invokestatic  #23                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
      16: return

  public void failed(java.lang.Throwable, org.springframework.core.io.buffer.DataBuffer);
    Code:
       0: aload_2
       1: invokestatic  #21                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
       4: pop
       5: aload_0
       6: getfield      #6                  // Field sink:Lreactor/core/publisher/FluxSink;
       9: aload_1
      10: invokeinterface #24,  2           // InterfaceMethod reactor/core/publisher/FluxSink.error:(Ljava/lang/Throwable;)V
      15: aload_0
      16: getfield      #5                  // Field channel:Ljava/nio/channels/AsynchronousFileChannel;
      19: invokestatic  #23                 // Method org/springframework/core/io/buffer/DataBufferUtils.closeChannel:(Ljava/nio/channels/Channel;)V
      22: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #4                  // Field disposed:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_1
       5: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: return

  public void failed(java.lang.Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: checkcast     #26                 // class org/springframework/core/io/buffer/DataBuffer
       6: invokevirtual #27                 // Method failed:(Ljava/lang/Throwable;Lorg/springframework/core/io/buffer/DataBuffer;)V
       9: return

  public void completed(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #28                 // class java/lang/Integer
       5: aload_2
       6: checkcast     #26                 // class org/springframework/core/io/buffer/DataBuffer
       9: invokevirtual #29                 // Method completed:(Ljava/lang/Integer;Lorg/springframework/core/io/buffer/DataBuffer;)V
      12: return
}
