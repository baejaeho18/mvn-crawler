Compiled from "CharSequenceEncoder.java"
public final class org.springframework.core.codec.CharSequenceEncoder extends org.springframework.core.codec.AbstractEncoder<java.lang.CharSequence> {
  public static final java.nio.charset.Charset DEFAULT_CHARSET;

  private final java.util.concurrent.ConcurrentMap<java.nio.charset.Charset, java.lang.Float> charsetToMaxBytesPerChar;

  private org.springframework.core.codec.CharSequenceEncoder(org.springframework.util.MimeType...);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/core/codec/AbstractEncoder."<init>":([Lorg/springframework/util/MimeType;)V
       5: aload_0
       6: new           #2                  // class java/util/concurrent/ConcurrentHashMap
       9: dup
      10: iconst_3
      11: invokespecial #3                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      14: putfield      #4                  // Field charsetToMaxBytesPerChar:Ljava/util/concurrent/ConcurrentMap;
      17: return

  public boolean canEncode(org.springframework.core.ResolvableType, org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: invokevirtual #5                  // Method org/springframework/core/ResolvableType.toClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_0
       6: aload_1
       7: aload_2
       8: invokespecial #6                  // Method org/springframework/core/codec/AbstractEncoder.canEncode:(Lorg/springframework/core/ResolvableType;Lorg/springframework/util/MimeType;)Z
      11: ifeq          27
      14: ldc           #7                  // class java/lang/CharSequence
      16: aload_3
      17: invokevirtual #8                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn

  public reactor.core.publisher.Flux<org.springframework.core.io.buffer.DataBuffer> encode(org.reactivestreams.Publisher<? extends java.lang.CharSequence>, org.springframework.core.io.buffer.DataBufferFactory, org.springframework.core.ResolvableType, org.springframework.util.MimeType, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload         4
       3: invokespecial #9                  // Method getCharset:(Lorg/springframework/util/MimeType;)Ljava/nio/charset/Charset;
       6: astore        6
       8: aload_1
       9: invokestatic  #10                 // Method reactor/core/publisher/Flux.from:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
      12: aload_0
      13: aload         5
      15: aload         6
      17: aload_2
      18: invokedynamic #11,  0             // InvokeDynamic #0:apply:(Lorg/springframework/core/codec/CharSequenceEncoder;Ljava/util/Map;Ljava/nio/charset/Charset;Lorg/springframework/core/io/buffer/DataBufferFactory;)Ljava/util/function/Function;
      23: invokevirtual #12                 // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      26: areturn

  int calculateCapacity(java.lang.CharSequence, java.nio.charset.Charset);
    Code:
       0: aload_0
       1: getfield      #4                  // Field charsetToMaxBytesPerChar:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokedynamic #13,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      10: invokeinterface #14,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #15                 // class java/lang/Float
      18: invokevirtual #16                 // Method java/lang/Float.floatValue:()F
      21: fstore_3
      22: aload_1
      23: invokeinterface #17,  1           // InterfaceMethod java/lang/CharSequence.length:()I
      28: i2f
      29: fload_3
      30: fmul
      31: fstore        4
      33: fload         4
      35: f2d
      36: invokestatic  #18                 // Method java/lang/Math.ceil:(D)D
      39: d2i
      40: ireturn

  private java.nio.charset.Charset getCharset(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        16
       4: aload_1
       5: invokevirtual #19                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
       8: ifnull        16
      11: aload_1
      12: invokevirtual #19                 // Method org/springframework/util/MimeType.getCharset:()Ljava/nio/charset/Charset;
      15: areturn
      16: getstatic     #20                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      19: areturn

  public static org.springframework.core.codec.CharSequenceEncoder textPlainOnly();
    Code:
       0: new           #21                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_1
       5: anewarray     #22                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #22                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #23                 // String text
      16: ldc           #24                 // String plain
      18: getstatic     #20                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #25                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: invokespecial #26                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      28: areturn

  public static org.springframework.core.codec.CharSequenceEncoder allMimeTypes();
    Code:
       0: new           #21                 // class org/springframework/core/codec/CharSequenceEncoder
       3: dup
       4: iconst_2
       5: anewarray     #22                 // class org/springframework/util/MimeType
       8: dup
       9: iconst_0
      10: new           #22                 // class org/springframework/util/MimeType
      13: dup
      14: ldc           #23                 // String text
      16: ldc           #24                 // String plain
      18: getstatic     #20                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
      21: invokespecial #25                 // Method org/springframework/util/MimeType."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
      24: aastore
      25: dup
      26: iconst_1
      27: getstatic     #27                 // Field org/springframework/util/MimeTypeUtils.ALL:Lorg/springframework/util/MimeType;
      30: aastore
      31: invokespecial #26                 // Method "<init>":([Lorg/springframework/util/MimeType;)V
      34: areturn

  private static java.lang.Float lambda$calculateCapacity$2(java.nio.charset.Charset);
    Code:
       0: aload_0
       1: invokevirtual #28                 // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
       4: invokevirtual #29                 // Method java/nio/charset/CharsetEncoder.maxBytesPerChar:()F
       7: invokestatic  #30                 // Method java/lang/Float.valueOf:(F)Ljava/lang/Float;
      10: areturn

  private org.springframework.core.io.buffer.DataBuffer lambda$encode$1(java.util.Map, java.nio.charset.Charset, org.springframework.core.io.buffer.DataBufferFactory, java.lang.CharSequence);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/springframework/core/codec/Hints.isLoggingSuppressed:(Ljava/util/Map;)Z
       4: ifne          22
       7: aload_0
       8: getfield      #32                 // Field logger:Lorg/apache/commons/logging/Log;
      11: aload         4
      13: aload_1
      14: invokedynamic #33,  0             // InvokeDynamic #2:apply:(Ljava/lang/CharSequence;Ljava/util/Map;)Ljava/util/function/Function;
      19: invokestatic  #34                 // Method org/springframework/core/log/LogFormatUtils.traceDebug:(Lorg/apache/commons/logging/Log;Ljava/util/function/Function;)V
      22: iconst_1
      23: istore        5
      25: aload_0
      26: aload         4
      28: aload_2
      29: invokevirtual #35                 // Method calculateCapacity:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)I
      32: istore        6
      34: aload_3
      35: iload         6
      37: invokeinterface #36,  2           // InterfaceMethod org/springframework/core/io/buffer/DataBufferFactory.allocateBuffer:(I)Lorg/springframework/core/io/buffer/DataBuffer;
      42: astore        7
      44: aload         7
      46: aload         4
      48: aload_2
      49: invokeinterface #37,  3           // InterfaceMethod org/springframework/core/io/buffer/DataBuffer.write:(Ljava/lang/CharSequence;Ljava/nio/charset/Charset;)Lorg/springframework/core/io/buffer/DataBuffer;
      54: pop
      55: iconst_0
      56: istore        5
      58: iload         5
      60: ifeq          123
      63: aload         7
      65: invokestatic  #38                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
      68: pop
      69: goto          123
      72: astore        8
      74: new           #40                 // class org/springframework/core/codec/EncodingException
      77: dup
      78: new           #41                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #43                 // String String encoding error:
      87: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload         8
      92: invokevirtual #45                 // Method java/nio/charset/CoderMalfunctionError.getMessage:()Ljava/lang/String;
      95: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     101: aload         8
     103: invokespecial #47                 // Method org/springframework/core/codec/EncodingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
     106: athrow
     107: astore        9
     109: iload         5
     111: ifeq          120
     114: aload         7
     116: invokestatic  #38                 // Method org/springframework/core/io/buffer/DataBufferUtils.release:(Lorg/springframework/core/io/buffer/DataBuffer;)Z
     119: pop
     120: aload         9
     122: athrow
     123: aload         7
     125: areturn
    Exception table:
       from    to  target type
          44    58    72   Class java/nio/charset/CoderMalfunctionError
          44    58   107   any
          72   109   107   any

  private static java.lang.String lambda$null$0(java.lang.CharSequence, java.util.Map, java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_2
       2: invokevirtual #48                 // Method java/lang/Boolean.booleanValue:()Z
       5: ifne          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: invokestatic  #49                 // Method org/springframework/core/log/LogFormatUtils.formatValue:(Ljava/lang/Object;Z)Ljava/lang/String;
      16: astore_3
      17: new           #41                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_1
      25: invokestatic  #50                 // Method org/springframework/core/codec/Hints.getLogPrefix:(Ljava/util/Map;)Ljava/lang/String;
      28: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #51                 // String Writing
      33: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_3
      37: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      43: areturn

  static {};
    Code:
       0: getstatic     #52                 // Field java/nio/charset/StandardCharsets.UTF_8:Ljava/nio/charset/Charset;
       3: putstatic     #20                 // Field DEFAULT_CHARSET:Ljava/nio/charset/Charset;
       6: return
}
