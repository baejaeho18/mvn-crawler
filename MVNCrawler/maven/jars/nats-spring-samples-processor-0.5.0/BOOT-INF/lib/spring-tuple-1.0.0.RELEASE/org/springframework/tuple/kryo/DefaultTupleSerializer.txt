Compiled from "DefaultTupleSerializer.java"
public class org.springframework.tuple.kryo.DefaultTupleSerializer extends com.esotericsoftware.kryo.Serializer<org.springframework.tuple.Tuple> {
  public org.springframework.tuple.kryo.DefaultTupleSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, org.springframework.tuple.Tuple);
    Code:
       0: aload_1
       1: aload_2
       2: aload_3
       3: invokeinterface #2,  1            // InterfaceMethod org/springframework/tuple/Tuple.getFieldNames:()Ljava/util/List;
       8: invokevirtual #3                  // Method com/esotericsoftware/kryo/Kryo.writeObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      11: aload_3
      12: invokeinterface #4,  1            // InterfaceMethod org/springframework/tuple/Tuple.getValues:()Ljava/util/List;
      17: invokeinterface #5,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      22: astore        4
      24: aload         4
      26: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      31: ifeq          53
      34: aload         4
      36: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      41: astore        5
      43: aload_1
      44: aload_2
      45: aload         5
      47: invokevirtual #8                  // Method com/esotericsoftware/kryo/Kryo.writeClassAndObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      50: goto          24
      53: return

  public org.springframework.tuple.Tuple read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<org.springframework.tuple.Tuple>);
    Code:
       0: aload_1
       1: aload_2
       2: ldc_w         #9                  // class java/util/ArrayList
       5: invokevirtual #10                 // Method com/esotericsoftware/kryo/Kryo.readObject:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #11                 // class java/util/List
      11: astore        4
      13: new           #9                  // class java/util/ArrayList
      16: dup
      17: aload         4
      19: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      24: invokespecial #13                 // Method java/util/ArrayList."<init>":(I)V
      27: astore        5
      29: iconst_0
      30: istore        6
      32: iload         6
      34: aload         4
      36: invokeinterface #12,  1           // InterfaceMethod java/util/List.size:()I
      41: if_icmpge     68
      44: aload_1
      45: aload_2
      46: invokevirtual #14                 // Method com/esotericsoftware/kryo/Kryo.readClassAndObject:(Lcom/esotericsoftware/kryo/io/Input;)Ljava/lang/Object;
      49: astore        7
      51: aload         5
      53: iload         6
      55: aload         7
      57: invokeinterface #15,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
      62: iinc          6, 1
      65: goto          32
      68: invokestatic  #16                 // Method org/springframework/tuple/TupleBuilder.tuple:()Lorg/springframework/tuple/TupleBuilder;
      71: aload         4
      73: aload         5
      75: invokevirtual #17                 // Method org/springframework/tuple/TupleBuilder.ofNamesAndValues:(Ljava/util/List;Ljava/util/List;)Lorg/springframework/tuple/Tuple;
      78: areturn

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #18                 // Method read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Lorg/springframework/tuple/Tuple;
       7: areturn

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: checkcast     #19                 // class org/springframework/tuple/Tuple
       7: invokevirtual #20                 // Method write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Lorg/springframework/tuple/Tuple;)V
      10: return
}
