Compiled from "FluxOnAssembly.java"
class reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.publisher.FluxOnAssembly$AssemblySnapshot snapshotStack;

  final org.reactivestreams.Publisher<?> parent;

  final reactor.core.CoreSubscriber<? super T> actual;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  org.reactivestreams.Subscription s;

  int fusionMode;

  reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.FluxOnAssembly$AssemblySnapshot, org.reactivestreams.Publisher<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      19: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.ACTUAL_METADATA:Lreactor/core/Scannable$Attr;
      16: if_acmpne     38
      19: aload_0
      20: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      23: getfield      #8                  // Field reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.checkpointed:Z
      26: ifne          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: areturn
      38: aload_0
      39: aload_1
      40: invokespecial #10                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      43: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
       4: invokevirtual #11                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.operatorAssemblyInformation:()Ljava/lang/String;
       7: areturn

  public java.lang.String stepName();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method toString:()Ljava/lang/String;
       4: areturn

  public final void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public final void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_0
       5: aload_1
       6: invokevirtual #14                 // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
       9: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      14: return

  public final void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #16,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public final int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: astore_2
       5: aload_2
       6: ifnull        28
       9: aload_2
      10: iload_1
      11: invokeinterface #18,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      16: istore_3
      17: iload_3
      18: ifeq          26
      21: aload_0
      22: iload_3
      23: putfield      #19                 // Field fusionMode:I
      26: iload_3
      27: ireturn
      28: iconst_0
      29: ireturn

  final java.lang.Throwable fail(java.lang.Throwable);
    Code:
       0: new           #21                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #22                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_2
       8: aconst_null
       9: astore_3
      10: aload_0
      11: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      14: invokevirtual #23                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.isLight:()Z
      17: ifeq          69
      20: aload_2
      21: ldc           #24                 // String Assembly site of producer [
      23: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      30: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #28                 // String ] is identified by light checkpoint [
      41: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      48: invokevirtual #29                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.getDescription:()Ljava/lang/String;
      51: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: ldc           #30                 // String ].
      56: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_2
      61: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: astore        4
      66: goto          109
      69: aload_2
      70: aload_0
      71: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
      74: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      77: aload_0
      78: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      81: invokevirtual #29                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.getDescription:()Ljava/lang/String;
      84: invokestatic  #32                 // Method reactor/core/publisher/FluxOnAssembly.fillStacktraceHeader:(Ljava/lang/StringBuilder;Ljava/lang/Class;Ljava/lang/String;)V
      87: aload_2
      88: aload_0
      89: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
      92: invokevirtual #33                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.toAssemblyInformation:()Ljava/lang/String;
      95: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      98: pop
      99: aload_2
     100: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     103: iconst_1
     104: invokestatic  #34                 // Method reactor/core/publisher/Traces.extractOperatorAssemblyInformation:(Ljava/lang/String;Z)Ljava/lang/String;
     107: astore        4
     109: aload_1
     110: invokevirtual #35                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
     113: arraylength
     114: ifle          183
     117: aload_1
     118: invokevirtual #35                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
     121: astore        5
     123: aload         5
     125: arraylength
     126: istore        6
     128: iconst_0
     129: istore        7
     131: iload         7
     133: iload         6
     135: if_icmpge     183
     138: aload         5
     140: iload         7
     142: aaload
     143: astore        8
     145: aload         8
     147: instanceof    #36                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
     150: ifeq          177
     153: aload         8
     155: checkcast     #36                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
     158: astore        9
     160: aload         9
     162: aload_0
     163: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
     166: aload         4
     168: invokevirtual #37                 // Method reactor/core/publisher/FluxOnAssembly$OnAssemblyException.add:(Lorg/reactivestreams/Publisher;Ljava/lang/String;)V
     171: aload         9
     173: astore_3
     174: goto          183
     177: iinc          7, 1
     180: goto          131
     183: aload_3
     184: ifnonnull     214
     187: aload_1
     188: new           #36                 // class reactor/core/publisher/FluxOnAssembly$OnAssemblyException
     191: dup
     192: aload_0
     193: getfield      #4                  // Field parent:Lorg/reactivestreams/Publisher;
     196: aload_0
     197: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
     200: aload_2
     201: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: invokespecial #38                 // Method reactor/core/publisher/FluxOnAssembly$OnAssemblyException."<init>":(Lorg/reactivestreams/Publisher;Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;Ljava/lang/String;)V
     207: invokestatic  #39                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     210: astore_1
     211: goto          243
     214: aload_0
     215: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
     218: getfield      #8                  // Field reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.checkpointed:Z
     221: ifeq          243
     224: aload_1
     225: new           #40                 // class reactor/core/publisher/FluxOnAssembly$SnapshotStackException
     228: dup
     229: aload_0
     230: getfield      #3                  // Field snapshotStack:Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;
     233: invokevirtual #29                 // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.getDescription:()Ljava/lang/String;
     236: invokespecial #41                 // Method reactor/core/publisher/FluxOnAssembly$SnapshotStackException."<init>":(Ljava/lang/String;)V
     239: invokestatic  #39                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
     242: astore_1
     243: aload_1
     244: areturn

  public final boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #42,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn
      10: astore_1
      11: aload_1
      12: invokestatic  #44                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #14                 // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      20: invokestatic  #45                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable

  public final void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #46                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          34
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: aload_1
      18: invokestatic  #47                 // Method reactor/core/publisher/Operators.as:(Lorg/reactivestreams/Subscription;)Lreactor/core/Fuseable$QueueSubscription;
      21: putfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      24: aload_0
      25: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      28: aload_0
      29: invokeinterface #48,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      34: return

  public final int size();
    Code:
       0: aload_0
       1: getfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #49,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public final void clear();
    Code:
       0: aload_0
       1: getfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #50,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public final void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #51,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public final void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #52,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public final T poll();
    Code:
       0: aload_0
       1: getfield      #17                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #53,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
       9: areturn
      10: astore_1
      11: aload_1
      12: invokestatic  #44                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      15: aload_0
      16: aload_1
      17: invokevirtual #14                 // Method fail:(Ljava/lang/Throwable;)Ljava/lang/Throwable;
      20: invokestatic  #45                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      23: athrow
    Exception table:
       from    to  target type
           0     9    10   Class java/lang/Throwable
}
