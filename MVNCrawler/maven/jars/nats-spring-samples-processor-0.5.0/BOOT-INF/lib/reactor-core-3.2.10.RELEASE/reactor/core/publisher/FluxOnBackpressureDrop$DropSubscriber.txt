Compiled from "FluxOnBackpressureDrop.java"
final class reactor.core.publisher.FluxOnBackpressureDrop$DropSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  final java.util.function.Consumer<? super T> onDrop;

  org.reactivestreams.Subscription s;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxOnBackpressureDrop$DropSubscriber> REQUESTED;

  boolean done;

  reactor.core.publisher.FluxOnBackpressureDrop$DropSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field onDrop:Ljava/util/function/Consumer;
      24: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          16
       7: getstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #8                  // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #10,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #14                 // long 9223372036854775807l
      30: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          38
       7: aload_0
       8: getfield      #5                  // Field onDrop:Ljava/util/function/Consumer;
      11: aload_1
      12: invokeinterface #18,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      17: goto          29
      20: astore_2
      21: aload_2
      22: aload_0
      23: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      26: invokestatic  #20                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      29: aload_1
      30: aload_0
      31: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      34: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      37: return
      38: aload_0
      39: getfield      #22                 // Field requested:J
      42: lstore_2
      43: lload_2
      44: lconst_0
      45: lcmp
      46: ifeq          79
      49: aload_0
      50: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      53: aload_1
      54: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      59: lload_2
      60: ldc2_w        #14                 // long 9223372036854775807l
      63: lcmp
      64: ifeq          120
      67: getstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      70: aload_0
      71: lconst_1
      72: invokestatic  #24                 // Method reactor/core/publisher/Operators.produced:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      75: pop2
      76: goto          120
      79: aload_0
      80: getfield      #5                  // Field onDrop:Ljava/util/function/Consumer;
      83: aload_1
      84: invokeinterface #18,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      89: goto          112
      92: astore        4
      94: aload_0
      95: aload_0
      96: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      99: aload         4
     101: aload_1
     102: aload_0
     103: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     106: invokestatic  #25                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     109: invokevirtual #26                 // Method onError:(Ljava/lang/Throwable;)V
     112: aload_1
     113: aload_0
     114: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     117: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     120: return
    Exception table:
       from    to  target type
           7    17    20   Class java/lang/Throwable
          79    89    92   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #20                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #17                 // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #27,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #17                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #17                 // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #28,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #29                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #30                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #22                 // Field requested:J
      23: invokestatic  #31                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: areturn
      27: aload_1
      28: getstatic     #32                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: getfield      #17                 // Field done:Z
      38: invokestatic  #33                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #34                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      46: if_acmpne     55
      49: ldc           #36                 // int 2147483647
      51: invokestatic  #37                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      54: areturn
      55: aload_0
      56: aload_1
      57: invokespecial #38                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      60: areturn

  static {};
    Code:
       0: ldc           #39                 // class reactor/core/publisher/FluxOnBackpressureDrop$DropSubscriber
       2: ldc           #40                 // String requested
       4: invokestatic  #41                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #7                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
