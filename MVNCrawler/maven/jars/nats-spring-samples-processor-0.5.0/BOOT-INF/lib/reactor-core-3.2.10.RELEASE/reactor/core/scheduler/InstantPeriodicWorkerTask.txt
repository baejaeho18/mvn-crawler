Compiled from "InstantPeriodicWorkerTask.java"
final class reactor.core.scheduler.InstantPeriodicWorkerTask implements reactor.core.Disposable, java.util.concurrent.Callable<java.lang.Void> {
  final java.lang.Runnable task;

  final java.util.concurrent.ExecutorService executor;

  static final reactor.core.Disposable$Composite DISPOSED;

  static final java.util.concurrent.Future<java.lang.Void> CANCELLED;

  volatile java.util.concurrent.Future<?> rest;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.scheduler.InstantPeriodicWorkerTask, java.util.concurrent.Future> REST;

  volatile java.util.concurrent.Future<?> first;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.scheduler.InstantPeriodicWorkerTask, java.util.concurrent.Future> FIRST;

  volatile reactor.core.Disposable$Composite parent;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.scheduler.InstantPeriodicWorkerTask, reactor.core.Disposable$Composite> PARENT;

  java.lang.Thread thread;

  reactor.core.scheduler.InstantPeriodicWorkerTask(java.lang.Runnable, java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field task:Ljava/lang/Runnable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field executor:Ljava/util/concurrent/ExecutorService;
      14: return

  reactor.core.scheduler.InstantPeriodicWorkerTask(java.lang.Runnable, java.util.concurrent.ExecutorService, reactor.core.Disposable$Composite);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field task:Ljava/lang/Runnable;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field executor:Ljava/util/concurrent/ExecutorService;
      14: getstatic     #4                  // Field PARENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      17: aload_0
      18: aload_3
      19: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      22: return

  public java.lang.Void call();
    Code:
       0: aload_0
       1: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
       4: putfield      #7                  // Field thread:Ljava/lang/Thread;
       7: aload_0
       8: getfield      #2                  // Field task:Ljava/lang/Runnable;
      11: invokeinterface #8,  1            // InterfaceMethod java/lang/Runnable.run:()V
      16: aload_0
      17: aload_0
      18: getfield      #3                  // Field executor:Ljava/util/concurrent/ExecutorService;
      21: aload_0
      22: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      27: invokevirtual #10                 // Method setRest:(Ljava/util/concurrent/Future;)V
      30: goto          38
      33: astore_1
      34: aload_1
      35: invokestatic  #12                 // Method reactor/core/scheduler/Schedulers.handleError:(Ljava/lang/Throwable;)V
      38: aload_0
      39: aconst_null
      40: putfield      #7                  // Field thread:Ljava/lang/Thread;
      43: goto          54
      46: astore_2
      47: aload_0
      48: aconst_null
      49: putfield      #7                  // Field thread:Ljava/lang/Thread;
      52: aload_2
      53: athrow
      54: aconst_null
      55: areturn
    Exception table:
       from    to  target type
           7    30    33   Class java/lang/Throwable
           7    38    46   any

  void setRest(java.util.concurrent.Future<?>);
    Code:
       0: aload_0
       1: getfield      #13                 // Field rest:Ljava/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
       9: if_acmpne     35
      12: aload_1
      13: aload_0
      14: getfield      #7                  // Field thread:Ljava/lang/Thread;
      17: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      20: if_acmpeq     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      33: pop
      34: return
      35: getstatic     #16                 // Field REST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      38: aload_0
      39: aload_2
      40: aload_1
      41: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          48
      47: return
      48: goto          0

  void setFirst(java.util.concurrent.Future<?>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field first:Ljava/util/concurrent/Future;
       4: astore_2
       5: aload_2
       6: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
       9: if_acmpne     35
      12: aload_1
      13: aload_0
      14: getfield      #7                  // Field thread:Ljava/lang/Thread;
      17: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      20: if_acmpeq     27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      33: pop
      34: return
      35: getstatic     #19                 // Field FIRST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      38: aload_0
      39: aload_2
      40: aload_1
      41: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      44: ifeq          48
      47: return
      48: goto          0

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field rest:Ljava/util/concurrent/Future;
       4: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #18                 // Field first:Ljava/util/concurrent/Future;
       4: astore_1
       5: aload_1
       6: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
       9: if_acmpne     15
      12: goto          61
      15: getstatic     #19                 // Field FIRST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      18: aload_0
      19: aload_1
      20: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
      23: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      26: ifeq          58
      29: aload_1
      30: ifnull        61
      33: aload_1
      34: aload_0
      35: getfield      #7                  // Field thread:Ljava/lang/Thread;
      38: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      41: if_acmpeq     48
      44: iconst_1
      45: goto          49
      48: iconst_0
      49: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      54: pop
      55: goto          61
      58: goto          0
      61: aload_0
      62: getfield      #13                 // Field rest:Ljava/util/concurrent/Future;
      65: astore_1
      66: aload_1
      67: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
      70: if_acmpne     76
      73: goto          122
      76: getstatic     #16                 // Field REST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      79: aload_0
      80: aload_1
      81: getstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
      84: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      87: ifeq          119
      90: aload_1
      91: ifnull        122
      94: aload_1
      95: aload_0
      96: getfield      #7                  // Field thread:Ljava/lang/Thread;
      99: invokestatic  #6                  // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     102: if_acmpeq     109
     105: iconst_1
     106: goto          110
     109: iconst_0
     110: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
     115: pop
     116: goto          122
     119: goto          61
     122: aload_0
     123: getfield      #20                 // Field parent:Lreactor/core/Disposable$Composite;
     126: astore_1
     127: aload_1
     128: getstatic     #21                 // Field DISPOSED:Lreactor/core/Disposable$Composite;
     131: if_acmpeq     138
     134: aload_1
     135: ifnonnull     139
     138: return
     139: getstatic     #4                  // Field PARENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     142: aload_0
     143: aload_1
     144: getstatic     #21                 // Field DISPOSED:Lreactor/core/Disposable$Composite;
     147: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     150: ifeq          162
     153: aload_1
     154: aload_0
     155: invokeinterface #22,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
     160: pop
     161: return
     162: goto          122

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #23                 // Method call:()Ljava/lang/Void;
       4: areturn

  private static java.lang.Void lambda$static$0() throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: new           #24                 // class reactor/core/scheduler/EmptyCompositeDisposable
       3: dup
       4: invokespecial #25                 // Method reactor/core/scheduler/EmptyCompositeDisposable."<init>":()V
       7: putstatic     #21                 // Field DISPOSED:Lreactor/core/Disposable$Composite;
      10: new           #26                 // class java/util/concurrent/FutureTask
      13: dup
      14: invokedynamic #27,  0             // InvokeDynamic #0:call:()Ljava/util/concurrent/Callable;
      19: invokespecial #28                 // Method java/util/concurrent/FutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      22: putstatic     #14                 // Field CANCELLED:Ljava/util/concurrent/Future;
      25: ldc           #29                 // class reactor/core/scheduler/InstantPeriodicWorkerTask
      27: ldc           #30                 // class java/util/concurrent/Future
      29: ldc           #31                 // String rest
      31: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: putstatic     #16                 // Field REST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      37: ldc           #29                 // class reactor/core/scheduler/InstantPeriodicWorkerTask
      39: ldc           #30                 // class java/util/concurrent/Future
      41: ldc           #33                 // String first
      43: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      46: putstatic     #19                 // Field FIRST:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      49: ldc           #29                 // class reactor/core/scheduler/InstantPeriodicWorkerTask
      51: ldc           #34                 // class reactor/core/Disposable$Composite
      53: ldc           #35                 // String parent
      55: invokestatic  #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      58: putstatic     #4                  // Field PARENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      61: return
}
