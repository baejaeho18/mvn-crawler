Compiled from "FluxHandle.java"
final class reactor.core.publisher.FluxHandle$HandleConditionalSubscriber<T, R> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, R>, reactor.core.publisher.SynchronousSink<R> {
  final reactor.core.Fuseable$ConditionalSubscriber<? super R> actual;

  final java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>> handler;

  boolean done;

  boolean stop;

  java.lang.Throwable error;

  R data;

  org.reactivestreams.Subscription s;

  reactor.core.publisher.FluxHandle$HandleConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super R>, java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field handler:Ljava/util/function/BiConsumer;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      20: aload_0
      21: invokeinterface #7,  2            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #9                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #3                  // Field handler:Ljava/util/function/BiConsumer;
      25: aload_1
      26: aload_0
      27: invokeinterface #10,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      32: goto          83
      35: astore_2
      36: aload_1
      37: aload_2
      38: aload_0
      39: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      42: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      47: aload_0
      48: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      51: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      54: astore_3
      55: aload_3
      56: ifnull        67
      59: aload_0
      60: aload_3
      61: invokevirtual #13                 // Method onError:(Ljava/lang/Throwable;)V
      64: goto          82
      67: aload_0
      68: aconst_null
      69: putfield      #14                 // Field error:Ljava/lang/Throwable;
      72: aload_0
      73: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      76: lconst_1
      77: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      82: return
      83: aload_0
      84: getfield      #16                 // Field data:Ljava/lang/Object;
      87: astore_2
      88: aload_0
      89: aconst_null
      90: putfield      #16                 // Field data:Ljava/lang/Object;
      93: aload_2
      94: ifnull        107
      97: aload_0
      98: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     101: aload_2
     102: invokeinterface #17,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
     107: aload_0
     108: getfield      #18                 // Field stop:Z
     111: ifeq          203
     114: aload_0
     115: iconst_1
     116: putfield      #8                  // Field done:Z
     119: aload_0
     120: getfield      #14                 // Field error:Ljava/lang/Throwable;
     123: ifnull        182
     126: aload_1
     127: aload_0
     128: getfield      #14                 // Field error:Ljava/lang/Throwable;
     131: aload_0
     132: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     135: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
     140: aload_0
     141: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     144: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
     147: astore_3
     148: aload_3
     149: ifnull        165
     152: aload_0
     153: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     156: aload_3
     157: invokeinterface #19,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
     162: goto          179
     165: aload_0
     166: invokespecial #20                 // Method reset:()V
     169: aload_0
     170: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     173: lconst_1
     174: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     179: goto          217
     182: aload_0
     183: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     186: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     191: aload_0
     192: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     195: invokeinterface #22,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
     200: goto          217
     203: aload_2
     204: ifnonnull     217
     207: aload_0
     208: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     211: lconst_1
     212: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     217: return
    Exception table:
       from    to  target type
          21    32    35   Class java/lang/Throwable

  private void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field done:Z
       5: aload_0
       6: iconst_0
       7: putfield      #18                 // Field stop:Z
      10: aload_0
      11: aconst_null
      12: putfield      #14                 // Field error:Ljava/lang/Throwable;
      15: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #9                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: iconst_0
      21: ireturn
      22: aload_0
      23: getfield      #3                  // Field handler:Ljava/util/function/BiConsumer;
      26: aload_1
      27: aload_0
      28: invokeinterface #10,  3           // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: goto          73
      36: astore_2
      37: aload_1
      38: aload_2
      39: aload_0
      40: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      43: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      48: aload_0
      49: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      52: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      55: astore_3
      56: aload_3
      57: ifnull        67
      60: aload_0
      61: aload_3
      62: invokevirtual #13                 // Method onError:(Ljava/lang/Throwable;)V
      65: iconst_1
      66: ireturn
      67: aload_0
      68: invokespecial #20                 // Method reset:()V
      71: iconst_0
      72: ireturn
      73: aload_0
      74: getfield      #16                 // Field data:Ljava/lang/Object;
      77: astore_2
      78: iconst_0
      79: istore_3
      80: aload_0
      81: aconst_null
      82: putfield      #16                 // Field data:Ljava/lang/Object;
      85: aload_2
      86: ifnull        100
      89: aload_0
      90: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      93: aload_2
      94: invokeinterface #23,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      99: istore_3
     100: aload_0
     101: getfield      #18                 // Field stop:Z
     104: ifeq          190
     107: aload_0
     108: iconst_1
     109: putfield      #8                  // Field done:Z
     112: aload_0
     113: getfield      #14                 // Field error:Ljava/lang/Throwable;
     116: ifnull        170
     119: aload_1
     120: aload_0
     121: getfield      #14                 // Field error:Ljava/lang/Throwable;
     124: aload_0
     125: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     128: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
     133: aload_0
     134: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     137: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
     140: astore        4
     142: aload         4
     144: ifnull        161
     147: aload_0
     148: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     151: aload         4
     153: invokeinterface #19,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
     158: goto          167
     161: aload_0
     162: invokespecial #20                 // Method reset:()V
     165: iconst_0
     166: ireturn
     167: goto          188
     170: aload_0
     171: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
     174: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     179: aload_0
     180: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     183: invokeinterface #22,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
     188: iconst_1
     189: ireturn
     190: iload_3
     191: ireturn
    Exception table:
       from    to  target type
          22    33    36   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #24                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #8                  // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      30: aload_1
      31: invokeinterface #19,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #8                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      17: invokeinterface #22,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
      22: return

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: areturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #18                 // Field stop:Z
       4: ifeq          17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #26                 // String Cannot complete after a complete or error
      13: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #18                 // Field stop:Z
      22: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field stop:Z
       4: ifeq          17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #28                 // String Cannot error after a complete or error
      13: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: ldc           #29                 // String error
      21: invokestatic  #30                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #11                 // class java/lang/Throwable
      27: putfield      #14                 // Field error:Ljava/lang/Throwable;
      30: aload_0
      31: iconst_1
      32: putfield      #18                 // Field stop:Z
      35: return

  public void next(R);
    Code:
       0: aload_0
       1: getfield      #16                 // Field data:Ljava/lang/Object;
       4: ifnull        17
       7: new           #25                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #31                 // String Cannot emit more than one data
      13: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #18                 // Field stop:Z
      21: ifeq          34
      24: new           #25                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #32                 // String Cannot emit after a complete or error
      30: invokespecial #27                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: ldc           #33                 // String data
      38: invokestatic  #30                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: putfield      #16                 // Field data:Ljava/lang/Object;
      44: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #21,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #34                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #35                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #8                  // Field done:Z
      23: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #37                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #14                 // Field error:Ljava/lang/Throwable;
      38: areturn
      39: aload_0
      40: aload_1
      41: invokespecial #38                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: areturn
}
