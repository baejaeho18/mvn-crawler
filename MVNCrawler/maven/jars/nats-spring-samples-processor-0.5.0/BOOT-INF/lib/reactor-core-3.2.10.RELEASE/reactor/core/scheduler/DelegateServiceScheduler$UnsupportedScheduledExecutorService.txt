Compiled from "DelegateServiceScheduler.java"
final class reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService implements java.util.concurrent.ScheduledExecutorService, java.util.function.Supplier<java.util.concurrent.ExecutorService> {
  final java.util.concurrent.ExecutorService exec;

  reactor.core.scheduler.DelegateServiceScheduler$UnsupportedScheduledExecutorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       9: return

  public java.util.concurrent.ExecutorService get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public void shutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
       9: return

  public java.util.List<java.lang.Runnable> shutdownNow();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #4,  1            // InterfaceMethod java/util/concurrent/ExecutorService.shutdownNow:()Ljava/util/List;
       9: areturn

  public boolean isShutdown();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/concurrent/ExecutorService.isShutdown:()Z
       9: ireturn

  public boolean isTerminated();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/concurrent/ExecutorService.isTerminated:()Z
       9: ireturn

  public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: lload_1
       5: aload_3
       6: invokeinterface #7,  4            // InterfaceMethod java/util/concurrent/ExecutorService.awaitTermination:(JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public <T> java.util.concurrent.Future<T> submit(java.util.concurrent.Callable<T>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      10: areturn

  public <T> java.util.concurrent.Future<T> submit(java.lang.Runnable, T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: aload_2
       6: invokeinterface #9,  3            // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      11: areturn

  public java.util.concurrent.Future<?> submit(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;
      10: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAll:(Ljava/util/Collection;)Ljava/util/List;
      10: areturn

  public <T> java.util.List<java.util.concurrent.Future<T>> invokeAll(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #12,  5           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAll:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;
      13: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAny:(Ljava/util/Collection;)Ljava/lang/Object;
      10: areturn

  public <T> T invokeAny(java.util.Collection<? extends java.util.concurrent.Callable<T>>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: lload_2
       6: aload         4
       8: invokeinterface #14,  5           // InterfaceMethod java/util/concurrent/ExecutorService.invokeAny:(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      13: areturn

  public void execute(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      10: return

  public java.util.concurrent.ScheduledFuture<?> schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #16                 // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public <V> java.util.concurrent.ScheduledFuture<V> schedule(java.util.concurrent.Callable<V>, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #16                 // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public java.util.concurrent.ScheduledFuture<?> scheduleAtFixedRate(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #16                 // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public java.util.concurrent.ScheduledFuture<?> scheduleWithFixedDelay(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: invokestatic  #16                 // Method reactor/core/Exceptions.failWithRejectedNotTimeCapable:()Ljava/util/concurrent/RejectedExecutionException;
       3: athrow

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #2                  // Field exec:Ljava/util/concurrent/ExecutorService;
       4: invokevirtual #17                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method get:()Ljava/util/concurrent/ExecutorService;
       4: areturn
}
