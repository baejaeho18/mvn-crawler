Compiled from "OnNextFailureStrategy.java"
final class reactor.core.publisher.OnNextFailureStrategy$1 implements reactor.core.publisher.OnNextFailureStrategy {
  reactor.core.publisher.OnNextFailureStrategy$1();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean test(java.lang.Throwable, java.lang.Object);
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.Throwable process(java.lang.Throwable, java.lang.Object, reactor.util.context.Context);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
       4: new           #3                  // class java/lang/IllegalStateException
       7: dup
       8: ldc           #4                  // String STOP strategy cannot process errors
      10: invokespecial #5                  // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      13: astore        4
      15: aload         4
      17: aload_1
      18: invokevirtual #6                  // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      21: aload         4
      23: areturn

  public boolean test(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #7                  // class java/lang/Throwable
       5: aload_2
       6: invokevirtual #8                  // Method test:(Ljava/lang/Throwable;Ljava/lang/Object;)Z
       9: ireturn
}
