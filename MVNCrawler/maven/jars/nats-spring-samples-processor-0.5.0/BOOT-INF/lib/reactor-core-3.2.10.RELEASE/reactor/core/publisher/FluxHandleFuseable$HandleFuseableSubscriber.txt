Compiled from "FluxHandleFuseable.java"
final class reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber<T, R> implements reactor.core.publisher.InnerOperator<T, R>, reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.Fuseable$QueueSubscription<R>, reactor.core.publisher.SynchronousSink<R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>> handler;

  boolean done;

  boolean stop;

  java.lang.Throwable error;

  R data;

  reactor.core.Fuseable$QueueSubscription<T> s;

  int sourceMode;

  reactor.core.publisher.FluxHandleFuseable$HandleFuseableSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.BiConsumer<? super T, reactor.core.publisher.SynchronousSink<R>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #7                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      26: aload_1
      27: aload_0
      28: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      33: goto          76
      36: astore_2
      37: aload_1
      38: aload_0
      39: getfield      #10                 // Field error:Ljava/lang/Throwable;
      42: aload_0
      43: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      46: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      51: aload_0
      52: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      55: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      58: astore_3
      59: aload_3
      60: ifnull        70
      63: aload_0
      64: aload_3
      65: invokevirtual #13                 // Method onError:(Ljava/lang/Throwable;)V
      68: iconst_1
      69: ireturn
      70: aload_0
      71: invokespecial #14                 // Method reset:()V
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #15                 // Field data:Ljava/lang/Object;
      80: astore_2
      81: aload_0
      82: aconst_null
      83: putfield      #15                 // Field data:Ljava/lang/Object;
      86: aload_2
      87: ifnull        100
      90: aload_0
      91: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      94: aload_2
      95: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     100: aload_0
     101: getfield      #17                 // Field stop:Z
     104: ifeq          192
     107: aload_0
     108: getfield      #10                 // Field error:Ljava/lang/Throwable;
     111: ifnull        167
     114: aload_1
     115: aload_0
     116: getfield      #10                 // Field error:Ljava/lang/Throwable;
     119: aload_0
     120: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     123: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     128: aload_0
     129: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     132: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
     135: astore_3
     136: aload_3
     137: ifnull        158
     140: aload_0
     141: iconst_1
     142: putfield      #6                  // Field done:Z
     145: aload_0
     146: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     149: aload_3
     150: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     155: goto          164
     158: aload_0
     159: invokespecial #14                 // Method reset:()V
     162: iconst_0
     163: ireturn
     164: goto          190
     167: aload_0
     168: iconst_1
     169: putfield      #6                  // Field done:Z
     172: aload_0
     173: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     176: invokeinterface #19,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     181: aload_0
     182: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     185: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     190: iconst_1
     191: ireturn
     192: aload_2
     193: ifnull        200
     196: iconst_1
     197: goto          201
     200: iconst_0
     201: ireturn
    Exception table:
       from    to  target type
          22    33    36   Class java/lang/Throwable

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #21                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #22                 // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #24                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          238
      21: aload_0
      22: getfield      #6                  // Field done:Z
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      33: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #7                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      41: return
      42: aload_0
      43: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      46: aload_1
      47: aload_0
      48: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      53: goto          99
      56: astore_2
      57: aload_1
      58: aload_2
      59: aload_0
      60: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      63: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      68: aload_0
      69: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      72: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      75: astore_3
      76: aload_3
      77: ifnull        88
      80: aload_0
      81: aload_3
      82: invokevirtual #13                 // Method onError:(Ljava/lang/Throwable;)V
      85: goto          98
      88: aload_0
      89: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      92: lconst_1
      93: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      98: return
      99: aload_0
     100: getfield      #15                 // Field data:Ljava/lang/Object;
     103: astore_2
     104: aload_0
     105: aconst_null
     106: putfield      #15                 // Field data:Ljava/lang/Object;
     109: aload_2
     110: ifnull        123
     113: aload_0
     114: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     117: aload_2
     118: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     123: aload_0
     124: getfield      #17                 // Field stop:Z
     127: ifeq          224
     130: aload_0
     131: getfield      #10                 // Field error:Ljava/lang/Throwable;
     134: ifnull        198
     137: aload_1
     138: aload_0
     139: getfield      #10                 // Field error:Ljava/lang/Throwable;
     142: aload_0
     143: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     146: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     151: aload_0
     152: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     155: invokestatic  #12                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
     158: astore_3
     159: aload_3
     160: ifnull        181
     163: aload_0
     164: iconst_1
     165: putfield      #6                  // Field done:Z
     168: aload_0
     169: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     172: aload_3
     173: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     178: goto          195
     181: aload_0
     182: invokespecial #14                 // Method reset:()V
     185: aload_0
     186: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     189: lconst_1
     190: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
     195: goto          238
     198: aload_0
     199: iconst_1
     200: putfield      #6                  // Field done:Z
     203: aload_0
     204: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     207: invokeinterface #19,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     212: aload_0
     213: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     216: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     221: goto          238
     224: aload_2
     225: ifnonnull     238
     228: aload_0
     229: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     232: lconst_1
     233: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
     238: return
    Exception table:
       from    to  target type
          42    53    56   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #26                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field done:Z
      26: aload_0
      27: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #27                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #28                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #6                  // Field done:Z
      23: invokestatic  #29                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #30                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #10                 // Field error:Ljava/lang/Throwable;
      38: areturn
      39: aload_0
      40: aload_1
      41: invokespecial #31                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: areturn

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #25,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #19,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public R poll();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     209
       8: aload_0
       9: getfield      #6                  // Field done:Z
      12: ifeq          17
      15: aconst_null
      16: areturn
      17: lconst_0
      18: lstore_1
      19: aload_0
      20: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      23: invokeinterface #32,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      28: astore_3
      29: aload_3
      30: ifnull        188
      33: aload_0
      34: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
      37: aload_3
      38: aload_0
      39: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
      44: goto          84
      47: astore        5
      49: aload_3
      50: aload         5
      52: aload_0
      53: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      56: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      61: invokestatic  #33                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      64: astore        6
      66: aload         6
      68: ifnull        77
      71: aload         6
      73: invokestatic  #34                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      76: athrow
      77: aload_0
      78: invokespecial #14                 // Method reset:()V
      81: goto          19
      84: aload_0
      85: getfield      #15                 // Field data:Ljava/lang/Object;
      88: astore        4
      90: aload_0
      91: aconst_null
      92: putfield      #15                 // Field data:Ljava/lang/Object;
      95: aload_0
      96: getfield      #17                 // Field stop:Z
      99: ifeq          173
     102: aload_0
     103: getfield      #10                 // Field error:Ljava/lang/Throwable;
     106: ifnull        147
     109: aload_3
     110: aload_0
     111: getfield      #10                 // Field error:Ljava/lang/Throwable;
     114: aload_0
     115: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     118: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     123: invokestatic  #33                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
     126: astore        5
     128: aload         5
     130: ifnull        144
     133: aload_0
     134: iconst_1
     135: putfield      #6                  // Field done:Z
     138: aload         5
     140: invokestatic  #34                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     143: athrow
     144: goto          170
     147: aload_0
     148: iconst_1
     149: putfield      #6                  // Field done:Z
     152: aload_0
     153: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     156: invokeinterface #19,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
     161: aload_0
     162: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     165: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     170: aload         4
     172: areturn
     173: aload         4
     175: ifnull        181
     178: aload         4
     180: areturn
     181: lload_1
     182: lconst_1
     183: ladd
     184: lstore_1
     185: goto          206
     188: lload_1
     189: lconst_0
     190: lcmp
     191: ifeq          204
     194: aload_0
     195: lload_1
     196: invokevirtual #35                 // Method request:(J)V
     199: lconst_0
     200: lstore_1
     201: goto          206
     204: aconst_null
     205: areturn
     206: goto          19
     209: aload_0
     210: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
     213: invokeinterface #32,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
     218: astore_1
     219: aload_1
     220: ifnull        348
     223: aload_0
     224: getfield      #4                  // Field handler:Ljava/util/function/BiConsumer;
     227: aload_1
     228: aload_0
     229: invokeinterface #8,  3            // InterfaceMethod java/util/function/BiConsumer.accept:(Ljava/lang/Object;Ljava/lang/Object;)V
     234: goto          269
     237: astore_2
     238: aload_1
     239: aload_2
     240: aload_0
     241: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     244: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     249: invokestatic  #33                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
     252: astore_3
     253: aload_3
     254: ifnull        262
     257: aload_3
     258: invokestatic  #34                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     261: athrow
     262: aload_0
     263: invokespecial #14                 // Method reset:()V
     266: goto          209
     269: aload_0
     270: getfield      #15                 // Field data:Ljava/lang/Object;
     273: astore_2
     274: aload_0
     275: aconst_null
     276: putfield      #15                 // Field data:Ljava/lang/Object;
     279: aload_0
     280: getfield      #17                 // Field stop:Z
     283: ifeq          339
     286: aload_0
     287: getfield      #10                 // Field error:Ljava/lang/Throwable;
     290: ifnull        332
     293: aload_1
     294: aload_0
     295: getfield      #10                 // Field error:Ljava/lang/Throwable;
     298: aload_0
     299: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     302: invokeinterface #5,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     307: invokestatic  #33                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
     310: astore_3
     311: aload_3
     312: ifnull        325
     315: aload_0
     316: iconst_1
     317: putfield      #6                  // Field done:Z
     320: aload_3
     321: invokestatic  #34                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     324: athrow
     325: aload_0
     326: invokespecial #14                 // Method reset:()V
     329: goto          209
     332: aload_0
     333: iconst_1
     334: putfield      #6                  // Field done:Z
     337: aload_2
     338: areturn
     339: aload_2
     340: ifnull        345
     343: aload_2
     344: areturn
     345: goto          350
     348: aconst_null
     349: areturn
     350: goto          209
    Exception table:
       from    to  target type
          33    44    47   Class java/lang/Throwable
         223   234   237   Class java/lang/Throwable

  private void reset();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #6                  // Field done:Z
       5: aload_0
       6: iconst_0
       7: putfield      #17                 // Field stop:Z
      10: aload_0
      11: aconst_null
      12: putfield      #10                 // Field error:Ljava/lang/Throwable;
      15: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #36,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #37,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #38,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: putfield      #24                 // Field sourceMode:I
      24: iload_2
      25: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #39,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public void complete();
    Code:
       0: aload_0
       1: getfield      #17                 // Field stop:Z
       4: ifeq          17
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #41                 // String Cannot complete after a complete or error
      13: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: iconst_1
      19: putfield      #17                 // Field stop:Z
      22: return

  public void error(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #17                 // Field stop:Z
       4: ifeq          17
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #43                 // String Cannot error after a complete or error
      13: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: ldc           #44                 // String error
      21: invokestatic  #45                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #9                  // class java/lang/Throwable
      27: putfield      #10                 // Field error:Ljava/lang/Throwable;
      30: aload_0
      31: iconst_1
      32: putfield      #17                 // Field stop:Z
      35: return

  public void next(R);
    Code:
       0: aload_0
       1: getfield      #15                 // Field data:Ljava/lang/Object;
       4: ifnull        17
       7: new           #40                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #46                 // String Cannot emit more than one data
      13: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: getfield      #17                 // Field stop:Z
      21: ifeq          34
      24: new           #40                 // class java/lang/IllegalStateException
      27: dup
      28: ldc           #47                 // String Cannot emit after a complete or error
      30: invokespecial #42                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: aload_0
      35: aload_1
      36: ldc           #48                 // String data
      38: invokestatic  #45                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: putfield      #15                 // Field data:Ljava/lang/Object;
      44: return
}
