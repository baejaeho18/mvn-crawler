Compiled from "BaseSubscriber.java"
public abstract class reactor.core.publisher.BaseSubscriber<T> implements reactor.core.CoreSubscriber<T>, org.reactivestreams.Subscription, reactor.core.Disposable {
  volatile org.reactivestreams.Subscription subscription;

  static java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.BaseSubscriber, org.reactivestreams.Subscription> S;

  public reactor.core.publisher.BaseSubscriber();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  protected org.reactivestreams.Subscription upstream();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
       4: areturn

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
       4: invokestatic  #3                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public void dispose();
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method cancel:()V
       4: return

  protected void hookOnSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_1
       1: ldc2_w        #6                  // long 9223372036854775807l
       4: invokeinterface #8,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
       9: return

  protected void hookOnNext(T);
    Code:
       0: return

  protected void hookOnComplete();
    Code:
       0: return

  protected void hookOnError(java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method reactor/core/Exceptions.errorCallbackNotImplemented:(Ljava/lang/Throwable;)Ljava/lang/UnsupportedOperationException;
       4: athrow

  protected void hookOnCancel();
    Code:
       0: return

  protected void hookFinally(reactor.core.publisher.SignalType);
    Code:
       0: return

  public final void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #10                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          33
      11: aload_0
      12: aload_1
      13: invokevirtual #12                 // Method hookOnSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: goto          33
      19: astore_2
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload_0
      24: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      27: invokestatic  #15                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      30: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
          11    16    19   Class java/lang/Throwable

  public final void onNext(T);
    Code:
       0: aload_1
       1: ldc           #17                 // String onNext
       3: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: invokevirtual #19                 // Method hookOnNext:(Ljava/lang/Object;)V
      12: goto          33
      15: astore_2
      16: aload_0
      17: aload_0
      18: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
      21: aload_2
      22: aload_1
      23: aload_0
      24: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      27: invokestatic  #20                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      30: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      33: return
    Exception table:
       from    to  target type
           7    12    15   Class java/lang/Throwable

  public final void onError(java.lang.Throwable);
    Code:
       0: aload_1
       1: ldc           #21                 // String onError
       3: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: getstatic     #10                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: invokestatic  #3                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      14: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: invokestatic  #3                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      20: if_acmpne     32
      23: aload_1
      24: aload_0
      25: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #23                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      31: return
      32: aload_0
      33: aload_1
      34: invokevirtual #24                 // Method hookOnError:(Ljava/lang/Throwable;)V
      37: aload_0
      38: getstatic     #25                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      41: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      44: goto          82
      47: astore_2
      48: aload_2
      49: aload_1
      50: invokestatic  #27                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      53: astore_2
      54: aload_2
      55: aload_0
      56: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      59: invokestatic  #23                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      62: aload_0
      63: getstatic     #25                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      66: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      69: goto          82
      72: astore_3
      73: aload_0
      74: getstatic     #25                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      77: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      80: aload_3
      81: athrow
      82: return
    Exception table:
       from    to  target type
          32    37    47   Class java/lang/Throwable
          32    37    72   any
          47    62    72   any

  public final void onComplete();
    Code:
       0: getstatic     #10                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #3                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       7: invokevirtual #22                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: invokestatic  #3                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      13: if_acmpeq     63
      16: aload_0
      17: invokevirtual #28                 // Method hookOnComplete:()V
      20: aload_0
      21: getstatic     #29                 // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
      24: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      27: goto          63
      30: astore_1
      31: aload_0
      32: aload_1
      33: aload_0
      34: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      37: invokestatic  #30                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      40: invokevirtual #24                 // Method hookOnError:(Ljava/lang/Throwable;)V
      43: aload_0
      44: getstatic     #29                 // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
      47: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      50: goto          63
      53: astore_2
      54: aload_0
      55: getstatic     #29                 // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
      58: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      61: aload_2
      62: athrow
      63: return
    Exception table:
       from    to  target type
          16    20    30   Class java/lang/Throwable
          16    20    53   any
          30    43    53   any

  public final void request(long);
    Code:
       0: lload_1
       1: invokestatic  #31                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          23
       7: aload_0
       8: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
      11: astore_3
      12: aload_3
      13: ifnull        23
      16: aload_3
      17: lload_1
      18: invokeinterface #8,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      23: return

  public final void requestUnbounded();
    Code:
       0: aload_0
       1: ldc2_w        #6                  // long 9223372036854775807l
       4: invokevirtual #32                 // Method request:(J)V
       7: return

  public final void cancel();
    Code:
       0: getstatic     #10                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #33                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: ifeq          61
      10: aload_0
      11: invokevirtual #34                 // Method hookOnCancel:()V
      14: aload_0
      15: getstatic     #35                 // Field reactor/core/publisher/SignalType.CANCEL:Lreactor/core/publisher/SignalType;
      18: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      21: goto          61
      24: astore_1
      25: aload_0
      26: aload_0
      27: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
      30: aload_1
      31: aload_0
      32: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      35: invokestatic  #15                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      38: invokevirtual #24                 // Method hookOnError:(Ljava/lang/Throwable;)V
      41: aload_0
      42: getstatic     #35                 // Field reactor/core/publisher/SignalType.CANCEL:Lreactor/core/publisher/SignalType;
      45: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      48: goto          61
      51: astore_2
      52: aload_0
      53: getstatic     #35                 // Field reactor/core/publisher/SignalType.CANCEL:Lreactor/core/publisher/SignalType;
      56: invokevirtual #26                 // Method safeHookFinally:(Lreactor/core/publisher/SignalType;)V
      59: aload_2
      60: athrow
      61: return
    Exception table:
       from    to  target type
          10    14    24   Class java/lang/Throwable
          10    14    51   any
          24    41    51   any

  void safeHookFinally(reactor.core.publisher.SignalType);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #36                 // Method hookFinally:(Lreactor/core/publisher/SignalType;)V
       5: goto          17
       8: astore_2
       9: aload_2
      10: aload_0
      11: invokevirtual #14                 // Method currentContext:()Lreactor/util/context/Context;
      14: invokestatic  #23                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      17: return
    Exception table:
       from    to  target type
           0     5     8   Class java/lang/Throwable

  public java.lang.String toString();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #38                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: areturn

  static {};
    Code:
       0: ldc           #39                 // class reactor/core/publisher/BaseSubscriber
       2: ldc           #40                 // class org/reactivestreams/Subscription
       4: ldc           #41                 // String subscription
       6: invokestatic  #42                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #10                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
