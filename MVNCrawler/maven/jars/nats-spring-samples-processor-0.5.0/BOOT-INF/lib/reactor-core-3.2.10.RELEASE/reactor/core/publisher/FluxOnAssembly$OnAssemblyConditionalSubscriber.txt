Compiled from "FluxOnAssembly.java"
final class reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber<T> extends reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber<T> implements reactor.core.Fuseable$ConditionalSubscriber<T> {
  final reactor.core.Fuseable$ConditionalSubscriber<? super T> actualCS;

  reactor.core.publisher.FluxOnAssembly$OnAssemblyConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super T>, reactor.core.publisher.FluxOnAssembly$AssemblySnapshot, org.reactivestreams.Publisher<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method reactor/core/publisher/FluxOnAssembly$OnAssemblySubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/FluxOnAssembly$AssemblySnapshot;Lorg/reactivestreams/Publisher;)V
       7: aload_0
       8: aload_1
       9: putfield      #2                  // Field actualCS:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actualCS:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: aload_1
       5: invokeinterface #3,  2            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      10: ireturn
}
