Compiled from "FluxDistinct.java"
final class reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber<T, K, C> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  final C collection;

  final java.util.function.Function<? super T, ? extends K> keyExtractor;

  final java.util.function.BiPredicate<C, K> distinctPredicate;

  final java.util.function.Consumer<C> cleanupCallback;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  boolean done;

  int sourceMode;

  reactor.core.publisher.FluxDistinct$DistinctFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, C, java.util.function.Function<? super T, ? extends K>, java.util.function.BiPredicate<C, K>, java.util.function.Consumer<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field collection:Ljava/lang/Object;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field keyExtractor:Ljava/util/function/Function;
      29: aload_0
      30: aload         4
      32: putfield      #7                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      35: aload_0
      36: aload         5
      38: putfield      #8                  // Field cleanupCallback:Ljava/util/function/Consumer;
      41: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #10                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #11                 // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_0
      24: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #13                 // Method tryOnNext:(Ljava/lang/Object;)Z
       5: ifne          18
       8: aload_0
       9: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      12: lconst_1
      13: invokeinterface #14,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      18: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #15                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     20
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #17,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: iconst_1
      19: ireturn
      20: aload_0
      21: getfield      #18                 // Field done:Z
      24: ifeq          37
      27: aload_1
      28: aload_0
      29: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      32: invokestatic  #19                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      35: iconst_1
      36: ireturn
      37: aload_0
      38: getfield      #6                  // Field keyExtractor:Ljava/util/function/Function;
      41: aload_1
      42: invokeinterface #20,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      47: ldc           #21                 // String The distinct extractor returned a null value.
      49: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      52: astore_2
      53: goto          84
      56: astore_3
      57: aload_0
      58: aload_0
      59: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      62: aload_3
      63: aload_1
      64: aload_0
      65: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      68: invokestatic  #24                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      71: invokevirtual #25                 // Method onError:(Ljava/lang/Throwable;)V
      74: aload_1
      75: aload_0
      76: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      79: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      82: iconst_1
      83: ireturn
      84: aload_0
      85: getfield      #7                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      88: aload_0
      89: getfield      #5                  // Field collection:Ljava/lang/Object;
      92: aload_2
      93: invokeinterface #27,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      98: istore_3
      99: goto          132
     102: astore        4
     104: aload_0
     105: aload_0
     106: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
     109: aload         4
     111: aload_1
     112: aload_0
     113: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     116: invokestatic  #24                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     119: invokevirtual #25                 // Method onError:(Ljava/lang/Throwable;)V
     122: aload_1
     123: aload_0
     124: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     127: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     130: iconst_1
     131: ireturn
     132: iload_3
     133: ifeq          148
     136: aload_0
     137: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     140: aload_1
     141: invokeinterface #17,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     146: iconst_1
     147: ireturn
     148: aload_1
     149: aload_0
     150: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     153: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     156: iconst_0
     157: ireturn
    Exception table:
       from    to  target type
          37    53    56   Class java/lang/Throwable
          84    99   102   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #28                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #18                 // Field done:Z
      21: aload_0
      22: getfield      #8                  // Field cleanupCallback:Ljava/util/function/Consumer;
      25: aload_0
      26: getfield      #5                  // Field collection:Ljava/lang/Object;
      29: invokeinterface #29,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      34: aload_0
      35: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      38: aload_1
      39: invokeinterface #30,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      44: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #18                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #18                 // Field done:Z
      13: aload_0
      14: getfield      #8                  // Field cleanupCallback:Ljava/util/function/Consumer;
      17: aload_0
      18: getfield      #5                  // Field collection:Ljava/lang/Object;
      21: invokeinterface #29,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: invokeinterface #31,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      35: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #14,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #32,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: aload_0
      10: getfield      #5                  // Field collection:Ljava/lang/Object;
      13: ifnull        29
      16: aload_0
      17: getfield      #8                  // Field cleanupCallback:Ljava/util/function/Consumer;
      20: aload_0
      21: getfield      #5                  // Field collection:Ljava/lang/Object;
      24: invokeinterface #29,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      29: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: iload_1
       5: invokeinterface #33,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      10: istore_2
      11: aload_0
      12: iload_2
      13: putfield      #15                 // Field sourceMode:I
      16: iload_2
      17: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #34                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #35                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #18                 // Field done:Z
      23: invokestatic  #36                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #37                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #15                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     105
       8: lconst_0
       9: lstore_1
      10: aload_0
      11: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      14: invokeinterface #38,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      19: astore_3
      20: aload_3
      21: ifnonnull     26
      24: aconst_null
      25: areturn
      26: aload_0
      27: getfield      #6                  // Field keyExtractor:Ljava/util/function/Function;
      30: aload_3
      31: invokeinterface #20,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      36: ldc           #39                 // String The keyExtractor returned a null collection
      38: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      41: astore        4
      43: aload_0
      44: getfield      #7                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
      47: aload_0
      48: getfield      #5                  // Field collection:Ljava/lang/Object;
      51: aload         4
      53: invokeinterface #27,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      58: ifeq          74
      61: lload_1
      62: lconst_0
      63: lcmp
      64: ifeq          72
      67: aload_0
      68: lload_1
      69: invokevirtual #40                 // Method request:(J)V
      72: aload_3
      73: areturn
      74: aload_3
      75: aload_0
      76: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      79: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      82: lload_1
      83: lconst_1
      84: ladd
      85: lstore_1
      86: goto          102
      89: astore        4
      91: aload_3
      92: aload_0
      93: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      96: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      99: aload         4
     101: athrow
     102: goto          10
     105: aload_0
     106: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
     109: invokeinterface #38,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
     114: astore_1
     115: aload_1
     116: ifnonnull     121
     119: aconst_null
     120: areturn
     121: aload_0
     122: getfield      #6                  // Field keyExtractor:Ljava/util/function/Function;
     125: aload_1
     126: invokeinterface #20,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     131: ldc           #39                 // String The keyExtractor returned a null collection
     133: invokestatic  #22                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     136: astore_2
     137: aload_0
     138: getfield      #7                  // Field distinctPredicate:Ljava/util/function/BiPredicate;
     141: aload_0
     142: getfield      #5                  // Field collection:Ljava/lang/Object;
     145: aload_2
     146: invokeinterface #27,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
     151: ifeq          156
     154: aload_1
     155: areturn
     156: aload_1
     157: aload_0
     158: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     161: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     164: goto          178
     167: astore_2
     168: aload_1
     169: aload_0
     170: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     173: invokestatic  #26                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     176: aload_2
     177: athrow
     178: goto          105
    Exception table:
       from    to  target type
          26    73    89   Class java/lang/Throwable
          74    86    89   Class java/lang/Throwable
         121   155   167   Class java/lang/Throwable
         156   164   167   Class java/lang/Throwable

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #41,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #42,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: aload_0
      10: getfield      #8                  // Field cleanupCallback:Ljava/util/function/Consumer;
      13: aload_0
      14: getfield      #5                  // Field collection:Ljava/lang/Object;
      17: invokeinterface #29,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      22: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #9                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #43,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn
}
