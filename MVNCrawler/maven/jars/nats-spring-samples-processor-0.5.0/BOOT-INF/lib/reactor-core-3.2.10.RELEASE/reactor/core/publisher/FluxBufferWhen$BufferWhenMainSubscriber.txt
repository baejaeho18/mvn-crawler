Compiled from "FluxBufferWhen.java"
final class reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber<T, OPEN, CLOSE, BUFFER extends java.util.Collection<? super T>> implements reactor.core.publisher.InnerOperator<T, BUFFER> {
  final reactor.core.CoreSubscriber<? super BUFFER> actual;

  final reactor.util.context.Context ctx;

  final org.reactivestreams.Publisher<? extends OPEN> bufferOpen;

  final java.util.function.Function<? super OPEN, ? extends org.reactivestreams.Publisher<? extends CLOSE>> bufferClose;

  final java.util.function.Supplier<BUFFER> bufferSupplier;

  final reactor.core.Disposable$Composite subscribers;

  final java.util.Queue<BUFFER> queue;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber> REQUESTED;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber, org.reactivestreams.Subscription> S;

  volatile java.lang.Throwable errors;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber, java.lang.Throwable> ERRORS;

  volatile int windows;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber> WINDOWS;

  volatile boolean done;

  volatile boolean cancelled;

  long index;

  java.util.LinkedHashMap<java.lang.Long, BUFFER> buffers;

  long emitted;

  reactor.core.publisher.FluxBufferWhen$BufferWhenMainSubscriber(reactor.core.CoreSubscriber<? super BUFFER>, java.util.function.Supplier<BUFFER>, java.util.function.Supplier<? extends java.util.Queue<BUFFER>>, org.reactivestreams.Publisher<? extends OPEN>, java.util.function.Function<? super OPEN, ? extends org.reactivestreams.Publisher<? extends CLOSE>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field bufferOpen:Lorg/reactivestreams/Publisher;
      25: aload_0
      26: aload         5
      28: putfield      #6                  // Field bufferClose:Ljava/util/function/Function;
      31: aload_0
      32: aload_2
      33: putfield      #7                  // Field bufferSupplier:Ljava/util/function/Supplier;
      36: aload_0
      37: aload_3
      38: invokeinterface #8,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      43: checkcast     #9                  // class java/util/Queue
      46: putfield      #10                 // Field queue:Ljava/util/Queue;
      49: aload_0
      50: new           #11                 // class java/util/LinkedHashMap
      53: dup
      54: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":()V
      57: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      60: aload_0
      61: invokestatic  #14                 // Method reactor/core/Disposables.composite:()Lreactor/core/Disposable$Composite;
      64: putfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      67: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #17                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          20
      11: aload_1
      12: ldc2_w        #19                 // long 9223372036854775807l
      15: invokeinterface #21,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: return

  public reactor.core.CoreSubscriber<? super BUFFER> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
       8: astore_3
       9: aload_3
      10: ifnonnull     16
      13: aload_2
      14: monitorexit
      15: return
      16: aload_3
      17: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      22: ifeq          36
      25: aload_1
      26: aload_0
      27: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      30: invokestatic  #23                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      33: aload_2
      34: monitorexit
      35: return
      36: aload_3
      37: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      42: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      47: astore        4
      49: aload         4
      51: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      56: ifeq          83
      59: aload         4
      61: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      66: checkcast     #28                 // class java/util/Collection
      69: astore        5
      71: aload         5
      73: aload_1
      74: invokeinterface #29,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      79: pop
      80: goto          49
      83: aload_2
      84: monitorexit
      85: goto          95
      88: astore        6
      90: aload_2
      91: monitorexit
      92: aload         6
      94: athrow
      95: return
    Exception table:
       from    to  target type
           4    15    88   any
          16    35    88   any
          36    85    88   any
          88    92    88   any

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #31                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          106
      11: aload_0
      12: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      15: invokeinterface #32,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      20: aload_0
      21: dup
      22: astore_3
      23: monitorenter
      24: aload_0
      25: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      28: astore_2
      29: aload_0
      30: aconst_null
      31: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      34: aload_3
      35: monitorexit
      36: goto          46
      39: astore        4
      41: aload_3
      42: monitorexit
      43: aload         4
      45: athrow
      46: aload_0
      47: iconst_1
      48: putfield      #33                 // Field done:Z
      51: aload_0
      52: invokevirtual #34                 // Method drain:()V
      55: aload_2
      56: ifnull        103
      59: aload_2
      60: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      65: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      70: astore_3
      71: aload_3
      72: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      77: ifeq          103
      80: aload_3
      81: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      86: checkcast     #28                 // class java/util/Collection
      89: astore        4
      91: aload         4
      93: aload_0
      94: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      97: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
     100: goto          71
     103: goto          114
     106: aload_1
     107: aload_0
     108: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     111: invokestatic  #36                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     114: return
    Exception table:
       from    to  target type
          24    36    39   any
          39    43    39   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
       4: invokeinterface #32,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
       9: aload_0
      10: dup
      11: astore_1
      12: monitorenter
      13: aload_0
      14: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      17: astore_2
      18: aload_2
      19: ifnonnull     25
      22: aload_1
      23: monitorexit
      24: return
      25: aload_2
      26: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      31: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          72
      46: aload_3
      47: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #28                 // class java/util/Collection
      55: astore        4
      57: aload_0
      58: getfield      #10                 // Field queue:Ljava/util/Queue;
      61: aload         4
      63: invokeinterface #37,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      68: pop
      69: goto          37
      72: aload_0
      73: aconst_null
      74: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      77: aload_1
      78: monitorexit
      79: goto          89
      82: astore        5
      84: aload_1
      85: monitorexit
      86: aload         5
      88: athrow
      89: aload_0
      90: iconst_1
      91: putfield      #33                 // Field done:Z
      94: aload_0
      95: invokevirtual #34                 // Method drain:()V
      98: return
    Exception table:
       from    to  target type
          13    24    82   any
          25    79    82   any
          82    86    82   any

  public void request(long);
    Code:
       0: getstatic     #38                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: invokestatic  #39                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
       8: pop2
       9: aload_0
      10: invokevirtual #34                 // Method drain:()V
      13: return

  public void cancel();
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #40                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: ifeq          129
      10: aload_0
      11: iconst_1
      12: putfield      #41                 // Field cancelled:Z
      15: aload_0
      16: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      19: invokeinterface #32,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      24: aload_0
      25: dup
      26: astore_2
      27: monitorenter
      28: aload_0
      29: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      32: astore_1
      33: aload_0
      34: aconst_null
      35: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      38: aload_2
      39: monitorexit
      40: goto          48
      43: astore_3
      44: aload_2
      45: monitorexit
      46: aload_3
      47: athrow
      48: getstatic     #42                 // Field WINDOWS:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      51: aload_0
      52: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      55: ifne          74
      58: aload_0
      59: getfield      #10                 // Field queue:Ljava/util/Queue;
      62: aload_0
      63: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      66: invokedynamic #44,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      71: invokestatic  #45                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      74: aload_1
      75: ifnull        129
      78: aload_1
      79: invokeinterface #22,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
      84: ifne          129
      87: aload_1
      88: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      93: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      98: astore_2
      99: aload_2
     100: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     105: ifeq          129
     108: aload_2
     109: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     114: checkcast     #28                 // class java/util/Collection
     117: astore_3
     118: aload_3
     119: aload_0
     120: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     123: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
     126: goto          99
     129: return
    Exception table:
       from    to  target type
          28    40    43   any
          43    46    43   any

  void drain();
    Code:
       0: getstatic     #42                 // Field WINDOWS:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #43                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #46                 // Field emitted:J
      17: lstore_2
      18: aload_0
      19: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      22: astore        4
      24: aload_0
      25: getfield      #10                 // Field queue:Ljava/util/Queue;
      28: astore        5
      30: aload_0
      31: getfield      #47                 // Field requested:J
      34: lstore        6
      36: lload_2
      37: lload         6
      39: lcmp
      40: ifeq          182
      43: aload_0
      44: getfield      #41                 // Field cancelled:Z
      47: ifeq          65
      50: aload         5
      52: aload_0
      53: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      56: invokedynamic #44,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      61: invokestatic  #45                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      64: return
      65: aload_0
      66: getfield      #33                 // Field done:Z
      69: istore        8
      71: iload         8
      73: ifeq          116
      76: aload_0
      77: getfield      #48                 // Field errors:Ljava/lang/Throwable;
      80: ifnull        116
      83: aload         5
      85: aload_0
      86: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      89: invokedynamic #44,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      94: invokestatic  #45                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      97: getstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     100: aload_0
     101: invokestatic  #49                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     104: astore        9
     106: aload         4
     108: aload         9
     110: invokeinterface #50,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     115: return
     116: aload         5
     118: invokeinterface #51,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     123: checkcast     #28                 // class java/util/Collection
     126: astore        9
     128: aload         9
     130: ifnonnull     137
     133: iconst_1
     134: goto          138
     137: iconst_0
     138: istore        10
     140: iload         8
     142: ifeq          158
     145: iload         10
     147: ifeq          158
     150: aload         4
     152: invokeinterface #52,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     157: return
     158: iload         10
     160: ifeq          166
     163: goto          182
     166: aload         4
     168: aload         9
     170: invokeinterface #53,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     175: lload_2
     176: lconst_1
     177: ladd
     178: lstore_2
     179: goto          36
     182: lload_2
     183: lload         6
     185: lcmp
     186: ifne          276
     189: aload_0
     190: getfield      #41                 // Field cancelled:Z
     193: ifeq          211
     196: aload         5
     198: aload_0
     199: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     202: invokedynamic #44,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     207: invokestatic  #45                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     210: return
     211: aload_0
     212: getfield      #33                 // Field done:Z
     215: ifeq          276
     218: aload_0
     219: getfield      #48                 // Field errors:Ljava/lang/Throwable;
     222: ifnull        258
     225: aload         5
     227: aload_0
     228: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     231: invokedynamic #44,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
     236: invokestatic  #45                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     239: getstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     242: aload_0
     243: invokestatic  #49                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     246: astore        8
     248: aload         4
     250: aload         8
     252: invokeinterface #50,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     257: return
     258: aload         5
     260: invokeinterface #54,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     265: ifeq          276
     268: aload         4
     270: invokeinterface #52,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     275: return
     276: aload_0
     277: lload_2
     278: putfield      #46                 // Field emitted:J
     281: getstatic     #42                 // Field WINDOWS:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     284: aload_0
     285: iload_1
     286: ineg
     287: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     290: istore_1
     291: iload_1
     292: ifne          298
     295: goto          301
     298: goto          30
     301: return

  void open(OPEN);
    Code:
       0: aload_0
       1: getfield      #7                  // Field bufferSupplier:Ljava/util/function/Supplier;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: ldc           #56                 // String The bufferSupplier returned a null Collection
      11: invokestatic  #57                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #28                 // class java/util/Collection
      17: astore_3
      18: aload_0
      19: getfield      #6                  // Field bufferClose:Ljava/util/function/Function;
      22: aload_1
      23: invokeinterface #58,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      28: ldc           #59                 // String The bufferClose returned a null Publisher
      30: invokestatic  #57                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      33: checkcast     #60                 // class org/reactivestreams/Publisher
      36: astore_2
      37: goto          181
      40: astore        4
      42: aload         4
      44: invokestatic  #62                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      47: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      50: aload_0
      51: invokestatic  #40                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
      54: pop
      55: getstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      58: aload_0
      59: aload         4
      61: invokestatic  #31                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
      64: ifeq          171
      67: aload_0
      68: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      71: invokeinterface #32,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      76: aload_0
      77: dup
      78: astore        6
      80: monitorenter
      81: aload_0
      82: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      85: astore        5
      87: aload_0
      88: aconst_null
      89: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      92: aload         6
      94: monitorexit
      95: goto          106
      98: astore        7
     100: aload         6
     102: monitorexit
     103: aload         7
     105: athrow
     106: aload_0
     107: iconst_1
     108: putfield      #33                 // Field done:Z
     111: aload_0
     112: invokevirtual #34                 // Method drain:()V
     115: aload         5
     117: ifnull        168
     120: aload         5
     122: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     127: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     132: astore        6
     134: aload         6
     136: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     141: ifeq          168
     144: aload         6
     146: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     151: checkcast     #28                 // class java/util/Collection
     154: astore        7
     156: aload         7
     158: aload_0
     159: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     162: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
     165: goto          134
     168: goto          180
     171: aload         4
     173: aload_0
     174: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     177: invokestatic  #36                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     180: return
     181: aload_0
     182: getfield      #63                 // Field index:J
     185: lstore        4
     187: aload_0
     188: lload         4
     190: lconst_1
     191: ladd
     192: putfield      #63                 // Field index:J
     195: aload_0
     196: dup
     197: astore        6
     199: monitorenter
     200: aload_0
     201: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
     204: astore        7
     206: aload         7
     208: ifnonnull     215
     211: aload         6
     213: monitorexit
     214: return
     215: aload         7
     217: lload         4
     219: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     222: aload_3
     223: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     228: pop
     229: aload         6
     231: monitorexit
     232: goto          243
     235: astore        8
     237: aload         6
     239: monitorexit
     240: aload         8
     242: athrow
     243: new           #66                 // class reactor/core/publisher/FluxBufferWhen$BufferWhenCloseSubscriber
     246: dup
     247: aload_0
     248: lload         4
     250: invokespecial #67                 // Method reactor/core/publisher/FluxBufferWhen$BufferWhenCloseSubscriber."<init>":(Lreactor/core/publisher/FluxBufferWhen$BufferWhenMainSubscriber;J)V
     253: astore        6
     255: aload_0
     256: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
     259: aload         6
     261: invokeinterface #68,  2           // InterfaceMethod reactor/core/Disposable$Composite.add:(Lreactor/core/Disposable;)Z
     266: pop
     267: aload_2
     268: aload         6
     270: invokeinterface #69,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     275: return
    Exception table:
       from    to  target type
           0    37    40   Class java/lang/Throwable
          81    95    98   any
          98   103    98   any
         200   214   235   any
         215   232   235   any
         235   240   235   any

  void openComplete(reactor.core.publisher.FluxBufferWhen$BufferWhenOpenSubscriber<OPEN>);
    Code:
       0: aload_0
       1: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
      10: pop
      11: aload_0
      12: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      15: invokeinterface #71,  1           // InterfaceMethod reactor/core/Disposable$Composite.size:()I
      20: ifne          40
      23: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      26: aload_0
      27: invokestatic  #40                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
      30: pop
      31: aload_0
      32: iconst_1
      33: putfield      #33                 // Field done:Z
      36: aload_0
      37: invokevirtual #34                 // Method drain:()V
      40: return

  void close(reactor.core.publisher.FluxBufferWhen$BufferWhenCloseSubscriber<T, BUFFER>, long);
    Code:
       0: aload_0
       1: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
       4: aload_1
       5: invokeinterface #70,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
      10: pop
      11: iconst_0
      12: istore        4
      14: aload_0
      15: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      18: invokeinterface #71,  1           // InterfaceMethod reactor/core/Disposable$Composite.size:()I
      23: ifne          37
      26: iconst_1
      27: istore        4
      29: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: aload_0
      33: invokestatic  #40                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
      36: pop
      37: aload_0
      38: dup
      39: astore        5
      41: monitorenter
      42: aload_0
      43: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      46: astore        6
      48: aload         6
      50: ifnonnull     57
      53: aload         5
      55: monitorexit
      56: return
      57: aload_0
      58: getfield      #10                 // Field queue:Ljava/util/Queue;
      61: aload_0
      62: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      65: lload_2
      66: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      69: invokevirtual #72                 // Method java/util/LinkedHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      72: invokeinterface #37,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      77: pop
      78: aload         5
      80: monitorexit
      81: goto          92
      84: astore        7
      86: aload         5
      88: monitorexit
      89: aload         7
      91: athrow
      92: iload         4
      94: ifeq          102
      97: aload_0
      98: iconst_1
      99: putfield      #33                 // Field done:Z
     102: aload_0
     103: invokevirtual #34                 // Method drain:()V
     106: return
    Exception table:
       from    to  target type
          42    56    84   any
          57    81    84   any
          84    89    84   any

  void boundaryError(reactor.core.Disposable, java.lang.Throwable);
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #40                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      12: aload_1
      13: invokeinterface #70,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
      18: pop
      19: getstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: aload_0
      23: aload_2
      24: invokestatic  #31                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
      27: ifeq          131
      30: aload_0
      31: getfield      #15                 // Field subscribers:Lreactor/core/Disposable$Composite;
      34: invokeinterface #32,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      39: aload_0
      40: dup
      41: astore        4
      43: monitorenter
      44: aload_0
      45: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      48: astore_3
      49: aload_0
      50: aconst_null
      51: putfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      54: aload         4
      56: monitorexit
      57: goto          68
      60: astore        5
      62: aload         4
      64: monitorexit
      65: aload         5
      67: athrow
      68: aload_0
      69: iconst_1
      70: putfield      #33                 // Field done:Z
      73: aload_0
      74: invokevirtual #34                 // Method drain:()V
      77: aload_3
      78: ifnull        128
      81: aload_3
      82: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      87: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      92: astore        4
      94: aload         4
      96: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     101: ifeq          128
     104: aload         4
     106: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     111: checkcast     #28                 // class java/util/Collection
     114: astore        5
     116: aload         5
     118: aload_0
     119: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     122: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
     125: goto          94
     128: goto          139
     131: aload_2
     132: aload_0
     133: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     136: invokestatic  #36                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     139: return
    Exception table:
       from    to  target type
          44    57    60   any
          60    65    60   any

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #73                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #74                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #75                 // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: areturn
      24: aload_1
      25: getstatic     #76                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      28: if_acmpne     37
      31: ldc           #78                 // int 2147483647
      33: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      36: areturn
      37: aload_1
      38: getstatic     #80                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      41: if_acmpne     75
      44: aload_0
      45: getfield      #13                 // Field buffers:Ljava/util/LinkedHashMap;
      48: invokevirtual #81                 // Method java/util/LinkedHashMap.values:()Ljava/util/Collection;
      51: invokeinterface #82,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      56: invokedynamic #83,  0             // InvokeDynamic #1:applyAsInt:()Ljava/util/function/ToIntFunction;
      61: invokeinterface #84,  2           // InterfaceMethod java/util/stream/Stream.mapToInt:(Ljava/util/function/ToIntFunction;)Ljava/util/stream/IntStream;
      66: invokeinterface #85,  1           // InterfaceMethod java/util/stream/IntStream.sum:()I
      71: invokestatic  #79                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: areturn
      75: aload_1
      76: getstatic     #86                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      79: if_acmpne     90
      82: aload_0
      83: getfield      #41                 // Field cancelled:Z
      86: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      89: areturn
      90: aload_1
      91: getstatic     #88                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      94: if_acmpne     105
      97: aload_0
      98: getfield      #33                 // Field done:Z
     101: invokestatic  #87                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
     104: areturn
     105: aload_1
     106: getstatic     #89                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
     109: if_acmpne     120
     112: aload_0
     113: getfield      #47                 // Field requested:J
     116: invokestatic  #64                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     119: areturn
     120: aload_1
     121: getstatic     #90                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
     124: if_acmpne     132
     127: aload_0
     128: getfield      #48                 // Field errors:Ljava/lang/Throwable;
     131: areturn
     132: aconst_null
     133: areturn

  static {};
    Code:
       0: ldc           #91                 // class reactor/core/publisher/FluxBufferWhen$BufferWhenMainSubscriber
       2: ldc           #92                 // String requested
       4: invokestatic  #93                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #38                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: ldc           #91                 // class reactor/core/publisher/FluxBufferWhen$BufferWhenMainSubscriber
      12: ldc           #94                 // class org/reactivestreams/Subscription
      14: ldc           #95                 // String s
      16: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: putstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: ldc           #91                 // class reactor/core/publisher/FluxBufferWhen$BufferWhenMainSubscriber
      24: ldc           #61                 // class java/lang/Throwable
      26: ldc           #97                 // String errors
      28: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: putstatic     #30                 // Field ERRORS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: ldc           #91                 // class reactor/core/publisher/FluxBufferWhen$BufferWhenMainSubscriber
      36: ldc           #98                 // String windows
      38: invokestatic  #99                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      41: putstatic     #42                 // Field WINDOWS:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      44: return
}
