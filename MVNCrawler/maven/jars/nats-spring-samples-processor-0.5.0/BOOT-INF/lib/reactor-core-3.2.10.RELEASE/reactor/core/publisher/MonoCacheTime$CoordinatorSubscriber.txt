Compiled from "MonoCacheTime.java"
final class reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber<T> implements reactor.core.publisher.InnerConsumer<T>, reactor.core.publisher.Signal<T> {
  final reactor.core.publisher.MonoCacheTime<T> main;

  volatile org.reactivestreams.Subscription subscription;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber, org.reactivestreams.Subscription> S;

  volatile reactor.core.publisher.Operators$MonoSubscriber<T, T>[] subscribers;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber, reactor.core.publisher.Operators$MonoSubscriber[]> SUBSCRIBERS;

  private static final reactor.core.publisher.Operators$MonoSubscriber[] TERMINATED;

  private static final reactor.core.publisher.Operators$MonoSubscriber[] EMPTY;

  reactor.core.publisher.MonoCacheTime$CoordinatorSubscriber(reactor.core.publisher.MonoCacheTime<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
       9: aload_0
      10: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/Operators$MonoSubscriber;
      13: putfield      #4                  // Field subscribers:[Lreactor/core/publisher/Operators$MonoSubscriber;
      16: return

  public java.lang.Throwable getThrowable();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String illegal signal use
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public org.reactivestreams.Subscription getSubscription();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String illegal signal use
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public T get();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String illegal signal use
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public reactor.core.publisher.SignalType getType();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #6                  // String illegal signal use
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public reactor.util.context.Context getContext();
    Code:
       0: new           #5                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #8                  // String illegal signal use: getContext
       6: invokespecial #7                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  final boolean add(reactor.core.publisher.Operators$MonoSubscriber<T, T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/Operators$MonoSubscriber;
       4: astore_2
       5: aload_2
       6: getstatic     #9                  // Field TERMINATED:[Lreactor/core/publisher/Operators$MonoSubscriber;
       9: if_acmpne     14
      12: iconst_0
      13: ireturn
      14: aload_2
      15: arraylength
      16: istore_3
      17: iload_3
      18: iconst_1
      19: iadd
      20: anewarray     #10                 // class reactor/core/publisher/Operators$MonoSubscriber
      23: astore        4
      25: aload_2
      26: iconst_0
      27: aload         4
      29: iconst_0
      30: iload_3
      31: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload         4
      36: iload_3
      37: aload_1
      38: aastore
      39: getstatic     #12                 // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: aload_0
      43: aload_2
      44: aload         4
      46: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: goto          0

  final void remove(reactor.core.publisher.Operators$MonoSubscriber<T, T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/Operators$MonoSubscriber;
       4: astore_2
       5: aload_2
       6: getstatic     #9                  // Field TERMINATED:[Lreactor/core/publisher/Operators$MonoSubscriber;
       9: if_acmpeq     19
      12: aload_2
      13: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/Operators$MonoSubscriber;
      16: if_acmpne     20
      19: return
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_m1
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload_3
      32: if_icmpge     56
      35: aload_2
      36: iload         5
      38: aaload
      39: aload_1
      40: if_acmpne     50
      43: iload         5
      45: istore        4
      47: goto          56
      50: iinc          5, 1
      53: goto          29
      56: iload         4
      58: ifge          62
      61: return
      62: iload_3
      63: iconst_1
      64: if_icmpne     75
      67: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/Operators$MonoSubscriber;
      70: astore        5
      72: goto          111
      75: iload_3
      76: iconst_1
      77: isub
      78: anewarray     #10                 // class reactor/core/publisher/Operators$MonoSubscriber
      81: astore        5
      83: aload_2
      84: iconst_0
      85: aload         5
      87: iconst_0
      88: iload         4
      90: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_2
      94: iload         4
      96: iconst_1
      97: iadd
      98: aload         5
     100: iload         4
     102: iload_3
     103: iload         4
     105: isub
     106: iconst_1
     107: isub
     108: invokestatic  #11                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     111: getstatic     #12                 // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     114: aload_0
     115: aload_2
     116: aload         5
     118: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     121: ifeq          125
     124: return
     125: goto          0

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #14                 // Field subscription:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #15                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          25
      11: aload_0
      12: aload_1
      13: putfield      #14                 // Field subscription:Lorg/reactivestreams/Subscription;
      16: aload_1
      17: ldc2_w        #17                 // long 9223372036854775807l
      20: invokeinterface #19,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return

  private void signalCached(reactor.core.publisher.Signal<T>);
    Code:
       0: aload_1
       1: astore_2
       2: getstatic     #20                 // Field reactor/core/publisher/MonoCacheTime.STATE:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       5: aload_0
       6: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
       9: aload_0
      10: aload_1
      11: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      14: ifeq          164
      17: aconst_null
      18: astore_3
      19: aload_0
      20: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
      23: getfield      #21                 // Field reactor/core/publisher/MonoCacheTime.ttlGenerator:Ljava/util/function/Function;
      26: aload_1
      27: invokeinterface #22,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: checkcast     #23                 // class java/time/Duration
      35: astore_3
      36: goto          79
      39: astore        4
      41: aload         4
      43: invokestatic  #25                 // InterfaceMethod reactor/core/publisher/Signal.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Signal;
      46: astore_2
      47: getstatic     #20                 // Field reactor/core/publisher/MonoCacheTime.STATE:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      50: aload_0
      51: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
      54: aload_2
      55: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
      58: aload_1
      59: invokeinterface #27,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnError:()Z
      64: ifeq          79
      67: aload         4
      69: aload_1
      70: invokeinterface #28,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
      75: invokestatic  #29                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      78: pop
      79: aload_3
      80: ifnull        110
      83: aload_0
      84: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
      87: getfield      #30                 // Field reactor/core/publisher/MonoCacheTime.clock:Lreactor/core/scheduler/Scheduler;
      90: aload_0
      91: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
      94: aload_3
      95: invokevirtual #31                 // Method java/time/Duration.toMillis:()J
      98: getstatic     #32                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
     101: invokeinterface #33,  5           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
     106: pop
     107: goto          164
     110: aload_1
     111: invokeinterface #34,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnNext:()Z
     116: ifeq          135
     119: aload_1
     120: invokeinterface #35,  1           // InterfaceMethod reactor/core/publisher/Signal.get:()Ljava/lang/Object;
     125: aload_0
     126: invokevirtual #36                 // Method currentContext:()Lreactor/util/context/Context;
     129: invokestatic  #37                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     132: goto          157
     135: aload_1
     136: invokeinterface #27,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnError:()Z
     141: ifeq          157
     144: aload_1
     145: invokeinterface #28,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
     150: aload_0
     151: invokevirtual #36                 // Method currentContext:()Lreactor/util/context/Context;
     154: invokestatic  #38                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     157: aload_0
     158: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
     161: invokevirtual #39                 // Method reactor/core/publisher/MonoCacheTime.run:()V
     164: getstatic     #12                 // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     167: aload_0
     168: getstatic     #9                  // Field TERMINATED:[Lreactor/core/publisher/Operators$MonoSubscriber;
     171: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     174: checkcast     #41                 // class "[Lreactor/core/publisher/Operators$MonoSubscriber;"
     177: astore_3
     178: aload_3
     179: arraylength
     180: istore        4
     182: iconst_0
     183: istore        5
     185: iload         5
     187: iload         4
     189: if_icmpge     255
     192: aload_3
     193: iload         5
     195: aaload
     196: astore        6
     198: aload_2
     199: invokeinterface #34,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnNext:()Z
     204: ifeq          221
     207: aload         6
     209: aload_2
     210: invokeinterface #35,  1           // InterfaceMethod reactor/core/publisher/Signal.get:()Ljava/lang/Object;
     215: invokevirtual #42                 // Method reactor/core/publisher/Operators$MonoSubscriber.complete:(Ljava/lang/Object;)V
     218: goto          249
     221: aload_2
     222: invokeinterface #27,  1           // InterfaceMethod reactor/core/publisher/Signal.isOnError:()Z
     227: ifeq          244
     230: aload         6
     232: aload_2
     233: invokeinterface #28,  1           // InterfaceMethod reactor/core/publisher/Signal.getThrowable:()Ljava/lang/Throwable;
     238: invokevirtual #43                 // Method reactor/core/publisher/Operators$MonoSubscriber.onError:(Ljava/lang/Throwable;)V
     241: goto          249
     244: aload         6
     246: invokevirtual #44                 // Method reactor/core/publisher/Operators$MonoSubscriber.onComplete:()V
     249: iinc          5, 1
     252: goto          185
     255: return
    Exception table:
       from    to  target type
          19    36    39   Class java/lang/Throwable

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
       4: getfield      #45                 // Field reactor/core/publisher/MonoCacheTime.state:Lreactor/core/publisher/Signal;
       7: aload_0
       8: if_acmpeq     16
      11: aload_1
      12: invokestatic  #46                 // Method reactor/core/publisher/Operators.onNextDroppedMulticast:(Ljava/lang/Object;)V
      15: return
      16: aload_0
      17: aload_1
      18: invokestatic  #47                 // InterfaceMethod reactor/core/publisher/Signal.next:(Ljava/lang/Object;)Lreactor/core/publisher/Signal;
      21: invokespecial #48                 // Method signalCached:(Lreactor/core/publisher/Signal;)V
      24: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/MonoCacheTime;
       4: getfield      #45                 // Field reactor/core/publisher/MonoCacheTime.state:Lreactor/core/publisher/Signal;
       7: aload_0
       8: if_acmpeq     16
      11: aload_1
      12: invokestatic  #49                 // Method reactor/core/publisher/Operators.onErrorDroppedMulticast:(Ljava/lang/Throwable;)V
      15: return
      16: aload_0
      17: aload_1
      18: invokestatic  #25                 // InterfaceMethod reactor/core/publisher/Signal.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Signal;
      21: invokespecial #48                 // Method signalCached:(Lreactor/core/publisher/Signal;)V
      24: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokestatic  #50                 // InterfaceMethod reactor/core/publisher/Signal.complete:()Lreactor/core/publisher/Signal;
       4: invokespecial #48                 // Method signalCached:(Lreactor/core/publisher/Signal;)V
       7: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field subscribers:[Lreactor/core/publisher/Operators$MonoSubscriber;
       4: invokestatic  #51                 // Method reactor/core/publisher/Operators.multiSubscribersContext:([Lreactor/core/publisher/InnerProducer;)Lreactor/util/context/Context;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: ldc           #52                 // class reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber
       2: ldc           #53                 // class org/reactivestreams/Subscription
       4: ldc           #54                 // String subscription
       6: invokestatic  #55                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #56                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #52                 // class reactor/core/publisher/MonoCacheTime$CoordinatorSubscriber
      14: ldc           #41                 // class "[Lreactor/core/publisher/Operators$MonoSubscriber;"
      16: ldc           #57                 // String subscribers
      18: invokestatic  #55                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: putstatic     #12                 // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      24: iconst_0
      25: anewarray     #10                 // class reactor/core/publisher/Operators$MonoSubscriber
      28: putstatic     #9                  // Field TERMINATED:[Lreactor/core/publisher/Operators$MonoSubscriber;
      31: iconst_0
      32: anewarray     #10                 // class reactor/core/publisher/Operators$MonoSubscriber
      35: putstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/Operators$MonoSubscriber;
      38: return
}
