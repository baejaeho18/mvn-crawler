Compiled from "FluxOnAssembly.java"
final class reactor.core.publisher.FluxOnAssembly$OnAssemblyException extends java.lang.RuntimeException {
  final java.util.List<reactor.util.function.Tuple3<java.lang.Integer, java.lang.String, java.lang.Integer>> chainOrder;

  private static final long serialVersionUID;

  reactor.core.publisher.FluxOnAssembly$OnAssemblyException(org.reactivestreams.Publisher<?>, reactor.core.publisher.FluxOnAssembly$AssemblySnapshot, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: invokespecial #1                  // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #2                  // class java/util/LinkedList
       9: dup
      10: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      13: putfield      #4                  // Field chainOrder:Ljava/util/List;
      16: aload_2
      17: invokevirtual #5                  // Method reactor/core/publisher/FluxOnAssembly$AssemblySnapshot.isLight:()Z
      20: ifne          52
      23: aload_0
      24: getfield      #4                  // Field chainOrder:Ljava/util/List;
      27: aload_1
      28: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      31: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      34: aload_3
      35: iconst_1
      36: invokestatic  #8                  // Method reactor/core/publisher/Traces.extractOperatorAssemblyInformation:(Ljava/lang/String;Z)Ljava/lang/String;
      39: iconst_0
      40: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: invokestatic  #9                  // Method reactor/util/function/Tuples.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple3;
      46: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      51: pop
      52: return

  void mapLine(int, java.lang.StringBuilder, java.lang.String);
    Code:
       0: iconst_0
       1: istore        4
       3: iload         4
       5: iload_1
       6: if_icmpge     22
       9: aload_2
      10: ldc           #11                 // String \t
      12: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: pop
      16: iinc          4, 1
      19: goto          3
      22: aload_2
      23: ldc           #13                 // String \t|_\t
      25: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_3
      29: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: ldc           #14                 // String \n
      34: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: pop
      38: return

  public synchronized java.lang.Throwable fillInStackTrace();
    Code:
       0: aload_0
       1: areturn

  void add(org.reactivestreams.Publisher<?>, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #15                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       4: invokestatic  #16                 // Method reactor/core/publisher/FluxOnAssembly.getParentOrThis:(Lreactor/core/Scannable;)I
       7: istore_3
       8: aload_0
       9: getfield      #4                  // Field chainOrder:Ljava/util/List;
      12: dup
      13: astore        4
      15: monitorenter
      16: iconst_0
      17: istore        5
      19: aload_0
      20: getfield      #4                  // Field chainOrder:Ljava/util/List;
      23: invokeinterface #17,  1           // InterfaceMethod java/util/List.size:()I
      28: istore        6
      30: iload         6
      32: iconst_1
      33: isub
      34: istore        7
      36: iload         7
      38: iflt          94
      41: aload_0
      42: getfield      #4                  // Field chainOrder:Ljava/util/List;
      45: iload         7
      47: invokeinterface #18,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      52: checkcast     #19                 // class reactor/util/function/Tuple3
      55: astore        8
      57: aload         8
      59: invokevirtual #20                 // Method reactor/util/function/Tuple3.getT1:()Ljava/lang/Object;
      62: checkcast     #21                 // class java/lang/Integer
      65: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      68: iload_3
      69: if_icmpne     88
      72: aload         8
      74: invokevirtual #23                 // Method reactor/util/function/Tuple3.getT3:()Ljava/lang/Object;
      77: checkcast     #21                 // class java/lang/Integer
      80: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      83: istore        5
      85: goto          94
      88: iinc          7, -1
      91: goto          36
      94: aload_1
      95: invokevirtual #6                  // Method java/lang/Object.hashCode:()I
      98: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     101: aload_2
     102: iload         5
     104: invokestatic  #7                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     107: invokestatic  #9                  // Method reactor/util/function/Tuples.of:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Lreactor/util/function/Tuple3;
     110: astore        9
     112: aload_0
     113: getfield      #4                  // Field chainOrder:Ljava/util/List;
     116: aload         9
     118: invokeinterface #24,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     123: ifne          141
     126: aload_0
     127: getfield      #4                  // Field chainOrder:Ljava/util/List;
     130: aload         9
     132: invokeinterface #10,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     137: pop
     138: goto          147
     141: iinc          5, 1
     144: goto          94
     147: aload         4
     149: monitorexit
     150: goto          161
     153: astore        10
     155: aload         4
     157: monitorexit
     158: aload         10
     160: athrow
     161: return
    Exception table:
       from    to  target type
          16   150   153   any
         153   158   153   any

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field chainOrder:Ljava/util/List;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #4                  // Field chainOrder:Ljava/util/List;
      11: invokeinterface #25,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      16: ifeq          26
      19: aload_0
      20: invokespecial #26                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      23: aload_1
      24: monitorexit
      25: areturn
      26: new           #27                 // class java/lang/StringBuilder
      29: dup
      30: aload_0
      31: invokespecial #26                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      34: invokespecial #28                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      37: ldc           #29                 // String Error has been observed by the following operator(s):\n
      39: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: astore_2
      43: aload_0
      44: getfield      #4                  // Field chainOrder:Ljava/util/List;
      47: invokeinterface #30,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      52: astore_3
      53: aload_3
      54: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          100
      62: aload_3
      63: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #19                 // class reactor/util/function/Tuple3
      71: astore        4
      73: aload_0
      74: aload         4
      76: invokevirtual #23                 // Method reactor/util/function/Tuple3.getT3:()Ljava/lang/Object;
      79: checkcast     #21                 // class java/lang/Integer
      82: invokevirtual #22                 // Method java/lang/Integer.intValue:()I
      85: aload_2
      86: aload         4
      88: invokevirtual #33                 // Method reactor/util/function/Tuple3.getT2:()Ljava/lang/Object;
      91: checkcast     #34                 // class java/lang/String
      94: invokevirtual #35                 // Method mapLine:(ILjava/lang/StringBuilder;Ljava/lang/String;)V
      97: goto          53
     100: aload_2
     101: invokevirtual #36                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: aload_1
     105: monitorexit
     106: areturn
     107: astore        5
     109: aload_1
     110: monitorexit
     111: aload         5
     113: athrow
    Exception table:
       from    to  target type
           7    25   107   any
          26   106   107   any
         107   111   107   any
}
