Compiled from "MonoCollectList.java"
final class reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, java.util.List<T>> {
  org.reactivestreams.Subscription s;

  java.util.List<T> list;

  boolean done;

  reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber(reactor.core.CoreSubscriber<? super java.util.List<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: new           #2                  // class java/util/ArrayList
       9: dup
      10: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      13: putfield      #4                  // Field list:Ljava/util/List;
      16: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #8                  // Field done:Z
      23: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #10                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          35
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #13,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: ldc2_w        #15                 // long 9223372036854775807l
      30: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #19                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_0
      26: getfield      #4                  // Field list:Ljava/util/List;
      29: astore_2
      30: aload_2
      31: ifnull        45
      34: aload_2
      35: aload_1
      36: invokeinterface #20,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      41: pop
      42: aload_3
      43: monitorexit
      44: return
      45: aload_3
      46: monitorexit
      47: goto          57
      50: astore        4
      52: aload_3
      53: monitorexit
      54: aload         4
      56: athrow
      57: aload_1
      58: aload_0
      59: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      62: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      67: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      70: return
    Exception table:
       from    to  target type
          25    44    50   any
          45    47    50   any
          50    54    50   any

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #22                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #8                  // Field done:Z
      26: aload_0
      27: dup
      28: astore_3
      29: monitorenter
      30: aload_0
      31: getfield      #4                  // Field list:Ljava/util/List;
      34: astore_2
      35: aload_0
      36: aconst_null
      37: putfield      #4                  // Field list:Ljava/util/List;
      40: aload_3
      41: monitorexit
      42: goto          52
      45: astore        4
      47: aload_3
      48: monitorexit
      49: aload         4
      51: athrow
      52: aload_2
      53: aload_0
      54: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      57: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      62: invokestatic  #23                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      65: aload_0
      66: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      69: aload_1
      70: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      75: return
    Exception table:
       from    to  target type
          30    42    45   any
          45    49    45   any

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #8                  // Field done:Z
      13: aload_0
      14: dup
      15: astore_2
      16: monitorenter
      17: aload_0
      18: getfield      #4                  // Field list:Ljava/util/List;
      21: astore_1
      22: aload_0
      23: aconst_null
      24: putfield      #4                  // Field list:Ljava/util/List;
      27: aload_2
      28: monitorexit
      29: goto          37
      32: astore_3
      33: aload_2
      34: monitorexit
      35: aload_3
      36: athrow
      37: aload_1
      38: ifnull        46
      41: aload_0
      42: aload_1
      43: invokevirtual #25                 // Method complete:(Ljava/lang/Object;)V
      46: return
    Exception table:
       from    to  target type
          17    29    32   any
          32    35    32   any

  protected void discard(java.util.List<T>);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
       5: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      10: invokestatic  #23                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      13: return

  public void cancel();
    Code:
       0: aload_0
       1: dup
       2: astore_3
       3: monitorenter
       4: getstatic     #26                 // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: aload_0
       8: iconst_4
       9: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      12: istore_1
      13: iload_1
      14: iconst_2
      15: if_icmpgt     36
      18: aload_0
      19: getfield      #4                  // Field list:Ljava/util/List;
      22: astore_2
      23: aload_0
      24: aconst_null
      25: putfield      #29                 // Field value:Ljava/lang/Object;
      28: aload_0
      29: aconst_null
      30: putfield      #4                  // Field list:Ljava/util/List;
      33: goto          38
      36: aconst_null
      37: astore_2
      38: aload_3
      39: monitorexit
      40: goto          50
      43: astore        4
      45: aload_3
      46: monitorexit
      47: aload         4
      49: athrow
      50: aload_2
      51: ifnull        76
      54: aload_0
      55: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      58: invokeinterface #30,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      63: aload_2
      64: aload_0
      65: getfield      #12                 // Field actual:Lreactor/core/CoreSubscriber;
      68: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      73: invokestatic  #23                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      76: return
    Exception table:
       from    to  target type
           4    40    43   any
          43    47    43   any

  protected void discard(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #31                 // class java/util/List
       5: invokevirtual #32                 // Method discard:(Ljava/util/List;)V
       8: return
}
