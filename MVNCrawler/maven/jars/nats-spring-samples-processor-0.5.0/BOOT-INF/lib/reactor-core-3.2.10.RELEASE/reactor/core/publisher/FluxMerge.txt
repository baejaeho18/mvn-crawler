Compiled from "FluxMerge.java"
final class reactor.core.publisher.FluxMerge<T> extends reactor.core.publisher.Flux<T> implements reactor.core.publisher.SourceProducer<T> {
  final org.reactivestreams.Publisher<? extends T>[] sources;

  final boolean delayError;

  final int maxConcurrency;

  final java.util.function.Supplier<? extends java.util.Queue<T>> mainQueueSupplier;

  final int prefetch;

  final java.util.function.Supplier<? extends java.util.Queue<T>> innerQueueSupplier;

  reactor.core.publisher.FluxMerge(org.reactivestreams.Publisher<? extends T>[], boolean, int, java.util.function.Supplier<? extends java.util.Queue<T>>, int, java.util.function.Supplier<? extends java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: iload         5
       6: ifgt          37
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #5                  // String prefetch > 0 required but it was
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload         5
      27: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      30: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      33: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_3
      38: ifgt          68
      41: new           #2                  // class java/lang/IllegalArgumentException
      44: dup
      45: new           #3                  // class java/lang/StringBuilder
      48: dup
      49: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #10                 // String maxConcurrency > 0 required but it was
      54: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: iload_3
      58: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      61: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: aload_0
      69: aload_1
      70: ldc           #11                 // String sources
      72: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      75: checkcast     #13                 // class "[Lorg/reactivestreams/Publisher;"
      78: putfield      #14                 // Field sources:[Lorg/reactivestreams/Publisher;
      81: aload_0
      82: iload_2
      83: putfield      #15                 // Field delayError:Z
      86: aload_0
      87: iload_3
      88: putfield      #16                 // Field maxConcurrency:I
      91: aload_0
      92: iload         5
      94: putfield      #17                 // Field prefetch:I
      97: aload_0
      98: aload         4
     100: ldc           #18                 // String mainQueueSupplier
     102: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     105: checkcast     #19                 // class java/util/function/Supplier
     108: putfield      #20                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
     111: aload_0
     112: aload         6
     114: ldc           #21                 // String innerQueueSupplier
     116: invokestatic  #12                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     119: checkcast     #19                 // class java/util/function/Supplier
     122: putfield      #22                 // Field innerQueueSupplier:Ljava/util/function/Supplier;
     125: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #23                 // class reactor/core/publisher/FluxFlatMap$FlatMapMain
       3: dup
       4: aload_1
       5: invokestatic  #24                 // Method identityFunction:()Ljava/util/function/Function;
       8: aload_0
       9: getfield      #15                 // Field delayError:Z
      12: aload_0
      13: getfield      #16                 // Field maxConcurrency:I
      16: aload_0
      17: getfield      #20                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      20: aload_0
      21: getfield      #17                 // Field prefetch:I
      24: aload_0
      25: getfield      #22                 // Field innerQueueSupplier:Ljava/util/function/Supplier;
      28: invokespecial #25                 // Method reactor/core/publisher/FluxFlatMap$FlatMapMain."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;ZILjava/util/function/Supplier;ILjava/util/function/Supplier;)V
      31: astore_2
      32: aload_2
      33: new           #26                 // class reactor/core/publisher/FluxArray$ArraySubscription
      36: dup
      37: aload_2
      38: aload_0
      39: getfield      #14                 // Field sources:[Lorg/reactivestreams/Publisher;
      42: invokespecial #27                 // Method reactor/core/publisher/FluxArray$ArraySubscription."<init>":(Lreactor/core/CoreSubscriber;[Ljava/lang/Object;)V
      45: invokevirtual #28                 // Method reactor/core/publisher/FluxFlatMap$FlatMapMain.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      48: return

  reactor.core.publisher.FluxMerge<T> mergeAdditionalSource(org.reactivestreams.Publisher<? extends T>, java.util.function.IntFunction<java.util.function.Supplier<? extends java.util.Queue<T>>>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field sources:[Lorg/reactivestreams/Publisher;
       4: arraylength
       5: istore_3
       6: iload_3
       7: iconst_1
       8: iadd
       9: anewarray     #29                 // class org/reactivestreams/Publisher
      12: astore        4
      14: aload_0
      15: getfield      #14                 // Field sources:[Lorg/reactivestreams/Publisher;
      18: iconst_0
      19: aload         4
      21: iconst_0
      22: iload_3
      23: invokestatic  #30                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      26: aload         4
      28: iload_3
      29: aload_1
      30: aastore
      31: aload_0
      32: getfield      #16                 // Field maxConcurrency:I
      35: istore        6
      37: iload         6
      39: ldc           #32                 // int 2147483647
      41: if_icmpeq     63
      44: iinc          6, 1
      47: aload_2
      48: iload         6
      50: invokeinterface #33,  2           // InterfaceMethod java/util/function/IntFunction.apply:(I)Ljava/lang/Object;
      55: checkcast     #19                 // class java/util/function/Supplier
      58: astore        5
      60: goto          69
      63: aload_0
      64: getfield      #20                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      67: astore        5
      69: new           #34                 // class reactor/core/publisher/FluxMerge
      72: dup
      73: aload         4
      75: aload_0
      76: getfield      #15                 // Field delayError:Z
      79: iload         6
      81: aload         5
      83: aload_0
      84: getfield      #17                 // Field prefetch:I
      87: aload_0
      88: getfield      #22                 // Field innerQueueSupplier:Ljava/util/function/Supplier;
      91: invokespecial #35                 // Method "<init>":([Lorg/reactivestreams/Publisher;ZILjava/util/function/Supplier;ILjava/util/function/Supplier;)V
      94: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #36                 // Field reactor/core/Scannable$Attr.DELAY_ERROR:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #15                 // Field delayError:Z
      11: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #38                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #17                 // Field prefetch:I
      26: invokestatic  #39                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      29: areturn
      30: aconst_null
      31: areturn
}
