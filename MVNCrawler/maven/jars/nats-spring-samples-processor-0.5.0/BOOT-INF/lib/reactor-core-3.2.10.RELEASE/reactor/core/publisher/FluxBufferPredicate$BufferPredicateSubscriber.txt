Compiled from "FluxBufferPredicate.java"
final class reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber<T, C extends java.util.Collection<? super T>> extends java.util.AbstractQueue<C> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, C>, java.util.function.BooleanSupplier {
  final reactor.core.CoreSubscriber<? super C> actual;

  final reactor.util.context.Context ctx;

  final java.util.function.Supplier<C> bufferSupplier;

  final reactor.core.publisher.FluxBufferPredicate$Mode mode;

  final java.util.function.Predicate<? super T> predicate;

  C buffer;

  boolean done;

  volatile boolean fastpath;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber> REQUESTED;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber, org.reactivestreams.Subscription> S;

  reactor.core.publisher.FluxBufferPredicate$BufferPredicateSubscriber(reactor.core.CoreSubscriber<? super C>, C, java.util.function.Supplier<C>, java.util.function.Predicate<? super T>, reactor.core.publisher.FluxBufferPredicate$Mode);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field buffer:Ljava/util/Collection;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field bufferSupplier:Ljava/util/function/Supplier;
      29: aload_0
      30: aload         4
      32: putfield      #7                  // Field predicate:Ljava/util/function/Predicate;
      35: aload_0
      36: aload         5
      38: putfield      #8                  // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
      41: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #9                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          69
       7: lload_1
       8: ldc2_w        #11                 // long 9223372036854775807l
      11: lcmp
      12: ifne          42
      15: aload_0
      16: iconst_1
      17: putfield      #13                 // Field fastpath:Z
      20: aload_0
      21: ldc2_w        #11                 // long 9223372036854775807l
      24: putfield      #14                 // Field requested:J
      27: aload_0
      28: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      31: ldc2_w        #11                 // long 9223372036854775807l
      34: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      39: goto          69
      42: lload_1
      43: aload_0
      44: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      47: aload_0
      48: getstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      51: aload_0
      52: aload_0
      53: invokestatic  #18                 // Method reactor/core/publisher/DrainUtils.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)Z
      56: ifne          69
      59: aload_0
      60: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      63: lconst_1
      64: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      69: return

  public void cancel();
    Code:
       0: getstatic     #19                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #20                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: getfield      #5                  // Field buffer:Ljava/util/Collection;
      12: aload_0
      13: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      16: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      19: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #19                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #22                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          21
      11: aload_0
      12: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      15: aload_0
      16: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      21: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #24                 // Method tryOnNext:(Ljava/lang/Object;)Z
       5: ifne          18
       8: aload_0
       9: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      12: lconst_1
      13: invokeinterface #16,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      18: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #25                 // Field done:Z
       4: ifeq          17
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #26                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: iconst_1
      16: ireturn
      17: aload_0
      18: getfield      #5                  // Field buffer:Ljava/util/Collection;
      21: astore_2
      22: aload_0
      23: getfield      #7                  // Field predicate:Ljava/util/function/Predicate;
      26: aload_1
      27: invokeinterface #27,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      32: istore_3
      33: goto          77
      36: astore        4
      38: aload_0
      39: aload_0
      40: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      43: aload         4
      45: aload_1
      46: aload_0
      47: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      50: invokestatic  #29                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      53: invokevirtual #30                 // Method onError:(Ljava/lang/Throwable;)V
      56: aload_0
      57: getfield      #5                  // Field buffer:Ljava/util/Collection;
      60: aload_0
      61: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      64: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      67: aload_1
      68: aload_0
      69: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      72: invokestatic  #31                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      75: iconst_1
      76: ireturn
      77: aload_0
      78: getfield      #8                  // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
      81: getstatic     #32                 // Field reactor/core/publisher/FluxBufferPredicate$Mode.UNTIL:Lreactor/core/publisher/FluxBufferPredicate$Mode;
      84: if_acmpne     108
      87: iload_3
      88: ifeq          108
      91: aload_2
      92: aload_1
      93: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      98: pop
      99: aload_0
     100: invokespecial #34                 // Method onNextNewBuffer:()Z
     103: istore        4
     105: goto          197
     108: aload_0
     109: getfield      #8                  // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
     112: getstatic     #35                 // Field reactor/core/publisher/FluxBufferPredicate$Mode.UNTIL_CUT_BEFORE:Lreactor/core/publisher/FluxBufferPredicate$Mode;
     115: if_acmpne     144
     118: iload_3
     119: ifeq          144
     122: aload_0
     123: invokespecial #34                 // Method onNextNewBuffer:()Z
     126: istore        4
     128: aload_0
     129: getfield      #5                  // Field buffer:Ljava/util/Collection;
     132: astore_2
     133: aload_2
     134: aload_1
     135: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     140: pop
     141: goto          197
     144: aload_0
     145: getfield      #8                  // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
     148: getstatic     #36                 // Field reactor/core/publisher/FluxBufferPredicate$Mode.WHILE:Lreactor/core/publisher/FluxBufferPredicate$Mode;
     151: if_acmpne     167
     154: iload_3
     155: ifne          167
     158: aload_0
     159: invokespecial #34                 // Method onNextNewBuffer:()Z
     162: istore        4
     164: goto          197
     167: aload_2
     168: aload_1
     169: invokeinterface #33,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
     174: pop
     175: aload_0
     176: getfield      #13                 // Field fastpath:Z
     179: ifne          191
     182: aload_0
     183: getfield      #14                 // Field requested:J
     186: lconst_0
     187: lcmp
     188: ifne          195
     191: iconst_1
     192: goto          196
     195: iconst_0
     196: ireturn
     197: iload         4
     199: ifne          206
     202: iconst_1
     203: goto          207
     206: iconst_0
     207: ireturn
    Exception table:
       from    to  target type
          22    33    36   Class java/lang/Throwable

  private C triggerNewBuffer();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      11: ifeq          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: getfield      #6                  // Field bufferSupplier:Ljava/util/function/Supplier;
      20: invokeinterface #38,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      25: ldc           #39                 // String The bufferSupplier returned a null buffer
      27: invokestatic  #40                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      30: checkcast     #41                 // class java/util/Collection
      33: astore_2
      34: goto          56
      37: astore_3
      38: aload_0
      39: aload_0
      40: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      43: aload_3
      44: aload_0
      45: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      48: invokestatic  #42                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      51: invokevirtual #30                 // Method onError:(Ljava/lang/Throwable;)V
      54: aconst_null
      55: areturn
      56: aload_0
      57: aload_2
      58: putfield      #5                  // Field buffer:Ljava/util/Collection;
      61: aload_1
      62: areturn
    Exception table:
       from    to  target type
          16    34    37   Class java/lang/Throwable

  private boolean onNextNewBuffer();
    Code:
       0: aload_0
       1: invokespecial #43                 // Method triggerNewBuffer:()Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        15
       9: aload_0
      10: aload_1
      11: invokevirtual #44                 // Method emit:(Ljava/util/Collection;)Z
      14: ireturn
      15: iconst_1
      16: ireturn

  public reactor.core.CoreSubscriber<? super C> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #25                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #45                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #25                 // Field done:Z
      21: aload_0
      22: getfield      #5                  // Field buffer:Ljava/util/Collection;
      25: aload_0
      26: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      29: invokestatic  #21                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      32: aload_0
      33: aconst_null
      34: putfield      #5                  // Field buffer:Ljava/util/Collection;
      37: aload_0
      38: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      41: aload_1
      42: invokeinterface #46,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      47: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #25                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #25                 // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: aload_0
      18: getstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      21: aload_0
      22: aload_0
      23: invokestatic  #47                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
      26: return

  boolean emit(C);
    Code:
       0: aload_0
       1: getfield      #13                 // Field fastpath:Z
       4: ifeq          19
       7: aload_0
       8: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      11: aload_1
      12: invokeinterface #48,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      17: iconst_0
      18: ireturn
      19: getstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: aload_0
      23: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndDecrement:(Ljava/lang/Object;)J
      26: lstore_2
      27: lload_2
      28: lconst_0
      29: lcmp
      30: ifle          58
      33: aload_0
      34: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      37: aload_1
      38: invokeinterface #48,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      43: aload_0
      44: getfield      #14                 // Field requested:J
      47: lconst_0
      48: lcmp
      49: ifle          56
      52: iconst_1
      53: goto          57
      56: iconst_0
      57: ireturn
      58: aload_0
      59: invokevirtual #50                 // Method cancel:()V
      62: aload_0
      63: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      66: ldc           #51                 // String Could not emit buffer due to lack of requests
      68: invokestatic  #52                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      71: invokeinterface #46,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      76: iconst_0
      77: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #53                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #54                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #25                 // Field done:Z
      23: invokestatic  #55                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #56                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: invokevirtual #57                 // Method getAsBoolean:()Z
      38: invokestatic  #55                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #58                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      46: if_acmpne     72
      49: aload_0
      50: getfield      #5                  // Field buffer:Ljava/util/Collection;
      53: astore_2
      54: aload_2
      55: ifnull        67
      58: aload_2
      59: invokeinterface #59,  1           // InterfaceMethod java/util/Collection.size:()I
      64: goto          68
      67: iconst_0
      68: invokestatic  #60                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: areturn
      72: aload_1
      73: getstatic     #61                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      76: if_acmpne     87
      79: aload_0
      80: getfield      #14                 // Field requested:J
      83: invokestatic  #62                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      86: areturn
      87: aload_0
      88: aload_1
      89: invokespecial #63                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      92: areturn

  public boolean getAsBoolean();
    Code:
       0: aload_0
       1: getfield      #15                 // Field s:Lorg/reactivestreams/Subscription;
       4: invokestatic  #64                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       7: if_acmpne     14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public java.util.Iterator<C> iterator();
    Code:
       0: aload_0
       1: invokevirtual #65                 // Method isEmpty:()Z
       4: ifeq          11
       7: invokestatic  #66                 // Method java/util/Collections.emptyIterator:()Ljava/util/Iterator;
      10: areturn
      11: aload_0
      12: getfield      #5                  // Field buffer:Ljava/util/Collection;
      15: invokestatic  #67                 // Method java/util/Collections.singleton:(Ljava/lang/Object;)Ljava/util/Set;
      18: invokeinterface #68,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      23: areturn

  public boolean offer(C);
    Code:
       0: new           #69                 // class java/lang/IllegalArgumentException
       3: dup
       4: invokespecial #70                 // Method java/lang/IllegalArgumentException."<init>":()V
       7: athrow

  public C poll();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/util/Collection;
       4: astore_1
       5: aload_1
       6: ifnull        25
       9: aload_1
      10: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      15: ifne          25
      18: aload_0
      19: aconst_null
      20: putfield      #5                  // Field buffer:Ljava/util/Collection;
      23: aload_1
      24: areturn
      25: aconst_null
      26: areturn

  public C peek();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/util/Collection;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #5                  // Field buffer:Ljava/util/Collection;
       4: ifnull        19
       7: aload_0
       8: getfield      #5                  // Field buffer:Ljava/util/Collection;
      11: invokeinterface #37,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      16: ifeq          23
      19: iconst_0
      20: goto          24
      23: iconst_1
      24: ireturn

  public java.lang.String toString();
    Code:
       0: ldc           #71                 // String FluxBufferPredicate
       2: areturn

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokevirtual #72                 // Method peek:()Ljava/util/Collection;
       4: areturn

  public java.lang.Object poll();
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method poll:()Ljava/util/Collection;
       4: areturn

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #41                 // class java/util/Collection
       5: invokevirtual #74                 // Method offer:(Ljava/util/Collection;)Z
       8: ireturn

  static {};
    Code:
       0: ldc           #75                 // class reactor/core/publisher/FluxBufferPredicate$BufferPredicateSubscriber
       2: ldc           #76                 // String requested
       4: invokestatic  #77                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #17                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: ldc           #75                 // class reactor/core/publisher/FluxBufferPredicate$BufferPredicateSubscriber
      12: ldc           #78                 // class org/reactivestreams/Subscription
      14: ldc           #79                 // String s
      16: invokestatic  #80                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      19: putstatic     #19                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: return
}
