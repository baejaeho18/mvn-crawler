Compiled from "FluxRefCountGrace.java"
final class reactor.core.publisher.FluxRefCountGrace$RefConnection implements java.lang.Runnable, java.util.function.Consumer<reactor.core.Disposable> {
  final reactor.core.publisher.FluxRefCountGrace<?> parent;

  reactor.core.Disposable timer;

  long subscriberCount;

  boolean connected;

  boolean terminated;

  volatile reactor.core.Disposable sourceDisconnector;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxRefCountGrace$RefConnection, reactor.core.Disposable> SOURCE_DISCONNECTOR;

  reactor.core.publisher.FluxRefCountGrace$RefConnection(reactor.core.publisher.FluxRefCountGrace<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/FluxRefCountGrace;
       9: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxRefCountGrace;
       4: aload_0
       5: invokevirtual #3                  // Method reactor/core/publisher/FluxRefCountGrace.timeout:(Lreactor/core/publisher/FluxRefCountGrace$RefConnection;)V
       8: return

  public void accept(reactor.core.Disposable);
    Code:
       0: getstatic     #4                  // Field SOURCE_DISCONNECTOR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #5                  // Method reactor/core/publisher/OperatorDisposables.replace:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lreactor/core/Disposable;)Z
       8: pop
       9: return

  public void accept(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class reactor/core/Disposable
       5: invokevirtual #7                  // Method accept:(Lreactor/core/Disposable;)V
       8: return

  static {};
    Code:
       0: ldc           #8                  // class reactor/core/publisher/FluxRefCountGrace$RefConnection
       2: ldc           #6                  // class reactor/core/Disposable
       4: ldc           #9                  // String sourceDisconnector
       6: invokestatic  #10                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #4                  // Field SOURCE_DISCONNECTOR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
