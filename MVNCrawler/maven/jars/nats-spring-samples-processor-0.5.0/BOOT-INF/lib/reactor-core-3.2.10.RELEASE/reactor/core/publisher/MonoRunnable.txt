Compiled from "MonoRunnable.java"
final class reactor.core.publisher.MonoRunnable<T> extends reactor.core.publisher.Mono<T> implements java.util.concurrent.Callable<java.lang.Void>, reactor.core.publisher.SourceProducer<T> {
  final java.lang.Runnable run;

  reactor.core.publisher.MonoRunnable(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String run
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/lang/Runnable
      14: putfield      #5                  // Field run:Ljava/lang/Runnable;
      17: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/MonoRunnable$MonoRunnableEagerSubscription
       3: dup
       4: invokespecial #7                  // Method reactor/core/publisher/MonoRunnable$MonoRunnableEagerSubscription."<init>":()V
       7: astore_2
       8: aload_1
       9: aload_2
      10: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      15: aload_2
      16: invokevirtual #9                  // Method reactor/core/publisher/MonoRunnable$MonoRunnableEagerSubscription.isCancelled:()Z
      19: ifeq          23
      22: return
      23: aload_0
      24: getfield      #5                  // Field run:Ljava/lang/Runnable;
      27: invokeinterface #10,  1           // InterfaceMethod java/lang/Runnable.run:()V
      32: aload_1
      33: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      38: goto          58
      41: astore_3
      42: aload_1
      43: aload_3
      44: aload_1
      45: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      50: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      53: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      58: return
    Exception table:
       from    to  target type
          23    38    41   Class java/lang/Throwable

  public T block(java.time.Duration);
    Code:
       0: aload_0
       1: getfield      #5                  // Field run:Ljava/lang/Runnable;
       4: invokeinterface #10,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: aconst_null
      10: areturn

  public T block();
    Code:
       0: aload_0
       1: getfield      #5                  // Field run:Ljava/lang/Runnable;
       4: invokeinterface #10,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: aconst_null
      10: areturn

  public java.lang.Void call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #5                  // Field run:Ljava/lang/Runnable;
       4: invokeinterface #10,  1           // InterfaceMethod java/lang/Runnable.run:()V
       9: aconst_null
      10: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aconst_null
       1: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method call:()Ljava/lang/Void;
       4: areturn
}
