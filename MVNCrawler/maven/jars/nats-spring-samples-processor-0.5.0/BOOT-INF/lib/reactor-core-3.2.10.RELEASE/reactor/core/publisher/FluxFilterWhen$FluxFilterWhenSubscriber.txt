Compiled from "FluxFilterWhen.java"
final class reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>> asyncPredicate;

  final int bufferSize;

  final java.util.concurrent.atomic.AtomicReferenceArray<T> toFilter;

  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  int consumed;

  long consumerIndex;

  long emitted;

  java.lang.Boolean innerResult;

  long producerIndex;

  org.reactivestreams.Subscription upstream;

  volatile boolean cancelled;

  volatile reactor.core.publisher.FluxFilterWhen$FilterWhenInner current;

  volatile boolean done;

  volatile java.lang.Throwable error;

  volatile long requested;

  volatile int state;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber, java.lang.Throwable> ERROR;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber> REQUESTED;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber> WIP;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber, reactor.core.publisher.FluxFilterWhen$FilterWhenInner> CURRENT;

  static final reactor.core.publisher.FluxFilterWhen$FilterWhenInner INNER_CANCELLED;

  static final int STATE_FRESH;

  static final int STATE_RUNNING;

  static final int STATE_RESULT;

  reactor.core.publisher.FluxFilterWhen$FluxFilterWhenSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Function<? super T, ? extends org.reactivestreams.Publisher<java.lang.Boolean>>, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: new           #5                  // class java/util/concurrent/atomic/AtomicReferenceArray
      23: dup
      24: iload_3
      25: invokestatic  #6                  // Method reactor/util/concurrent/Queues.ceilingNextPowerOfTwo:(I)I
      28: invokespecial #7                  // Method java/util/concurrent/atomic/AtomicReferenceArray."<init>":(I)V
      31: putfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      34: aload_0
      35: aload_2
      36: putfield      #9                  // Field asyncPredicate:Ljava/util/function/Function;
      39: aload_0
      40: iload_3
      41: putfield      #10                 // Field bufferSize:I
      44: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #11                 // Field producerIndex:J
       4: lstore_2
       5: aload_0
       6: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       9: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      12: iconst_1
      13: isub
      14: istore        4
      16: lload_2
      17: l2i
      18: iload         4
      20: iand
      21: istore        5
      23: aload_0
      24: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      27: iload         5
      29: aload_1
      30: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
      33: aload_0
      34: lload_2
      35: lconst_1
      36: ladd
      37: putfield      #11                 // Field producerIndex:J
      40: aload_0
      41: invokevirtual #14                 // Method drain:()V
      44: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.set:(Ljava/lang/Object;Ljava/lang/Object;)V
       8: aload_0
       9: iconst_1
      10: putfield      #17                 // Field done:Z
      13: aload_0
      14: invokevirtual #14                 // Method drain:()V
      17: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #17                 // Field done:Z
       5: aload_0
       6: invokevirtual #14                 // Method drain:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #18                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #19                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #20                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #14                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #21                 // Field cancelled:Z
       4: ifne          39
       7: aload_0
       8: iconst_1
       9: putfield      #21                 // Field cancelled:Z
      12: aload_0
      13: getfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: invokeinterface #23,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: aload_0
      22: invokevirtual #24                 // Method cancelInner:()V
      25: getstatic     #25                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      28: aload_0
      29: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      32: ifne          39
      35: aload_0
      36: invokevirtual #27                 // Method clear:()V
      39: return

  void cancelInner();
    Code:
       0: getstatic     #28                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #30                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      10: astore_1
      11: aload_1
      12: getstatic     #31                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      15: if_acmpeq     47
      18: getstatic     #28                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      21: aload_0
      22: getstatic     #31                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      25: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #30                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      31: astore_1
      32: aload_1
      33: ifnull        47
      36: aload_1
      37: getstatic     #31                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      40: if_acmpeq     47
      43: aload_1
      44: invokevirtual #33                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner.cancel:()V
      47: return

  void clear();
    Code:
       0: aload_0
       1: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
       4: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
       7: istore_1
       8: iconst_0
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmpge     39
      15: aload_0
      16: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      19: iload_2
      20: aconst_null
      21: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReferenceArray.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;
      24: astore_3
      25: aload_3
      26: aload_0
      27: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      30: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      33: iinc          2, 1
      36: goto          10
      39: aload_0
      40: aconst_null
      41: putfield      #36                 // Field innerResult:Ljava/lang/Boolean;
      44: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #37                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          37
      11: aload_0
      12: aload_1
      13: putfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #38,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_1
      27: aload_0
      28: getfield      #10                 // Field bufferSize:I
      31: i2l
      32: invokeinterface #39,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      37: return

  void drain();
    Code:
       0: getstatic     #25                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #10                 // Field bufferSize:I
      17: invokestatic  #40                 // Method reactor/core/publisher/Operators.unboundedOrLimit:(I)I
      20: istore_2
      21: aload_0
      22: getfield      #41                 // Field emitted:J
      25: lstore_3
      26: aload_0
      27: getfield      #42                 // Field consumerIndex:J
      30: lstore        5
      32: aload_0
      33: getfield      #43                 // Field consumed:I
      36: istore        7
      38: aload_0
      39: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      42: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      45: iconst_1
      46: isub
      47: istore        8
      49: aload_0
      50: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      53: astore        9
      55: aload_0
      56: getfield      #44                 // Field requested:J
      59: lstore        10
      61: lload_3
      62: lload         10
      64: lcmp
      65: ifeq          524
      68: aload_0
      69: getfield      #21                 // Field cancelled:Z
      72: ifeq          80
      75: aload_0
      76: invokevirtual #27                 // Method clear:()V
      79: return
      80: aload_0
      81: getfield      #17                 // Field done:Z
      84: istore        12
      86: lload         5
      88: l2i
      89: iload         8
      91: iand
      92: istore        13
      94: aload_0
      95: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      98: iload         13
     100: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     103: astore        14
     105: aload         14
     107: ifnonnull     114
     110: iconst_1
     111: goto          115
     114: iconst_0
     115: istore        15
     117: iload         12
     119: ifeq          161
     122: iload         15
     124: ifeq          161
     127: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     130: aload_0
     131: invokestatic  #46                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     134: astore        16
     136: aload         16
     138: ifnonnull     151
     141: aload         9
     143: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     148: goto          160
     151: aload         9
     153: aload         16
     155: invokeinterface #48,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     160: return
     161: iload         15
     163: ifeq          169
     166: goto          524
     169: aload_0
     170: getfield      #49                 // Field state:I
     173: istore        16
     175: iload         16
     177: ifne          422
     180: aload_0
     181: getfield      #9                  // Field asyncPredicate:Ljava/util/function/Function;
     184: aload         14
     186: invokeinterface #50,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     191: ldc           #51                 // String The asyncPredicate returned a null value
     193: invokestatic  #52                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     196: checkcast     #53                 // class org/reactivestreams/Publisher
     199: astore        17
     201: goto          224
     204: astore        18
     206: aload         18
     208: invokestatic  #55                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     211: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     214: aload_0
     215: aload         18
     217: invokestatic  #56                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     220: pop
     221: aconst_null
     222: astore        17
     224: aload         17
     226: ifnull        369
     229: aload         17
     231: instanceof    #57                 // class java/util/concurrent/Callable
     234: ifeq          316
     237: aload         17
     239: checkcast     #57                 // class java/util/concurrent/Callable
     242: invokeinterface #58,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
     247: checkcast     #59                 // class java/lang/Boolean
     250: astore        18
     252: goto          275
     255: astore        19
     257: aload         19
     259: invokestatic  #55                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
     262: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     265: aload_0
     266: aload         19
     268: invokestatic  #56                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     271: pop
     272: aconst_null
     273: astore        18
     275: aload         18
     277: ifnull        304
     280: aload         18
     282: invokevirtual #60                 // Method java/lang/Boolean.booleanValue:()Z
     285: ifeq          304
     288: aload         9
     290: aload         14
     292: invokeinterface #61,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     297: lload_3
     298: lconst_1
     299: ladd
     300: lstore_3
     301: goto          313
     304: aload         14
     306: aload_0
     307: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     310: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     313: goto          369
     316: new           #30                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
     319: dup
     320: aload_0
     321: aload         17
     323: instanceof    #62                 // class reactor/core/publisher/Mono
     326: ifne          333
     329: iconst_1
     330: goto          334
     333: iconst_0
     334: invokespecial #63                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber;Z)V
     337: astore        18
     339: getstatic     #28                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     342: aload_0
     343: aconst_null
     344: aload         18
     346: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     349: ifeq          369
     352: aload_0
     353: iconst_1
     354: putfield      #49                 // Field state:I
     357: aload         17
     359: aload         18
     361: invokeinterface #66,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     366: goto          524
     369: aload_0
     370: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     373: iload         13
     375: aconst_null
     376: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicReferenceArray.getAndSet:(ILjava/lang/Object;)Ljava/lang/Object;
     379: astore        18
     381: aload         18
     383: aload_0
     384: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     387: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     390: lload         5
     392: lconst_1
     393: ladd
     394: lstore        5
     396: iinc          7, 1
     399: iload         7
     401: iload_2
     402: if_icmpne     419
     405: iconst_0
     406: istore        7
     408: aload_0
     409: getfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
     412: iload_2
     413: i2l
     414: invokeinterface #39,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     419: goto          521
     422: iload         16
     424: iconst_2
     425: if_icmpne     524
     428: aload_0
     429: getfield      #36                 // Field innerResult:Ljava/lang/Boolean;
     432: astore        17
     434: aload_0
     435: aconst_null
     436: putfield      #36                 // Field innerResult:Ljava/lang/Boolean;
     439: aload         17
     441: ifnull        468
     444: aload         17
     446: invokevirtual #60                 // Method java/lang/Boolean.booleanValue:()Z
     449: ifeq          468
     452: aload         9
     454: aload         14
     456: invokeinterface #61,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     461: lload_3
     462: lconst_1
     463: ladd
     464: lstore_3
     465: goto          477
     468: aload         14
     470: aload_0
     471: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     474: invokestatic  #35                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     477: aload_0
     478: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     481: iload         13
     483: aconst_null
     484: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceArray.lazySet:(ILjava/lang/Object;)V
     487: lload         5
     489: lconst_1
     490: ladd
     491: lstore        5
     493: iinc          7, 1
     496: iload         7
     498: iload_2
     499: if_icmpne     516
     502: iconst_0
     503: istore        7
     505: aload_0
     506: getfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
     509: iload_2
     510: i2l
     511: invokeinterface #39,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     516: aload_0
     517: iconst_0
     518: putfield      #49                 // Field state:I
     521: goto          61
     524: lload_3
     525: lload         10
     527: lcmp
     528: ifne          624
     531: aload_0
     532: getfield      #21                 // Field cancelled:Z
     535: ifeq          543
     538: aload_0
     539: invokevirtual #27                 // Method clear:()V
     542: return
     543: aload_0
     544: getfield      #17                 // Field done:Z
     547: istore        12
     549: lload         5
     551: l2i
     552: iload         8
     554: iand
     555: istore        13
     557: aload_0
     558: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
     561: iload         13
     563: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicReferenceArray.get:(I)Ljava/lang/Object;
     566: astore        14
     568: aload         14
     570: ifnonnull     577
     573: iconst_1
     574: goto          578
     577: iconst_0
     578: istore        15
     580: iload         12
     582: ifeq          624
     585: iload         15
     587: ifeq          624
     590: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     593: aload_0
     594: invokestatic  #46                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     597: astore        16
     599: aload         16
     601: ifnonnull     614
     604: aload         9
     606: invokeinterface #47,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     611: goto          623
     614: aload         9
     616: aload         16
     618: invokeinterface #48,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     623: return
     624: aload_0
     625: getfield      #67                 // Field wip:I
     628: istore        12
     630: iload_1
     631: iload         12
     633: if_icmpne     670
     636: aload_0
     637: iload         7
     639: putfield      #43                 // Field consumed:I
     642: aload_0
     643: lload         5
     645: putfield      #42                 // Field consumerIndex:J
     648: aload_0
     649: lload_3
     650: putfield      #41                 // Field emitted:J
     653: getstatic     #25                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     656: aload_0
     657: iload_1
     658: ineg
     659: invokevirtual #68                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     662: istore_1
     663: iload_1
     664: ifne          673
     667: goto          676
     670: iload         12
     672: istore_1
     673: goto          55
     676: return
    Exception table:
       from    to  target type
         180   201   204   Class java/lang/Throwable
         237   252   255   Class java/lang/Throwable

  void clearCurrent();
    Code:
       0: aload_0
       1: getfield      #69                 // Field current:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: getstatic     #31                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       9: if_acmpeq     22
      12: getstatic     #28                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: aload_1
      17: aconst_null
      18: invokevirtual #64                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      21: pop
      22: return

  void innerResult(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field innerResult:Ljava/lang/Boolean;
       5: aload_0
       6: iconst_2
       7: putfield      #49                 // Field state:I
      10: aload_0
      11: invokevirtual #70                 // Method clearCurrent:()V
      14: aload_0
      15: invokevirtual #14                 // Method drain:()V
      18: return

  void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #56                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: pop
       9: aload_0
      10: iconst_2
      11: putfield      #49                 // Field state:I
      14: aload_0
      15: invokevirtual #70                 // Method clearCurrent:()V
      18: aload_0
      19: invokevirtual #14                 // Method drain:()V
      22: return

  void innerComplete();
    Code:
       0: aload_0
       1: iconst_2
       2: putfield      #49                 // Field state:I
       5: aload_0
       6: invokevirtual #70                 // Method clearCurrent:()V
       9: aload_0
      10: invokevirtual #14                 // Method drain:()V
      13: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #71                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #22                 // Field upstream:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #72                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #17                 // Field done:Z
      23: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #74                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: getfield      #21                 // Field cancelled:Z
      38: invokestatic  #73                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #75                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      46: if_acmpne     54
      49: aload_0
      50: getfield      #76                 // Field error:Ljava/lang/Throwable;
      53: areturn
      54: aload_1
      55: getstatic     #77                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      58: if_acmpne     69
      61: aload_0
      62: getfield      #44                 // Field requested:J
      65: invokestatic  #78                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      68: areturn
      69: aload_1
      70: getstatic     #79                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      73: if_acmpne     87
      76: aload_0
      77: getfield      #8                  // Field toFilter:Ljava/util/concurrent/atomic/AtomicReferenceArray;
      80: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceArray.length:()I
      83: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      86: areturn
      87: aload_1
      88: getstatic     #81                 // Field reactor/core/Scannable$Attr.LARGE_BUFFERED:Lreactor/core/Scannable$Attr;
      91: if_acmpne     107
      94: aload_0
      95: getfield      #11                 // Field producerIndex:J
      98: aload_0
      99: getfield      #42                 // Field consumerIndex:J
     102: lsub
     103: invokestatic  #78                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
     106: areturn
     107: aload_1
     108: getstatic     #82                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
     111: if_acmpne     144
     114: aload_0
     115: getfield      #11                 // Field producerIndex:J
     118: aload_0
     119: getfield      #42                 // Field consumerIndex:J
     122: lsub
     123: lstore_2
     124: lload_2
     125: ldc2_w        #84                 // long 2147483647l
     128: lcmp
     129: ifgt          138
     132: lload_2
     133: l2i
     134: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     137: areturn
     138: ldc           #86                 // int -2147483648
     140: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     143: areturn
     144: aload_1
     145: getstatic     #87                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
     148: if_acmpne     159
     151: aload_0
     152: getfield      #10                 // Field bufferSize:I
     155: invokestatic  #80                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     158: areturn
     159: aload_0
     160: aload_1
     161: invokespecial #88                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     164: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #69                 // Field current:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
       4: astore_1
       5: aload_1
       6: ifnonnull     15
       9: invokestatic  #89                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      12: goto          19
      15: aload_1
      16: invokestatic  #90                 // InterfaceMethod java/util/stream/Stream.of:(Ljava/lang/Object;)Ljava/util/stream/Stream;
      19: areturn

  static {};
    Code:
       0: ldc           #65                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
       2: ldc           #54                 // class java/lang/Throwable
       4: ldc           #91                 // String error
       6: invokestatic  #92                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #15                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #65                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      14: ldc           #93                 // String requested
      16: invokestatic  #94                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      19: putstatic     #19                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: ldc           #65                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      24: ldc           #95                 // String wip
      26: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      29: putstatic     #25                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      32: ldc           #65                 // class reactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber
      34: ldc           #30                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      36: ldc           #97                 // String current
      38: invokestatic  #92                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      41: putstatic     #28                 // Field CURRENT:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      44: new           #30                 // class reactor/core/publisher/FluxFilterWhen$FilterWhenInner
      47: dup
      48: aconst_null
      49: iconst_0
      50: invokespecial #63                 // Method reactor/core/publisher/FluxFilterWhen$FilterWhenInner."<init>":(Lreactor/core/publisher/FluxFilterWhen$FluxFilterWhenSubscriber;Z)V
      53: putstatic     #31                 // Field INNER_CANCELLED:Lreactor/core/publisher/FluxFilterWhen$FilterWhenInner;
      56: return
}
