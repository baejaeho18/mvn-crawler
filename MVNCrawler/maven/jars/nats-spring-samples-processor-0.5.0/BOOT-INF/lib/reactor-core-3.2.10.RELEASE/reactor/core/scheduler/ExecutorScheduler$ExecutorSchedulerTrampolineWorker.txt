Compiled from "ExecutorScheduler.java"
final class reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerTrampolineWorker implements reactor.core.scheduler.Scheduler$Worker,reactor.core.scheduler.ExecutorScheduler$WorkerDelete,java.lang.Runnable,reactor.core.Scannable {
  final java.util.concurrent.Executor executor;

  final java.util.Queue<reactor.core.scheduler.ExecutorScheduler$ExecutorTrackedRunnable> queue;

  volatile boolean terminated;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerTrampolineWorker> WIP;

  reactor.core.scheduler.ExecutorScheduler$ExecutorSchedulerTrampolineWorker(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
       9: aload_0
      10: new           #3                  // class java/util/concurrent/ConcurrentLinkedQueue
      13: dup
      14: invokespecial #4                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      17: putfield      #5                  // Field queue:Ljava/util/Queue;
      20: return

  public reactor.core.Disposable schedule(java.lang.Runnable);
    Code:
       0: aload_1
       1: ldc           #6                  // String task
       3: invokestatic  #7                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #8                  // Field terminated:Z
      11: ifeq          18
      14: invokestatic  #9                  // Method reactor/core/Exceptions.failWithRejected:()Ljava/util/concurrent/RejectedExecutionException;
      17: athrow
      18: new           #10                 // class reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable
      21: dup
      22: aload_1
      23: aload_0
      24: iconst_0
      25: invokespecial #11                 // Method reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable."<init>":(Ljava/lang/Runnable;Lreactor/core/scheduler/ExecutorScheduler$WorkerDelete;Z)V
      28: astore_2
      29: aload_0
      30: dup
      31: astore_3
      32: monitorenter
      33: aload_0
      34: getfield      #8                  // Field terminated:Z
      37: ifeq          44
      40: invokestatic  #9                  // Method reactor/core/Exceptions.failWithRejected:()Ljava/util/concurrent/RejectedExecutionException;
      43: athrow
      44: aload_0
      45: getfield      #5                  // Field queue:Ljava/util/Queue;
      48: aload_2
      49: invokeinterface #12,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      54: pop
      55: aload_3
      56: monitorexit
      57: goto          67
      60: astore        4
      62: aload_3
      63: monitorexit
      64: aload         4
      66: athrow
      67: getstatic     #13                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      70: aload_0
      71: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      74: ifne          104
      77: aload_0
      78: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
      81: aload_0
      82: invokeinterface #15,  2           // InterfaceMethod java/util/concurrent/Executor.execute:(Ljava/lang/Runnable;)V
      87: goto          104
      90: astore_3
      91: aload_2
      92: invokevirtual #17                 // Method reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable.dispose:()V
      95: aload_3
      96: invokestatic  #18                 // Method reactor/core/scheduler/Schedulers.handleError:(Ljava/lang/Throwable;)V
      99: aload_3
     100: invokestatic  #19                 // Method reactor/core/Exceptions.failWithRejected:(Ljava/lang/Throwable;)Ljava/util/concurrent/RejectedExecutionException;
     103: athrow
     104: aload_2
     105: areturn
    Exception table:
       from    to  target type
          33    57    60   any
          60    64    60   any
          77    87    90   Class java/lang/Throwable

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminated:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #8                  // Field terminated:Z
      13: aload_0
      14: getfield      #5                  // Field queue:Ljava/util/Queue;
      17: astore_1
      18: aload_1
      19: invokeinterface #20,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      24: checkcast     #10                 // class reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable
      27: dup
      28: astore_2
      29: ifnull        48
      32: aload_1
      33: invokeinterface #21,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      38: ifne          48
      41: aload_2
      42: invokevirtual #17                 // Method reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable.dispose:()V
      45: goto          18
      48: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #8                  // Field terminated:Z
       4: ireturn

  public void delete(reactor.core.scheduler.ExecutorScheduler$ExecutorTrackedRunnable);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #8                  // Field terminated:Z
       8: ifne          22
      11: aload_0
      12: getfield      #5                  // Field queue:Ljava/util/Queue;
      15: aload_1
      16: invokeinterface #22,  2           // InterfaceMethod java/util/Queue.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload_2
      23: monitorexit
      24: goto          32
      27: astore_3
      28: aload_2
      29: monitorexit
      30: aload_3
      31: athrow
      32: return
    Exception table:
       from    to  target type
           4    24    27   any
          27    30    27   any

  public void run();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/Queue;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_0
       8: getfield      #23                 // Field wip:I
      11: istore_3
      12: iload_2
      13: iload_3
      14: if_icmpeq     55
      17: aload_0
      18: getfield      #8                  // Field terminated:Z
      21: ifeq          25
      24: return
      25: aload_1
      26: invokeinterface #20,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      31: checkcast     #10                 // class reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable
      34: astore        4
      36: aload         4
      38: ifnonnull     44
      41: goto          55
      44: aload         4
      46: invokevirtual #24                 // Method reactor/core/scheduler/ExecutorScheduler$ExecutorTrackedRunnable.run:()V
      49: iinc          2, 1
      52: goto          12
      55: iload_2
      56: iload_3
      57: if_icmpne     68
      60: aload_0
      61: getfield      #8                  // Field terminated:Z
      64: ifeq          68
      67: return
      68: getstatic     #13                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      71: aload_0
      72: iload_2
      73: ineg
      74: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
      77: ifne          83
      80: goto          86
      83: goto          5
      86: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #26                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpeq     14
       7: aload_1
       8: getstatic     #27                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      11: if_acmpne     22
      14: aload_0
      15: invokevirtual #28                 // Method isDisposed:()Z
      18: invokestatic  #29                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: areturn
      22: aload_1
      23: getstatic     #30                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      26: if_acmpne     48
      29: aload_0
      30: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
      33: instanceof    #31                 // class reactor/core/Scannable
      36: ifeq          46
      39: aload_0
      40: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
      43: goto          47
      46: aconst_null
      47: areturn
      48: aload_1
      49: getstatic     #32                 // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
      52: if_acmpne     83
      55: new           #33                 // class java/lang/StringBuilder
      58: dup
      59: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      62: ldc           #36                 // String fromExecutor(
      64: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      67: aload_0
      68: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
      71: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      74: ldc           #39                 // String ,trampolining).worker
      76: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      79: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      82: areturn
      83: aload_1
      84: getstatic     #41                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      87: if_acmpeq     97
      90: aload_1
      91: getstatic     #42                 // Field reactor/core/Scannable$Attr.LARGE_BUFFERED:Lreactor/core/Scannable$Attr;
      94: if_acmpne     110
      97: aload_0
      98: getfield      #5                  // Field queue:Ljava/util/Queue;
     101: invokeinterface #43,  1           // InterfaceMethod java/util/Queue.size:()I
     106: invokestatic  #44                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: areturn
     110: aload_0
     111: getfield      #2                  // Field executor:Ljava/util/concurrent/Executor;
     114: aload_1
     115: invokestatic  #45                 // Method reactor/core/scheduler/Schedulers.scanExecutor:(Ljava/util/concurrent/Executor;Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     118: areturn

  static {};
    Code:
       0: ldc           #46                 // class reactor/core/scheduler/ExecutorScheduler$ExecutorSchedulerTrampolineWorker
       2: ldc           #47                 // String wip
       4: invokestatic  #48                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #13                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
