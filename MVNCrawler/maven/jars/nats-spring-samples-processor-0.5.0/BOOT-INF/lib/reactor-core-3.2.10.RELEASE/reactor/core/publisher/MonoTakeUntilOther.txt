Compiled from "MonoTakeUntilOther.java"
final class reactor.core.publisher.MonoTakeUntilOther<T, U> extends reactor.core.publisher.MonoOperator<T, T> {
  private final org.reactivestreams.Publisher<U> other;

  reactor.core.publisher.MonoTakeUntilOther(reactor.core.publisher.Mono<? extends T>, org.reactivestreams.Publisher<U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String other
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class org/reactivestreams/Publisher
      15: putfield      #5                  // Field other:Lorg/reactivestreams/Publisher;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxTakeUntilOther$TakeUntilMainSubscriber
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method reactor/core/publisher/FluxTakeUntilOther$TakeUntilMainSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: new           #8                  // class reactor/core/publisher/FluxTakeUntilOther$TakeUntilOtherSubscriber
      12: dup
      13: aload_2
      14: invokespecial #9                  // Method reactor/core/publisher/FluxTakeUntilOther$TakeUntilOtherSubscriber."<init>":(Lreactor/core/publisher/FluxTakeUntilOther$TakeUntilMainSubscriber;)V
      17: astore_3
      18: aload_0
      19: getfield      #5                  // Field other:Lorg/reactivestreams/Publisher;
      22: aload_3
      23: invokeinterface #10,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      28: aload_0
      29: getfield      #11                 // Field source:Lreactor/core/publisher/Mono;
      32: aload_2
      33: invokevirtual #12                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      36: return
}
