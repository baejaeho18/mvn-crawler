Compiled from "EventLoopProcessor.java"
final class reactor.core.publisher.EventLoopProcessor$RequestTask implements java.lang.Runnable {
  final java.util.function.LongSupplier readCount;

  final org.reactivestreams.Subscription upstream;

  final reactor.core.publisher.EventLoopProcessor<?> parent;

  final java.util.function.Consumer<java.lang.Long> postWaitCallback;

  reactor.core.publisher.EventLoopProcessor$RequestTask(org.reactivestreams.Subscription, reactor.core.publisher.EventLoopProcessor<?>, java.util.function.Consumer<java.lang.Long>, java.util.function.LongSupplier);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_2
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
       9: aload_0
      10: aload         4
      12: putfield      #3                  // Field readCount:Ljava/util/function/LongSupplier;
      15: aload_0
      16: aload_3
      17: putfield      #4                  // Field postWaitCallback:Ljava/util/function/Consumer;
      20: aload_0
      21: aload_1
      22: putfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
      25: return

  public void run();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
       4: getfield      #6                  // Field reactor/core/publisher/EventLoopProcessor.ringBuffer:Lreactor/core/publisher/RingBuffer;
       7: invokevirtual #7                  // Method reactor/core/publisher/RingBuffer.bufferSize:()I
      10: i2l
      11: lstore_1
      12: lload_1
      13: lconst_1
      14: lcmp
      15: ifne          22
      18: lload_1
      19: goto          31
      22: lload_1
      23: lload_1
      24: iconst_2
      25: lshr
      26: lconst_1
      27: invokestatic  #8                  // Method java/lang/Math.max:(JJ)J
      30: lsub
      31: lstore_3
      32: ldc2_w        #9                  // long -1l
      35: lstore        5
      37: aload_0
      38: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
      41: invokevirtual #11                 // Method reactor/core/publisher/EventLoopProcessor.run:()V
      44: aload_0
      45: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
      48: lload_1
      49: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      54: lload         5
      56: lload_3
      57: ladd
      58: lstore        7
      60: aload_0
      61: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
      64: getfield      #13                 // Field reactor/core/publisher/EventLoopProcessor.readWait:Lreactor/util/concurrent/WaitStrategy;
      67: lload         7
      69: aload_0
      70: getfield      #3                  // Field readCount:Ljava/util/function/LongSupplier;
      73: aload_0
      74: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
      77: invokevirtual #14                 // Method reactor/util/concurrent/WaitStrategy.waitFor:(JLjava/util/function/LongSupplier;Ljava/lang/Runnable;)J
      80: lstore        5
      82: aload_0
      83: getfield      #4                  // Field postWaitCallback:Ljava/util/function/Consumer;
      86: ifnull        103
      89: aload_0
      90: getfield      #4                  // Field postWaitCallback:Ljava/util/function/Consumer;
      93: lload         5
      95: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      98: invokeinterface #16,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     103: aload_0
     104: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
     107: lload_3
     108: lload         5
     110: lload         7
     112: lsub
     113: ladd
     114: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     119: goto          54
     122: astore        7
     124: invokestatic  #18                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     127: invokevirtual #19                 // Method java/lang/Thread.interrupt:()V
     130: goto          182
     133: astore        7
     135: aload         7
     137: invokestatic  #21                 // Method reactor/util/concurrent/WaitStrategy.isAlert:(Ljava/lang/Throwable;)Z
     140: ifeq          163
     143: aload_0
     144: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
     147: getfield      #22                 // Field reactor/core/publisher/EventLoopProcessor.cancelled:Z
     150: ifeq          162
     153: aload_0
     154: getfield      #5                  // Field upstream:Lorg/reactivestreams/Subscription;
     157: invokeinterface #23,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     162: return
     163: aload_0
     164: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
     167: aload         7
     169: aload_0
     170: getfield      #2                  // Field parent:Lreactor/core/publisher/EventLoopProcessor;
     173: invokevirtual #24                 // Method reactor/core/publisher/EventLoopProcessor.currentContext:()Lreactor/util/context/Context;
     176: invokestatic  #25                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     179: invokevirtual #26                 // Method reactor/core/publisher/EventLoopProcessor.onError:(Ljava/lang/Throwable;)V
     182: return
    Exception table:
       from    to  target type
          37   122   122   Class java/lang/InterruptedException
          37   122   133   Class java/lang/Throwable
}
