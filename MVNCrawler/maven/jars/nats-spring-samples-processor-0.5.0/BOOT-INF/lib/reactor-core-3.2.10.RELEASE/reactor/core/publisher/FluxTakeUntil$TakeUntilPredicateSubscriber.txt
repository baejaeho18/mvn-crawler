Compiled from "FluxTakeUntil.java"
final class reactor.core.publisher.FluxTakeUntil$TakeUntilPredicateSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final java.util.function.Predicate<? super T> predicate;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxTakeUntil$TakeUntilPredicateSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field predicate:Ljava/util/function/Predicate;
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #9                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      25: aload_1
      26: invokeinterface #10,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #3                  // Field predicate:Ljava/util/function/Predicate;
      35: aload_1
      36: invokeinterface #11,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      41: istore_2
      42: goto          69
      45: astore_3
      46: aload_0
      47: aload_0
      48: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      51: aload_3
      52: aload_1
      53: aload_0
      54: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      57: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      62: invokestatic  #13                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      65: invokevirtual #14                 // Method onError:(Ljava/lang/Throwable;)V
      68: return
      69: iload_2
      70: ifeq          86
      73: aload_0
      74: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      77: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      82: aload_0
      83: invokevirtual #16                 // Method onComplete:()V
      86: return
    Exception table:
       from    to  target type
          31    42    45   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #8,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #17                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #7                  // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #7                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #20                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #7                  // Field done:Z
      11: invokestatic  #21                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #22                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #23                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #24,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #15,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
