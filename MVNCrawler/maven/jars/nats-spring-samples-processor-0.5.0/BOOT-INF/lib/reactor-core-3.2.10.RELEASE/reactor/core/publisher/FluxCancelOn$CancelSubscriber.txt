Compiled from "FluxCancelOn.java"
final class reactor.core.publisher.FluxCancelOn$CancelSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, java.lang.Runnable {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.core.scheduler.Scheduler scheduler;

  org.reactivestreams.Subscription s;

  volatile int cancelled;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxCancelOn$CancelSubscriber> CANCELLED;

  reactor.core.publisher.FluxCancelOn$CancelSubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.scheduler.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iconst_0
       6: putfield      #2                  // Field cancelled:I
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      14: aload_0
      15: aload_2
      16: putfield      #4                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      19: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #6                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #7,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #8                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #9                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     36
      19: aload_0
      20: getfield      #2                  // Field cancelled:I
      23: iconst_1
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokestatic  #10                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: areturn
      36: aload_1
      37: getstatic     #11                 // Field reactor/core/Scannable$Attr.RUN_ON:Lreactor/core/Scannable$Attr;
      40: if_acmpne     48
      43: aload_0
      44: getfield      #4                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      47: areturn
      48: aload_0
      49: aload_1
      50: invokespecial #12                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      53: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #13,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #15,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      10: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #16,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
       9: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: getstatic     #18                 // Field CANCELLED:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          41
      12: aload_0
      13: getfield      #4                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      16: aload_0
      17: invokeinterface #20,  2           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;)Lreactor/core/Disposable;
      22: pop
      23: goto          41
      26: astore_1
      27: aload_1
      28: aload_0
      29: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      32: invokeinterface #22,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      37: invokestatic  #23                 // Method reactor/core/publisher/Operators.onRejectedExecution:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      40: athrow
      41: return
    Exception table:
       from    to  target type
          12    23    26   Class java/util/concurrent/RejectedExecutionException

  static {};
    Code:
       0: ldc           #24                 // class reactor/core/publisher/FluxCancelOn$CancelSubscriber
       2: ldc           #25                 // String cancelled
       4: invokestatic  #26                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #18                 // Field CANCELLED:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
