Compiled from "Scannable.java"
final class reactor.core.Scannable$Attr$3 implements java.util.Iterator<reactor.core.Scannable> {
  reactor.core.Scannable c;

  final reactor.core.Scannable val$s;

  final reactor.core.Scannable$Attr val$key;

  reactor.core.Scannable$Attr$3(reactor.core.Scannable, reactor.core.Scannable$Attr);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field val$s:Lreactor/core/Scannable;
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field val$key:Lreactor/core/Scannable$Attr;
      10: aload_0
      11: invokespecial #3                  // Method java/lang/Object."<init>":()V
      14: aload_0
      15: aload_0
      16: getfield      #1                  // Field val$s:Lreactor/core/Scannable;
      19: putfield      #4                  // Field c:Lreactor/core/Scannable;
      22: return

  public boolean hasNext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field c:Lreactor/core/Scannable;
       4: ifnull        23
       7: aload_0
       8: getfield      #4                  // Field c:Lreactor/core/Scannable;
      11: invokeinterface #5,  1            // InterfaceMethod reactor/core/Scannable.isScanAvailable:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public reactor.core.Scannable next();
    Code:
       0: aload_0
       1: getfield      #4                  // Field c:Lreactor/core/Scannable;
       4: astore_1
       5: aload_0
       6: aload_0
       7: getfield      #4                  // Field c:Lreactor/core/Scannable;
      10: aload_0
      11: getfield      #2                  // Field val$key:Lreactor/core/Scannable$Attr;
      14: invokeinterface #6,  2            // InterfaceMethod reactor/core/Scannable.scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      19: invokestatic  #7                  // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
      22: putfield      #4                  // Field c:Lreactor/core/Scannable;
      25: aload_1
      26: areturn

  public java.lang.Object next();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method next:()Lreactor/core/Scannable;
       4: areturn
}
