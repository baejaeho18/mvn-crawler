Compiled from "Exceptions.java"
public abstract class reactor.core.Exceptions {
  public static final java.lang.String BACKPRESSURE_ERROR_QUEUE_FULL;

  public static final java.lang.Throwable TERMINATED;

  static final java.util.concurrent.RejectedExecutionException REJECTED_EXECUTION;

  static final java.util.concurrent.RejectedExecutionException NOT_TIME_CAPABLE_REJECTED_EXECUTION;

  public static <T> boolean addThrowable(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, java.lang.Throwable>, T, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2                  // class java/lang/Throwable
       8: astore_3
       9: aload_3
      10: getstatic     #3                  // Field TERMINATED:Ljava/lang/Throwable;
      13: if_acmpne     18
      16: iconst_0
      17: ireturn
      18: aload_3
      19: instanceof    #4                  // class reactor/core/Exceptions$CompositeException
      22: ifeq          32
      25: aload_3
      26: aload_2
      27: invokevirtual #5                  // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      30: iconst_1
      31: ireturn
      32: aload_3
      33: ifnonnull     42
      36: aload_2
      37: astore        4
      39: goto          59
      42: iconst_2
      43: anewarray     #2                  // class java/lang/Throwable
      46: dup
      47: iconst_0
      48: aload_3
      49: aastore
      50: dup
      51: iconst_1
      52: aload_2
      53: aastore
      54: invokestatic  #6                  // Method multiple:([Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      57: astore        4
      59: aload_0
      60: aload_1
      61: aload_3
      62: aload         4
      64: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      67: ifeq          72
      70: iconst_1
      71: ireturn
      72: goto          0

  public static java.lang.RuntimeException multiple(java.lang.Throwable...);
    Code:
       0: new           #4                  // class reactor/core/Exceptions$CompositeException
       3: dup
       4: invokespecial #8                  // Method reactor/core/Exceptions$CompositeException."<init>":()V
       7: astore_1
       8: aload_0
       9: ifnull        44
      12: aload_0
      13: astore_2
      14: aload_2
      15: arraylength
      16: istore_3
      17: iconst_0
      18: istore        4
      20: iload         4
      22: iload_3
      23: if_icmpge     44
      26: aload_2
      27: iload         4
      29: aaload
      30: astore        5
      32: aload_1
      33: aload         5
      35: invokevirtual #9                  // Method reactor/core/Exceptions$CompositeException.addSuppressed:(Ljava/lang/Throwable;)V
      38: iinc          4, 1
      41: goto          20
      44: aload_1
      45: areturn

  public static java.lang.RuntimeException multiple(java.lang.Iterable<java.lang.Throwable>);
    Code:
       0: new           #10                 // class java/lang/RuntimeException
       3: dup
       4: ldc           #11                 // String Multiple exceptions
       6: invokespecial #12                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
       9: astore_1
      10: aload_0
      11: ifnull        48
      14: aload_0
      15: invokeinterface #13,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          48
      30: aload_2
      31: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: checkcast     #2                  // class java/lang/Throwable
      39: astore_3
      40: aload_1
      41: aload_3
      42: invokevirtual #16                 // Method java/lang/RuntimeException.addSuppressed:(Ljava/lang/Throwable;)V
      45: goto          21
      48: aload_1
      49: areturn

  public static java.lang.RuntimeException bubble(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method throwIfFatal:(Ljava/lang/Throwable;)V
       4: new           #18                 // class reactor/core/Exceptions$BubblingException
       7: dup
       8: aload_0
       9: invokespecial #19                 // Method reactor/core/Exceptions$BubblingException."<init>":(Ljava/lang/Throwable;)V
      12: areturn

  public static java.lang.IllegalStateException duplicateOnSubscribeException();
    Code:
       0: new           #20                 // class java/lang/IllegalStateException
       3: dup
       4: ldc           #21                 // String Spec. Rule 2.12 - Subscriber.onSubscribe MUST NOT be called more than once (based on object equality)
       6: invokespecial #22                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
       9: areturn

  public static java.lang.UnsupportedOperationException errorCallbackNotImplemented(java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #23                 // String cause
       3: invokestatic  #24                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: new           #25                 // class reactor/core/Exceptions$ErrorCallbackNotImplemented
      10: dup
      11: aload_0
      12: invokespecial #26                 // Method reactor/core/Exceptions$ErrorCallbackNotImplemented."<init>":(Ljava/lang/Throwable;)V
      15: areturn

  public static java.lang.RuntimeException failWithCancel();
    Code:
       0: new           #27                 // class reactor/core/Exceptions$CancelException
       3: dup
       4: invokespecial #28                 // Method reactor/core/Exceptions$CancelException."<init>":()V
       7: areturn

  public static java.lang.IllegalStateException failWithOverflow();
    Code:
       0: new           #29                 // class reactor/core/Exceptions$OverflowException
       3: dup
       4: ldc           #30                 // String The receiver is overrun by more signals than expected (bounded queue...)
       6: invokespecial #31                 // Method reactor/core/Exceptions$OverflowException."<init>":(Ljava/lang/String;)V
       9: areturn

  public static java.lang.IllegalStateException failWithOverflow(java.lang.String);
    Code:
       0: new           #29                 // class reactor/core/Exceptions$OverflowException
       3: dup
       4: aload_0
       5: invokespecial #31                 // Method reactor/core/Exceptions$OverflowException."<init>":(Ljava/lang/String;)V
       8: areturn

  public static java.util.concurrent.RejectedExecutionException failWithRejected();
    Code:
       0: getstatic     #32                 // Field REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
       3: areturn

  public static java.util.concurrent.RejectedExecutionException failWithRejectedNotTimeCapable();
    Code:
       0: getstatic     #33                 // Field NOT_TIME_CAPABLE_REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
       3: areturn

  public static java.util.concurrent.RejectedExecutionException failWithRejected(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #34                 // class reactor/core/Exceptions$ReactorRejectedExecutionException
       4: ifeq          12
       7: aload_0
       8: checkcast     #35                 // class java/util/concurrent/RejectedExecutionException
      11: areturn
      12: new           #34                 // class reactor/core/Exceptions$ReactorRejectedExecutionException
      15: dup
      16: ldc           #36                 // String Scheduler unavailable
      18: aload_0
      19: invokespecial #37                 // Method reactor/core/Exceptions$ReactorRejectedExecutionException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      22: areturn

  public static boolean isOverflow(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #29                 // class reactor/core/Exceptions$OverflowException
       4: ireturn

  public static boolean isBubbling(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #18                 // class reactor/core/Exceptions$BubblingException
       4: ireturn

  public static boolean isCancel(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #27                 // class reactor/core/Exceptions$CancelException
       4: ireturn

  public static boolean isErrorCallbackNotImplemented(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnull        20
       4: aload_0
       5: invokevirtual #38                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: ldc           #25                 // class reactor/core/Exceptions$ErrorCallbackNotImplemented
      10: invokevirtual #39                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  public static boolean isMultiple(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #4                  // class reactor/core/Exceptions$CompositeException
       4: ireturn

  public static java.lang.IllegalArgumentException nullOrNegativeRequestException(long);
    Code:
       0: new           #40                 // class java/lang/IllegalArgumentException
       3: dup
       4: new           #41                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      11: ldc           #43                 // String Spec. Rule 3.9 - Cannot request a non strictly positive number:
      13: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: lload_0
      17: invokevirtual #45                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      20: invokevirtual #46                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: invokespecial #47                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      26: areturn

  public static java.lang.RuntimeException propagate(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokestatic  #17                 // Method throwIfFatal:(Ljava/lang/Throwable;)V
       4: aload_0
       5: instanceof    #10                 // class java/lang/RuntimeException
       8: ifeq          16
      11: aload_0
      12: checkcast     #10                 // class java/lang/RuntimeException
      15: areturn
      16: new           #48                 // class reactor/core/Exceptions$ReactiveException
      19: dup
      20: aload_0
      21: invokespecial #49                 // Method reactor/core/Exceptions$ReactiveException."<init>":(Ljava/lang/Throwable;)V
      24: areturn

  public static <T> java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, java.lang.Throwable>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #1                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #2                  // class java/lang/Throwable
       8: astore_2
       9: aload_2
      10: getstatic     #3                  // Field TERMINATED:Ljava/lang/Throwable;
      13: if_acmpeq     28
      16: aload_0
      17: aload_1
      18: getstatic     #3                  // Field TERMINATED:Ljava/lang/Throwable;
      21: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #2                  // class java/lang/Throwable
      27: astore_2
      28: aload_2
      29: areturn

  public static void throwIfFatal(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #18                 // class reactor/core/Exceptions$BubblingException
       4: ifeq          12
       7: aload_0
       8: checkcast     #18                 // class reactor/core/Exceptions$BubblingException
      11: athrow
      12: aload_0
      13: instanceof    #25                 // class reactor/core/Exceptions$ErrorCallbackNotImplemented
      16: ifeq          24
      19: aload_0
      20: checkcast     #25                 // class reactor/core/Exceptions$ErrorCallbackNotImplemented
      23: athrow
      24: aload_0
      25: invokestatic  #51                 // Method throwIfJvmFatal:(Ljava/lang/Throwable;)V
      28: return

  public static void throwIfJvmFatal(java.lang.Throwable);
    Code:
       0: aload_0
       1: instanceof    #52                 // class java/lang/VirtualMachineError
       4: ifeq          12
       7: aload_0
       8: checkcast     #52                 // class java/lang/VirtualMachineError
      11: athrow
      12: aload_0
      13: instanceof    #53                 // class java/lang/ThreadDeath
      16: ifeq          24
      19: aload_0
      20: checkcast     #53                 // class java/lang/ThreadDeath
      23: athrow
      24: aload_0
      25: instanceof    #54                 // class java/lang/LinkageError
      28: ifeq          36
      31: aload_0
      32: checkcast     #54                 // class java/lang/LinkageError
      35: athrow
      36: return

  public static java.lang.Throwable unwrap(java.lang.Throwable);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: instanceof    #48                 // class reactor/core/Exceptions$ReactiveException
       6: ifeq          17
       9: aload_1
      10: invokevirtual #55                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      13: astore_1
      14: goto          2
      17: aload_1
      18: ifnonnull     25
      21: aload_0
      22: goto          26
      25: aload_1
      26: areturn

  public static java.util.List<java.lang.Throwable> unwrapMultiple(java.lang.Throwable);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: invokestatic  #56                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       7: areturn
       8: aload_0
       9: invokestatic  #57                 // Method isMultiple:(Ljava/lang/Throwable;)Z
      12: ifeq          23
      15: aload_0
      16: invokevirtual #58                 // Method java/lang/Throwable.getSuppressed:()[Ljava/lang/Throwable;
      19: invokestatic  #59                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: areturn
      23: aload_0
      24: invokestatic  #60                 // Method java/util/Collections.singletonList:(Ljava/lang/Object;)Ljava/util/List;
      27: areturn

  public static final java.lang.RuntimeException addSuppressed(java.lang.RuntimeException, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: aload_0
       6: areturn
       7: aload_0
       8: getstatic     #32                 // Field REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      11: if_acmpeq     21
      14: aload_0
      15: getstatic     #33                 // Field NOT_TIME_CAPABLE_REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      18: if_acmpne     40
      21: new           #35                 // class java/util/concurrent/RejectedExecutionException
      24: dup
      25: aload_0
      26: invokevirtual #61                 // Method java/lang/RuntimeException.getMessage:()Ljava/lang/String;
      29: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      32: astore_2
      33: aload_2
      34: aload_1
      35: invokevirtual #63                 // Method java/util/concurrent/RejectedExecutionException.addSuppressed:(Ljava/lang/Throwable;)V
      38: aload_2
      39: areturn
      40: aload_0
      41: aload_1
      42: invokevirtual #16                 // Method java/lang/RuntimeException.addSuppressed:(Ljava/lang/Throwable;)V
      45: aload_0
      46: areturn

  public static final java.lang.Throwable addSuppressed(java.lang.Throwable, java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: aload_0
       6: areturn
       7: aload_0
       8: getstatic     #3                  // Field TERMINATED:Ljava/lang/Throwable;
      11: if_acmpne     16
      14: aload_0
      15: areturn
      16: aload_0
      17: getstatic     #32                 // Field REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      20: if_acmpeq     30
      23: aload_0
      24: getstatic     #33                 // Field NOT_TIME_CAPABLE_REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      27: if_acmpne     49
      30: new           #35                 // class java/util/concurrent/RejectedExecutionException
      33: dup
      34: aload_0
      35: invokevirtual #64                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      38: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      41: astore_2
      42: aload_2
      43: aload_1
      44: invokevirtual #63                 // Method java/util/concurrent/RejectedExecutionException.addSuppressed:(Ljava/lang/Throwable;)V
      47: aload_2
      48: areturn
      49: aload_0
      50: aload_1
      51: invokevirtual #5                  // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      54: aload_0
      55: areturn

  reactor.core.Exceptions();
    Code:
       0: aload_0
       1: invokespecial #65                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: new           #2                  // class java/lang/Throwable
       3: dup
       4: ldc           #66                 // String Operator has been terminated
       6: invokespecial #67                 // Method java/lang/Throwable."<init>":(Ljava/lang/String;)V
       9: putstatic     #3                  // Field TERMINATED:Ljava/lang/Throwable;
      12: new           #35                 // class java/util/concurrent/RejectedExecutionException
      15: dup
      16: ldc           #36                 // String Scheduler unavailable
      18: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      21: putstatic     #32                 // Field REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      24: new           #35                 // class java/util/concurrent/RejectedExecutionException
      27: dup
      28: ldc           #68                 // String Scheduler is not capable of time-based scheduling
      30: invokespecial #62                 // Method java/util/concurrent/RejectedExecutionException."<init>":(Ljava/lang/String;)V
      33: putstatic     #33                 // Field NOT_TIME_CAPABLE_REJECTED_EXECUTION:Ljava/util/concurrent/RejectedExecutionException;
      36: return
}
