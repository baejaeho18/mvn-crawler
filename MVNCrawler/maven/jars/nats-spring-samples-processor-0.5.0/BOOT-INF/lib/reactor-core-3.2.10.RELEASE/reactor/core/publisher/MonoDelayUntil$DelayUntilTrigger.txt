Compiled from "MonoDelayUntil.java"
final class reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger<T> implements reactor.core.publisher.InnerConsumer<T> {
  final reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator<?> parent;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger, org.reactivestreams.Subscription> S;

  boolean done;

  volatile java.lang.Throwable error;

  reactor.core.publisher.MonoDelayUntil$DelayUntilTrigger(reactor.core.publisher.MonoDelayUntil$DelayUntilCoordinator<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
       9: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
       4: invokevirtual #3                  // Method reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.currentContext:()Lreactor/util/context/Context;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     26
       7: aload_0
       8: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      11: invokestatic  #6                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn
      26: aload_1
      27: getstatic     #8                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      30: if_acmpne     38
      33: aload_0
      34: getfield      #5                  // Field s:Lorg/reactivestreams/Subscription;
      37: areturn
      38: aload_1
      39: getstatic     #9                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      42: if_acmpne     50
      45: aload_0
      46: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      49: areturn
      50: aload_1
      51: getstatic     #10                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      54: if_acmpne     62
      57: aload_0
      58: getfield      #11                 // Field error:Ljava/lang/Throwable;
      61: areturn
      62: aload_1
      63: getstatic     #12                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      66: if_acmpne     75
      69: ldc           #14                 // int 2147483647
      71: invokestatic  #15                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      74: areturn
      75: aconst_null
      76: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #17                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          23
      11: aload_1
      12: ldc2_w        #19                 // long 9223372036854775807l
      15: invokeinterface #21,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: goto          29
      23: aload_1
      24: invokeinterface #22,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      29: return

  public void onNext(java.lang.Object);
    Code:
       0: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #11                 // Field error:Ljava/lang/Throwable;
       5: getstatic     #23                 // Field reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       8: aload_0
       9: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      12: aload_0
      13: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      16: getfield      #24                 // Field reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.n:I
      19: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
      22: aload_0
      23: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      26: getfield      #24                 // Field reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.n:I
      29: if_icmpeq     52
      32: aload_0
      33: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      36: invokevirtual #26                 // Method reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.cancel:()V
      39: aload_0
      40: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      43: getfield      #27                 // Field reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.actual:Lreactor/core/CoreSubscriber;
      46: aload_1
      47: invokeinterface #28,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      52: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #29                 // Field done:Z
       4: ifne          19
       7: aload_0
       8: iconst_1
       9: putfield      #29                 // Field done:Z
      12: aload_0
      13: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator;
      16: invokevirtual #30                 // Method reactor/core/publisher/MonoDelayUntil$DelayUntilCoordinator.signal:()V
      19: return

  void cancel();
    Code:
       0: getstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #31                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: return

  static {};
    Code:
       0: ldc           #32                 // class reactor/core/publisher/MonoDelayUntil$DelayUntilTrigger
       2: ldc           #33                 // class org/reactivestreams/Subscription
       4: ldc           #34                 // String s
       6: invokestatic  #35                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #16                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
