Compiled from "FluxSkipUntil.java"
final class reactor.core.publisher.FluxSkipUntil$SkipUntilSubscriber<T> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  final java.util.function.Predicate<? super T> predicate;

  org.reactivestreams.Subscription s;

  boolean done;

  boolean doneSkipping;

  reactor.core.publisher.FluxSkipUntil$SkipUntilSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      24: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #10                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: getfield      #11                 // Field doneSkipping:Z
      20: ifeq          34
      23: aload_0
      24: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      27: aload_1
      28: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      33: return
      34: aload_0
      35: getfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      38: aload_1
      39: invokeinterface #13,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      44: istore_2
      45: goto          67
      48: astore_3
      49: aload_0
      50: aload_0
      51: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      54: aload_3
      55: aload_1
      56: aload_0
      57: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      60: invokestatic  #15                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      63: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      66: return
      67: iload_2
      68: ifeq          87
      71: aload_0
      72: iconst_1
      73: putfield      #11                 // Field doneSkipping:Z
      76: aload_0
      77: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      80: aload_1
      81: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      86: return
      87: aload_1
      88: aload_0
      89: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      92: invokestatic  #17                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      95: aload_0
      96: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      99: lconst_1
     100: invokeinterface #18,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     105: return
    Exception table:
       from    to  target type
          34    45    48   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          17
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #10                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: iconst_1
      16: ireturn
      17: aload_0
      18: getfield      #11                 // Field doneSkipping:Z
      21: ifeq          36
      24: aload_0
      25: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      28: aload_1
      29: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      34: iconst_1
      35: ireturn
      36: aload_0
      37: getfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      40: aload_1
      41: invokeinterface #13,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      46: istore_2
      47: goto          70
      50: astore_3
      51: aload_0
      52: aload_0
      53: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      56: aload_3
      57: aload_1
      58: aload_0
      59: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      62: invokestatic  #15                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      65: invokevirtual #16                 // Method onError:(Ljava/lang/Throwable;)V
      68: iconst_1
      69: ireturn
      70: iload_2
      71: ifeq          91
      74: aload_0
      75: iconst_1
      76: putfield      #11                 // Field doneSkipping:Z
      79: aload_0
      80: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      83: aload_1
      84: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      89: iconst_0
      90: ireturn
      91: aload_1
      92: aload_0
      93: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      96: invokestatic  #17                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      99: iconst_1
     100: ireturn
    Exception table:
       from    to  target type
          36    47    50   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #19                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #9                  // Field done:Z
      21: aload_0
      22: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      25: aload_1
      26: invokeinterface #20,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #21,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #22                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #23                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #9                  // Field done:Z
      23: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #25                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #18,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
