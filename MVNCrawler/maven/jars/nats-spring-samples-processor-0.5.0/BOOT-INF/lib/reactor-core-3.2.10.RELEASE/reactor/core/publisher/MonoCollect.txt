Compiled from "MonoCollect.java"
final class reactor.core.publisher.MonoCollect<T, R> extends reactor.core.publisher.MonoFromFluxOperator<T, R> implements reactor.core.Fuseable {
  final java.util.function.Supplier<R> supplier;

  final java.util.function.BiConsumer<? super R, ? super T> action;

  reactor.core.publisher.MonoCollect(reactor.core.publisher.Flux<? extends T>, java.util.function.Supplier<R>, java.util.function.BiConsumer<? super R, ? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoFromFluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String supplier
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/Supplier
      15: putfield      #5                  // Field supplier:Ljava/util/function/Supplier;
      18: aload_0
      19: aload_3
      20: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      23: checkcast     #7                  // class java/util/function/BiConsumer
      26: putfield      #8                  // Field action:Ljava/util/function/BiConsumer;
      29: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #9,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: ldc           #10                 // String The supplier returned a null container
      11: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: astore_2
      15: goto          34
      18: astore_3
      19: aload_1
      20: aload_3
      21: aload_1
      22: invokeinterface #12,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      27: invokestatic  #13                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      30: invokestatic  #14                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      33: return
      34: aload_0
      35: getfield      #15                 // Field source:Lreactor/core/publisher/Flux;
      38: new           #16                 // class reactor/core/publisher/MonoCollect$CollectSubscriber
      41: dup
      42: aload_1
      43: aload_0
      44: getfield      #8                  // Field action:Ljava/util/function/BiConsumer;
      47: aload_2
      48: invokespecial #17                 // Method reactor/core/publisher/MonoCollect$CollectSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/BiConsumer;Ljava/lang/Object;)V
      51: invokevirtual #18                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      54: return
    Exception table:
       from    to  target type
           0    15    18   Class java/lang/Throwable
}
