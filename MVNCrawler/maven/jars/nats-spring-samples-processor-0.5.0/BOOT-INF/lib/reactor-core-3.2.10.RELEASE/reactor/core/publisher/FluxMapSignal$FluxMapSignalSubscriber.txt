Compiled from "FluxMapSignal.java"
final class reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber<T, R> extends java.util.AbstractQueue<R> implements reactor.core.publisher.InnerOperator<T, R>, java.util.function.BooleanSupplier {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.Function<? super T, ? extends R> mapperNext;

  final java.util.function.Function<? super java.lang.Throwable, ? extends R> mapperError;

  final java.util.function.Supplier<? extends R> mapperComplete;

  boolean done;

  org.reactivestreams.Subscription s;

  R value;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber> REQUESTED;

  volatile boolean cancelled;

  long produced;

  reactor.core.publisher.FluxMapSignal$FluxMapSignalSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super T, ? extends R>, java.util.function.Function<? super java.lang.Throwable, ? extends R>, java.util.function.Supplier<? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field mapperNext:Ljava/util/function/Function;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field mapperError:Ljava/util/function/Function;
      19: aload_0
      20: aload         4
      22: putfield      #5                  // Field mapperComplete:Ljava/util/function/Supplier;
      25: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          42
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: aload_0
      27: getfield      #3                  // Field mapperNext:Ljava/util/function/Function;
      30: ifnonnull     42
      33: aload_1
      34: ldc2_w        #10                 // long 9223372036854775807l
      37: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      42: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #15                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #3                  // Field mapperNext:Ljava/util/function/Function;
      25: ifnonnull     29
      28: return
      29: aload_0
      30: getfield      #3                  // Field mapperNext:Ljava/util/function/Function;
      33: aload_1
      34: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: ldc           #17                 // String The mapper returned a null value.
      41: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: astore_2
      45: goto          82
      48: astore_3
      49: aload_0
      50: iconst_1
      51: putfield      #13                 // Field done:Z
      54: aload_0
      55: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      58: aload_0
      59: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      62: aload_3
      63: aload_1
      64: aload_0
      65: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      68: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      73: invokestatic  #20                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      76: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      81: return
      82: aload_0
      83: dup
      84: getfield      #22                 // Field produced:J
      87: lconst_1
      88: ladd
      89: putfield      #22                 // Field produced:J
      92: aload_0
      93: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      96: aload_2
      97: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     102: return
    Exception table:
       from    to  target type
          29    45    48   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #24                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #13                 // Field done:Z
      26: aload_0
      27: getfield      #4                  // Field mapperError:Ljava/util/function/Function;
      30: ifnonnull     44
      33: aload_0
      34: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      37: aload_1
      38: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      43: return
      44: aload_0
      45: getfield      #4                  // Field mapperError:Ljava/util/function/Function;
      48: aload_1
      49: invokeinterface #16,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      54: ldc           #17                 // String The mapper returned a null value.
      56: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      59: astore_2
      60: goto          97
      63: astore_3
      64: aload_0
      65: iconst_1
      66: putfield      #13                 // Field done:Z
      69: aload_0
      70: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      73: aload_0
      74: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      77: aload_3
      78: aload_1
      79: aload_0
      80: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      83: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      88: invokestatic  #20                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      91: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      96: return
      97: aload_0
      98: aload_2
      99: putfield      #25                 // Field value:Ljava/lang/Object;
     102: aload_0
     103: getfield      #22                 // Field produced:J
     106: lstore_3
     107: lload_3
     108: lconst_0
     109: lcmp
     110: ifeq          123
     113: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     116: aload_0
     117: lload_3
     118: lneg
     119: invokestatic  #27                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     122: pop2
     123: aload_0
     124: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     127: aload_0
     128: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     131: aload_0
     132: aload_0
     133: invokestatic  #28                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
     136: return
    Exception table:
       from    to  target type
          44    60    63   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #13                 // Field done:Z
      13: aload_0
      14: getfield      #5                  // Field mapperComplete:Ljava/util/function/Supplier;
      17: ifnonnull     30
      20: aload_0
      21: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      24: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      29: return
      30: aload_0
      31: getfield      #5                  // Field mapperComplete:Ljava/util/function/Supplier;
      34: invokeinterface #30,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      39: ldc           #17                 // String The mapper returned a null value.
      41: invokestatic  #18                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: astore_1
      45: goto          81
      48: astore_2
      49: aload_0
      50: iconst_1
      51: putfield      #13                 // Field done:Z
      54: aload_0
      55: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      58: aload_0
      59: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      62: aload_2
      63: aload_0
      64: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      67: invokeinterface #14,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      72: invokestatic  #31                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      75: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      80: return
      81: aload_0
      82: aload_1
      83: putfield      #25                 // Field value:Ljava/lang/Object;
      86: aload_0
      87: getfield      #22                 // Field produced:J
      90: lstore_2
      91: lload_2
      92: lconst_0
      93: lcmp
      94: ifeq          107
      97: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     100: aload_0
     101: lload_2
     102: lneg
     103: invokestatic  #27                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     106: pop2
     107: aload_0
     108: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     111: aload_0
     112: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     115: aload_0
     116: aload_0
     117: invokestatic  #28                 // Method reactor/core/publisher/DrainUtils.postComplete:(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)V
     120: return
    Exception table:
       from    to  target type
          30    45    48   Class java/lang/Throwable

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #32                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          34
       7: lload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aload_0
      13: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      16: aload_0
      17: aload_0
      18: invokestatic  #33                 // Method reactor/core/publisher/DrainUtils.postCompleteRequest:(JLorg/reactivestreams/Subscriber;Ljava/util/Queue;Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;Ljava/util/function/BooleanSupplier;)Z
      21: ifne          34
      24: aload_0
      25: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      28: lload_1
      29: invokeinterface #12,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      34: return

  public boolean offer(R);
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public R poll();
    Code:
       0: aload_0
       1: getfield      #25                 // Field value:Ljava/lang/Object;
       4: astore_1
       5: aload_1
       6: ifnull        16
       9: aload_0
      10: aconst_null
      11: putfield      #25                 // Field value:Ljava/lang/Object;
      14: aload_1
      15: areturn
      16: aconst_null
      17: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #36                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #37                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #13                 // Field done:Z
      23: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #39                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: invokevirtual #40                 // Method getAsBoolean:()Z
      38: invokestatic  #38                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #41                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      46: if_acmpne     57
      49: aload_0
      50: getfield      #42                 // Field requested:J
      53: invokestatic  #43                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      56: areturn
      57: aload_1
      58: getstatic     #44                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      61: if_acmpne     72
      64: aload_0
      65: invokevirtual #45                 // Method size:()I
      68: invokestatic  #46                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      71: areturn
      72: aload_0
      73: aload_1
      74: invokespecial #47                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      77: areturn

  public R peek();
    Code:
       0: aload_0
       1: getfield      #25                 // Field value:Ljava/lang/Object;
       4: areturn

  public boolean getAsBoolean();
    Code:
       0: aload_0
       1: getfield      #48                 // Field cancelled:Z
       4: ireturn

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #48                 // Field cancelled:Z
       5: aload_0
       6: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       9: invokeinterface #49,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      14: return

  public java.util.Iterator<R> iterator();
    Code:
       0: new           #34                 // class java/lang/UnsupportedOperationException
       3: dup
       4: invokespecial #35                 // Method java/lang/UnsupportedOperationException."<init>":()V
       7: athrow

  public int size();
    Code:
       0: aload_0
       1: getfield      #25                 // Field value:Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_0
       8: goto          12
      11: iconst_1
      12: ireturn

  static {};
    Code:
       0: ldc           #50                 // class reactor/core/publisher/FluxMapSignal$FluxMapSignalSubscriber
       2: ldc           #51                 // String requested
       4: invokestatic  #52                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
