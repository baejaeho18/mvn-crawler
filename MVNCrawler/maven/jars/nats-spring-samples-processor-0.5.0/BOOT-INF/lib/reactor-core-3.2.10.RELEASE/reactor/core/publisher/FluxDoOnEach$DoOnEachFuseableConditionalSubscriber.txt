Compiled from "FluxDoOnEach.java"
final class reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableConditionalSubscriber<T> extends reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber<T> implements reactor.core.Fuseable$ConditionalSubscriber<T> {
  reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super T>, java.util.function.Consumer<? super reactor.core.publisher.Signal<T>>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method reactor/core/publisher/FluxDoOnEach$DoOnEachFuseableSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Z)V
       7: return

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: checkcast     #3                  // class reactor/core/Fuseable$ConditionalSubscriber
       7: aload_1
       8: invokeinterface #4,  2            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      13: istore_2
      14: iload_2
      15: ifeq          33
      18: aload_0
      19: aload_1
      20: putfield      #5                  // Field t:Ljava/lang/Object;
      23: aload_0
      24: getfield      #6                  // Field onSignal:Ljava/util/function/Consumer;
      27: aload_0
      28: invokeinterface #7,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      33: iload_2
      34: ireturn
}
