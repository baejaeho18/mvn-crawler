Compiled from "MonoIgnoreThen.java"
final class reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner<T> implements reactor.core.publisher.InnerConsumer<T> {
  final reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain<T> parent;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner, org.reactivestreams.Subscription> S;

  boolean done;

  reactor.core.publisher.MonoIgnoreThen$ThenAcceptInner(reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
       9: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #3                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #5                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      23: areturn
      24: aload_1
      25: getstatic     #6                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      28: if_acmpne     39
      31: aload_0
      32: getfield      #7                  // Field done:Z
      35: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      38: areturn
      39: aload_1
      40: getstatic     #9                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      43: if_acmpne     65
      46: aload_0
      47: getfield      #4                  // Field s:Lorg/reactivestreams/Subscription;
      50: invokestatic  #10                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      53: if_acmpne     60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: invokestatic  #8                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      64: areturn
      65: aconst_null
      66: areturn

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
       4: invokevirtual #11                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.currentContext:()Lreactor/util/context/Context;
       7: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #12                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #13                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          20
      11: aload_1
      12: ldc2_w        #15                 // long 9223372036854775807l
      15: invokeinterface #17,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          19
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      12: invokevirtual #11                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.currentContext:()Lreactor/util/context/Context;
      15: invokestatic  #18                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      18: return
      19: aload_0
      20: iconst_1
      21: putfield      #7                  // Field done:Z
      24: aload_0
      25: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      28: aload_1
      29: invokevirtual #19                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.complete:(Ljava/lang/Object;)V
      32: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          19
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      12: invokevirtual #11                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.currentContext:()Lreactor/util/context/Context;
      15: invokestatic  #20                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      18: return
      19: aload_0
      20: iconst_1
      21: putfield      #7                  // Field done:Z
      24: aload_0
      25: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      28: aload_1
      29: invokevirtual #21                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.onError:(Ljava/lang/Throwable;)V
      32: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain;
      12: invokevirtual #22                 // Method reactor/core/publisher/MonoIgnoreThen$ThenIgnoreMain.onComplete:()V
      15: return

  void cancel();
    Code:
       0: getstatic     #12                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #23                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: return

  static {};
    Code:
       0: ldc           #24                 // class reactor/core/publisher/MonoIgnoreThen$ThenAcceptInner
       2: ldc           #25                 // class org/reactivestreams/Subscription
       4: ldc           #26                 // String s
       6: invokestatic  #27                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #12                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
