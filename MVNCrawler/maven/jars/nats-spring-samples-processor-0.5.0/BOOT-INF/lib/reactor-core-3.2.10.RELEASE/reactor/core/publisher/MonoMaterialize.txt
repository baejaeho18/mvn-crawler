Compiled from "MonoMaterialize.java"
final class reactor.core.publisher.MonoMaterialize<T> extends reactor.core.publisher.MonoOperator<T, reactor.core.publisher.Signal<T>> {
  reactor.core.publisher.MonoMaterialize(reactor.core.publisher.Mono<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: return

  public void subscribe(reactor.core.CoreSubscriber<? super reactor.core.publisher.Signal<T>>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/Mono;
       4: new           #3                  // class reactor/core/publisher/FluxMaterialize$MaterializeSubscriber
       7: dup
       8: new           #4                  // class reactor/core/publisher/MonoNext$NextSubscriber
      11: dup
      12: aload_1
      13: invokespecial #5                  // Method reactor/core/publisher/MonoNext$NextSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
      16: invokespecial #6                  // Method reactor/core/publisher/FluxMaterialize$MaterializeSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
      19: invokevirtual #7                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      22: return
}
