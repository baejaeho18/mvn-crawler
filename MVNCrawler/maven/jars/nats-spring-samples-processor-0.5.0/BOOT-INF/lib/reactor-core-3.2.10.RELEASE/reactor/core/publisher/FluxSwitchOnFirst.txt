Compiled from "FluxSwitchOnFirst.java"
final class reactor.core.publisher.FluxSwitchOnFirst<T, R> extends reactor.core.publisher.FluxOperator<T, R> {
  static final int STATE_INIT;

  static final int STATE_SUBSCRIBED_ONCE;

  final java.util.function.BiFunction<reactor.core.publisher.Signal<? extends T>, reactor.core.publisher.Flux<T>, org.reactivestreams.Publisher<? extends R>> transformer;

  reactor.core.publisher.FluxSwitchOnFirst(reactor.core.publisher.Flux<? extends T>, java.util.function.BiFunction<reactor.core.publisher.Signal<? extends T>, reactor.core.publisher.Flux<T>, org.reactivestreams.Publisher<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String transformer
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/BiFunction
      15: putfield      #5                  // Field transformer:Ljava/util/function/BiFunction;
      18: return

  public int getPrefetch();
    Code:
       0: iconst_1
       1: ireturn

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_1
       1: instanceof    #6                  // class reactor/core/Fuseable$ConditionalSubscriber
       4: ifeq          30
       7: aload_0
       8: getfield      #7                  // Field source:Lreactor/core/publisher/Flux;
      11: new           #8                  // class reactor/core/publisher/FluxSwitchOnFirst$SwitchOnFirstConditionalInner
      14: dup
      15: aload_1
      16: checkcast     #6                  // class reactor/core/Fuseable$ConditionalSubscriber
      19: aload_0
      20: getfield      #5                  // Field transformer:Ljava/util/function/BiFunction;
      23: invokespecial #9                  // Method reactor/core/publisher/FluxSwitchOnFirst$SwitchOnFirstConditionalInner."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Ljava/util/function/BiFunction;)V
      26: invokevirtual #10                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      29: return
      30: aload_0
      31: getfield      #7                  // Field source:Lreactor/core/publisher/Flux;
      34: new           #11                 // class reactor/core/publisher/FluxSwitchOnFirst$SwitchOnFirstInner
      37: dup
      38: aload_1
      39: aload_0
      40: getfield      #5                  // Field transformer:Ljava/util/function/BiFunction;
      43: invokespecial #12                 // Method reactor/core/publisher/FluxSwitchOnFirst$SwitchOnFirstInner."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/BiFunction;)V
      46: invokevirtual #10                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      49: return
}
