Compiled from "FluxPeekFuseable.java"
final class reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.core.publisher.SignalPeek<T> parent;

  reactor.core.Fuseable$QueueSubscription<T> s;

  int sourceMode;

  volatile boolean done;

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #2                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #4                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #5                  // Field done:Z
      23: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #7                  // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.SignalPeek<T>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
       4: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
       9: astore_1
      10: aload_0
      11: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      14: invokeinterface #12,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onCurrentContextCall:()Ljava/util/function/Consumer;
      19: astore_2
      20: aload_1
      21: invokeinterface #13,  1           // InterfaceMethod reactor/util/context/Context.isEmpty:()Z
      26: ifne          40
      29: aload_2
      30: ifnull        40
      33: aload_2
      34: aload_1
      35: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      40: aload_1
      41: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
       4: invokeinterface #15,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onRequestCall:()Ljava/util/function/LongConsumer;
       9: astore_3
      10: aload_3
      11: ifnull        41
      14: aload_3
      15: lload_1
      16: invokeinterface #16,  3           // InterfaceMethod java/util/function/LongConsumer.accept:(J)V
      21: goto          41
      24: astore        4
      26: aload         4
      28: aload_0
      29: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      32: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      37: invokestatic  #18                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      40: pop
      41: aload_0
      42: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      45: lload_1
      46: invokeinterface #19,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      51: return
    Exception table:
       from    to  target type
          14    21    24   Class java/lang/Throwable

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
       4: invokeinterface #20,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onCancelCall:()Ljava/lang/Runnable;
       9: astore_1
      10: aload_1
      11: ifnull        46
      14: aload_1
      15: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
      20: goto          46
      23: astore_2
      24: aload_0
      25: aload_0
      26: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      29: aload_2
      30: aload_0
      31: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      34: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      39: invokestatic  #22                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      42: invokevirtual #23                 // Method onError:(Ljava/lang/Throwable;)V
      45: return
      46: aload_0
      47: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      50: invokeinterface #24,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
      55: return
    Exception table:
       from    to  target type
          14    20    23   Class java/lang/Throwable

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #25                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          76
      11: aload_0
      12: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      15: invokeinterface #26,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onSubscribeCall:()Ljava/util/function/Consumer;
      20: astore_2
      21: aload_2
      22: ifnull        58
      25: aload_2
      26: aload_1
      27: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      32: goto          58
      35: astore_3
      36: aload_0
      37: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      40: aload_1
      41: aload_3
      42: aload_0
      43: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      46: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      51: invokestatic  #22                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      54: invokestatic  #27                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      57: return
      58: aload_0
      59: aload_1
      60: checkcast     #28                 // class reactor/core/Fuseable$QueueSubscription
      63: putfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      66: aload_0
      67: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      70: aload_0
      71: invokeinterface #29,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      76: return
    Exception table:
       from    to  target type
          25    32    35   Class java/lang/Throwable

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #30                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      12: aconst_null
      13: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          115
      21: aload_0
      22: getfield      #5                  // Field done:Z
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      33: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #32                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      41: return
      42: aload_0
      43: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      46: invokeinterface #33,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onNextCall:()Ljava/util/function/Consumer;
      51: astore_2
      52: aload_2
      53: ifnull        105
      56: aload_2
      57: aload_1
      58: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      63: goto          105
      66: astore_3
      67: aload_1
      68: aload_3
      69: aload_0
      70: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      73: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      78: aload_0
      79: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      82: invokestatic  #34                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      85: astore        4
      87: aload         4
      89: ifnonnull     98
      92: aload_0
      93: lconst_1
      94: invokevirtual #35                 // Method request:(J)V
      97: return
      98: aload_0
      99: aload         4
     101: invokevirtual #23                 // Method onError:(Ljava/lang/Throwable;)V
     104: return
     105: aload_0
     106: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
     109: aload_1
     110: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     115: return
    Exception table:
       from    to  target type
          56    63    66   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #36                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field done:Z
      26: aload_0
      27: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      30: invokeinterface #37,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onErrorCall:()Ljava/util/function/Consumer;
      35: astore_2
      36: aload_2
      37: ifnull        71
      40: aload_1
      41: invokestatic  #38                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      44: aload_2
      45: aload_1
      46: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      51: goto          71
      54: astore_3
      55: aconst_null
      56: aload_3
      57: aload_1
      58: aload_0
      59: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      62: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      67: invokestatic  #39                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      70: astore_1
      71: aload_0
      72: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      75: aload_1
      76: invokeinterface #40,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      81: goto          106
      84: astore_3
      85: aload_2
      86: ifnull        104
      89: aload_3
      90: invokestatic  #42                 // Method reactor/core/Exceptions.isErrorCallbackNotImplemented:(Ljava/lang/Throwable;)Z
      93: ifne          106
      96: aload_3
      97: invokevirtual #43                 // Method java/lang/UnsupportedOperationException.getCause:()Ljava/lang/Throwable;
     100: aload_1
     101: if_acmpeq     106
     104: aload_3
     105: athrow
     106: aload_0
     107: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
     110: invokeinterface #44,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onAfterTerminateCall:()Ljava/lang/Runnable;
     115: astore_3
     116: aload_3
     117: ifnull        150
     120: aload_3
     121: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
     126: goto          150
     129: astore        4
     131: aload_0
     132: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
     135: aload         4
     137: aload_1
     138: aload_0
     139: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
     142: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     147: invokestatic  #45                 // Method reactor/core/publisher/FluxPeek.afterErrorWithFailure:(Lreactor/core/publisher/SignalPeek;Ljava/lang/Throwable;Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     150: return
    Exception table:
       from    to  target type
          44    51    54   Class java/lang/Throwable
          71    81    84   Class java/lang/UnsupportedOperationException
         120   126   129   Class java/lang/Throwable

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: getfield      #30                 // Field sourceMode:I
      12: iconst_2
      13: if_icmpne     33
      16: aload_0
      17: iconst_1
      18: putfield      #5                  // Field done:Z
      21: aload_0
      22: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      25: invokeinterface #46,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      30: goto          134
      33: aload_0
      34: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      37: invokeinterface #47,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onCompleteCall:()Ljava/lang/Runnable;
      42: astore_1
      43: aload_1
      44: ifnull        79
      47: aload_1
      48: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
      53: goto          79
      56: astore_2
      57: aload_0
      58: aload_0
      59: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      62: aload_2
      63: aload_0
      64: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      67: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      72: invokestatic  #22                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      75: invokevirtual #23                 // Method onError:(Ljava/lang/Throwable;)V
      78: return
      79: aload_0
      80: iconst_1
      81: putfield      #5                  // Field done:Z
      84: aload_0
      85: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      88: invokeinterface #46,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      93: aload_0
      94: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      97: invokeinterface #44,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onAfterTerminateCall:()Ljava/lang/Runnable;
     102: astore_2
     103: aload_2
     104: ifnull        134
     107: aload_2
     108: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
     113: goto          134
     116: astore_3
     117: aload_0
     118: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
     121: aload_3
     122: aload_0
     123: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
     126: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     131: invokestatic  #48                 // Method reactor/core/publisher/FluxPeek.afterCompleteWithFailure:(Lreactor/core/publisher/SignalPeek;Ljava/lang/Throwable;Lreactor/util/context/Context;)V
     134: return
    Exception table:
       from    to  target type
          47    53    56   Class java/lang/Throwable
         107   113   116   Class java/lang/Throwable

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: istore_1
       5: aload_0
       6: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       9: invokeinterface #49,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      14: astore_2
      15: goto          92
      18: astore_3
      19: aload_0
      20: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      23: invokeinterface #37,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onErrorCall:()Ljava/util/function/Consumer;
      28: astore        4
      30: aload         4
      32: ifnull        71
      35: aload         4
      37: aload_3
      38: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      43: goto          71
      46: astore        5
      48: aload_0
      49: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      52: aload         5
      54: aload_3
      55: aload_0
      56: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      59: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      64: invokestatic  #39                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      67: invokestatic  #50                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      70: athrow
      71: aload_0
      72: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      75: aload_3
      76: aload_0
      77: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
      80: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      85: invokestatic  #22                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      88: invokestatic  #50                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      91: athrow
      92: aload_0
      93: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
      96: invokeinterface #33,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onNextCall:()Ljava/util/function/Consumer;
     101: astore_3
     102: aload_2
     103: ifnull        159
     106: aload_3
     107: ifnull        159
     110: aload_3
     111: aload_2
     112: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
     117: goto          159
     120: astore        4
     122: aload_2
     123: aload         4
     125: aload_0
     126: getfield      #9                  // Field actual:Lreactor/core/CoreSubscriber;
     129: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     134: aload_0
     135: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
     138: invokestatic  #34                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
     141: astore        5
     143: aload         5
     145: ifnonnull     153
     148: aload_0
     149: invokevirtual #51                 // Method poll:()Ljava/lang/Object;
     152: areturn
     153: aload         5
     155: invokestatic  #50                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     158: athrow
     159: aload_2
     160: ifnonnull     221
     163: iload_1
     164: ifne          175
     167: aload_0
     168: getfield      #30                 // Field sourceMode:I
     171: iconst_1
     172: if_icmpne     221
     175: aload_0
     176: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
     179: invokeinterface #47,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onCompleteCall:()Ljava/lang/Runnable;
     184: astore        4
     186: aload         4
     188: ifnull        198
     191: aload         4
     193: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
     198: aload_0
     199: getfield      #10                 // Field parent:Lreactor/core/publisher/SignalPeek;
     202: invokeinterface #44,  1           // InterfaceMethod reactor/core/publisher/SignalPeek.onAfterTerminateCall:()Ljava/lang/Runnable;
     207: astore        4
     209: aload         4
     211: ifnull        221
     214: aload         4
     216: invokeinterface #21,  1           // InterfaceMethod java/lang/Runnable.run:()V
     221: aload_2
     222: areturn
    Exception table:
       from    to  target type
           5    15    18   Class java/lang/Throwable
          35    43    46   Class java/lang/Throwable
         110   117   120   Class java/lang/Throwable

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #52,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #53,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #54,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: putfield      #30                 // Field sourceMode:I
      24: iload_2
      25: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #55,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn
}
