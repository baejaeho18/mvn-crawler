Compiled from "FluxFilterFuseable.java"
final class reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.Fuseable$QueueSubscription<T> {
  final reactor.core.Fuseable$ConditionalSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  final java.util.function.Predicate<? super T> predicate;

  reactor.core.Fuseable$QueueSubscription<T> s;

  boolean done;

  int sourceMode;

  reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super T>, java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #4,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #5                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #6                  // Field predicate:Ljava/util/function/Predicate;
      24: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #8                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #9                  // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      23: aload_0
      24: invokeinterface #10,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: aconst_null
      13: invokeinterface #12,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          135
      21: aload_0
      22: getfield      #13                 // Field done:Z
      25: ifeq          37
      28: aload_1
      29: aload_0
      30: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      33: invokestatic  #14                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      36: return
      37: aload_0
      38: getfield      #6                  // Field predicate:Ljava/util/function/Predicate;
      41: aload_1
      42: invokeinterface #15,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      47: istore_2
      48: goto          100
      51: astore_3
      52: aload_1
      53: aload_3
      54: aload_0
      55: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      58: aload_0
      59: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      62: invokestatic  #17                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      65: astore        4
      67: aload         4
      69: ifnull        81
      72: aload_0
      73: aload         4
      75: invokevirtual #18                 // Method onError:(Ljava/lang/Throwable;)V
      78: goto          91
      81: aload_0
      82: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      85: lconst_1
      86: invokeinterface #19,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      91: aload_1
      92: aload_0
      93: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      96: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      99: return
     100: iload_2
     101: ifeq          117
     104: aload_0
     105: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     108: aload_1
     109: invokeinterface #12,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
     114: goto          135
     117: aload_0
     118: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
     121: lconst_1
     122: invokeinterface #19,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
     127: aload_1
     128: aload_0
     129: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
     132: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     135: return
    Exception table:
       from    to  target type
          37    48    51   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          17
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #14                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #6                  // Field predicate:Ljava/util/function/Predicate;
      21: aload_1
      22: invokeinterface #15,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      27: istore_2
      28: goto          68
      31: astore_3
      32: aload_1
      33: aload_3
      34: aload_0
      35: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      38: aload_0
      39: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      42: invokestatic  #17                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      45: astore        4
      47: aload         4
      49: ifnull        58
      52: aload_0
      53: aload         4
      55: invokevirtual #18                 // Method onError:(Ljava/lang/Throwable;)V
      58: aload_1
      59: aload_0
      60: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      63: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      66: iconst_0
      67: ireturn
      68: iload_2
      69: ifeq          83
      72: aload_0
      73: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      76: aload_1
      77: invokeinterface #21,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      82: ireturn
      83: aload_1
      84: aload_0
      85: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      88: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      91: iconst_0
      92: ireturn
    Exception table:
       from    to  target type
          17    28    31   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #22                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #13                 // Field done:Z
      21: aload_0
      22: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      25: aload_1
      26: invokeinterface #23,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #13                 // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #13                 // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      17: invokeinterface #24,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #25                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #26                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #13                 // Field done:Z
      23: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #28                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #19,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #29,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public T poll();
    Code:
       0: aload_0
       1: getfield      #11                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     98
       8: lconst_0
       9: lstore_1
      10: aload_0
      11: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      14: invokeinterface #30,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      19: astore_3
      20: aload_3
      21: ifnull        37
      24: aload_0
      25: getfield      #6                  // Field predicate:Ljava/util/function/Predicate;
      28: aload_3
      29: invokeinterface #15,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      34: ifeq          50
      37: lload_1
      38: lconst_0
      39: lcmp
      40: ifeq          48
      43: aload_0
      44: lload_1
      45: invokevirtual #31                 // Method request:(J)V
      48: aload_3
      49: areturn
      50: aload_3
      51: aload_0
      52: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      55: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      58: lload_1
      59: lconst_1
      60: ladd
      61: lstore_1
      62: goto          95
      65: astore        4
      67: aload_3
      68: aload         4
      70: aload_0
      71: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      74: invokestatic  #32                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      77: astore        5
      79: aload_3
      80: aload_0
      81: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
      84: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      87: aload         5
      89: ifnull        95
      92: aload         5
      94: athrow
      95: goto          10
      98: aload_0
      99: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
     102: invokeinterface #30,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
     107: astore_1
     108: aload_1
     109: ifnull        125
     112: aload_0
     113: getfield      #6                  // Field predicate:Ljava/util/function/Predicate;
     116: aload_1
     117: invokeinterface #15,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
     122: ifeq          127
     125: aload_1
     126: areturn
     127: aload_1
     128: aload_0
     129: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
     132: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     135: goto          163
     138: astore_2
     139: aload_1
     140: aload_2
     141: aload_0
     142: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
     145: invokestatic  #32                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
     148: astore_3
     149: aload_1
     150: aload_0
     151: getfield      #5                  // Field ctx:Lreactor/util/context/Context;
     154: invokestatic  #20                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     157: aload_3
     158: ifnull        163
     161: aload_3
     162: athrow
     163: goto          98
    Exception table:
       from    to  target type
          20    49    65   Class java/lang/Throwable
          50    62    65   Class java/lang/Throwable
         108   126   138   Class java/lang/Throwable
         127   135   138   Class java/lang/Throwable

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #33,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #34,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #35,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #7                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #36,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: putfield      #11                 // Field sourceMode:I
      24: iload_2
      25: ireturn
}
