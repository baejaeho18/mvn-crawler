Compiled from "FluxSwitchOnFirst.java"
final class reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInnerSubscriber<T> implements reactor.core.publisher.InnerConsumer<T> {
  final reactor.core.publisher.FluxSwitchOnFirst$AbstractSwitchOnFirstInner<?, T> parent;

  final reactor.core.CoreSubscriber<? super T> inner;

  reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInnerSubscriber(reactor.core.publisher.FluxSwitchOnFirst$AbstractSwitchOnFirstInner<?, T>, reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
      14: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
       4: invokeinterface #4,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
       9: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
       4: aload_1
       5: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      10: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
       4: getfield      #7                  // Field reactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner.done:Z
       7: ifne          17
      10: aload_0
      11: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
      14: invokevirtual #8                  // Method reactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner.cancel:()V
      17: aload_0
      18: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
      21: aload_1
      22: invokeinterface #9,  2            // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      27: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
       4: getfield      #7                  // Field reactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner.done:Z
       7: ifne          17
      10: aload_0
      11: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
      14: invokevirtual #8                  // Method reactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner.cancel:()V
      17: aload_0
      18: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
      21: invokeinterface #10,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      26: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #11                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field parent:Lreactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner;
      11: areturn
      12: aload_1
      13: getstatic     #12                 // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #3                  // Field inner:Lreactor/core/CoreSubscriber;
      23: areturn
      24: aconst_null
      25: areturn
}
