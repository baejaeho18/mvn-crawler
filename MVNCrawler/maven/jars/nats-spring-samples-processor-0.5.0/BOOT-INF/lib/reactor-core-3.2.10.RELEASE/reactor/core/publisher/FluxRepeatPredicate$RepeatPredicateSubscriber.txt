Compiled from "FluxRepeatPredicate.java"
final class reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber<T> extends reactor.core.publisher.Operators$MultiSubscriptionSubscriber<T, T> {
  final org.reactivestreams.Publisher<? extends T> source;

  final java.util.function.BooleanSupplier predicate;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber> WIP;

  long produced;

  reactor.core.publisher.FluxRepeatPredicate$RepeatPredicateSubscriber(org.reactivestreams.Publisher<? extends T>, reactor.core.CoreSubscriber<? super T>, java.util.function.BooleanSupplier);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field predicate:Ljava/util/function/BooleanSupplier;
      15: return

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: getfield      #4                  // Field produced:J
       5: lconst_1
       6: ladd
       7: putfield      #4                  // Field produced:J
      10: aload_0
      11: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
      14: aload_1
      15: invokeinterface #6,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      20: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field predicate:Ljava/util/function/BooleanSupplier;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/function/BooleanSupplier.getAsBoolean:()Z
       9: istore_1
      10: goto          37
      13: astore_2
      14: aload_0
      15: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
      18: aload_2
      19: aload_0
      20: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
      23: invokeinterface #9,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #10                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      31: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return
      37: iload_1
      38: ifeq          48
      41: aload_0
      42: invokevirtual #12                 // Method resubscribe:()V
      45: goto          57
      48: aload_0
      49: getfield      #5                  // Field actual:Lreactor/core/CoreSubscriber;
      52: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      57: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Throwable

  void resubscribe();
    Code:
       0: getstatic     #14                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifne          59
      10: aload_0
      11: invokevirtual #16                 // Method isCancelled:()Z
      14: ifeq          18
      17: return
      18: aload_0
      19: getfield      #4                  // Field produced:J
      22: lstore_1
      23: lload_1
      24: lconst_0
      25: lcmp
      26: ifeq          39
      29: aload_0
      30: lconst_0
      31: putfield      #4                  // Field produced:J
      34: aload_0
      35: lload_1
      36: invokevirtual #17                 // Method produced:(J)V
      39: aload_0
      40: getfield      #2                  // Field source:Lorg/reactivestreams/Publisher;
      43: aload_0
      44: invokeinterface #18,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      49: getstatic     #14                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      52: aload_0
      53: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      56: ifne          10
      59: return

  static {};
    Code:
       0: ldc           #20                 // class reactor/core/publisher/FluxRepeatPredicate$RepeatPredicateSubscriber
       2: ldc           #21                 // String wip
       4: invokestatic  #22                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #14                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
