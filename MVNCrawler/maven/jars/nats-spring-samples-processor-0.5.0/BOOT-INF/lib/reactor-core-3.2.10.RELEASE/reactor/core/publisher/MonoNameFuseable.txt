Compiled from "MonoNameFuseable.java"
final class reactor.core.publisher.MonoNameFuseable<T> extends reactor.core.publisher.MonoOperator<T, T> implements reactor.core.Fuseable {
  final java.lang.String name;

  final java.util.Set<reactor.util.function.Tuple2<java.lang.String, java.lang.String>> tags;

  reactor.core.publisher.MonoNameFuseable(reactor.core.publisher.Mono<? extends T>, java.lang.String, java.util.Set<reactor.util.function.Tuple2<java.lang.String, java.lang.String>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field name:Ljava/lang/String;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field tags:Ljava/util/Set;
      15: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field source:Lreactor/core/publisher/Mono;
       4: aload_1
       5: invokevirtual #5                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
       8: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field name:Ljava/lang/String;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.TAGS:Lreactor/core/Scannable$Attr;
      16: if_acmpne     36
      19: aload_0
      20: getfield      #3                  // Field tags:Ljava/util/Set;
      23: ifnull        36
      26: aload_0
      27: getfield      #3                  // Field tags:Ljava/util/Set;
      30: invokeinterface #8,  1            // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
      35: areturn
      36: aload_0
      37: aload_1
      38: invokespecial #9                  // Method reactor/core/publisher/MonoOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      41: areturn
}
