Compiled from "FluxFlattenIterable.java"
final class reactor.core.publisher.FluxFlattenIterable<T, R> extends reactor.core.publisher.FluxOperator<T, R> implements reactor.core.Fuseable {
  final java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>> mapper;

  final int prefetch;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  reactor.core.publisher.FluxFlattenIterable(reactor.core.publisher.Flux<? extends T>, java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>>, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: iload_3
       6: ifgt          36
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: new           #3                  // class java/lang/StringBuilder
      16: dup
      17: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      20: ldc           #5                  // String prefetch > 0 required but it was
      22: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: iload_3
      26: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      29: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      35: athrow
      36: aload_0
      37: aload_2
      38: ldc           #10                 // String mapper
      40: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      43: checkcast     #12                 // class java/util/function/Function
      46: putfield      #13                 // Field mapper:Ljava/util/function/Function;
      49: aload_0
      50: iload_3
      51: putfield      #14                 // Field prefetch:I
      54: aload_0
      55: aload         4
      57: ldc           #15                 // String queueSupplier
      59: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      62: checkcast     #16                 // class java/util/function/Supplier
      65: putfield      #17                 // Field queueSupplier:Ljava/util/function/Supplier;
      68: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #14                 // Field prefetch:I
       4: ireturn

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #18                 // Field source:Lreactor/core/publisher/Flux;
       4: instanceof    #19                 // class java/util/concurrent/Callable
       7: ifeq          111
      10: aload_0
      11: getfield      #18                 // Field source:Lreactor/core/publisher/Flux;
      14: checkcast     #19                 // class java/util/concurrent/Callable
      17: invokeinterface #20,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
      22: astore_2
      23: goto          42
      26: astore_3
      27: aload_1
      28: aload_3
      29: aload_1
      30: invokeinterface #22,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      35: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      38: invokestatic  #24                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      41: return
      42: aload_2
      43: ifnonnull     51
      46: aload_1
      47: invokestatic  #25                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      50: return
      51: aload_0
      52: getfield      #13                 // Field mapper:Ljava/util/function/Function;
      55: aload_2
      56: invokeinterface #26,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      61: checkcast     #27                 // class java/lang/Iterable
      64: astore        4
      66: aload         4
      68: invokeinterface #28,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      73: astore_3
      74: goto          105
      77: astore        4
      79: aload_1
      80: invokeinterface #22,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      85: astore        5
      87: aload_1
      88: aload         4
      90: aload         5
      92: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      95: invokestatic  #24                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      98: aload_2
      99: aload         5
     101: invokestatic  #29                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     104: return
     105: aload_1
     106: aload_3
     107: invokestatic  #30                 // Method reactor/core/publisher/FluxIterable.subscribe:(Lreactor/core/CoreSubscriber;Ljava/util/Iterator;)V
     110: return
     111: aload_0
     112: getfield      #18                 // Field source:Lreactor/core/publisher/Flux;
     115: new           #31                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
     118: dup
     119: aload_1
     120: aload_0
     121: getfield      #13                 // Field mapper:Ljava/util/function/Function;
     124: aload_0
     125: getfield      #14                 // Field prefetch:I
     128: aload_0
     129: getfield      #17                 // Field queueSupplier:Ljava/util/function/Supplier;
     132: invokespecial #32                 // Method reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Function;ILjava/util/function/Supplier;)V
     135: invokevirtual #33                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
     138: return
    Exception table:
       from    to  target type
          10    23    26   Class java/lang/Throwable
          51    74    77   Class java/lang/Throwable
}
