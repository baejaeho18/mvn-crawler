Compiled from "FluxWindowPredicate.java"
final class reactor.core.publisher.FluxWindowPredicate<T> extends reactor.core.publisher.FluxOperator<T, reactor.core.publisher.Flux<T>> implements reactor.core.Fuseable {
  final java.util.function.Supplier<? extends java.util.Queue<T>> groupQueueSupplier;

  final java.util.function.Supplier<? extends java.util.Queue<reactor.core.publisher.Flux<T>>> mainQueueSupplier;

  final reactor.core.publisher.FluxBufferPredicate$Mode mode;

  final java.util.function.Predicate<? super T> predicate;

  final int prefetch;

  reactor.core.publisher.FluxWindowPredicate(reactor.core.publisher.Flux<? extends T>, java.util.function.Supplier<? extends java.util.Queue<reactor.core.publisher.Flux<T>>>, java.util.function.Supplier<? extends java.util.Queue<T>>, int, java.util.function.Predicate<? super T>, reactor.core.publisher.FluxBufferPredicate$Mode);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: iload         4
       7: ifgt          38
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #3                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #5                  // String prefetch > 0 required but it was
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload         4
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload         5
      41: ldc           #10                 // String predicate
      43: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      46: checkcast     #12                 // class java/util/function/Predicate
      49: putfield      #13                 // Field predicate:Ljava/util/function/Predicate;
      52: aload_0
      53: aload_2
      54: ldc           #14                 // String mainQueueSupplier
      56: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      59: checkcast     #15                 // class java/util/function/Supplier
      62: putfield      #16                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      65: aload_0
      66: aload_3
      67: ldc           #17                 // String groupQueueSupplier
      69: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      72: checkcast     #15                 // class java/util/function/Supplier
      75: putfield      #18                 // Field groupQueueSupplier:Ljava/util/function/Supplier;
      78: aload_0
      79: aload         6
      81: putfield      #19                 // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
      84: aload_0
      85: iload         4
      87: putfield      #20                 // Field prefetch:I
      90: return

  public void subscribe(reactor.core.CoreSubscriber<? super reactor.core.publisher.Flux<T>>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field source:Lreactor/core/publisher/Flux;
       4: new           #22                 // class reactor/core/publisher/FluxWindowPredicate$WindowPredicateMain
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #16                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      13: invokeinterface #23,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      18: checkcast     #24                 // class java/util/Queue
      21: aload_0
      22: getfield      #18                 // Field groupQueueSupplier:Ljava/util/function/Supplier;
      25: aload_0
      26: getfield      #20                 // Field prefetch:I
      29: aload_0
      30: getfield      #13                 // Field predicate:Ljava/util/function/Predicate;
      33: aload_0
      34: getfield      #19                 // Field mode:Lreactor/core/publisher/FluxBufferPredicate$Mode;
      37: invokespecial #25                 // Method reactor/core/publisher/FluxWindowPredicate$WindowPredicateMain."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/function/Supplier;ILjava/util/function/Predicate;Lreactor/core/publisher/FluxBufferPredicate$Mode;)V
      40: invokevirtual #26                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      43: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #20                 // Field prefetch:I
       4: ireturn
}
