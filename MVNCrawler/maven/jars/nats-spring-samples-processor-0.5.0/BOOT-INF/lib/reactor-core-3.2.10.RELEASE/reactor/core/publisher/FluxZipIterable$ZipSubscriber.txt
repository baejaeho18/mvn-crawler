Compiled from "FluxZipIterable.java"
final class reactor.core.publisher.FluxZipIterable$ZipSubscriber<T, U, R> implements reactor.core.publisher.InnerOperator<T, R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.Iterator<? extends U> it;

  final java.util.function.BiFunction<? super T, ? super U, ? extends R> zipper;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxZipIterable$ZipSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.Iterator<? extends U>, java.util.function.BiFunction<? super T, ? super U, ? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field it:Ljava/util/Iterator;
      14: aload_0
      15: aload_3
      16: putfield      #4                  // Field zipper:Ljava/util/function/BiFunction;
      19: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #6                  // Field done:Z
      11: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #8                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #10                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #14                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #3                  // Field it:Ljava/util/Iterator;
      25: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: astore_2
      31: goto          68
      34: astore_3
      35: aload_0
      36: iconst_1
      37: putfield      #6                  // Field done:Z
      40: aload_0
      41: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      44: aload_0
      45: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
      48: aload_3
      49: aload_1
      50: aload_0
      51: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      54: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      59: invokestatic  #17                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      62: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      67: return
      68: aload_0
      69: getfield      #4                  // Field zipper:Ljava/util/function/BiFunction;
      72: aload_1
      73: aload_2
      74: invokeinterface #19,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: ldc           #20                 // String The zipper returned a null value
      81: invokestatic  #21                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      84: astore_3
      85: goto          124
      88: astore        4
      90: aload_0
      91: iconst_1
      92: putfield      #6                  // Field done:Z
      95: aload_0
      96: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      99: aload_0
     100: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
     103: aload         4
     105: aload_1
     106: aload_0
     107: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     110: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     115: invokestatic  #17                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     118: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     123: return
     124: aload_0
     125: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     128: aload_3
     129: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     134: aload_0
     135: getfield      #3                  // Field it:Ljava/util/Iterator;
     138: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     143: istore        4
     145: goto          184
     148: astore        5
     150: aload_0
     151: iconst_1
     152: putfield      #6                  // Field done:Z
     155: aload_0
     156: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     159: aload_0
     160: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
     163: aload         5
     165: aload_1
     166: aload_0
     167: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     170: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     175: invokestatic  #17                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     178: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     183: return
     184: iload         4
     186: ifne          212
     189: aload_0
     190: iconst_1
     191: putfield      #6                  // Field done:Z
     194: aload_0
     195: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
     198: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
     203: aload_0
     204: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     207: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     212: return
    Exception table:
       from    to  target type
          21    31    34   Class java/lang/Throwable
          68    85    88   Class java/lang/Throwable
         134   145   148   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #13,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #26                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #6                  // Field done:Z
      26: aload_0
      27: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #6                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      17: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      22: return

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #27,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #24,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
