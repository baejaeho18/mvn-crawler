Compiled from "FluxDoOnEach.java"
class reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber<T> extends reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber<T> implements reactor.core.Fuseable, reactor.core.Fuseable$QueueSubscription<T> {
  boolean syncFused;

  reactor.core.publisher.FluxDoOnEach$DoOnEachFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<? super reactor.core.publisher.Signal<T>>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: invokespecial #1                  // Method reactor/core/publisher/FluxDoOnEach$DoOnEachSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Z)V
       7: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: astore_2
       5: aload_2
       6: ifnull        43
       9: iload_1
      10: iconst_4
      11: iand
      12: ifne          43
      15: aload_2
      16: iload_1
      17: invokeinterface #4,  2            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      22: istore_3
      23: iload_3
      24: ifeq          41
      27: aload_0
      28: iload_3
      29: iconst_1
      30: if_icmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: putfield      #5                  // Field syncFused:Z
      41: iload_3
      42: ireturn
      43: iconst_0
      44: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #6,  1            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        19
       7: aload_0
       8: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #7,  1            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      13: invokeinterface #8,  1            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      18: astore_1
      19: aload_1
      20: ifnonnull     57
      23: aload_0
      24: getfield      #5                  // Field syncFused:Z
      27: ifeq          57
      30: aload_0
      31: iconst_3
      32: putfield      #10                 // Field state:S
      35: aload_0
      36: getfield      #11                 // Field onSignal:Ljava/util/function/Consumer;
      39: aload_0
      40: getfield      #12                 // Field cachedContext:Lreactor/util/context/Context;
      43: invokestatic  #13                 // InterfaceMethod reactor/core/publisher/Signal.complete:(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      46: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      51: goto          76
      54: astore_2
      55: aload_2
      56: athrow
      57: aload_1
      58: ifnull        76
      61: aload_0
      62: aload_1
      63: putfield      #16                 // Field t:Ljava/lang/Object;
      66: aload_0
      67: getfield      #11                 // Field onSignal:Ljava/util/function/Consumer;
      70: aload_0
      71: invokeinterface #14,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      76: aload_1
      77: areturn
    Exception table:
       from    to  target type
          35    51    54   Class java/lang/Throwable

  public int size();
    Code:
       0: aload_0
       1: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnonnull     11
       7: iconst_0
       8: goto          20
      11: aload_0
      12: getfield      #2                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      15: invokeinterface #17,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
      20: ireturn
}
