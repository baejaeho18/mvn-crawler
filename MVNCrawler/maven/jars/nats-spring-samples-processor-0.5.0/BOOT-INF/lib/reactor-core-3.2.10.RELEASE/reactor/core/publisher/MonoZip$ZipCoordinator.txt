Compiled from "MonoZip.java"
final class reactor.core.publisher.MonoZip$ZipCoordinator<R> extends reactor.core.publisher.Operators$MonoSubscriber<java.lang.Object, R> {
  final reactor.core.publisher.MonoZip$ZipInner<R>[] subscribers;

  final boolean delayError;

  final java.util.function.Function<? super java.lang.Object[], ? extends R> zipper;

  volatile int done;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoZip$ZipCoordinator> DONE;

  reactor.core.publisher.MonoZip$ZipCoordinator(reactor.core.CoreSubscriber<? super R>, int, boolean, java.util.function.Function<? super java.lang.Object[], ? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: iload_3
       7: putfield      #2                  // Field delayError:Z
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field zipper:Ljava/util/function/Function;
      16: aload_0
      17: iload_2
      18: anewarray     #4                  // class reactor/core/publisher/MonoZip$ZipInner
      21: putfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      24: iconst_0
      25: istore        5
      27: iload         5
      29: iload_2
      30: if_icmpge     54
      33: aload_0
      34: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      37: iload         5
      39: new           #4                  // class reactor/core/publisher/MonoZip$ZipInner
      42: dup
      43: aload_0
      44: invokespecial #6                  // Method reactor/core/publisher/MonoZip$ZipInner."<init>":(Lreactor/core/publisher/MonoZip$ZipCoordinator;)V
      47: aastore
      48: iinc          5, 1
      51: goto          27
      54: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     28
       7: aload_0
       8: getfield      #8                  // Field done:I
      11: aload_0
      12: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      15: arraylength
      16: if_icmpne     23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      27: areturn
      28: aload_1
      29: getstatic     #10                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      32: if_acmpne     44
      35: aload_0
      36: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      39: arraylength
      40: invokestatic  #11                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      43: areturn
      44: aload_1
      45: getstatic     #12                 // Field reactor/core/Scannable$Attr.DELAY_ERROR:Lreactor/core/Scannable$Attr;
      48: if_acmpne     59
      51: aload_0
      52: getfield      #2                  // Field delayError:Z
      55: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      58: areturn
      59: aload_0
      60: aload_1
      61: invokespecial #13                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      64: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
       4: invokestatic  #14                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  void signal();
    Code:
       0: aload_0
       1: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: getstatic     #15                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.incrementAndGet:(Ljava/lang/Object;)I
      15: iload_2
      16: if_icmpeq     20
      19: return
      20: iload_2
      21: anewarray     #17                 // class java/lang/Object
      24: astore_3
      25: aconst_null
      26: astore        4
      28: aconst_null
      29: astore        5
      31: iconst_0
      32: istore        6
      34: iconst_0
      35: istore        7
      37: iload         7
      39: aload_1
      40: arraylength
      41: if_icmpge     141
      44: aload_1
      45: iload         7
      47: aaload
      48: astore        8
      50: aload         8
      52: getfield      #18                 // Field reactor/core/publisher/MonoZip$ZipInner.value:Ljava/lang/Object;
      55: astore        9
      57: aload         9
      59: ifnull        71
      62: aload_3
      63: iload         7
      65: aload         9
      67: aastore
      68: goto          135
      71: aload         8
      73: getfield      #19                 // Field reactor/core/publisher/MonoZip$ZipInner.error:Ljava/lang/Throwable;
      76: astore        10
      78: aload         10
      80: ifnull        132
      83: aload         5
      85: ifnull        98
      88: aload         5
      90: aload         10
      92: invokevirtual #20                 // Method java/lang/Throwable.addSuppressed:(Ljava/lang/Throwable;)V
      95: goto          135
      98: aload         4
     100: ifnull        125
     103: iconst_2
     104: anewarray     #21                 // class java/lang/Throwable
     107: dup
     108: iconst_0
     109: aload         4
     111: aastore
     112: dup
     113: iconst_1
     114: aload         10
     116: aastore
     117: invokestatic  #22                 // Method reactor/core/Exceptions.multiple:([Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     120: astore        5
     122: goto          135
     125: aload         10
     127: astore        4
     129: goto          135
     132: iconst_1
     133: istore        6
     135: iinc          7, 1
     138: goto          37
     141: aload         5
     143: ifnull        160
     146: aload_0
     147: getfield      #23                 // Field actual:Lreactor/core/CoreSubscriber;
     150: aload         5
     152: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     157: goto          250
     160: aload         4
     162: ifnull        179
     165: aload_0
     166: getfield      #23                 // Field actual:Lreactor/core/CoreSubscriber;
     169: aload         4
     171: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     176: goto          250
     179: iload         6
     181: ifeq          196
     184: aload_0
     185: getfield      #23                 // Field actual:Lreactor/core/CoreSubscriber;
     188: invokeinterface #25,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     193: goto          250
     196: aload_0
     197: getfield      #3                  // Field zipper:Ljava/util/function/Function;
     200: aload_3
     201: invokeinterface #26,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     206: ldc           #27                 // String zipper produced a null value
     208: invokestatic  #28                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     211: astore        7
     213: goto          244
     216: astore        8
     218: aload_0
     219: getfield      #23                 // Field actual:Lreactor/core/CoreSubscriber;
     222: aconst_null
     223: aload         8
     225: aload_3
     226: aload_0
     227: getfield      #23                 // Field actual:Lreactor/core/CoreSubscriber;
     230: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     235: invokestatic  #30                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     238: invokeinterface #24,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     243: return
     244: aload_0
     245: aload         7
     247: invokevirtual #31                 // Method complete:(Ljava/lang/Object;)V
     250: return
    Exception table:
       from    to  target type
         196   213   216   Class java/lang/Throwable

  public void cancel();
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isCancelled:()Z
       4: ifne          42
       7: aload_0
       8: invokespecial #33                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
      11: aload_0
      12: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      15: astore_1
      16: aload_1
      17: arraylength
      18: istore_2
      19: iconst_0
      20: istore_3
      21: iload_3
      22: iload_2
      23: if_icmpge     42
      26: aload_1
      27: iload_3
      28: aaload
      29: astore        4
      31: aload         4
      33: invokevirtual #34                 // Method reactor/core/publisher/MonoZip$ZipInner.cancel:()V
      36: iinc          3, 1
      39: goto          21
      42: return

  void cancelExcept(reactor.core.publisher.MonoZip$ZipInner<R>);
    Code:
       0: aload_0
       1: invokevirtual #32                 // Method isCancelled:()Z
       4: ifne          51
       7: aload_0
       8: invokespecial #33                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
      11: aload_0
      12: getfield      #5                  // Field subscribers:[Lreactor/core/publisher/MonoZip$ZipInner;
      15: astore_2
      16: aload_2
      17: arraylength
      18: istore_3
      19: iconst_0
      20: istore        4
      22: iload         4
      24: iload_3
      25: if_icmpge     51
      28: aload_2
      29: iload         4
      31: aaload
      32: astore        5
      34: aload         5
      36: aload_1
      37: if_acmpeq     45
      40: aload         5
      42: invokevirtual #34                 // Method reactor/core/publisher/MonoZip$ZipInner.cancel:()V
      45: iinc          4, 1
      48: goto          22
      51: return

  static {};
    Code:
       0: ldc           #35                 // class reactor/core/publisher/MonoZip$ZipCoordinator
       2: ldc           #36                 // String done
       4: invokestatic  #37                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #15                 // Field DONE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
