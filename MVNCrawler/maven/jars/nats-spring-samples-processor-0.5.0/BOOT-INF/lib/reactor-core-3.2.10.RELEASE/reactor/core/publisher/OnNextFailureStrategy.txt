Compiled from "OnNextFailureStrategy.java"
interface reactor.core.publisher.OnNextFailureStrategy extends java.util.function.BiFunction<java.lang.Throwable, java.lang.Object, java.lang.Throwable>, java.util.function.BiPredicate<java.lang.Throwable, java.lang.Object> {
  public static final java.lang.String KEY_ON_NEXT_ERROR_STRATEGY;

  public static final reactor.core.publisher.OnNextFailureStrategy STOP;

  public static final reactor.core.publisher.OnNextFailureStrategy RESUME_DROP;

  public default java.lang.Throwable apply(java.lang.Throwable, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #1                  // InterfaceMethod reactor/util/context/Context.empty:()Lreactor/util/context/Context;
       6: invokeinterface #2,  4            // InterfaceMethod process:(Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      11: areturn

  public abstract boolean test(java.lang.Throwable, java.lang.Object);

  public abstract java.lang.Throwable process(java.lang.Throwable, java.lang.Object, reactor.util.context.Context);

  public static reactor.core.publisher.OnNextFailureStrategy stop();
    Code:
       0: getstatic     #3                  // Field STOP:Lreactor/core/publisher/OnNextFailureStrategy;
       3: areturn

  public static reactor.core.publisher.OnNextFailureStrategy resumeDrop();
    Code:
       0: getstatic     #4                  // Field RESUME_DROP:Lreactor/core/publisher/OnNextFailureStrategy;
       3: areturn

  public static reactor.core.publisher.OnNextFailureStrategy resumeDropIf(java.util.function.Predicate<java.lang.Throwable>);
    Code:
       0: new           #5                  // class reactor/core/publisher/OnNextFailureStrategy$ResumeDropStrategy
       3: dup
       4: aload_0
       5: invokespecial #6                  // Method reactor/core/publisher/OnNextFailureStrategy$ResumeDropStrategy."<init>":(Ljava/util/function/Predicate;)V
       8: areturn

  public static reactor.core.publisher.OnNextFailureStrategy resume(java.util.function.BiConsumer<java.lang.Throwable, java.lang.Object>);
    Code:
       0: new           #7                  // class reactor/core/publisher/OnNextFailureStrategy$ResumeStrategy
       3: dup
       4: aconst_null
       5: aload_0
       6: invokespecial #8                  // Method reactor/core/publisher/OnNextFailureStrategy$ResumeStrategy."<init>":(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V
       9: areturn

  public static reactor.core.publisher.OnNextFailureStrategy resumeIf(java.util.function.Predicate<java.lang.Throwable>, java.util.function.BiConsumer<java.lang.Throwable, java.lang.Object>);
    Code:
       0: new           #7                  // class reactor/core/publisher/OnNextFailureStrategy$ResumeStrategy
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #8                  // Method reactor/core/publisher/OnNextFailureStrategy$ResumeStrategy."<init>":(Ljava/util/function/Predicate;Ljava/util/function/BiConsumer;)V
       9: areturn

  public default java.lang.Object apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Throwable
       5: aload_2
       6: invokeinterface #10,  3           // InterfaceMethod apply:(Ljava/lang/Throwable;Ljava/lang/Object;)Ljava/lang/Throwable;
      11: areturn

  public default boolean test(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #9                  // class java/lang/Throwable
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod test:(Ljava/lang/Throwable;Ljava/lang/Object;)Z
      11: ireturn

  static {};
    Code:
       0: new           #12                 // class reactor/core/publisher/OnNextFailureStrategy$1
       3: dup
       4: invokespecial #13                 // Method reactor/core/publisher/OnNextFailureStrategy$1."<init>":()V
       7: putstatic     #3                  // Field STOP:Lreactor/core/publisher/OnNextFailureStrategy;
      10: new           #5                  // class reactor/core/publisher/OnNextFailureStrategy$ResumeDropStrategy
      13: dup
      14: aconst_null
      15: invokespecial #6                  // Method reactor/core/publisher/OnNextFailureStrategy$ResumeDropStrategy."<init>":(Ljava/util/function/Predicate;)V
      18: putstatic     #4                  // Field RESUME_DROP:Lreactor/core/publisher/OnNextFailureStrategy;
      21: return
}
