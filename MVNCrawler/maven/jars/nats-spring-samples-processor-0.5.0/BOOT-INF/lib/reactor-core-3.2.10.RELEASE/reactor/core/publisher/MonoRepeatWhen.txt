Compiled from "MonoRepeatWhen.java"
final class reactor.core.publisher.MonoRepeatWhen<T> extends reactor.core.publisher.FluxFromMonoOperator<T, T> {
  final java.util.function.Function<? super reactor.core.publisher.Flux<java.lang.Long>, ? extends org.reactivestreams.Publisher<?>> whenSourceFactory;

  reactor.core.publisher.MonoRepeatWhen(reactor.core.publisher.Mono<? extends T>, java.util.function.Function<? super reactor.core.publisher.Flux<java.lang.Long>, ? extends org.reactivestreams.Publisher<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxFromMonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String whenSourceFactory
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/Function
      15: putfield      #5                  // Field whenSourceFactory:Ljava/util/function/Function;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxRepeatWhen$RepeatWhenOtherSubscriber
       3: dup
       4: invokespecial #7                  // Method reactor/core/publisher/FluxRepeatWhen$RepeatWhenOtherSubscriber."<init>":()V
       7: astore_2
       8: aload_2
       9: getfield      #8                  // Field reactor/core/publisher/FluxRepeatWhen$RepeatWhenOtherSubscriber.completionSignal:Lreactor/core/publisher/DirectProcessor;
      12: invokestatic  #9                  // Method reactor/core/publisher/Operators.serialize:(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
      15: astore_3
      16: aload_3
      17: invokestatic  #10                 // Method reactor/core/publisher/Operators.emptySubscription:()Lorg/reactivestreams/Subscription;
      20: invokeinterface #11,  2           // InterfaceMethod org/reactivestreams/Subscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      25: aload_1
      26: invokestatic  #9                  // Method reactor/core/publisher/Operators.serialize:(Lreactor/core/CoreSubscriber;)Lreactor/core/CoreSubscriber;
      29: astore        4
      31: new           #12                 // class reactor/core/publisher/FluxRepeatWhen$RepeatWhenMainSubscriber
      34: dup
      35: aload         4
      37: aload_3
      38: aload_0
      39: getfield      #13                 // Field source:Lreactor/core/publisher/Mono;
      42: invokespecial #14                 // Method reactor/core/publisher/FluxRepeatWhen$RepeatWhenMainSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lorg/reactivestreams/Subscriber;Lorg/reactivestreams/Publisher;)V
      45: astore        5
      47: aload_2
      48: aload         5
      50: putfield      #15                 // Field reactor/core/publisher/FluxRepeatWhen$RepeatWhenOtherSubscriber.main:Lreactor/core/publisher/FluxRepeatWhen$RepeatWhenMainSubscriber;
      53: aload         4
      55: aload         5
      57: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      62: aload_0
      63: getfield      #5                  // Field whenSourceFactory:Ljava/util/function/Function;
      66: aload_2
      67: invokeinterface #17,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      72: ldc           #18                 // String The whenSourceFactory returned a null Publisher
      74: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      77: checkcast     #19                 // class org/reactivestreams/Publisher
      80: astore        6
      82: goto          105
      85: astore        7
      87: aload_1
      88: aload         7
      90: aload_1
      91: invokeinterface #21,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      96: invokestatic  #22                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      99: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
     104: return
     105: aload         6
     107: aload_2
     108: invokeinterface #24,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     113: aload         5
     115: getfield      #25                 // Field reactor/core/publisher/FluxRepeatWhen$RepeatWhenMainSubscriber.cancelled:Z
     118: ifne          130
     121: aload_0
     122: getfield      #13                 // Field source:Lreactor/core/publisher/Mono;
     125: aload         5
     127: invokevirtual #26                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     130: return
    Exception table:
       from    to  target type
          62    82    85   Class java/lang/Throwable
}
