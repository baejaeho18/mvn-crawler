Compiled from "MonoPeek.java"
final class reactor.core.publisher.MonoPeek<T> extends reactor.core.publisher.MonoOperator<T, T> implements reactor.core.publisher.SignalPeek<T> {
  final java.util.function.Consumer<? super org.reactivestreams.Subscription> onSubscribeCall;

  final java.util.function.Consumer<? super T> onNextCall;

  final java.util.function.Consumer<? super java.lang.Throwable> onErrorCall;

  final java.lang.Runnable onCompleteCall;

  final java.util.function.LongConsumer onRequestCall;

  final java.lang.Runnable onCancelCall;

  reactor.core.publisher.MonoPeek(reactor.core.publisher.Mono<? extends T>, java.util.function.Consumer<? super org.reactivestreams.Subscription>, java.util.function.Consumer<? super T>, java.util.function.Consumer<? super java.lang.Throwable>, java.lang.Runnable, java.util.function.LongConsumer, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field onSubscribeCall:Ljava/util/function/Consumer;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field onNextCall:Ljava/util/function/Consumer;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field onErrorCall:Ljava/util/function/Consumer;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field onCompleteCall:Ljava/lang/Runnable;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field onRequestCall:Ljava/util/function/LongConsumer;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field onCancelCall:Ljava/lang/Runnable;
      39: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: instanceof    #8                  // class reactor/core/Fuseable$ConditionalSubscriber
       4: ifeq          27
       7: aload_0
       8: getfield      #9                  // Field source:Lreactor/core/publisher/Mono;
      11: new           #10                 // class reactor/core/publisher/FluxPeekFuseable$PeekConditionalSubscriber
      14: dup
      15: aload_1
      16: checkcast     #8                  // class reactor/core/Fuseable$ConditionalSubscriber
      19: aload_0
      20: invokespecial #11                 // Method reactor/core/publisher/FluxPeekFuseable$PeekConditionalSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Lreactor/core/publisher/SignalPeek;)V
      23: invokevirtual #12                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      26: return
      27: aload_0
      28: getfield      #9                  // Field source:Lreactor/core/publisher/Mono;
      31: new           #13                 // class reactor/core/publisher/FluxPeek$PeekSubscriber
      34: dup
      35: aload_1
      36: aload_0
      37: invokespecial #14                 // Method reactor/core/publisher/FluxPeek$PeekSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/SignalPeek;)V
      40: invokevirtual #12                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      43: return

  public java.util.function.Consumer<? super org.reactivestreams.Subscription> onSubscribeCall();
    Code:
       0: aload_0
       1: getfield      #2                  // Field onSubscribeCall:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<? super T> onNextCall();
    Code:
       0: aload_0
       1: getfield      #3                  // Field onNextCall:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<? super java.lang.Throwable> onErrorCall();
    Code:
       0: aload_0
       1: getfield      #4                  // Field onErrorCall:Ljava/util/function/Consumer;
       4: areturn

  public java.lang.Runnable onCompleteCall();
    Code:
       0: aload_0
       1: getfield      #5                  // Field onCompleteCall:Ljava/lang/Runnable;
       4: areturn

  public java.lang.Runnable onAfterTerminateCall();
    Code:
       0: aconst_null
       1: areturn

  public java.util.function.LongConsumer onRequestCall();
    Code:
       0: aload_0
       1: getfield      #6                  // Field onRequestCall:Ljava/util/function/LongConsumer;
       4: areturn

  public java.lang.Runnable onCancelCall();
    Code:
       0: aload_0
       1: getfield      #7                  // Field onCancelCall:Ljava/lang/Runnable;
       4: areturn
}
