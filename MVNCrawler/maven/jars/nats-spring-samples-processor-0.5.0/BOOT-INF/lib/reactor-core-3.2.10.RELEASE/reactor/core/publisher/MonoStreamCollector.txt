Compiled from "MonoStreamCollector.java"
final class reactor.core.publisher.MonoStreamCollector<T, A, R> extends reactor.core.publisher.MonoFromFluxOperator<T, R> implements reactor.core.Fuseable {
  final java.util.stream.Collector<? super T, A, ? extends R> collector;

  reactor.core.publisher.MonoStreamCollector(reactor.core.publisher.Flux<? extends T>, java.util.stream.Collector<? super T, A, ? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoFromFluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String collector
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/stream/Collector
      15: putfield      #5                  // Field collector:Ljava/util/stream/Collector;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field collector:Ljava/util/stream/Collector;
       4: invokeinterface #6,  1            // InterfaceMethod java/util/stream/Collector.supplier:()Ljava/util/function/Supplier;
       9: invokeinterface #7,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      14: astore_2
      15: aload_0
      16: getfield      #5                  // Field collector:Ljava/util/stream/Collector;
      19: invokeinterface #8,  1            // InterfaceMethod java/util/stream/Collector.accumulator:()Ljava/util/function/BiConsumer;
      24: astore_3
      25: aload_0
      26: getfield      #5                  // Field collector:Ljava/util/stream/Collector;
      29: invokeinterface #9,  1            // InterfaceMethod java/util/stream/Collector.finisher:()Ljava/util/function/Function;
      34: astore        4
      36: goto          57
      39: astore        5
      41: aload_1
      42: aload         5
      44: aload_1
      45: invokeinterface #11,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      50: invokestatic  #12                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      53: invokestatic  #13                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      56: return
      57: aload_0
      58: getfield      #14                 // Field source:Lreactor/core/publisher/Flux;
      61: new           #15                 // class reactor/core/publisher/MonoStreamCollector$StreamCollectorSubscriber
      64: dup
      65: aload_1
      66: aload_2
      67: aload_3
      68: aload         4
      70: invokespecial #16                 // Method reactor/core/publisher/MonoStreamCollector$StreamCollectorSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/lang/Object;Ljava/util/function/BiConsumer;Ljava/util/function/Function;)V
      73: invokevirtual #17                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      76: return
    Exception table:
       from    to  target type
           0    36    39   Class java/lang/Throwable
}
