Compiled from "FluxSwitchOnFirst.java"
final class reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInner<T, R> extends reactor.core.publisher.FluxSwitchOnFirst$AbstractSwitchOnFirstInner<T, R> {
  reactor.core.publisher.FluxSwitchOnFirst$SwitchOnFirstInner(reactor.core.CoreSubscriber<? super R>, java.util.function.BiFunction<reactor.core.publisher.Signal<? extends T>, reactor.core.publisher.Flux<T>, org.reactivestreams.Publisher<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #2                  // Method reactor/core/publisher/FluxSwitchOnFirst$AbstractSwitchOnFirstInner."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/BiFunction;)V
       6: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field state:I
       4: ifne          74
       7: getstatic     #4                  // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: iconst_0
      12: iconst_1
      13: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
      16: ifeq          74
      19: aload_0
      20: getfield      #6                  // Field first:Ljava/lang/Object;
      23: ifnonnull     56
      26: aload_0
      27: getfield      #7                  // Field done:Z
      30: ifeq          56
      33: aload_0
      34: getfield      #8                  // Field throwable:Ljava/lang/Throwable;
      37: ifnull        51
      40: aload_1
      41: aload_0
      42: getfield      #8                  // Field throwable:Ljava/lang/Throwable;
      45: invokestatic  #9                  // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      48: goto          55
      51: aload_1
      52: invokestatic  #10                 // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
      55: return
      56: getstatic     #11                 // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      59: aload_0
      60: aload_1
      61: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      64: aload_1
      65: aload_0
      66: invokeinterface #13,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      71: goto          87
      74: aload_1
      75: new           #14                 // class java/lang/IllegalStateException
      78: dup
      79: ldc           #15                 // String FluxSwitchOnFirst allows only one Subscriber
      81: invokespecial #16                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: invokestatic  #9                  // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      87: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #17                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          58
       7: aload_0
       8: getfield      #6                  // Field first:Ljava/lang/Object;
      11: ifnull        48
      14: aload_0
      15: invokevirtual #18                 // Method drain:()V
      18: lload_1
      19: ldc2_w        #20                 // long 9223372036854775807l
      22: lcmp
      23: ifeq          48
      26: lload_1
      27: lconst_1
      28: lsub
      29: dup2
      30: lstore_1
      31: lconst_0
      32: lcmp
      33: ifle          47
      36: aload_0
      37: getfield      #22                 // Field s:Lorg/reactivestreams/Subscription;
      40: lload_1
      41: invokeinterface #23,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      46: return
      47: return
      48: aload_0
      49: getfield      #22                 // Field s:Lorg/reactivestreams/Subscription;
      52: lload_1
      53: invokeinterface #23,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      58: return

  void drain();
    Code:
       0: getstatic     #24                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #25                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #6                  // Field first:Ljava/lang/Object;
      15: astore_1
      16: iconst_1
      17: istore_2
      18: aload_0
      19: getfield      #26                 // Field inner:Lreactor/core/CoreSubscriber;
      22: astore_3
      23: aload_1
      24: ifnull        59
      27: aload_0
      28: aconst_null
      29: putfield      #6                  // Field first:Ljava/lang/Object;
      32: aload_0
      33: getfield      #27                 // Field cancelled:Z
      36: ifeq          50
      39: aload_1
      40: aload_3
      41: invokeinterface #28,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      46: invokestatic  #29                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      49: return
      50: aload_3
      51: aload_1
      52: invokeinterface #30,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      57: aconst_null
      58: astore_1
      59: aload_0
      60: getfield      #27                 // Field cancelled:Z
      63: ifeq          67
      66: return
      67: aload_0
      68: getfield      #7                  // Field done:Z
      71: ifeq          103
      74: aload_0
      75: getfield      #8                  // Field throwable:Ljava/lang/Throwable;
      78: astore        4
      80: aload         4
      82: ifnull        96
      85: aload_3
      86: aload         4
      88: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      93: goto          102
      96: aload_3
      97: invokeinterface #32,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     102: return
     103: getstatic     #24                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     106: aload_0
     107: iload_2
     108: ineg
     109: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     112: istore_2
     113: iload_2
     114: ifne          23
     117: return
}
