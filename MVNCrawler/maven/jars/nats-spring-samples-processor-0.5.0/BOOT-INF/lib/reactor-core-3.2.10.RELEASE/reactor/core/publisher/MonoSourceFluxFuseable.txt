Compiled from "MonoSourceFluxFuseable.java"
final class reactor.core.publisher.MonoSourceFluxFuseable<I> extends reactor.core.publisher.MonoFromFluxOperator<I, I> implements reactor.core.Fuseable {
  reactor.core.publisher.MonoSourceFluxFuseable(reactor.core.publisher.Flux<? extends I>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoFromFluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: return

  public void subscribe(reactor.core.CoreSubscriber<? super I>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field source:Lreactor/core/publisher/Flux;
       4: aload_1
       5: invokevirtual #3                  // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
       8: return
}
