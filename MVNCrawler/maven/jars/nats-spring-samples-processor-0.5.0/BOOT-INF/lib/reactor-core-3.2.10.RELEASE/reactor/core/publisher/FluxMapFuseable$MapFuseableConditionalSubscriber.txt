Compiled from "FluxMapFuseable.java"
final class reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber<T, R> implements reactor.core.Fuseable$ConditionalSubscriber<T>, reactor.core.publisher.InnerOperator<T, R>, reactor.core.Fuseable$QueueSubscription<R> {
  final reactor.core.Fuseable$ConditionalSubscriber<? super R> actual;

  final java.util.function.Function<? super T, ? extends R> mapper;

  boolean done;

  reactor.core.Fuseable$QueueSubscription<T> s;

  int sourceMode;

  reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super R>, java.util.function.Function<? super T, ? extends R>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field mapper:Ljava/util/function/Function;
      14: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #5                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      11: areturn
      12: aload_1
      13: getstatic     #7                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #8                  // Field done:Z
      23: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #10                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          29
      11: aload_0
      12: aload_1
      13: checkcast     #12                 // class reactor/core/Fuseable$QueueSubscription
      16: putfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      19: aload_0
      20: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      23: aload_0
      24: invokeinterface #13,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      29: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field sourceMode:I
       4: iconst_2
       5: if_icmpne     21
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: aconst_null
      13: invokeinterface #15,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
      18: goto          117
      21: aload_0
      22: getfield      #8                  // Field done:Z
      25: ifeq          42
      28: aload_1
      29: aload_0
      30: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      33: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      38: invokestatic  #17                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      41: return
      42: aload_0
      43: getfield      #4                  // Field mapper:Ljava/util/function/Function;
      46: aload_1
      47: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      52: ldc           #19                 // String The mapper returned a null value.
      54: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      57: astore_2
      58: goto          107
      61: astore_3
      62: aload_1
      63: aload_3
      64: aload_0
      65: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      68: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      73: aload_0
      74: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      77: invokestatic  #22                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      80: astore        4
      82: aload         4
      84: ifnull        96
      87: aload_0
      88: aload         4
      90: invokevirtual #23                 // Method onError:(Ljava/lang/Throwable;)V
      93: goto          106
      96: aload_0
      97: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
     100: lconst_1
     101: invokeinterface #24,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
     106: return
     107: aload_0
     108: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
     111: aload_2
     112: invokeinterface #15,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
     117: return
    Exception table:
       from    to  target type
          42    58    61   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          22
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #17                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: iconst_1
      21: ireturn
      22: aload_0
      23: getfield      #4                  // Field mapper:Ljava/util/function/Function;
      26: aload_1
      27: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      32: ldc           #19                 // String The mapper returned a null value.
      34: invokestatic  #20                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: astore_2
      38: aload_0
      39: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      42: aload_2
      43: invokeinterface #25,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      48: ireturn
      49: astore_3
      50: aload_1
      51: aload_3
      52: aload_0
      53: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      56: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      61: aload_0
      62: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      65: invokestatic  #22                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      68: astore        4
      70: aload         4
      72: ifnull        83
      75: aload_0
      76: aload         4
      78: invokevirtual #23                 // Method onError:(Ljava/lang/Throwable;)V
      81: iconst_1
      82: ireturn
      83: iconst_0
      84: ireturn
    Exception table:
       from    to  target type
          22    48    49   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      12: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #26                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #8                  // Field done:Z
      26: aload_0
      27: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      30: aload_1
      31: invokeinterface #27,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #8                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #8                  // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      17: invokeinterface #28,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
      22: return

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: lload_1
       5: invokeinterface #24,  3           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #29,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.cancel:()V
       9: return

  public R poll();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #30,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        48
      14: aload_0
      15: getfield      #4                  // Field mapper:Ljava/util/function/Function;
      18: aload_1
      19: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      24: invokestatic  #31                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
      27: areturn
      28: astore_2
      29: aload_1
      30: aload_2
      31: aload_0
      32: invokevirtual #32                 // Method currentContext:()Lreactor/util/context/Context;
      35: invokestatic  #33                 // Method reactor/core/publisher/Operators.onNextPollError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      38: astore_3
      39: aload_3
      40: ifnull        45
      43: aload_3
      44: athrow
      45: goto          0
      48: aconst_null
      49: areturn
    Exception table:
       from    to  target type
          14    27    28   Class java/lang/Throwable

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #34,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #35,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
       9: return

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_4
       2: iand
       3: ifeq          8
       6: iconst_0
       7: ireturn
       8: aload_0
       9: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #36,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: istore_2
      19: aload_0
      20: iload_2
      21: putfield      #14                 // Field sourceMode:I
      24: iload_2
      25: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lreactor/core/Fuseable$QueueSubscription;
       4: invokeinterface #37,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
       9: ireturn
}
