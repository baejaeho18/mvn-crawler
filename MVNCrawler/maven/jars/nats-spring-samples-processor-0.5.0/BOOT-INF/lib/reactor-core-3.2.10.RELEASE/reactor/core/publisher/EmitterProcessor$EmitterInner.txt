Compiled from "EmitterProcessor.java"
final class reactor.core.publisher.EmitterProcessor$EmitterInner<T> extends reactor.core.publisher.FluxPublish$PubSubInner<T> {
  final reactor.core.publisher.EmitterProcessor<T> parent;

  reactor.core.publisher.EmitterProcessor$EmitterInner(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.EmitterProcessor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxPublish$PubSubInner."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field parent:Lreactor/core/publisher/EmitterProcessor;
      10: return

  void drainParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/EmitterProcessor;
       4: invokevirtual #3                  // Method reactor/core/publisher/EmitterProcessor.drain:()V
       7: return

  void removeAndDrainParent();
    Code:
       0: aload_0
       1: getfield      #2                  // Field parent:Lreactor/core/publisher/EmitterProcessor;
       4: aload_0
       5: invokevirtual #4                  // Method reactor/core/publisher/EmitterProcessor.remove:(Lreactor/core/publisher/FluxPublish$PubSubInner;)V
       8: aload_0
       9: getfield      #2                  // Field parent:Lreactor/core/publisher/EmitterProcessor;
      12: invokevirtual #3                  // Method reactor/core/publisher/EmitterProcessor.drain:()V
      15: return
}
