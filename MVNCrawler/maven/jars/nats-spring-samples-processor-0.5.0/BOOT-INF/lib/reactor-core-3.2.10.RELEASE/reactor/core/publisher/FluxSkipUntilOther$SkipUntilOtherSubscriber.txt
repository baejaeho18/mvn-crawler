Compiled from "FluxSkipUntilOther.java"
final class reactor.core.publisher.FluxSkipUntilOther$SkipUntilOtherSubscriber<U> implements reactor.core.publisher.InnerConsumer<U> {
  final reactor.core.publisher.FluxSkipUntilOther$SkipUntilMainSubscriber<?> main;

  reactor.core.publisher.FluxSkipUntilOther$SkipUntilOtherSubscriber(reactor.core.publisher.FluxSkipUntilOther$SkipUntilMainSubscriber<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       9: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       4: invokevirtual #3                  // Method reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.currentContext:()Lreactor/util/context/Context;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     29
       7: aload_0
       8: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
      11: getfield      #5                  // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.other:Lorg/reactivestreams/Subscription;
      14: invokestatic  #6                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      17: if_acmpne     24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      28: areturn
      29: aload_1
      30: getstatic     #8                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      33: if_acmpne     44
      36: aload_0
      37: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
      40: getfield      #5                  // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.other:Lorg/reactivestreams/Subscription;
      43: areturn
      44: aload_1
      45: getstatic     #9                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      48: if_acmpne     56
      51: aload_0
      52: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
      55: areturn
      56: aconst_null
      57: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       4: aload_1
       5: invokevirtual #10                 // Method reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.setOther:(Lorg/reactivestreams/Subscription;)V
       8: aload_1
       9: ldc2_w        #12                 // long 9223372036854775807l
      12: invokeinterface #14,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      17: return

  public void onNext(U);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       4: getfield      #15                 // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.gate:Z
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
      15: astore_2
      16: aload_2
      17: getfield      #5                  // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.other:Lorg/reactivestreams/Subscription;
      20: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      25: aload_2
      26: iconst_1
      27: putfield      #15                 // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.gate:Z
      30: aload_2
      31: invokestatic  #6                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: putfield      #5                  // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.other:Lorg/reactivestreams/Subscription;
      37: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       4: astore_2
       5: aload_2
       6: getfield      #15                 // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.gate:Z
       9: ifeq          24
      12: aload_1
      13: aload_0
      14: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
      17: invokevirtual #3                  // Method reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.currentContext:()Lreactor/util/context/Context;
      20: invokestatic  #17                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      23: return
      24: aload_2
      25: aload_1
      26: invokevirtual #18                 // Method reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.onError:(Ljava/lang/Throwable;)V
      29: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber;
       4: astore_1
       5: aload_1
       6: getfield      #15                 // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.gate:Z
       9: ifeq          13
      12: return
      13: aload_1
      14: iconst_1
      15: putfield      #15                 // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.gate:Z
      18: aload_1
      19: invokestatic  #6                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      22: putfield      #5                  // Field reactor/core/publisher/FluxSkipUntilOther$SkipUntilMainSubscriber.other:Lorg/reactivestreams/Subscription;
      25: return
}
