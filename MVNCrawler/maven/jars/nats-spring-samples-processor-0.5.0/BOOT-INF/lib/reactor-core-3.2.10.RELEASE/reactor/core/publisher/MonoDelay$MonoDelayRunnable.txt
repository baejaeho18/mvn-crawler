Compiled from "MonoDelay.java"
final class reactor.core.publisher.MonoDelay$MonoDelayRunnable implements java.lang.Runnable, reactor.core.publisher.InnerProducer<java.lang.Long> {
  final reactor.core.CoreSubscriber<? super java.lang.Long> actual;

  volatile reactor.core.Disposable cancel;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoDelay$MonoDelayRunnable, reactor.core.Disposable> CANCEL;

  volatile boolean requested;

  static final reactor.core.Disposable FINISHED;

  reactor.core.publisher.MonoDelay$MonoDelayRunnable(reactor.core.CoreSubscriber<? super java.lang.Long>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: return

  public void setCancel(reactor.core.Disposable);
    Code:
       0: getstatic     #3                  // Field CANCEL:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          18
      12: aload_1
      13: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      18: return

  public reactor.core.CoreSubscriber<? super java.lang.Long> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     26
       7: aload_0
       8: getfield      #7                  // Field cancel:Lreactor/core/Disposable;
      11: getstatic     #8                  // Field FINISHED:Lreactor/core/Disposable;
      14: if_acmpne     21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      25: areturn
      26: aload_1
      27: getstatic     #10                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      30: if_acmpne     52
      33: aload_0
      34: getfield      #7                  // Field cancel:Lreactor/core/Disposable;
      37: getstatic     #11                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
      40: if_acmpne     47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: invokestatic  #9                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      51: areturn
      52: aload_0
      53: aload_1
      54: invokespecial #12                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      57: areturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #13                 // Field requested:Z
       4: ifeq          74
       7: getstatic     #3                  // Field CANCEL:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      10: aload_0
      11: getstatic     #8                  // Field FINISHED:Lreactor/core/Disposable;
      14: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      17: getstatic     #11                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
      20: if_acmpeq     45
      23: aload_0
      24: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      27: lconst_0
      28: invokestatic  #15                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      31: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      36: aload_0
      37: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      40: invokeinterface #17,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      45: goto          88
      48: astore_1
      49: aload_0
      50: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      53: aload_1
      54: aload_0
      55: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      58: invokeinterface #19,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      63: invokestatic  #20                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      66: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      71: goto          88
      74: aload_0
      75: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      78: ldc           #22                 // String Could not emit value due to lack of requests
      80: invokestatic  #23                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      83: invokeinterface #21,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      88: return
    Exception table:
       from    to  target type
           7    45    48   Class java/lang/Throwable

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field cancel:Lreactor/core/Disposable;
       4: astore_1
       5: aload_1
       6: getstatic     #11                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
       9: if_acmpeq     57
      12: aload_1
      13: getstatic     #8                  // Field FINISHED:Lreactor/core/Disposable;
      16: if_acmpeq     57
      19: getstatic     #3                  // Field CANCEL:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      22: aload_0
      23: getstatic     #11                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
      26: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      29: checkcast     #24                 // class reactor/core/Disposable
      32: astore_1
      33: aload_1
      34: ifnull        57
      37: aload_1
      38: getstatic     #11                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
      41: if_acmpeq     57
      44: aload_1
      45: getstatic     #8                  // Field FINISHED:Lreactor/core/Disposable;
      48: if_acmpeq     57
      51: aload_1
      52: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      57: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #25                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          12
       7: aload_0
       8: iconst_1
       9: putfield      #13                 // Field requested:Z
      12: return

  static {};
    Code:
       0: ldc           #26                 // class reactor/core/publisher/MonoDelay$MonoDelayRunnable
       2: ldc           #24                 // class reactor/core/Disposable
       4: ldc           #27                 // String cancel
       6: invokestatic  #28                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #3                  // Field CANCEL:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: invokestatic  #29                 // Method reactor/core/Disposables.disposed:()Lreactor/core/Disposable;
      15: putstatic     #8                  // Field FINISHED:Lreactor/core/Disposable;
      18: return
}
