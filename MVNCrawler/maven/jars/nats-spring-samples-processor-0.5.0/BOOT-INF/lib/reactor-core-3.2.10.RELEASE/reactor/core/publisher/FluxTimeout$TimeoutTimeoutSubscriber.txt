Compiled from "FluxTimeout.java"
final class reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber implements org.reactivestreams.Subscriber<java.lang.Object>, reactor.core.publisher.FluxTimeout$IndexedCancellable {
  final reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber<?, ?> main;

  final long index;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber, org.reactivestreams.Subscription> S;

  reactor.core.publisher.FluxTimeout$TimeoutTimeoutSubscriber(reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber<?, ?>, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field main:Lreactor/core/publisher/FluxTimeout$TimeoutMainSubscriber;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field index:J
      14: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #4                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifne          34
      12: aload_1
      13: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      18: aload_0
      19: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      22: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      25: if_acmpeq     43
      28: invokestatic  #9                  // Method reactor/core/publisher/Operators.reportSubscriptionSet:()V
      31: goto          43
      34: aload_1
      35: ldc2_w        #11                 // long 9223372036854775807l
      38: invokeinterface #13,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      43: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: aload_0
      10: getfield      #2                  // Field main:Lreactor/core/publisher/FluxTimeout$TimeoutMainSubscriber;
      13: aload_0
      14: getfield      #3                  // Field index:J
      17: invokevirtual #14                 // Method reactor/core/publisher/FluxTimeout$TimeoutMainSubscriber.doTimeout:(J)V
      20: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxTimeout$TimeoutMainSubscriber;
       4: aload_0
       5: getfield      #3                  // Field index:J
       8: aload_1
       9: invokevirtual #15                 // Method reactor/core/publisher/FluxTimeout$TimeoutMainSubscriber.doError:(JLjava/lang/Throwable;)V
      12: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #2                  // Field main:Lreactor/core/publisher/FluxTimeout$TimeoutMainSubscriber;
       4: aload_0
       5: getfield      #3                  // Field index:J
       8: invokevirtual #14                 // Method reactor/core/publisher/FluxTimeout$TimeoutMainSubscriber.doTimeout:(J)V
      11: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
       4: astore_1
       5: aload_1
       6: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       9: if_acmpeq     43
      12: getstatic     #4                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      15: aload_0
      16: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      19: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #17                 // class org/reactivestreams/Subscription
      25: astore_1
      26: aload_1
      27: ifnull        43
      30: aload_1
      31: invokestatic  #8                  // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      34: if_acmpeq     43
      37: aload_1
      38: invokeinterface #6,  1            // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      43: return

  public long index();
    Code:
       0: aload_0
       1: getfield      #3                  // Field index:J
       4: lreturn

  static {};
    Code:
       0: ldc           #18                 // class reactor/core/publisher/FluxTimeout$TimeoutTimeoutSubscriber
       2: ldc           #17                 // class org/reactivestreams/Subscription
       4: ldc           #19                 // String s
       6: invokestatic  #20                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #4                  // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
