Compiled from "MonoCompletionStage.java"
final class reactor.core.publisher.MonoCompletionStage<T> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable, reactor.core.Scannable {
  static final reactor.util.Logger LOGGER;

  final java.util.concurrent.CompletionStage<? extends T> future;

  reactor.core.publisher.MonoCompletionStage(java.util.concurrent.CompletionStage<? extends T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String future
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/concurrent/CompletionStage
      14: putfield      #5                  // Field future:Ljava/util/concurrent/CompletionStage;
      17: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/Operators$MonoSubscriber
       3: dup
       4: aload_1
       5: invokespecial #7                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: aload_2
      17: invokevirtual #9                  // Method reactor/core/publisher/Operators$MonoSubscriber.isCancelled:()Z
      20: ifeq          24
      23: return
      24: aload_0
      25: getfield      #5                  // Field future:Ljava/util/concurrent/CompletionStage;
      28: aload_2
      29: aload_1
      30: invokedynamic #10,  0             // InvokeDynamic #0:accept:(Lreactor/core/publisher/Operators$MonoSubscriber;Lreactor/core/CoreSubscriber;)Ljava/util/function/BiConsumer;
      35: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/CompletionStage.whenComplete:(Ljava/util/function/BiConsumer;)Ljava/util/concurrent/CompletionStage;
      40: pop
      41: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aconst_null
       1: areturn

  private static void lambda$subscribe$0(reactor.core.publisher.Operators$MonoSubscriber, reactor.core.CoreSubscriber, java.lang.Object, java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method reactor/core/publisher/Operators$MonoSubscriber.isCancelled:()Z
       4: ifeq          46
       7: aload_0
       8: invokevirtual #12                 // Method reactor/core/publisher/Operators$MonoSubscriber.currentContext:()Lreactor/util/context/Context;
      11: astore        4
      13: aload_3
      14: ifnull        24
      17: aload_3
      18: instanceof    #13                 // class java/util/concurrent/CancellationException
      21: ifeq          33
      24: aload_2
      25: aload         4
      27: invokestatic  #14                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      30: goto          45
      33: aload_3
      34: aload         4
      36: invokestatic  #15                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      39: aload_2
      40: aload         4
      42: invokestatic  #14                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      45: return
      46: aload_3
      47: ifnull        60
      50: aload_1
      51: aload_3
      52: invokeinterface #16,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      57: goto          78
      60: aload_2
      61: ifnull        72
      64: aload_0
      65: aload_2
      66: invokevirtual #17                 // Method reactor/core/publisher/Operators$MonoSubscriber.complete:(Ljava/lang/Object;)V
      69: goto          78
      72: aload_1
      73: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      78: goto          100
      81: astore        4
      83: aload         4
      85: aload_1
      86: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      91: invokestatic  #15                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      94: aload         4
      96: invokestatic  #21                 // Method reactor/core/Exceptions.bubble:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
      99: athrow
     100: return
    Exception table:
       from    to  target type
          46    78    81   Class java/lang/Throwable

  static {};
    Code:
       0: ldc           #22                 // class reactor/core/publisher/MonoCompletionStage
       2: invokestatic  #23                 // Method reactor/util/Loggers.getLogger:(Ljava/lang/Class;)Lreactor/util/Logger;
       5: putstatic     #24                 // Field LOGGER:Lreactor/util/Logger;
       8: return
}
