Compiled from "MonoUsing.java"
final class reactor.core.publisher.MonoUsing<T, S> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable, reactor.core.publisher.SourceProducer<T> {
  final java.util.concurrent.Callable<S> resourceSupplier;

  final java.util.function.Function<? super S, ? extends reactor.core.publisher.Mono<? extends T>> sourceFactory;

  final java.util.function.Consumer<? super S> resourceCleanup;

  final boolean eager;

  reactor.core.publisher.MonoUsing(java.util.concurrent.Callable<S>, java.util.function.Function<? super S, ? extends reactor.core.publisher.Mono<? extends T>>, java.util.function.Consumer<? super S>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String resourceSupplier
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/concurrent/Callable
      14: putfield      #5                  // Field resourceSupplier:Ljava/util/concurrent/Callable;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String sourceFactory
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class java/util/function/Function
      27: putfield      #8                  // Field sourceFactory:Ljava/util/function/Function;
      30: aload_0
      31: aload_3
      32: ldc           #9                  // String resourceCleanup
      34: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      37: checkcast     #10                 // class java/util/function/Consumer
      40: putfield      #11                 // Field resourceCleanup:Ljava/util/function/Consumer;
      43: aload_0
      44: iload         4
      46: putfield      #12                 // Field eager:Z
      49: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field resourceSupplier:Ljava/util/concurrent/Callable;
       4: invokeinterface #13,  1           // InterfaceMethod java/util/concurrent/Callable.call:()Ljava/lang/Object;
       9: astore_2
      10: goto          29
      13: astore_3
      14: aload_1
      15: aload_3
      16: aload_1
      17: invokeinterface #15,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      22: invokestatic  #16                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      25: invokestatic  #17                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      28: return
      29: aload_0
      30: getfield      #8                  // Field sourceFactory:Ljava/util/function/Function;
      33: aload_2
      34: invokeinterface #18,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      39: ldc           #19                 // String The sourceFactory returned a null value
      41: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      44: checkcast     #20                 // class reactor/core/publisher/Mono
      47: astore_3
      48: goto          102
      51: astore        4
      53: aload_0
      54: getfield      #11                 // Field resourceCleanup:Ljava/util/function/Consumer;
      57: aload_2
      58: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      63: goto          86
      66: astore        5
      68: aload         5
      70: aload         4
      72: aload_1
      73: invokeinterface #15,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      78: invokestatic  #16                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      81: invokestatic  #22                 // Method reactor/core/Exceptions.addSuppressed:(Ljava/lang/Throwable;Ljava/lang/Throwable;)Ljava/lang/Throwable;
      84: astore        4
      86: aload_1
      87: aload         4
      89: aload_1
      90: invokeinterface #15,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      95: invokestatic  #16                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      98: invokestatic  #17                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
     101: return
     102: aload_3
     103: instanceof    #23                 // class reactor/core/Fuseable
     106: ifeq          133
     109: aload_3
     110: new           #24                 // class reactor/core/publisher/FluxUsing$UsingFuseableSubscriber
     113: dup
     114: aload_1
     115: aload_0
     116: getfield      #11                 // Field resourceCleanup:Ljava/util/function/Consumer;
     119: aload_2
     120: aload_0
     121: getfield      #12                 // Field eager:Z
     124: invokespecial #25                 // Method reactor/core/publisher/FluxUsing$UsingFuseableSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Ljava/lang/Object;Z)V
     127: invokevirtual #26                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     130: goto          188
     133: aload_1
     134: instanceof    #27                 // class reactor/core/Fuseable$ConditionalSubscriber
     137: ifeq          167
     140: aload_3
     141: new           #28                 // class reactor/core/publisher/FluxUsing$UsingConditionalSubscriber
     144: dup
     145: aload_1
     146: checkcast     #27                 // class reactor/core/Fuseable$ConditionalSubscriber
     149: aload_0
     150: getfield      #11                 // Field resourceCleanup:Ljava/util/function/Consumer;
     153: aload_2
     154: aload_0
     155: getfield      #12                 // Field eager:Z
     158: invokespecial #29                 // Method reactor/core/publisher/FluxUsing$UsingConditionalSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Ljava/util/function/Consumer;Ljava/lang/Object;Z)V
     161: invokevirtual #26                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     164: goto          188
     167: aload_3
     168: new           #30                 // class reactor/core/publisher/FluxUsing$UsingSubscriber
     171: dup
     172: aload_1
     173: aload_0
     174: getfield      #11                 // Field resourceCleanup:Ljava/util/function/Consumer;
     177: aload_2
     178: aload_0
     179: getfield      #12                 // Field eager:Z
     182: invokespecial #31                 // Method reactor/core/publisher/FluxUsing$UsingSubscriber."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Ljava/lang/Object;Z)V
     185: invokevirtual #26                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     188: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Throwable
          29    48    51   Class java/lang/Throwable
          53    63    66   Class java/lang/Throwable

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aconst_null
       1: areturn
}
