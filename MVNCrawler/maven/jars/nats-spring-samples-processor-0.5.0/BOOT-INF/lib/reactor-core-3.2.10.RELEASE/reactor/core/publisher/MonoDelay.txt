Compiled from "MonoDelay.java"
final class reactor.core.publisher.MonoDelay extends reactor.core.publisher.Mono<java.lang.Long> implements reactor.core.Scannable, reactor.core.publisher.SourceProducer<java.lang.Long> {
  final reactor.core.scheduler.Scheduler timedScheduler;

  final long delay;

  final java.util.concurrent.TimeUnit unit;

  reactor.core.publisher.MonoDelay(long, java.util.concurrent.TimeUnit, reactor.core.scheduler.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: lload_1
       6: putfield      #2                  // Field delay:J
       9: aload_0
      10: aload_3
      11: ldc           #3                  // String unit
      13: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #5                  // class java/util/concurrent/TimeUnit
      19: putfield      #6                  // Field unit:Ljava/util/concurrent/TimeUnit;
      22: aload_0
      23: aload         4
      25: ldc           #7                  // String timedScheduler
      27: invokestatic  #4                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      30: checkcast     #8                  // class reactor/core/scheduler/Scheduler
      33: putfield      #9                  // Field timedScheduler:Lreactor/core/scheduler/Scheduler;
      36: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Long>);
    Code:
       0: new           #10                 // class reactor/core/publisher/MonoDelay$MonoDelayRunnable
       3: dup
       4: aload_1
       5: invokespecial #11                 // Method reactor/core/publisher/MonoDelay$MonoDelayRunnable."<init>":(Lreactor/core/CoreSubscriber;)V
       8: astore_2
       9: aload_1
      10: aload_2
      11: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      16: aload_2
      17: aload_0
      18: getfield      #9                  // Field timedScheduler:Lreactor/core/scheduler/Scheduler;
      21: aload_2
      22: aload_0
      23: getfield      #2                  // Field delay:J
      26: aload_0
      27: getfield      #6                  // Field unit:Ljava/util/concurrent/TimeUnit;
      30: invokeinterface #13,  5           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      35: invokevirtual #14                 // Method reactor/core/publisher/MonoDelay$MonoDelayRunnable.setCancel:(Lreactor/core/Disposable;)V
      38: goto          71
      41: astore_3
      42: aload_2
      43: getfield      #16                 // Field reactor/core/publisher/MonoDelay$MonoDelayRunnable.cancel:Lreactor/core/Disposable;
      46: getstatic     #17                 // Field reactor/core/publisher/OperatorDisposables.DISPOSED:Lreactor/core/Disposable;
      49: if_acmpeq     71
      52: aload_1
      53: aload_3
      54: aload_2
      55: aconst_null
      56: aconst_null
      57: aload_1
      58: invokeinterface #18,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      63: invokestatic  #19                 // Method reactor/core/publisher/Operators.onRejectedExecution:(Ljava/lang/Throwable;Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      66: invokeinterface #20,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      71: return
    Exception table:
       from    to  target type
          16    38    41   Class java/util/concurrent/RejectedExecutionException

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #21                 // Field reactor/core/Scannable$Attr.RUN_ON:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #9                  // Field timedScheduler:Lreactor/core/scheduler/Scheduler;
      11: areturn
      12: aconst_null
      13: areturn
}
