Compiled from "Loggers.java"
public abstract class reactor.util.Loggers {
  public static final java.lang.String FALLBACK_PROPERTY;

  private static reactor.util.Loggers$LoggerFactory LOGGER_FACTORY;

  public static final void resetLoggerFactory();
    Code:
       0: invokestatic  #1                  // Method useSl4jLoggers:()V
       3: goto          22
       6: astore_0
       7: invokestatic  #3                  // Method isFallbackToJdk:()Z
      10: ifeq          19
      13: invokestatic  #4                  // Method useJdkLoggers:()V
      16: goto          22
      19: invokestatic  #5                  // Method useConsoleLoggers:()V
      22: return
    Exception table:
       from    to  target type
           0     3     6   Class java/lang/Throwable

  static final boolean isFallbackToJdk();
    Code:
       0: ldc           #6                  // String JDK
       2: ldc           #8                  // String reactor.logging.fallback
       4: invokestatic  #9                  // Method java/lang/System.getProperty:(Ljava/lang/String;)Ljava/lang/String;
       7: invokevirtual #10                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      10: ireturn

  public static final void useConsoleLoggers();
    Code:
       0: ldc           #11                 // class reactor/util/Loggers$LoggerFactory
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: astore_0
       6: new           #13                 // class reactor/util/Loggers$ConsoleLoggerFactory
       9: dup
      10: iconst_0
      11: aconst_null
      12: invokespecial #14                 // Method reactor/util/Loggers$ConsoleLoggerFactory."<init>":(ZLreactor/util/Loggers$1;)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
      23: ldc           #16                 // String Using Console logging
      25: invokeinterface #17,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      30: aload_1
      31: putstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
      34: return

  public static final void useVerboseConsoleLoggers();
    Code:
       0: ldc           #11                 // class reactor/util/Loggers$LoggerFactory
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: astore_0
       6: new           #13                 // class reactor/util/Loggers$ConsoleLoggerFactory
       9: dup
      10: iconst_1
      11: aconst_null
      12: invokespecial #14                 // Method reactor/util/Loggers$ConsoleLoggerFactory."<init>":(ZLreactor/util/Loggers$1;)V
      15: astore_1
      16: aload_1
      17: aload_0
      18: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
      23: ldc           #19                 // String Using Verbose Console logging
      25: invokeinterface #17,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      30: aload_1
      31: putstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
      34: return

  public static final void useCustomLoggers(java.util.function.Function<java.lang.String, ? extends reactor.util.Logger>);
    Code:
       0: ldc           #11                 // class reactor/util/Loggers$LoggerFactory
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: astore_1
       6: aload_0
       7: aload_1
       8: invokeinterface #20,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      13: checkcast     #21                 // class reactor/util/Logger
      16: ldc           #22                 // String Using custom logging
      18: invokeinterface #17,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      23: aload_0
      24: dup
      25: invokevirtual #23                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      28: pop
      29: invokedynamic #24,  0             // InvokeDynamic #0:getLogger:(Ljava/util/function/Function;)Lreactor/util/Loggers$LoggerFactory;
      34: putstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
      37: return

  public static final void useJdkLoggers();
    Code:
       0: ldc           #11                 // class reactor/util/Loggers$LoggerFactory
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: astore_0
       6: new           #25                 // class reactor/util/Loggers$JdkLoggerFactory
       9: dup
      10: aconst_null
      11: invokespecial #26                 // Method reactor/util/Loggers$JdkLoggerFactory."<init>":(Lreactor/util/Loggers$1;)V
      14: astore_1
      15: aload_1
      16: aload_0
      17: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
      22: ldc           #27                 // String Using JDK logging framework
      24: invokeinterface #17,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      29: aload_1
      30: putstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
      33: return

  public static final void useSl4jLoggers();
    Code:
       0: ldc           #11                 // class reactor/util/Loggers$LoggerFactory
       2: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       5: astore_0
       6: new           #28                 // class reactor/util/Loggers$Slf4JLoggerFactory
       9: dup
      10: aconst_null
      11: invokespecial #29                 // Method reactor/util/Loggers$Slf4JLoggerFactory."<init>":(Lreactor/util/Loggers$1;)V
      14: astore_1
      15: aload_1
      16: aload_0
      17: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
      22: ldc           #30                 // String Using Slf4j logging framework
      24: invokeinterface #17,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      29: aload_1
      30: putstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
      33: return

  public static reactor.util.Logger getLogger(java.lang.String);
    Code:
       0: getstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
       3: aload_0
       4: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
       9: areturn

  public static reactor.util.Logger getLogger(java.lang.Class<?>);
    Code:
       0: getstatic     #18                 // Field LOGGER_FACTORY:Lreactor/util/Loggers$LoggerFactory;
       3: aload_0
       4: invokevirtual #12                 // Method java/lang/Class.getName:()Ljava/lang/String;
       7: invokeinterface #15,  2           // InterfaceMethod reactor/util/Loggers$LoggerFactory.getLogger:(Ljava/lang/String;)Lreactor/util/Logger;
      12: areturn

  reactor.util.Loggers();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method java/lang/Object."<init>":()V
       4: return

  static {};
    Code:
       0: invokestatic  #32                 // Method resetLoggerFactory:()V
       3: return
}
