Compiled from "FluxSwitchIfEmpty.java"
final class reactor.core.publisher.FluxSwitchIfEmpty<T> extends reactor.core.publisher.FluxOperator<T, T> {
  final org.reactivestreams.Publisher<? extends T> other;

  reactor.core.publisher.FluxSwitchIfEmpty(reactor.core.publisher.Flux<? extends T>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String other
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class org/reactivestreams/Publisher
      15: putfield      #5                  // Field other:Lorg/reactivestreams/Publisher;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #6                  // class reactor/core/publisher/FluxSwitchIfEmpty$SwitchIfEmptySubscriber
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field other:Lorg/reactivestreams/Publisher;
       9: invokespecial #7                  // Method reactor/core/publisher/FluxSwitchIfEmpty$SwitchIfEmptySubscriber."<init>":(Lreactor/core/CoreSubscriber;Lorg/reactivestreams/Publisher;)V
      12: astore_2
      13: aload_1
      14: aload_2
      15: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      20: aload_0
      21: getfield      #9                  // Field source:Lreactor/core/publisher/Flux;
      24: aload_2
      25: invokevirtual #10                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      28: return
}
