Compiled from "Operators.java"
final class reactor.core.publisher.Operators$LiftFunction<I, O> implements java.util.function.Function<org.reactivestreams.Publisher<I>, org.reactivestreams.Publisher<O>> {
  final java.util.function.Predicate<org.reactivestreams.Publisher> filter;

  final java.util.function.BiFunction<org.reactivestreams.Publisher, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>> lifter;

  static final <I, O> reactor.core.publisher.Operators$LiftFunction<I, O> liftScannable(java.util.function.Predicate<reactor.core.Scannable>, java.util.function.BiFunction<reactor.core.Scannable, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>>);
    Code:
       0: aload_1
       1: ldc           #1                  // String lifter
       3: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aconst_null
       8: astore_2
       9: aload_0
      10: ifnull        20
      13: aload_0
      14: invokedynamic #3,  0              // InvokeDynamic #0:test:(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;
      19: astore_2
      20: aload_1
      21: invokedynamic #4,  0              // InvokeDynamic #1:apply:(Ljava/util/function/BiFunction;)Ljava/util/function/BiFunction;
      26: astore_3
      27: new           #5                  // class reactor/core/publisher/Operators$LiftFunction
      30: dup
      31: aload_2
      32: aload_3
      33: invokespecial #6                  // Method "<init>":(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)V
      36: areturn

  static final <I, O> reactor.core.publisher.Operators$LiftFunction<I, O> liftPublisher(java.util.function.Predicate<org.reactivestreams.Publisher>, java.util.function.BiFunction<org.reactivestreams.Publisher, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>>);
    Code:
       0: new           #5                  // class reactor/core/publisher/Operators$LiftFunction
       3: dup
       4: aload_0
       5: aload_1
       6: ldc           #1                  // String lifter
       8: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class java/util/function/BiFunction
      14: invokespecial #6                  // Method "<init>":(Ljava/util/function/Predicate;Ljava/util/function/BiFunction;)V
      17: areturn

  private reactor.core.publisher.Operators$LiftFunction(java.util.function.Predicate<org.reactivestreams.Publisher>, java.util.function.BiFunction<org.reactivestreams.Publisher, ? super reactor.core.CoreSubscriber<? super O>, ? extends reactor.core.CoreSubscriber<? super I>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field filter:Ljava/util/function/Predicate;
       9: aload_0
      10: aload_2
      11: ldc           #1                  // String lifter
      13: invokestatic  #2                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      16: checkcast     #7                  // class java/util/function/BiFunction
      19: putfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
      22: return

  public org.reactivestreams.Publisher<O> apply(org.reactivestreams.Publisher<I>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field filter:Ljava/util/function/Predicate;
       4: ifnull        22
       7: aload_0
       8: getfield      #9                  // Field filter:Ljava/util/function/Predicate;
      11: aload_1
      12: invokeinterface #11,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      17: ifne          22
      20: aload_1
      21: areturn
      22: aload_1
      23: instanceof    #12                 // class reactor/core/Fuseable
      26: ifeq          131
      29: aload_1
      30: instanceof    #13                 // class reactor/core/publisher/Mono
      33: ifeq          49
      36: new           #14                 // class reactor/core/publisher/MonoLiftFuseable
      39: dup
      40: aload_1
      41: aload_0
      42: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
      45: invokespecial #15                 // Method reactor/core/publisher/MonoLiftFuseable."<init>":(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)V
      48: areturn
      49: aload_1
      50: instanceof    #16                 // class reactor/core/publisher/ParallelFlux
      53: ifeq          72
      56: new           #17                 // class reactor/core/publisher/ParallelLiftFuseable
      59: dup
      60: aload_1
      61: checkcast     #16                 // class reactor/core/publisher/ParallelFlux
      64: aload_0
      65: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
      68: invokespecial #18                 // Method reactor/core/publisher/ParallelLiftFuseable."<init>":(Lreactor/core/publisher/ParallelFlux;Ljava/util/function/BiFunction;)V
      71: areturn
      72: aload_1
      73: instanceof    #19                 // class reactor/core/publisher/ConnectableFlux
      76: ifeq          95
      79: new           #20                 // class reactor/core/publisher/ConnectableLiftFuseable
      82: dup
      83: aload_1
      84: checkcast     #19                 // class reactor/core/publisher/ConnectableFlux
      87: aload_0
      88: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
      91: invokespecial #21                 // Method reactor/core/publisher/ConnectableLiftFuseable."<init>":(Lreactor/core/publisher/ConnectableFlux;Ljava/util/function/BiFunction;)V
      94: areturn
      95: aload_1
      96: instanceof    #22                 // class reactor/core/publisher/GroupedFlux
      99: ifeq          118
     102: new           #23                 // class reactor/core/publisher/GroupedLiftFuseable
     105: dup
     106: aload_1
     107: checkcast     #22                 // class reactor/core/publisher/GroupedFlux
     110: aload_0
     111: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     114: invokespecial #24                 // Method reactor/core/publisher/GroupedLiftFuseable."<init>":(Lreactor/core/publisher/GroupedFlux;Ljava/util/function/BiFunction;)V
     117: areturn
     118: new           #25                 // class reactor/core/publisher/FluxLiftFuseable
     121: dup
     122: aload_1
     123: aload_0
     124: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     127: invokespecial #26                 // Method reactor/core/publisher/FluxLiftFuseable."<init>":(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)V
     130: areturn
     131: aload_1
     132: instanceof    #13                 // class reactor/core/publisher/Mono
     135: ifeq          151
     138: new           #27                 // class reactor/core/publisher/MonoLift
     141: dup
     142: aload_1
     143: aload_0
     144: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     147: invokespecial #28                 // Method reactor/core/publisher/MonoLift."<init>":(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)V
     150: areturn
     151: aload_1
     152: instanceof    #16                 // class reactor/core/publisher/ParallelFlux
     155: ifeq          174
     158: new           #29                 // class reactor/core/publisher/ParallelLift
     161: dup
     162: aload_1
     163: checkcast     #16                 // class reactor/core/publisher/ParallelFlux
     166: aload_0
     167: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     170: invokespecial #30                 // Method reactor/core/publisher/ParallelLift."<init>":(Lreactor/core/publisher/ParallelFlux;Ljava/util/function/BiFunction;)V
     173: areturn
     174: aload_1
     175: instanceof    #19                 // class reactor/core/publisher/ConnectableFlux
     178: ifeq          197
     181: new           #31                 // class reactor/core/publisher/ConnectableLift
     184: dup
     185: aload_1
     186: checkcast     #19                 // class reactor/core/publisher/ConnectableFlux
     189: aload_0
     190: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     193: invokespecial #32                 // Method reactor/core/publisher/ConnectableLift."<init>":(Lreactor/core/publisher/ConnectableFlux;Ljava/util/function/BiFunction;)V
     196: areturn
     197: aload_1
     198: instanceof    #22                 // class reactor/core/publisher/GroupedFlux
     201: ifeq          220
     204: new           #33                 // class reactor/core/publisher/GroupedLift
     207: dup
     208: aload_1
     209: checkcast     #22                 // class reactor/core/publisher/GroupedFlux
     212: aload_0
     213: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     216: invokespecial #34                 // Method reactor/core/publisher/GroupedLift."<init>":(Lreactor/core/publisher/GroupedFlux;Ljava/util/function/BiFunction;)V
     219: areturn
     220: new           #35                 // class reactor/core/publisher/FluxLift
     223: dup
     224: aload_1
     225: aload_0
     226: getfield      #10                 // Field lifter:Ljava/util/function/BiFunction;
     229: invokespecial #36                 // Method reactor/core/publisher/FluxLift."<init>":(Lorg/reactivestreams/Publisher;Ljava/util/function/BiFunction;)V
     232: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #37                 // class org/reactivestreams/Publisher
       5: invokevirtual #38                 // Method apply:(Lorg/reactivestreams/Publisher;)Lorg/reactivestreams/Publisher;
       8: areturn

  private static reactor.core.CoreSubscriber lambda$liftScannable$1(java.util.function.BiFunction, org.reactivestreams.Publisher, reactor.core.CoreSubscriber);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       5: aload_2
       6: invokeinterface #40,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #41                 // class reactor/core/CoreSubscriber
      14: areturn

  private static boolean lambda$liftScannable$0(java.util.function.Predicate, org.reactivestreams.Publisher);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #39                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       5: invokeinterface #11,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      10: ireturn
}
