Compiled from "OperatorDisposables.java"
final class reactor.core.publisher.OperatorDisposables {
  static final reactor.core.Disposable DISPOSED;

  reactor.core.publisher.OperatorDisposables();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static <T> boolean set(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, reactor.core.Disposable>, T, reactor.core.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #3                  // class reactor/core/Disposable
       8: astore_3
       9: aload_3
      10: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
      13: if_acmpne     28
      16: aload_2
      17: ifnull        26
      20: aload_2
      21: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      26: iconst_0
      27: ireturn
      28: aload_0
      29: aload_1
      30: aload_3
      31: aload_2
      32: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ifeq          50
      38: aload_3
      39: ifnull        48
      42: aload_3
      43: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      48: iconst_1
      49: ireturn
      50: goto          0

  public static <T> boolean setOnce(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, reactor.core.Disposable>, T, reactor.core.Disposable, java.util.function.Consumer<java.lang.RuntimeException>);
    Code:
       0: aload_2
       1: ldc           #7                  // String newValue is null
       3: invokestatic  #8                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: aload_1
       9: aconst_null
      10: aload_2
      11: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      14: ifne          51
      17: aload_2
      18: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      23: aload_0
      24: aload_1
      25: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      28: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
      31: if_acmpeq     49
      34: aload_3
      35: new           #9                  // class java/lang/IllegalStateException
      38: dup
      39: ldc           #10                 // String Disposable already pushed
      41: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      44: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      49: iconst_0
      50: ireturn
      51: iconst_1
      52: ireturn

  public static <T> boolean replace(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, reactor.core.Disposable>, T, reactor.core.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #3                  // class reactor/core/Disposable
       8: astore_3
       9: aload_3
      10: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
      13: if_acmpne     28
      16: aload_2
      17: ifnull        26
      20: aload_2
      21: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      26: iconst_0
      27: ireturn
      28: aload_0
      29: aload_1
      30: aload_3
      31: aload_2
      32: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      35: ifeq          40
      38: iconst_1
      39: ireturn
      40: goto          0

  public static <T> boolean dispose(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, reactor.core.Disposable>, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #3                  // class reactor/core/Disposable
       8: astore_2
       9: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
      12: astore_3
      13: aload_2
      14: aload_3
      15: if_acmpeq     45
      18: aload_0
      19: aload_1
      20: aload_3
      21: invokevirtual #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      24: checkcast     #3                  // class reactor/core/Disposable
      27: astore_2
      28: aload_2
      29: aload_3
      30: if_acmpeq     45
      33: aload_2
      34: ifnull        43
      37: aload_2
      38: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      43: iconst_1
      44: ireturn
      45: iconst_0
      46: ireturn

  public static boolean validate(reactor.core.Disposable, reactor.core.Disposable, java.util.function.Consumer<java.lang.RuntimeException>);
    Code:
       0: aload_1
       1: ifnonnull     21
       4: aload_2
       5: new           #14                 // class java/lang/NullPointerException
       8: dup
       9: ldc           #15                 // String next is null
      11: invokespecial #16                 // Method java/lang/NullPointerException."<init>":(Ljava/lang/String;)V
      14: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      19: iconst_0
      20: ireturn
      21: aload_0
      22: ifnull        48
      25: aload_1
      26: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      31: aload_2
      32: new           #9                  // class java/lang/IllegalStateException
      35: dup
      36: ldc           #10                 // String Disposable already pushed
      38: invokespecial #11                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      41: invokeinterface #12,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      46: iconst_0
      47: ireturn
      48: iconst_1
      49: ireturn

  public static <T> boolean trySet(java.util.concurrent.atomic.AtomicReferenceFieldUpdater<T, reactor.core.Disposable>, T, reactor.core.Disposable);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: invokevirtual #6                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       7: ifne          29
      10: aload_0
      11: aload_1
      12: invokevirtual #2                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
      15: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
      18: if_acmpne     27
      21: aload_2
      22: invokeinterface #5,  1            // InterfaceMethod reactor/core/Disposable.dispose:()V
      27: iconst_0
      28: ireturn
      29: iconst_1
      30: ireturn

  public static boolean isDisposed(reactor.core.Disposable);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
       4: if_acmpne     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static {};
    Code:
       0: invokestatic  #17                 // Method reactor/core/Disposables.disposed:()Lreactor/core/Disposable;
       3: putstatic     #4                  // Field DISPOSED:Lreactor/core/Disposable;
       6: return
}
