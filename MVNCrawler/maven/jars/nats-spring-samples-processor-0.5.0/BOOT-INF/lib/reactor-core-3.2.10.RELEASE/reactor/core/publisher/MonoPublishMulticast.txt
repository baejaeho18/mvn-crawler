Compiled from "MonoPublishMulticast.java"
final class reactor.core.publisher.MonoPublishMulticast<T, R> extends reactor.core.publisher.MonoOperator<T, R> implements reactor.core.Fuseable {
  final java.util.function.Function<? super reactor.core.publisher.Mono<T>, ? extends reactor.core.publisher.Mono<? extends R>> transform;

  reactor.core.publisher.MonoPublishMulticast(reactor.core.publisher.Mono<? extends T>, java.util.function.Function<? super reactor.core.publisher.Mono<T>, ? extends reactor.core.publisher.Mono<? extends R>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: ldc           #2                  // String transform
       9: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      12: checkcast     #4                  // class java/util/function/Function
      15: putfield      #5                  // Field transform:Ljava/util/function/Function;
      18: return

  public void subscribe(reactor.core.CoreSubscriber<? super R>);
    Code:
       0: new           #6                  // class reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster
       3: dup
       4: aload_1
       5: invokeinterface #7,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      10: invokespecial #8                  // Method reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster."<init>":(Lreactor/util/context/Context;)V
      13: astore_2
      14: aload_0
      15: getfield      #5                  // Field transform:Ljava/util/function/Function;
      18: aload_2
      19: invokestatic  #9                  // Method fromDirect:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Mono;
      22: invokeinterface #10,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      27: ldc           #11                 // String The transform returned a null Mono
      29: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #12                 // class reactor/core/publisher/Mono
      35: astore_3
      36: goto          57
      39: astore        4
      41: aload_1
      42: aload         4
      44: aload_1
      45: invokeinterface #7,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      50: invokestatic  #14                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      53: invokestatic  #15                 // Method reactor/core/publisher/Operators.error:(Lorg/reactivestreams/Subscriber;Ljava/lang/Throwable;)V
      56: return
      57: aload_3
      58: instanceof    #16                 // class reactor/core/Fuseable
      61: ifeq          80
      64: aload_3
      65: new           #17                 // class reactor/core/publisher/FluxPublishMulticast$CancelFuseableMulticaster
      68: dup
      69: aload_1
      70: aload_2
      71: invokespecial #18                 // Method reactor/core/publisher/FluxPublishMulticast$CancelFuseableMulticaster."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/FluxPublishMulticast$PublishMulticasterParent;)V
      74: invokevirtual #19                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      77: goto          93
      80: aload_3
      81: new           #20                 // class reactor/core/publisher/FluxPublishMulticast$CancelMulticaster
      84: dup
      85: aload_1
      86: aload_2
      87: invokespecial #21                 // Method reactor/core/publisher/FluxPublishMulticast$CancelMulticaster."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/FluxPublishMulticast$PublishMulticasterParent;)V
      90: invokevirtual #19                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      93: aload_0
      94: getfield      #22                 // Field source:Lreactor/core/publisher/Mono;
      97: aload_2
      98: invokevirtual #19                 // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
     101: return
    Exception table:
       from    to  target type
          14    36    39   Class java/lang/Throwable
}
