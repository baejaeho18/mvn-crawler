Compiled from "FluxGroupBy.java"
final class reactor.core.publisher.FluxGroupBy<T, K, V> extends reactor.core.publisher.FluxOperator<T, reactor.core.publisher.GroupedFlux<K, V>> implements reactor.core.Fuseable {
  final java.util.function.Function<? super T, ? extends K> keySelector;

  final java.util.function.Function<? super T, ? extends V> valueSelector;

  final java.util.function.Supplier<? extends java.util.Queue<V>> groupQueueSupplier;

  final java.util.function.Supplier<? extends java.util.Queue<reactor.core.publisher.GroupedFlux<K, V>>> mainQueueSupplier;

  final int prefetch;

  reactor.core.publisher.FluxGroupBy(reactor.core.publisher.Flux<? extends T>, java.util.function.Function<? super T, ? extends K>, java.util.function.Function<? super T, ? extends V>, java.util.function.Supplier<? extends java.util.Queue<reactor.core.publisher.GroupedFlux<K, V>>>, java.util.function.Supplier<? extends java.util.Queue<V>>, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: iload         6
       7: ifgt          38
      10: new           #2                  // class java/lang/IllegalArgumentException
      13: dup
      14: new           #3                  // class java/lang/StringBuilder
      17: dup
      18: invokespecial #4                  // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #5                  // String prefetch > 0 required but it was
      23: invokevirtual #6                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: iload         6
      28: invokevirtual #7                  // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      31: invokevirtual #8                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      34: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      37: athrow
      38: aload_0
      39: aload_2
      40: ldc           #10                 // String keySelector
      42: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      45: checkcast     #12                 // class java/util/function/Function
      48: putfield      #13                 // Field keySelector:Ljava/util/function/Function;
      51: aload_0
      52: aload_3
      53: ldc           #14                 // String valueSelector
      55: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      58: checkcast     #12                 // class java/util/function/Function
      61: putfield      #15                 // Field valueSelector:Ljava/util/function/Function;
      64: aload_0
      65: aload         4
      67: ldc           #16                 // String mainQueueSupplier
      69: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      72: checkcast     #17                 // class java/util/function/Supplier
      75: putfield      #18                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      78: aload_0
      79: aload         5
      81: ldc           #19                 // String groupQueueSupplier
      83: invokestatic  #11                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      86: checkcast     #17                 // class java/util/function/Supplier
      89: putfield      #20                 // Field groupQueueSupplier:Ljava/util/function/Supplier;
      92: aload_0
      93: iload         6
      95: putfield      #21                 // Field prefetch:I
      98: return

  public void subscribe(reactor.core.CoreSubscriber<? super reactor.core.publisher.GroupedFlux<K, V>>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field source:Lreactor/core/publisher/Flux;
       4: new           #23                 // class reactor/core/publisher/FluxGroupBy$GroupByMain
       7: dup
       8: aload_1
       9: aload_0
      10: getfield      #18                 // Field mainQueueSupplier:Ljava/util/function/Supplier;
      13: invokeinterface #24,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      18: checkcast     #25                 // class java/util/Queue
      21: aload_0
      22: getfield      #20                 // Field groupQueueSupplier:Ljava/util/function/Supplier;
      25: aload_0
      26: getfield      #21                 // Field prefetch:I
      29: aload_0
      30: getfield      #13                 // Field keySelector:Ljava/util/function/Function;
      33: aload_0
      34: getfield      #15                 // Field valueSelector:Ljava/util/function/Function;
      37: invokespecial #26                 // Method reactor/core/publisher/FluxGroupBy$GroupByMain."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/Queue;Ljava/util/function/Supplier;ILjava/util/function/Function;Ljava/util/function/Function;)V
      40: invokevirtual #27                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      43: return

  public int getPrefetch();
    Code:
       0: aload_0
       1: getfield      #21                 // Field prefetch:I
       4: ireturn
}
