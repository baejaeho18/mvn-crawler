Compiled from "WaitStrategy.java"
final class reactor.util.concurrent.WaitStrategy$Yielding extends reactor.util.concurrent.WaitStrategy {
  static final reactor.util.concurrent.WaitStrategy$Yielding INSTANCE;

  private static final int SPIN_TRIES;

  reactor.util.concurrent.WaitStrategy$Yielding();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/util/concurrent/WaitStrategy."<init>":()V
       4: return

  public long waitFor(long, java.util.function.LongSupplier, java.lang.Runnable) throws java.lang.InterruptedException;
    Code:
       0: bipush        100
       2: istore        7
       4: aload_3
       5: invokeinterface #3,  1            // InterfaceMethod java/util/function/LongSupplier.getAsLong:()J
      10: dup2
      11: lstore        5
      13: lload_1
      14: lcmp
      15: ifge          31
      18: aload_0
      19: aload         4
      21: iload         7
      23: invokespecial #4                  // Method applyWaitMethod:(Ljava/lang/Runnable;I)I
      26: istore        7
      28: goto          4
      31: lload         5
      33: lreturn

  private int applyWaitMethod(java.lang.Runnable, int) throws reactor.util.concurrent.WaitStrategy$AlertException;
    Code:
       0: aload_1
       1: invokeinterface #5,  1            // InterfaceMethod java/lang/Runnable.run:()V
       6: iconst_0
       7: iload_2
       8: if_icmpne     17
      11: invokestatic  #6                  // Method java/lang/Thread.yield:()V
      14: goto          20
      17: iinc          2, -1
      20: iload_2
      21: ireturn

  static {};
    Code:
       0: new           #2                  // class reactor/util/concurrent/WaitStrategy$Yielding
       3: dup
       4: invokespecial #7                  // Method "<init>":()V
       7: putstatic     #8                  // Field INSTANCE:Lreactor/util/concurrent/WaitStrategy$Yielding;
      10: return
}
