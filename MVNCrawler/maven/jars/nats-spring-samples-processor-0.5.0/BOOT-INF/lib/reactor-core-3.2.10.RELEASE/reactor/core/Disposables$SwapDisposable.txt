Compiled from "Disposables.java"
final class reactor.core.Disposables$SwapDisposable implements reactor.core.Disposable$Swap {
  volatile reactor.core.Disposable inner;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.Disposables$SwapDisposable, reactor.core.Disposable> INNER;

  reactor.core.Disposables$SwapDisposable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public boolean update(reactor.core.Disposable);
    Code:
       0: getstatic     #2                  // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #3                  // Method reactor/core/Disposables.set:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lreactor/core/Disposable;)Z
       8: ireturn

  public boolean replace(reactor.core.Disposable);
    Code:
       0: getstatic     #2                  // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #4                  // Method reactor/core/Disposables.replace:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lreactor/core/Disposable;)Z
       8: ireturn

  public reactor.core.Disposable get();
    Code:
       0: aload_0
       1: getfield      #5                  // Field inner:Lreactor/core/Disposable;
       4: areturn

  public void dispose();
    Code:
       0: getstatic     #2                  // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #6                  // Method reactor/core/Disposables.dispose:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: return

  public boolean isDisposed();
    Code:
       0: getstatic     #2                  // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: checkcast     #8                  // class reactor/core/Disposable
      10: invokestatic  #9                  // Method reactor/core/Disposables.isDisposed:(Lreactor/core/Disposable;)Z
      13: ireturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method get:()Lreactor/core/Disposable;
       4: areturn

  static {};
    Code:
       0: ldc           #11                 // class reactor/core/Disposables$SwapDisposable
       2: ldc           #8                  // class reactor/core/Disposable
       4: ldc           #12                 // String inner
       6: invokestatic  #13                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #2                  // Field INNER:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: return
}
