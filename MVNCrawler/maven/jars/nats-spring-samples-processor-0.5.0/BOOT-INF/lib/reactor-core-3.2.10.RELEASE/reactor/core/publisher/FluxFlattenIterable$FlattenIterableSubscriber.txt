Compiled from "FluxFlattenIterable.java"
final class reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber<T, R> implements reactor.core.publisher.InnerOperator<T, R>, reactor.core.Fuseable$QueueSubscription<R> {
  final reactor.core.CoreSubscriber<? super R> actual;

  final java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>> mapper;

  final int prefetch;

  final int limit;

  final java.util.function.Supplier<java.util.Queue<T>> queueSupplier;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber> REQUESTED;

  org.reactivestreams.Subscription s;

  java.util.Queue<T> queue;

  volatile boolean done;

  volatile boolean cancelled;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber, java.lang.Throwable> ERROR;

  java.util.Iterator<? extends R> current;

  int consumed;

  int fusionMode;

  reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super T, ? extends java.lang.Iterable<? extends R>>, int, java.util.function.Supplier<java.util.Queue<T>>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field mapper:Ljava/util/function/Function;
      14: aload_0
      15: iload_3
      16: putfield      #5                  // Field prefetch:I
      19: aload_0
      20: aload         4
      22: putfield      #6                  // Field queueSupplier:Ljava/util/function/Supplier;
      25: aload_0
      26: iload_3
      27: invokestatic  #7                  // Method reactor/core/publisher/Operators.unboundedOrLimit:(I)I
      30: putfield      #8                  // Field limit:I
      33: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #9                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #11                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #12                 // Field done:Z
      23: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_1
      28: getstatic     #14                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      31: if_acmpne     39
      34: aload_0
      35: getfield      #15                 // Field error:Ljava/lang/Throwable;
      38: areturn
      39: aload_1
      40: getstatic     #16                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      43: if_acmpne     54
      46: aload_0
      47: getfield      #17                 // Field requested:J
      50: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      53: areturn
      54: aload_1
      55: getstatic     #19                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      58: if_acmpne     69
      61: aload_0
      62: getfield      #20                 // Field cancelled:Z
      65: invokestatic  #13                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      68: areturn
      69: aload_1
      70: getstatic     #21                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      73: if_acmpne     84
      76: aload_0
      77: getfield      #5                  // Field prefetch:I
      80: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      83: areturn
      84: aload_1
      85: getstatic     #23                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      88: if_acmpne     115
      91: aload_0
      92: getfield      #24                 // Field queue:Ljava/util/Queue;
      95: ifnull        110
      98: aload_0
      99: getfield      #24                 // Field queue:Ljava/util/Queue;
     102: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.size:()I
     107: goto          111
     110: iconst_0
     111: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     114: areturn
     115: aload_0
     116: aload_1
     117: invokespecial #26                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     120: areturn

  public reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #27                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          145
      11: aload_0
      12: aload_1
      13: putfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      16: aload_1
      17: instanceof    #28                 // class reactor/core/Fuseable$QueueSubscription
      20: ifeq          106
      23: aload_1
      24: checkcast     #28                 // class reactor/core/Fuseable$QueueSubscription
      27: astore_2
      28: aload_2
      29: iconst_3
      30: invokeinterface #29,  2           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      35: istore_3
      36: iload_3
      37: iconst_1
      38: if_icmpne     67
      41: aload_0
      42: iload_3
      43: putfield      #30                 // Field fusionMode:I
      46: aload_0
      47: aload_2
      48: putfield      #24                 // Field queue:Ljava/util/Queue;
      51: aload_0
      52: iconst_1
      53: putfield      #12                 // Field done:Z
      56: aload_0
      57: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      60: aload_0
      61: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      66: return
      67: iload_3
      68: iconst_2
      69: if_icmpne     106
      72: aload_0
      73: iload_3
      74: putfield      #30                 // Field fusionMode:I
      77: aload_0
      78: aload_2
      79: putfield      #24                 // Field queue:Ljava/util/Queue;
      82: aload_0
      83: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      86: aload_0
      87: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      92: aload_1
      93: aload_0
      94: getfield      #5                  // Field prefetch:I
      97: invokestatic  #32                 // Method reactor/core/publisher/Operators.unboundedOrPrefetch:(I)J
     100: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     105: return
     106: aload_0
     107: aload_0
     108: getfield      #6                  // Field queueSupplier:Ljava/util/function/Supplier;
     111: invokeinterface #34,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     116: checkcast     #35                 // class java/util/Queue
     119: putfield      #24                 // Field queue:Ljava/util/Queue;
     122: aload_0
     123: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     126: aload_0
     127: invokeinterface #31,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
     132: aload_1
     133: aload_0
     134: getfield      #5                  // Field prefetch:I
     137: invokestatic  #32                 // Method reactor/core/publisher/Operators.unboundedOrPrefetch:(I)J
     140: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     145: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #30                 // Field fusionMode:I
       4: iconst_2
       5: if_icmpeq     54
       8: aload_0
       9: getfield      #24                 // Field queue:Ljava/util/Queue;
      12: aload_1
      13: invokeinterface #36,  2           // InterfaceMethod java/util/Queue.offer:(Ljava/lang/Object;)Z
      18: ifne          54
      21: aload_0
      22: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      25: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      30: astore_2
      31: aload_0
      32: aload_0
      33: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      36: ldc           #39                 // String Queue is full: Reactive Streams source doesn\'t respect backpressure
      38: invokestatic  #40                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
      41: aload_2
      42: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      45: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
      48: aload_1
      49: aload_2
      50: invokestatic  #43                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      53: return
      54: aload_0
      55: invokevirtual #44                 // Method drain:()V
      58: return

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #45                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #46                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          23
      11: aload_0
      12: iconst_1
      13: putfield      #12                 // Field done:Z
      16: aload_0
      17: invokevirtual #44                 // Method drain:()V
      20: goto          36
      23: aload_1
      24: aload_0
      25: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      28: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      33: invokestatic  #47                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #12                 // Field done:Z
       5: aload_0
       6: invokevirtual #44                 // Method drain:()V
       9: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #48                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          20
       7: getstatic     #49                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #50                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: invokevirtual #44                 // Method drain:()V
      20: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cancelled:Z
       4: ifne          48
       7: aload_0
       8: iconst_1
       9: putfield      #20                 // Field cancelled:Z
      12: aload_0
      13: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
      16: invokeinterface #51,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: getstatic     #52                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      24: aload_0
      25: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      28: ifne          48
      31: aload_0
      32: getfield      #24                 // Field queue:Ljava/util/Queue;
      35: aload_0
      36: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      39: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      44: aconst_null
      45: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      48: return

  void drainAsync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: aload_0
       6: getfield      #24                 // Field queue:Ljava/util/Queue;
       9: astore_2
      10: iconst_1
      11: istore_3
      12: aload_0
      13: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      16: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      21: astore        4
      23: aload_0
      24: getfield      #55                 // Field current:Ljava/util/Iterator;
      27: astore        5
      29: aload         5
      31: ifnonnull     287
      34: aload_0
      35: getfield      #20                 // Field cancelled:Z
      38: ifeq          49
      41: aload_2
      42: aload         4
      44: aconst_null
      45: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      48: return
      49: aload_0
      50: getfield      #15                 // Field error:Ljava/lang/Throwable;
      53: astore        6
      55: aload         6
      57: ifnull        90
      60: getstatic     #45                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      63: aload_0
      64: invokestatic  #56                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
      67: astore        6
      69: aload_0
      70: aconst_null
      71: putfield      #55                 // Field current:Ljava/util/Iterator;
      74: aload_2
      75: aload         4
      77: aconst_null
      78: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      81: aload_1
      82: aload         6
      84: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      89: return
      90: aload_0
      91: getfield      #12                 // Field done:Z
      94: istore        7
      96: aload_2
      97: invokeinterface #58,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     102: astore        8
     104: goto          130
     107: astore        9
     109: aload_0
     110: aconst_null
     111: putfield      #55                 // Field current:Ljava/util/Iterator;
     114: aload_2
     115: aload         4
     117: aconst_null
     118: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     121: aload_1
     122: aload         9
     124: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     129: return
     130: aload         8
     132: ifnonnull     139
     135: iconst_1
     136: goto          140
     139: iconst_0
     140: istore        9
     142: iload         7
     144: ifeq          159
     147: iload         9
     149: ifeq          159
     152: aload_1
     153: invokeinterface #60,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     158: return
     159: iload         9
     161: ifne          287
     164: aload_0
     165: getfield      #4                  // Field mapper:Ljava/util/function/Function;
     168: aload         8
     170: invokeinterface #61,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     175: checkcast     #62                 // class java/lang/Iterable
     178: astore        10
     180: aload         10
     182: invokeinterface #63,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     187: astore        5
     189: aload         5
     191: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     196: istore        11
     198: goto          233
     201: astore        12
     203: aconst_null
     204: astore        5
     206: aload_0
     207: aload_0
     208: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     211: aload         12
     213: aload         8
     215: aload         4
     217: invokestatic  #65                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     220: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     223: aload         8
     225: aload         4
     227: invokestatic  #43                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     230: goto          29
     233: iload         11
     235: ifne          287
     238: aconst_null
     239: astore        5
     241: aload_0
     242: getfield      #66                 // Field consumed:I
     245: iconst_1
     246: iadd
     247: istore        12
     249: iload         12
     251: aload_0
     252: getfield      #8                  // Field limit:I
     255: if_icmpne     278
     258: aload_0
     259: iconst_0
     260: putfield      #66                 // Field consumed:I
     263: aload_0
     264: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     267: iload         12
     269: i2l
     270: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     275: goto          29
     278: aload_0
     279: iload         12
     281: putfield      #66                 // Field consumed:I
     284: goto          29
     287: aload         5
     289: ifnull        723
     292: aload_0
     293: getfield      #17                 // Field requested:J
     296: lstore        6
     298: lconst_0
     299: lstore        8
     301: lload         8
     303: lload         6
     305: lcmp
     306: ifeq          556
     309: aload_0
     310: getfield      #20                 // Field cancelled:Z
     313: ifeq          329
     316: aload_0
     317: aconst_null
     318: putfield      #55                 // Field current:Ljava/util/Iterator;
     321: aload_2
     322: aload         4
     324: aconst_null
     325: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     328: return
     329: aload_0
     330: getfield      #15                 // Field error:Ljava/lang/Throwable;
     333: astore        10
     335: aload         10
     337: ifnull        370
     340: getstatic     #45                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     343: aload_0
     344: invokestatic  #56                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     347: astore        10
     349: aload_0
     350: aconst_null
     351: putfield      #55                 // Field current:Ljava/util/Iterator;
     354: aload_2
     355: aload         4
     357: aconst_null
     358: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     361: aload_1
     362: aload         10
     364: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     369: return
     370: aload         5
     372: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     377: ldc           #68                 // String iterator returned null
     379: invokestatic  #69                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     382: astore        11
     384: goto          414
     387: astore        12
     389: aload_0
     390: aload_0
     391: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     394: aload         12
     396: aload_0
     397: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     400: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     405: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     408: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     411: goto          301
     414: aload_1
     415: aload         11
     417: invokeinterface #70,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     422: aload_0
     423: getfield      #20                 // Field cancelled:Z
     426: ifeq          449
     429: aload_0
     430: aconst_null
     431: putfield      #55                 // Field current:Ljava/util/Iterator;
     434: aload_2
     435: aload_0
     436: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     439: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     444: aconst_null
     445: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     448: return
     449: lload         8
     451: lconst_1
     452: ladd
     453: lstore        8
     455: aload         5
     457: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     462: istore        12
     464: goto          494
     467: astore        13
     469: aload_0
     470: aload_0
     471: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     474: aload         13
     476: aload_0
     477: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     480: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     485: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     488: invokevirtual #42                 // Method onError:(Ljava/lang/Throwable;)V
     491: goto          301
     494: iload         12
     496: ifne          553
     499: aload_0
     500: getfield      #66                 // Field consumed:I
     503: iconst_1
     504: iadd
     505: istore        13
     507: iload         13
     509: aload_0
     510: getfield      #8                  // Field limit:I
     513: if_icmpne     536
     516: aload_0
     517: iconst_0
     518: putfield      #66                 // Field consumed:I
     521: aload_0
     522: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     525: iload         13
     527: i2l
     528: invokeinterface #33,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     533: goto          542
     536: aload_0
     537: iload         13
     539: putfield      #66                 // Field consumed:I
     542: aconst_null
     543: astore        5
     545: aload_0
     546: aconst_null
     547: putfield      #55                 // Field current:Ljava/util/Iterator;
     550: goto          556
     553: goto          301
     556: lload         8
     558: lload         6
     560: lcmp
     561: ifne          688
     564: aload_0
     565: getfield      #20                 // Field cancelled:Z
     568: ifeq          591
     571: aload_0
     572: aconst_null
     573: putfield      #55                 // Field current:Ljava/util/Iterator;
     576: aload_2
     577: aload_0
     578: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     581: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     586: aconst_null
     587: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     590: return
     591: aload_0
     592: getfield      #15                 // Field error:Ljava/lang/Throwable;
     595: astore        10
     597: aload         10
     599: ifnull        639
     602: getstatic     #45                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     605: aload_0
     606: invokestatic  #56                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
     609: astore        10
     611: aload_0
     612: aconst_null
     613: putfield      #55                 // Field current:Ljava/util/Iterator;
     616: aload_2
     617: aload_0
     618: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
     621: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     626: aconst_null
     627: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     630: aload_1
     631: aload         10
     633: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     638: return
     639: aload_0
     640: getfield      #12                 // Field done:Z
     643: istore        11
     645: aload_2
     646: invokeinterface #71,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     651: ifeq          663
     654: aload         5
     656: ifnonnull     663
     659: iconst_1
     660: goto          664
     663: iconst_0
     664: istore        12
     666: iload         11
     668: ifeq          688
     671: iload         12
     673: ifeq          688
     676: aload_0
     677: aconst_null
     678: putfield      #55                 // Field current:Ljava/util/Iterator;
     681: aload_1
     682: invokeinterface #60,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     687: return
     688: lload         8
     690: lconst_0
     691: lcmp
     692: ifeq          715
     695: lload         6
     697: ldc2_w        #73                 // long 9223372036854775807l
     700: lcmp
     701: ifeq          715
     704: getstatic     #49                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     707: aload_0
     708: lload         8
     710: lneg
     711: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     714: pop2
     715: aload         5
     717: ifnonnull     723
     720: goto          29
     723: aload_0
     724: aload         5
     726: putfield      #55                 // Field current:Ljava/util/Iterator;
     729: getstatic     #52                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     732: aload_0
     733: iload_3
     734: ineg
     735: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     738: istore_3
     739: iload_3
     740: ifne          29
     743: goto          746
     746: return
    Exception table:
       from    to  target type
          96   104   107   Class java/lang/Throwable
         164   198   201   Class java/lang/Throwable
         370   384   387   Class java/lang/Throwable
         455   464   467   Class java/lang/Throwable

  void drainSync();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_1
       5: iconst_1
       6: istore_2
       7: aload_0
       8: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      11: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: astore_3
      17: aload_0
      18: getfield      #55                 // Field current:Ljava/util/Iterator;
      21: astore        4
      23: aload         4
      25: ifnonnull     206
      28: aload_0
      29: getfield      #20                 // Field cancelled:Z
      32: ifeq          45
      35: aload_0
      36: getfield      #24                 // Field queue:Ljava/util/Queue;
      39: aload_3
      40: aconst_null
      41: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      44: return
      45: aload_0
      46: getfield      #12                 // Field done:Z
      49: istore        5
      51: aload_0
      52: getfield      #24                 // Field queue:Ljava/util/Queue;
      55: astore        7
      57: aload         7
      59: invokeinterface #58,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      64: astore        6
      66: goto          92
      69: astore        8
      71: aload_0
      72: aconst_null
      73: putfield      #55                 // Field current:Ljava/util/Iterator;
      76: aload         7
      78: aload_3
      79: aconst_null
      80: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      83: aload_1
      84: aload         8
      86: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      91: return
      92: aload         6
      94: ifnonnull     101
      97: iconst_1
      98: goto          102
     101: iconst_0
     102: istore        8
     104: iload         5
     106: ifeq          121
     109: iload         8
     111: ifeq          121
     114: aload_1
     115: invokeinterface #60,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     120: return
     121: iload         8
     123: ifne          206
     126: aload_0
     127: getfield      #4                  // Field mapper:Ljava/util/function/Function;
     130: aload         6
     132: invokeinterface #61,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     137: checkcast     #62                 // class java/lang/Iterable
     140: astore        9
     142: aload         9
     144: invokeinterface #63,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
     149: astore        4
     151: aload         4
     153: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     158: istore        10
     160: goto          195
     163: astore        11
     165: aload_0
     166: aconst_null
     167: putfield      #55                 // Field current:Ljava/util/Iterator;
     170: aload_1
     171: aload_0
     172: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     175: aload         11
     177: aload         6
     179: aload_3
     180: invokestatic  #65                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     183: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     188: aload         6
     190: aload_3
     191: invokestatic  #43                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     194: return
     195: iload         10
     197: ifne          206
     200: aconst_null
     201: astore        4
     203: goto          23
     206: aload         4
     208: ifnull        499
     211: aload_0
     212: getfield      #17                 // Field requested:J
     215: lstore        5
     217: lconst_0
     218: lstore        7
     220: lload         7
     222: lload         5
     224: lcmp
     225: ifeq          382
     228: aload_0
     229: getfield      #20                 // Field cancelled:Z
     232: ifeq          250
     235: aload_0
     236: aconst_null
     237: putfield      #55                 // Field current:Ljava/util/Iterator;
     240: aload_0
     241: getfield      #24                 // Field queue:Ljava/util/Queue;
     244: aload_3
     245: aconst_null
     246: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     249: return
     250: aload         4
     252: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     257: ldc           #68                 // String iterator returned null
     259: invokestatic  #69                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     262: astore        9
     264: goto          291
     267: astore        10
     269: aload_0
     270: aconst_null
     271: putfield      #55                 // Field current:Ljava/util/Iterator;
     274: aload_1
     275: aload_0
     276: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     279: aload         10
     281: aload_3
     282: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     285: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     290: return
     291: aload_1
     292: aload         9
     294: invokeinterface #70,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     299: aload_0
     300: getfield      #20                 // Field cancelled:Z
     303: ifeq          321
     306: aload_0
     307: aconst_null
     308: putfield      #55                 // Field current:Ljava/util/Iterator;
     311: aload_0
     312: getfield      #24                 // Field queue:Ljava/util/Queue;
     315: aload_3
     316: aconst_null
     317: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     320: return
     321: lload         7
     323: lconst_1
     324: ladd
     325: lstore        7
     327: aload         4
     329: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     334: istore        10
     336: goto          363
     339: astore        11
     341: aload_0
     342: aconst_null
     343: putfield      #55                 // Field current:Ljava/util/Iterator;
     346: aload_1
     347: aload_0
     348: getfield      #10                 // Field s:Lorg/reactivestreams/Subscription;
     351: aload         11
     353: aload_3
     354: invokestatic  #41                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     357: invokeinterface #57,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     362: return
     363: iload         10
     365: ifne          379
     368: aconst_null
     369: astore        4
     371: aload_0
     372: aconst_null
     373: putfield      #55                 // Field current:Ljava/util/Iterator;
     376: goto          382
     379: goto          220
     382: lload         7
     384: lload         5
     386: lcmp
     387: ifne          464
     390: aload_0
     391: getfield      #20                 // Field cancelled:Z
     394: ifeq          412
     397: aload_0
     398: aconst_null
     399: putfield      #55                 // Field current:Ljava/util/Iterator;
     402: aload_0
     403: getfield      #24                 // Field queue:Ljava/util/Queue;
     406: aload_3
     407: aconst_null
     408: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
     411: return
     412: aload_0
     413: getfield      #12                 // Field done:Z
     416: istore        9
     418: aload_0
     419: getfield      #24                 // Field queue:Ljava/util/Queue;
     422: invokeinterface #71,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
     427: ifeq          439
     430: aload         4
     432: ifnonnull     439
     435: iconst_1
     436: goto          440
     439: iconst_0
     440: istore        10
     442: iload         9
     444: ifeq          464
     447: iload         10
     449: ifeq          464
     452: aload_0
     453: aconst_null
     454: putfield      #55                 // Field current:Ljava/util/Iterator;
     457: aload_1
     458: invokeinterface #60,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     463: return
     464: lload         7
     466: lconst_0
     467: lcmp
     468: ifeq          491
     471: lload         5
     473: ldc2_w        #73                 // long 9223372036854775807l
     476: lcmp
     477: ifeq          491
     480: getstatic     #49                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     483: aload_0
     484: lload         7
     486: lneg
     487: invokevirtual #75                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     490: pop2
     491: aload         4
     493: ifnonnull     499
     496: goto          23
     499: aload_0
     500: aload         4
     502: putfield      #55                 // Field current:Ljava/util/Iterator;
     505: getstatic     #52                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     508: aload_0
     509: iload_2
     510: ineg
     511: invokevirtual #76                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     514: istore_2
     515: iload_2
     516: ifne          23
     519: goto          522
     522: return
    Exception table:
       from    to  target type
          57    66    69   Class java/lang/Throwable
         126   160   163   Class java/lang/Throwable
         250   264   267   Class java/lang/Throwable
         327   336   339   Class java/lang/Throwable

  void drain();
    Code:
       0: getstatic     #52                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: aload_0
      12: getfield      #30                 // Field fusionMode:I
      15: iconst_1
      16: if_icmpne     26
      19: aload_0
      20: invokevirtual #77                 // Method drainSync:()V
      23: goto          30
      26: aload_0
      27: invokevirtual #78                 // Method drainAsync:()V
      30: return

  public void clear();
    Code:
       0: aload_0
       1: aconst_null
       2: putfield      #55                 // Field current:Ljava/util/Iterator;
       5: aload_0
       6: getfield      #24                 // Field queue:Ljava/util/Queue;
       9: aload_0
      10: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      13: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      18: aconst_null
      19: invokestatic  #54                 // Method reactor/core/publisher/Operators.onDiscardQueueWithClear:(Ljava/util/Queue;Lreactor/util/context/Context;Ljava/util/function/Function;)V
      22: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #55                 // Field current:Ljava/util/Iterator;
       4: astore_1
       5: aload_1
       6: ifnull        24
       9: aload_1
      10: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      15: ifne          22
      18: iconst_1
      19: goto          23
      22: iconst_0
      23: ireturn
      24: aload_0
      25: getfield      #24                 // Field queue:Ljava/util/Queue;
      28: invokeinterface #71,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
      33: ireturn

  public R poll();
    Code:
       0: aload_0
       1: getfield      #55                 // Field current:Ljava/util/Iterator;
       4: astore_1
       5: aload_0
       6: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      14: astore_2
      15: aload_1
      16: ifnonnull     87
      19: aload_0
      20: getfield      #24                 // Field queue:Ljava/util/Queue;
      23: invokeinterface #58,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      28: astore_3
      29: aload_3
      30: ifnonnull     35
      33: aconst_null
      34: areturn
      35: aload_0
      36: getfield      #4                  // Field mapper:Ljava/util/function/Function;
      39: aload_3
      40: invokeinterface #61,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #62                 // class java/lang/Iterable
      48: invokeinterface #63,  1           // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      53: astore_1
      54: goto          67
      57: astore        4
      59: aload_3
      60: aload_2
      61: invokestatic  #43                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      64: aload         4
      66: athrow
      67: aload_1
      68: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      73: ifne          79
      76: goto          15
      79: aload_0
      80: aload_1
      81: putfield      #55                 // Field current:Ljava/util/Iterator;
      84: goto          101
      87: aload_1
      88: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifne          101
      96: aconst_null
      97: astore_1
      98: goto          15
     101: aload_1
     102: invokeinterface #67,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     107: ldc           #68                 // String iterator returned null
     109: invokestatic  #69                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     112: astore_3
     113: aload_1
     114: invokeinterface #64,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     119: ifne          127
     122: aload_0
     123: aconst_null
     124: putfield      #55                 // Field current:Ljava/util/Iterator;
     127: aload_3
     128: areturn
    Exception table:
       from    to  target type
          35    54    57   Class java/lang/Throwable

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_1
       2: iand
       3: ifeq          16
       6: aload_0
       7: getfield      #30                 // Field fusionMode:I
      10: iconst_1
      11: if_icmpne     16
      14: iconst_1
      15: ireturn
      16: iconst_0
      17: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #24                 // Field queue:Ljava/util/Queue;
       4: invokeinterface #25,  1           // InterfaceMethod java/util/Queue.size:()I
       9: ireturn

  static {};
    Code:
       0: ldc           #79                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
       2: ldc           #80                 // String wip
       4: invokestatic  #81                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #52                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #79                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
      12: ldc           #82                 // String requested
      14: invokestatic  #83                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: putstatic     #49                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      20: ldc           #79                 // class reactor/core/publisher/FluxFlattenIterable$FlattenIterableSubscriber
      22: ldc           #59                 // class java/lang/Throwable
      24: ldc           #84                 // String error
      26: invokestatic  #85                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      29: putstatic     #45                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      32: return
}
