Compiled from "FluxFilter.java"
final class reactor.core.publisher.FluxFilter$FilterConditionalSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.Fuseable$ConditionalSubscriber<T> {
  final reactor.core.Fuseable$ConditionalSubscriber<? super T> actual;

  final reactor.util.context.Context ctx;

  final java.util.function.Predicate<? super T> predicate;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.FluxFilter$FilterConditionalSubscriber(reactor.core.Fuseable$ConditionalSubscriber<? super T>, java.util.function.Predicate<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      24: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #7                  // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      20: aload_0
      21: invokeinterface #8,  2            // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #10                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: getfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      20: aload_1
      21: invokeinterface #11,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      26: istore_2
      27: goto          79
      30: astore_3
      31: aload_1
      32: aload_3
      33: aload_0
      34: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      37: aload_0
      38: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      41: invokestatic  #13                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      44: astore        4
      46: aload         4
      48: ifnull        60
      51: aload_0
      52: aload         4
      54: invokevirtual #14                 // Method onError:(Ljava/lang/Throwable;)V
      57: goto          70
      60: aload_0
      61: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      64: lconst_1
      65: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      70: aload_1
      71: aload_0
      72: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      75: invokestatic  #16                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      78: return
      79: iload_2
      80: ifeq          96
      83: aload_0
      84: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      87: aload_1
      88: invokeinterface #17,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onNext:(Ljava/lang/Object;)V
      93: goto          114
      96: aload_0
      97: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
     100: lconst_1
     101: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
     106: aload_1
     107: aload_0
     108: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
     111: invokestatic  #16                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
     114: return
    Exception table:
       from    to  target type
          16    27    30   Class java/lang/Throwable

  public boolean tryOnNext(T);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          17
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #10                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: iconst_0
      16: ireturn
      17: aload_0
      18: getfield      #5                  // Field predicate:Ljava/util/function/Predicate;
      21: aload_1
      22: invokeinterface #11,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      27: istore_2
      28: goto          68
      31: astore_3
      32: aload_1
      33: aload_3
      34: aload_0
      35: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      38: aload_0
      39: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      42: invokestatic  #13                 // Method reactor/core/publisher/Operators.onNextError:(Ljava/lang/Object;Ljava/lang/Throwable;Lreactor/util/context/Context;Lorg/reactivestreams/Subscription;)Ljava/lang/Throwable;
      45: astore        4
      47: aload         4
      49: ifnull        58
      52: aload_0
      53: aload         4
      55: invokevirtual #14                 // Method onError:(Ljava/lang/Throwable;)V
      58: aload_1
      59: aload_0
      60: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      63: invokestatic  #16                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      66: iconst_0
      67: ireturn
      68: iload_2
      69: ifeq          83
      72: aload_0
      73: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      76: aload_1
      77: invokeinterface #18,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.tryOnNext:(Ljava/lang/Object;)Z
      82: ireturn
      83: aload_1
      84: aload_0
      85: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      88: invokestatic  #16                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      91: iconst_0
      92: ireturn
    Exception table:
       from    to  target type
          17    28    31   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #19                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: iconst_1
      18: putfield      #9                  // Field done:Z
      21: aload_0
      22: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      25: aload_1
      26: invokeinterface #20,  2           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onError:(Ljava/lang/Throwable;)V
      31: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #9                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #9                  // Field done:Z
      13: aload_0
      14: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
      17: invokeinterface #21,  1           // InterfaceMethod reactor/core/Fuseable$ConditionalSubscriber.onComplete:()V
      22: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #22                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #23                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #9                  // Field done:Z
      23: invokestatic  #24                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #25                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/Fuseable$ConditionalSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #15,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #6                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #26,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return
}
