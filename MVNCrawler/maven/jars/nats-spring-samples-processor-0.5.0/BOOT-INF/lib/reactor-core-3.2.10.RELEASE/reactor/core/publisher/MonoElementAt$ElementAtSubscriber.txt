Compiled from "MonoElementAt.java"
final class reactor.core.publisher.MonoElementAt$ElementAtSubscriber<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  final T defaultValue;

  long index;

  org.reactivestreams.Subscription s;

  boolean done;

  reactor.core.publisher.MonoElementAt$ElementAtSubscriber(reactor.core.CoreSubscriber<? super T>, long, T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: lload_2
       7: putfield      #2                  // Field index:J
      10: aload_0
      11: aload         4
      13: putfield      #3                  // Field defaultValue:Ljava/lang/Object;
      16: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #5                  // Field done:Z
      11: invokestatic  #6                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #7                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      26: areturn
      27: aload_0
      28: aload_1
      29: invokespecial #9                  // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      32: areturn

  public void request(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokespecial #10                 // Method reactor/core/publisher/Operators$MonoSubscriber.request:(J)V
       5: lload_1
       6: lconst_0
       7: lcmp
       8: ifle          23
      11: aload_0
      12: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      15: ldc2_w        #12                 // long 9223372036854775807l
      18: invokeinterface #14,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      23: return

  public void cancel();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method reactor/core/publisher/Operators$MonoSubscriber.cancel:()V
       4: aload_0
       5: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       8: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      13: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #17                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          26
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      20: aload_0
      21: invokeinterface #19,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      26: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #21                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: getfield      #2                  // Field index:J
      25: lstore_2
      26: lload_2
      27: lconst_0
      28: lcmp
      29: ifne          66
      32: aload_0
      33: iconst_1
      34: putfield      #5                  // Field done:Z
      37: aload_0
      38: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      41: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      46: aload_0
      47: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      50: aload_1
      51: invokeinterface #22,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      56: aload_0
      57: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      60: invokeinterface #23,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      65: return
      66: aload_0
      67: lload_2
      68: lconst_1
      69: lsub
      70: putfield      #2                  // Field index:J
      73: aload_1
      74: aload_0
      75: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      78: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      83: invokestatic  #24                 // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      86: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ifeq          21
       7: aload_1
       8: aload_0
       9: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      12: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      17: invokestatic  #25                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      20: return
      21: aload_0
      22: iconst_1
      23: putfield      #5                  // Field done:Z
      26: aload_0
      27: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      30: aload_1
      31: invokeinterface #26,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      36: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field done:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #5                  // Field done:Z
      13: aload_0
      14: getfield      #3                  // Field defaultValue:Ljava/lang/Object;
      17: ifnull        31
      20: aload_0
      21: aload_0
      22: getfield      #3                  // Field defaultValue:Ljava/lang/Object;
      25: invokevirtual #27                 // Method complete:(Ljava/lang/Object;)V
      28: goto          59
      31: aload_0
      32: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      35: new           #28                 // class java/lang/IndexOutOfBoundsException
      38: dup
      39: invokespecial #29                 // Method java/lang/IndexOutOfBoundsException."<init>":()V
      42: aload_0
      43: getfield      #18                 // Field actual:Lreactor/core/CoreSubscriber;
      46: invokeinterface #20,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      51: invokestatic  #30                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      54: invokeinterface #26,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      59: return
}
