Compiled from "MonoDoFinallyFuseable.java"
final class reactor.core.publisher.MonoDoFinallyFuseable<T> extends reactor.core.publisher.MonoOperator<T, T> implements reactor.core.Fuseable {
  final java.util.function.Consumer<reactor.core.publisher.SignalType> onFinally;

  reactor.core.publisher.MonoDoFinallyFuseable(reactor.core.publisher.Mono<? extends T>, java.util.function.Consumer<reactor.core.publisher.SignalType>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/MonoOperator."<init>":(Lreactor/core/publisher/Mono;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field onFinally:Ljava/util/function/Consumer;
      10: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field source:Lreactor/core/publisher/Mono;
       4: aload_1
       5: aload_0
       6: getfield      #2                  // Field onFinally:Ljava/util/function/Consumer;
       9: iconst_1
      10: invokestatic  #4                  // Method reactor/core/publisher/FluxDoFinally.createSubscriber:(Lreactor/core/CoreSubscriber;Ljava/util/function/Consumer;Z)Lreactor/core/CoreSubscriber;
      13: invokevirtual #5                  // Method reactor/core/publisher/Mono.subscribe:(Lreactor/core/CoreSubscriber;)V
      16: return
}
