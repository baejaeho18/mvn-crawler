Compiled from "FluxRetryWhen.java"
final class reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber extends reactor.core.publisher.Flux<java.lang.Throwable> implements reactor.core.publisher.InnerConsumer<java.lang.Object> {
  reactor.core.publisher.FluxRetryWhen$RetryWhenMainSubscriber<?> main;

  final reactor.core.publisher.DirectProcessor<java.lang.Throwable> completionSignal;

  reactor.core.publisher.FluxRetryWhen$RetryWhenOtherSubscriber();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: aload_0
       5: new           #2                  // class reactor/core/publisher/DirectProcessor
       8: dup
       9: invokespecial #3                  // Method reactor/core/publisher/DirectProcessor."<init>":()V
      12: putfield      #4                  // Field completionSignal:Lreactor/core/publisher/DirectProcessor;
      15: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
       4: invokevirtual #6                  // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.currentContext:()Lreactor/util/context/Context;
       7: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
      11: getfield      #8                  // Field reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.otherArbiter:Lreactor/core/publisher/Operators$DeferredSubscription;
      14: areturn
      15: aload_1
      16: getstatic     #9                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
      19: if_acmpne     27
      22: aload_0
      23: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
      26: areturn
      27: aconst_null
      28: areturn

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
       4: aload_1
       5: invokevirtual #10                 // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.setWhen:(Lorg/reactivestreams/Subscription;)V
       8: return

  public void onNext(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
       4: aload_1
       5: invokevirtual #11                 // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.resubscribe:(Ljava/lang/Object;)V
       8: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
       4: aload_1
       5: invokevirtual #12                 // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.whenError:(Ljava/lang/Throwable;)V
       8: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #5                  // Field main:Lreactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber;
       4: invokevirtual #13                 // Method reactor/core/publisher/FluxRetryWhen$RetryWhenMainSubscriber.whenComplete:()V
       7: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Throwable>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field completionSignal:Lreactor/core/publisher/DirectProcessor;
       4: aload_1
       5: invokevirtual #14                 // Method reactor/core/publisher/DirectProcessor.subscribe:(Lreactor/core/CoreSubscriber;)V
       8: return
}
