Compiled from "WaitStrategy.java"
final class reactor.util.concurrent.WaitStrategy$Parking extends reactor.util.concurrent.WaitStrategy {
  static final reactor.util.concurrent.WaitStrategy$Parking INSTANCE;

  private final int retries;

  private static final int DEFAULT_RETRIES;

  reactor.util.concurrent.WaitStrategy$Parking();
    Code:
       0: aload_0
       1: sipush        200
       4: invokespecial #2                  // Method "<init>":(I)V
       7: return

  reactor.util.concurrent.WaitStrategy$Parking(int);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method reactor/util/concurrent/WaitStrategy."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #4                  // Field retries:I
       9: return

  public long waitFor(long, java.util.function.LongSupplier, java.lang.Runnable) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field retries:I
       4: istore        7
       6: aload_3
       7: invokeinterface #5,  1            // InterfaceMethod java/util/function/LongSupplier.getAsLong:()J
      12: dup2
      13: lstore        5
      15: lload_1
      16: lcmp
      17: ifge          33
      20: aload_0
      21: aload         4
      23: iload         7
      25: invokespecial #6                  // Method applyWaitMethod:(Ljava/lang/Runnable;I)I
      28: istore        7
      30: goto          6
      33: lload         5
      35: lreturn

  private int applyWaitMethod(java.lang.Runnable, int) throws reactor.util.concurrent.WaitStrategy$AlertException;
    Code:
       0: aload_1
       1: invokeinterface #7,  1            // InterfaceMethod java/lang/Runnable.run:()V
       6: iload_2
       7: bipush        100
       9: if_icmple     18
      12: iinc          2, -1
      15: goto          35
      18: iload_2
      19: ifle          31
      22: iinc          2, -1
      25: invokestatic  #8                  // Method java/lang/Thread.yield:()V
      28: goto          35
      31: lconst_1
      32: invokestatic  #9                  // Method java/util/concurrent/locks/LockSupport.parkNanos:(J)V
      35: iload_2
      36: ireturn

  static {};
    Code:
       0: new           #1                  // class reactor/util/concurrent/WaitStrategy$Parking
       3: dup
       4: invokespecial #10                 // Method "<init>":()V
       7: putstatic     #11                 // Field INSTANCE:Lreactor/util/concurrent/WaitStrategy$Parking;
      10: return
}
