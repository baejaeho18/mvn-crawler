Compiled from "ParallelMergeSort.java"
final class reactor.core.publisher.ParallelMergeSort$MergeSortMain<T> implements reactor.core.publisher.InnerProducer<T> {
  final reactor.core.publisher.ParallelMergeSort$MergeSortInner<T>[] subscribers;

  final java.util.List<T>[] lists;

  final int[] indexes;

  final java.util.Comparator<? super T> comparator;

  final reactor.core.CoreSubscriber<? super T> actual;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.ParallelMergeSort$MergeSortMain> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.ParallelMergeSort$MergeSortMain> REQUESTED;

  volatile boolean cancelled;

  volatile int remaining;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.ParallelMergeSort$MergeSortMain> REMAINING;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.ParallelMergeSort$MergeSortMain, java.lang.Throwable> ERROR;

  reactor.core.publisher.ParallelMergeSort$MergeSortMain(reactor.core.CoreSubscriber<? super T>, int, java.util.Comparator<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_3
       6: putfield      #2                  // Field comparator:Ljava/util/Comparator;
       9: aload_0
      10: aload_1
      11: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      14: iload_2
      15: anewarray     #4                  // class reactor/core/publisher/ParallelMergeSort$MergeSortInner
      18: astore        4
      20: iconst_0
      21: istore        5
      23: iload         5
      25: iload_2
      26: if_icmpge     50
      29: aload         4
      31: iload         5
      33: new           #4                  // class reactor/core/publisher/ParallelMergeSort$MergeSortInner
      36: dup
      37: aload_0
      38: iload         5
      40: invokespecial #5                  // Method reactor/core/publisher/ParallelMergeSort$MergeSortInner."<init>":(Lreactor/core/publisher/ParallelMergeSort$MergeSortMain;I)V
      43: aastore
      44: iinc          5, 1
      47: goto          23
      50: aload_0
      51: aload         4
      53: putfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSort$MergeSortInner;
      56: aload_0
      57: iload_2
      58: anewarray     #7                  // class java/util/List
      61: putfield      #8                  // Field lists:[Ljava/util/List;
      64: aload_0
      65: iload_2
      66: newarray       int
      68: putfield      #9                  // Field indexes:[I
      71: getstatic     #10                 // Field REMAINING:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      74: aload_0
      75: iload_2
      76: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      79: return

  public final reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #12                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #13                 // Field error:Ljava/lang/Throwable;
      11: areturn
      12: aload_1
      13: getstatic     #14                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      16: if_acmpne     27
      19: aload_0
      20: getfield      #15                 // Field requested:J
      23: invokestatic  #16                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      26: areturn
      27: aload_1
      28: getstatic     #17                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      31: if_acmpne     42
      34: aload_0
      35: getfield      #18                 // Field cancelled:Z
      38: invokestatic  #19                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      41: areturn
      42: aload_1
      43: getstatic     #20                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      46: if_acmpne     63
      49: aload_0
      50: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSort$MergeSortInner;
      53: arraylength
      54: aload_0
      55: getfield      #21                 // Field remaining:I
      58: isub
      59: invokestatic  #22                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      62: areturn
      63: aload_0
      64: aload_1
      65: invokespecial #23                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      68: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSort$MergeSortInner;
       4: invokestatic  #24                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #25                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          27
       7: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #27                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: aload_0
      17: getfield      #21                 // Field remaining:I
      20: ifne          27
      23: aload_0
      24: invokevirtual #28                 // Method drain:()V
      27: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field cancelled:Z
       4: ifne          34
       7: aload_0
       8: iconst_1
       9: putfield      #18                 // Field cancelled:Z
      12: aload_0
      13: invokevirtual #29                 // Method cancelAll:()V
      16: getstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: aload_0
      20: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      23: ifne          34
      26: aload_0
      27: getfield      #8                  // Field lists:[Ljava/util/List;
      30: aconst_null
      31: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      34: return

  void cancelAll();
    Code:
       0: aload_0
       1: getfield      #6                  // Field subscribers:[Lreactor/core/publisher/ParallelMergeSort$MergeSortInner;
       4: astore_1
       5: aload_1
       6: arraylength
       7: istore_2
       8: iconst_0
       9: istore_3
      10: iload_3
      11: iload_2
      12: if_icmpge     31
      15: aload_1
      16: iload_3
      17: aaload
      18: astore        4
      20: aload         4
      22: invokevirtual #33                 // Method reactor/core/publisher/ParallelMergeSort$MergeSortInner.cancel:()V
      25: iinc          3, 1
      28: goto          10
      31: return

  void innerNext(java.util.List<T>, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field lists:[Ljava/util/List;
       4: iload_2
       5: aload_1
       6: aastore
       7: getstatic     #10                 // Field REMAINING:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: aload_0
      11: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      14: ifne          21
      17: aload_0
      18: invokevirtual #28                 // Method drain:()V
      21: return

  void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #35                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aconst_null
       5: aload_1
       6: invokevirtual #36                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
       9: ifeq          23
      12: aload_0
      13: invokevirtual #29                 // Method cancelAll:()V
      16: aload_0
      17: invokevirtual #28                 // Method drain:()V
      20: goto          44
      23: aload_0
      24: getfield      #13                 // Field error:Ljava/lang/Throwable;
      27: aload_1
      28: if_acmpeq     44
      31: aload_1
      32: aload_0
      33: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      36: invokeinterface #37,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      41: invokestatic  #38                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      44: return

  void drain();
    Code:
       0: getstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      17: astore_2
      18: aload_0
      19: getfield      #8                  // Field lists:[Ljava/util/List;
      22: astore_3
      23: aload_0
      24: getfield      #9                  // Field indexes:[I
      27: astore        4
      29: aload         4
      31: arraylength
      32: istore        5
      34: aload_0
      35: getfield      #15                 // Field requested:J
      38: lstore        6
      40: lconst_0
      41: lstore        8
      43: lload         8
      45: lload         6
      47: lcmp
      48: ifeq          241
      51: aload_0
      52: getfield      #18                 // Field cancelled:Z
      55: ifeq          64
      58: aload_3
      59: aconst_null
      60: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      63: return
      64: aload_0
      65: getfield      #13                 // Field error:Ljava/lang/Throwable;
      68: astore        10
      70: aload         10
      72: ifnull        93
      75: aload_0
      76: invokevirtual #29                 // Method cancelAll:()V
      79: aload_3
      80: aconst_null
      81: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
      84: aload_2
      85: aload         10
      87: invokeinterface #39,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      92: return
      93: aconst_null
      94: astore        11
      96: iconst_m1
      97: istore        12
      99: iconst_0
     100: istore        13
     102: iload         13
     104: iload         5
     106: if_icmpge     198
     109: aload_3
     110: iload         13
     112: aaload
     113: astore        14
     115: aload         4
     117: iload         13
     119: iaload
     120: istore        15
     122: aload         14
     124: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     129: iload         15
     131: if_icmpeq     192
     134: aload         11
     136: ifnonnull     157
     139: aload         14
     141: iload         15
     143: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     148: astore        11
     150: iload         13
     152: istore        12
     154: goto          192
     157: aload         14
     159: iload         15
     161: invokeinterface #41,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     166: astore        16
     168: aload_0
     169: getfield      #2                  // Field comparator:Ljava/util/Comparator;
     172: aload         11
     174: aload         16
     176: invokeinterface #42,  3           // InterfaceMethod java/util/Comparator.compare:(Ljava/lang/Object;Ljava/lang/Object;)I
     181: ifle          192
     184: aload         16
     186: astore        11
     188: iload         13
     190: istore        12
     192: iinc          13, 1
     195: goto          102
     198: aload         11
     200: ifnonnull     215
     203: aload_3
     204: aconst_null
     205: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     208: aload_2
     209: invokeinterface #43,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     214: return
     215: aload_2
     216: aload         11
     218: invokeinterface #44,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     223: aload         4
     225: iload         12
     227: dup2
     228: iaload
     229: iconst_1
     230: iadd
     231: iastore
     232: lload         8
     234: lconst_1
     235: ladd
     236: lstore        8
     238: goto          43
     241: lload         8
     243: lload         6
     245: lcmp
     246: ifne          350
     249: aload_0
     250: getfield      #18                 // Field cancelled:Z
     253: ifeq          262
     256: aload_3
     257: aconst_null
     258: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     261: return
     262: aload_0
     263: getfield      #13                 // Field error:Ljava/lang/Throwable;
     266: astore        10
     268: aload         10
     270: ifnull        291
     273: aload_0
     274: invokevirtual #29                 // Method cancelAll:()V
     277: aload_3
     278: aconst_null
     279: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     282: aload_2
     283: aload         10
     285: invokeinterface #39,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
     290: return
     291: iconst_1
     292: istore        11
     294: iconst_0
     295: istore        12
     297: iload         12
     299: iload         5
     301: if_icmpge     333
     304: aload         4
     306: iload         12
     308: iaload
     309: aload_3
     310: iload         12
     312: aaload
     313: invokeinterface #40,  1           // InterfaceMethod java/util/List.size:()I
     318: if_icmpeq     327
     321: iconst_0
     322: istore        11
     324: goto          333
     327: iinc          12, 1
     330: goto          297
     333: iload         11
     335: ifeq          350
     338: aload_3
     339: aconst_null
     340: invokestatic  #32                 // Method java/util/Arrays.fill:([Ljava/lang/Object;Ljava/lang/Object;)V
     343: aload_2
     344: invokeinterface #43,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     349: return
     350: lload         8
     352: lconst_0
     353: lcmp
     354: ifeq          377
     357: lload         6
     359: ldc2_w        #46                 // long 9223372036854775807l
     362: lcmp
     363: ifeq          377
     366: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     369: aload_0
     370: lload         8
     372: lneg
     373: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     376: pop2
     377: aload_0
     378: getfield      #49                 // Field wip:I
     381: istore        10
     383: iload         10
     385: iload_1
     386: if_icmpne     406
     389: getstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     392: aload_0
     393: iload_1
     394: ineg
     395: invokevirtual #50                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     398: istore_1
     399: iload_1
     400: ifne          409
     403: goto          412
     406: iload         10
     408: istore_1
     409: goto          34
     412: return

  static {};
    Code:
       0: ldc           #51                 // class reactor/core/publisher/ParallelMergeSort$MergeSortMain
       2: ldc           #52                 // String wip
       4: invokestatic  #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #30                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #51                 // class reactor/core/publisher/ParallelMergeSort$MergeSortMain
      12: ldc           #54                 // String requested
      14: invokestatic  #55                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: putstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      20: ldc           #51                 // class reactor/core/publisher/ParallelMergeSort$MergeSortMain
      22: ldc           #56                 // String remaining
      24: invokestatic  #53                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      27: putstatic     #10                 // Field REMAINING:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      30: ldc           #51                 // class reactor/core/publisher/ParallelMergeSort$MergeSortMain
      32: ldc           #57                 // class java/lang/Throwable
      34: ldc           #58                 // String error
      36: invokestatic  #59                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: putstatic     #35                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: return
}
