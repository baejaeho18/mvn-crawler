Compiled from "FluxMetrics.java"
class reactor.core.publisher.FluxMetrics$MicrometerFluxMetricsSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final io.micrometer.core.instrument.Clock clock;

  final io.micrometer.core.instrument.Counter malformedSourceCounter;

  final io.micrometer.core.instrument.Counter subscribedCounter;

  final io.micrometer.core.instrument.DistributionSummary requestedCounter;

  io.micrometer.core.instrument.Timer$Sample subscribeToTerminateSample;

  long lastNextEventNanos;

  boolean done;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  org.reactivestreams.Subscription s;

  final io.micrometer.core.instrument.Timer onNextIntervalTimer;

  final io.micrometer.core.instrument.Timer subscribeToCompleteTimer;

  final java.util.function.Function<java.lang.Throwable, io.micrometer.core.instrument.Timer> subscribeToErrorTimerFactory;

  final io.micrometer.core.instrument.Timer subscribeToCancelTimer;

  reactor.core.publisher.FluxMetrics$MicrometerFluxMetricsSubscriber(reactor.core.CoreSubscriber<? super T>, io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.Clock, java.lang.String, java.util.List<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long -1l
       8: putfield      #5                  // Field lastNextEventNanos:J
      11: aload_0
      12: aload_1
      13: putfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      16: aload_0
      17: aload_3
      18: putfield      #7                  // Field clock:Lio/micrometer/core/instrument/Clock;
      21: new           #8                  // class java/util/ArrayList
      24: dup
      25: invokespecial #9                  // Method java/util/ArrayList."<init>":()V
      28: astore        6
      30: aload         6
      32: ldc           #10                 // String flow
      34: aload         4
      36: invokestatic  #11                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      39: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      44: pop
      45: aload         6
      47: ldc           #13                 // String type
      49: ldc           #14                 // String Flux
      51: invokestatic  #11                 // InterfaceMethod io/micrometer/core/instrument/Tag.of:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Tag;
      54: invokeinterface #12,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      59: pop
      60: aload         6
      62: aload         5
      64: invokeinterface #15,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      69: pop
      70: aload_0
      71: ldc           #16                 // String reactor.flow.duration
      73: invokestatic  #17                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      76: aload         6
      78: invokevirtual #18                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
      81: ldc           #19                 // String status
      83: ldc           #20                 // String completed
      85: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      88: ldc           #22                 // String exception
      90: ldc           #23                 // String
      92: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      95: ldc           #24                 // String Times the duration elapsed between a subscription and the onComplete termination of the sequence
      97: invokevirtual #25                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     100: aload_2
     101: invokevirtual #26                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     104: putfield      #27                 // Field subscribeToCompleteTimer:Lio/micrometer/core/instrument/Timer;
     107: aload_0
     108: ldc           #16                 // String reactor.flow.duration
     110: invokestatic  #17                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     113: aload         6
     115: invokevirtual #18                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
     118: ldc           #19                 // String status
     120: ldc           #28                 // String cancelled
     122: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     125: ldc           #22                 // String exception
     127: ldc           #23                 // String
     129: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     132: ldc           #29                 // String Times the duration elapsed between a subscription and the cancellation of the sequence
     134: invokevirtual #25                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     137: aload_2
     138: invokevirtual #26                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     141: putfield      #30                 // Field subscribeToCancelTimer:Lio/micrometer/core/instrument/Timer;
     144: ldc           #16                 // String reactor.flow.duration
     146: invokestatic  #17                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     149: aload         6
     151: invokevirtual #18                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
     154: ldc           #19                 // String status
     156: ldc           #31                 // String error
     158: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     161: ldc           #32                 // String Times the duration elapsed between a subscription and the onError termination of the sequence, with the exception name as a tag
     163: invokevirtual #25                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     166: astore        7
     168: aload_0
     169: aload         7
     171: aload_2
     172: invokedynamic #33,  0             // InvokeDynamic #0:apply:(Lio/micrometer/core/instrument/Timer$Builder;Lio/micrometer/core/instrument/MeterRegistry;)Ljava/util/function/Function;
     177: putfield      #34                 // Field subscribeToErrorTimerFactory:Ljava/util/function/Function;
     180: aload_0
     181: ldc           #35                 // String reactor.onNext.delay
     183: invokestatic  #17                 // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     186: aload         6
     188: invokevirtual #18                 // Method io/micrometer/core/instrument/Timer$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Timer$Builder;
     191: ldc           #36                 // String Measures delays between onNext signals (or between onSubscribe and first onNext)
     193: invokevirtual #25                 // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
     196: aload_2
     197: invokevirtual #26                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
     200: putfield      #37                 // Field onNextIntervalTimer:Lio/micrometer/core/instrument/Timer;
     203: aload_0
     204: ldc           #38                 // String reactor.subscribed
     206: invokestatic  #39                 // InterfaceMethod io/micrometer/core/instrument/Counter.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     209: aload         6
     211: invokevirtual #40                 // Method io/micrometer/core/instrument/Counter$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter$Builder;
     214: ldc           #41                 // String subscribers
     216: invokevirtual #42                 // Method io/micrometer/core/instrument/Counter$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     219: ldc           #43                 // String Counts how many Reactor sequences have been subscribed to
     221: invokevirtual #44                 // Method io/micrometer/core/instrument/Counter$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Counter$Builder;
     224: aload_2
     225: invokevirtual #45                 // Method io/micrometer/core/instrument/Counter$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Counter;
     228: putfield      #46                 // Field subscribedCounter:Lio/micrometer/core/instrument/Counter;
     231: aload_0
     232: aload_2
     233: ldc           #47                 // String reactor.malformed.source
     235: aload         6
     237: invokevirtual #48                 // Method io/micrometer/core/instrument/MeterRegistry.counter:(Ljava/lang/String;Ljava/lang/Iterable;)Lio/micrometer/core/instrument/Counter;
     240: putfield      #49                 // Field malformedSourceCounter:Lio/micrometer/core/instrument/Counter;
     243: ldc           #50                 // String reactor
     245: aload         4
     247: invokevirtual #51                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     250: ifne          284
     253: aload_0
     254: ldc           #52                 // String reactor.requested
     256: invokestatic  #53                 // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     259: aload         6
     261: invokevirtual #54                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.tags:(Ljava/lang/Iterable;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     264: ldc           #55                 // String Counts the amount requested to a named Flux by all subscribers, until at least one requests an unbounded amount
     266: invokevirtual #56                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     269: ldc           #57                 // String requested amount
     271: invokevirtual #58                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.baseUnit:(Ljava/lang/String;)Lio/micrometer/core/instrument/DistributionSummary$Builder;
     274: aload_2
     275: invokevirtual #59                 // Method io/micrometer/core/instrument/DistributionSummary$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/DistributionSummary;
     278: putfield      #60                 // Field requestedCounter:Lio/micrometer/core/instrument/DistributionSummary;
     281: goto          289
     284: aload_0
     285: aconst_null
     286: putfield      #60                 // Field requestedCounter:Lio/micrometer/core/instrument/DistributionSummary;
     289: return

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #61                 // Field done:Z
       4: ifeq          30
       7: aload_0
       8: getfield      #49                 // Field malformedSourceCounter:Lio/micrometer/core/instrument/Counter;
      11: invokeinterface #62,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
      16: aload_1
      17: aload_0
      18: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      21: invokeinterface #63,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      26: invokestatic  #64                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      29: return
      30: aload_0
      31: getfield      #5                  // Field lastNextEventNanos:J
      34: lstore_2
      35: aload_0
      36: aload_0
      37: getfield      #7                  // Field clock:Lio/micrometer/core/instrument/Clock;
      40: invokeinterface #65,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      45: putfield      #5                  // Field lastNextEventNanos:J
      48: aload_0
      49: getfield      #37                 // Field onNextIntervalTimer:Lio/micrometer/core/instrument/Timer;
      52: aload_0
      53: getfield      #5                  // Field lastNextEventNanos:J
      56: lload_2
      57: lsub
      58: getstatic     #66                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      61: invokeinterface #67,  4           // InterfaceMethod io/micrometer/core/instrument/Timer.record:(JLjava/util/concurrent/TimeUnit;)V
      66: aload_0
      67: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      70: aload_1
      71: invokeinterface #68,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      76: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #61                 // Field done:Z
       4: ifeq          30
       7: aload_0
       8: getfield      #49                 // Field malformedSourceCounter:Lio/micrometer/core/instrument/Counter;
      11: invokeinterface #62,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
      16: aload_1
      17: aload_0
      18: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      21: invokeinterface #63,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      26: invokestatic  #69                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      29: return
      30: aload_0
      31: iconst_1
      32: putfield      #61                 // Field done:Z
      35: aload_0
      36: getfield      #34                 // Field subscribeToErrorTimerFactory:Ljava/util/function/Function;
      39: aload_1
      40: invokeinterface #70,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      45: checkcast     #71                 // class io/micrometer/core/instrument/Timer
      48: astore_2
      49: aload_0
      50: getfield      #72                 // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
      53: aload_2
      54: invokevirtual #73                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      57: pop2
      58: aload_0
      59: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      62: aload_1
      63: invokeinterface #74,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      68: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #61                 // Field done:Z
       4: ifeq          17
       7: aload_0
       8: getfield      #49                 // Field malformedSourceCounter:Lio/micrometer/core/instrument/Counter;
      11: invokeinterface #62,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
      16: return
      17: aload_0
      18: iconst_1
      19: putfield      #61                 // Field done:Z
      22: aload_0
      23: getfield      #72                 // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
      26: aload_0
      27: getfield      #27                 // Field subscribeToCompleteTimer:Lio/micrometer/core/instrument/Timer;
      30: invokevirtual #73                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      33: pop2
      34: aload_0
      35: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      38: invokeinterface #75,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      43: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #76                 // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #77                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          74
      11: aload_0
      12: getfield      #46                 // Field subscribedCounter:Lio/micrometer/core/instrument/Counter;
      15: invokeinterface #62,  1           // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
      20: aload_0
      21: aload_0
      22: getfield      #7                  // Field clock:Lio/micrometer/core/instrument/Clock;
      25: invokestatic  #78                 // InterfaceMethod io/micrometer/core/instrument/Timer.start:(Lio/micrometer/core/instrument/Clock;)Lio/micrometer/core/instrument/Timer$Sample;
      28: putfield      #72                 // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
      31: aload_0
      32: aload_0
      33: getfield      #7                  // Field clock:Lio/micrometer/core/instrument/Clock;
      36: invokeinterface #65,  1           // InterfaceMethod io/micrometer/core/instrument/Clock.monotonicTime:()J
      41: putfield      #5                  // Field lastNextEventNanos:J
      44: aload_1
      45: instanceof    #79                 // class reactor/core/Fuseable$QueueSubscription
      48: ifeq          59
      51: aload_0
      52: aload_1
      53: checkcast     #79                 // class reactor/core/Fuseable$QueueSubscription
      56: putfield      #80                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      59: aload_0
      60: aload_1
      61: putfield      #76                 // Field s:Lorg/reactivestreams/Subscription;
      64: aload_0
      65: getfield      #6                  // Field actual:Lreactor/core/CoreSubscriber;
      68: aload_0
      69: invokeinterface #81,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      74: return

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #82                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          35
       7: aload_0
       8: getfield      #60                 // Field requestedCounter:Lio/micrometer/core/instrument/DistributionSummary;
      11: ifnull        25
      14: aload_0
      15: getfield      #60                 // Field requestedCounter:Lio/micrometer/core/instrument/DistributionSummary;
      18: lload_1
      19: l2d
      20: invokeinterface #83,  3           // InterfaceMethod io/micrometer/core/instrument/DistributionSummary.record:(D)V
      25: aload_0
      26: getfield      #76                 // Field s:Lorg/reactivestreams/Subscription;
      29: lload_1
      30: invokeinterface #84,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      35: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #72                 // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
       4: aload_0
       5: getfield      #30                 // Field subscribeToCancelTimer:Lio/micrometer/core/instrument/Timer;
       8: invokevirtual #73                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      11: pop2
      12: aload_0
      13: getfield      #76                 // Field s:Lorg/reactivestreams/Subscription;
      16: invokeinterface #85,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      21: return

  private static io.micrometer.core.instrument.Timer lambda$new$0(io.micrometer.core.instrument.Timer$Builder, io.micrometer.core.instrument.MeterRegistry, java.lang.Throwable);
    Code:
       0: aload_0
       1: ldc           #22                 // String exception
       3: aload_2
       4: invokevirtual #86                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       7: invokevirtual #87                 // Method java/lang/Class.getName:()Ljava/lang/String;
      10: invokevirtual #21                 // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      13: aload_1
      14: invokevirtual #26                 // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      17: areturn
}
