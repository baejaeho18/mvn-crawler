Compiled from "FluxCreate.java"
final class reactor.core.publisher.FluxCreate$IgnoreSink<T> extends reactor.core.publisher.FluxCreate$BaseSink<T> {
  reactor.core.publisher.FluxCreate$IgnoreSink(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxCreate$BaseSink."<init>":(Lreactor/core/CoreSubscriber;)V
       5: return

  public reactor.core.publisher.FluxSink<T> next(T);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method isTerminated:()Z
       4: ifeq          17
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field ctx:Lreactor/util/context/Context;
      12: invokestatic  #4                  // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: aload_0
      16: areturn
      17: aload_0
      18: invokevirtual #5                  // Method isCancelled:()Z
      21: ifeq          34
      24: aload_1
      25: aload_0
      26: getfield      #3                  // Field ctx:Lreactor/util/context/Context;
      29: invokestatic  #6                  // Method reactor/core/publisher/Operators.onDiscard:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      32: aload_0
      33: areturn
      34: aload_0
      35: getfield      #7                  // Field actual:Lreactor/core/CoreSubscriber;
      38: aload_1
      39: invokeinterface #8,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      44: aload_0
      45: getfield      #9                  // Field requested:J
      48: lstore_2
      49: lload_2
      50: lconst_0
      51: lcmp
      52: ifeq          69
      55: getstatic     #10                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      58: aload_0
      59: lload_2
      60: lload_2
      61: lconst_1
      62: lsub
      63: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.compareAndSet:(Ljava/lang/Object;JJ)Z
      66: ifeq          71
      69: aload_0
      70: areturn
      71: goto          44

  public java.lang.String toString();
    Code:
       0: new           #12                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #14                 // String FluxSink(
       9: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: getstatic     #16                 // Field reactor/core/publisher/FluxSink$OverflowStrategy.IGNORE:Lreactor/core/publisher/FluxSink$OverflowStrategy;
      15: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      18: ldc           #18                 // String )
      20: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      26: areturn
}
