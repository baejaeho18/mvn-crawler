Compiled from "FluxEmpty.java"
final class reactor.core.publisher.FluxEmpty extends reactor.core.publisher.Flux<java.lang.Object> implements reactor.core.Fuseable$ScalarCallable<java.lang.Object>, reactor.core.publisher.SourceProducer<java.lang.Object> {
  private static final reactor.core.publisher.Flux<java.lang.Object> INSTANCE;

  private reactor.core.publisher.FluxEmpty();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Flux."<init>":()V
       4: return

  public void subscribe(reactor.core.CoreSubscriber<? super java.lang.Object>);
    Code:
       0: aload_1
       1: invokestatic  #2                  // Method reactor/core/publisher/Operators.complete:(Lorg/reactivestreams/Subscriber;)V
       4: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aconst_null
       1: areturn

  public static <T> reactor.core.publisher.Flux<T> instance();
    Code:
       0: getstatic     #3                  // Field INSTANCE:Lreactor/core/publisher/Flux;
       3: areturn

  public java.lang.Object call() throws java.lang.Exception;
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: new           #4                  // class reactor/core/publisher/FluxEmpty
       3: dup
       4: invokespecial #5                  // Method "<init>":()V
       7: putstatic     #3                  // Field INSTANCE:Lreactor/core/publisher/Flux;
      10: return
}
