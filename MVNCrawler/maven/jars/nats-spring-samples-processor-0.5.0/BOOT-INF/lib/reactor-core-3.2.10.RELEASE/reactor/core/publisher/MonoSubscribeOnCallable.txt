Compiled from "MonoSubscribeOnCallable.java"
final class reactor.core.publisher.MonoSubscribeOnCallable<T> extends reactor.core.publisher.Mono<T> implements reactor.core.Fuseable, reactor.core.Scannable {
  final java.util.concurrent.Callable<? extends T> callable;

  final reactor.core.scheduler.Scheduler scheduler;

  reactor.core.publisher.MonoSubscribeOnCallable(java.util.concurrent.Callable<? extends T>, reactor.core.scheduler.Scheduler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #2                  // String callable
       8: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #4                  // class java/util/concurrent/Callable
      14: putfield      #5                  // Field callable:Ljava/util/concurrent/Callable;
      17: aload_0
      18: aload_2
      19: ldc           #6                  // String scheduler
      21: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      24: checkcast     #7                  // class reactor/core/scheduler/Scheduler
      27: putfield      #8                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      30: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #9                  // class reactor/core/publisher/FluxSubscribeOnCallable$CallableSubscribeOnSubscription
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #5                  // Field callable:Ljava/util/concurrent/Callable;
       9: aload_0
      10: getfield      #8                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      13: invokespecial #10                 // Method reactor/core/publisher/FluxSubscribeOnCallable$CallableSubscribeOnSubscription."<init>":(Lreactor/core/CoreSubscriber;Ljava/util/concurrent/Callable;Lreactor/core/scheduler/Scheduler;)V
      16: astore_2
      17: aload_1
      18: aload_2
      19: invokeinterface #11,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      24: aload_2
      25: aload_0
      26: getfield      #8                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      29: aload_2
      30: invokeinterface #12,  2           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;)Lreactor/core/Disposable;
      35: invokevirtual #13                 // Method reactor/core/publisher/FluxSubscribeOnCallable$CallableSubscribeOnSubscription.setMainFuture:(Lreactor/core/Disposable;)V
      38: goto          66
      41: astore_3
      42: aload_2
      43: getfield      #15                 // Field reactor/core/publisher/FluxSubscribeOnCallable$CallableSubscribeOnSubscription.state:I
      46: iconst_4
      47: if_icmpeq     66
      50: aload_1
      51: aload_3
      52: aload_1
      53: invokeinterface #16,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      58: invokestatic  #17                 // Method reactor/core/publisher/Operators.onRejectedExecution:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/RuntimeException;
      61: invokeinterface #18,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      66: return
    Exception table:
       from    to  target type
          24    38    41   Class java/util/concurrent/RejectedExecutionException

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field reactor/core/Scannable$Attr.RUN_ON:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #8                  // Field scheduler:Lreactor/core/scheduler/Scheduler;
      11: areturn
      12: aconst_null
      13: areturn
}
