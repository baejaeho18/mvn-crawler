Compiled from "FluxDoOnEach.java"
class reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber<T> implements reactor.core.publisher.InnerOperator<T, T>, reactor.core.publisher.Signal<T> {
  static final short STATE_FLUX_START;

  static final short STATE_MONO_START;

  static final short STATE_SKIP_HANDLER;

  static final short STATE_DONE;

  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.util.context.Context cachedContext;

  final java.util.function.Consumer<? super reactor.core.publisher.Signal<T>> onSignal;

  T t;

  org.reactivestreams.Subscription s;

  reactor.core.Fuseable$QueueSubscription<T> qs;

  short state;

  reactor.core.publisher.FluxDoOnEach$DoOnEachSubscriber(reactor.core.CoreSubscriber<? super T>, java.util.function.Consumer<? super reactor.core.publisher.Signal<T>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      24: aload_0
      25: iload_3
      26: ifeq          33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: putfield      #7                  // Field state:S
      37: return

  public void request(long);
    Code:
       0: aload_0
       1: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       4: lload_1
       5: invokeinterface #9,  3            // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      10: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       4: invokeinterface #10,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
       9: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
       4: aload_1
       5: invokestatic  #11                 // Method reactor/core/publisher/Operators.validate:(Lorg/reactivestreams/Subscription;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          34
      11: aload_0
      12: aload_1
      13: putfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      16: aload_0
      17: aload_1
      18: invokestatic  #12                 // Method reactor/core/publisher/Operators.as:(Lorg/reactivestreams/Subscription;)Lreactor/core/Fuseable$QueueSubscription;
      21: putfield      #13                 // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      24: aload_0
      25: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      28: aload_0
      29: invokeinterface #14,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      34: return

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #15                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #16                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     36
      19: aload_0
      20: getfield      #7                  // Field state:S
      23: iconst_3
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokestatic  #17                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: areturn
      36: aload_0
      37: aload_1
      38: invokespecial #18                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      41: areturn

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:S
       4: iconst_3
       5: if_icmpne     17
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      13: invokestatic  #19                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      16: return
      17: aload_0
      18: aload_1
      19: putfield      #20                 // Field t:Ljava/lang/Object;
      22: aload_0
      23: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      26: aload_0
      27: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      32: goto          54
      35: astore_2
      36: aload_0
      37: aload_0
      38: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      41: aload_2
      42: aload_1
      43: aload_0
      44: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      47: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      50: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
      53: return
      54: aload_0
      55: getfield      #7                  // Field state:S
      58: iconst_1
      59: if_icmpne     109
      62: aload_0
      63: iconst_2
      64: putfield      #7                  // Field state:S
      67: aload_0
      68: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      71: aload_0
      72: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      75: invokestatic  #25                 // InterfaceMethod reactor/core/publisher/Signal.complete:(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      78: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      83: goto          109
      86: astore_2
      87: aload_0
      88: iconst_1
      89: putfield      #7                  // Field state:S
      92: aload_0
      93: aload_0
      94: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      97: aload_2
      98: aload_0
      99: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
     102: invokestatic  #26                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     105: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
     108: return
     109: aload_0
     110: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     113: aload_1
     114: invokeinterface #27,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     119: return
    Exception table:
       from    to  target type
          17    32    35   Class java/lang/Throwable
          67    83    86   Class java/lang/Throwable

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:S
       4: iconst_3
       5: if_icmpne     17
       8: aload_1
       9: aload_0
      10: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      13: invokestatic  #28                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      16: return
      17: aload_0
      18: getfield      #7                  // Field state:S
      21: iconst_2
      22: if_icmpge     29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: istore_2
      31: aload_0
      32: iconst_3
      33: putfield      #7                  // Field state:S
      36: iload_2
      37: ifeq          72
      40: aload_0
      41: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      44: aload_1
      45: aload_0
      46: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      49: invokestatic  #29                 // InterfaceMethod reactor/core/publisher/Signal.error:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      52: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      57: goto          72
      60: astore_3
      61: aconst_null
      62: aload_3
      63: aload_1
      64: aload_0
      65: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      68: invokestatic  #23                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      71: astore_1
      72: aload_0
      73: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      76: aload_1
      77: invokeinterface #30,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      82: goto          103
      85: astore_3
      86: aload_3
      87: invokestatic  #32                 // Method reactor/core/Exceptions.isErrorCallbackNotImplemented:(Ljava/lang/Throwable;)Z
      90: ifne          103
      93: aload_3
      94: invokevirtual #33                 // Method java/lang/UnsupportedOperationException.getCause:()Ljava/lang/Throwable;
      97: aload_1
      98: if_acmpeq     103
     101: aload_3
     102: athrow
     103: return
    Exception table:
       from    to  target type
          40    57    60   Class java/lang/Throwable
          72    82    85   Class java/lang/UnsupportedOperationException

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #7                  // Field state:S
       4: iconst_3
       5: if_icmpne     9
       8: return
       9: aload_0
      10: getfield      #7                  // Field state:S
      13: istore_1
      14: aload_0
      15: iconst_3
      16: putfield      #7                  // Field state:S
      19: iload_1
      20: iconst_2
      21: if_icmpge     66
      24: aload_0
      25: getfield      #5                  // Field onSignal:Ljava/util/function/Consumer;
      28: aload_0
      29: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      32: invokestatic  #25                 // InterfaceMethod reactor/core/publisher/Signal.complete:(Lreactor/util/context/Context;)Lreactor/core/publisher/Signal;
      35: invokeinterface #21,  2           // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      40: goto          66
      43: astore_2
      44: aload_0
      45: iload_1
      46: putfield      #7                  // Field state:S
      49: aload_0
      50: aload_0
      51: getfield      #8                  // Field s:Lorg/reactivestreams/Subscription;
      54: aload_2
      55: aload_0
      56: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
      59: invokestatic  #26                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      62: invokevirtual #24                 // Method onError:(Ljava/lang/Throwable;)V
      65: return
      66: aload_0
      67: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      70: invokeinterface #34,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      75: return
    Exception table:
       from    to  target type
          24    40    43   Class java/lang/Throwable

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Throwable getThrowable();
    Code:
       0: aconst_null
       1: areturn

  public org.reactivestreams.Subscription getSubscription();
    Code:
       0: aconst_null
       1: areturn

  public T get();
    Code:
       0: aload_0
       1: getfield      #20                 // Field t:Ljava/lang/Object;
       4: areturn

  public reactor.util.context.Context getContext();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cachedContext:Lreactor/util/context/Context;
       4: areturn

  public reactor.core.publisher.SignalType getType();
    Code:
       0: getstatic     #35                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
       3: areturn

  public java.lang.String toString();
    Code:
       0: new           #36                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #38                 // String doOnEach_onNext(
       9: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #20                 // Field t:Ljava/lang/Object;
      16: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #41                 // String )
      21: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn
}
