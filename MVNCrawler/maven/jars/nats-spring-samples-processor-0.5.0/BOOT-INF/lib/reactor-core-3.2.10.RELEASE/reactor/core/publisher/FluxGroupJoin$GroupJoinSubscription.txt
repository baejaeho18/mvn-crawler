Compiled from "FluxGroupJoin.java"
final class reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription<TLeft, TRight, TLeftEnd, TRightEnd, R> implements reactor.core.publisher.FluxGroupJoin$JoinSupport<R> {
  final java.util.Queue<java.lang.Object> queue;

  final java.util.function.BiPredicate<java.lang.Object, java.lang.Object> queueBiOffer;

  final reactor.core.Disposable$Composite cancellations;

  final java.util.Map<java.lang.Integer, reactor.core.publisher.UnicastProcessor<TRight>> lefts;

  final java.util.Map<java.lang.Integer, TRight> rights;

  final java.util.function.Function<? super TLeft, ? extends org.reactivestreams.Publisher<TLeftEnd>> leftEnd;

  final java.util.function.Function<? super TRight, ? extends org.reactivestreams.Publisher<TRightEnd>> rightEnd;

  final java.util.function.BiFunction<? super TLeft, ? super reactor.core.publisher.Flux<TRight>, ? extends R> resultSelector;

  final java.util.function.Supplier<? extends java.util.Queue<TRight>> processorQueueSupplier;

  final reactor.core.CoreSubscriber<? super R> actual;

  int leftIndex;

  int rightIndex;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription> WIP;

  volatile int active;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription> ACTIVE;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription> REQUESTED;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription, java.lang.Throwable> ERROR;

  static final java.lang.Integer LEFT_VALUE;

  static final java.lang.Integer RIGHT_VALUE;

  static final java.lang.Integer LEFT_CLOSE;

  static final java.lang.Integer RIGHT_CLOSE;

  reactor.core.publisher.FluxGroupJoin$GroupJoinSubscription(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super TLeft, ? extends org.reactivestreams.Publisher<TLeftEnd>>, java.util.function.Function<? super TRight, ? extends org.reactivestreams.Publisher<TRightEnd>>, java.util.function.BiFunction<? super TLeft, ? super reactor.core.publisher.Flux<TRight>, ? extends R>, java.util.function.Supplier<? extends java.util.Queue<TRight>>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: invokestatic  #3                  // Method reactor/core/Disposables.composite:()Lreactor/core/Disposable$Composite;
      13: putfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      16: aload_0
      17: aload         5
      19: putfield      #5                  // Field processorQueueSupplier:Ljava/util/function/Supplier;
      22: aload_0
      23: invokestatic  #6                  // Method reactor/util/concurrent/Queues.unboundedMultiproducer:()Ljava/util/function/Supplier;
      26: invokeinterface #7,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      31: checkcast     #8                  // class java/util/Queue
      34: putfield      #9                  // Field queue:Ljava/util/Queue;
      37: aload_0
      38: aload_0
      39: getfield      #9                  // Field queue:Ljava/util/Queue;
      42: checkcast     #10                 // class java/util/function/BiPredicate
      45: putfield      #11                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
      48: aload_0
      49: new           #12                 // class java/util/LinkedHashMap
      52: dup
      53: invokespecial #13                 // Method java/util/LinkedHashMap."<init>":()V
      56: putfield      #14                 // Field lefts:Ljava/util/Map;
      59: aload_0
      60: new           #12                 // class java/util/LinkedHashMap
      63: dup
      64: invokespecial #13                 // Method java/util/LinkedHashMap."<init>":()V
      67: putfield      #15                 // Field rights:Ljava/util/Map;
      70: aload_0
      71: aload_2
      72: putfield      #16                 // Field leftEnd:Ljava/util/function/Function;
      75: aload_0
      76: aload_3
      77: putfield      #17                 // Field rightEnd:Ljava/util/function/Function;
      80: aload_0
      81: aload         4
      83: putfield      #18                 // Field resultSelector:Ljava/util/function/BiFunction;
      86: getstatic     #19                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      89: aload_0
      90: iconst_2
      91: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      94: return

  public final reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #14                 // Field lefts:Ljava/util/Map;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: invokeinterface #22,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      14: aload_0
      15: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      18: invokestatic  #23                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
      21: invokeinterface #24,  1           // InterfaceMethod reactor/core/Scannable.inners:()Ljava/util/stream/Stream;
      26: invokestatic  #25                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      29: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #26                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #27                 // Field requested:J
      11: invokestatic  #28                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: areturn
      15: aload_1
      16: getstatic     #29                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      19: if_acmpne     35
      22: aload_0
      23: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      26: invokeinterface #30,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
      31: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: areturn
      35: aload_1
      36: getstatic     #32                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      39: if_acmpne     57
      42: aload_0
      43: getfield      #9                  // Field queue:Ljava/util/Queue;
      46: invokeinterface #33,  1           // InterfaceMethod java/util/Queue.size:()I
      51: iconst_2
      52: idiv
      53: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_1
      58: getstatic     #35                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      61: if_acmpne     80
      64: aload_0
      65: getfield      #36                 // Field active:I
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: invokestatic  #31                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: areturn
      80: aload_1
      81: getstatic     #37                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      84: if_acmpne     92
      87: aload_0
      88: getfield      #38                 // Field error:Ljava/lang/Throwable;
      91: areturn
      92: aload_0
      93: aload_1
      94: invokespecial #39                 // InterfaceMethod reactor/core/publisher/FluxGroupJoin$JoinSupport.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      97: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #40                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          16
       7: getstatic     #41                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #42                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
       4: invokeinterface #30,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      17: invokeinterface #43,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      22: getstatic     #44                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      29: ifne          41
      32: aload_0
      33: getfield      #9                  // Field queue:Ljava/util/Queue;
      36: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.clear:()V
      41: return

  void errorAll(org.reactivestreams.Subscriber<?>);
    Code:
       0: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #48                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
       7: astore_2
       8: aload_0
       9: getfield      #14                 // Field lefts:Ljava/util/Map;
      12: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      17: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          52
      32: aload_3
      33: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #52                 // class reactor/core/publisher/UnicastProcessor
      41: astore        4
      43: aload         4
      45: aload_2
      46: invokevirtual #53                 // Method reactor/core/publisher/UnicastProcessor.onError:(Ljava/lang/Throwable;)V
      49: goto          23
      52: aload_0
      53: getfield      #14                 // Field lefts:Ljava/util/Map;
      56: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
      61: aload_0
      62: getfield      #15                 // Field rights:Ljava/util/Map;
      65: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
      70: aload_1
      71: aload_2
      72: invokeinterface #55,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      77: return

  void drain();
    Code:
       0: getstatic     #44                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #9                  // Field queue:Ljava/util/Queue;
      17: astore_2
      18: aload_0
      19: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      22: astore_3
      23: aload_0
      24: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      27: invokeinterface #30,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
      32: ifeq          42
      35: aload_2
      36: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.clear:()V
      41: return
      42: aload_0
      43: getfield      #38                 // Field error:Ljava/lang/Throwable;
      46: astore        4
      48: aload         4
      50: ifnull        74
      53: aload_2
      54: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.clear:()V
      59: aload_0
      60: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      63: invokeinterface #43,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      68: aload_0
      69: aload_3
      70: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
      73: return
      74: aload_0
      75: getfield      #36                 // Field active:I
      78: ifne          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        5
      88: aload_2
      89: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      94: checkcast     #58                 // class java/lang/Integer
      97: astore        6
      99: aload         6
     101: ifnonnull     108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: istore        7
     111: iload         5
     113: ifeq          201
     116: iload         7
     118: ifeq          201
     121: aload_0
     122: getfield      #14                 // Field lefts:Ljava/util/Map;
     125: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     130: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     135: astore        8
     137: aload         8
     139: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     144: ifeq          167
     147: aload         8
     149: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     154: checkcast     #52                 // class reactor/core/publisher/UnicastProcessor
     157: astore        9
     159: aload         9
     161: invokevirtual #59                 // Method reactor/core/publisher/UnicastProcessor.onComplete:()V
     164: goto          137
     167: aload_0
     168: getfield      #14                 // Field lefts:Ljava/util/Map;
     171: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
     176: aload_0
     177: getfield      #15                 // Field rights:Ljava/util/Map;
     180: invokeinterface #54,  1           // InterfaceMethod java/util/Map.clear:()V
     185: aload_0
     186: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     189: invokeinterface #43,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     194: aload_3
     195: invokeinterface #60,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     200: return
     201: iload         7
     203: ifeq          209
     206: goto          883
     209: aload_2
     210: invokeinterface #57,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     215: astore        8
     217: aload         6
     219: getstatic     #61                 // Field LEFT_VALUE:Ljava/lang/Integer;
     222: if_acmpne     557
     225: aload         8
     227: astore        9
     229: new           #52                 // class reactor/core/publisher/UnicastProcessor
     232: dup
     233: aload_0
     234: getfield      #5                  // Field processorQueueSupplier:Ljava/util/function/Supplier;
     237: invokeinterface #7,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
     242: checkcast     #8                  // class java/util/Queue
     245: invokespecial #62                 // Method reactor/core/publisher/UnicastProcessor."<init>":(Ljava/util/Queue;)V
     248: astore        10
     250: aload_0
     251: dup
     252: getfield      #63                 // Field leftIndex:I
     255: dup_x1
     256: iconst_1
     257: iadd
     258: putfield      #63                 // Field leftIndex:I
     261: istore        11
     263: aload_0
     264: getfield      #14                 // Field lefts:Ljava/util/Map;
     267: iload         11
     269: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     272: aload         10
     274: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     279: pop
     280: aload_0
     281: getfield      #16                 // Field leftEnd:Ljava/util/function/Function;
     284: aload         9
     286: invokeinterface #65,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     291: ldc           #66                 // String The leftEnd returned a null Publisher
     293: invokestatic  #67                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     296: checkcast     #68                 // class org/reactivestreams/Publisher
     299: astore        12
     301: goto          337
     304: astore        13
     306: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     309: aload_0
     310: aload_0
     311: aload         13
     313: aload         9
     315: aload_0
     316: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     319: invokeinterface #70,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     324: invokestatic  #71                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     327: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     330: pop
     331: aload_0
     332: aload_3
     333: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     336: return
     337: new           #73                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     340: dup
     341: aload_0
     342: iconst_1
     343: iload         11
     345: invokespecial #74                 // Method reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber."<init>":(Lreactor/core/publisher/FluxGroupJoin$JoinSupport;ZI)V
     348: astore        13
     350: aload_0
     351: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     354: aload         13
     356: invokeinterface #75,  2           // InterfaceMethod reactor/core/Disposable$Composite.add:(Lreactor/core/Disposable;)Z
     361: pop
     362: aload         12
     364: aload         13
     366: invokeinterface #76,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     371: aload_0
     372: getfield      #38                 // Field error:Ljava/lang/Throwable;
     375: astore        4
     377: aload         4
     379: ifnull        403
     382: aload_0
     383: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     386: invokeinterface #43,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     391: aload_2
     392: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.clear:()V
     397: aload_0
     398: aload_3
     399: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     402: return
     403: aload_0
     404: getfield      #18                 // Field resultSelector:Ljava/util/function/BiFunction;
     407: aload         9
     409: aload         10
     411: invokeinterface #77,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     416: ldc           #78                 // String The resultSelector returned a null value
     418: invokestatic  #67                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     421: astore        14
     423: goto          459
     426: astore        15
     428: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     431: aload_0
     432: aload_0
     433: aload         15
     435: aload         10
     437: aload_0
     438: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     441: invokeinterface #70,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     446: invokestatic  #71                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     449: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     452: pop
     453: aload_0
     454: aload_3
     455: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     458: return
     459: aload_0
     460: getfield      #27                 // Field requested:J
     463: lstore        15
     465: lload         15
     467: lconst_0
     468: lcmp
     469: ifeq          492
     472: aload_3
     473: aload         14
     475: invokeinterface #79,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     480: getstatic     #41                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     483: aload_0
     484: lconst_1
     485: invokestatic  #80                 // Method reactor/core/publisher/Operators.produced:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     488: pop2
     489: goto          509
     492: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     495: aload_0
     496: invokestatic  #81                 // Method reactor/core/Exceptions.failWithOverflow:()Ljava/lang/IllegalStateException;
     499: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     502: pop
     503: aload_0
     504: aload_3
     505: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     508: return
     509: aload_0
     510: getfield      #15                 // Field rights:Ljava/util/Map;
     513: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     518: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     523: astore        17
     525: aload         17
     527: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     532: ifeq          554
     535: aload         17
     537: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     542: astore        18
     544: aload         10
     546: aload         18
     548: invokevirtual #82                 // Method reactor/core/publisher/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     551: goto          525
     554: goto          880
     557: aload         6
     559: getstatic     #83                 // Field RIGHT_VALUE:Ljava/lang/Integer;
     562: if_acmpne     773
     565: aload         8
     567: astore        9
     569: aload_0
     570: dup
     571: getfield      #84                 // Field rightIndex:I
     574: dup_x1
     575: iconst_1
     576: iadd
     577: putfield      #84                 // Field rightIndex:I
     580: istore        10
     582: aload_0
     583: getfield      #15                 // Field rights:Ljava/util/Map;
     586: iload         10
     588: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     591: aload         9
     593: invokeinterface #64,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     598: pop
     599: aload_0
     600: getfield      #17                 // Field rightEnd:Ljava/util/function/Function;
     603: aload         9
     605: invokeinterface #65,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     610: ldc           #85                 // String The rightEnd returned a null Publisher
     612: invokestatic  #67                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     615: checkcast     #68                 // class org/reactivestreams/Publisher
     618: astore        11
     620: goto          656
     623: astore        12
     625: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     628: aload_0
     629: aload_0
     630: aload         12
     632: aload         9
     634: aload_0
     635: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     638: invokeinterface #70,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     643: invokestatic  #71                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     646: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     649: pop
     650: aload_0
     651: aload_3
     652: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     655: return
     656: new           #73                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     659: dup
     660: aload_0
     661: iconst_0
     662: iload         10
     664: invokespecial #74                 // Method reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber."<init>":(Lreactor/core/publisher/FluxGroupJoin$JoinSupport;ZI)V
     667: astore        12
     669: aload_0
     670: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     673: aload         12
     675: invokeinterface #75,  2           // InterfaceMethod reactor/core/Disposable$Composite.add:(Lreactor/core/Disposable;)Z
     680: pop
     681: aload         11
     683: aload         12
     685: invokeinterface #76,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     690: aload_0
     691: getfield      #38                 // Field error:Ljava/lang/Throwable;
     694: astore        4
     696: aload         4
     698: ifnull        722
     701: aload_2
     702: invokeinterface #46,  1           // InterfaceMethod java/util/Queue.clear:()V
     707: aload_0
     708: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     711: invokeinterface #43,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     716: aload_0
     717: aload_3
     718: invokevirtual #56                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     721: return
     722: aload_0
     723: getfield      #14                 // Field lefts:Ljava/util/Map;
     726: invokeinterface #21,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     731: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     736: astore        13
     738: aload         13
     740: invokeinterface #50,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     745: ifeq          770
     748: aload         13
     750: invokeinterface #51,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     755: checkcast     #52                 // class reactor/core/publisher/UnicastProcessor
     758: astore        14
     760: aload         14
     762: aload         9
     764: invokevirtual #82                 // Method reactor/core/publisher/UnicastProcessor.onNext:(Ljava/lang/Object;)V
     767: goto          738
     770: goto          880
     773: aload         6
     775: getstatic     #86                 // Field LEFT_CLOSE:Ljava/lang/Integer;
     778: if_acmpne     835
     781: aload         8
     783: checkcast     #73                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     786: astore        9
     788: aload_0
     789: getfield      #14                 // Field lefts:Ljava/util/Map;
     792: aload         9
     794: getfield      #87                 // Field reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber.index:I
     797: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     800: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     805: checkcast     #52                 // class reactor/core/publisher/UnicastProcessor
     808: astore        10
     810: aload_0
     811: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     814: aload         9
     816: invokeinterface #89,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
     821: pop
     822: aload         10
     824: ifnull        832
     827: aload         10
     829: invokevirtual #59                 // Method reactor/core/publisher/UnicastProcessor.onComplete:()V
     832: goto          880
     835: aload         6
     837: getstatic     #90                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
     840: if_acmpne     880
     843: aload         8
     845: checkcast     #73                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     848: astore        9
     850: aload_0
     851: getfield      #15                 // Field rights:Ljava/util/Map;
     854: aload         9
     856: getfield      #87                 // Field reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber.index:I
     859: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     862: invokeinterface #88,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     867: pop
     868: aload_0
     869: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     872: aload         9
     874: invokeinterface #89,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
     879: pop
     880: goto          23
     883: getstatic     #44                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     886: aload_0
     887: iload_1
     888: ineg
     889: invokevirtual #91                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     892: istore_1
     893: iload_1
     894: ifne          23
     897: goto          900
     900: return
    Exception table:
       from    to  target type
         280   301   304   Class java/lang/Throwable
         403   423   426   Class java/lang/Throwable
         599   620   623   Class java/lang/Throwable

  public void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          26
      11: getstatic     #19                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      18: pop
      19: aload_0
      20: invokevirtual #93                 // Method drain:()V
      23: goto          39
      26: aload_1
      27: aload_0
      28: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      31: invokeinterface #70,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      36: invokestatic  #94                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      39: return

  public void innerComplete(reactor.core.publisher.FluxGroupJoin$LeftRightSubscriber);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
       4: aload_1
       5: invokeinterface #89,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
      10: pop
      11: getstatic     #19                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: invokevirtual #92                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      18: pop
      19: aload_0
      20: invokevirtual #93                 // Method drain:()V
      23: return

  public void innerValue(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
       4: iload_1
       5: ifeq          14
       8: getstatic     #61                 // Field LEFT_VALUE:Ljava/lang/Integer;
      11: goto          17
      14: getstatic     #83                 // Field RIGHT_VALUE:Ljava/lang/Integer;
      17: aload_2
      18: invokeinterface #95,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: invokevirtual #93                 // Method drain:()V
      28: return

  public void innerClose(boolean, reactor.core.publisher.FluxGroupJoin$LeftRightEndSubscriber);
    Code:
       0: aload_0
       1: getfield      #11                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
       4: iload_1
       5: ifeq          14
       8: getstatic     #86                 // Field LEFT_CLOSE:Ljava/lang/Integer;
      11: goto          17
      14: getstatic     #90                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
      17: aload_2
      18: invokeinterface #95,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: invokevirtual #93                 // Method drain:()V
      28: return

  public void innerCloseError(java.lang.Throwable);
    Code:
       0: getstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #72                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #93                 // Method drain:()V
      15: goto          31
      18: aload_1
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: invokeinterface #70,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #94                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      31: return

  static {};
    Code:
       0: ldc           #96                 // class reactor/core/publisher/FluxGroupJoin$GroupJoinSubscription
       2: ldc           #97                 // String wip
       4: invokestatic  #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #44                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #96                 // class reactor/core/publisher/FluxGroupJoin$GroupJoinSubscription
      12: ldc           #99                 // String active
      14: invokestatic  #98                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #19                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: ldc           #96                 // class reactor/core/publisher/FluxGroupJoin$GroupJoinSubscription
      22: ldc           #100                // String requested
      24: invokestatic  #101                // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      27: putstatic     #41                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      30: ldc           #96                 // class reactor/core/publisher/FluxGroupJoin$GroupJoinSubscription
      32: ldc           #69                 // class java/lang/Throwable
      34: ldc           #102                // String error
      36: invokestatic  #103                // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: putstatic     #47                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: iconst_1
      43: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: putstatic     #61                 // Field LEFT_VALUE:Ljava/lang/Integer;
      49: iconst_2
      50: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: putstatic     #83                 // Field RIGHT_VALUE:Ljava/lang/Integer;
      56: iconst_3
      57: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: putstatic     #86                 // Field LEFT_CLOSE:Ljava/lang/Integer;
      63: iconst_4
      64: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: putstatic     #90                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
      70: return
}
