Compiled from "MonoProcessor.java"
final class reactor.core.publisher.MonoProcessor$NextInner<T> extends reactor.core.publisher.Operators$MonoSubscriber<T, T> {
  final reactor.core.publisher.MonoProcessor<T> parent;

  reactor.core.publisher.MonoProcessor$NextInner(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.MonoProcessor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MonoSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field parent:Lreactor/core/publisher/MonoProcessor;
      10: return

  public void cancel();
    Code:
       0: getstatic     #3                  // Field STATE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_4
       5: invokevirtual #5                  // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndSet:(Ljava/lang/Object;I)I
       8: iconst_4
       9: if_icmpeq     20
      12: aload_0
      13: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoProcessor;
      16: aload_0
      17: invokevirtual #6                  // Method reactor/core/publisher/MonoProcessor.remove:(Lreactor/core/publisher/MonoProcessor$NextInner;)V
      20: return

  public void onComplete();
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isCancelled:()Z
       4: ifne          16
       7: aload_0
       8: getfield      #8                  // Field actual:Lreactor/core/CoreSubscriber;
      11: invokeinterface #9,  1            // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      16: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #7                  // Method isCancelled:()Z
       4: ifeq          19
       7: aload_1
       8: aload_0
       9: invokevirtual #10                 // Method currentContext:()Lreactor/util/context/Context;
      12: invokestatic  #11                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      15: pop
      16: goto          29
      19: aload_0
      20: getfield      #8                  // Field actual:Lreactor/core/CoreSubscriber;
      23: aload_1
      24: invokeinterface #12,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      29: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #13                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoProcessor;
      11: areturn
      12: aload_0
      13: aload_1
      14: invokespecial #14                 // Method reactor/core/publisher/Operators$MonoSubscriber.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      17: areturn
}
