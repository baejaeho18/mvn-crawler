Compiled from "Queues.java"
public final class reactor.util.concurrent.Queues {
  public static final int CAPACITY_UNSURE;

  public static final int XS_BUFFER_SIZE;

  public static final int SMALL_BUFFER_SIZE;

  static final java.util.function.Supplier ZERO_SUPPLIER;

  static final java.util.function.Supplier ONE_SUPPLIER;

  static final java.util.function.Supplier XS_SUPPLIER;

  static final java.util.function.Supplier SMALL_SUPPLIER;

  static final java.util.function.Supplier SMALL_UNBOUNDED;

  static final java.util.function.Supplier XS_UNBOUNDED;

  public static final int capacity(java.util.Queue);
    Code:
       0: aload_0
       1: instanceof    #2                  // class reactor/util/concurrent/Queues$ZeroQueue
       4: ifeq          9
       7: iconst_0
       8: ireturn
       9: aload_0
      10: instanceof    #3                  // class reactor/util/concurrent/Queues$OneQueue
      13: ifeq          18
      16: iconst_1
      17: ireturn
      18: aload_0
      19: instanceof    #4                  // class reactor/util/concurrent/SpscLinkedArrayQueue
      22: ifeq          28
      25: ldc           #5                  // int 2147483647
      27: ireturn
      28: aload_0
      29: instanceof    #6                  // class reactor/util/concurrent/SpscArrayQueue
      32: ifeq          43
      35: aload_0
      36: checkcast     #6                  // class reactor/util/concurrent/SpscArrayQueue
      39: invokevirtual #7                  // Method reactor/util/concurrent/SpscArrayQueue.length:()I
      42: ireturn
      43: aload_0
      44: instanceof    #8                  // class reactor/util/concurrent/MpscLinkedQueue
      47: ifeq          53
      50: ldc           #5                  // int 2147483647
      52: ireturn
      53: aload_0
      54: instanceof    #9                  // class java/util/concurrent/BlockingQueue
      57: ifeq          70
      60: aload_0
      61: checkcast     #9                  // class java/util/concurrent/BlockingQueue
      64: invokeinterface #10,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.remainingCapacity:()I
      69: ireturn
      70: aload_0
      71: instanceof    #11                 // class java/util/concurrent/ConcurrentLinkedQueue
      74: ifeq          80
      77: ldc           #5                  // int 2147483647
      79: ireturn
      80: ldc           #13                 // int -2147483648
      82: ireturn

  public static int ceilingNextPowerOfTwo(int);
    Code:
       0: iconst_1
       1: bipush        32
       3: iload_0
       4: iconst_1
       5: isub
       6: invokestatic  #14                 // Method java/lang/Integer.numberOfLeadingZeros:(I)I
       9: isub
      10: ishl
      11: ireturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> get(int);
    Code:
       0: iload_0
       1: ldc           #5                  // int 2147483647
       3: if_icmpne     10
       6: getstatic     #15                 // Field SMALL_UNBOUNDED:Ljava/util/function/Supplier;
       9: areturn
      10: iload_0
      11: getstatic     #16                 // Field XS_BUFFER_SIZE:I
      14: if_icmpne     21
      17: getstatic     #17                 // Field XS_SUPPLIER:Ljava/util/function/Supplier;
      20: areturn
      21: iload_0
      22: getstatic     #18                 // Field SMALL_BUFFER_SIZE:I
      25: if_icmpne     32
      28: getstatic     #19                 // Field SMALL_SUPPLIER:Ljava/util/function/Supplier;
      31: areturn
      32: iload_0
      33: iconst_1
      34: if_icmpne     41
      37: getstatic     #20                 // Field ONE_SUPPLIER:Ljava/util/function/Supplier;
      40: areturn
      41: iload_0
      42: ifne          49
      45: getstatic     #21                 // Field ZERO_SUPPLIER:Ljava/util/function/Supplier;
      48: areturn
      49: bipush        8
      51: iload_0
      52: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      55: istore_1
      56: iload_1
      57: ldc           #23                 // int 10000000
      59: if_icmple     66
      62: getstatic     #15                 // Field SMALL_UNBOUNDED:Ljava/util/function/Supplier;
      65: areturn
      66: iload_1
      67: invokedynamic #24,  0             // InvokeDynamic #0:get:(I)Ljava/util/function/Supplier;
      72: areturn

  public static boolean isPowerOfTwo(int);
    Code:
       0: iload_0
       1: invokestatic  #25                 // Method java/lang/Integer.bitCount:(I)I
       4: iconst_1
       5: if_icmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> empty();
    Code:
       0: getstatic     #21                 // Field ZERO_SUPPLIER:Ljava/util/function/Supplier;
       3: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> one();
    Code:
       0: getstatic     #20                 // Field ONE_SUPPLIER:Ljava/util/function/Supplier;
       3: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> small();
    Code:
       0: getstatic     #19                 // Field SMALL_SUPPLIER:Ljava/util/function/Supplier;
       3: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> unbounded();
    Code:
       0: getstatic     #15                 // Field SMALL_UNBOUNDED:Ljava/util/function/Supplier;
       3: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> unbounded(int);
    Code:
       0: iload_0
       1: getstatic     #16                 // Field XS_BUFFER_SIZE:I
       4: if_icmpne     11
       7: getstatic     #26                 // Field XS_UNBOUNDED:Ljava/util/function/Supplier;
      10: areturn
      11: iload_0
      12: ldc           #5                  // int 2147483647
      14: if_icmpeq     24
      17: iload_0
      18: getstatic     #18                 // Field SMALL_BUFFER_SIZE:I
      21: if_icmpne     28
      24: invokestatic  #27                 // Method unbounded:()Ljava/util/function/Supplier;
      27: areturn
      28: iload_0
      29: invokedynamic #28,  0             // InvokeDynamic #1:get:(I)Ljava/util/function/Supplier;
      34: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> xs();
    Code:
       0: getstatic     #17                 // Field XS_SUPPLIER:Ljava/util/function/Supplier;
       3: areturn

  public static <T> java.util.function.Supplier<java.util.Queue<T>> unboundedMultiproducer();
    Code:
       0: invokedynamic #29,  0             // InvokeDynamic #2:get:()Ljava/util/function/Supplier;
       5: areturn

  private reactor.util.concurrent.Queues();
    Code:
       0: aload_0
       1: invokespecial #30                 // Method java/lang/Object."<init>":()V
       4: return

  private static java.lang.Object lambda$static$5();
    Code:
       0: new           #4                  // class reactor/util/concurrent/SpscLinkedArrayQueue
       3: dup
       4: getstatic     #16                 // Field XS_BUFFER_SIZE:I
       7: invokespecial #31                 // Method reactor/util/concurrent/SpscLinkedArrayQueue."<init>":(I)V
      10: areturn

  private static java.lang.Object lambda$static$4();
    Code:
       0: new           #4                  // class reactor/util/concurrent/SpscLinkedArrayQueue
       3: dup
       4: getstatic     #18                 // Field SMALL_BUFFER_SIZE:I
       7: invokespecial #31                 // Method reactor/util/concurrent/SpscLinkedArrayQueue."<init>":(I)V
      10: areturn

  private static java.lang.Object lambda$static$3();
    Code:
       0: new           #6                  // class reactor/util/concurrent/SpscArrayQueue
       3: dup
       4: getstatic     #18                 // Field SMALL_BUFFER_SIZE:I
       7: invokespecial #32                 // Method reactor/util/concurrent/SpscArrayQueue."<init>":(I)V
      10: areturn

  private static java.lang.Object lambda$static$2();
    Code:
       0: new           #6                  // class reactor/util/concurrent/SpscArrayQueue
       3: dup
       4: getstatic     #16                 // Field XS_BUFFER_SIZE:I
       7: invokespecial #32                 // Method reactor/util/concurrent/SpscArrayQueue."<init>":(I)V
      10: areturn

  private static java.util.Queue lambda$unbounded$1(int);
    Code:
       0: new           #4                  // class reactor/util/concurrent/SpscLinkedArrayQueue
       3: dup
       4: iload_0
       5: invokespecial #31                 // Method reactor/util/concurrent/SpscLinkedArrayQueue."<init>":(I)V
       8: areturn

  private static java.util.Queue lambda$get$0(int);
    Code:
       0: new           #6                  // class reactor/util/concurrent/SpscArrayQueue
       3: dup
       4: iload_0
       5: invokespecial #32                 // Method reactor/util/concurrent/SpscArrayQueue."<init>":(I)V
       8: areturn

  static {};
    Code:
       0: bipush        8
       2: ldc           #33                 // String reactor.bufferSize.x
       4: ldc           #34                 // String 32
       6: invokestatic  #35                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       9: invokestatic  #36                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      12: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      15: putstatic     #16                 // Field XS_BUFFER_SIZE:I
      18: bipush        16
      20: ldc           #37                 // String reactor.bufferSize.small
      22: ldc           #38                 // String 256
      24: invokestatic  #35                 // Method java/lang/System.getProperty:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      27: invokestatic  #36                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
      30: invokestatic  #22                 // Method java/lang/Math.max:(II)I
      33: putstatic     #18                 // Field SMALL_BUFFER_SIZE:I
      36: invokedynamic #39,  0             // InvokeDynamic #3:get:()Ljava/util/function/Supplier;
      41: putstatic     #21                 // Field ZERO_SUPPLIER:Ljava/util/function/Supplier;
      44: invokedynamic #40,  0             // InvokeDynamic #4:get:()Ljava/util/function/Supplier;
      49: putstatic     #20                 // Field ONE_SUPPLIER:Ljava/util/function/Supplier;
      52: invokedynamic #41,  0             // InvokeDynamic #5:get:()Ljava/util/function/Supplier;
      57: putstatic     #17                 // Field XS_SUPPLIER:Ljava/util/function/Supplier;
      60: invokedynamic #42,  0             // InvokeDynamic #6:get:()Ljava/util/function/Supplier;
      65: putstatic     #19                 // Field SMALL_SUPPLIER:Ljava/util/function/Supplier;
      68: invokedynamic #43,  0             // InvokeDynamic #7:get:()Ljava/util/function/Supplier;
      73: putstatic     #15                 // Field SMALL_UNBOUNDED:Ljava/util/function/Supplier;
      76: invokedynamic #44,  0             // InvokeDynamic #8:get:()Ljava/util/function/Supplier;
      81: putstatic     #26                 // Field XS_UNBOUNDED:Ljava/util/function/Supplier;
      84: return
}
