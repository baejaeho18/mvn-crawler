Compiled from "MonoMetrics.java"
final class reactor.core.publisher.MonoMetrics$MicrometerMonoMetricsFuseableSubscriber<T> extends reactor.core.publisher.MonoMetrics$MicrometerMonoMetricsSubscriber<T> implements reactor.core.Fuseable, reactor.core.Fuseable$QueueSubscription<T> {
  private int mode;

  reactor.core.publisher.MonoMetrics$MicrometerMonoMetricsFuseableSubscriber(reactor.core.CoreSubscriber<? super T>, io.micrometer.core.instrument.MeterRegistry, io.micrometer.core.instrument.Clock, java.lang.String, java.util.List<io.micrometer.core.instrument.Tag>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: aload         5
       8: invokespecial #1                  // Method reactor/core/publisher/MonoMetrics$MicrometerMonoMetricsSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lio/micrometer/core/instrument/MeterRegistry;Lio/micrometer/core/instrument/Clock;Ljava/lang/String;Ljava/util/List;)V
      11: return

  public void onNext(T);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method reactor/core/publisher/MonoMetrics$MicrometerMonoMetricsSubscriber.onNext:(Ljava/lang/Object;)V
       5: return

  public int requestFusion(int);
    Code:
       0: aload_0
       1: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        26
       7: aload_0
       8: aload_0
       9: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      12: iload_1
      13: invokeinterface #4,  2            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.requestFusion:(I)I
      18: putfield      #5                  // Field mode:I
      21: aload_0
      22: getfield      #5                  // Field mode:I
      25: ireturn
      26: iconst_0
      27: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnonnull     9
       7: aconst_null
       8: areturn
       9: aload_0
      10: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      13: invokeinterface #7,  1            // InterfaceMethod reactor/core/Fuseable$QueueSubscription.poll:()Ljava/lang/Object;
      18: astore_1
      19: aload_1
      20: ifnonnull     43
      23: aload_0
      24: getfield      #5                  // Field mode:I
      27: iconst_1
      28: if_icmpne     43
      31: aload_0
      32: getfield      #8                  // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
      35: aload_0
      36: getfield      #9                  // Field subscribeToCompleteTimer:Lio/micrometer/core/instrument/Timer;
      39: invokevirtual #10                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      42: pop2
      43: aload_1
      44: areturn
      45: astore_1
      46: aload_0
      47: getfield      #12                 // Field subscribeToErrorTimerFactory:Ljava/util/function/Function;
      50: aload_1
      51: invokeinterface #13,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      56: checkcast     #14                 // class io/micrometer/core/instrument/Timer
      59: astore_2
      60: aload_0
      61: getfield      #8                  // Field subscribeToTerminateSample:Lio/micrometer/core/instrument/Timer$Sample;
      64: aload_2
      65: invokevirtual #10                 // Method io/micrometer/core/instrument/Timer$Sample.stop:(Lio/micrometer/core/instrument/Timer;)J
      68: pop2
      69: aload_1
      70: athrow
    Exception table:
       from    to  target type
           9    44    45   Class java/lang/Throwable

  public void clear();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        16
       7: aload_0
       8: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #15,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.clear:()V
      16: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnull        19
       7: aload_0
       8: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      11: invokeinterface #16,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.isEmpty:()Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
       4: ifnonnull     11
       7: iconst_0
       8: goto          20
      11: aload_0
      12: getfield      #3                  // Field qs:Lreactor/core/Fuseable$QueueSubscription;
      15: invokeinterface #17,  1           // InterfaceMethod reactor/core/Fuseable$QueueSubscription.size:()I
      20: ireturn
}
