Compiled from "FluxRange.java"
final class reactor.core.publisher.FluxRange$RangeSubscription implements reactor.core.publisher.InnerProducer<java.lang.Integer>, reactor.core.Fuseable$SynchronousSubscription<java.lang.Integer> {
  final reactor.core.CoreSubscriber<? super java.lang.Integer> actual;

  final long end;

  volatile boolean cancelled;

  long index;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxRange$RangeSubscription> REQUESTED;

  reactor.core.publisher.FluxRange$RangeSubscription(reactor.core.CoreSubscriber<? super java.lang.Integer>, long, long);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: lload_2
      11: putfield      #3                  // Field index:J
      14: aload_0
      15: lload         4
      17: putfield      #4                  // Field end:J
      20: return

  public reactor.core.CoreSubscriber<? super java.lang.Integer> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #5                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          40
       7: getstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #7                  // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: lconst_0
      16: lcmp
      17: ifne          40
      20: lload_1
      21: ldc2_w        #9                  // long 9223372036854775807l
      24: lcmp
      25: ifne          35
      28: aload_0
      29: invokevirtual #11                 // Method fastPath:()V
      32: goto          40
      35: aload_0
      36: lload_1
      37: invokevirtual #12                 // Method slowPath:(J)V
      40: return

  public void cancel();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #13                 // Field cancelled:Z
       5: return

  void fastPath();
    Code:
       0: aload_0
       1: getfield      #4                  // Field end:J
       4: lstore_1
       5: aload_0
       6: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: astore_3
      10: aload_0
      11: getfield      #3                  // Field index:J
      14: lstore        4
      16: lload         4
      18: lload_1
      19: lcmp
      20: ifeq          52
      23: aload_0
      24: getfield      #13                 // Field cancelled:Z
      27: ifeq          31
      30: return
      31: aload_3
      32: lload         4
      34: l2i
      35: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      38: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      43: lload         4
      45: lconst_1
      46: ladd
      47: lstore        4
      49: goto          16
      52: aload_0
      53: getfield      #13                 // Field cancelled:Z
      56: ifeq          60
      59: return
      60: aload_3
      61: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
      66: return

  void slowPath(long);
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: astore_3
       5: aload_0
       6: getfield      #4                  // Field end:J
       9: lstore        4
      11: lconst_0
      12: lstore        6
      14: aload_0
      15: getfield      #3                  // Field index:J
      18: lstore        8
      20: aload_0
      21: getfield      #13                 // Field cancelled:Z
      24: ifeq          28
      27: return
      28: lload         6
      30: lload_1
      31: lcmp
      32: ifeq          78
      35: lload         8
      37: lload         4
      39: lcmp
      40: ifeq          78
      43: aload_3
      44: lload         8
      46: l2i
      47: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      50: invokeinterface #15,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
      55: aload_0
      56: getfield      #13                 // Field cancelled:Z
      59: ifeq          63
      62: return
      63: lload         6
      65: lconst_1
      66: ladd
      67: lstore        6
      69: lload         8
      71: lconst_1
      72: ladd
      73: lstore        8
      75: goto          28
      78: aload_0
      79: getfield      #13                 // Field cancelled:Z
      82: ifeq          86
      85: return
      86: lload         8
      88: lload         4
      90: lcmp
      91: ifne          101
      94: aload_3
      95: invokeinterface #16,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     100: return
     101: aload_0
     102: getfield      #17                 // Field requested:J
     105: lstore_1
     106: lload_1
     107: lload         6
     109: lcmp
     110: ifne          20
     113: aload_0
     114: lload         8
     116: putfield      #3                  // Field index:J
     119: getstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     122: aload_0
     123: lload         6
     125: lneg
     126: invokevirtual #18                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
     129: lstore_1
     130: lload_1
     131: lconst_0
     132: lcmp
     133: ifne          137
     136: return
     137: lconst_0
     138: lstore        6
     140: goto          20

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #19                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #13                 // Field cancelled:Z
      11: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aload_1
      16: getstatic     #21                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      19: if_acmpne     30
      22: aload_0
      23: getfield      #17                 // Field requested:J
      26: invokestatic  #22                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      29: areturn
      30: aload_1
      31: getstatic     #23                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      34: if_acmpne     45
      37: aload_0
      38: invokevirtual #24                 // Method isEmpty:()Z
      41: invokestatic  #20                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      44: areturn
      45: aload_0
      46: aload_1
      47: invokespecial #25                 // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      50: areturn

  public java.lang.Integer poll();
    Code:
       0: aload_0
       1: getfield      #3                  // Field index:J
       4: lstore_1
       5: lload_1
       6: aload_0
       7: getfield      #4                  // Field end:J
      10: lcmp
      11: ifne          16
      14: aconst_null
      15: areturn
      16: aload_0
      17: lload_1
      18: lconst_1
      19: ladd
      20: putfield      #3                  // Field index:J
      23: lload_1
      24: l2i
      25: invokestatic  #14                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      28: areturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #3                  // Field index:J
       4: aload_0
       5: getfield      #4                  // Field end:J
       8: lcmp
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void clear();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #4                  // Field end:J
       5: putfield      #3                  // Field index:J
       8: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #4                  // Field end:J
       4: aload_0
       5: getfield      #3                  // Field index:J
       8: lsub
       9: l2i
      10: ireturn

  public java.lang.Object poll();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method poll:()Ljava/lang/Integer;
       4: areturn

  static {};
    Code:
       0: ldc           #27                 // class reactor/core/publisher/FluxRange$RangeSubscription
       2: ldc           #28                 // String requested
       4: invokestatic  #29                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       7: putstatic     #6                  // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: return
}
