Compiled from "Scannable.java"
public interface reactor.core.Scannable {
  public static final java.util.regex.Pattern OPERATOR_NAME_UNRELATED_WORDS_PATTERN;

  public static reactor.core.Scannable from(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     8
       4: getstatic     #1                  // Field reactor/core/Scannable$Attr.NULL_SCAN:Lreactor/core/Scannable;
       7: areturn
       8: aload_0
       9: instanceof    #2                  // class reactor/core/Scannable
      12: ifeq          20
      15: aload_0
      16: checkcast     #2                  // class reactor/core/Scannable
      19: areturn
      20: getstatic     #3                  // Field reactor/core/Scannable$Attr.UNAVAILABLE_SCAN:Lreactor/core/Scannable;
      23: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> actuals();
    Code:
       0: aload_0
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.ACTUAL:Lreactor/core/Scannable$Attr;
       4: invokestatic  #5                  // Method reactor/core/Scannable$Attr.recurse:(Lreactor/core/Scannable;Lreactor/core/Scannable$Attr;)Ljava/util/stream/Stream;
       7: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: invokestatic  #6                  // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
       3: areturn

  public default boolean isScanAvailable();
    Code:
       0: iconst_1
       1: ireturn

  public default java.lang.String name();
    Code:
       0: aload_0
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #9                  // class java/lang/String
      12: astore_1
      13: aload_1
      14: ifnull        19
      17: aload_1
      18: areturn
      19: aload_0
      20: invokeinterface #10,  1           // InterfaceMethod parents:()Ljava/util/stream/Stream;
      25: invokedynamic #11,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      30: invokeinterface #12,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      35: invokedynamic #13,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      40: invokeinterface #14,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      45: invokeinterface #15,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      50: aload_0
      51: invokeinterface #16,  1           // InterfaceMethod stepName:()Ljava/lang/String;
      56: invokevirtual #17                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #9                  // class java/lang/String
      62: areturn

  public default java.lang.String stepName();
    Code:
       0: aload_0
       1: invokevirtual #18                 // Method java/lang/Object.toString:()Ljava/lang/String;
       4: astore_1
       5: aload_1
       6: ldc           #19                 // String @
       8: invokevirtual #20                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      11: ifeq          46
      14: aload_1
      15: ldc           #21                 // String $
      17: invokevirtual #20                 // Method java/lang/String.contains:(Ljava/lang/CharSequence;)Z
      20: ifeq          46
      23: aload_1
      24: iconst_0
      25: aload_1
      26: bipush        36
      28: invokevirtual #22                 // Method java/lang/String.indexOf:(I)I
      31: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      34: aload_1
      35: bipush        46
      37: invokevirtual #24                 // Method java/lang/String.lastIndexOf:(I)I
      40: iconst_1
      41: iadd
      42: invokevirtual #25                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      45: astore_1
      46: getstatic     #26                 // Field OPERATOR_NAME_UNRELATED_WORDS_PATTERN:Ljava/util/regex/Pattern;
      49: aload_1
      50: invokevirtual #27                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      53: ldc           #28                 // String
      55: invokevirtual #29                 // Method java/util/regex/Matcher.replaceAll:(Ljava/lang/String;)Ljava/lang/String;
      58: astore_2
      59: aload_2
      60: invokevirtual #30                 // Method java/lang/String.isEmpty:()Z
      63: ifne          97
      66: new           #31                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #32                 // Method java/lang/StringBuilder."<init>":()V
      73: aload_2
      74: iconst_0
      75: iconst_1
      76: invokevirtual #23                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      79: invokevirtual #33                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      82: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: aload_2
      86: iconst_1
      87: invokevirtual #25                 // Method java/lang/String.substring:(I)Ljava/lang/String;
      90: invokevirtual #34                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      93: invokevirtual #35                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      96: areturn
      97: aload_2
      98: areturn

  public default java.util.stream.Stream<java.lang.String> steps();
    Code:
       0: new           #36                 // class java/util/ArrayList
       3: dup
       4: invokespecial #37                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokeinterface #10,  1           // InterfaceMethod parents:()Ljava/util/stream/Stream;
      15: invokestatic  #38                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      18: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      23: checkcast     #40                 // class java/util/Collection
      26: invokeinterface #41,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      31: pop
      32: aload_1
      33: invokestatic  #42                 // Method java/util/Collections.reverse:(Ljava/util/List;)V
      36: aload_1
      37: aload_0
      38: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      43: pop
      44: aload_1
      45: aload_0
      46: invokeinterface #44,  1           // InterfaceMethod actuals:()Ljava/util/stream/Stream;
      51: invokestatic  #38                 // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      54: invokeinterface #39,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      59: checkcast     #40                 // class java/util/Collection
      62: invokeinterface #41,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      67: pop
      68: new           #36                 // class java/util/ArrayList
      71: dup
      72: aload_1
      73: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      78: invokespecial #46                 // Method java/util/ArrayList."<init>":(I)V
      81: astore_2
      82: iconst_0
      83: istore_3
      84: iload_3
      85: aload_1
      86: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
      91: if_icmpge     199
      94: aload_1
      95: iload_3
      96: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     101: checkcast     #2                  // class reactor/core/Scannable
     104: astore        4
     106: aconst_null
     107: astore        5
     109: iload_3
     110: aload_1
     111: invokeinterface #45,  1           // InterfaceMethod java/util/List.size:()I
     116: iconst_1
     117: isub
     118: if_icmpge     135
     121: aload_1
     122: iload_3
     123: iconst_1
     124: iadd
     125: invokeinterface #47,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     130: checkcast     #2                  // class reactor/core/Scannable
     133: astore        5
     135: aload         5
     137: ifnull        179
     140: aload         5
     142: getstatic     #48                 // Field reactor/core/Scannable$Attr.ACTUAL_METADATA:Lreactor/core/Scannable$Attr;
     145: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     150: checkcast     #49                 // class java/lang/Boolean
     153: invokevirtual #50                 // Method java/lang/Boolean.booleanValue:()Z
     156: ifeq          179
     159: aload_2
     160: aload         5
     162: invokeinterface #16,  1           // InterfaceMethod stepName:()Ljava/lang/String;
     167: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     172: pop
     173: iinc          3, 1
     176: goto          193
     179: aload_2
     180: aload         4
     182: invokeinterface #16,  1           // InterfaceMethod stepName:()Ljava/lang/String;
     187: invokeinterface #43,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     192: pop
     193: iinc          3, 1
     196: goto          84
     199: aload_2
     200: invokeinterface #51,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
     205: areturn

  public default java.util.stream.Stream<? extends reactor.core.Scannable> parents();
    Code:
       0: aload_0
       1: getstatic     #52                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: invokestatic  #5                  // Method reactor/core/Scannable$Attr.recurse:(Lreactor/core/Scannable;Lreactor/core/Scannable$Attr;)Ljava/util/stream/Stream;
       7: areturn

  public abstract java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);

  public default <T> T scan(reactor.core.Scannable$Attr<T>);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokeinterface #53,  2           // InterfaceMethod scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       8: invokevirtual #54                 // Method reactor/core/Scannable$Attr.tryConvert:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_2
      12: aload_2
      13: ifnonnull     21
      16: aload_1
      17: invokevirtual #55                 // Method reactor/core/Scannable$Attr.defaultValue:()Ljava/lang/Object;
      20: areturn
      21: aload_2
      22: areturn

  public default <T> T scanOrDefault(reactor.core.Scannable$Attr<T>, T);
    Code:
       0: aload_1
       1: aload_0
       2: aload_1
       3: invokeinterface #53,  2           // InterfaceMethod scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       8: invokevirtual #54                 // Method reactor/core/Scannable$Attr.tryConvert:(Ljava/lang/Object;)Ljava/lang/Object;
      11: astore_3
      12: aload_3
      13: ifnonnull     23
      16: aload_2
      17: ldc           #56                 // String defaultValue
      19: invokestatic  #57                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      22: areturn
      23: aload_3
      24: areturn

  public default java.util.stream.Stream<reactor.util.function.Tuple2<java.lang.String, java.lang.String>> tags();
    Code:
       0: aload_0
       1: invokeinterface #10,  1           // InterfaceMethod parents:()Ljava/util/stream/Stream;
       6: invokedynamic #58,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      11: invokeinterface #59,  2           // InterfaceMethod java/util/stream/Stream.flatMap:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      16: astore_1
      17: aload_0
      18: getstatic     #60                 // Field reactor/core/Scannable$Attr.TAGS:Lreactor/core/Scannable$Attr;
      21: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      26: checkcast     #61                 // class java/util/stream/Stream
      29: astore_2
      30: aload_2
      31: ifnonnull     36
      34: aload_1
      35: areturn
      36: aload_2
      37: aload_1
      38: invokestatic  #62                 // InterfaceMethod java/util/stream/Stream.concat:(Ljava/util/stream/Stream;Ljava/util/stream/Stream;)Ljava/util/stream/Stream;
      41: areturn

  private static java.util.stream.Stream lambda$tags$1(reactor.core.Scannable);
    Code:
       0: aload_0
       1: getstatic     #60                 // Field reactor/core/Scannable$Attr.TAGS:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #61                 // class java/util/stream/Stream
      12: areturn

  private static java.lang.String lambda$name$0(reactor.core.Scannable);
    Code:
       0: aload_0
       1: getstatic     #7                  // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
       4: invokeinterface #8,  2            // InterfaceMethod scan:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
       9: checkcast     #9                  // class java/lang/String
      12: areturn

  static {};
    Code:
       0: ldc           #63                 // String Parallel|Flux|Mono|Publisher|Subscriber|Fuseable|Operator|Conditional
       2: invokestatic  #64                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
       5: putstatic     #26                 // Field OPERATOR_NAME_UNRELATED_WORDS_PATTERN:Ljava/util/regex/Pattern;
       8: return
}
