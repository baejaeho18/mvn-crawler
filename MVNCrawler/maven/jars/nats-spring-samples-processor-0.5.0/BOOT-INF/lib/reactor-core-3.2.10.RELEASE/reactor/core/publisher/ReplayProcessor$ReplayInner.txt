Compiled from "ReplayProcessor.java"
final class reactor.core.publisher.ReplayProcessor$ReplayInner<T> implements reactor.core.publisher.FluxReplay$ReplaySubscription<T> {
  final reactor.core.CoreSubscriber<? super T> actual;

  final reactor.core.publisher.ReplayProcessor<T> parent;

  final reactor.core.publisher.FluxReplay$ReplayBuffer<T> buffer;

  int index;

  int tailIndex;

  java.lang.Object node;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.ReplayProcessor$ReplayInner> WIP;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.ReplayProcessor$ReplayInner> REQUESTED;

  int fusionMode;

  reactor.core.publisher.ReplayProcessor$ReplayInner(reactor.core.CoreSubscriber<? super T>, reactor.core.publisher.ReplayProcessor<T>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field parent:Lreactor/core/publisher/ReplayProcessor;
      14: aload_0
      15: aload_2
      16: getfield      #5                  // Field reactor/core/publisher/ReplayProcessor.buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
      19: putfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
      22: return

  public long requested();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requested:J
       4: lreturn

  public boolean isCancelled();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requested:J
       4: ldc2_w        #9                  // long -9223372036854775808l
       7: lcmp
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public int requestFusion(int);
    Code:
       0: iload_1
       1: iconst_2
       2: iand
       3: ifeq          13
       6: aload_0
       7: iconst_2
       8: putfield      #11                 // Field fusionMode:I
      11: iconst_2
      12: ireturn
      13: iconst_0
      14: ireturn

  public T poll();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
       4: aload_0
       5: invokeinterface #12,  2           // InterfaceMethod reactor/core/publisher/FluxReplay$ReplayBuffer.poll:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)Ljava/lang/Object;
      10: areturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
       4: aload_0
       5: invokeinterface #13,  2           // InterfaceMethod reactor/core/publisher/FluxReplay$ReplayBuffer.clear:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)V
      10: return

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
       4: aload_0
       5: invokeinterface #14,  2           // InterfaceMethod reactor/core/publisher/FluxReplay$ReplayBuffer.isEmpty:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)Z
      10: ireturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
       4: aload_0
       5: invokeinterface #15,  2           // InterfaceMethod reactor/core/publisher/FluxReplay$ReplayBuffer.size:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)I
      10: ireturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #16                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          33
       7: aload_0
       8: invokevirtual #17                 // Method fusionMode:()I
      11: ifne          23
      14: getstatic     #18                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: aload_0
      18: lload_1
      19: invokestatic  #19                 // Method reactor/core/publisher/Operators.addCapCancellable:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      22: pop2
      23: aload_0
      24: getfield      #6                  // Field buffer:Lreactor/core/publisher/FluxReplay$ReplayBuffer;
      27: aload_0
      28: invokeinterface #20,  2           // InterfaceMethod reactor/core/publisher/FluxReplay$ReplayBuffer.replay:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)V
      33: return

  public void cancel();
    Code:
       0: getstatic     #18                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: ldc2_w        #9                  // long -9223372036854775808l
       7: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.getAndSet:(Ljava/lang/Object;J)J
      10: ldc2_w        #9                  // long -9223372036854775808l
      13: lcmp
      14: ifeq          37
      17: aload_0
      18: getfield      #4                  // Field parent:Lreactor/core/publisher/ReplayProcessor;
      21: aload_0
      22: invokevirtual #22                 // Method reactor/core/publisher/ReplayProcessor.remove:(Lreactor/core/publisher/FluxReplay$ReplaySubscription;)V
      25: aload_0
      26: invokevirtual #23                 // Method enter:()Z
      29: ifeq          37
      32: aload_0
      33: aconst_null
      34: putfield      #24                 // Field node:Ljava/lang/Object;
      37: return

  public void node(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field node:Ljava/lang/Object;
       5: return

  public int fusionMode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field fusionMode:I
       4: ireturn

  public java.lang.Object node();
    Code:
       0: aload_0
       1: getfield      #24                 // Field node:Ljava/lang/Object;
       4: areturn

  public int index();
    Code:
       0: aload_0
       1: getfield      #25                 // Field index:I
       4: ireturn

  public void index(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #25                 // Field index:I
       5: return

  public int tailIndex();
    Code:
       0: aload_0
       1: getfield      #26                 // Field tailIndex:I
       4: ireturn

  public void tailIndex(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #26                 // Field tailIndex:I
       5: return

  public boolean enter();
    Code:
       0: getstatic     #27                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #28                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifne          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  public int leave(int);
    Code:
       0: getstatic     #27                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iload_1
       5: ineg
       6: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
       9: ireturn

  public void produced(long);
    Code:
       0: getstatic     #18                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
       3: aload_0
       4: lload_1
       5: lneg
       6: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.addAndGet:(Ljava/lang/Object;J)J
       9: pop2
      10: return

  static {};
    Code:
       0: ldc           #31                 // class reactor/core/publisher/ReplayProcessor$ReplayInner
       2: ldc           #32                 // String wip
       4: invokestatic  #33                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #27                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #31                 // class reactor/core/publisher/ReplayProcessor$ReplayInner
      12: ldc           #34                 // String requested
      14: invokestatic  #35                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      17: putstatic     #18                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      20: return
}
