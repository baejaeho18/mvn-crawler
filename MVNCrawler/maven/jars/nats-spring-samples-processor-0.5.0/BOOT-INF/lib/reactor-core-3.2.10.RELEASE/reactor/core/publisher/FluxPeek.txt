Compiled from "FluxPeek.java"
final class reactor.core.publisher.FluxPeek<T> extends reactor.core.publisher.FluxOperator<T, T> implements reactor.core.publisher.SignalPeek<T> {
  final java.util.function.Consumer<? super org.reactivestreams.Subscription> onSubscribeCall;

  final java.util.function.Consumer<? super T> onNextCall;

  final java.util.function.Consumer<? super java.lang.Throwable> onErrorCall;

  final java.lang.Runnable onCompleteCall;

  final java.lang.Runnable onAfterTerminateCall;

  final java.util.function.LongConsumer onRequestCall;

  final java.lang.Runnable onCancelCall;

  reactor.core.publisher.FluxPeek(reactor.core.publisher.Flux<? extends T>, java.util.function.Consumer<? super org.reactivestreams.Subscription>, java.util.function.Consumer<? super T>, java.util.function.Consumer<? super java.lang.Throwable>, java.lang.Runnable, java.lang.Runnable, java.util.function.LongConsumer, java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/FluxOperator."<init>":(Lreactor/core/publisher/Flux;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field onSubscribeCall:Ljava/util/function/Consumer;
      10: aload_0
      11: aload_3
      12: putfield      #3                  // Field onNextCall:Ljava/util/function/Consumer;
      15: aload_0
      16: aload         4
      18: putfield      #4                  // Field onErrorCall:Ljava/util/function/Consumer;
      21: aload_0
      22: aload         5
      24: putfield      #5                  // Field onCompleteCall:Ljava/lang/Runnable;
      27: aload_0
      28: aload         6
      30: putfield      #6                  // Field onAfterTerminateCall:Ljava/lang/Runnable;
      33: aload_0
      34: aload         7
      36: putfield      #7                  // Field onRequestCall:Ljava/util/function/LongConsumer;
      39: aload_0
      40: aload         8
      42: putfield      #8                  // Field onCancelCall:Ljava/lang/Runnable;
      45: return

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_1
       1: instanceof    #9                  // class reactor/core/Fuseable$ConditionalSubscriber
       4: ifeq          29
       7: aload_1
       8: checkcast     #9                  // class reactor/core/Fuseable$ConditionalSubscriber
      11: astore_2
      12: aload_0
      13: getfield      #10                 // Field source:Lreactor/core/publisher/Flux;
      16: new           #11                 // class reactor/core/publisher/FluxPeekFuseable$PeekConditionalSubscriber
      19: dup
      20: aload_2
      21: aload_0
      22: invokespecial #12                 // Method reactor/core/publisher/FluxPeekFuseable$PeekConditionalSubscriber."<init>":(Lreactor/core/Fuseable$ConditionalSubscriber;Lreactor/core/publisher/SignalPeek;)V
      25: invokevirtual #13                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      28: return
      29: aload_0
      30: getfield      #10                 // Field source:Lreactor/core/publisher/Flux;
      33: new           #14                 // class reactor/core/publisher/FluxPeek$PeekSubscriber
      36: dup
      37: aload_1
      38: aload_0
      39: invokespecial #15                 // Method reactor/core/publisher/FluxPeek$PeekSubscriber."<init>":(Lreactor/core/CoreSubscriber;Lreactor/core/publisher/SignalPeek;)V
      42: invokevirtual #13                 // Method reactor/core/publisher/Flux.subscribe:(Lreactor/core/CoreSubscriber;)V
      45: return

  public java.util.function.Consumer<? super org.reactivestreams.Subscription> onSubscribeCall();
    Code:
       0: aload_0
       1: getfield      #2                  // Field onSubscribeCall:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<? super T> onNextCall();
    Code:
       0: aload_0
       1: getfield      #3                  // Field onNextCall:Ljava/util/function/Consumer;
       4: areturn

  public java.util.function.Consumer<? super java.lang.Throwable> onErrorCall();
    Code:
       0: aload_0
       1: getfield      #4                  // Field onErrorCall:Ljava/util/function/Consumer;
       4: areturn

  public java.lang.Runnable onCompleteCall();
    Code:
       0: aload_0
       1: getfield      #5                  // Field onCompleteCall:Ljava/lang/Runnable;
       4: areturn

  public java.lang.Runnable onAfterTerminateCall();
    Code:
       0: aload_0
       1: getfield      #6                  // Field onAfterTerminateCall:Ljava/lang/Runnable;
       4: areturn

  public java.util.function.LongConsumer onRequestCall();
    Code:
       0: aload_0
       1: getfield      #7                  // Field onRequestCall:Ljava/util/function/LongConsumer;
       4: areturn

  public java.lang.Runnable onCancelCall();
    Code:
       0: aload_0
       1: getfield      #8                  // Field onCancelCall:Ljava/lang/Runnable;
       4: areturn

  static <T> void afterCompleteWithFailure(reactor.core.publisher.SignalPeek<T>, java.lang.Throwable, reactor.util.context.Context);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
       4: aload_1
       5: aload_2
       6: invokestatic  #17                 // Method reactor/core/publisher/Operators.onOperatorError:(Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
       9: astore_3
      10: aload_3
      11: aload_2
      12: invokestatic  #18                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return

  static <T> void afterErrorWithFailure(reactor.core.publisher.SignalPeek<T>, java.lang.Throwable, java.lang.Throwable, reactor.util.context.Context);
    Code:
       0: aload_1
       1: invokestatic  #16                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
       4: aconst_null
       5: aload_1
       6: aload_2
       7: aload_3
       8: invokestatic  #19                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      11: astore        4
      13: aload         4
      15: aload_3
      16: invokestatic  #18                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      19: return
}
