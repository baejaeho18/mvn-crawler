Compiled from "MonoPublishMulticast.java"
final class reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner<T> implements reactor.core.publisher.InnerProducer<T> {
  final reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster<T> parent;

  final reactor.core.CoreSubscriber<? super T> actual;

  volatile int cancelled;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner> CANCELLED;

  reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner(reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster<T>, reactor.core.CoreSubscriber<? super T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field parent:Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
      14: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #4                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;
      11: areturn
      12: aload_1
      13: getstatic     #5                  // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     36
      19: aload_0
      20: getfield      #6                  // Field cancelled:I
      23: iconst_1
      24: if_icmpne     31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: invokestatic  #7                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      35: areturn
      36: aload_0
      37: aload_1
      38: invokespecial #8                  // InterfaceMethod reactor/core/publisher/InnerProducer.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      41: areturn

  public reactor.core.CoreSubscriber<? super T> actual();
    Code:
       0: aload_0
       1: getfield      #3                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #9                  // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          14
       7: aload_0
       8: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;
      11: invokevirtual #10                 // Method reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster.drain:()V
      14: return

  public void cancel();
    Code:
       0: getstatic     #11                 // Field CANCELLED:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: iconst_0
       5: iconst_1
       6: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.compareAndSet:(Ljava/lang/Object;II)Z
       9: ifeq          27
      12: aload_0
      13: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;
      16: aload_0
      17: invokevirtual #13                 // Method reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster.remove:(Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;)V
      20: aload_0
      21: getfield      #2                  // Field parent:Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;
      24: invokevirtual #10                 // Method reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster.drain:()V
      27: return

  static {};
    Code:
       0: ldc           #14                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
       2: ldc           #15                 // String cancelled
       4: invokestatic  #16                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #11                 // Field CANCELLED:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: return
}
