Compiled from "FluxBufferBoundary.java"
final class reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain<T, U, C extends java.util.Collection<? super T>> implements reactor.core.publisher.InnerOperator<T, C> {
  final java.util.function.Supplier<C> bufferSupplier;

  final reactor.core.CoreSubscriber<? super C> actual;

  final reactor.util.context.Context ctx;

  final reactor.core.publisher.FluxBufferBoundary$BufferBoundaryOther<U> other;

  C buffer;

  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain, org.reactivestreams.Subscription> S;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain> REQUESTED;

  reactor.core.publisher.FluxBufferBoundary$BufferBoundaryMain(reactor.core.CoreSubscriber<? super C>, C, java.util.function.Supplier<C>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: aload_1
      11: invokeinterface #3,  1            // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      16: putfield      #4                  // Field ctx:Lreactor/util/context/Context;
      19: aload_0
      20: aload_2
      21: putfield      #5                  // Field buffer:Ljava/util/Collection;
      24: aload_0
      25: aload_3
      26: putfield      #6                  // Field bufferSupplier:Ljava/util/function/Supplier;
      29: aload_0
      30: new           #7                  // class reactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther
      33: dup
      34: aload_0
      35: invokespecial #8                  // Method reactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther."<init>":(Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryMain;)V
      38: putfield      #9                  // Field other:Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther;
      41: return

  public reactor.core.CoreSubscriber<? super C> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #10                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #11                 // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #12                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      16: if_acmpne     38
      19: aload_0
      20: getfield      #11                 // Field s:Lorg/reactivestreams/Subscription;
      23: invokestatic  #13                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      26: if_acmpne     33
      29: iconst_1
      30: goto          34
      33: iconst_0
      34: invokestatic  #14                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      37: areturn
      38: aload_1
      39: getstatic     #15                 // Field reactor/core/Scannable$Attr.CAPACITY:Lreactor/core/Scannable$Attr;
      42: if_acmpne     68
      45: aload_0
      46: getfield      #5                  // Field buffer:Ljava/util/Collection;
      49: astore_2
      50: aload_2
      51: ifnull        63
      54: aload_2
      55: invokeinterface #16,  1           // InterfaceMethod java/util/Collection.size:()I
      60: goto          64
      63: iconst_0
      64: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: areturn
      68: aload_1
      69: getstatic     #18                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      72: if_acmpne     81
      75: ldc           #20                 // int 2147483647
      77: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      80: areturn
      81: aload_1
      82: getstatic     #21                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
      85: if_acmpne     96
      88: aload_0
      89: getfield      #22                 // Field requested:J
      92: invokestatic  #23                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      95: areturn
      96: aload_0
      97: aload_1
      98: invokespecial #24                 // InterfaceMethod reactor/core/publisher/InnerOperator.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
     101: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #25                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          16
       7: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #27                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #29                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: aload_0
       9: getfield      #5                  // Field buffer:Ljava/util/Collection;
      12: aload_0
      13: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      16: invokestatic  #30                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      19: aload_0
      20: getfield      #9                  // Field other:Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther;
      23: invokevirtual #31                 // Method reactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther.cancel:()V
      26: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #32                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          20
      11: aload_1
      12: ldc2_w        #34                 // long 9223372036854775807l
      15: invokeinterface #36,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      20: return

  public void onNext(T);
    Code:
       0: aload_0
       1: dup
       2: astore_2
       3: monitorenter
       4: aload_0
       5: getfield      #5                  // Field buffer:Ljava/util/Collection;
       8: astore_3
       9: aload_3
      10: ifnull        24
      13: aload_3
      14: aload_1
      15: invokeinterface #37,  2           // InterfaceMethod java/util/Collection.add:(Ljava/lang/Object;)Z
      20: pop
      21: aload_2
      22: monitorexit
      23: return
      24: aload_2
      25: monitorexit
      26: goto          36
      29: astore        4
      31: aload_2
      32: monitorexit
      33: aload         4
      35: athrow
      36: aload_1
      37: aload_0
      38: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      41: invokestatic  #38                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      44: return
    Exception table:
       from    to  target type
           4    23    29   any
          24    26    29   any
          29    33    29   any

  public void onError(java.lang.Throwable);
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #29                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: ifeq          62
      10: aload_0
      11: dup
      12: astore_3
      13: monitorenter
      14: aload_0
      15: getfield      #5                  // Field buffer:Ljava/util/Collection;
      18: astore_2
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field buffer:Ljava/util/Collection;
      24: aload_3
      25: monitorexit
      26: goto          36
      29: astore        4
      31: aload_3
      32: monitorexit
      33: aload         4
      35: athrow
      36: aload_0
      37: getfield      #9                  // Field other:Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther;
      40: invokevirtual #31                 // Method reactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther.cancel:()V
      43: aload_0
      44: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      47: aload_1
      48: invokeinterface #39,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      53: aload_2
      54: aload_0
      55: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      58: invokestatic  #30                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      61: return
      62: aload_1
      63: aload_0
      64: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      67: invokestatic  #40                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      70: return
    Exception table:
       from    to  target type
          14    26    29   any
          29    33    29   any

  public void onComplete();
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #29                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: ifeq          79
      10: aload_0
      11: dup
      12: astore_2
      13: monitorenter
      14: aload_0
      15: getfield      #5                  // Field buffer:Ljava/util/Collection;
      18: astore_1
      19: aload_0
      20: aconst_null
      21: putfield      #5                  // Field buffer:Ljava/util/Collection;
      24: aload_2
      25: monitorexit
      26: goto          34
      29: astore_3
      30: aload_2
      31: monitorexit
      32: aload_3
      33: athrow
      34: aload_0
      35: getfield      #9                  // Field other:Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther;
      38: invokevirtual #31                 // Method reactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther.cancel:()V
      41: aload_1
      42: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      47: ifne          70
      50: aload_0
      51: aload_1
      52: invokevirtual #42                 // Method emit:(Ljava/util/Collection;)Z
      55: ifeq          79
      58: aload_0
      59: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      62: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      67: goto          79
      70: aload_0
      71: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      74: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      79: return
    Exception table:
       from    to  target type
          14    26    29   any
          29    32    29   any

  void otherComplete();
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #13                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       7: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/reactivestreams/Subscription
      13: astore_1
      14: aload_1
      15: invokestatic  #13                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      18: if_acmpeq     99
      21: aload_0
      22: dup
      23: astore_3
      24: monitorenter
      25: aload_0
      26: getfield      #5                  // Field buffer:Ljava/util/Collection;
      29: astore_2
      30: aload_0
      31: aconst_null
      32: putfield      #5                  // Field buffer:Ljava/util/Collection;
      35: aload_3
      36: monitorexit
      37: goto          47
      40: astore        4
      42: aload_3
      43: monitorexit
      44: aload         4
      46: athrow
      47: aload_1
      48: ifnull        57
      51: aload_1
      52: invokeinterface #46,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      57: aload_2
      58: ifnull        90
      61: aload_2
      62: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      67: ifne          90
      70: aload_0
      71: aload_2
      72: invokevirtual #42                 // Method emit:(Ljava/util/Collection;)Z
      75: ifeq          99
      78: aload_0
      79: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      82: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      87: goto          99
      90: aload_0
      91: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      94: invokeinterface #43,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      99: return
    Exception table:
       from    to  target type
          25    37    40   any
          40    44    40   any

  void otherError(java.lang.Throwable);
    Code:
       0: getstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #13                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
       7: invokevirtual #44                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #45                 // class org/reactivestreams/Subscription
      13: astore_2
      14: aload_2
      15: invokestatic  #13                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      18: if_acmpeq     79
      21: aload_0
      22: dup
      23: astore        4
      25: monitorenter
      26: aload_0
      27: getfield      #5                  // Field buffer:Ljava/util/Collection;
      30: astore_3
      31: aload_0
      32: aconst_null
      33: putfield      #5                  // Field buffer:Ljava/util/Collection;
      36: aload         4
      38: monitorexit
      39: goto          50
      42: astore        5
      44: aload         4
      46: monitorexit
      47: aload         5
      49: athrow
      50: aload_2
      51: ifnull        60
      54: aload_2
      55: invokeinterface #46,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      60: aload_0
      61: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      64: aload_1
      65: invokeinterface #39,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      70: aload_3
      71: aload_0
      72: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      75: invokestatic  #30                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      78: return
      79: aload_1
      80: aload_0
      81: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      84: invokestatic  #40                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      87: return
    Exception table:
       from    to  target type
          26    39    42   any
          42    47    42   any

  void otherNext();
    Code:
       0: aload_0
       1: getfield      #6                  // Field bufferSupplier:Ljava/util/function/Supplier;
       4: invokeinterface #47,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: ldc           #48                 // String The bufferSupplier returned a null buffer
      11: invokestatic  #49                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      14: checkcast     #50                 // class java/util/Collection
      17: astore_1
      18: goto          39
      21: astore_2
      22: aload_0
      23: aload_0
      24: getfield      #9                  // Field other:Lreactor/core/publisher/FluxBufferBoundary$BufferBoundaryOther;
      27: aload_2
      28: aload_0
      29: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      32: invokestatic  #52                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      35: invokevirtual #53                 // Method otherError:(Ljava/lang/Throwable;)V
      38: return
      39: aload_0
      40: dup
      41: astore_3
      42: monitorenter
      43: aload_0
      44: getfield      #5                  // Field buffer:Ljava/util/Collection;
      47: astore_2
      48: aload_0
      49: aload_1
      50: putfield      #5                  // Field buffer:Ljava/util/Collection;
      53: aload_3
      54: monitorexit
      55: goto          65
      58: astore        4
      60: aload_3
      61: monitorexit
      62: aload         4
      64: athrow
      65: aload_2
      66: ifnull        78
      69: aload_2
      70: invokeinterface #41,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      75: ifeq          79
      78: return
      79: aload_0
      80: aload_2
      81: invokevirtual #42                 // Method emit:(Ljava/util/Collection;)Z
      84: pop
      85: return
    Exception table:
       from    to  target type
           0    18    21   Class java/lang/Throwable
          43    55    58   any
          58    62    58   any

  boolean emit(C);
    Code:
       0: aload_0
       1: getfield      #22                 // Field requested:J
       4: lstore_2
       5: lload_2
       6: lconst_0
       7: lcmp
       8: ifeq          39
      11: aload_0
      12: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      15: aload_1
      16: invokeinterface #54,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      21: lload_2
      22: ldc2_w        #34                 // long 9223372036854775807l
      25: lcmp
      26: ifeq          37
      29: getstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      32: aload_0
      33: invokevirtual #55                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.decrementAndGet:(Ljava/lang/Object;)J
      36: pop2
      37: iconst_1
      38: ireturn
      39: aload_0
      40: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      43: aload_0
      44: invokestatic  #56                 // Method reactor/core/Exceptions.failWithOverflow:()Ljava/lang/IllegalStateException;
      47: aload_1
      48: aload_0
      49: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      52: invokestatic  #57                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
      55: invokeinterface #39,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      60: aload_1
      61: aload_0
      62: getfield      #4                  // Field ctx:Lreactor/util/context/Context;
      65: invokestatic  #30                 // Method reactor/core/publisher/Operators.onDiscardMultiple:(Ljava/util/Collection;Lreactor/util/context/Context;)V
      68: iconst_0
      69: ireturn

  static {};
    Code:
       0: ldc           #58                 // class reactor/core/publisher/FluxBufferBoundary$BufferBoundaryMain
       2: ldc           #45                 // class org/reactivestreams/Subscription
       4: ldc           #59                 // String s
       6: invokestatic  #60                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #28                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #58                 // class reactor/core/publisher/FluxBufferBoundary$BufferBoundaryMain
      14: ldc           #61                 // String requested
      16: invokestatic  #62                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      19: putstatic     #26                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      22: return
}
