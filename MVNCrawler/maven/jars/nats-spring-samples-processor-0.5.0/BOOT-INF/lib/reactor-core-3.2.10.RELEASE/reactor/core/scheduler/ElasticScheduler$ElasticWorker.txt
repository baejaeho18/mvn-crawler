Compiled from "ElasticScheduler.java"
final class reactor.core.scheduler.ElasticScheduler$ElasticWorker extends java.util.concurrent.atomic.AtomicBoolean implements reactor.core.scheduler.Scheduler$Worker,reactor.core.Scannable {
  final reactor.core.scheduler.ElasticScheduler$CachedService cached;

  final reactor.core.Disposable$Composite tasks;

  reactor.core.scheduler.ElasticScheduler$ElasticWorker(reactor.core.scheduler.ElasticScheduler$CachedService);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
       9: aload_0
      10: invokestatic  #3                  // Method reactor/core/Disposables.composite:()Lreactor/core/Disposable$Composite;
      13: putfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      16: return

  public reactor.core.Disposable schedule(java.lang.Runnable);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
       4: getfield      #5                  // Field reactor/core/scheduler/ElasticScheduler$CachedService.exec:Ljava/util/concurrent/ScheduledExecutorService;
       7: aload_0
       8: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      11: aload_1
      12: lconst_0
      13: getstatic     #6                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: invokestatic  #7                  // Method reactor/core/scheduler/Schedulers.workerSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      19: areturn

  public reactor.core.Disposable schedule(java.lang.Runnable, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
       4: getfield      #5                  // Field reactor/core/scheduler/ElasticScheduler$CachedService.exec:Ljava/util/concurrent/ScheduledExecutorService;
       7: aload_0
       8: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      11: aload_1
      12: lload_2
      13: aload         4
      15: invokestatic  #7                  // Method reactor/core/scheduler/Schedulers.workerSchedule:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      18: areturn

  public reactor.core.Disposable schedulePeriodically(java.lang.Runnable, long, long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
       4: getfield      #5                  // Field reactor/core/scheduler/ElasticScheduler$CachedService.exec:Ljava/util/concurrent/ScheduledExecutorService;
       7: aload_0
       8: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      11: aload_1
      12: lload_2
      13: lload         4
      15: aload         6
      17: invokestatic  #8                  // Method reactor/core/scheduler/Schedulers.workerSchedulePeriodically:(Ljava/util/concurrent/ScheduledExecutorService;Lreactor/core/Disposable$Composite;Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Lreactor/core/Disposable;
      20: areturn

  public void dispose();
    Code:
       0: aload_0
       1: iconst_0
       2: iconst_1
       3: invokevirtual #9                  // Method compareAndSet:(ZZ)Z
       6: ifeq          25
       9: aload_0
      10: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
      13: invokeinterface #10,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      18: aload_0
      19: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
      22: invokevirtual #11                 // Method reactor/core/scheduler/ElasticScheduler$CachedService.dispose:()V
      25: return

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #4                  // Field tasks:Lreactor/core/Disposable$Composite;
       4: invokeinterface #12,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
       9: ireturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #13                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
       4: if_acmpeq     14
       7: aload_1
       8: getstatic     #14                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      11: if_acmpne     22
      14: aload_0
      15: invokevirtual #15                 // Method isDisposed:()Z
      18: invokestatic  #16                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      21: areturn
      22: aload_1
      23: getstatic     #17                 // Field reactor/core/Scannable$Attr.NAME:Lreactor/core/Scannable$Attr;
      26: if_acmpne     56
      29: new           #18                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      36: aload_0
      37: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
      40: aload_1
      41: invokevirtual #20                 // Method reactor/core/scheduler/ElasticScheduler$CachedService.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      44: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      47: ldc           #22                 // String .worker
      49: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: areturn
      56: aload_1
      57: getstatic     #25                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
      60: if_acmpne     71
      63: aload_0
      64: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
      67: getfield      #26                 // Field reactor/core/scheduler/ElasticScheduler$CachedService.parent:Lreactor/core/scheduler/ElasticScheduler;
      70: areturn
      71: aload_0
      72: getfield      #2                  // Field cached:Lreactor/core/scheduler/ElasticScheduler$CachedService;
      75: aload_1
      76: invokevirtual #20                 // Method reactor/core/scheduler/ElasticScheduler$CachedService.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      79: areturn
}
