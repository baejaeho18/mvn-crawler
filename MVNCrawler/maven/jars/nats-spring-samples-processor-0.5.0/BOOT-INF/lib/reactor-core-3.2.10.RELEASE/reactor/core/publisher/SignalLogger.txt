Compiled from "SignalLogger.java"
final class reactor.core.publisher.SignalLogger<IN> implements reactor.core.publisher.SignalPeek<IN> {
  static final int CONTEXT_PARENT;

  static final int SUBSCRIBE;

  static final int ON_SUBSCRIBE;

  static final int ON_NEXT;

  static final int ON_ERROR;

  static final int ON_COMPLETE;

  static final int REQUEST;

  static final int CANCEL;

  static final int AFTER_TERMINATE;

  static final int ALL;

  static final java.util.concurrent.atomic.AtomicLong IDS;

  final org.reactivestreams.Publisher<IN> source;

  final reactor.util.Logger log;

  final boolean fuseable;

  final int options;

  final java.util.logging.Level level;

  final java.lang.String operatorLine;

  final long id;

  static final java.lang.String LOG_TEMPLATE;

  static final java.lang.String LOG_TEMPLATE_FUSEABLE;

  reactor.core.publisher.SignalLogger(org.reactivestreams.Publisher<IN>, java.lang.String, java.util.logging.Level, boolean, reactor.core.publisher.SignalType...);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: iload         4
       6: invokedynamic #2,  0              // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      11: aload         5
      13: invokespecial #3                  // Method "<init>":(Lorg/reactivestreams/Publisher;Ljava/lang/String;Ljava/util/logging/Level;ZLjava/util/function/Function;[Lreactor/core/publisher/SignalType;)V
      16: return

  reactor.core.publisher.SignalLogger(org.reactivestreams.Publisher<IN>, java.lang.String, java.util.logging.Level, boolean, java.util.function.Function<java.lang.String, reactor.util.Logger>, reactor.core.publisher.SignalType...);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: ldc           #5                  // String source
       8: invokestatic  #6                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      11: checkcast     #7                  // class org/reactivestreams/Publisher
      14: putfield      #8                  // Field source:Lorg/reactivestreams/Publisher;
      17: aload_0
      18: getstatic     #9                  // Field IDS:Ljava/util/concurrent/atomic/AtomicLong;
      21: invokevirtual #10                 // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
      24: putfield      #11                 // Field id:J
      27: aload_0
      28: aload_1
      29: instanceof    #12                 // class reactor/core/Fuseable
      32: putfield      #13                 // Field fuseable:Z
      35: iload         4
      37: ifeq          69
      40: aload_0
      41: getstatic     #14                 // Field reactor/core/publisher/Traces.callSiteSupplierFactory:Ljava/util/function/Supplier;
      44: invokeinterface #15,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      49: checkcast     #16                 // class java/util/function/Supplier
      52: invokeinterface #15,  1           // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      57: checkcast     #17                 // class java/lang/String
      60: invokestatic  #18                 // Method reactor/core/publisher/Traces.extractOperatorAssemblyInformation:(Ljava/lang/String;)Ljava/lang/String;
      63: putfield      #19                 // Field operatorLine:Ljava/lang/String;
      66: goto          74
      69: aload_0
      70: aconst_null
      71: putfield      #19                 // Field operatorLine:Ljava/lang/String;
      74: aload_2
      75: ifnull        94
      78: aload_2
      79: invokevirtual #20                 // Method java/lang/String.isEmpty:()Z
      82: ifne          94
      85: aload_2
      86: ldc           #21                 // String .
      88: invokevirtual #22                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      91: ifeq          98
      94: iconst_1
      95: goto          99
      98: iconst_0
      99: istore        7
     101: iload         7
     103: ifeq          115
     106: aload_2
     107: ifnonnull     115
     110: ldc           #23                 // String reactor.
     112: goto          116
     115: aload_2
     116: astore_2
     117: iload         7
     119: ifeq          280
     122: aload_1
     123: instanceof    #24                 // class reactor/core/publisher/Mono
     126: ifeq          169
     129: new           #25                 // class java/lang/StringBuilder
     132: dup
     133: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     136: aload_2
     137: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #28                 // String Mono.
     142: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: aload_1
     146: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     149: invokevirtual #30                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     152: ldc           #31                 // String Mono
     154: ldc           #32                 // String
     156: invokevirtual #33                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     159: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: astore_2
     166: goto          253
     169: aload_1
     170: instanceof    #35                 // class reactor/core/publisher/ParallelFlux
     173: ifeq          216
     176: new           #25                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     183: aload_2
     184: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: ldc           #36                 // String Parallel.
     189: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     192: aload_1
     193: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     196: invokevirtual #30                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     199: ldc           #37                 // String Parallel
     201: ldc           #32                 // String
     203: invokevirtual #33                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     206: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     209: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     212: astore_2
     213: goto          253
     216: new           #25                 // class java/lang/StringBuilder
     219: dup
     220: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     223: aload_2
     224: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     227: ldc           #38                 // String Flux.
     229: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     232: aload_1
     233: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     236: invokevirtual #30                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     239: ldc           #39                 // String Flux
     241: ldc           #32                 // String
     243: invokevirtual #33                 // Method java/lang/String.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;
     246: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     249: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     252: astore_2
     253: new           #25                 // class java/lang/StringBuilder
     256: dup
     257: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     260: aload_2
     261: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     264: ldc           #21                 // String .
     266: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     269: aload_0
     270: getfield      #11                 // Field id:J
     273: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
     276: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     279: astore_2
     280: aload_0
     281: aload         5
     283: aload_2
     284: invokeinterface #41,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     289: checkcast     #42                 // class reactor/util/Logger
     292: putfield      #43                 // Field log:Lreactor/util/Logger;
     295: aload_0
     296: aload_3
     297: putfield      #44                 // Field level:Ljava/util/logging/Level;
     300: aload         6
     302: ifnull        311
     305: aload         6
     307: arraylength
     308: ifne          321
     311: aload_0
     312: sipush        510
     315: putfield      #45                 // Field options:I
     318: goto          520
     321: iconst_0
     322: istore        8
     324: aload         6
     326: astore        9
     328: aload         9
     330: arraylength
     331: istore        10
     333: iconst_0
     334: istore        11
     336: iload         11
     338: iload         10
     340: if_icmpge     514
     343: aload         9
     345: iload         11
     347: aaload
     348: astore        12
     350: aload         12
     352: getstatic     #46                 // Field reactor/core/publisher/SignalType.CANCEL:Lreactor/core/publisher/SignalType;
     355: if_acmpne     367
     358: iload         8
     360: iconst_2
     361: ior
     362: istore        8
     364: goto          508
     367: aload         12
     369: getstatic     #47                 // Field reactor/core/publisher/SignalType.CURRENT_CONTEXT:Lreactor/core/publisher/SignalType;
     372: if_acmpne     386
     375: iload         8
     377: sipush        256
     380: ior
     381: istore        8
     383: goto          508
     386: aload         12
     388: getstatic     #48                 // Field reactor/core/publisher/SignalType.ON_SUBSCRIBE:Lreactor/core/publisher/SignalType;
     391: if_acmpne     404
     394: iload         8
     396: bipush        64
     398: ior
     399: istore        8
     401: goto          508
     404: aload         12
     406: getstatic     #49                 // Field reactor/core/publisher/SignalType.REQUEST:Lreactor/core/publisher/SignalType;
     409: if_acmpne     421
     412: iload         8
     414: iconst_4
     415: ior
     416: istore        8
     418: goto          508
     421: aload         12
     423: getstatic     #50                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
     426: if_acmpne     439
     429: iload         8
     431: bipush        32
     433: ior
     434: istore        8
     436: goto          508
     439: aload         12
     441: getstatic     #51                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
     444: if_acmpne     457
     447: iload         8
     449: bipush        16
     451: ior
     452: istore        8
     454: goto          508
     457: aload         12
     459: getstatic     #52                 // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
     462: if_acmpne     475
     465: iload         8
     467: bipush        8
     469: ior
     470: istore        8
     472: goto          508
     475: aload         12
     477: getstatic     #53                 // Field reactor/core/publisher/SignalType.SUBSCRIBE:Lreactor/core/publisher/SignalType;
     480: if_acmpne     494
     483: iload         8
     485: sipush        128
     488: ior
     489: istore        8
     491: goto          508
     494: aload         12
     496: getstatic     #54                 // Field reactor/core/publisher/SignalType.AFTER_TERMINATE:Lreactor/core/publisher/SignalType;
     499: if_acmpne     508
     502: iload         8
     504: iconst_1
     505: ior
     506: istore        8
     508: iinc          11, 1
     511: goto          336
     514: aload_0
     515: iload         8
     517: putfield      #45                 // Field options:I
     520: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #55                 // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #8                  // Field source:Lorg/reactivestreams/Publisher;
      11: areturn
      12: aconst_null
      13: areturn

  void log(reactor.core.publisher.SignalType, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #13                 // Field fuseable:Z
       4: ifeq          12
       7: ldc           #56                 // String | {}({})
       9: goto          14
      12: ldc           #57                 // String {}({})
      14: astore_3
      15: aload_0
      16: getfield      #19                 // Field operatorLine:Ljava/lang/String;
      19: ifnull        49
      22: new           #25                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      29: aload_3
      30: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: ldc           #58                 // String
      35: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: aload_0
      39: getfield      #19                 // Field operatorLine:Ljava/lang/String;
      42: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      48: astore_3
      49: aload_0
      50: getfield      #44                 // Field level:Ljava/util/logging/Level;
      53: getstatic     #59                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      56: if_acmpne     84
      59: aload_0
      60: getfield      #43                 // Field log:Lreactor/util/Logger;
      63: aload_3
      64: iconst_2
      65: anewarray     #60                 // class java/lang/Object
      68: dup
      69: iconst_0
      70: aload_1
      71: aastore
      72: dup
      73: iconst_1
      74: aload_2
      75: aastore
      76: invokeinterface #61,  3           // InterfaceMethod reactor/util/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      81: goto          221
      84: aload_0
      85: getfield      #44                 // Field level:Ljava/util/logging/Level;
      88: getstatic     #62                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      91: if_acmpne     119
      94: aload_0
      95: getfield      #43                 // Field log:Lreactor/util/Logger;
      98: aload_3
      99: iconst_2
     100: anewarray     #60                 // class java/lang/Object
     103: dup
     104: iconst_0
     105: aload_1
     106: aastore
     107: dup
     108: iconst_1
     109: aload_2
     110: aastore
     111: invokeinterface #63,  3           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
     116: goto          221
     119: aload_0
     120: getfield      #44                 // Field level:Ljava/util/logging/Level;
     123: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
     126: if_acmpne     154
     129: aload_0
     130: getfield      #43                 // Field log:Lreactor/util/Logger;
     133: aload_3
     134: iconst_2
     135: anewarray     #60                 // class java/lang/Object
     138: dup
     139: iconst_0
     140: aload_1
     141: aastore
     142: dup
     143: iconst_1
     144: aload_2
     145: aastore
     146: invokeinterface #65,  3           // InterfaceMethod reactor/util/Logger.info:(Ljava/lang/String;[Ljava/lang/Object;)V
     151: goto          221
     154: aload_0
     155: getfield      #44                 // Field level:Ljava/util/logging/Level;
     158: getstatic     #66                 // Field java/util/logging/Level.WARNING:Ljava/util/logging/Level;
     161: if_acmpne     189
     164: aload_0
     165: getfield      #43                 // Field log:Lreactor/util/Logger;
     168: aload_3
     169: iconst_2
     170: anewarray     #60                 // class java/lang/Object
     173: dup
     174: iconst_0
     175: aload_1
     176: aastore
     177: dup
     178: iconst_1
     179: aload_2
     180: aastore
     181: invokeinterface #67,  3           // InterfaceMethod reactor/util/Logger.warn:(Ljava/lang/String;[Ljava/lang/Object;)V
     186: goto          221
     189: aload_0
     190: getfield      #44                 // Field level:Ljava/util/logging/Level;
     193: getstatic     #68                 // Field java/util/logging/Level.SEVERE:Ljava/util/logging/Level;
     196: if_acmpne     221
     199: aload_0
     200: getfield      #43                 // Field log:Lreactor/util/Logger;
     203: aload_3
     204: iconst_2
     205: anewarray     #60                 // class java/lang/Object
     208: dup
     209: iconst_0
     210: aload_1
     211: aastore
     212: dup
     213: iconst_1
     214: aload_2
     215: aastore
     216: invokeinterface #69,  3           // InterfaceMethod reactor/util/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
     221: return

  void safeLog(reactor.core.publisher.SignalType, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #70                 // class reactor/core/Fuseable$QueueSubscription
       4: ifeq          35
       7: aload_2
       8: invokestatic  #71                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      11: astore_2
      12: aload_0
      13: getfield      #43                 // Field log:Lreactor/util/Logger;
      16: invokeinterface #72,  1           // InterfaceMethod reactor/util/Logger.isDebugEnabled:()Z
      21: ifeq          35
      24: aload_0
      25: getfield      #43                 // Field log:Lreactor/util/Logger;
      28: ldc           #73                 // String A Fuseable Subscription has been passed to the logging framework, this is generally a sign of a misplaced log(), eg. \'window(2).log()\' instead of \'window(2).flatMap(w -> w.log())\'
      30: invokeinterface #74,  2           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;)V
      35: aload_0
      36: aload_1
      37: aload_2
      38: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
      41: goto          78
      44: astore_3
      45: aload_0
      46: aload_1
      47: aload_2
      48: invokestatic  #71                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      51: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
      54: aload_0
      55: getfield      #43                 // Field log:Lreactor/util/Logger;
      58: invokeinterface #72,  1           // InterfaceMethod reactor/util/Logger.isDebugEnabled:()Z
      63: ifeq          78
      66: aload_0
      67: getfield      #43                 // Field log:Lreactor/util/Logger;
      70: ldc           #77                 // String UnsupportedOperationException has been raised by the logging framework, does your log() placement make sense? eg. \'window(2).log()\' instead of \'window(2).flatMap(w -> w.log())\'
      72: aload_3
      73: invokeinterface #78,  3           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      78: return
    Exception table:
       from    to  target type
          35    41    44   Class java/lang/UnsupportedOperationException

  static java.lang.String subscriptionAsString(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #79                 // String null subscription
       6: areturn
       7: new           #25                 // class java/lang/StringBuilder
      10: dup
      11: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      14: astore_1
      15: aload_0
      16: instanceof    #80                 // class reactor/core/Fuseable$SynchronousSubscription
      19: ifeq          32
      22: aload_1
      23: ldc           #81                 // String [Synchronous Fuseable]
      25: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: pop
      29: goto          46
      32: aload_0
      33: instanceof    #70                 // class reactor/core/Fuseable$QueueSubscription
      36: ifeq          46
      39: aload_1
      40: ldc           #82                 // String [Fuseable]
      42: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: pop
      46: aload_0
      47: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      50: astore_2
      51: aload_2
      52: invokevirtual #83                 // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      55: astore_3
      56: aload_3
      57: ifnonnull     65
      60: aload_2
      61: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
      64: astore_3
      65: aload_3
      66: new           #25                 // class java/lang/StringBuilder
      69: dup
      70: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      73: aload_2
      74: invokevirtual #85                 // Method java/lang/Class.getPackage:()Ljava/lang/Package;
      77: invokevirtual #86                 // Method java/lang/Package.getName:()Ljava/lang/String;
      80: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      83: ldc           #21                 // String .
      85: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      88: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: ldc           #32                 // String
      93: invokevirtual #87                 // Method java/lang/String.replaceFirst:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
      96: astore_3
      97: aload_1
      98: aload_3
      99: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: pop
     103: aload_1
     104: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     107: areturn

  public java.util.function.Consumer<? super org.reactivestreams.Subscription> onSubscribeCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: bipush        64
       6: iand
       7: bipush        64
       9: if_icmpne     41
      12: aload_0
      13: getfield      #44                 // Field level:Ljava/util/logging/Level;
      16: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      19: if_acmpne     34
      22: aload_0
      23: getfield      #43                 // Field log:Lreactor/util/Logger;
      26: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      31: ifeq          41
      34: aload_0
      35: invokedynamic #89,  0             // InvokeDynamic #1:accept:(Lreactor/core/publisher/SignalLogger;)Ljava/util/function/Consumer;
      40: areturn
      41: aconst_null
      42: areturn

  public java.util.function.Consumer<? super reactor.util.context.Context> onCurrentContextCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: sipush        256
       7: iand
       8: sipush        256
      11: if_icmpne     43
      14: aload_0
      15: getfield      #44                 // Field level:Ljava/util/logging/Level;
      18: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      21: if_acmpne     36
      24: aload_0
      25: getfield      #43                 // Field log:Lreactor/util/Logger;
      28: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      33: ifeq          43
      36: aload_0
      37: invokedynamic #90,  0             // InvokeDynamic #2:accept:(Lreactor/core/publisher/SignalLogger;)Ljava/util/function/Consumer;
      42: areturn
      43: aconst_null
      44: areturn

  public java.util.function.Consumer<? super IN> onNextCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: bipush        32
       6: iand
       7: bipush        32
       9: if_icmpne     41
      12: aload_0
      13: getfield      #44                 // Field level:Ljava/util/logging/Level;
      16: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      19: if_acmpne     34
      22: aload_0
      23: getfield      #43                 // Field log:Lreactor/util/Logger;
      26: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      31: ifeq          41
      34: aload_0
      35: invokedynamic #91,  0             // InvokeDynamic #3:accept:(Lreactor/core/publisher/SignalLogger;)Ljava/util/function/Consumer;
      40: areturn
      41: aconst_null
      42: areturn

  public java.util.function.Consumer<? super java.lang.Throwable> onErrorCall();
    Code:
       0: aload_0
       1: getfield      #44                 // Field level:Ljava/util/logging/Level;
       4: getstatic     #62                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
       7: if_acmpne     26
      10: aload_0
      11: getfield      #43                 // Field log:Lreactor/util/Logger;
      14: invokeinterface #72,  1           // InterfaceMethod reactor/util/Logger.isDebugEnabled:()Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: istore_1
      28: aload_0
      29: getfield      #44                 // Field level:Ljava/util/logging/Level;
      32: getstatic     #59                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      35: if_acmpne     54
      38: aload_0
      39: getfield      #43                 // Field log:Lreactor/util/Logger;
      42: invokeinterface #92,  1           // InterfaceMethod reactor/util/Logger.isTraceEnabled:()Z
      47: ifeq          54
      50: iconst_1
      51: goto          55
      54: iconst_0
      55: istore_2
      56: aload_0
      57: getfield      #44                 // Field level:Ljava/util/logging/Level;
      60: getstatic     #62                 // Field java/util/logging/Level.FINE:Ljava/util/logging/Level;
      63: if_acmpeq     92
      66: aload_0
      67: getfield      #44                 // Field level:Ljava/util/logging/Level;
      70: getstatic     #59                 // Field java/util/logging/Level.FINEST:Ljava/util/logging/Level;
      73: if_acmpeq     92
      76: aload_0
      77: getfield      #43                 // Field log:Lreactor/util/Logger;
      80: invokeinterface #93,  1           // InterfaceMethod reactor/util/Logger.isErrorEnabled:()Z
      85: ifeq          92
      88: iconst_1
      89: goto          93
      92: iconst_0
      93: istore_3
      94: aload_0
      95: getfield      #45                 // Field options:I
      98: bipush        16
     100: iand
     101: bipush        16
     103: if_icmpne     209
     106: iload_3
     107: ifne          118
     110: iload_1
     111: ifne          118
     114: iload_2
     115: ifeq          209
     118: aload_0
     119: getfield      #13                 // Field fuseable:Z
     122: ifeq          130
     125: ldc           #56                 // String | {}({})
     127: goto          132
     130: ldc           #57                 // String {}({})
     132: astore        4
     134: aload_0
     135: getfield      #19                 // Field operatorLine:Ljava/lang/String;
     138: ifnull        170
     141: new           #25                 // class java/lang/StringBuilder
     144: dup
     145: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     148: aload         4
     150: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     153: ldc           #58                 // String
     155: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     158: aload_0
     159: getfield      #19                 // Field operatorLine:Ljava/lang/String;
     162: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     168: astore        4
     170: aload         4
     172: astore        5
     174: iload_2
     175: ifeq          187
     178: aload_0
     179: aload         5
     181: invokedynamic #94,  0             // InvokeDynamic #4:accept:(Lreactor/core/publisher/SignalLogger;Ljava/lang/String;)Ljava/util/function/Consumer;
     186: areturn
     187: iload_1
     188: ifeq          200
     191: aload_0
     192: aload         5
     194: invokedynamic #95,  0             // InvokeDynamic #5:accept:(Lreactor/core/publisher/SignalLogger;Ljava/lang/String;)Ljava/util/function/Consumer;
     199: areturn
     200: aload_0
     201: aload         5
     203: invokedynamic #96,  0             // InvokeDynamic #6:accept:(Lreactor/core/publisher/SignalLogger;Ljava/lang/String;)Ljava/util/function/Consumer;
     208: areturn
     209: aconst_null
     210: areturn

  public java.lang.Runnable onCompleteCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: bipush        8
       6: iand
       7: bipush        8
       9: if_icmpne     41
      12: aload_0
      13: getfield      #44                 // Field level:Ljava/util/logging/Level;
      16: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      19: if_acmpne     34
      22: aload_0
      23: getfield      #43                 // Field log:Lreactor/util/Logger;
      26: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      31: ifeq          41
      34: aload_0
      35: invokedynamic #97,  0             // InvokeDynamic #7:run:(Lreactor/core/publisher/SignalLogger;)Ljava/lang/Runnable;
      40: areturn
      41: aconst_null
      42: areturn

  public java.lang.Runnable onAfterTerminateCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: iconst_1
       5: iand
       6: iconst_1
       7: if_icmpne     39
      10: aload_0
      11: getfield      #44                 // Field level:Ljava/util/logging/Level;
      14: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      17: if_acmpne     32
      20: aload_0
      21: getfield      #43                 // Field log:Lreactor/util/Logger;
      24: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      29: ifeq          39
      32: aload_0
      33: invokedynamic #98,  0             // InvokeDynamic #8:run:(Lreactor/core/publisher/SignalLogger;)Ljava/lang/Runnable;
      38: areturn
      39: aconst_null
      40: areturn

  public java.util.function.LongConsumer onRequestCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: iconst_4
       5: iand
       6: iconst_4
       7: if_icmpne     39
      10: aload_0
      11: getfield      #44                 // Field level:Ljava/util/logging/Level;
      14: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      17: if_acmpne     32
      20: aload_0
      21: getfield      #43                 // Field log:Lreactor/util/Logger;
      24: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      29: ifeq          39
      32: aload_0
      33: invokedynamic #99,  0             // InvokeDynamic #9:accept:(Lreactor/core/publisher/SignalLogger;)Ljava/util/function/LongConsumer;
      38: areturn
      39: aconst_null
      40: areturn

  public java.lang.Runnable onCancelCall();
    Code:
       0: aload_0
       1: getfield      #45                 // Field options:I
       4: iconst_2
       5: iand
       6: iconst_2
       7: if_icmpne     39
      10: aload_0
      11: getfield      #44                 // Field level:Ljava/util/logging/Level;
      14: getstatic     #64                 // Field java/util/logging/Level.INFO:Ljava/util/logging/Level;
      17: if_acmpne     32
      20: aload_0
      21: getfield      #43                 // Field log:Lreactor/util/Logger;
      24: invokeinterface #88,  1           // InterfaceMethod reactor/util/Logger.isInfoEnabled:()Z
      29: ifeq          39
      32: aload_0
      33: invokedynamic #100,  0            // InvokeDynamic #10:run:(Lreactor/core/publisher/SignalLogger;)Ljava/lang/Runnable;
      38: areturn
      39: aconst_null
      40: areturn

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #101                // String /loggers/
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #43                 // Field log:Lreactor/util/Logger;
      16: invokeinterface #102,  1          // InterfaceMethod reactor/util/Logger.getName:()Ljava/lang/String;
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: ldc           #103                // String /
      26: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_0
      30: getfield      #11                 // Field id:J
      33: invokevirtual #40                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      36: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  private void lambda$onCancelCall$9();
    Code:
       0: aload_0
       1: getstatic     #46                 // Field reactor/core/publisher/SignalType.CANCEL:Lreactor/core/publisher/SignalType;
       4: ldc           #32                 // String
       6: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
       9: return

  private void lambda$onRequestCall$8(long);
    Code:
       0: aload_0
       1: getstatic     #49                 // Field reactor/core/publisher/SignalType.REQUEST:Lreactor/core/publisher/SignalType;
       4: ldc2_w        #105                // long 9223372036854775807l
       7: lload_1
       8: lcmp
       9: ifne          17
      12: ldc           #107                // String unbounded
      14: goto          21
      17: lload_1
      18: invokestatic  #108                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      21: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
      24: return

  private void lambda$onAfterTerminateCall$7();
    Code:
       0: aload_0
       1: getstatic     #54                 // Field reactor/core/publisher/SignalType.AFTER_TERMINATE:Lreactor/core/publisher/SignalType;
       4: ldc           #32                 // String
       6: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
       9: return

  private void lambda$onCompleteCall$6();
    Code:
       0: aload_0
       1: getstatic     #52                 // Field reactor/core/publisher/SignalType.ON_COMPLETE:Lreactor/core/publisher/SignalType;
       4: ldc           #32                 // String
       6: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
       9: return

  private void lambda$onErrorCall$5(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #43                 // Field log:Lreactor/util/Logger;
       4: aload_1
       5: iconst_3
       6: anewarray     #60                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: getstatic     #51                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      14: aastore
      15: dup
      16: iconst_1
      17: aload_2
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #8                  // Field source:Lorg/reactivestreams/Publisher;
      25: aastore
      26: invokeinterface #69,  3           // InterfaceMethod reactor/util/Logger.error:(Ljava/lang/String;[Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #43                 // Field log:Lreactor/util/Logger;
      35: ldc           #32                 // String
      37: aload_2
      38: invokeinterface #109,  3          // InterfaceMethod reactor/util/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return

  private void lambda$onErrorCall$4(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #43                 // Field log:Lreactor/util/Logger;
       4: aload_1
       5: iconst_3
       6: anewarray     #60                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: getstatic     #51                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      14: aastore
      15: dup
      16: iconst_1
      17: aload_2
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #8                  // Field source:Lorg/reactivestreams/Publisher;
      25: aastore
      26: invokeinterface #63,  3           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;[Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #43                 // Field log:Lreactor/util/Logger;
      35: ldc           #32                 // String
      37: aload_2
      38: invokeinterface #78,  3           // InterfaceMethod reactor/util/Logger.debug:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return

  private void lambda$onErrorCall$3(java.lang.String, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #43                 // Field log:Lreactor/util/Logger;
       4: aload_1
       5: iconst_3
       6: anewarray     #60                 // class java/lang/Object
       9: dup
      10: iconst_0
      11: getstatic     #51                 // Field reactor/core/publisher/SignalType.ON_ERROR:Lreactor/core/publisher/SignalType;
      14: aastore
      15: dup
      16: iconst_1
      17: aload_2
      18: aastore
      19: dup
      20: iconst_2
      21: aload_0
      22: getfield      #8                  // Field source:Lorg/reactivestreams/Publisher;
      25: aastore
      26: invokeinterface #61,  3           // InterfaceMethod reactor/util/Logger.trace:(Ljava/lang/String;[Ljava/lang/Object;)V
      31: aload_0
      32: getfield      #43                 // Field log:Lreactor/util/Logger;
      35: ldc           #32                 // String
      37: aload_2
      38: invokeinterface #110,  3          // InterfaceMethod reactor/util/Logger.trace:(Ljava/lang/String;Ljava/lang/Throwable;)V
      43: return

  private void lambda$onNextCall$2(java.lang.Object);
    Code:
       0: aload_0
       1: getstatic     #50                 // Field reactor/core/publisher/SignalType.ON_NEXT:Lreactor/core/publisher/SignalType;
       4: aload_1
       5: invokevirtual #111                // Method safeLog:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
       8: return

  private void lambda$onCurrentContextCall$1(reactor.util.context.Context);
    Code:
       0: aload_0
       1: getstatic     #112                // Field reactor/core/publisher/SignalType.ON_CONTEXT:Lreactor/core/publisher/SignalType;
       4: aload_1
       5: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
       8: return

  private void lambda$onSubscribeCall$0(org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: getstatic     #48                 // Field reactor/core/publisher/SignalType.ON_SUBSCRIBE:Lreactor/core/publisher/SignalType;
       4: aload_1
       5: invokestatic  #113                // Method subscriptionAsString:(Lorg/reactivestreams/Subscription;)Ljava/lang/String;
       8: invokevirtual #75                 // Method log:(Lreactor/core/publisher/SignalType;Ljava/lang/Object;)V
      11: return

  static {};
    Code:
       0: new           #114                // class java/util/concurrent/atomic/AtomicLong
       3: dup
       4: lconst_1
       5: invokespecial #115                // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
       8: putstatic     #9                  // Field IDS:Ljava/util/concurrent/atomic/AtomicLong;
      11: return
}
