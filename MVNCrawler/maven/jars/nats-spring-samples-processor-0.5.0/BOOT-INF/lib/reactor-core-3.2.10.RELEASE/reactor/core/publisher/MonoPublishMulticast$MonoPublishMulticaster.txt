Compiled from "MonoPublishMulticast.java"
final class reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster<T> extends reactor.core.publisher.Mono<T> implements reactor.core.publisher.InnerConsumer<T>, reactor.core.publisher.FluxPublishMulticast$PublishMulticasterParent {
  volatile org.reactivestreams.Subscription s;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster, org.reactivestreams.Subscription> S;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster> WIP;

  volatile reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner<T>[] subscribers;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster, reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner[]> SUBSCRIBERS;

  static final reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner[] EMPTY;

  static final reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner[] TERMINATED;

  volatile boolean done;

  T value;

  java.lang.Throwable error;

  volatile boolean connected;

  final reactor.util.context.Context context;

  reactor.core.publisher.MonoPublishMulticast$MonoPublishMulticaster(reactor.util.context.Context);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/core/publisher/Mono."<init>":()V
       4: getstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       7: aload_0
       8: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      11: invokevirtual #4                  // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.lazySet:(Ljava/lang/Object;Ljava/lang/Object;)V
      14: aload_0
      15: aload_1
      16: putfield      #5                  // Field context:Lreactor/util/context/Context;
      19: return

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #6                  // Field reactor/core/Scannable$Attr.PARENT:Lreactor/core/Scannable$Attr;
       4: if_acmpne     12
       7: aload_0
       8: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      11: areturn
      12: aload_1
      13: getstatic     #8                  // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      16: if_acmpne     24
      19: aload_0
      20: getfield      #9                  // Field error:Ljava/lang/Throwable;
      23: areturn
      24: aload_1
      25: getstatic     #10                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      28: if_acmpne     50
      31: aload_0
      32: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      35: invokestatic  #11                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      38: if_acmpne     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      49: areturn
      50: aload_1
      51: getstatic     #13                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      54: if_acmpne     65
      57: aload_0
      58: getfield      #14                 // Field done:Z
      61: invokestatic  #12                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      64: areturn
      65: aload_1
      66: getstatic     #15                 // Field reactor/core/Scannable$Attr.PREFETCH:Lreactor/core/Scannable$Attr;
      69: if_acmpne     77
      72: iconst_1
      73: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: areturn
      77: aload_1
      78: getstatic     #17                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      81: if_acmpne     100
      84: aload_0
      85: getfield      #18                 // Field value:Ljava/lang/Object;
      88: ifnull        95
      91: iconst_1
      92: goto          96
      95: iconst_0
      96: invokestatic  #16                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      99: areturn
     100: aconst_null
     101: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #19                 // Field subscribers:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
       4: invokestatic  #20                 // InterfaceMethod java/util/stream/Stream.of:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: areturn

  public reactor.util.context.Context currentContext();
    Code:
       0: aload_0
       1: getfield      #5                  // Field context:Lreactor/util/context/Context;
       4: areturn

  public void subscribe(reactor.core.CoreSubscriber<? super T>);
    Code:
       0: new           #21                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #22                 // Method reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner."<init>":(Lreactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster;Lreactor/core/CoreSubscriber;)V
       9: astore_2
      10: aload_1
      11: aload_2
      12: invokeinterface #23,  2           // InterfaceMethod reactor/core/CoreSubscriber.onSubscribe:(Lorg/reactivestreams/Subscription;)V
      17: aload_0
      18: aload_2
      19: invokevirtual #24                 // Method add:(Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;)Z
      22: ifeq          46
      25: aload_2
      26: getfield      #25                 // Field reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner.cancelled:I
      29: iconst_1
      30: if_icmpne     39
      33: aload_0
      34: aload_2
      35: invokevirtual #26                 // Method remove:(Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;)V
      38: return
      39: aload_0
      40: invokevirtual #27                 // Method drain:()V
      43: goto          71
      46: aload_0
      47: getfield      #9                  // Field error:Ljava/lang/Throwable;
      50: astore_3
      51: aload_3
      52: ifnull        65
      55: aload_1
      56: aload_3
      57: invokeinterface #28,  2           // InterfaceMethod reactor/core/CoreSubscriber.onError:(Ljava/lang/Throwable;)V
      62: goto          71
      65: aload_1
      66: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      71: return

  public void onSubscribe(org.reactivestreams.Subscription);
    Code:
       0: getstatic     #30                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #31                 // Method reactor/core/publisher/Operators.setOnce:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Lorg/reactivestreams/Subscription;)Z
       8: ifeq          25
      11: aload_0
      12: iconst_1
      13: putfield      #32                 // Field connected:Z
      16: aload_1
      17: ldc2_w        #34                 // long 9223372036854775807l
      20: invokeinterface #36,  3           // InterfaceMethod org/reactivestreams/Subscription.request:(J)V
      25: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #14                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field context:Lreactor/util/context/Context;
      12: invokestatic  #37                 // Method reactor/core/publisher/Operators.onNextDropped:(Ljava/lang/Object;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: aload_1
      18: putfield      #18                 // Field value:Ljava/lang/Object;
      21: aload_0
      22: iconst_1
      23: putfield      #14                 // Field done:Z
      26: aload_0
      27: invokevirtual #27                 // Method drain:()V
      30: return

  public void onError(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #14                 // Field done:Z
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: getfield      #5                  // Field context:Lreactor/util/context/Context;
      12: invokestatic  #38                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      15: return
      16: aload_0
      17: aload_1
      18: putfield      #9                  // Field error:Ljava/lang/Throwable;
      21: aload_0
      22: iconst_1
      23: putfield      #14                 // Field done:Z
      26: aload_0
      27: invokevirtual #27                 // Method drain:()V
      30: return

  public void onComplete();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #14                 // Field done:Z
       5: aload_0
       6: invokevirtual #27                 // Method drain:()V
       9: return

  void drain();
    Code:
       0: getstatic     #39                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #32                 // Field connected:Z
      17: ifeq          187
      20: aload_0
      21: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      24: invokestatic  #11                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      27: if_acmpne     36
      30: aload_0
      31: aconst_null
      32: putfield      #18                 // Field value:Ljava/lang/Object;
      35: return
      36: aload_0
      37: getfield      #18                 // Field value:Ljava/lang/Object;
      40: astore_2
      41: aload_0
      42: getfield      #19                 // Field subscribers:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      45: astore_3
      46: aload_3
      47: arraylength
      48: istore        4
      50: iload         4
      52: ifeq          187
      55: aload_0
      56: getfield      #7                  // Field s:Lorg/reactivestreams/Subscription;
      59: invokestatic  #11                 // Method reactor/core/publisher/Operators.cancelledSubscription:()Lorg/reactivestreams/Subscription;
      62: if_acmpne     71
      65: aload_0
      66: aconst_null
      67: putfield      #18                 // Field value:Ljava/lang/Object;
      70: return
      71: aload_2
      72: ifnonnull     122
      75: getstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      78: aload_0
      79: getstatic     #41                 // Field TERMINATED:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      82: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      85: checkcast     #43                 // class "[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;"
      88: astore_3
      89: aload_3
      90: arraylength
      91: istore        4
      93: iconst_0
      94: istore        5
      96: iload         5
      98: iload         4
     100: if_icmpge     121
     103: aload_3
     104: iload         5
     106: aaload
     107: getfield      #44                 // Field reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner.actual:Lreactor/core/CoreSubscriber;
     110: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     115: iinc          5, 1
     118: goto          96
     121: return
     122: getstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     125: aload_0
     126: getstatic     #41                 // Field TERMINATED:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
     129: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.getAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     132: checkcast     #43                 // class "[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;"
     135: astore_3
     136: aload_3
     137: arraylength
     138: istore        4
     140: iconst_0
     141: istore        5
     143: iload         5
     145: iload         4
     147: if_icmpge     181
     150: aload_3
     151: iload         5
     153: aaload
     154: getfield      #44                 // Field reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner.actual:Lreactor/core/CoreSubscriber;
     157: aload_2
     158: invokeinterface #45,  2           // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
     163: aload_3
     164: iload         5
     166: aaload
     167: getfield      #44                 // Field reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner.actual:Lreactor/core/CoreSubscriber;
     170: invokeinterface #29,  1           // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
     175: iinc          5, 1
     178: goto          143
     181: aload_0
     182: aconst_null
     183: putfield      #18                 // Field value:Ljava/lang/Object;
     186: return
     187: getstatic     #39                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     190: aload_0
     191: iload_1
     192: ineg
     193: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     196: istore_1
     197: iload_1
     198: ifne          13
     201: goto          204
     204: return

  boolean add(reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner<T>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field subscribers:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
       4: astore_2
       5: aload_2
       6: getstatic     #41                 // Field TERMINATED:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
       9: if_acmpne     14
      12: iconst_0
      13: ireturn
      14: aload_2
      15: arraylength
      16: istore_3
      17: iload_3
      18: iconst_1
      19: iadd
      20: anewarray     #21                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
      23: astore        4
      25: aload_2
      26: iconst_0
      27: aload         4
      29: iconst_0
      30: iload_3
      31: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      34: aload         4
      36: iload_3
      37: aload_1
      38: aastore
      39: getstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: aload_0
      43: aload_2
      44: aload         4
      46: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      49: ifeq          54
      52: iconst_1
      53: ireturn
      54: goto          0

  void remove(reactor.core.publisher.MonoPublishMulticast$PublishMulticastInner<T>);
    Code:
       0: aload_0
       1: getfield      #19                 // Field subscribers:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
       4: astore_2
       5: aload_2
       6: getstatic     #41                 // Field TERMINATED:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
       9: if_acmpeq     19
      12: aload_2
      13: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      16: if_acmpne     20
      19: return
      20: aload_2
      21: arraylength
      22: istore_3
      23: iconst_m1
      24: istore        4
      26: iconst_0
      27: istore        5
      29: iload         5
      31: iload_3
      32: if_icmpge     56
      35: aload_2
      36: iload         5
      38: aaload
      39: aload_1
      40: if_acmpne     50
      43: iload         5
      45: istore        4
      47: goto          56
      50: iinc          5, 1
      53: goto          29
      56: iload         4
      58: ifge          62
      61: return
      62: iload_3
      63: iconst_1
      64: if_icmpne     75
      67: getstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      70: astore        5
      72: goto          111
      75: iload_3
      76: iconst_1
      77: isub
      78: anewarray     #21                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
      81: astore        5
      83: aload_2
      84: iconst_0
      85: aload         5
      87: iconst_0
      88: iload         4
      90: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      93: aload_2
      94: iload         4
      96: iconst_1
      97: iadd
      98: aload         5
     100: iload         4
     102: iload_3
     103: iload         4
     105: isub
     106: iconst_1
     107: isub
     108: invokestatic  #47                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     111: getstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     114: aload_0
     115: aload_2
     116: aload         5
     118: invokevirtual #48                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
     121: ifeq          125
     124: return
     125: goto          0

  public void terminate();
    Code:
       0: getstatic     #30                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #49                 // Method reactor/core/publisher/Operators.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Z
       7: pop
       8: getstatic     #39                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      11: aload_0
      12: invokevirtual #40                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      15: ifne          30
      18: aload_0
      19: getfield      #32                 // Field connected:Z
      22: ifeq          30
      25: aload_0
      26: aconst_null
      27: putfield      #18                 // Field value:Ljava/lang/Object;
      30: return

  static {};
    Code:
       0: ldc           #50                 // class reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster
       2: ldc           #51                 // class org/reactivestreams/Subscription
       4: ldc           #52                 // String s
       6: invokestatic  #53                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       9: putstatic     #30                 // Field S:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      12: ldc           #50                 // class reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster
      14: ldc           #54                 // String wip
      16: invokestatic  #55                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      19: putstatic     #39                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      22: ldc           #50                 // class reactor/core/publisher/MonoPublishMulticast$MonoPublishMulticaster
      24: ldc           #43                 // class "[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;"
      26: ldc           #56                 // String subscribers
      28: invokestatic  #53                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      31: putstatic     #2                  // Field SUBSCRIBERS:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      34: iconst_0
      35: anewarray     #21                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
      38: putstatic     #3                  // Field EMPTY:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      41: iconst_0
      42: anewarray     #21                 // class reactor/core/publisher/MonoPublishMulticast$PublishMulticastInner
      45: putstatic     #41                 // Field TERMINATED:[Lreactor/core/publisher/MonoPublishMulticast$PublishMulticastInner;
      48: return
}
