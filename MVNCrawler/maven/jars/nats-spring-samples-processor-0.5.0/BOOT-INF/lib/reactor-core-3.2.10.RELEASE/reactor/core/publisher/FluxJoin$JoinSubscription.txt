Compiled from "FluxJoin.java"
final class reactor.core.publisher.FluxJoin$JoinSubscription<TLeft, TRight, TLeftEnd, TRightEnd, R> implements reactor.core.publisher.FluxGroupJoin$JoinSupport<R> {
  final java.util.Queue<java.lang.Object> queue;

  final java.util.function.BiPredicate<java.lang.Object, java.lang.Object> queueBiOffer;

  final reactor.core.Disposable$Composite cancellations;

  final java.util.Map<java.lang.Integer, TLeft> lefts;

  final java.util.Map<java.lang.Integer, TRight> rights;

  final java.util.function.Function<? super TLeft, ? extends org.reactivestreams.Publisher<TLeftEnd>> leftEnd;

  final java.util.function.Function<? super TRight, ? extends org.reactivestreams.Publisher<TRightEnd>> rightEnd;

  final java.util.function.BiFunction<? super TLeft, ? super TRight, ? extends R> resultSelector;

  final reactor.core.CoreSubscriber<? super R> actual;

  volatile int wip;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxJoin$JoinSubscription> WIP;

  volatile int active;

  static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater<reactor.core.publisher.FluxJoin$JoinSubscription> ACTIVE;

  volatile long requested;

  static final java.util.concurrent.atomic.AtomicLongFieldUpdater<reactor.core.publisher.FluxJoin$JoinSubscription> REQUESTED;

  volatile java.lang.Throwable error;

  static final java.util.concurrent.atomic.AtomicReferenceFieldUpdater<reactor.core.publisher.FluxJoin$JoinSubscription, java.lang.Throwable> ERROR;

  int leftIndex;

  int rightIndex;

  static final java.lang.Integer LEFT_VALUE;

  static final java.lang.Integer RIGHT_VALUE;

  static final java.lang.Integer LEFT_CLOSE;

  static final java.lang.Integer RIGHT_CLOSE;

  reactor.core.publisher.FluxJoin$JoinSubscription(reactor.core.CoreSubscriber<? super R>, java.util.function.Function<? super TLeft, ? extends org.reactivestreams.Publisher<TLeftEnd>>, java.util.function.Function<? super TRight, ? extends org.reactivestreams.Publisher<TRightEnd>>, java.util.function.BiFunction<? super TLeft, ? super TRight, ? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       9: aload_0
      10: invokestatic  #3                  // Method reactor/core/Disposables.composite:()Lreactor/core/Disposable$Composite;
      13: putfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      16: aload_0
      17: invokestatic  #5                  // Method reactor/util/concurrent/Queues.unboundedMultiproducer:()Ljava/util/function/Supplier;
      20: invokeinterface #6,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      25: checkcast     #7                  // class java/util/Queue
      28: putfield      #8                  // Field queue:Ljava/util/Queue;
      31: aload_0
      32: aload_0
      33: getfield      #8                  // Field queue:Ljava/util/Queue;
      36: checkcast     #9                  // class java/util/function/BiPredicate
      39: putfield      #10                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
      42: aload_0
      43: new           #11                 // class java/util/LinkedHashMap
      46: dup
      47: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":()V
      50: putfield      #13                 // Field lefts:Ljava/util/Map;
      53: aload_0
      54: new           #11                 // class java/util/LinkedHashMap
      57: dup
      58: invokespecial #12                 // Method java/util/LinkedHashMap."<init>":()V
      61: putfield      #14                 // Field rights:Ljava/util/Map;
      64: aload_0
      65: aload_2
      66: putfield      #15                 // Field leftEnd:Ljava/util/function/Function;
      69: aload_0
      70: aload_3
      71: putfield      #16                 // Field rightEnd:Ljava/util/function/Function;
      74: aload_0
      75: aload         4
      77: putfield      #17                 // Field resultSelector:Ljava/util/function/BiFunction;
      80: getstatic     #18                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      83: aload_0
      84: iconst_2
      85: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.lazySet:(Ljava/lang/Object;I)V
      88: return

  public final reactor.core.CoreSubscriber<? super R> actual();
    Code:
       0: aload_0
       1: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
       4: areturn

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
       4: invokestatic  #20                 // InterfaceMethod reactor/core/Scannable.from:(Ljava/lang/Object;)Lreactor/core/Scannable;
       7: invokeinterface #21,  1           // InterfaceMethod reactor/core/Scannable.inners:()Ljava/util/stream/Stream;
      12: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #22                 // Field reactor/core/Scannable$Attr.REQUESTED_FROM_DOWNSTREAM:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: getfield      #23                 // Field requested:J
      11: invokestatic  #24                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: areturn
      15: aload_1
      16: getstatic     #25                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
      19: if_acmpne     35
      22: aload_0
      23: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      26: invokeinterface #26,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
      31: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      34: areturn
      35: aload_1
      36: getstatic     #28                 // Field reactor/core/Scannable$Attr.BUFFERED:Lreactor/core/Scannable$Attr;
      39: if_acmpne     57
      42: aload_0
      43: getfield      #8                  // Field queue:Ljava/util/Queue;
      46: invokeinterface #29,  1           // InterfaceMethod java/util/Queue.size:()I
      51: iconst_2
      52: idiv
      53: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      56: areturn
      57: aload_1
      58: getstatic     #31                 // Field reactor/core/Scannable$Attr.TERMINATED:Lreactor/core/Scannable$Attr;
      61: if_acmpne     80
      64: aload_0
      65: getfield      #32                 // Field active:I
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: invokestatic  #27                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: areturn
      80: aload_1
      81: getstatic     #33                 // Field reactor/core/Scannable$Attr.ERROR:Lreactor/core/Scannable$Attr;
      84: if_acmpne     92
      87: aload_0
      88: getfield      #34                 // Field error:Ljava/lang/Throwable;
      91: areturn
      92: aload_0
      93: aload_1
      94: invokespecial #35                 // InterfaceMethod reactor/core/publisher/FluxGroupJoin$JoinSupport.scanUnsafe:(Lreactor/core/Scannable$Attr;)Ljava/lang/Object;
      97: areturn

  public void request(long);
    Code:
       0: lload_1
       1: invokestatic  #36                 // Method reactor/core/publisher/Operators.validate:(J)Z
       4: ifeq          16
       7: getstatic     #37                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      10: aload_0
      11: lload_1
      12: invokestatic  #38                 // Method reactor/core/publisher/Operators.addCap:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
      15: pop2
      16: return

  public void cancel();
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
       4: invokeinterface #26,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      17: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      22: getstatic     #40                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      25: aload_0
      26: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
      29: ifne          41
      32: aload_0
      33: getfield      #8                  // Field queue:Ljava/util/Queue;
      36: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
      41: return

  void errorAll(org.reactivestreams.Subscriber<?>);
    Code:
       0: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: invokestatic  #44                 // Method reactor/core/Exceptions.terminate:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;)Ljava/lang/Throwable;
       7: astore_2
       8: aload_0
       9: getfield      #13                 // Field lefts:Ljava/util/Map;
      12: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
      17: aload_0
      18: getfield      #14                 // Field rights:Ljava/util/Map;
      21: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
      26: aload_1
      27: aload_2
      28: invokeinterface #46,  2           // InterfaceMethod org/reactivestreams/Subscriber.onError:(Ljava/lang/Throwable;)V
      33: return

  void drain();
    Code:
       0: getstatic     #40                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       3: aload_0
       4: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.getAndIncrement:(Ljava/lang/Object;)I
       7: ifeq          11
      10: return
      11: iconst_1
      12: istore_1
      13: aload_0
      14: getfield      #8                  // Field queue:Ljava/util/Queue;
      17: astore_2
      18: aload_0
      19: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      22: astore_3
      23: aload_0
      24: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      27: invokeinterface #26,  1           // InterfaceMethod reactor/core/Disposable$Composite.isDisposed:()Z
      32: ifeq          42
      35: aload_2
      36: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
      41: return
      42: aload_0
      43: getfield      #34                 // Field error:Ljava/lang/Throwable;
      46: astore        4
      48: aload         4
      50: ifnull        74
      53: aload_2
      54: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
      59: aload_0
      60: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
      63: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
      68: aload_0
      69: aload_3
      70: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
      73: return
      74: aload_0
      75: getfield      #32                 // Field active:I
      78: ifne          85
      81: iconst_1
      82: goto          86
      85: iconst_0
      86: istore        5
      88: aload_2
      89: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
      94: checkcast     #49                 // class java/lang/Integer
      97: astore        6
      99: aload         6
     101: ifnonnull     108
     104: iconst_1
     105: goto          109
     108: iconst_0
     109: istore        7
     111: iload         5
     113: ifeq          155
     116: iload         7
     118: ifeq          155
     121: aload_0
     122: getfield      #13                 // Field lefts:Ljava/util/Map;
     125: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
     130: aload_0
     131: getfield      #14                 // Field rights:Ljava/util/Map;
     134: invokeinterface #45,  1           // InterfaceMethod java/util/Map.clear:()V
     139: aload_0
     140: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     143: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     148: aload_3
     149: invokeinterface #50,  1           // InterfaceMethod org/reactivestreams/Subscriber.onComplete:()V
     154: return
     155: iload         7
     157: ifeq          163
     160: goto          961
     163: aload_2
     164: invokeinterface #48,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
     169: astore        8
     171: aload         6
     173: getstatic     #51                 // Field LEFT_VALUE:Ljava/lang/Integer;
     176: if_acmpne     518
     179: aload         8
     181: astore        9
     183: aload_0
     184: dup
     185: getfield      #52                 // Field leftIndex:I
     188: dup_x1
     189: iconst_1
     190: iadd
     191: putfield      #52                 // Field leftIndex:I
     194: istore        10
     196: aload_0
     197: getfield      #13                 // Field lefts:Ljava/util/Map;
     200: iload         10
     202: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     205: aload         9
     207: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     212: pop
     213: aload_0
     214: getfield      #15                 // Field leftEnd:Ljava/util/function/Function;
     217: aload         9
     219: invokeinterface #54,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     224: ldc           #55                 // String The leftEnd returned a null Publisher
     226: invokestatic  #56                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     229: checkcast     #57                 // class org/reactivestreams/Publisher
     232: astore        11
     234: goto          270
     237: astore        12
     239: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     242: aload_0
     243: aload_0
     244: aload         12
     246: aload         9
     248: aload_0
     249: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     252: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     257: invokestatic  #60                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     260: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     263: pop
     264: aload_0
     265: aload_3
     266: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     269: return
     270: new           #62                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     273: dup
     274: aload_0
     275: iconst_1
     276: iload         10
     278: invokespecial #63                 // Method reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber."<init>":(Lreactor/core/publisher/FluxGroupJoin$JoinSupport;ZI)V
     281: astore        12
     283: aload_0
     284: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     287: aload         12
     289: invokeinterface #64,  2           // InterfaceMethod reactor/core/Disposable$Composite.add:(Lreactor/core/Disposable;)Z
     294: pop
     295: aload         11
     297: aload         12
     299: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     304: aload_0
     305: getfield      #34                 // Field error:Ljava/lang/Throwable;
     308: astore        4
     310: aload         4
     312: ifnull        336
     315: aload_2
     316: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
     321: aload_0
     322: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     325: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     330: aload_0
     331: aload_3
     332: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     335: return
     336: aload_0
     337: getfield      #23                 // Field requested:J
     340: lstore        13
     342: lconst_0
     343: lstore        15
     345: aload_0
     346: getfield      #14                 // Field rights:Ljava/util/Map;
     349: invokeinterface #66,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     354: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     359: astore        17
     361: aload         17
     363: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     368: ifeq          498
     371: aload         17
     373: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     378: astore        18
     380: aload_0
     381: getfield      #17                 // Field resultSelector:Ljava/util/function/BiFunction;
     384: aload         9
     386: aload         18
     388: invokeinterface #70,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     393: ldc           #71                 // String The resultSelector returned a null value
     395: invokestatic  #56                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     398: astore        19
     400: goto          436
     403: astore        20
     405: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     408: aload_0
     409: aload_0
     410: aload         20
     412: aload         18
     414: aload_0
     415: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     418: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     423: invokestatic  #60                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     426: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     429: pop
     430: aload_0
     431: aload_3
     432: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     435: return
     436: lload         15
     438: lload         13
     440: lcmp
     441: ifeq          461
     444: aload_3
     445: aload         19
     447: invokeinterface #72,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     452: lload         15
     454: lconst_1
     455: ladd
     456: lstore        15
     458: goto          495
     461: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     464: aload_0
     465: ldc           #73                 // String Could not emit value due to lack of requests
     467: invokestatic  #74                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
     470: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     473: pop
     474: aload_2
     475: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
     480: aload_0
     481: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     484: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     489: aload_0
     490: aload_3
     491: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     494: return
     495: goto          361
     498: lload         15
     500: lconst_0
     501: lcmp
     502: ifeq          515
     505: getstatic     #37                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     508: aload_0
     509: lload         15
     511: invokestatic  #75                 // Method reactor/core/publisher/Operators.produced:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     514: pop2
     515: goto          958
     518: aload         6
     520: getstatic     #76                 // Field RIGHT_VALUE:Ljava/lang/Integer;
     523: if_acmpne     865
     526: aload         8
     528: astore        9
     530: aload_0
     531: dup
     532: getfield      #77                 // Field rightIndex:I
     535: dup_x1
     536: iconst_1
     537: iadd
     538: putfield      #77                 // Field rightIndex:I
     541: istore        10
     543: aload_0
     544: getfield      #14                 // Field rights:Ljava/util/Map;
     547: iload         10
     549: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     552: aload         9
     554: invokeinterface #53,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     559: pop
     560: aload_0
     561: getfield      #16                 // Field rightEnd:Ljava/util/function/Function;
     564: aload         9
     566: invokeinterface #54,  2           // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
     571: ldc           #78                 // String The rightEnd returned a null Publisher
     573: invokestatic  #56                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     576: checkcast     #57                 // class org/reactivestreams/Publisher
     579: astore        11
     581: goto          617
     584: astore        12
     586: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     589: aload_0
     590: aload_0
     591: aload         12
     593: aload         9
     595: aload_0
     596: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     599: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     604: invokestatic  #60                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     607: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     610: pop
     611: aload_0
     612: aload_3
     613: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     616: return
     617: new           #62                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     620: dup
     621: aload_0
     622: iconst_0
     623: iload         10
     625: invokespecial #63                 // Method reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber."<init>":(Lreactor/core/publisher/FluxGroupJoin$JoinSupport;ZI)V
     628: astore        12
     630: aload_0
     631: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     634: aload         12
     636: invokeinterface #64,  2           // InterfaceMethod reactor/core/Disposable$Composite.add:(Lreactor/core/Disposable;)Z
     641: pop
     642: aload         11
     644: aload         12
     646: invokeinterface #65,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
     651: aload_0
     652: getfield      #34                 // Field error:Ljava/lang/Throwable;
     655: astore        4
     657: aload         4
     659: ifnull        683
     662: aload_2
     663: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
     668: aload_0
     669: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     672: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     677: aload_0
     678: aload_3
     679: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     682: return
     683: aload_0
     684: getfield      #23                 // Field requested:J
     687: lstore        13
     689: lconst_0
     690: lstore        15
     692: aload_0
     693: getfield      #13                 // Field lefts:Ljava/util/Map;
     696: invokeinterface #66,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
     701: invokeinterface #67,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     706: astore        17
     708: aload         17
     710: invokeinterface #68,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     715: ifeq          845
     718: aload         17
     720: invokeinterface #69,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     725: astore        18
     727: aload_0
     728: getfield      #17                 // Field resultSelector:Ljava/util/function/BiFunction;
     731: aload         18
     733: aload         9
     735: invokeinterface #70,  3           // InterfaceMethod java/util/function/BiFunction.apply:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     740: ldc           #71                 // String The resultSelector returned a null value
     742: invokestatic  #56                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
     745: astore        19
     747: goto          783
     750: astore        20
     752: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     755: aload_0
     756: aload_0
     757: aload         20
     759: aload         18
     761: aload_0
     762: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
     765: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
     770: invokestatic  #60                 // Method reactor/core/publisher/Operators.onOperatorError:(Lorg/reactivestreams/Subscription;Ljava/lang/Throwable;Ljava/lang/Object;Lreactor/util/context/Context;)Ljava/lang/Throwable;
     773: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     776: pop
     777: aload_0
     778: aload_3
     779: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     782: return
     783: lload         15
     785: lload         13
     787: lcmp
     788: ifeq          808
     791: aload_3
     792: aload         19
     794: invokeinterface #72,  2           // InterfaceMethod org/reactivestreams/Subscriber.onNext:(Ljava/lang/Object;)V
     799: lload         15
     801: lconst_1
     802: ladd
     803: lstore        15
     805: goto          842
     808: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
     811: aload_0
     812: ldc           #73                 // String Could not emit value due to lack of requests
     814: invokestatic  #74                 // Method reactor/core/Exceptions.failWithOverflow:(Ljava/lang/String;)Ljava/lang/IllegalStateException;
     817: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
     820: pop
     821: aload_2
     822: invokeinterface #42,  1           // InterfaceMethod java/util/Queue.clear:()V
     827: aload_0
     828: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     831: invokeinterface #39,  1           // InterfaceMethod reactor/core/Disposable$Composite.dispose:()V
     836: aload_0
     837: aload_3
     838: invokevirtual #47                 // Method errorAll:(Lorg/reactivestreams/Subscriber;)V
     841: return
     842: goto          708
     845: lload         15
     847: lconst_0
     848: lcmp
     849: ifeq          862
     852: getstatic     #37                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
     855: aload_0
     856: lload         15
     858: invokestatic  #75                 // Method reactor/core/publisher/Operators.produced:(Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;Ljava/lang/Object;J)J
     861: pop2
     862: goto          958
     865: aload         6
     867: getstatic     #79                 // Field LEFT_CLOSE:Ljava/lang/Integer;
     870: if_acmpne     913
     873: aload         8
     875: checkcast     #62                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     878: astore        9
     880: aload_0
     881: getfield      #13                 // Field lefts:Ljava/util/Map;
     884: aload         9
     886: getfield      #80                 // Field reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber.index:I
     889: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     892: invokeinterface #81,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     897: pop
     898: aload_0
     899: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     902: aload         9
     904: invokeinterface #82,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
     909: pop
     910: goto          958
     913: aload         6
     915: getstatic     #83                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
     918: if_acmpne     958
     921: aload         8
     923: checkcast     #62                 // class reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber
     926: astore        9
     928: aload_0
     929: getfield      #14                 // Field rights:Ljava/util/Map;
     932: aload         9
     934: getfield      #80                 // Field reactor/core/publisher/FluxGroupJoin$LeftRightEndSubscriber.index:I
     937: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     940: invokeinterface #81,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     945: pop
     946: aload_0
     947: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
     950: aload         9
     952: invokeinterface #82,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
     957: pop
     958: goto          23
     961: getstatic     #40                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
     964: aload_0
     965: iload_1
     966: ineg
     967: invokevirtual #84                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.addAndGet:(Ljava/lang/Object;I)I
     970: istore_1
     971: iload_1
     972: ifne          23
     975: goto          978
     978: return
    Exception table:
       from    to  target type
         213   234   237   Class java/lang/Throwable
         380   400   403   Class java/lang/Throwable
         560   581   584   Class java/lang/Throwable
         727   747   750   Class java/lang/Throwable

  public void innerError(java.lang.Throwable);
    Code:
       0: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          26
      11: getstatic     #18                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: invokevirtual #85                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      18: pop
      19: aload_0
      20: invokevirtual #86                 // Method drain:()V
      23: goto          39
      26: aload_1
      27: aload_0
      28: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      31: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      36: invokestatic  #87                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      39: return

  public void innerComplete(reactor.core.publisher.FluxGroupJoin$LeftRightSubscriber);
    Code:
       0: aload_0
       1: getfield      #4                  // Field cancellations:Lreactor/core/Disposable$Composite;
       4: aload_1
       5: invokeinterface #82,  2           // InterfaceMethod reactor/core/Disposable$Composite.remove:(Lreactor/core/Disposable;)Z
      10: pop
      11: getstatic     #18                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      14: aload_0
      15: invokevirtual #85                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.decrementAndGet:(Ljava/lang/Object;)I
      18: pop
      19: aload_0
      20: invokevirtual #86                 // Method drain:()V
      23: return

  public void innerValue(boolean, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #10                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
       4: iload_1
       5: ifeq          14
       8: getstatic     #51                 // Field LEFT_VALUE:Ljava/lang/Integer;
      11: goto          17
      14: getstatic     #76                 // Field RIGHT_VALUE:Ljava/lang/Integer;
      17: aload_2
      18: invokeinterface #88,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: invokevirtual #86                 // Method drain:()V
      28: return

  public void innerClose(boolean, reactor.core.publisher.FluxGroupJoin$LeftRightEndSubscriber);
    Code:
       0: aload_0
       1: getfield      #10                 // Field queueBiOffer:Ljava/util/function/BiPredicate;
       4: iload_1
       5: ifeq          14
       8: getstatic     #79                 // Field LEFT_CLOSE:Ljava/lang/Integer;
      11: goto          17
      14: getstatic     #83                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
      17: aload_2
      18: invokeinterface #88,  3           // InterfaceMethod java/util/function/BiPredicate.test:(Ljava/lang/Object;Ljava/lang/Object;)Z
      23: pop
      24: aload_0
      25: invokevirtual #86                 // Method drain:()V
      28: return

  public void innerCloseError(java.lang.Throwable);
    Code:
       0: getstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
       3: aload_0
       4: aload_1
       5: invokestatic  #61                 // Method reactor/core/Exceptions.addThrowable:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/lang/Object;Ljava/lang/Throwable;)Z
       8: ifeq          18
      11: aload_0
      12: invokevirtual #86                 // Method drain:()V
      15: goto          31
      18: aload_1
      19: aload_0
      20: getfield      #2                  // Field actual:Lreactor/core/CoreSubscriber;
      23: invokeinterface #59,  1           // InterfaceMethod reactor/core/CoreSubscriber.currentContext:()Lreactor/util/context/Context;
      28: invokestatic  #87                 // Method reactor/core/publisher/Operators.onErrorDropped:(Ljava/lang/Throwable;Lreactor/util/context/Context;)V
      31: return

  static {};
    Code:
       0: ldc           #89                 // class reactor/core/publisher/FluxJoin$JoinSubscription
       2: ldc           #90                 // String wip
       4: invokestatic  #91                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
       7: putstatic     #40                 // Field WIP:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      10: ldc           #89                 // class reactor/core/publisher/FluxJoin$JoinSubscription
      12: ldc           #92                 // String active
      14: invokestatic  #91                 // Method java/util/concurrent/atomic/AtomicIntegerFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      17: putstatic     #18                 // Field ACTIVE:Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;
      20: ldc           #89                 // class reactor/core/publisher/FluxJoin$JoinSubscription
      22: ldc           #93                 // String requested
      24: invokestatic  #94                 // Method java/util/concurrent/atomic/AtomicLongFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      27: putstatic     #37                 // Field REQUESTED:Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;
      30: ldc           #89                 // class reactor/core/publisher/FluxJoin$JoinSubscription
      32: ldc           #58                 // class java/lang/Throwable
      34: ldc           #95                 // String error
      36: invokestatic  #96                 // Method java/util/concurrent/atomic/AtomicReferenceFieldUpdater.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      39: putstatic     #43                 // Field ERROR:Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;
      42: iconst_1
      43: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      46: putstatic     #51                 // Field LEFT_VALUE:Ljava/lang/Integer;
      49: iconst_2
      50: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      53: putstatic     #76                 // Field RIGHT_VALUE:Ljava/lang/Integer;
      56: iconst_3
      57: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: putstatic     #79                 // Field LEFT_CLOSE:Ljava/lang/Integer;
      63: iconst_4
      64: invokestatic  #30                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      67: putstatic     #83                 // Field RIGHT_CLOSE:Ljava/lang/Integer;
      70: return
}
