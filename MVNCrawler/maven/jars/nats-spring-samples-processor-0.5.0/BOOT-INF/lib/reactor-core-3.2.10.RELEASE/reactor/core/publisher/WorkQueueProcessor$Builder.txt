Compiled from "WorkQueueProcessor.java"
public final class reactor.core.publisher.WorkQueueProcessor$Builder<T> {
  java.lang.String name;

  java.util.concurrent.ExecutorService executor;

  java.util.concurrent.ExecutorService requestTaskExecutor;

  int bufferSize;

  reactor.util.concurrent.WaitStrategy waitStrategy;

  boolean share;

  boolean autoCancel;

  reactor.core.publisher.WorkQueueProcessor$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field reactor/util/concurrent/Queues.SMALL_BUFFER_SIZE:I
       8: putfield      #3                  // Field bufferSize:I
      11: aload_0
      12: iconst_1
      13: putfield      #4                  // Field autoCancel:Z
      16: aload_0
      17: iconst_0
      18: putfield      #5                  // Field share:Z
      21: return

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> name(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field executor:Ljava/util/concurrent/ExecutorService;
       4: ifnull        17
       7: new           #7                  // class java/lang/IllegalArgumentException
      10: dup
      11: ldc           #8                  // String Executor service is configured, name will not be used.
      13: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: aload_1
      19: putfield      #10                 // Field name:Ljava/lang/String;
      22: aload_0
      23: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> bufferSize(int);
    Code:
       0: iload_1
       1: invokestatic  #11                 // Method reactor/util/concurrent/Queues.isPowerOfTwo:(I)Z
       4: ifne          34
       7: new           #7                  // class java/lang/IllegalArgumentException
      10: dup
      11: new           #12                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      18: ldc           #14                 // String bufferSize must be a power of 2 :
      20: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: iload_1
      24: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      27: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      30: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      33: athrow
      34: iload_1
      35: iconst_1
      36: if_icmpge     66
      39: new           #7                  // class java/lang/IllegalArgumentException
      42: dup
      43: new           #12                 // class java/lang/StringBuilder
      46: dup
      47: invokespecial #13                 // Method java/lang/StringBuilder."<init>":()V
      50: ldc           #18                 // String bufferSize must be strictly positive, was:
      52: invokevirtual #15                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: iload_1
      56: invokevirtual #16                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: invokevirtual #17                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_0
      67: iload_1
      68: putfield      #3                  // Field bufferSize:I
      71: aload_0
      72: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> waitStrategy(reactor.util.concurrent.WaitStrategy);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #19                 // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
       5: aload_0
       6: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> autoCancel(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field autoCancel:Z
       5: aload_0
       6: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> executor(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field executor:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> requestTaskExecutor(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field requestTaskExecutor:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: areturn

  public reactor.core.publisher.WorkQueueProcessor$Builder<T> share(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field share:Z
       5: aload_0
       6: areturn

  public reactor.core.publisher.WorkQueueProcessor<T> build();
    Code:
       0: aload_0
       1: getfield      #10                 // Field name:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #10                 // Field name:Ljava/lang/String;
      11: goto          19
      14: ldc           #21                 // class reactor/core/publisher/WorkQueueProcessor
      16: invokevirtual #22                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      19: astore_1
      20: aload_0
      21: getfield      #19                 // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
      24: ifnull        34
      27: aload_0
      28: getfield      #19                 // Field waitStrategy:Lreactor/util/concurrent/WaitStrategy;
      31: goto          37
      34: invokestatic  #23                 // Method reactor/util/concurrent/WaitStrategy.liteBlocking:()Lreactor/util/concurrent/WaitStrategy;
      37: astore_2
      38: aload_0
      39: getfield      #6                  // Field executor:Ljava/util/concurrent/ExecutorService;
      42: ifnull        49
      45: aconst_null
      46: goto          61
      49: new           #24                 // class reactor/core/publisher/EventLoopProcessor$EventLoopFactory
      52: dup
      53: aload_1
      54: aload_0
      55: getfield      #4                  // Field autoCancel:Z
      58: invokespecial #25                 // Method reactor/core/publisher/EventLoopProcessor$EventLoopFactory."<init>":(Ljava/lang/String;Z)V
      61: astore_3
      62: aload_0
      63: getfield      #20                 // Field requestTaskExecutor:Ljava/util/concurrent/ExecutorService;
      66: ifnull        76
      69: aload_0
      70: getfield      #20                 // Field requestTaskExecutor:Ljava/util/concurrent/ExecutorService;
      73: goto          85
      76: aload_3
      77: ldc           #21                 // class reactor/core/publisher/WorkQueueProcessor
      79: invokestatic  #26                 // Method reactor/core/publisher/EventLoopProcessor.defaultName:(Ljava/util/concurrent/ThreadFactory;Ljava/lang/Class;)Ljava/lang/String;
      82: invokestatic  #27                 // Method reactor/core/publisher/EventLoopProcessor.defaultRequestTaskExecutor:(Ljava/lang/String;)Ljava/util/concurrent/ExecutorService;
      85: astore        4
      87: new           #21                 // class reactor/core/publisher/WorkQueueProcessor
      90: dup
      91: aload_3
      92: aload_0
      93: getfield      #6                  // Field executor:Ljava/util/concurrent/ExecutorService;
      96: aload         4
      98: aload_0
      99: getfield      #3                  // Field bufferSize:I
     102: aload_2
     103: aload_0
     104: getfield      #5                  // Field share:Z
     107: aload_0
     108: getfield      #4                  // Field autoCancel:Z
     111: invokespecial #28                 // Method reactor/core/publisher/WorkQueueProcessor."<init>":(Ljava/util/concurrent/ThreadFactory;Ljava/util/concurrent/ExecutorService;Ljava/util/concurrent/ExecutorService;ILreactor/util/concurrent/WaitStrategy;ZZ)V
     114: areturn
}
