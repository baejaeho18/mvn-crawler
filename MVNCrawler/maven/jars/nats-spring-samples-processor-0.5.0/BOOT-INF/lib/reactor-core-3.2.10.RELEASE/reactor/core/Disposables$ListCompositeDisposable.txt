Compiled from "Disposables.java"
final class reactor.core.Disposables$ListCompositeDisposable implements reactor.core.Disposable$Composite,reactor.core.Scannable {
  java.util.List<reactor.core.Disposable> resources;

  volatile boolean disposed;

  reactor.core.Disposables$ListCompositeDisposable();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  reactor.core.Disposables$ListCompositeDisposable(reactor.core.Disposable...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String resources is null
       7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: new           #4                  // class java/util/LinkedList
      15: dup
      16: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      19: putfield      #6                  // Field resources:Ljava/util/List;
      22: aload_1
      23: astore_2
      24: aload_2
      25: arraylength
      26: istore_3
      27: iconst_0
      28: istore        4
      30: iload         4
      32: iload_3
      33: if_icmpge     68
      36: aload_2
      37: iload         4
      39: aaload
      40: astore        5
      42: aload         5
      44: ldc           #7                  // String Disposable item is null
      46: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      49: pop
      50: aload_0
      51: getfield      #6                  // Field resources:Ljava/util/List;
      54: aload         5
      56: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      61: pop
      62: iinc          4, 1
      65: goto          30
      68: return

  reactor.core.Disposables$ListCompositeDisposable(java.lang.Iterable<? extends reactor.core.Disposable>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String resources is null
       7: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: new           #4                  // class java/util/LinkedList
      15: dup
      16: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      19: putfield      #6                  // Field resources:Ljava/util/List;
      22: aload_1
      23: invokeinterface #9,  1            // InterfaceMethod java/lang/Iterable.iterator:()Ljava/util/Iterator;
      28: astore_2
      29: aload_2
      30: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      35: ifeq          69
      38: aload_2
      39: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      44: checkcast     #12                 // class reactor/core/Disposable
      47: astore_3
      48: aload_3
      49: ldc           #7                  // String Disposable item is null
      51: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      54: pop
      55: aload_0
      56: getfield      #6                  // Field resources:Ljava/util/List;
      59: aload_3
      60: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      65: pop
      66: goto          29
      69: return

  public void dispose();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disposed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #13                 // Field disposed:Z
      16: ifeq          22
      19: aload_2
      20: monitorexit
      21: return
      22: aload_0
      23: iconst_1
      24: putfield      #13                 // Field disposed:Z
      27: aload_0
      28: getfield      #6                  // Field resources:Ljava/util/List;
      31: astore_1
      32: aload_0
      33: aconst_null
      34: putfield      #6                  // Field resources:Ljava/util/List;
      37: aload_2
      38: monitorexit
      39: goto          47
      42: astore_3
      43: aload_2
      44: monitorexit
      45: aload_3
      46: athrow
      47: aload_0
      48: aload_1
      49: invokevirtual #14                 // Method dispose:(Ljava/util/List;)V
      52: return
    Exception table:
       from    to  target type
          12    21    42   any
          22    39    42   any
          42    45    42   any

  public boolean isDisposed();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disposed:Z
       4: ireturn

  public boolean add(reactor.core.Disposable);
    Code:
       0: aload_1
       1: ldc           #15                 // String d is null
       3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #13                 // Field disposed:Z
      11: ifne          71
      14: aload_0
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: getfield      #13                 // Field disposed:Z
      22: ifne          59
      25: aload_0
      26: getfield      #6                  // Field resources:Ljava/util/List;
      29: astore_3
      30: aload_3
      31: ifnonnull     47
      34: new           #4                  // class java/util/LinkedList
      37: dup
      38: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      41: astore_3
      42: aload_0
      43: aload_3
      44: putfield      #6                  // Field resources:Ljava/util/List;
      47: aload_3
      48: aload_1
      49: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      54: pop
      55: iconst_1
      56: aload_2
      57: monitorexit
      58: ireturn
      59: aload_2
      60: monitorexit
      61: goto          71
      64: astore        4
      66: aload_2
      67: monitorexit
      68: aload         4
      70: athrow
      71: aload_1
      72: invokeinterface #16,  1           // InterfaceMethod reactor/core/Disposable.dispose:()V
      77: iconst_0
      78: ireturn
    Exception table:
       from    to  target type
          18    58    64   any
          59    61    64   any
          64    68    64   any

  public boolean addAll(java.util.Collection<? extends reactor.core.Disposable>);
    Code:
       0: aload_1
       1: ldc           #17                 // String ds is null
       3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #13                 // Field disposed:Z
      11: ifne          113
      14: aload_0
      15: dup
      16: astore_2
      17: monitorenter
      18: aload_0
      19: getfield      #13                 // Field disposed:Z
      22: ifne          101
      25: aload_0
      26: getfield      #6                  // Field resources:Ljava/util/List;
      29: astore_3
      30: aload_3
      31: ifnonnull     47
      34: new           #4                  // class java/util/LinkedList
      37: dup
      38: invokespecial #5                  // Method java/util/LinkedList."<init>":()V
      41: astore_3
      42: aload_0
      43: aload_3
      44: putfield      #6                  // Field resources:Ljava/util/List;
      47: aload_1
      48: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      53: astore        4
      55: aload         4
      57: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      62: ifeq          97
      65: aload         4
      67: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      72: checkcast     #12                 // class reactor/core/Disposable
      75: astore        5
      77: aload         5
      79: ldc           #15                 // String d is null
      81: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      84: pop
      85: aload_3
      86: aload         5
      88: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      93: pop
      94: goto          55
      97: iconst_1
      98: aload_2
      99: monitorexit
     100: ireturn
     101: aload_2
     102: monitorexit
     103: goto          113
     106: astore        6
     108: aload_2
     109: monitorexit
     110: aload         6
     112: athrow
     113: aload_1
     114: invokeinterface #18,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
     119: astore_2
     120: aload_2
     121: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     126: ifeq          148
     129: aload_2
     130: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     135: checkcast     #12                 // class reactor/core/Disposable
     138: astore_3
     139: aload_3
     140: invokeinterface #16,  1           // InterfaceMethod reactor/core/Disposable.dispose:()V
     145: goto          120
     148: iconst_0
     149: ireturn
    Exception table:
       from    to  target type
          18   100   106   any
         101   103   106   any
         106   110   106   any

  public boolean remove(reactor.core.Disposable);
    Code:
       0: aload_1
       1: ldc           #7                  // String Disposable item is null
       3: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: getfield      #13                 // Field disposed:Z
      11: ifeq          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: dup
      18: astore_2
      19: monitorenter
      20: aload_0
      21: getfield      #13                 // Field disposed:Z
      24: ifeq          31
      27: iconst_0
      28: aload_2
      29: monitorexit
      30: ireturn
      31: aload_0
      32: getfield      #6                  // Field resources:Ljava/util/List;
      35: astore_3
      36: aload_3
      37: ifnull        50
      40: aload_3
      41: aload_1
      42: invokeinterface #19,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      47: ifne          54
      50: iconst_0
      51: aload_2
      52: monitorexit
      53: ireturn
      54: aload_2
      55: monitorexit
      56: goto          66
      59: astore        4
      61: aload_2
      62: monitorexit
      63: aload         4
      65: athrow
      66: iconst_1
      67: ireturn
    Exception table:
       from    to  target type
          20    30    59   any
          31    53    59   any
          54    56    59   any
          59    63    59   any

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field resources:Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: iconst_0
      10: goto          19
      13: aload_1
      14: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      19: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #13                 // Field disposed:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: dup
      10: astore_2
      11: monitorenter
      12: aload_0
      13: getfield      #13                 // Field disposed:Z
      16: ifeq          22
      19: aload_2
      20: monitorexit
      21: return
      22: aload_0
      23: getfield      #6                  // Field resources:Ljava/util/List;
      26: astore_1
      27: aload_0
      28: aconst_null
      29: putfield      #6                  // Field resources:Ljava/util/List;
      32: aload_2
      33: monitorexit
      34: goto          42
      37: astore_3
      38: aload_2
      39: monitorexit
      40: aload_3
      41: athrow
      42: aload_0
      43: aload_1
      44: invokevirtual #14                 // Method dispose:(Ljava/util/List;)V
      47: return
    Exception table:
       from    to  target type
          12    21    37   any
          22    34    37   any
          37    40    37   any

  void dispose(java.util.List<reactor.core.Disposable>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: aconst_null
       6: astore_2
       7: aload_1
       8: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      13: astore_3
      14: aload_3
      15: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      20: ifeq          75
      23: aload_3
      24: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      29: checkcast     #12                 // class reactor/core/Disposable
      32: astore        4
      34: aload         4
      36: invokeinterface #16,  1           // InterfaceMethod reactor/core/Disposable.dispose:()V
      41: goto          72
      44: astore        5
      46: aload         5
      48: invokestatic  #23                 // Method reactor/core/Exceptions.throwIfFatal:(Ljava/lang/Throwable;)V
      51: aload_2
      52: ifnonnull     63
      55: new           #24                 // class java/util/ArrayList
      58: dup
      59: invokespecial #25                 // Method java/util/ArrayList."<init>":()V
      62: astore_2
      63: aload_2
      64: aload         5
      66: invokeinterface #8,  2            // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      71: pop
      72: goto          14
      75: aload_2
      76: ifnull        108
      79: aload_2
      80: invokeinterface #20,  1           // InterfaceMethod java/util/List.size:()I
      85: iconst_1
      86: if_icmpne     103
      89: aload_2
      90: iconst_0
      91: invokeinterface #26,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      96: checkcast     #22                 // class java/lang/Throwable
      99: invokestatic  #27                 // Method reactor/core/Exceptions.propagate:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;
     102: athrow
     103: aload_2
     104: invokestatic  #28                 // Method reactor/core/Exceptions.multiple:(Ljava/lang/Iterable;)Ljava/lang/RuntimeException;
     107: athrow
     108: return
    Exception table:
       from    to  target type
          34    41    44   Class java/lang/Throwable

  public java.util.stream.Stream<? extends reactor.core.Scannable> inners();
    Code:
       0: aload_0
       1: getfield      #6                  // Field resources:Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: invokestatic  #29                 // InterfaceMethod java/util/stream/Stream.empty:()Ljava/util/stream/Stream;
      12: areturn
      13: aload_1
      14: invokeinterface #30,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      19: invokedynamic #31,  0             // InvokeDynamic #0:test:()Ljava/util/function/Predicate;
      24: invokeinterface #32,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      29: invokedynamic #33,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      34: invokeinterface #34,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      39: areturn

  public java.lang.Object scanUnsafe(reactor.core.Scannable$Attr);
    Code:
       0: aload_1
       1: getstatic     #35                 // Field reactor/core/Scannable$Attr.CANCELLED:Lreactor/core/Scannable$Attr;
       4: if_acmpne     15
       7: aload_0
       8: invokevirtual #36                 // Method isDisposed:()Z
      11: invokestatic  #37                 // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      14: areturn
      15: aconst_null
      16: areturn
}
