Compiled from "Tuple4.java"
public class reactor.util.function.Tuple4<T1, T2, T3, T4> extends reactor.util.function.Tuple3<T1, T2, T3> {
  private static final long serialVersionUID;

  final T4 t4;

  reactor.util.function.Tuple4(T1, T2, T3, T4);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method reactor/util/function/Tuple3."<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
       7: aload_0
       8: aload         4
      10: ldc           #2                  // String t4
      12: invokestatic  #3                  // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
      15: putfield      #4                  // Field t4:Ljava/lang/Object;
      18: return

  public T4 getT4();
    Code:
       0: aload_0
       1: getfield      #4                  // Field t4:Ljava/lang/Object;
       4: areturn

  public <R> reactor.util.function.Tuple4<R, T2, T3, T4> mapT1(java.util.function.Function<T1, R>);
    Code:
       0: new           #5                  // class reactor/util/function/Tuple4
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #6                  // Field t1:Ljava/lang/Object;
       9: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      14: aload_0
      15: getfield      #8                  // Field t2:Ljava/lang/Object;
      18: aload_0
      19: getfield      #9                  // Field t3:Ljava/lang/Object;
      22: aload_0
      23: getfield      #4                  // Field t4:Ljava/lang/Object;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn

  public <R> reactor.util.function.Tuple4<T1, R, T3, T4> mapT2(java.util.function.Function<T2, R>);
    Code:
       0: new           #5                  // class reactor/util/function/Tuple4
       3: dup
       4: aload_0
       5: getfield      #6                  // Field t1:Ljava/lang/Object;
       8: aload_1
       9: aload_0
      10: getfield      #8                  // Field t2:Ljava/lang/Object;
      13: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      18: aload_0
      19: getfield      #9                  // Field t3:Ljava/lang/Object;
      22: aload_0
      23: getfield      #4                  // Field t4:Ljava/lang/Object;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn

  public <R> reactor.util.function.Tuple4<T1, T2, R, T4> mapT3(java.util.function.Function<T3, R>);
    Code:
       0: new           #5                  // class reactor/util/function/Tuple4
       3: dup
       4: aload_0
       5: getfield      #6                  // Field t1:Ljava/lang/Object;
       8: aload_0
       9: getfield      #8                  // Field t2:Ljava/lang/Object;
      12: aload_1
      13: aload_0
      14: getfield      #9                  // Field t3:Ljava/lang/Object;
      17: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      22: aload_0
      23: getfield      #4                  // Field t4:Ljava/lang/Object;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn

  public <R> reactor.util.function.Tuple4<T1, T2, T3, R> mapT4(java.util.function.Function<T4, R>);
    Code:
       0: new           #5                  // class reactor/util/function/Tuple4
       3: dup
       4: aload_0
       5: getfield      #6                  // Field t1:Ljava/lang/Object;
       8: aload_0
       9: getfield      #8                  // Field t2:Ljava/lang/Object;
      12: aload_0
      13: getfield      #9                  // Field t3:Ljava/lang/Object;
      16: aload_1
      17: aload_0
      18: getfield      #4                  // Field t4:Ljava/lang/Object;
      21: invokeinterface #7,  2            // InterfaceMethod java/util/function/Function.apply:(Ljava/lang/Object;)Ljava/lang/Object;
      26: invokespecial #10                 // Method "<init>":(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V
      29: areturn

  public java.lang.Object get(int);
    Code:
       0: iload_1
       1: tableswitch   { // 0 to 3
                     0: 32
                     1: 37
                     2: 42
                     3: 47
               default: 52
          }
      32: aload_0
      33: getfield      #6                  // Field t1:Ljava/lang/Object;
      36: areturn
      37: aload_0
      38: getfield      #8                  // Field t2:Ljava/lang/Object;
      41: areturn
      42: aload_0
      43: getfield      #9                  // Field t3:Ljava/lang/Object;
      46: areturn
      47: aload_0
      48: getfield      #4                  // Field t4:Ljava/lang/Object;
      51: areturn
      52: aconst_null
      53: areturn

  public java.lang.Object[] toArray();
    Code:
       0: iconst_4
       1: anewarray     #11                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #6                  // Field t1:Ljava/lang/Object;
      10: aastore
      11: dup
      12: iconst_1
      13: aload_0
      14: getfield      #8                  // Field t2:Ljava/lang/Object;
      17: aastore
      18: dup
      19: iconst_2
      20: aload_0
      21: getfield      #9                  // Field t3:Ljava/lang/Object;
      24: aastore
      25: dup
      26: iconst_3
      27: aload_0
      28: getfield      #4                  // Field t4:Ljava/lang/Object;
      31: aastore
      32: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #5                  // class reactor/util/function/Tuple4
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokespecial #12                 // Method reactor/util/function/Tuple3.equals:(Ljava/lang/Object;)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #5                  // class reactor/util/function/Tuple4
      30: astore_2
      31: aload_0
      32: getfield      #4                  // Field t4:Ljava/lang/Object;
      35: aload_2
      36: getfield      #4                  // Field t4:Ljava/lang/Object;
      39: invokevirtual #13                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      42: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: invokespecial #14                 // Method reactor/util/function/Tuple3.hashCode:()I
       4: istore_1
       5: bipush        31
       7: iload_1
       8: imul
       9: aload_0
      10: getfield      #4                  // Field t4:Ljava/lang/Object;
      13: invokevirtual #15                 // Method java/lang/Object.hashCode:()I
      16: iadd
      17: istore_1
      18: iload_1
      19: ireturn

  public int size();
    Code:
       0: iconst_4
       1: ireturn

  public reactor.util.function.Tuple3 mapT3(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #16                 // Method mapT3:(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
       5: areturn

  public reactor.util.function.Tuple3 mapT2(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method mapT2:(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
       5: areturn

  public reactor.util.function.Tuple3 mapT1(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method mapT1:(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
       5: areturn

  public reactor.util.function.Tuple2 mapT2(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #17                 // Method mapT2:(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
       5: areturn

  public reactor.util.function.Tuple2 mapT1(java.util.function.Function);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #18                 // Method mapT1:(Ljava/util/function/Function;)Lreactor/util/function/Tuple4;
       5: areturn
}
