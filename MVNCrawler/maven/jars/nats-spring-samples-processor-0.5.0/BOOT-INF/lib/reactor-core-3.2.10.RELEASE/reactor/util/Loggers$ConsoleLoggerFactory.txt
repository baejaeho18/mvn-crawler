Compiled from "Loggers.java"
final class reactor.util.Loggers$ConsoleLoggerFactory implements reactor.util.Loggers$LoggerFactory {
  private static final java.util.HashMap<java.lang.String, reactor.util.Logger> consoleLoggers;

  final boolean verbose;

  private reactor.util.Loggers$ConsoleLoggerFactory(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #3                  // Field verbose:Z
       9: return

  public reactor.util.Logger getLogger(java.lang.String);
    Code:
       0: getstatic     #4                  // Field consoleLoggers:Ljava/util/HashMap;
       3: aload_1
       4: aload_0
       5: invokedynamic #5,  0              // InvokeDynamic #0:apply:(Lreactor/util/Loggers$ConsoleLoggerFactory;)Ljava/util/function/Function;
      10: invokevirtual #6                  // Method java/util/HashMap.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      13: checkcast     #7                  // class reactor/util/Logger
      16: areturn

  private reactor.util.Logger lambda$getLogger$0(java.lang.String);
    Code:
       0: new           #8                  // class reactor/util/Loggers$ConsoleLogger
       3: dup
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field verbose:Z
       9: invokespecial #9                  // Method reactor/util/Loggers$ConsoleLogger."<init>":(Ljava/lang/String;Z)V
      12: areturn

  reactor.util.Loggers$ConsoleLoggerFactory(boolean, reactor.util.Loggers$1);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  static {};
    Code:
       0: new           #10                 // class java/util/HashMap
       3: dup
       4: invokespecial #11                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #4                  // Field consoleLoggers:Ljava/util/HashMap;
      10: return
}
