Compiled from "WaitStrategy.java"
final class reactor.util.concurrent.WaitStrategy$Sleeping extends reactor.util.concurrent.WaitStrategy {
  static final reactor.util.concurrent.WaitStrategy$Sleeping INSTANCE;

  reactor.util.concurrent.WaitStrategy$Sleeping();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method reactor/util/concurrent/WaitStrategy."<init>":()V
       4: return

  public long waitFor(long, java.util.function.LongSupplier, java.lang.Runnable) throws java.lang.InterruptedException;
    Code:
       0: aload_3
       1: invokeinterface #2,  1            // InterfaceMethod java/util/function/LongSupplier.getAsLong:()J
       6: dup2
       7: lstore        5
       9: lload_1
      10: lcmp
      11: ifge          28
      14: aload         4
      16: invokeinterface #3,  1            // InterfaceMethod java/lang/Runnable.run:()V
      21: lconst_1
      22: invokestatic  #4                  // Method java/lang/Thread.sleep:(J)V
      25: goto          0
      28: lload         5
      30: lreturn

  static {};
    Code:
       0: new           #5                  // class reactor/util/concurrent/WaitStrategy$Sleeping
       3: dup
       4: invokespecial #6                  // Method "<init>":()V
       7: putstatic     #7                  // Field INSTANCE:Lreactor/util/concurrent/WaitStrategy$Sleeping;
      10: return
}
