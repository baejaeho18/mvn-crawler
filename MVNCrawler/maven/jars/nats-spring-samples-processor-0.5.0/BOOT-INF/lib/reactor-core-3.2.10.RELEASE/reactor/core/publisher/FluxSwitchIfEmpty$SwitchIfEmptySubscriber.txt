Compiled from "FluxSwitchIfEmpty.java"
final class reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber<T> extends reactor.core.publisher.Operators$MultiSubscriptionSubscriber<T, T> {
  final org.reactivestreams.Publisher<? extends T> other;

  boolean once;

  reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber(reactor.core.CoreSubscriber<? super T>, org.reactivestreams.Publisher<? extends T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method reactor/core/publisher/Operators$MultiSubscriptionSubscriber."<init>":(Lreactor/core/CoreSubscriber;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
      10: return

  public void onNext(T);
    Code:
       0: aload_0
       1: getfield      #3                  // Field once:Z
       4: ifne          12
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field once:Z
      12: aload_0
      13: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      16: aload_1
      17: invokeinterface #5,  2            // InterfaceMethod reactor/core/CoreSubscriber.onNext:(Ljava/lang/Object;)V
      22: return

  public void onComplete();
    Code:
       0: aload_0
       1: getfield      #3                  // Field once:Z
       4: ifne          25
       7: aload_0
       8: iconst_1
       9: putfield      #3                  // Field once:Z
      12: aload_0
      13: getfield      #2                  // Field other:Lorg/reactivestreams/Publisher;
      16: aload_0
      17: invokeinterface #6,  2            // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      22: goto          34
      25: aload_0
      26: getfield      #4                  // Field actual:Lreactor/core/CoreSubscriber;
      29: invokeinterface #7,  1            // InterfaceMethod reactor/core/CoreSubscriber.onComplete:()V
      34: return
}
