Compiled from "AggregatingMessageHandlerMetrics.java"
public class org.springframework.integration.support.management.AggregatingMessageHandlerMetrics extends org.springframework.integration.support.management.DefaultMessageHandlerMetrics {
  private static final int DEFAULT_SAMPLE_SIZE;

  private final int sampleSize;

  private long start;

  public org.springframework.integration.support.management.AggregatingMessageHandlerMetrics();
    Code:
       0: aload_0
       1: aconst_null
       2: sipush        1000
       5: invokespecial #2                  // Method "<init>":(Ljava/lang/String;I)V
       8: return

  public org.springframework.integration.support.management.AggregatingMessageHandlerMetrics(java.lang.String, int);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method org/springframework/integration/support/management/DefaultMessageHandlerMetrics."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: iload_2
       7: putfield      #4                  // Field sampleSize:I
      10: return

  public org.springframework.integration.support.management.AggregatingMessageHandlerMetrics(java.lang.String, org.springframework.integration.support.management.ExponentialMovingAverage, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method org/springframework/integration/support/management/DefaultMessageHandlerMetrics."<init>":(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;)V
       6: aload_0
       7: iload_3
       8: putfield      #4                  // Field sampleSize:I
      11: return

  public synchronized org.springframework.integration.support.management.MetricsContext beforeHandle();
    Code:
       0: aload_0
       1: getfield      #6                  // Field handleCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #7                  // Method java/util/concurrent/atomic/AtomicLong.getAndIncrement:()J
       7: lstore_1
       8: aload_0
       9: invokevirtual #8                  // Method isFullStatsEnabled:()Z
      12: ifeq          34
      15: lload_1
      16: aload_0
      17: getfield      #4                  // Field sampleSize:I
      20: i2l
      21: lrem
      22: lconst_0
      23: lcmp
      24: ifne          34
      27: aload_0
      28: invokestatic  #9                  // Method java/lang/System.nanoTime:()J
      31: putfield      #10                 // Field start:J
      34: aload_0
      35: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
      38: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      41: pop2
      42: new           #13                 // class org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext
      45: dup
      46: aload_0
      47: getfield      #10                 // Field start:J
      50: lload_1
      51: lconst_1
      52: ladd
      53: invokespecial #14                 // Method org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext."<init>":(JJ)V
      56: areturn

  public void afterHandle(org.springframework.integration.support.management.MetricsContext, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #15                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: pop2
       8: aload_1
       9: checkcast     #13                 // class org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext
      12: astore_3
      13: iload_2
      14: ifeq          58
      17: aload_0
      18: invokevirtual #8                  // Method isFullStatsEnabled:()Z
      21: ifeq          66
      24: aload_3
      25: getfield      #16                 // Field org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext.newCount:J
      28: aload_0
      29: getfield      #4                  // Field sampleSize:I
      32: i2l
      33: lrem
      34: lconst_0
      35: lcmp
      36: ifne          66
      39: aload_0
      40: getfield      #17                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      43: invokestatic  #9                  // Method java/lang/System.nanoTime:()J
      46: aload_3
      47: getfield      #18                 // Field org/springframework/integration/support/management/AggregatingMessageHandlerMetrics$AggregatingHandlerMetricsContext.start:J
      50: lsub
      51: l2d
      52: invokevirtual #19                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.append:(D)V
      55: goto          66
      58: aload_0
      59: getfield      #20                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
      62: invokevirtual #12                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      65: pop2
      66: return
}
