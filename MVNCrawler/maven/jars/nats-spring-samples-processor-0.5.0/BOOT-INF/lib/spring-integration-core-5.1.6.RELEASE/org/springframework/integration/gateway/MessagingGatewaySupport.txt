Compiled from "MessagingGatewaySupport.java"
public abstract class org.springframework.integration.gateway.MessagingGatewaySupport extends org.springframework.integration.endpoint.AbstractEndpoint implements org.springframework.integration.support.management.TrackableComponent,org.springframework.integration.support.management.MessageSourceMetrics {
  private static final long DEFAULT_TIMEOUT;

  protected final org.springframework.integration.core.MessagingTemplate messagingTemplate;

  private final org.springframework.integration.support.converter.SimpleMessageConverter messageConverter;

  private final org.springframework.integration.history.HistoryWritingMessagePostProcessor historyWritingPostProcessor;

  private final java.lang.Object replyMessageCorrelatorMonitor;

  private final boolean errorOnTimeout;

  private final java.util.concurrent.atomic.AtomicLong messageCount;

  private final org.springframework.integration.support.management.IntegrationManagement$ManagementOverrides managementOverrides;

  private org.springframework.integration.support.ErrorMessageStrategy errorMessageStrategy;

  private org.springframework.messaging.MessageChannel requestChannel;

  private java.lang.String requestChannelName;

  private org.springframework.messaging.MessageChannel replyChannel;

  private java.lang.String replyChannelName;

  private org.springframework.messaging.MessageChannel errorChannel;

  private java.lang.String errorChannelName;

  private long replyTimeout;

  private org.springframework.integration.mapping.InboundMessageMapper<java.lang.Object> requestMapper;

  private volatile org.springframework.integration.endpoint.AbstractEndpoint replyMessageCorrelator;

  private java.lang.String managedType;

  private java.lang.String managedName;

  private boolean countsEnabled;

  private boolean loggingEnabled;

  private volatile boolean initialized;

  public org.springframework.integration.gateway.MessagingGatewaySupport();
    Code:
       0: aload_0
       1: iconst_0
       2: invokespecial #1                  // Method "<init>":(Z)V
       5: return

  public org.springframework.integration.gateway.MessagingGatewaySupport(boolean);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/integration/endpoint/AbstractEndpoint."<init>":()V
       4: aload_0
       5: new           #3                  // class org/springframework/integration/support/converter/SimpleMessageConverter
       8: dup
       9: invokespecial #4                  // Method org/springframework/integration/support/converter/SimpleMessageConverter."<init>":()V
      12: putfield      #5                  // Field messageConverter:Lorg/springframework/integration/support/converter/SimpleMessageConverter;
      15: aload_0
      16: new           #6                  // class org/springframework/integration/history/HistoryWritingMessagePostProcessor
      19: dup
      20: invokespecial #7                  // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor."<init>":()V
      23: putfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      26: aload_0
      27: new           #9                  // class java/lang/Object
      30: dup
      31: invokespecial #10                 // Method java/lang/Object."<init>":()V
      34: putfield      #11                 // Field replyMessageCorrelatorMonitor:Ljava/lang/Object;
      37: aload_0
      38: new           #12                 // class java/util/concurrent/atomic/AtomicLong
      41: dup
      42: invokespecial #13                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      45: putfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
      48: aload_0
      49: new           #15                 // class org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides
      52: dup
      53: invokespecial #16                 // Method org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides."<init>":()V
      56: putfield      #17                 // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
      59: aload_0
      60: new           #18                 // class org/springframework/integration/support/DefaultErrorMessageStrategy
      63: dup
      64: invokespecial #19                 // Method org/springframework/integration/support/DefaultErrorMessageStrategy."<init>":()V
      67: putfield      #20                 // Field errorMessageStrategy:Lorg/springframework/integration/support/ErrorMessageStrategy;
      70: aload_0
      71: ldc2_w        #22                 // long 1000l
      74: putfield      #24                 // Field replyTimeout:J
      77: aload_0
      78: new           #25                 // class org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper
      81: dup
      82: invokespecial #26                 // Method org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper."<init>":()V
      85: putfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
      88: aload_0
      89: iconst_1
      90: putfield      #28                 // Field loggingEnabled:Z
      93: new           #29                 // class org/springframework/integration/core/MessagingTemplate
      96: dup
      97: invokespecial #30                 // Method org/springframework/integration/core/MessagingTemplate."<init>":()V
     100: astore_2
     101: aload_2
     102: aload_0
     103: getfield      #5                  // Field messageConverter:Lorg/springframework/integration/support/converter/SimpleMessageConverter;
     106: invokevirtual #31                 // Method org/springframework/integration/core/MessagingTemplate.setMessageConverter:(Lorg/springframework/messaging/converter/MessageConverter;)V
     109: aload_2
     110: ldc2_w        #22                 // long 1000l
     113: invokevirtual #32                 // Method org/springframework/integration/core/MessagingTemplate.setSendTimeout:(J)V
     116: aload_2
     117: aload_0
     118: getfield      #24                 // Field replyTimeout:J
     121: invokevirtual #33                 // Method org/springframework/integration/core/MessagingTemplate.setReceiveTimeout:(J)V
     124: aload_0
     125: aload_2
     126: putfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
     129: aload_0
     130: iload_1
     131: putfield      #35                 // Field errorOnTimeout:Z
     134: return

  public void setRequestChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field requestChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public void setRequestChannelName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #37                 // String \'requestChannelName\' must not be empty
       3: invokestatic  #38                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #39                 // Field requestChannelName:Ljava/lang/String;
      11: return

  public void setReplyChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field replyChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public void setReplyChannelName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #41                 // String \'replyChannelName\' must not be empty
       3: invokestatic  #38                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #42                 // Field replyChannelName:Ljava/lang/String;
      11: return

  public void setErrorChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #43                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public void setErrorChannelName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #44                 // String \'errorChannelName\' must not be empty
       3: invokestatic  #38                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #45                 // Field errorChannelName:Ljava/lang/String;
      11: return

  public void setRequestTimeout(long);
    Code:
       0: aload_0
       1: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
       4: lload_1
       5: invokevirtual #32                 // Method org/springframework/integration/core/MessagingTemplate.setSendTimeout:(J)V
       8: return

  public void setReplyTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #24                 // Field replyTimeout:J
       5: aload_0
       6: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
       9: lload_1
      10: invokevirtual #33                 // Method org/springframework/integration/core/MessagingTemplate.setReceiveTimeout:(J)V
      13: return

  public void setRequestMapper(org.springframework.integration.mapping.InboundMessageMapper<?>);
    Code:
       0: aload_1
       1: ifnull        9
       4: aload_0
       5: aload_1
       6: putfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
       9: aload_0
      10: getfield      #5                  // Field messageConverter:Lorg/springframework/integration/support/converter/SimpleMessageConverter;
      13: aload_0
      14: getfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
      17: invokevirtual #46                 // Method org/springframework/integration/support/converter/SimpleMessageConverter.setInboundMessageMapper:(Lorg/springframework/integration/mapping/InboundMessageMapper;)V
      20: return

  public void setReplyMapper(org.springframework.integration.mapping.OutboundMessageMapper<?>);
    Code:
       0: aload_0
       1: getfield      #5                  // Field messageConverter:Lorg/springframework/integration/support/converter/SimpleMessageConverter;
       4: aload_1
       5: invokevirtual #47                 // Method org/springframework/integration/support/converter/SimpleMessageConverter.setOutboundMessageMapper:(Lorg/springframework/integration/mapping/OutboundMessageMapper;)V
       8: return

  public void setShouldTrack(boolean);
    Code:
       0: aload_0
       1: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
       4: iload_1
       5: invokevirtual #48                 // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor.setShouldTrack:(Z)V
       8: return

  public int getMessageCount();
    Code:
       0: aload_0
       1: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getMessageCountLong();
    Code:
       0: aload_0
       1: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #49                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public void setManagedName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #50                 // Field managedName:Ljava/lang/String;
       5: return

  public java.lang.String getManagedName();
    Code:
       0: aload_0
       1: getfield      #50                 // Field managedName:Ljava/lang/String;
       4: areturn

  public void setManagedType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #51                 // Field managedType:Ljava/lang/String;
       5: return

  public java.lang.String getManagedType();
    Code:
       0: aload_0
       1: getfield      #51                 // Field managedType:Ljava/lang/String;
       4: areturn

  public java.lang.String getComponentType();
    Code:
       0: ldc           #52                 // String gateway
       2: areturn

  public void setLoggingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field loggingEnabled:Z
       5: aload_0
       6: getfield      #17                 // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       9: iconst_1
      10: putfield      #53                 // Field org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides.loggingConfigured:Z
      13: return

  public boolean isLoggingEnabled();
    Code:
       0: aload_0
       1: getfield      #28                 // Field loggingEnabled:Z
       4: ireturn

  public void setCountsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #54                 // Field countsEnabled:Z
       5: aload_0
       6: getfield      #17                 // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       9: iconst_1
      10: putfield      #55                 // Field org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides.countsConfigured:Z
      13: return

  public boolean isCountsEnabled();
    Code:
       0: aload_0
       1: getfield      #54                 // Field countsEnabled:Z
       4: ireturn

  public final void setErrorMessageStrategy(org.springframework.integration.support.ErrorMessageStrategy);
    Code:
       0: aload_1
       1: ldc           #56                 // String \'errorMessageStrategy\' cannot be null
       3: invokestatic  #57                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #20                 // Field errorMessageStrategy:Lorg/springframework/integration/support/ErrorMessageStrategy;
      11: return

  public org.springframework.integration.support.management.IntegrationManagement$ManagementOverrides getOverrides();
    Code:
       0: aload_0
       1: getfield      #17                 // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       4: areturn

  protected void onInit();
    Code:
       0: aload_0
       1: getfield      #39                 // Field requestChannelName:Ljava/lang/String;
       4: ifnull        14
       7: aload_0
       8: getfield      #36                 // Field requestChannel:Lorg/springframework/messaging/MessageChannel;
      11: ifnonnull     18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #58                 // String \'requestChannelName\' and \'requestChannel\' are mutually exclusive.
      21: invokestatic  #59                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      24: aload_0
      25: getfield      #42                 // Field replyChannelName:Ljava/lang/String;
      28: ifnull        38
      31: aload_0
      32: getfield      #40                 // Field replyChannel:Lorg/springframework/messaging/MessageChannel;
      35: ifnonnull     42
      38: iconst_1
      39: goto          43
      42: iconst_0
      43: ldc           #60                 // String \'replyChannelName\' and \'replyChannel\' are mutually exclusive.
      45: invokestatic  #59                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      48: aload_0
      49: getfield      #45                 // Field errorChannelName:Ljava/lang/String;
      52: ifnull        62
      55: aload_0
      56: getfield      #43                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
      59: ifnonnull     66
      62: iconst_1
      63: goto          67
      66: iconst_0
      67: ldc           #61                 // String \'errorChannelName\' and \'errorChannel\' are mutually exclusive.
      69: invokestatic  #59                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      72: aload_0
      73: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      76: aload_0
      77: invokevirtual #62                 // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor.setTrackableComponent:(Lorg/springframework/integration/support/management/TrackableComponent;)V
      80: aload_0
      81: invokevirtual #63                 // Method getMessageBuilderFactory:()Lorg/springframework/integration/support/MessageBuilderFactory;
      84: astore_1
      85: aload_0
      86: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      89: aload_1
      90: invokevirtual #64                 // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor.setMessageBuilderFactory:(Lorg/springframework/integration/support/MessageBuilderFactory;)V
      93: aload_0
      94: invokevirtual #65                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      97: astore_2
      98: aload_2
      99: ifnull        139
     102: aload_0
     103: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
     106: aload_2
     107: invokevirtual #66                 // Method org/springframework/integration/core/MessagingTemplate.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
     110: aload_0
     111: getfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
     114: instanceof    #25                 // class org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper
     117: ifeq          131
     120: aload_0
     121: getfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
     124: checkcast     #25                 // class org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper
     127: aload_1
     128: invokevirtual #67                 // Method org/springframework/integration/gateway/MessagingGatewaySupport$DefaultRequestMapper.setMessageBuilderFactory:(Lorg/springframework/integration/support/MessageBuilderFactory;)V
     131: aload_0
     132: getfield      #5                  // Field messageConverter:Lorg/springframework/integration/support/converter/SimpleMessageConverter;
     135: aload_2
     136: invokevirtual #68                 // Method org/springframework/integration/support/converter/SimpleMessageConverter.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
     139: aload_0
     140: iconst_1
     141: putfield      #69                 // Field initialized:Z
     144: return

  private void initializeIfNecessary();
    Code:
       0: aload_0
       1: getfield      #69                 // Field initialized:Z
       4: ifne          11
       7: aload_0
       8: invokevirtual #70                 // Method afterPropertiesSet:()V
      11: return

  public org.springframework.messaging.MessageChannel getRequestChannel();
    Code:
       0: aload_0
       1: getfield      #36                 // Field requestChannel:Lorg/springframework/messaging/MessageChannel;
       4: ifnonnull     34
       7: aload_0
       8: getfield      #39                 // Field requestChannelName:Ljava/lang/String;
      11: ifnull        34
      14: aload_0
      15: aload_0
      16: invokevirtual #71                 // Method getChannelResolver:()Lorg/springframework/messaging/core/DestinationResolver;
      19: aload_0
      20: getfield      #39                 // Field requestChannelName:Ljava/lang/String;
      23: invokeinterface #72,  2           // InterfaceMethod org/springframework/messaging/core/DestinationResolver.resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #73                 // class org/springframework/messaging/MessageChannel
      31: putfield      #36                 // Field requestChannel:Lorg/springframework/messaging/MessageChannel;
      34: aload_0
      35: getfield      #36                 // Field requestChannel:Lorg/springframework/messaging/MessageChannel;
      38: areturn

  public org.springframework.messaging.MessageChannel getReplyChannel();
    Code:
       0: aload_0
       1: getfield      #40                 // Field replyChannel:Lorg/springframework/messaging/MessageChannel;
       4: ifnonnull     34
       7: aload_0
       8: getfield      #42                 // Field replyChannelName:Ljava/lang/String;
      11: ifnull        34
      14: aload_0
      15: aload_0
      16: invokevirtual #71                 // Method getChannelResolver:()Lorg/springframework/messaging/core/DestinationResolver;
      19: aload_0
      20: getfield      #42                 // Field replyChannelName:Ljava/lang/String;
      23: invokeinterface #72,  2           // InterfaceMethod org/springframework/messaging/core/DestinationResolver.resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #73                 // class org/springframework/messaging/MessageChannel
      31: putfield      #40                 // Field replyChannel:Lorg/springframework/messaging/MessageChannel;
      34: aload_0
      35: getfield      #40                 // Field replyChannel:Lorg/springframework/messaging/MessageChannel;
      38: areturn

  public org.springframework.messaging.MessageChannel getErrorChannel();
    Code:
       0: aload_0
       1: getfield      #43                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
       4: ifnonnull     34
       7: aload_0
       8: getfield      #45                 // Field errorChannelName:Ljava/lang/String;
      11: ifnull        34
      14: aload_0
      15: aload_0
      16: invokevirtual #71                 // Method getChannelResolver:()Lorg/springframework/messaging/core/DestinationResolver;
      19: aload_0
      20: getfield      #45                 // Field errorChannelName:Ljava/lang/String;
      23: invokeinterface #72,  2           // InterfaceMethod org/springframework/messaging/core/DestinationResolver.resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
      28: checkcast     #73                 // class org/springframework/messaging/MessageChannel
      31: putfield      #43                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
      34: aload_0
      35: getfield      #43                 // Field errorChannel:Lorg/springframework/messaging/MessageChannel;
      38: areturn

  protected void send(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_1
       5: ldc           #75                 // String request must not be null
       7: invokestatic  #57                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #76                 // Method getRequestChannel:()Lorg/springframework/messaging/MessageChannel;
      14: astore_2
      15: aload_2
      16: ifnull        23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #77                 // String send is not supported, because no request channel has been configured
      26: invokestatic  #59                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      29: aload_0
      30: getfield      #54                 // Field countsEnabled:Z
      33: ifeq          44
      36: aload_0
      37: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
      40: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      43: pop2
      44: aload_0
      45: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      48: aload_2
      49: aload_1
      50: aload_0
      51: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      54: invokevirtual #79                 // Method org/springframework/integration/core/MessagingTemplate.convertAndSend:(Ljava/lang/Object;Ljava/lang/Object;Lorg/springframework/messaging/core/MessagePostProcessor;)V
      57: goto          99
      60: astore_3
      61: aload_0
      62: invokevirtual #81                 // Method getErrorChannel:()Lorg/springframework/messaging/MessageChannel;
      65: astore        4
      67: aload         4
      69: ifnull        92
      72: aload_0
      73: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      76: aload         4
      78: new           #82                 // class org/springframework/messaging/support/ErrorMessage
      81: dup
      82: aload_3
      83: invokespecial #83                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;)V
      86: invokevirtual #84                 // Method org/springframework/integration/core/MessagingTemplate.send:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
      89: goto          99
      92: aload_0
      93: aload_3
      94: ldc           #85                 // String failed to send message
      96: invokespecial #86                 // Method rethrow:(Ljava/lang/Throwable;Ljava/lang/String;)V
      99: return
    Exception table:
       from    to  target type
          29    57    60   Class java/lang/Exception

  protected java.lang.Object receive();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_0
       5: invokevirtual #87                 // Method getReplyChannel:()Lorg/springframework/messaging/MessageChannel;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #88                 // Method assertPollableChannel:(Lorg/springframework/messaging/MessageChannel;)V
      14: aload_0
      15: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      18: aload_1
      19: ldc           #9                  // class java/lang/Object
      21: invokevirtual #89                 // Method org/springframework/integration/core/MessagingTemplate.receiveAndConvert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      24: areturn

  protected org.springframework.messaging.Message<?> receiveMessage();
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_0
       5: invokevirtual #87                 // Method getReplyChannel:()Lorg/springframework/messaging/MessageChannel;
       8: astore_1
       9: aload_0
      10: aload_1
      11: invokespecial #88                 // Method assertPollableChannel:(Lorg/springframework/messaging/MessageChannel;)V
      14: aload_0
      15: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      18: aload_1
      19: invokevirtual #90                 // Method org/springframework/integration/core/MessagingTemplate.receive:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      22: areturn

  protected java.lang.Object receive(long);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_0
       5: invokevirtual #87                 // Method getReplyChannel:()Lorg/springframework/messaging/MessageChannel;
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #88                 // Method assertPollableChannel:(Lorg/springframework/messaging/MessageChannel;)V
      14: aload_0
      15: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      18: aload_3
      19: lload_1
      20: invokevirtual #91                 // Method org/springframework/integration/core/MessagingTemplate.receiveAndConvert:(Lorg/springframework/messaging/MessageChannel;J)Ljava/lang/Object;
      23: areturn

  protected org.springframework.messaging.Message<?> receiveMessage(long);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_0
       5: invokevirtual #87                 // Method getReplyChannel:()Lorg/springframework/messaging/MessageChannel;
       8: astore_3
       9: aload_0
      10: aload_3
      11: invokespecial #88                 // Method assertPollableChannel:(Lorg/springframework/messaging/MessageChannel;)V
      14: aload_0
      15: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      18: aload_3
      19: lload_1
      20: invokevirtual #92                 // Method org/springframework/integration/core/MessagingTemplate.receive:(Lorg/springframework/messaging/MessageChannel;J)Lorg/springframework/messaging/Message;
      23: areturn

  private void assertPollableChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_1
       1: instanceof    #93                 // class org/springframework/messaging/PollableChannel
       4: ldc           #94                 // String receive is not supported, because no pollable reply channel has been configured
       6: invokestatic  #59                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: return

  protected java.lang.Object sendAndReceive(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #95                 // Method doSendAndReceive:(Ljava/lang/Object;Z)Ljava/lang/Object;
       6: areturn

  protected org.springframework.messaging.Message<?> sendAndReceiveMessage(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #95                 // Method doSendAndReceive:(Ljava/lang/Object;Z)Ljava/lang/Object;
       6: checkcast     #96                 // class org/springframework/messaging/Message
       9: areturn

  private java.lang.Object doSendAndReceive(java.lang.Object, boolean);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_1
       5: ldc           #75                 // String request must not be null
       7: invokestatic  #57                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #76                 // Method getRequestChannel:()Lorg/springframework/messaging/MessageChannel;
      14: astore_3
      15: aload_3
      16: ifnonnull     29
      19: new           #97                 // class org/springframework/messaging/MessagingException
      22: dup
      23: ldc           #98                 // String No request channel available. Cannot send request message.
      25: invokespecial #99                 // Method org/springframework/messaging/MessagingException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #100                // Method registerReplyMessageCorrelatorIfNecessary:()V
      33: aconst_null
      34: astore        5
      36: aload_0
      37: getfield      #54                 // Field countsEnabled:Z
      40: ifeq          51
      43: aload_0
      44: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
      47: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      50: pop2
      51: iload_2
      52: ifeq          75
      55: aload_0
      56: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      59: aload_3
      60: aload_1
      61: ldc           #9                  // class java/lang/Object
      63: aload_0
      64: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      67: invokevirtual #101                // Method org/springframework/integration/core/MessagingTemplate.convertSendAndReceive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
      70: astore        4
      72: goto          143
      75: aload_1
      76: instanceof    #96                 // class org/springframework/messaging/Message
      79: ifeq          89
      82: aload_1
      83: checkcast     #96                 // class org/springframework/messaging/Message
      86: goto          99
      89: aload_0
      90: getfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
      93: aload_1
      94: invokeinterface #102,  2          // InterfaceMethod org/springframework/integration/mapping/InboundMessageMapper.toMessage:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      99: astore        5
     101: aload         5
     103: ifnull        110
     106: iconst_1
     107: goto          111
     110: iconst_0
     111: aload_1
     112: invokedynamic #103,  0            // InvokeDynamic #0:get:(Ljava/lang/Object;)Ljava/util/function/Supplier;
     117: invokestatic  #104                // Method org/springframework/util/Assert.state:(ZLjava/util/function/Supplier;)V
     120: aload_0
     121: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
     124: aload         5
     126: invokevirtual #105                // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor.postProcessMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
     129: astore        5
     131: aload_0
     132: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
     135: aload_3
     136: aload         5
     138: invokevirtual #106                // Method org/springframework/integration/core/MessagingTemplate.sendAndReceive:(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
     141: astore        4
     143: aload         4
     145: ifnonnull     162
     148: aload_0
     149: getfield      #35                 // Field errorOnTimeout:Z
     152: ifeq          162
     155: aload_0
     156: aload_1
     157: ldc           #107                // String No reply received within timeout
     159: invokespecial #108                // Method throwMessageTimeoutException:(Ljava/lang/Object;Ljava/lang/String;)V
     162: goto          215
     165: astore        6
     167: aload_0
     168: getfield      #109                // Field logger:Lorg/apache/commons/logging/Log;
     171: invokeinterface #110,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     176: ifeq          211
     179: aload_0
     180: getfield      #109                // Field logger:Lorg/apache/commons/logging/Log;
     183: new           #111                // class java/lang/StringBuilder
     186: dup
     187: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
     190: ldc           #113                // String failure occurred in gateway sendAndReceive:
     192: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: aload         6
     197: invokevirtual #115                // Method java/lang/Exception.getMessage:()Ljava/lang/String;
     200: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     203: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     206: invokeinterface #117,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     211: aload         6
     213: astore        4
     215: aload         4
     217: instanceof    #118                // class java/lang/Throwable
     220: ifne          231
     223: aload         4
     225: instanceof    #82                 // class org/springframework/messaging/support/ErrorMessage
     228: ifeq          271
     231: aload         4
     233: instanceof    #82                 // class org/springframework/messaging/support/ErrorMessage
     236: ifeq          253
     239: aload         4
     241: checkcast     #82                 // class org/springframework/messaging/support/ErrorMessage
     244: invokevirtual #119                // Method org/springframework/messaging/support/ErrorMessage.getPayload:()Ljava/lang/Object;
     247: checkcast     #118                // class java/lang/Throwable
     250: goto          258
     253: aload         4
     255: checkcast     #118                // class java/lang/Throwable
     258: astore        6
     260: aload_0
     261: aload_1
     262: aload         5
     264: aload         6
     266: iload_2
     267: invokespecial #120                // Method handleSendAndReceiveError:(Ljava/lang/Object;Lorg/springframework/messaging/Message;Ljava/lang/Throwable;Z)Ljava/lang/Object;
     270: areturn
     271: aload         4
     273: areturn
    Exception table:
       from    to  target type
          36   162   165   Class java/lang/Exception

  private java.lang.Object handleSendAndReceiveError(java.lang.Object, org.springframework.messaging.Message<?>, java.lang.Throwable, boolean);
    Code:
       0: aload_0
       1: invokevirtual #81                 // Method getErrorChannel:()Lorg/springframework/messaging/MessageChannel;
       4: astore        5
       6: aload         5
       8: ifnull        73
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokevirtual #121                // Method buildErrorMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)Lorg/springframework/messaging/support/ErrorMessage;
      17: astore        6
      19: aload_0
      20: aload         5
      22: aload         6
      24: invokespecial #122                // Method sendErrorMessageAndReceive:(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/support/ErrorMessage;)Lorg/springframework/messaging/Message;
      27: astore        7
      29: aload         7
      31: ifnonnull     50
      34: aload_0
      35: getfield      #35                 // Field errorOnTimeout:Z
      38: ifeq          50
      41: aload_0
      42: aload_1
      43: ldc           #123                // String No reply received from error channel within timeout
      45: invokespecial #108                // Method throwMessageTimeoutException:(Ljava/lang/Object;Ljava/lang/String;)V
      48: aconst_null
      49: areturn
      50: iload         4
      52: ifeq          70
      55: aload         7
      57: ifnull        70
      60: aload         7
      62: invokeinterface #124,  1          // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      67: goto          72
      70: aload         7
      72: areturn
      73: aload_3
      74: astore        6
      76: aload_3
      77: instanceof    #97                 // class org/springframework/messaging/MessagingException
      80: ifeq          110
      83: aload_2
      84: ifnull        110
      87: aload_2
      88: invokeinterface #125,  1          // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      93: invokevirtual #126                // Method org/springframework/messaging/MessageHeaders.getErrorChannel:()Ljava/lang/Object;
      96: ifnull        110
      99: new           #127                // class org/springframework/messaging/MessageHandlingException
     102: dup
     103: aload_2
     104: aload_3
     105: invokespecial #128                // Method org/springframework/messaging/MessageHandlingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
     108: astore        6
     110: aload_0
     111: aload         6
     113: ldc           #129                // String gateway received checked Exception
     115: invokespecial #86                 // Method rethrow:(Ljava/lang/Throwable;Ljava/lang/String;)V
     118: aconst_null
     119: areturn

  private org.springframework.messaging.Message<?> sendErrorMessageAndReceive(org.springframework.messaging.MessageChannel, org.springframework.messaging.support.ErrorMessage);
    Code:
       0: aload_0
       1: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
       4: aload_1
       5: aload_2
       6: invokevirtual #106                // Method org/springframework/integration/core/MessagingTemplate.sendAndReceive:(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
       9: astore_3
      10: goto          28
      13: astore        4
      15: new           #97                 // class org/springframework/messaging/MessagingException
      18: dup
      19: aload_2
      20: ldc           #130                // String failure occurred in error-handling flow
      22: aload         4
      24: invokespecial #131                // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
      27: athrow
      28: aload_3
      29: ifnull        59
      32: aload_3
      33: invokeinterface #124,  1          // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      38: instanceof    #118                // class java/lang/Throwable
      41: ifeq          59
      44: aload_0
      45: aload_3
      46: invokeinterface #124,  1          // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      51: checkcast     #118                // class java/lang/Throwable
      54: ldc           #132                // String error flow returned an Error Message
      56: invokespecial #86                 // Method rethrow:(Ljava/lang/Throwable;Ljava/lang/String;)V
      59: aload_3
      60: areturn
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception

  private void throwMessageTimeoutException(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #96                 // class org/springframework/messaging/Message
       4: ifeq          20
       7: new           #133                // class org/springframework/integration/MessageTimeoutException
      10: dup
      11: aload_1
      12: checkcast     #96                 // class org/springframework/messaging/Message
      15: aload_2
      16: invokespecial #134                // Method org/springframework/integration/MessageTimeoutException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
      19: athrow
      20: new           #133                // class org/springframework/integration/MessageTimeoutException
      23: dup
      24: aload_2
      25: invokespecial #135                // Method org/springframework/integration/MessageTimeoutException."<init>":(Ljava/lang/String;)V
      28: athrow

  protected reactor.core.publisher.Mono<org.springframework.messaging.Message<?>> sendAndReceiveMessageReactive(java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #74                 // Method initializeIfNecessary:()V
       4: aload_1
       5: ldc           #75                 // String request must not be null
       7: invokestatic  #57                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: invokevirtual #76                 // Method getRequestChannel:()Lorg/springframework/messaging/MessageChannel;
      14: astore_2
      15: aload_2
      16: ifnonnull     29
      19: new           #97                 // class org/springframework/messaging/MessagingException
      22: dup
      23: ldc           #98                 // String No request channel available. Cannot send request message.
      25: invokespecial #99                 // Method org/springframework/messaging/MessagingException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: invokevirtual #100                // Method registerReplyMessageCorrelatorIfNecessary:()V
      33: aload_0
      34: aload_2
      35: aload_1
      36: iconst_0
      37: invokespecial #136                // Method doSendAndReceiveMessageReactive:(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;Z)Lreactor/core/publisher/Mono;
      40: areturn

  private reactor.core.publisher.Mono<org.springframework.messaging.Message<?>> doSendAndReceiveMessageReactive(org.springframework.messaging.MessageChannel, java.lang.Object, boolean);
    Code:
       0: aload_0
       1: aload_2
       2: aload_1
       3: iload_3
       4: invokedynamic #137,  0            // InvokeDynamic #1:get:(Lorg/springframework/integration/gateway/MessagingGatewaySupport;Ljava/lang/Object;Lorg/springframework/messaging/MessageChannel;Z)Ljava/util/function/Supplier;
       9: invokestatic  #138                // Method reactor/core/publisher/Mono.defer:(Ljava/util/function/Supplier;)Lreactor/core/publisher/Mono;
      12: areturn

  private void sendMessageForReactiveFlow(org.springframework.messaging.MessageChannel, org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: instanceof    #139                // class org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
       4: ifeq          23
       7: aload_1
       8: checkcast     #139                // class org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
      11: aload_2
      12: invokestatic  #140                // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      15: invokeinterface #141,  2          // InterfaceMethod org/springframework/integration/channel/ReactiveStreamsSubscribableChannel.subscribeTo:(Lorg/reactivestreams/Publisher;)V
      20: goto          97
      23: aload_0
      24: aload_2
      25: invokespecial #142                // Method sendTimeout:(Lorg/springframework/messaging/Message;)J
      28: lstore_3
      29: lload_3
      30: lconst_0
      31: lcmp
      32: iflt          46
      35: aload_1
      36: aload_2
      37: lload_3
      38: invokeinterface #143,  4          // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;J)Z
      43: goto          53
      46: aload_1
      47: aload_2
      48: invokeinterface #144,  2          // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      53: istore        5
      55: iload         5
      57: ifne          97
      60: new           #145                // class org/springframework/messaging/MessageDeliveryException
      63: dup
      64: aload_2
      65: new           #111                // class java/lang/StringBuilder
      68: dup
      69: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #146                // String Failed to send message to channel \'
      74: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: aload_1
      78: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      81: ldc           #148                // String \' within timeout:
      83: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: lload_3
      87: invokevirtual #149                // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      90: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      93: invokespecial #150                // Method org/springframework/messaging/MessageDeliveryException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
      96: athrow
      97: return

  private reactor.core.publisher.Mono<org.springframework.messaging.Message<?>> buildReplyMono(org.springframework.messaging.Message<?>, org.springframework.integration.gateway.MessagingGatewaySupport$FutureReplyChannel, boolean, java.lang.Object, java.lang.Object);
    Code:
       0: aload_2
       1: invokestatic  #151                // Method org/springframework/integration/gateway/MessagingGatewaySupport$FutureReplyChannel.access$000:(Lorg/springframework/integration/gateway/MessagingGatewaySupport$FutureReplyChannel;)Ljava/util/concurrent/CompletableFuture;
       4: invokestatic  #152                // Method reactor/core/publisher/Mono.fromFuture:(Ljava/util/concurrent/CompletableFuture;)Lreactor/core/publisher/Mono;
       7: aload_0
       8: iload_3
       9: invokedynamic #153,  0            // InvokeDynamic #2:accept:(Lorg/springframework/integration/gateway/MessagingGatewaySupport;Z)Ljava/util/function/Consumer;
      14: invokevirtual #154                // Method reactor/core/publisher/Mono.doOnSubscribe:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Mono;
      17: iload_3
      18: aload_1
      19: aload         4
      21: aload         5
      23: invokedynamic #155,  0            // InvokeDynamic #3:apply:(ZLorg/springframework/messaging/Message;Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/function/Function;
      28: invokevirtual #156                // Method reactor/core/publisher/Mono.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      31: aload_0
      32: iload_3
      33: aload_1
      34: invokedynamic #157,  0            // InvokeDynamic #4:apply:(Lorg/springframework/integration/gateway/MessagingGatewaySupport;ZLorg/springframework/messaging/Message;)Ljava/util/function/Function;
      39: invokevirtual #158                // Method reactor/core/publisher/Mono.onErrorResume:(Ljava/util/function/Function;)Lreactor/core/publisher/Mono;
      42: areturn

  private reactor.core.publisher.Mono<org.springframework.messaging.Message<?>> handleSendError(org.springframework.messaging.Message<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #109                // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #110,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          43
      12: aload_0
      13: getfield      #109                // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #111                // class java/lang/StringBuilder
      19: dup
      20: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #159                // String failure occurred in gateway sendAndReceiveReactive:
      25: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_2
      29: invokevirtual #160                // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      32: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      38: invokeinterface #117,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      43: aload_0
      44: invokevirtual #81                 // Method getErrorChannel:()Lorg/springframework/messaging/MessageChannel;
      47: astore_3
      48: aload_3
      49: ifnull        85
      52: aload_0
      53: aload_1
      54: aload_2
      55: invokevirtual #121                // Method buildErrorMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)Lorg/springframework/messaging/support/ErrorMessage;
      58: astore        4
      60: aload_0
      61: aload_3
      62: aload         4
      64: iconst_1
      65: invokespecial #136                // Method doSendAndReceiveMessageReactive:(Lorg/springframework/messaging/MessageChannel;Ljava/lang/Object;Z)Lreactor/core/publisher/Mono;
      68: areturn
      69: astore        5
      71: new           #97                 // class org/springframework/messaging/MessagingException
      74: dup
      75: aload         4
      77: ldc           #130                // String failure occurred in error-handling flow
      79: aload         5
      81: invokespecial #131                // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
      84: athrow
      85: aload_0
      86: aload_2
      87: ldc           #129                // String gateway received checked Exception
      89: invokespecial #161                // Method wrapExceptionIfNecessary:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;
      92: athrow
    Exception table:
       from    to  target type
          60    68    69   Class java/lang/Exception

  private long sendTimeout(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #125,  1          // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       7: aload_0
       8: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      11: invokevirtual #162                // Method org/springframework/integration/core/MessagingTemplate.getSendTimeoutHeader:()Ljava/lang/String;
      14: invokevirtual #163                // Method org/springframework/messaging/MessageHeaders.get:(Ljava/lang/Object;)Ljava/lang/Object;
      17: invokespecial #164                // Method headerToLong:(Ljava/lang/Object;)Ljava/lang/Long;
      20: astore_2
      21: aload_2
      22: ifnull        32
      25: aload_2
      26: invokevirtual #165                // Method java/lang/Long.longValue:()J
      29: goto          39
      32: aload_0
      33: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      36: invokevirtual #166                // Method org/springframework/integration/core/MessagingTemplate.getSendTimeout:()J
      39: lreturn

  private java.lang.Long headerToLong(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #167                // class java/lang/Number
       4: ifeq          18
       7: aload_1
       8: checkcast     #167                // class java/lang/Number
      11: invokevirtual #168                // Method java/lang/Number.longValue:()J
      14: invokestatic  #169                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      17: areturn
      18: aload_1
      19: instanceof    #170                // class java/lang/String
      22: ifeq          36
      25: aload_1
      26: checkcast     #170                // class java/lang/String
      29: invokestatic  #171                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      32: invokestatic  #169                // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      35: areturn
      36: aconst_null
      37: areturn

  protected final org.springframework.messaging.support.ErrorMessage buildErrorMessage(org.springframework.messaging.Message<?>, java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #20                 // Field errorMessageStrategy:Lorg/springframework/integration/support/ErrorMessageStrategy;
       4: aload_2
       5: aload_0
       6: aload_1
       7: invokevirtual #172                // Method getErrorMessageAttributes:(Lorg/springframework/messaging/Message;)Lorg/springframework/core/AttributeAccessor;
      10: invokeinterface #173,  3          // InterfaceMethod org/springframework/integration/support/ErrorMessageStrategy.buildErrorMessage:(Ljava/lang/Throwable;Lorg/springframework/core/AttributeAccessor;)Lorg/springframework/messaging/support/ErrorMessage;
      15: areturn

  protected org.springframework.core.AttributeAccessor getErrorMessageAttributes(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: aconst_null
       2: invokestatic  #174                // Method org/springframework/integration/support/ErrorMessageUtils.getAttributeAccessor:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/Message;)Lorg/springframework/core/AttributeAccessor;
       5: areturn

  private void rethrow(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #161                // Method wrapExceptionIfNecessary:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/lang/RuntimeException;
       6: athrow

  private java.lang.RuntimeException wrapExceptionIfNecessary(java.lang.Throwable, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #175                // class java/lang/RuntimeException
       4: ifeq          12
       7: aload_1
       8: checkcast     #175                // class java/lang/RuntimeException
      11: areturn
      12: new           #97                 // class org/springframework/messaging/MessagingException
      15: dup
      16: aload_2
      17: aload_1
      18: invokespecial #176                // Method org/springframework/messaging/MessagingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      21: areturn

  protected void registerReplyMessageCorrelatorIfNecessary();
    Code:
       0: aload_0
       1: invokevirtual #87                 // Method getReplyChannel:()Lorg/springframework/messaging/MessageChannel;
       4: astore_1
       5: aload_1
       6: ifnull        239
       9: aload_0
      10: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
      13: ifnonnull     239
      16: aload_0
      17: getfield      #11                 // Field replyMessageCorrelatorMonitor:Ljava/lang/Object;
      20: dup
      21: astore_2
      22: monitorenter
      23: aload_0
      24: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
      27: ifnull        33
      30: aload_2
      31: monitorexit
      32: return
      33: new           #178                // class org/springframework/integration/handler/BridgeHandler
      36: dup
      37: invokespecial #179                // Method org/springframework/integration/handler/BridgeHandler."<init>":()V
      40: astore        4
      42: aload_0
      43: invokevirtual #65                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      46: astore        5
      48: aload         5
      50: ifnull        60
      53: aload         4
      55: aload         5
      57: invokevirtual #180                // Method org/springframework/integration/handler/BridgeHandler.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      60: aload         4
      62: invokevirtual #181                // Method org/springframework/integration/handler/BridgeHandler.afterPropertiesSet:()V
      65: aload_1
      66: instanceof    #182                // class org/springframework/messaging/SubscribableChannel
      69: ifeq          89
      72: new           #183                // class org/springframework/integration/endpoint/EventDrivenConsumer
      75: dup
      76: aload_1
      77: checkcast     #182                // class org/springframework/messaging/SubscribableChannel
      80: aload         4
      82: invokespecial #184                // Method org/springframework/integration/endpoint/EventDrivenConsumer."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageHandler;)V
      85: astore_3
      86: goto          208
      89: aload_1
      90: instanceof    #93                 // class org/springframework/messaging/PollableChannel
      93: ifeq          143
      96: new           #185                // class org/springframework/integration/endpoint/PollingConsumer
      99: dup
     100: aload_1
     101: checkcast     #93                 // class org/springframework/messaging/PollableChannel
     104: aload         4
     106: invokespecial #186                // Method org/springframework/integration/endpoint/PollingConsumer."<init>":(Lorg/springframework/messaging/PollableChannel;Lorg/springframework/messaging/MessageHandler;)V
     109: astore        6
     111: aload         5
     113: ifnull        123
     116: aload         6
     118: aload         5
     120: invokevirtual #187                // Method org/springframework/integration/endpoint/PollingConsumer.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
     123: aload         6
     125: aload_0
     126: getfield      #24                 // Field replyTimeout:J
     129: invokevirtual #188                // Method org/springframework/integration/endpoint/PollingConsumer.setReceiveTimeout:(J)V
     132: aload         6
     134: invokevirtual #189                // Method org/springframework/integration/endpoint/PollingConsumer.afterPropertiesSet:()V
     137: aload         6
     139: astore_3
     140: goto          208
     143: aload_1
     144: instanceof    #139                // class org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
     147: ifeq          173
     150: new           #190                // class org/springframework/integration/endpoint/ReactiveStreamsConsumer
     153: dup
     154: aload_1
     155: aload         4
     157: invokespecial #191                // Method org/springframework/integration/endpoint/ReactiveStreamsConsumer."<init>":(Lorg/springframework/messaging/MessageChannel;Lorg/reactivestreams/Subscriber;)V
     160: astore        6
     162: aload         6
     164: invokevirtual #192                // Method org/springframework/integration/endpoint/ReactiveStreamsConsumer.afterPropertiesSet:()V
     167: aload         6
     169: astore_3
     170: goto          208
     173: new           #97                 // class org/springframework/messaging/MessagingException
     176: dup
     177: new           #111                // class java/lang/StringBuilder
     180: dup
     181: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #193                // String Unsupported \'replyChannel\' type [
     186: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: aload_1
     190: invokevirtual #194                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     193: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     196: ldc           #195                // String ].SubscribableChannel or PollableChannel type are supported.
     198: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     201: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     204: invokespecial #99                 // Method org/springframework/messaging/MessagingException."<init>":(Ljava/lang/String;)V
     207: athrow
     208: aload_0
     209: aload_3
     210: putfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
     213: aload_2
     214: monitorexit
     215: goto          225
     218: astore        7
     220: aload_2
     221: monitorexit
     222: aload         7
     224: athrow
     225: aload_0
     226: invokevirtual #196                // Method isRunning:()Z
     229: ifeq          239
     232: aload_0
     233: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
     236: invokevirtual #197                // Method org/springframework/integration/endpoint/AbstractEndpoint.start:()V
     239: return
    Exception table:
       from    to  target type
          23    32   218   any
          33   215   218   any
         218   222   218   any

  protected void doStart();
    Code:
       0: aload_0
       1: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
       4: ifnull        14
       7: aload_0
       8: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
      11: invokevirtual #197                // Method org/springframework/integration/endpoint/AbstractEndpoint.start:()V
      14: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
       4: ifnull        14
       7: aload_0
       8: getfield      #177                // Field replyMessageCorrelator:Lorg/springframework/integration/endpoint/AbstractEndpoint;
      11: invokevirtual #198                // Method org/springframework/integration/endpoint/AbstractEndpoint.stop:()V
      14: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #199                // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  private reactor.core.publisher.Mono lambda$buildReplyMono$4(boolean, org.springframework.messaging.Message, java.lang.Throwable);
    Code:
       0: iload_1
       1: ifeq          11
       4: aload_3
       5: invokestatic  #200                // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
       8: goto          17
      11: aload_0
      12: aload_2
      13: aload_3
      14: invokespecial #201                // Method handleSendError:(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
      17: areturn

  private static org.springframework.messaging.Message lambda$buildReplyMono$3(boolean, org.springframework.messaging.Message, java.lang.Object, java.lang.Object, org.springframework.messaging.Message);
    Code:
       0: iload_0
       1: ifne          56
       4: aload         4
       6: instanceof    #82                 // class org/springframework/messaging/support/ErrorMessage
       9: ifeq          56
      12: aload         4
      14: checkcast     #82                 // class org/springframework/messaging/support/ErrorMessage
      17: astore        5
      19: aload         5
      21: invokevirtual #119                // Method org/springframework/messaging/support/ErrorMessage.getPayload:()Ljava/lang/Object;
      24: instanceof    #97                 // class org/springframework/messaging/MessagingException
      27: ifeq          39
      30: aload         5
      32: invokevirtual #119                // Method org/springframework/messaging/support/ErrorMessage.getPayload:()Ljava/lang/Object;
      35: checkcast     #97                 // class org/springframework/messaging/MessagingException
      38: athrow
      39: new           #97                 // class org/springframework/messaging/MessagingException
      42: dup
      43: aload_1
      44: aload         5
      46: invokevirtual #119                // Method org/springframework/messaging/support/ErrorMessage.getPayload:()Ljava/lang/Object;
      49: checkcast     #118                // class java/lang/Throwable
      52: invokespecial #202                // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
      55: athrow
      56: aload         4
      58: invokestatic  #203                // Method org/springframework/messaging/support/MessageBuilder.fromMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/support/MessageBuilder;
      61: ldc           #205                // String replyChannel
      63: aload_2
      64: invokevirtual #206                // Method org/springframework/messaging/support/MessageBuilder.setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
      67: ldc           #207                // String errorChannel
      69: aload_3
      70: invokevirtual #206                // Method org/springframework/messaging/support/MessageBuilder.setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/messaging/support/MessageBuilder;
      73: invokevirtual #208                // Method org/springframework/messaging/support/MessageBuilder.build:()Lorg/springframework/messaging/Message;
      76: areturn

  private void lambda$buildReplyMono$2(boolean, org.reactivestreams.Subscription);
    Code:
       0: iload_1
       1: ifne          19
       4: aload_0
       5: getfield      #54                 // Field countsEnabled:Z
       8: ifeq          19
      11: aload_0
      12: getfield      #14                 // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: invokevirtual #78                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      18: pop2
      19: return

  private reactor.core.publisher.Mono lambda$doSendAndReceiveMessageReactive$1(java.lang.Object, org.springframework.messaging.MessageChannel, boolean);
    Code:
       0: aload_1
       1: instanceof    #96                 // class org/springframework/messaging/Message
       4: ifeq          14
       7: aload_1
       8: checkcast     #96                 // class org/springframework/messaging/Message
      11: goto          24
      14: aload_0
      15: getfield      #27                 // Field requestMapper:Lorg/springframework/integration/mapping/InboundMessageMapper;
      18: aload_1
      19: invokeinterface #102,  2          // InterfaceMethod org/springframework/integration/mapping/InboundMessageMapper.toMessage:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      24: astore        4
      26: aload_0
      27: getfield      #8                  // Field historyWritingPostProcessor:Lorg/springframework/integration/history/HistoryWritingMessagePostProcessor;
      30: aload         4
      32: invokevirtual #105                // Method org/springframework/integration/history/HistoryWritingMessagePostProcessor.postProcessMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      35: astore        4
      37: goto          71
      40: astore        5
      42: new           #209                // class org/springframework/integration/mapping/MessageMappingException
      45: dup
      46: new           #111                // class java/lang/StringBuilder
      49: dup
      50: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
      53: ldc           #210                // String Cannot map to message:
      55: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: aload_1
      59: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      62: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: aload         5
      67: invokespecial #211                // Method org/springframework/integration/mapping/MessageMappingException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      70: athrow
      71: aload         4
      73: invokeinterface #125,  1          // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      78: invokevirtual #212                // Method org/springframework/messaging/MessageHeaders.getReplyChannel:()Ljava/lang/Object;
      81: astore        5
      83: aload         4
      85: invokeinterface #125,  1          // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      90: invokevirtual #126                // Method org/springframework/messaging/MessageHeaders.getErrorChannel:()Ljava/lang/Object;
      93: astore        6
      95: new           #213                // class org/springframework/integration/gateway/MessagingGatewaySupport$FutureReplyChannel
      98: dup
      99: invokespecial #214                // Method org/springframework/integration/gateway/MessagingGatewaySupport$FutureReplyChannel."<init>":()V
     102: astore        7
     104: aload         4
     106: invokestatic  #215                // Method org/springframework/integration/support/MutableMessageBuilder.fromMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/MutableMessageBuilder;
     109: aload         7
     111: invokevirtual #216                // Method org/springframework/integration/support/MutableMessageBuilder.setReplyChannel:(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     114: aload_0
     115: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
     118: invokevirtual #162                // Method org/springframework/integration/core/MessagingTemplate.getSendTimeoutHeader:()Ljava/lang/String;
     121: aconst_null
     122: invokevirtual #217                // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     125: aload_0
     126: getfield      #34                 // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
     129: invokevirtual #218                // Method org/springframework/integration/core/MessagingTemplate.getReceiveTimeoutHeader:()Ljava/lang/String;
     132: aconst_null
     133: invokevirtual #217                // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     136: aload         7
     138: invokevirtual #219                // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.setErrorChannel:(Lorg/springframework/messaging/MessageChannel;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     141: invokevirtual #220                // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.build:()Lorg/springframework/messaging/Message;
     144: astore        8
     146: aload_0
     147: aload_2
     148: aload         8
     150: invokespecial #221                // Method sendMessageForReactiveFlow:(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/Message;)V
     153: aload_0
     154: aload         8
     156: aload         7
     158: iload_3
     159: aload         5
     161: aload         6
     163: invokespecial #222                // Method buildReplyMono:(Lorg/springframework/messaging/Message;Lorg/springframework/integration/gateway/MessagingGatewaySupport$FutureReplyChannel;ZLjava/lang/Object;Ljava/lang/Object;)Lreactor/core/publisher/Mono;
     166: areturn
    Exception table:
       from    to  target type
           0    37    40   Class java/lang/Exception

  private static java.lang.String lambda$doSendAndReceive$0(java.lang.Object);
    Code:
       0: new           #111                // class java/lang/StringBuilder
       3: dup
       4: invokespecial #112                // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #223                // String request mapper resulted in no message for
       9: invokevirtual #114                // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #147                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      16: invokevirtual #116                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      19: areturn
}
