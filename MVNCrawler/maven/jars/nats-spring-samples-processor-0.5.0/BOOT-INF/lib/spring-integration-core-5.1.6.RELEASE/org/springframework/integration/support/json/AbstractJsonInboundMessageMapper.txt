Compiled from "AbstractJsonInboundMessageMapper.java"
public abstract class org.springframework.integration.support.json.AbstractJsonInboundMessageMapper<P> implements org.springframework.integration.mapping.InboundMessageMapper<java.lang.String> {
  protected static final java.lang.String MESSAGE_FORMAT_ERROR;

  protected static final java.util.Map<java.lang.String, java.lang.Class<?>> DEFAULT_HEADER_TYPES;

  protected final java.lang.reflect.Type payloadType;

  protected final java.util.Map<java.lang.String, java.lang.Class<?>> headerTypes;

  protected volatile boolean mapToPayload;

  public org.springframework.integration.support.json.AbstractJsonInboundMessageMapper(java.lang.reflect.Type);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
       8: putfield      #3                  // Field headerTypes:Ljava/util/Map;
      11: aload_0
      12: iconst_0
      13: putfield      #4                  // Field mapToPayload:Z
      16: aload_1
      17: ldc           #5                  // String payloadType must not be null
      19: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      22: aload_0
      23: aload_1
      24: putfield      #7                  // Field payloadType:Ljava/lang/reflect/Type;
      27: return

  public void setHeaderTypes(java.util.Map<java.lang.String, java.lang.Class<?>>);
    Code:
       0: aload_0
       1: getfield      #3                  // Field headerTypes:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #8,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void setMapToPayload(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field mapToPayload:Z
       5: return

  protected abstract java.lang.Object readPayload(P, java.lang.String) throws java.lang.Exception;

  protected abstract java.util.Map<java.lang.String, java.lang.Object> readHeaders(P, java.lang.String) throws java.lang.Exception;

  static {};
    Code:
       0: new           #9                  // class java/util/HashMap
       3: dup
       4: invokespecial #10                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
      10: getstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
      13: ldc           #12                 // String priority
      15: ldc           #13                 // class java/lang/Integer
      17: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      22: pop
      23: getstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
      26: ldc           #15                 // String expirationDate
      28: ldc           #16                 // class java/lang/Long
      30: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      35: pop
      36: getstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
      39: ldc           #17                 // String sequenceSize
      41: ldc           #13                 // class java/lang/Integer
      43: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      48: pop
      49: getstatic     #2                  // Field DEFAULT_HEADER_TYPES:Ljava/util/Map;
      52: ldc           #18                 // String sequenceNumber
      54: ldc           #13                 // class java/lang/Integer
      56: invokeinterface #14,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      61: pop
      62: return
}
