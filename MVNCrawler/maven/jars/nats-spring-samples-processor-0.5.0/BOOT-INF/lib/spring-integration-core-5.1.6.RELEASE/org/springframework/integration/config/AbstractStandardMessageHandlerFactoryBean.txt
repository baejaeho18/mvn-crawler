Compiled from "AbstractStandardMessageHandlerFactoryBean.java"
public abstract class org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean extends org.springframework.integration.config.AbstractSimpleMessageHandlerFactoryBean<org.springframework.messaging.MessageHandler> implements org.springframework.beans.factory.DisposableBean {
  private static final org.springframework.expression.ExpressionParser expressionParser;

  private static final java.util.Set<org.springframework.messaging.MessageHandler> referencedReplyProducers;

  private java.lang.Boolean requiresReply;

  private java.lang.Object targetObject;

  private java.lang.String targetMethodName;

  private org.springframework.expression.Expression expression;

  private java.lang.Long sendTimeout;

  private org.springframework.messaging.MessageHandler replyHandler;

  public org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/config/AbstractSimpleMessageHandlerFactoryBean."<init>":()V
       4: return

  public void setTargetObject(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field targetObject:Ljava/lang/Object;
       5: return

  public void setTargetMethodName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field targetMethodName:Ljava/lang/String;
       5: return

  public void setExpressionString(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #4                  // Field expressionParser:Lorg/springframework/expression/ExpressionParser;
       4: aload_1
       5: invokeinterface #5,  2            // InterfaceMethod org/springframework/expression/ExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      10: putfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      13: return

  public void setExpression(org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
       5: return

  public void setRequiresReply(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field requiresReply:Ljava/lang/Boolean;
       5: return

  public void setSendTimeout(java.lang.Long);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field sendTimeout:Ljava/lang/Long;
       5: return

  public java.lang.Long getSendTimeout();
    Code:
       0: aload_0
       1: getfield      #8                  // Field sendTimeout:Ljava/lang/Long;
       4: areturn

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #9                  // Field replyHandler:Lorg/springframework/messaging/MessageHandler;
       4: ifnull        20
       7: getstatic     #10                 // Field referencedReplyProducers:Ljava/util/Set;
      10: aload_0
      11: getfield      #9                  // Field replyHandler:Lorg/springframework/messaging/MessageHandler;
      14: invokeinterface #11,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      19: pop
      20: return

  protected org.springframework.messaging.MessageHandler createHandler();
    Code:
       0: aload_0
       1: getfield      #2                  // Field targetObject:Ljava/lang/Object;
       4: ifnonnull     27
       7: aload_0
       8: getfield      #3                  // Field targetMethodName:Ljava/lang/String;
      11: invokestatic  #12                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      14: ifne          21
      17: iconst_1
      18: goto          22
      21: iconst_0
      22: ldc           #13                 // String The target method is only allowed when a target object (ref or inner bean) is also provided.
      24: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      27: aload_0
      28: getfield      #2                  // Field targetObject:Ljava/lang/Object;
      31: ifnull        207
      34: aload_0
      35: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
      38: ifnonnull     45
      41: iconst_1
      42: goto          46
      45: iconst_0
      46: ldc           #15                 // String The \'targetObject\' and \'expression\' properties are mutually exclusive.
      48: invokestatic  #16                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      51: aload_0
      52: getfield      #2                  // Field targetObject:Ljava/lang/Object;
      55: ldc           #17                 // class org/springframework/integration/handler/AbstractMessageProducingHandler
      57: invokestatic  #18                 // Method org/springframework/integration/context/IntegrationObjectSupport.extractTypeIfPossible:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      60: checkcast     #17                 // class org/springframework/integration/handler/AbstractMessageProducingHandler
      63: astore_2
      64: aload_2
      65: ifnull        91
      68: aload_0
      69: aload_2
      70: invokevirtual #19                 // Method canBeUsedDirect:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)Z
      73: ifeq          91
      76: aload_0
      77: aload_0
      78: getfield      #3                  // Field targetMethodName:Ljava/lang/String;
      81: invokevirtual #20                 // Method methodIsHandleMessageOrEmpty:(Ljava/lang/String;)Z
      84: ifeq          91
      87: iconst_1
      88: goto          92
      91: iconst_0
      92: istore_3
      93: aload_0
      94: getfield      #2                  // Field targetObject:Ljava/lang/Object;
      97: instanceof    #21                 // class org/springframework/integration/handler/MessageProcessor
     100: ifeq          118
     103: aload_0
     104: aload_0
     105: getfield      #2                  // Field targetObject:Ljava/lang/Object;
     108: checkcast     #21                 // class org/springframework/integration/handler/MessageProcessor
     111: invokevirtual #22                 // Method createMessageProcessingHandler:(Lorg/springframework/integration/handler/MessageProcessor;)Lorg/springframework/messaging/MessageHandler;
     114: astore_1
     115: goto          204
     118: iload_3
     119: ifeq          191
     122: aload_0
     123: getfield      #23                 // Field logger:Lorg/apache/commons/logging/Log;
     126: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     131: ifeq          170
     134: aload_0
     135: getfield      #23                 // Field logger:Lorg/apache/commons/logging/Log;
     138: new           #25                 // class java/lang/StringBuilder
     141: dup
     142: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
     145: ldc           #27                 // String Wiring handler (
     147: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     150: aload_0
     151: getfield      #2                  // Field targetObject:Ljava/lang/Object;
     154: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     157: ldc           #30                 // String ) directly into endpoint
     159: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     162: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     165: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     170: aload_0
     171: aload_2
     172: invokespecial #33                 // Method checkReuse:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
     175: aload_0
     176: aload_2
     177: invokevirtual #34                 // Method postProcessReplyProducer:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
     180: aload_0
     181: getfield      #2                  // Field targetObject:Ljava/lang/Object;
     184: checkcast     #35                 // class org/springframework/messaging/MessageHandler
     187: astore_1
     188: goto          204
     191: aload_0
     192: aload_0
     193: getfield      #2                  // Field targetObject:Ljava/lang/Object;
     196: aload_0
     197: getfield      #3                  // Field targetMethodName:Ljava/lang/String;
     200: invokevirtual #36                 // Method createMethodInvokingHandler:(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/messaging/MessageHandler;
     203: astore_1
     204: goto          231
     207: aload_0
     208: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
     211: ifnull        226
     214: aload_0
     215: aload_0
     216: getfield      #6                  // Field expression:Lorg/springframework/expression/Expression;
     219: invokevirtual #37                 // Method createExpressionEvaluatingHandler:(Lorg/springframework/expression/Expression;)Lorg/springframework/messaging/MessageHandler;
     222: astore_1
     223: goto          231
     226: aload_0
     227: invokevirtual #38                 // Method createDefaultHandler:()Lorg/springframework/messaging/MessageHandler;
     230: astore_1
     231: aload_1
     232: areturn

  protected void checkForIllegalTarget(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #39                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler
       4: ifeq          25
       7: aload_0
       8: aload_2
       9: invokevirtual #20                 // Method methodIsHandleMessageOrEmpty:(Ljava/lang/String;)Z
      12: ifeq          25
      15: new           #40                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #41                 // String AbstractReplyProducingMessageHandler.handleMessage() is not allowed for a MethodInvokingHandler
      21: invokespecial #42                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  private void checkReuse(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: getstatic     #10                 // Field referencedReplyProducers:Ljava/util/Set;
       3: aload_1
       4: invokeinterface #43,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: new           #25                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      24: ldc           #44                 // String An AbstractMessageProducingMessageHandler may only be referenced once (
      26: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: aload_1
      30: invokevirtual #45                 // Method org/springframework/integration/handler/AbstractMessageProducingHandler.getBeanName:()Ljava/lang/String;
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: ldc           #46                 // String ) - use scope=\"prototype\"
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      47: getstatic     #10                 // Field referencedReplyProducers:Ljava/util/Set;
      50: aload_1
      51: invokeinterface #47,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      56: pop
      57: aload_0
      58: aload_1
      59: putfield      #9                  // Field replyHandler:Lorg/springframework/messaging/MessageHandler;
      62: return

  protected abstract org.springframework.messaging.MessageHandler createMethodInvokingHandler(java.lang.Object, java.lang.String);

  protected org.springframework.messaging.MessageHandler createExpressionEvaluatingHandler(org.springframework.expression.Expression);
    Code:
       0: new           #48                 // class java/lang/UnsupportedOperationException
       3: dup
       4: new           #25                 // class java/lang/StringBuilder
       7: dup
       8: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      11: aload_0
      12: invokevirtual #49                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: invokevirtual #50                 // Method java/lang/Class.getName:()Ljava/lang/String;
      18: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      21: ldc           #51                 // String  does not support expressions.
      23: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      29: invokespecial #52                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
      32: athrow

  protected <T> org.springframework.messaging.MessageHandler createMessageProcessingHandler(org.springframework.integration.handler.MessageProcessor<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokevirtual #36                 // Method createMethodInvokingHandler:(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/messaging/MessageHandler;
       6: areturn

  protected org.springframework.messaging.MessageHandler createDefaultHandler();
    Code:
       0: new           #40                 // class java/lang/IllegalArgumentException
       3: dup
       4: ldc           #53                 // String Exactly one of the \'targetObject\' or \'expression\' property is required.
       6: invokespecial #42                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       9: athrow

  protected boolean methodIsHandleMessageOrEmpty(java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #12                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          16
       7: ldc           #54                 // String handleMessage
       9: aload_1
      10: invokevirtual #55                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn

  protected boolean canBeUsedDirect(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: iconst_0
       1: ireturn

  protected void postProcessReplyProducer(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field sendTimeout:Ljava/lang/Long;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #8                  // Field sendTimeout:Ljava/lang/Long;
      12: invokevirtual #56                 // Method java/lang/Long.longValue:()J
      15: invokevirtual #57                 // Method org/springframework/integration/handler/AbstractMessageProducingHandler.setSendTimeout:(J)V
      18: aload_0
      19: getfield      #7                  // Field requiresReply:Ljava/lang/Boolean;
      22: ifnull        107
      25: aload_1
      26: instanceof    #39                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler
      29: ifeq          49
      32: aload_1
      33: checkcast     #39                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler
      36: aload_0
      37: getfield      #7                  // Field requiresReply:Ljava/lang/Boolean;
      40: invokevirtual #58                 // Method java/lang/Boolean.booleanValue:()Z
      43: invokevirtual #59                 // Method org/springframework/integration/handler/AbstractReplyProducingMessageHandler.setRequiresReply:(Z)V
      46: goto          107
      49: aload_0
      50: getfield      #7                  // Field requiresReply:Ljava/lang/Boolean;
      53: invokevirtual #58                 // Method java/lang/Boolean.booleanValue:()Z
      56: ifeq          107
      59: aload_0
      60: getfield      #23                 // Field logger:Lorg/apache/commons/logging/Log;
      63: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      68: ifeq          107
      71: aload_0
      72: getfield      #23                 // Field logger:Lorg/apache/commons/logging/Log;
      75: new           #25                 // class java/lang/StringBuilder
      78: dup
      79: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      82: ldc           #60                 // String requires-reply can only be set to AbstractReplyProducingMessageHandler or its subclass,
      84: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: aload_1
      88: invokevirtual #45                 // Method org/springframework/integration/handler/AbstractMessageProducingHandler.getBeanName:()Ljava/lang/String;
      91: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: ldc           #61                 // String  doesn\'t support it.
      96: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     102: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     107: return

  static {};
    Code:
       0: new           #62                 // class org/springframework/expression/spel/standard/SpelExpressionParser
       3: dup
       4: invokespecial #63                 // Method org/springframework/expression/spel/standard/SpelExpressionParser."<init>":()V
       7: putstatic     #4                  // Field expressionParser:Lorg/springframework/expression/ExpressionParser;
      10: new           #64                 // class java/util/HashSet
      13: dup
      14: invokespecial #65                 // Method java/util/HashSet."<init>":()V
      17: putstatic     #10                 // Field referencedReplyProducers:Ljava/util/Set;
      20: return
}
