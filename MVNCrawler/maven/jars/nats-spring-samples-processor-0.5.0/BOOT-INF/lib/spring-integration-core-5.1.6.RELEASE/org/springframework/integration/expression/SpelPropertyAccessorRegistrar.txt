Compiled from "SpelPropertyAccessorRegistrar.java"
public class org.springframework.integration.expression.SpelPropertyAccessorRegistrar {
  private final java.util.Map<java.lang.String, org.springframework.expression.PropertyAccessor> propertyAccessors;

  public org.springframework.integration.expression.SpelPropertyAccessorRegistrar();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      15: return

  public org.springframework.integration.expression.SpelPropertyAccessorRegistrar(org.springframework.expression.PropertyAccessor...);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      15: aload_1
      16: ldc           #5                  // String \'propertyAccessors\' must not be empty
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: astore_2
      23: aload_2
      24: arraylength
      25: istore_3
      26: iconst_0
      27: istore        4
      29: iload         4
      31: iload_3
      32: if_icmpge     64
      35: aload_2
      36: iload         4
      38: aaload
      39: astore        5
      41: aload_0
      42: getfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      45: aload         5
      47: invokestatic  #7                  // Method obtainAccessorKey:(Lorg/springframework/expression/PropertyAccessor;)Ljava/lang/String;
      50: aload         5
      52: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      57: pop
      58: iinc          4, 1
      61: goto          29
      64: return

  public org.springframework.integration.expression.SpelPropertyAccessorRegistrar(java.util.Map<java.lang.String, org.springframework.expression.PropertyAccessor>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedHashMap
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedHashMap."<init>":()V
      12: putfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      15: aload_1
      16: ldc           #5                  // String \'propertyAccessors\' must not be empty
      18: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Map;Ljava/lang/String;)V
      21: aload_0
      22: getfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      25: aload_1
      26: invokeinterface #10,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      31: return

  public java.util.Map<java.lang.String, org.springframework.expression.PropertyAccessor> getPropertyAccessors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field propertyAccessors:Ljava/util/Map;
       4: areturn

  public org.springframework.integration.expression.SpelPropertyAccessorRegistrar add(java.lang.String, org.springframework.expression.PropertyAccessor);
    Code:
       0: aload_1
       1: ldc           #11                 // String \'name\' must not be empty
       3: invokestatic  #12                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_2
       7: ldc           #13                 // String \'propertyAccessor\' must not be null
       9: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: getfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      16: aload_1
      17: aload_2
      18: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      23: pop
      24: aload_0
      25: areturn

  public org.springframework.integration.expression.SpelPropertyAccessorRegistrar add(org.springframework.expression.PropertyAccessor...);
    Code:
       0: aload_1
       1: ldc           #5                  // String \'propertyAccessors\' must not be empty
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notEmpty:([Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: astore_2
       8: aload_2
       9: arraylength
      10: istore_3
      11: iconst_0
      12: istore        4
      14: iload         4
      16: iload_3
      17: if_icmpge     49
      20: aload_2
      21: iload         4
      23: aaload
      24: astore        5
      26: aload_0
      27: getfield      #4                  // Field propertyAccessors:Ljava/util/Map;
      30: aload         5
      32: invokestatic  #7                  // Method obtainAccessorKey:(Lorg/springframework/expression/PropertyAccessor;)Ljava/lang/String;
      35: aload         5
      37: invokeinterface #8,  3            // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      42: pop
      43: iinc          4, 1
      46: goto          14
      49: aload_0
      50: areturn

  private static java.lang.String obtainAccessorKey(org.springframework.expression.PropertyAccessor);
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: invokevirtual #16                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
       7: invokestatic  #17                 // Method java/beans/Introspector.decapitalize:(Ljava/lang/String;)Ljava/lang/String;
      10: areturn
}
