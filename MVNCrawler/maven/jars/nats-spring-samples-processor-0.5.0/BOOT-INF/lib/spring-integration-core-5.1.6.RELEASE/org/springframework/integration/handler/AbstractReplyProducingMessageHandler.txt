Compiled from "AbstractReplyProducingMessageHandler.java"
public abstract class org.springframework.integration.handler.AbstractReplyProducingMessageHandler extends org.springframework.integration.handler.AbstractMessageProducingHandler implements org.springframework.beans.factory.BeanClassLoaderAware {
  private final java.util.List<org.aopalliance.aop.Advice> adviceChain;

  private java.lang.ClassLoader beanClassLoader;

  private boolean requiresReply;

  private volatile org.springframework.integration.handler.AbstractReplyProducingMessageHandler$RequestHandler advisedRequestHandler;

  public org.springframework.integration.handler.AbstractReplyProducingMessageHandler();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/handler/AbstractMessageProducingHandler."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/LinkedList
       8: dup
       9: invokespecial #3                  // Method java/util/LinkedList."<init>":()V
      12: putfield      #4                  // Field adviceChain:Ljava/util/List;
      15: aload_0
      16: invokestatic  #5                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      19: putfield      #6                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      22: aload_0
      23: iconst_0
      24: putfield      #7                  // Field requiresReply:Z
      27: return

  public void setRequiresReply(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field requiresReply:Z
       5: return

  protected boolean getRequiresReply();
    Code:
       0: aload_0
       1: getfield      #7                  // Field requiresReply:Z
       4: ireturn

  public void setAdviceChain(java.util.List<org.aopalliance.aop.Advice>);
    Code:
       0: aload_1
       1: ldc           #8                  // String adviceChain cannot be empty
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notEmpty:(Ljava/util/Collection;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #4                  // Field adviceChain:Ljava/util/List;
      10: dup
      11: astore_2
      12: monitorenter
      13: aload_0
      14: getfield      #4                  // Field adviceChain:Ljava/util/List;
      17: invokeinterface #10,  1           // InterfaceMethod java/util/List.clear:()V
      22: aload_0
      23: getfield      #4                  // Field adviceChain:Ljava/util/List;
      26: aload_1
      27: invokeinterface #11,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      32: pop
      33: aload_0
      34: invokevirtual #12                 // Method isInitialized:()Z
      37: ifeq          44
      40: aload_0
      41: invokespecial #13                 // Method initAdvisedRequestHandlerIfAny:()V
      44: aload_2
      45: monitorexit
      46: goto          54
      49: astore_3
      50: aload_2
      51: monitorexit
      52: aload_3
      53: athrow
      54: return
    Exception table:
       from    to  target type
          13    46    49   any
          49    52    49   any

  protected boolean hasAdviceChain();
    Code:
       0: aload_0
       1: getfield      #4                  // Field adviceChain:Ljava/util/List;
       4: invokeinterface #14,  1           // InterfaceMethod java/util/List.size:()I
       9: ifle          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field beanClassLoader:Ljava/lang/ClassLoader;
       5: return

  protected final void onInit();
    Code:
       0: aload_0
       1: invokespecial #15                 // Method org/springframework/integration/handler/AbstractMessageProducingHandler.onInit:()V
       4: aload_0
       5: invokespecial #13                 // Method initAdvisedRequestHandlerIfAny:()V
       8: aload_0
       9: invokevirtual #16                 // Method doInit:()V
      12: return

  private void initAdvisedRequestHandlerIfAny();
    Code:
       0: aload_0
       1: getfield      #4                  // Field adviceChain:Ljava/util/List;
       4: invokeinterface #17,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          98
      12: new           #18                 // class org/springframework/aop/framework/ProxyFactory
      15: dup
      16: new           #19                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler$AdvisedRequestHandler
      19: dup
      20: aload_0
      21: invokespecial #20                 // Method org/springframework/integration/handler/AbstractReplyProducingMessageHandler$AdvisedRequestHandler."<init>":(Lorg/springframework/integration/handler/AbstractReplyProducingMessageHandler;)V
      24: invokespecial #21                 // Method org/springframework/aop/framework/ProxyFactory."<init>":(Ljava/lang/Object;)V
      27: astore_1
      28: iconst_0
      29: istore_2
      30: aload_0
      31: getfield      #4                  // Field adviceChain:Ljava/util/List;
      34: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      39: astore_3
      40: aload_3
      41: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      46: ifeq          79
      49: aload_3
      50: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      55: checkcast     #25                 // class org/aopalliance/aop/Advice
      58: astore        4
      60: aload         4
      62: instanceof    #26                 // class org/springframework/integration/handler/advice/HandleMessageAdvice
      65: ifne          76
      68: aload_1
      69: aload         4
      71: invokevirtual #27                 // Method org/springframework/aop/framework/ProxyFactory.addAdvice:(Lorg/aopalliance/aop/Advice;)V
      74: iconst_1
      75: istore_2
      76: goto          40
      79: iload_2
      80: ifeq          98
      83: aload_0
      84: aload_1
      85: aload_0
      86: getfield      #6                  // Field beanClassLoader:Ljava/lang/ClassLoader;
      89: invokevirtual #28                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
      92: checkcast     #29                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler
      95: putfield      #30                 // Field advisedRequestHandler:Lorg/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler;
      98: return

  protected void doInit();
    Code:
       0: return

  protected final void handleMessageInternal(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #30                 // Field advisedRequestHandler:Lorg/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler;
       4: ifnonnull     16
       7: aload_0
       8: aload_1
       9: invokevirtual #31                 // Method handleRequestMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      12: astore_2
      13: goto          22
      16: aload_0
      17: aload_1
      18: invokevirtual #32                 // Method doInvokeAdvisedRequestHandler:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      21: astore_2
      22: aload_2
      23: ifnull        35
      26: aload_0
      27: aload_2
      28: aload_1
      29: invokevirtual #33                 // Method sendOutputs:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
      32: goto          141
      35: aload_0
      36: getfield      #7                  // Field requiresReply:Z
      39: ifeq          85
      42: aload_0
      43: invokevirtual #34                 // Method isAsync:()Z
      46: ifne          85
      49: new           #35                 // class org/springframework/integration/handler/ReplyRequiredException
      52: dup
      53: aload_1
      54: new           #36                 // class java/lang/StringBuilder
      57: dup
      58: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      61: ldc           #38                 // String No reply produced by handler \'
      63: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #40                 // Method getComponentName:()Ljava/lang/String;
      70: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #41                 // String \', and its \'requiresReply\' property is set to true.
      75: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #43                 // Method org/springframework/integration/handler/ReplyRequiredException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: invokevirtual #34                 // Method isAsync:()Z
      89: ifne          141
      92: aload_0
      93: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
      96: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     101: ifeq          141
     104: aload_0
     105: getfield      #44                 // Field logger:Lorg/apache/commons/logging/Log;
     108: new           #36                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #46                 // String handler \'
     117: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_0
     121: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     124: ldc           #48                 // String \' produced no reply for request Message:
     126: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload_1
     130: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     133: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     136: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     141: return

  protected java.lang.Object doInvokeAdvisedRequestHandler(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #30                 // Field advisedRequestHandler:Lorg/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler;
       4: aload_1
       5: invokeinterface #50,  2           // InterfaceMethod org/springframework/integration/handler/AbstractReplyProducingMessageHandler$RequestHandler.handleRequestMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      10: areturn

  protected abstract java.lang.Object handleRequestMessage(org.springframework.messaging.Message<?>);
}
