Compiled from "AbstractHeaderMapper.java"
public class org.springframework.integration.mapping.AbstractHeaderMapper$PrefixBasedMatcher implements org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher {
  private static final org.apache.commons.logging.Log logger;

  private final boolean match;

  private final java.lang.String prefix;

  public org.springframework.integration.mapping.AbstractHeaderMapper$PrefixBasedMatcher(boolean, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field match:Z
       9: aload_0
      10: aload_2
      11: putfield      #3                  // Field prefix:Ljava/lang/String;
      14: return

  public boolean matchHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field match:Z
       4: aload_1
       5: aload_0
       6: getfield      #3                  // Field prefix:Ljava/lang/String;
       9: invokevirtual #4                  // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      12: if_icmpne     19
      15: iconst_1
      16: goto          20
      19: iconst_0
      20: istore_2
      21: iload_2
      22: ifeq          97
      25: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
      28: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      33: ifeq          97
      36: new           #7                  // class java/lang/StringBuilder
      39: dup
      40: ldc           #8                  // String headerName=[{0}] WILL be mapped,
      42: invokespecial #9                  // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      45: astore_3
      46: aload_0
      47: getfield      #2                  // Field match:Z
      50: ifne          60
      53: aload_3
      54: ldc           #10                 // String does not
      56: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_3
      61: ldc           #12                 // String start with [{1}]
      63: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: pop
      67: getstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
      70: aload_3
      71: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: iconst_2
      75: anewarray     #14                 // class java/lang/Object
      78: dup
      79: iconst_0
      80: aload_1
      81: aastore
      82: dup
      83: iconst_1
      84: aload_0
      85: getfield      #3                  // Field prefix:Ljava/lang/String;
      88: aastore
      89: invokestatic  #15                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      92: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      97: iload_2
      98: ireturn

  public boolean isNegated();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #17                 // class org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher
       2: invokestatic  #18                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #5                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
