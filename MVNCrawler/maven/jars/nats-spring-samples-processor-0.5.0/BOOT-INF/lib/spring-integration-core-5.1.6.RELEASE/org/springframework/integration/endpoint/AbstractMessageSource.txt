Compiled from "AbstractMessageSource.java"
public abstract class org.springframework.integration.endpoint.AbstractMessageSource<T> extends org.springframework.integration.util.AbstractExpressionEvaluator implements org.springframework.integration.core.MessageSource<T>, org.springframework.integration.support.management.MessageSourceMetrics, org.springframework.integration.support.context.NamedComponent, org.springframework.beans.factory.BeanNameAware {
  private final java.util.concurrent.atomic.AtomicLong messageCount;

  private final org.springframework.integration.support.management.IntegrationManagement$ManagementOverrides managementOverrides;

  private java.util.Map<java.lang.String, org.springframework.expression.Expression> headerExpressions;

  private java.lang.String beanName;

  private java.lang.String managedType;

  private java.lang.String managedName;

  private boolean countsEnabled;

  private boolean loggingEnabled;

  private org.springframework.integration.support.management.metrics.MetricsCaptor metricsCaptor;

  private org.springframework.integration.support.management.metrics.CounterFacade receiveCounter;

  public org.springframework.integration.endpoint.AbstractMessageSource();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/util/AbstractExpressionEvaluator."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/atomic/AtomicLong
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      12: putfield      #4                  // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
      15: aload_0
      16: new           #5                  // class org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides
      19: dup
      20: invokespecial #6                  // Method org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides."<init>":()V
      23: putfield      #7                  // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field loggingEnabled:Z
      31: return

  public void setHeaderExpressions(java.util.Map<java.lang.String, org.springframework.expression.Expression>);
    Code:
       0: aload_1
       1: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       4: ifne          19
       7: aload_0
       8: new           #10                 // class java/util/HashMap
      11: dup
      12: aload_1
      13: invokespecial #11                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      16: putfield      #12                 // Field headerExpressions:Ljava/util/Map;
      19: return

  public void registerMetricsCaptor(org.springframework.integration.support.management.metrics.MetricsCaptor);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field metricsCaptor:Lorg/springframework/integration/support/management/metrics/MetricsCaptor;
       5: return

  public void setBeanName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #14                 // Field beanName:Ljava/lang/String;
       5: return

  public java.lang.String getBeanName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field beanName:Ljava/lang/String;
       4: areturn

  public void setManagedType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field managedType:Ljava/lang/String;
       5: return

  public java.lang.String getManagedType();
    Code:
       0: aload_0
       1: getfield      #15                 // Field managedType:Ljava/lang/String;
       4: areturn

  public void setManagedName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field managedName:Ljava/lang/String;
       5: return

  public java.lang.String getManagedName();
    Code:
       0: aload_0
       1: getfield      #16                 // Field managedName:Ljava/lang/String;
       4: areturn

  public java.lang.String getComponentName();
    Code:
       0: aload_0
       1: getfield      #14                 // Field beanName:Ljava/lang/String;
       4: areturn

  public boolean isCountsEnabled();
    Code:
       0: aload_0
       1: getfield      #17                 // Field countsEnabled:Z
       4: ireturn

  public void setCountsEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #17                 // Field countsEnabled:Z
       5: aload_0
       6: getfield      #7                  // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       9: iconst_1
      10: putfield      #18                 // Field org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides.countsConfigured:Z
      13: return

  public boolean isLoggingEnabled();
    Code:
       0: aload_0
       1: getfield      #8                  // Field loggingEnabled:Z
       4: ireturn

  public void setLoggingEnabled(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #8                  // Field loggingEnabled:Z
       5: aload_0
       6: getfield      #7                  // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       9: iconst_1
      10: putfield      #19                 // Field org/springframework/integration/support/management/IntegrationManagement$ManagementOverrides.loggingConfigured:Z
      13: return

  public void reset();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: lconst_0
       5: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
       8: return

  public int getMessageCount();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getMessageCountLong();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #21                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public org.springframework.integration.support.management.IntegrationManagement$ManagementOverrides getOverrides();
    Code:
       0: aload_0
       1: getfield      #7                  // Field managementOverrides:Lorg/springframework/integration/support/management/IntegrationManagement$ManagementOverrides;
       4: areturn

  public final org.springframework.messaging.Message<T> receive();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #22                 // Method doReceive:()Ljava/lang/Object;
       5: invokevirtual #23                 // Method buildMessage:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
       8: areturn

  protected org.springframework.messaging.Message<T> buildMessage(java.lang.Object);
    Code:
       0: aconst_null
       1: astore_2
       2: aload_0
       3: invokespecial #24                 // Method evaluateHeaders:()Ljava/util/Map;
       6: astore_3
       7: aload_1
       8: instanceof    #25                 // class org/springframework/integration/support/AbstractIntegrationMessageBuilder
      11: ifeq          41
      14: aload_3
      15: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      18: ifne          30
      21: aload_1
      22: checkcast     #25                 // class org/springframework/integration/support/AbstractIntegrationMessageBuilder
      25: aload_3
      26: invokevirtual #26                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      29: pop
      30: aload_1
      31: checkcast     #25                 // class org/springframework/integration/support/AbstractIntegrationMessageBuilder
      34: invokevirtual #27                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.build:()Lorg/springframework/messaging/Message;
      37: astore_2
      38: goto          103
      41: aload_1
      42: instanceof    #28                 // class org/springframework/messaging/Message
      45: ifeq          81
      48: aload_1
      49: checkcast     #28                 // class org/springframework/messaging/Message
      52: astore_2
      53: aload_3
      54: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
      57: ifne          103
      60: aload_0
      61: invokevirtual #29                 // Method getMessageBuilderFactory:()Lorg/springframework/integration/support/MessageBuilderFactory;
      64: aload_2
      65: invokeinterface #30,  2           // InterfaceMethod org/springframework/integration/support/MessageBuilderFactory.fromMessage:(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      70: aload_3
      71: invokevirtual #26                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      74: invokevirtual #27                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.build:()Lorg/springframework/messaging/Message;
      77: astore_2
      78: goto          103
      81: aload_1
      82: ifnull        103
      85: aload_0
      86: invokevirtual #29                 // Method getMessageBuilderFactory:()Lorg/springframework/integration/support/MessageBuilderFactory;
      89: aload_1
      90: invokeinterface #31,  2           // InterfaceMethod org/springframework/integration/support/MessageBuilderFactory.withPayload:(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      95: aload_3
      96: invokevirtual #26                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.copyHeaders:(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      99: invokevirtual #27                 // Method org/springframework/integration/support/AbstractIntegrationMessageBuilder.build:()Lorg/springframework/messaging/Message;
     102: astore_2
     103: aload_0
     104: getfield      #17                 // Field countsEnabled:Z
     107: ifeq          133
     110: aload_2
     111: ifnull        133
     114: aload_0
     115: getfield      #13                 // Field metricsCaptor:Lorg/springframework/integration/support/management/metrics/MetricsCaptor;
     118: ifnull        125
     121: aload_0
     122: invokespecial #32                 // Method incrementReceiveCounter:()V
     125: aload_0
     126: getfield      #4                  // Field messageCount:Ljava/util/concurrent/atomic/AtomicLong;
     129: invokevirtual #33                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     132: pop2
     133: aload_2
     134: areturn

  private void incrementReceiveCounter();
    Code:
       0: aload_0
       1: getfield      #34                 // Field receiveCounter:Lorg/springframework/integration/support/management/metrics/CounterFacade;
       4: ifnonnull     84
       7: aload_0
       8: aload_0
       9: getfield      #13                 // Field metricsCaptor:Lorg/springframework/integration/support/management/metrics/MetricsCaptor;
      12: ldc           #36                 // String spring.integration.receive
      14: invokeinterface #37,  2           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor.counterBuilder:(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      19: ldc           #38                 // String name
      21: aload_0
      22: invokevirtual #39                 // Method getComponentName:()Ljava/lang/String;
      25: ifnonnull     33
      28: ldc           #40                 // String unknown
      30: goto          37
      33: aload_0
      34: invokevirtual #39                 // Method getComponentName:()Ljava/lang/String;
      37: invokeinterface #41,  3           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      42: ldc           #42                 // String type
      44: ldc           #43                 // String source
      46: invokeinterface #41,  3           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      51: ldc           #44                 // String result
      53: ldc           #45                 // String success
      55: invokeinterface #41,  3           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      60: ldc           #46                 // String exception
      62: ldc           #47                 // String none
      64: invokeinterface #41,  3           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      69: ldc           #48                 // String Messages received
      71: invokeinterface #49,  2           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.description:(Ljava/lang/String;)Lorg/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder;
      76: invokeinterface #50,  1           // InterfaceMethod org/springframework/integration/support/management/metrics/MetricsCaptor$CounterBuilder.build:()Lorg/springframework/integration/support/management/metrics/CounterFacade;
      81: putfield      #34                 // Field receiveCounter:Lorg/springframework/integration/support/management/metrics/CounterFacade;
      84: aload_0
      85: getfield      #34                 // Field receiveCounter:Lorg/springframework/integration/support/management/metrics/CounterFacade;
      88: invokeinterface #51,  1           // InterfaceMethod org/springframework/integration/support/management/metrics/CounterFacade.increment:()V
      93: return

  private java.util.Map<java.lang.String, java.lang.Object> evaluateHeaders();
    Code:
       0: aload_0
       1: getfield      #12                 // Field headerExpressions:Ljava/util/Map;
       4: invokestatic  #9                  // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       7: ifeq          14
      10: aconst_null
      11: goto          33
      14: aload_0
      15: getfield      #12                 // Field headerExpressions:Ljava/util/Map;
      18: invokestatic  #52                 // Method org/springframework/integration/expression/ExpressionEvalMap.from:(Ljava/util/Map;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapBuilder;
      21: aload_0
      22: invokevirtual #53                 // Method getEvaluationContext:()Lorg/springframework/expression/spel/support/StandardEvaluationContext;
      25: invokevirtual #54                 // Method org/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapBuilder.usingEvaluationContext:(Lorg/springframework/expression/EvaluationContext;)Lorg/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder;
      28: invokeinterface #55,  1           // InterfaceMethod org/springframework/integration/expression/ExpressionEvalMap$ExpressionEvalMapComponentsBuilder.build:()Lorg/springframework/integration/expression/ExpressionEvalMap;
      33: areturn

  protected abstract java.lang.Object doReceive();

  public void destroy() throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #34                 // Field receiveCounter:Lorg/springframework/integration/support/management/metrics/CounterFacade;
       4: ifnull        17
       7: aload_0
       8: getfield      #34                 // Field receiveCounter:Lorg/springframework/integration/support/management/metrics/CounterFacade;
      11: invokeinterface #56,  1           // InterfaceMethod org/springframework/integration/support/management/metrics/CounterFacade.remove:()Lorg/springframework/integration/support/management/metrics/MeterFacade;
      16: pop
      17: return
}
