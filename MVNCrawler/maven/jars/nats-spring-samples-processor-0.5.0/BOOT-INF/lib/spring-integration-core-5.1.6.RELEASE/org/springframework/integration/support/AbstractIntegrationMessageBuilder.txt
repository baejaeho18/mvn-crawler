Compiled from "AbstractIntegrationMessageBuilder.java"
public abstract class org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> {
  public org.springframework.integration.support.AbstractIntegrationMessageBuilder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setExpirationDate(java.lang.Long);
    Code:
       0: aload_0
       1: ldc           #3                  // String expirationDate
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setExpirationDate(java.util.Date);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: ldc           #3                  // String expirationDate
       7: aload_1
       8: invokevirtual #5                  // Method java/util/Date.getTime:()J
      11: invokestatic  #6                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      14: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      17: areturn
      18: aload_0
      19: ldc           #3                  // String expirationDate
      21: aconst_null
      22: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      25: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setCorrelationId(java.lang.Object);
    Code:
       0: aload_0
       1: ldc           #7                  // String correlationId
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> pushSequenceDetails(java.lang.Object, int, int);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getCorrelationId:()Ljava/lang/Object;
       4: astore        4
       6: aload_0
       7: invokevirtual #9                  // Method getSequenceDetails:()Ljava/util/List;
      10: astore        5
      12: aload         4
      14: ifnull        86
      17: aload         5
      19: ifnonnull     34
      22: new           #10                 // class java/util/ArrayList
      25: dup
      26: invokespecial #11                 // Method java/util/ArrayList."<init>":()V
      29: astore        5
      31: goto          45
      34: new           #10                 // class java/util/ArrayList
      37: dup
      38: aload         5
      40: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      43: astore        5
      45: aload         5
      47: iconst_3
      48: anewarray     #13                 // class java/lang/Object
      51: dup
      52: iconst_0
      53: aload         4
      55: aastore
      56: dup
      57: iconst_1
      58: aload_0
      59: invokevirtual #14                 // Method getSequenceNumber:()Ljava/lang/Object;
      62: aastore
      63: dup
      64: iconst_2
      65: aload_0
      66: invokevirtual #15                 // Method getSequenceSize:()Ljava/lang/Object;
      69: aastore
      70: invokestatic  #16                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      73: invokeinterface #17,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      78: pop
      79: aload         5
      81: invokestatic  #18                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      84: astore        5
      86: aload         5
      88: ifnull        100
      91: aload_0
      92: ldc           #19                 // String sequenceDetails
      94: aload         5
      96: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      99: pop
     100: aload_0
     101: aload_1
     102: invokevirtual #20                 // Method setCorrelationId:(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     105: iload_2
     106: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     109: invokevirtual #22                 // Method setSequenceNumber:(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     112: iload_3
     113: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     116: invokevirtual #23                 // Method setSequenceSize:(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     119: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> popSequenceDetails();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getSequenceDetails:()Ljava/util/List;
       4: astore_1
       5: aload_1
       6: ifnonnull     11
       9: aload_0
      10: areturn
      11: new           #10                 // class java/util/ArrayList
      14: dup
      15: aload_1
      16: invokespecial #12                 // Method java/util/ArrayList."<init>":(Ljava/util/Collection;)V
      19: astore_1
      20: aload_1
      21: aload_1
      22: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      27: iconst_1
      28: isub
      29: invokeinterface #25,  2           // InterfaceMethod java/util/List.remove:(I)Ljava/lang/Object;
      34: checkcast     #26                 // class java/util/List
      37: astore_2
      38: aload_2
      39: invokeinterface #24,  1           // InterfaceMethod java/util/List.size:()I
      44: iconst_3
      45: if_icmpne     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: new           #27                 // class java/lang/StringBuilder
      56: dup
      57: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      60: ldc           #29                 // String Wrong sequence details (not created by MessageBuilder?):
      62: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_2
      66: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokestatic  #33                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      75: aload_0
      76: aload_2
      77: iconst_0
      78: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      83: invokevirtual #20                 // Method setCorrelationId:(Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      86: pop
      87: aload_2
      88: iconst_1
      89: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      94: checkcast     #35                 // class java/lang/Integer
      97: astore_3
      98: aload_2
      99: iconst_2
     100: invokeinterface #34,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
     105: checkcast     #35                 // class java/lang/Integer
     108: astore        4
     110: aload_3
     111: ifnull        120
     114: aload_0
     115: aload_3
     116: invokevirtual #22                 // Method setSequenceNumber:(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     119: pop
     120: aload         4
     122: ifnull        132
     125: aload_0
     126: aload         4
     128: invokevirtual #23                 // Method setSequenceSize:(Ljava/lang/Integer;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     131: pop
     132: aload_1
     133: invokeinterface #36,  1           // InterfaceMethod java/util/List.isEmpty:()Z
     138: ifne          152
     141: aload_0
     142: ldc           #19                 // String sequenceDetails
     144: aload_1
     145: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     148: pop
     149: goto          159
     152: aload_0
     153: ldc           #19                 // String sequenceDetails
     155: invokevirtual #37                 // Method removeHeader:(Ljava/lang/String;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
     158: pop
     159: aload_0
     160: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setReplyChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: ldc           #39                 // String replyChannel
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setReplyChannelName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #39                 // String replyChannel
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setErrorChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: ldc           #40                 // String errorChannel
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setErrorChannelName(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #40                 // String errorChannel
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setSequenceNumber(java.lang.Integer);
    Code:
       0: aload_0
       1: ldc           #41                 // String sequenceNumber
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setSequenceSize(java.lang.Integer);
    Code:
       0: aload_0
       1: ldc           #42                 // String sequenceSize
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setPriority(java.lang.Integer);
    Code:
       0: aload_0
       1: ldc           #43                 // String priority
       3: aload_1
       4: invokevirtual #4                  // Method setHeader:(Ljava/lang/String;Ljava/lang/Object;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
       7: areturn

  public org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> filterAndCopyHeadersIfAbsent(java.util.Map<java.lang.String, ?>, java.lang.String...);
    Code:
       0: aload_1
       1: astore_3
       2: aload_2
       3: invokestatic  #44                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       6: ifne          36
       9: new           #45                 // class java/util/HashMap
      12: dup
      13: aload_1
      14: invokespecial #46                 // Method java/util/HashMap."<init>":(Ljava/util/Map;)V
      17: astore_3
      18: aload_3
      19: invokeinterface #47,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      24: aload_2
      25: invokedynamic #48,  0             // InvokeDynamic #0:test:([Ljava/lang/String;)Ljava/util/function/Predicate;
      30: invokeinterface #49,  2           // InterfaceMethod java/util/Set.removeIf:(Ljava/util/function/Predicate;)Z
      35: pop
      36: aload_0
      37: aload_3
      38: invokevirtual #50                 // Method copyHeadersIfAbsent:(Ljava/util/Map;)Lorg/springframework/integration/support/AbstractIntegrationMessageBuilder;
      41: areturn

  protected abstract java.util.List<java.util.List<java.lang.Object>> getSequenceDetails();

  protected abstract java.lang.Object getCorrelationId();

  protected abstract java.lang.Object getSequenceNumber();

  protected abstract java.lang.Object getSequenceSize();

  public abstract T getPayload();

  public abstract java.util.Map<java.lang.String, java.lang.Object> getHeaders();

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setHeader(java.lang.String, java.lang.Object);

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> setHeaderIfAbsent(java.lang.String, java.lang.Object);

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> removeHeaders(java.lang.String...);

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> removeHeader(java.lang.String);

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> copyHeaders(java.util.Map<java.lang.String, ?>);

  public abstract org.springframework.integration.support.AbstractIntegrationMessageBuilder<T> copyHeadersIfAbsent(java.util.Map<java.lang.String, ?>);

  public abstract org.springframework.messaging.Message<T> build();

  private static boolean lambda$filterAndCopyHeadersIfAbsent$0(java.lang.String[], java.util.Map$Entry);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #51,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
       7: checkcast     #52                 // class java/lang/String
      10: invokestatic  #53                 // Method org/springframework/util/PatternMatchUtils.simpleMatch:([Ljava/lang/String;Ljava/lang/String;)Z
      13: ireturn
}
