Compiled from "MessageChannelReactiveUtils.java"
final class org.springframework.integration.channel.MessageChannelReactiveUtils$SubscribableChannelPublisherAdapter<T> implements org.reactivestreams.Publisher<org.springframework.messaging.Message<T>> {
  private final org.springframework.messaging.SubscribableChannel channel;

  org.springframework.integration.channel.MessageChannelReactiveUtils$SubscribableChannelPublisherAdapter(org.springframework.messaging.SubscribableChannel);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field channel:Lorg/springframework/messaging/SubscribableChannel;
       9: return

  public void subscribe(org.reactivestreams.Subscriber<? super org.springframework.messaging.Message<T>>);
    Code:
       0: aload_0
       1: invokedynamic #3,  0              // InvokeDynamic #0:accept:(Lorg/springframework/integration/channel/MessageChannelReactiveUtils$SubscribableChannelPublisherAdapter;)Ljava/util/function/Consumer;
       6: getstatic     #4                  // Field reactor/core/publisher/FluxSink$OverflowStrategy.IGNORE:Lreactor/core/publisher/FluxSink$OverflowStrategy;
       9: invokestatic  #5                  // Method reactor/core/publisher/Flux.create:(Ljava/util/function/Consumer;Lreactor/core/publisher/FluxSink$OverflowStrategy;)Lreactor/core/publisher/Flux;
      12: aload_1
      13: invokevirtual #6                  // Method reactor/core/publisher/Flux.subscribe:(Lorg/reactivestreams/Subscriber;)V
      16: return

  private void lambda$subscribe$1(reactor.core.publisher.FluxSink);
    Code:
       0: aload_1
       1: dup
       2: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       5: pop
       6: invokedynamic #8,  0              // InvokeDynamic #1:handleMessage:(Lreactor/core/publisher/FluxSink;)Lorg/springframework/messaging/MessageHandler;
      11: astore_2
      12: aload_0
      13: getfield      #2                  // Field channel:Lorg/springframework/messaging/SubscribableChannel;
      16: aload_2
      17: invokeinterface #9,  2            // InterfaceMethod org/springframework/messaging/SubscribableChannel.subscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      22: pop
      23: aload_1
      24: aload_0
      25: aload_2
      26: invokedynamic #10,  0             // InvokeDynamic #2:dispose:(Lorg/springframework/integration/channel/MessageChannelReactiveUtils$SubscribableChannelPublisherAdapter;Lorg/springframework/messaging/MessageHandler;)Lreactor/core/Disposable;
      31: invokeinterface #11,  2           // InterfaceMethod reactor/core/publisher/FluxSink.onCancel:(Lreactor/core/Disposable;)Lreactor/core/publisher/FluxSink;
      36: pop
      37: return

  private void lambda$null$0(org.springframework.messaging.MessageHandler);
    Code:
       0: aload_0
       1: getfield      #2                  // Field channel:Lorg/springframework/messaging/SubscribableChannel;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod org/springframework/messaging/SubscribableChannel.unsubscribe:(Lorg/springframework/messaging/MessageHandler;)Z
      10: pop
      11: return
}
