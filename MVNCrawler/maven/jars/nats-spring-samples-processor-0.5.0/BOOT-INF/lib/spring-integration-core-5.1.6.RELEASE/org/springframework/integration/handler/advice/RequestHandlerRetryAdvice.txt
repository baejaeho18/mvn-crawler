Compiled from "RequestHandlerRetryAdvice.java"
public class org.springframework.integration.handler.advice.RequestHandlerRetryAdvice extends org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice implements org.springframework.retry.RetryListener {
  private volatile org.springframework.retry.support.RetryTemplate retryTemplate;

  private volatile org.springframework.retry.RecoveryCallback<java.lang.Object> recoveryCallback;

  private static final java.lang.ThreadLocal<org.springframework.messaging.Message<?>> messageHolder;

  private volatile org.springframework.integration.handler.advice.RetryStateGenerator retryStateGenerator;

  public org.springframework.integration.handler.advice.RequestHandlerRetryAdvice();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/retry/support/RetryTemplate
       8: dup
       9: invokespecial #3                  // Method org/springframework/retry/support/RetryTemplate."<init>":()V
      12: putfield      #4                  // Field retryTemplate:Lorg/springframework/retry/support/RetryTemplate;
      15: aload_0
      16: invokedynamic #5,  0              // InvokeDynamic #0:determineRetryState:()Lorg/springframework/integration/handler/advice/RetryStateGenerator;
      21: putfield      #6                  // Field retryStateGenerator:Lorg/springframework/integration/handler/advice/RetryStateGenerator;
      24: return

  public void setRetryTemplate(org.springframework.retry.support.RetryTemplate);
    Code:
       0: aload_1
       1: ldc           #7                  // String \'retryTemplate\' cannot be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #4                  // Field retryTemplate:Lorg/springframework/retry/support/RetryTemplate;
      11: return

  public void setRecoveryCallback(org.springframework.retry.RecoveryCallback<java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field recoveryCallback:Lorg/springframework/retry/RecoveryCallback;
       5: return

  public void setRetryStateGenerator(org.springframework.integration.handler.advice.RetryStateGenerator);
    Code:
       0: aload_1
       1: ldc           #10                 // String \'retryStateGenerator\' cannot be null
       3: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field retryStateGenerator:Lorg/springframework/integration/handler/advice/RetryStateGenerator;
      11: return

  protected void onInit();
    Code:
       0: aload_0
       1: invokespecial #11                 // Method org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice.onInit:()V
       4: aload_0
       5: getfield      #4                  // Field retryTemplate:Lorg/springframework/retry/support/RetryTemplate;
       8: aload_0
       9: invokevirtual #12                 // Method org/springframework/retry/support/RetryTemplate.registerListener:(Lorg/springframework/retry/RetryListener;)V
      12: return

  protected java.lang.Object doInvoke(org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback, java.lang.Object, org.springframework.messaging.Message<?>) throws java.lang.Exception;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_0
       4: getfield      #6                  // Field retryStateGenerator:Lorg/springframework/integration/handler/advice/RetryStateGenerator;
       7: aload_3
       8: invokeinterface #13,  2           // InterfaceMethod org/springframework/integration/handler/advice/RetryStateGenerator.determineRetryState:(Lorg/springframework/messaging/Message;)Lorg/springframework/retry/RetryState;
      13: astore        4
      15: getstatic     #14                 // Field messageHolder:Ljava/lang/ThreadLocal;
      18: aload_3
      19: invokevirtual #15                 // Method java/lang/ThreadLocal.set:(Ljava/lang/Object;)V
      22: aload_0
      23: getfield      #4                  // Field retryTemplate:Lorg/springframework/retry/support/RetryTemplate;
      26: aload_1
      27: invokedynamic #16,  0             // InvokeDynamic #1:doWithRetry:(Lorg/springframework/integration/handler/advice/AbstractRequestHandlerAdvice$ExecutionCallback;)Lorg/springframework/retry/RetryCallback;
      32: aload_0
      33: getfield      #9                  // Field recoveryCallback:Lorg/springframework/retry/RecoveryCallback;
      36: aload         4
      38: invokevirtual #17                 // Method org/springframework/retry/support/RetryTemplate.execute:(Lorg/springframework/retry/RetryCallback;Lorg/springframework/retry/RecoveryCallback;Lorg/springframework/retry/RetryState;)Ljava/lang/Object;
      41: astore        5
      43: getstatic     #14                 // Field messageHolder:Ljava/lang/ThreadLocal;
      46: invokevirtual #18                 // Method java/lang/ThreadLocal.remove:()V
      49: aload         5
      51: areturn
      52: astore        5
      54: aload         5
      56: invokevirtual #20                 // Method org/springframework/messaging/MessagingException.getFailedMessage:()Lorg/springframework/messaging/Message;
      59: ifnonnull     75
      62: new           #19                 // class org/springframework/messaging/MessagingException
      65: dup
      66: aload_3
      67: ldc           #21                 // String Failed to invoke handler
      69: aload         5
      71: invokespecial #22                 // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
      74: athrow
      75: aload         5
      77: athrow
      78: astore        5
      80: new           #19                 // class org/springframework/messaging/MessagingException
      83: dup
      84: aload_3
      85: ldc           #21                 // String Failed to invoke handler
      87: aload_0
      88: aload         5
      90: invokevirtual #24                 // Method unwrapExceptionIfNecessary:(Ljava/lang/Exception;)Ljava/lang/Exception;
      93: invokespecial #22                 // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
      96: athrow
      97: astore        6
      99: getstatic     #14                 // Field messageHolder:Ljava/lang/ThreadLocal;
     102: invokevirtual #18                 // Method java/lang/ThreadLocal.remove:()V
     105: aload         6
     107: athrow
    Exception table:
       from    to  target type
          22    43    52   Class org/springframework/messaging/MessagingException
          22    43    78   Class java/lang/Exception
          22    43    97   any
          52    99    97   any

  public <T, E extends java.lang.Throwable> boolean open(org.springframework.retry.RetryContext, org.springframework.retry.RetryCallback<T, E>);
    Code:
       0: aload_1
       1: ldc           #26                 // String message
       3: getstatic     #14                 // Field messageHolder:Ljava/lang/ThreadLocal;
       6: invokevirtual #27                 // Method java/lang/ThreadLocal.get:()Ljava/lang/Object;
       9: invokeinterface #28,  3           // InterfaceMethod org/springframework/retry/RetryContext.setAttribute:(Ljava/lang/String;Ljava/lang/Object;)V
      14: iconst_1
      15: ireturn

  public <T, E extends java.lang.Throwable> void close(org.springframework.retry.RetryContext, org.springframework.retry.RetryCallback<T, E>, java.lang.Throwable);
    Code:
       0: return

  public <T, E extends java.lang.Throwable> void onError(org.springframework.retry.RetryContext, org.springframework.retry.RetryCallback<T, E>, java.lang.Throwable);
    Code:
       0: return

  private static java.lang.Object lambda$doInvoke$1(org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback, org.springframework.retry.RetryContext) throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #29,  1           // InterfaceMethod org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice$ExecutionCallback.cloneAndExecute:()Ljava/lang/Object;
       6: areturn

  private static org.springframework.retry.RetryState lambda$new$0(org.springframework.messaging.Message);
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: new           #30                 // class java/lang/ThreadLocal
       3: dup
       4: invokespecial #31                 // Method java/lang/ThreadLocal."<init>":()V
       7: putstatic     #14                 // Field messageHolder:Ljava/lang/ThreadLocal;
      10: return
}
