Compiled from "IntegrationMessageHeaderAccessor.java"
public class org.springframework.integration.IntegrationMessageHeaderAccessor extends org.springframework.messaging.support.MessageHeaderAccessor {
  public static final java.lang.String CORRELATION_ID;

  public static final java.lang.String EXPIRATION_DATE;

  public static final java.lang.String PRIORITY;

  public static final java.lang.String SEQUENCE_NUMBER;

  public static final java.lang.String SEQUENCE_SIZE;

  public static final java.lang.String SEQUENCE_DETAILS;

  public static final java.lang.String ROUTING_SLIP;

  public static final java.lang.String DUPLICATE_MESSAGE;

  public static final java.lang.String CLOSEABLE_RESOURCE;

  public static final java.lang.String DELIVERY_ATTEMPT;

  public static final java.lang.String ACKNOWLEDGMENT_CALLBACK;

  public static final java.lang.String SOURCE_DATA;

  private java.util.Set<java.lang.String> readOnlyHeaders;

  public org.springframework.integration.IntegrationMessageHeaderAccessor(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/messaging/support/MessageHeaderAccessor."<init>":(Lorg/springframework/messaging/Message;)V
       5: aload_0
       6: new           #2                  // class java/util/HashSet
       9: dup
      10: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      13: putfield      #4                  // Field readOnlyHeaders:Ljava/util/Set;
      16: return

  public void setReadOnlyHeaders(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #5                  // String \'readOnlyHeaders\' must not be contain null items.
       3: invokestatic  #6                  // Method org/springframework/util/Assert.noNullElements:([Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokestatic  #7                  // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
      10: ifne          28
      13: aload_0
      14: new           #2                  // class java/util/HashSet
      17: dup
      18: aload_1
      19: invokestatic  #8                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      22: invokespecial #9                  // Method java/util/HashSet."<init>":(Ljava/util/Collection;)V
      25: putfield      #4                  // Field readOnlyHeaders:Ljava/util/Set;
      28: return

  public java.lang.Long getExpirationDate();
    Code:
       0: aload_0
       1: ldc           #11                 // String expirationDate
       3: ldc           #12                 // class java/lang/Long
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #12                 // class java/lang/Long
      11: areturn

  public java.lang.Object getCorrelationId();
    Code:
       0: aload_0
       1: ldc           #14                 // String correlationId
       3: invokevirtual #15                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public int getSequenceNumber();
    Code:
       0: aload_0
       1: ldc           #16                 // String sequenceNumber
       3: ldc           #17                 // class java/lang/Number
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #17                 // class java/lang/Number
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokevirtual #18                 // Method java/lang/Number.intValue:()I
      20: goto          24
      23: iconst_0
      24: ireturn

  public int getSequenceSize();
    Code:
       0: aload_0
       1: ldc           #19                 // String sequenceSize
       3: ldc           #17                 // class java/lang/Number
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #17                 // class java/lang/Number
      11: astore_1
      12: aload_1
      13: ifnull        23
      16: aload_1
      17: invokevirtual #18                 // Method java/lang/Number.intValue:()I
      20: goto          24
      23: iconst_0
      24: ireturn

  public java.lang.Integer getPriority();
    Code:
       0: aload_0
       1: ldc           #20                 // String priority
       3: ldc           #17                 // class java/lang/Number
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #17                 // class java/lang/Number
      11: astore_1
      12: aload_1
      13: ifnull        26
      16: aload_1
      17: invokevirtual #18                 // Method java/lang/Number.intValue:()I
      20: invokestatic  #21                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      23: goto          27
      26: aconst_null
      27: areturn

  public java.io.Closeable getCloseableResource();
    Code:
       0: aload_0
       1: ldc           #22                 // String closeableResource
       3: ldc           #23                 // class java/io/Closeable
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #23                 // class java/io/Closeable
      11: areturn

  public org.springframework.integration.acks.AcknowledgmentCallback getAcknowledgmentCallback();
    Code:
       0: aload_0
       1: ldc           #24                 // String acknowledgmentCallback
       3: ldc           #25                 // class org/springframework/integration/acks/AcknowledgmentCallback
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #25                 // class org/springframework/integration/acks/AcknowledgmentCallback
      11: areturn

  public java.util.concurrent.atomic.AtomicInteger getDeliveryAttempt();
    Code:
       0: aload_0
       1: ldc           #26                 // String deliveryAttempt
       3: ldc           #27                 // class java/util/concurrent/atomic/AtomicInteger
       5: invokevirtual #13                 // Method getHeader:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
       8: checkcast     #27                 // class java/util/concurrent/atomic/AtomicInteger
      11: areturn

  public <T> T getSourceData();
    Code:
       0: aload_0
       1: ldc           #28                 // String sourceData
       3: invokevirtual #15                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       6: areturn

  public <T> T getHeader(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #15                 // Method getHeader:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_3
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_2
      13: aload_3
      14: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      20: ifne          76
      23: new           #31                 // class java/lang/IllegalArgumentException
      26: dup
      27: new           #32                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #34                 // String Incorrect type specified for header \'
      36: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_1
      40: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: ldc           #36                 // String \'. Expected [
      45: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_2
      49: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      52: ldc           #38                 // String ] but actual type is [
      54: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_3
      58: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      61: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: ldc           #39                 // String ]
      66: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      72: invokespecial #41                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      75: athrow
      76: aload_3
      77: areturn

  protected void verifyType(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        231
       4: aload_2
       5: ifnull        231
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #42                 // Method org/springframework/messaging/support/MessageHeaderAccessor.verifyType:(Ljava/lang/String;Ljava/lang/Object;)V
      14: ldc           #11                 // String expirationDate
      16: aload_1
      17: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          72
      23: aload_2
      24: instanceof    #44                 // class java/util/Date
      27: ifne          37
      30: aload_2
      31: instanceof    #12                 // class java/lang/Long
      34: ifeq          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: new           #32                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #45                 // String The \'
      51: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: aload_1
      55: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      58: ldc           #46                 // String \' header value must be a Date or Long.
      60: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokestatic  #47                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      69: goto          231
      72: ldc           #16                 // String sequenceNumber
      74: aload_1
      75: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      78: ifne          99
      81: ldc           #19                 // String sequenceSize
      83: aload_1
      84: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      87: ifne          99
      90: ldc           #20                 // String priority
      92: aload_1
      93: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      96: ifeq          138
      99: ldc           #17                 // class java/lang/Number
     101: aload_2
     102: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     105: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     108: new           #32                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #45                 // String The \'
     117: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload_1
     121: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     124: ldc           #48                 // String \' header value must be a Number.
     126: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     132: invokestatic  #47                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     135: goto          231
     138: ldc           #49                 // String routingSlip
     140: aload_1
     141: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     144: ifeq          186
     147: ldc           #50                 // class java/util/Map
     149: aload_2
     150: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     153: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     156: new           #32                 // class java/lang/StringBuilder
     159: dup
     160: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     163: ldc           #45                 // String The \'
     165: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: aload_1
     169: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     172: ldc           #51                 // String \' header value must be a Map.
     174: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     177: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     180: invokestatic  #47                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     183: goto          231
     186: ldc           #52                 // String duplicateMessage
     188: aload_1
     189: invokevirtual #43                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     192: ifeq          231
     195: ldc           #53                 // class java/lang/Boolean
     197: aload_2
     198: invokevirtual #29                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     201: invokevirtual #30                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     204: new           #32                 // class java/lang/StringBuilder
     207: dup
     208: invokespecial #33                 // Method java/lang/StringBuilder."<init>":()V
     211: ldc           #45                 // String The \'
     213: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     216: aload_1
     217: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     220: ldc           #54                 // String \' header value must be an Boolean.
     222: invokevirtual #35                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     225: invokevirtual #40                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     228: invokestatic  #47                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
     231: return

  public boolean isReadOnly(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #55                 // Method org/springframework/messaging/support/MessageHeaderAccessor.isReadOnly:(Ljava/lang/String;)Z
       5: ifne          21
       8: aload_0
       9: getfield      #4                  // Field readOnlyHeaders:Ljava/util/Set;
      12: aload_1
      13: invokeinterface #56,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  public java.util.Map<java.lang.String, java.lang.Object> toMap();
    Code:
       0: aload_0
       1: getfield      #4                  // Field readOnlyHeaders:Ljava/util/Set;
       4: invokestatic  #57                 // Method org/springframework/util/ObjectUtils.isEmpty:(Ljava/lang/Object;)Z
       7: ifeq          15
      10: aload_0
      11: invokespecial #58                 // Method org/springframework/messaging/support/MessageHeaderAccessor.toMap:()Ljava/util/Map;
      14: areturn
      15: aload_0
      16: invokespecial #58                 // Method org/springframework/messaging/support/MessageHeaderAccessor.toMap:()Ljava/util/Map;
      19: astore_1
      20: aload_0
      21: getfield      #4                  // Field readOnlyHeaders:Ljava/util/Set;
      24: invokeinterface #59,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      29: astore_2
      30: aload_2
      31: invokeinterface #60,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          60
      39: aload_2
      40: invokeinterface #61,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      45: checkcast     #62                 // class java/lang/String
      48: astore_3
      49: aload_1
      50: aload_3
      51: invokeinterface #63,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      56: pop
      57: goto          30
      60: aload_1
      61: areturn
}
