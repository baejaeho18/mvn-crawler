Compiled from "DefaultMessageHandlerMetrics.java"
public class org.springframework.integration.support.management.DefaultMessageHandlerMetrics extends org.springframework.integration.support.management.AbstractMessageHandlerMetrics {
  private static final int DEFAULT_MOVING_AVERAGE_WINDOW;

  protected final java.util.concurrent.atomic.AtomicLong activeCount;

  protected final java.util.concurrent.atomic.AtomicLong handleCount;

  protected final java.util.concurrent.atomic.AtomicLong errorCount;

  protected final org.springframework.integration.support.management.ExponentialMovingAverage duration;

  public org.springframework.integration.support.management.DefaultMessageHandlerMetrics();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/String;)V
       5: return

  public org.springframework.integration.support.management.DefaultMessageHandlerMetrics(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/springframework/integration/support/management/ExponentialMovingAverage
       5: dup
       6: bipush        10
       8: ldc2_w        #4                  // double 1000000.0d
      11: invokespecial #6                  // Method org/springframework/integration/support/management/ExponentialMovingAverage."<init>":(ID)V
      14: invokespecial #7                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;)V
      17: return

  public org.springframework.integration.support.management.DefaultMessageHandlerMetrics(java.lang.String, org.springframework.integration.support.management.ExponentialMovingAverage);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/integration/support/management/AbstractMessageHandlerMetrics."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #9                  // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      13: putfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      24: putfield      #12                 // Field handleCount:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: new           #9                  // class java/util/concurrent/atomic/AtomicLong
      31: dup
      32: invokespecial #10                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      35: putfield      #13                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
      38: aload_0
      39: aload_2
      40: putfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      43: return

  public org.springframework.integration.support.management.MetricsContext beforeHandle();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: invokevirtual #15                 // Method isFullStatsEnabled:()Z
       6: ifeq          13
       9: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      12: lstore_1
      13: aload_0
      14: getfield      #12                 // Field handleCount:Ljava/util/concurrent/atomic/AtomicLong;
      17: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      20: pop2
      21: aload_0
      22: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
      25: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      28: pop2
      29: new           #18                 // class org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext
      32: dup
      33: lload_1
      34: invokespecial #19                 // Method org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext."<init>":(J)V
      37: areturn

  public void afterHandle(org.springframework.integration.support.management.MetricsContext, boolean);
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #20                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
       7: pop2
       8: aload_0
       9: invokevirtual #15                 // Method isFullStatsEnabled:()Z
      12: ifeq          41
      15: iload_2
      16: ifeq          41
      19: aload_0
      20: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      23: invokestatic  #16                 // Method java/lang/System.nanoTime:()J
      26: aload_1
      27: checkcast     #18                 // class org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext
      30: getfield      #21                 // Field org/springframework/integration/support/management/DefaultMessageHandlerMetrics$DefaultHandlerMetricsContext.start:J
      33: lsub
      34: l2d
      35: invokevirtual #22                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.append:(D)V
      38: goto          53
      41: iload_2
      42: ifne          53
      45: aload_0
      46: getfield      #13                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
      49: invokevirtual #17                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      52: pop2
      53: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #23                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.reset:()V
       7: aload_0
       8: getfield      #13                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
      11: lconst_0
      12: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      15: aload_0
      16: getfield      #12                 // Field handleCount:Ljava/util/concurrent/atomic/AtomicLong;
      19: lconst_0
      20: invokevirtual #24                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      23: return

  public long getHandleCountLong();
    Code:
       0: aload_0
       1: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       9: ifeq          40
      12: aload_0
      13: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #27                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #28                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #29                 // String Getting Handle Count:
      25: invokevirtual #30                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_0
      29: invokevirtual #31                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      35: invokeinterface #33,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      40: aload_0
      41: getfield      #12                 // Field handleCount:Ljava/util/concurrent/atomic/AtomicLong;
      44: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      47: lreturn

  public int getHandleCount();
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method getHandleCountLong:()J
       4: l2i
       5: ireturn

  public int getErrorCount();
    Code:
       0: aload_0
       1: getfield      #13                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getErrorCountLong();
    Code:
       0: aload_0
       1: getfield      #13                 // Field errorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public double getMeanDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #36                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMean:()D
       7: dreturn

  public double getMinDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #37                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMin:()D
       7: dreturn

  public double getMaxDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #38                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMax:()D
       7: dreturn

  public double getStandardDeviationDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #39                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getStandardDeviation:()D
       7: dreturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getActiveCountLong();
    Code:
       0: aload_0
       1: getfield      #11                 // Field activeCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #34                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public org.springframework.integration.support.management.Statistics getDuration();
    Code:
       0: aload_0
       1: getfield      #14                 // Field duration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #40                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getStatistics:()Lorg/springframework/integration/support/management/Statistics;
       7: areturn
}
