Compiled from "RouterFactoryBean.java"
public class org.springframework.integration.config.RouterFactoryBean extends org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean {
  private java.util.Map<java.lang.String, java.lang.String> channelMappings;

  private org.springframework.messaging.MessageChannel defaultOutputChannel;

  private java.lang.String defaultOutputChannelName;

  private java.lang.Boolean resolutionRequired;

  private java.lang.Boolean applySequence;

  private java.lang.Boolean ignoreSendFailures;

  public org.springframework.integration.config.RouterFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean."<init>":()V
       4: return

  public void setDefaultOutputChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field defaultOutputChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public void setDefaultOutputChannelName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field defaultOutputChannelName:Ljava/lang/String;
       5: return

  public void setResolutionRequired(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field resolutionRequired:Ljava/lang/Boolean;
       5: return

  public void setApplySequence(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #5                  // Field applySequence:Ljava/lang/Boolean;
       5: return

  public void setIgnoreSendFailures(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field ignoreSendFailures:Ljava/lang/Boolean;
       5: return

  public void setChannelMappings(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field channelMappings:Ljava/util/Map;
       5: return

  protected org.springframework.messaging.MessageHandler createMethodInvokingHandler(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #8                  // String target object must not be null
       3: invokestatic  #9                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #10                 // class org/springframework/integration/router/AbstractMessageRouter
       9: invokestatic  #11                 // Method org/springframework/integration/context/IntegrationObjectSupport.extractTypeIfPossible:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #10                 // class org/springframework/integration/router/AbstractMessageRouter
      15: astore_3
      16: aload_3
      17: ifnonnull     63
      20: aload_1
      21: instanceof    #12                 // class org/springframework/messaging/MessageHandler
      24: ifeq          47
      27: aload_0
      28: invokevirtual #13                 // Method noRouterAttributesProvided:()Z
      31: ifeq          47
      34: aload_0
      35: aload_2
      36: invokevirtual #14                 // Method methodIsHandleMessageOrEmpty:(Ljava/lang/String;)Z
      39: ifeq          47
      42: aload_1
      43: checkcast     #12                 // class org/springframework/messaging/MessageHandler
      46: areturn
      47: aload_0
      48: aload_1
      49: aload_2
      50: invokevirtual #15                 // Method createMethodInvokingRouter:(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/router/AbstractMappingMessageRouter;
      53: astore_3
      54: aload_0
      55: aload_3
      56: invokevirtual #16                 // Method configureRouter:(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/router/AbstractMessageRouter;
      59: pop
      60: goto          98
      63: aload_2
      64: invokestatic  #17                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      67: ifne          74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ldc           #18                 // String target method should not be provided when the target object is an implementation of AbstractMessageRouter
      77: invokestatic  #19                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      80: aload_0
      81: aload_3
      82: invokevirtual #16                 // Method configureRouter:(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/router/AbstractMessageRouter;
      85: pop
      86: aload_1
      87: instanceof    #12                 // class org/springframework/messaging/MessageHandler
      90: ifeq          98
      93: aload_1
      94: checkcast     #12                 // class org/springframework/messaging/MessageHandler
      97: areturn
      98: aload_3
      99: areturn

  protected org.springframework.messaging.MessageHandler createExpressionEvaluatingHandler(org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: new           #20                 // class org/springframework/integration/router/ExpressionEvaluatingRouter
       4: dup
       5: aload_1
       6: invokespecial #21                 // Method org/springframework/integration/router/ExpressionEvaluatingRouter."<init>":(Lorg/springframework/expression/Expression;)V
       9: invokevirtual #16                 // Method configureRouter:(Lorg/springframework/integration/router/AbstractMessageRouter;)Lorg/springframework/integration/router/AbstractMessageRouter;
      12: areturn

  protected org.springframework.integration.router.AbstractMappingMessageRouter createMethodInvokingRouter(java.lang.Object, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #17                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          19
       7: new           #22                 // class org/springframework/integration/router/MethodInvokingRouter
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #23                 // Method org/springframework/integration/router/MethodInvokingRouter."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      16: goto          27
      19: new           #22                 // class org/springframework/integration/router/MethodInvokingRouter
      22: dup
      23: aload_1
      24: invokespecial #24                 // Method org/springframework/integration/router/MethodInvokingRouter."<init>":(Ljava/lang/Object;)V
      27: areturn

  protected org.springframework.integration.router.AbstractMessageRouter configureRouter(org.springframework.integration.router.AbstractMessageRouter);
    Code:
       0: aload_0
       1: getfield      #2                  // Field defaultOutputChannel:Lorg/springframework/messaging/MessageChannel;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #2                  // Field defaultOutputChannel:Lorg/springframework/messaging/MessageChannel;
      12: invokevirtual #25                 // Method org/springframework/integration/router/AbstractMessageRouter.setDefaultOutputChannel:(Lorg/springframework/messaging/MessageChannel;)V
      15: aload_0
      16: getfield      #3                  // Field defaultOutputChannelName:Ljava/lang/String;
      19: ifnull        30
      22: aload_1
      23: aload_0
      24: getfield      #3                  // Field defaultOutputChannelName:Ljava/lang/String;
      27: invokevirtual #26                 // Method org/springframework/integration/router/AbstractMessageRouter.setDefaultOutputChannelName:(Ljava/lang/String;)V
      30: aload_0
      31: invokevirtual #27                 // Method getSendTimeout:()Ljava/lang/Long;
      34: ifnull        48
      37: aload_1
      38: aload_0
      39: invokevirtual #27                 // Method getSendTimeout:()Ljava/lang/Long;
      42: invokevirtual #28                 // Method java/lang/Long.longValue:()J
      45: invokevirtual #29                 // Method org/springframework/integration/router/AbstractMessageRouter.setSendTimeout:(J)V
      48: aload_0
      49: getfield      #5                  // Field applySequence:Ljava/lang/Boolean;
      52: ifnull        66
      55: aload_1
      56: aload_0
      57: getfield      #5                  // Field applySequence:Ljava/lang/Boolean;
      60: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
      63: invokevirtual #31                 // Method org/springframework/integration/router/AbstractMessageRouter.setApplySequence:(Z)V
      66: aload_0
      67: getfield      #6                  // Field ignoreSendFailures:Ljava/lang/Boolean;
      70: ifnull        84
      73: aload_1
      74: aload_0
      75: getfield      #6                  // Field ignoreSendFailures:Ljava/lang/Boolean;
      78: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
      81: invokevirtual #32                 // Method org/springframework/integration/router/AbstractMessageRouter.setIgnoreSendFailures:(Z)V
      84: aload_1
      85: instanceof    #33                 // class org/springframework/integration/router/AbstractMappingMessageRouter
      88: ifeq          99
      91: aload_0
      92: aload_1
      93: checkcast     #33                 // class org/springframework/integration/router/AbstractMappingMessageRouter
      96: invokevirtual #34                 // Method configureMappingRouter:(Lorg/springframework/integration/router/AbstractMappingMessageRouter;)V
      99: aload_1
     100: areturn

  protected void configureMappingRouter(org.springframework.integration.router.AbstractMappingMessageRouter);
    Code:
       0: aload_0
       1: getfield      #7                  // Field channelMappings:Ljava/util/Map;
       4: ifnull        15
       7: aload_1
       8: aload_0
       9: getfield      #7                  // Field channelMappings:Ljava/util/Map;
      12: invokevirtual #35                 // Method org/springframework/integration/router/AbstractMappingMessageRouter.setChannelMappings:(Ljava/util/Map;)V
      15: aload_0
      16: getfield      #4                  // Field resolutionRequired:Ljava/lang/Boolean;
      19: ifnull        33
      22: aload_1
      23: aload_0
      24: getfield      #4                  // Field resolutionRequired:Ljava/lang/Boolean;
      27: invokevirtual #30                 // Method java/lang/Boolean.booleanValue:()Z
      30: invokevirtual #36                 // Method org/springframework/integration/router/AbstractMappingMessageRouter.setResolutionRequired:(Z)V
      33: return

  protected boolean canBeUsedDirect(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method noRouterAttributesProvided:()Z
       4: ireturn

  protected boolean noRouterAttributesProvided();
    Code:
       0: aload_0
       1: getfield      #7                  // Field channelMappings:Ljava/util/Map;
       4: ifnonnull     46
       7: aload_0
       8: getfield      #2                  // Field defaultOutputChannel:Lorg/springframework/messaging/MessageChannel;
      11: ifnonnull     46
      14: aload_0
      15: invokevirtual #27                 // Method getSendTimeout:()Ljava/lang/Long;
      18: ifnonnull     46
      21: aload_0
      22: getfield      #4                  // Field resolutionRequired:Ljava/lang/Boolean;
      25: ifnonnull     46
      28: aload_0
      29: getfield      #5                  // Field applySequence:Ljava/lang/Boolean;
      32: ifnonnull     46
      35: aload_0
      36: getfield      #6                  // Field ignoreSendFailures:Ljava/lang/Boolean;
      39: ifnonnull     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn

  protected java.lang.Class<? extends org.springframework.messaging.MessageHandler> getPreCreationHandlerType();
    Code:
       0: ldc           #10                 // class org/springframework/integration/router/AbstractMessageRouter
       2: areturn
}
