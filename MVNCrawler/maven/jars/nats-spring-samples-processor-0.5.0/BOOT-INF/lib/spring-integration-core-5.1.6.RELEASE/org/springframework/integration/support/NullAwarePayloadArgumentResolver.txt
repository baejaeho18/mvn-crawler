Compiled from "NullAwarePayloadArgumentResolver.java"
public class org.springframework.integration.support.NullAwarePayloadArgumentResolver extends org.springframework.messaging.handler.annotation.support.PayloadArgumentResolver {
  public org.springframework.integration.support.NullAwarePayloadArgumentResolver(org.springframework.messaging.converter.MessageConverter);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: iconst_0
       4: invokespecial #1                  // Method org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver."<init>":(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;Z)V
       7: return

  public org.springframework.integration.support.NullAwarePayloadArgumentResolver(org.springframework.messaging.converter.MessageConverter, org.springframework.validation.Validator);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokespecial #1                  // Method org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver."<init>":(Lorg/springframework/messaging/converter/MessageConverter;Lorg/springframework/validation/Validator;Z)V
       7: return

  protected boolean isEmptyPayload(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method org/springframework/messaging/handler/annotation/support/PayloadArgumentResolver.isEmptyPayload:(Ljava/lang/Object;)Z
       5: ifne          23
       8: ldc           #3                  // String KafkaNull
      10: aload_1
      11: invokevirtual #4                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      14: invokevirtual #5                  // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      17: invokevirtual #6                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      20: ifeq          27
      23: iconst_1
      24: goto          28
      27: iconst_0
      28: ireturn
}
