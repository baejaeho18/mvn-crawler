Compiled from "MicrometerMetricsCaptor.java"
public abstract class org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$AbstractMeter<M extends io.micrometer.core.instrument.Meter> implements org.springframework.integration.support.management.metrics.MeterFacade {
  protected final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  protected org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$AbstractMeter(io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       9: return

  protected abstract M getMeter();

  public <T extends org.springframework.integration.support.management.metrics.MeterFacade> T remove();
    Code:
       0: aload_0
       1: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       4: aload_0
       5: invokevirtual #3                  // Method getMeter:()Lio/micrometer/core/instrument/Meter;
       8: invokevirtual #4                  // Method io/micrometer/core/instrument/MeterRegistry.remove:(Lio/micrometer/core/instrument/Meter;)Lio/micrometer/core/instrument/Meter;
      11: ifnull        16
      14: aload_0
      15: areturn
      16: aconst_null
      17: areturn
}
