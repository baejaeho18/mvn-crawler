Compiled from "SimpleMetadataStore.java"
public class org.springframework.integration.metadata.SimpleMetadataStore implements org.springframework.integration.metadata.ConcurrentMetadataStore {
  private final java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String> metadata;

  public org.springframework.integration.metadata.SimpleMetadataStore();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/concurrent/ConcurrentHashMap
       4: dup
       5: invokespecial #2                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/concurrent/ConcurrentMap;)V
      11: return

  public org.springframework.integration.metadata.SimpleMetadataStore(java.util.concurrent.ConcurrentMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String \'metadata\' must not be null.
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
      15: return

  public void put(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #8,  3            // InterfaceMethod java/util/concurrent/ConcurrentMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: return

  public java.lang.String get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/lang/String
      13: areturn

  public java.lang.String remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: invokeinterface #11,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class java/lang/String
      13: areturn

  public java.lang.String putIfAbsent(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #10                 // class java/lang/String
      14: areturn

  public boolean replace(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #7                  // Field metadata:Ljava/util/concurrent/ConcurrentMap;
       4: aload_1
       5: aload_2
       6: aload_3
       7: invokeinterface #13,  4           // InterfaceMethod java/util/concurrent/ConcurrentMap.replace:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z
      12: ireturn
}
