Compiled from "BridgeFromAnnotationPostProcessor.java"
public class org.springframework.integration.config.annotation.BridgeFromAnnotationPostProcessor extends org.springframework.integration.config.annotation.AbstractMethodAnnotationPostProcessor<org.springframework.integration.annotation.BridgeFrom> {
  public org.springframework.integration.config.annotation.BridgeFromAnnotationPostProcessor(org.springframework.beans.factory.config.ConfigurableListableBeanFactory);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/integration/config/annotation/AbstractMethodAnnotationPostProcessor."<init>":(Lorg/springframework/beans/factory/config/ConfigurableListableBeanFactory;)V
       5: return

  public boolean shouldCreateEndpoint(java.lang.reflect.Method, java.util.List<java.lang.annotation.Annotation>);
    Code:
       0: aload_1
       1: ldc           #2                  // class org/springframework/context/annotation/Bean
       3: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokestatic  #4                  // Method org/springframework/core/annotation/AnnotatedElementUtils.isAnnotated:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Z
       9: istore_3
      10: iload_3
      11: ldc           #5                  // String \'@BridgeFrom\' is eligible only for \'@Bean\' methods
      13: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      16: ldc           #7                  // class org/springframework/messaging/MessageChannel
      18: aload_1
      19: invokevirtual #8                  // Method java/lang/reflect/Method.getReturnType:()Ljava/lang/Class;
      22: invokevirtual #9                  // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      25: istore        4
      27: iload         4
      29: ldc           #10                 // String \'@BridgeFrom\' is eligible only for \'MessageChannel\' \'@Bean\' methods
      31: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      34: aload_2
      35: ldc           #11                 // String value
      37: ldc           #12                 // class java/lang/String
      39: invokestatic  #13                 // Method org/springframework/integration/util/MessagingAnnotationUtils.resolveAttribute:(Ljava/util/List;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      42: checkcast     #12                 // class java/lang/String
      45: astore        5
      47: aload         5
      49: invokestatic  #14                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      52: ldc           #15                 // String \'@BridgeFrom.value()\' (inputChannelName) must not be empty
      54: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      57: aload_1
      58: ldc           #16                 // class org/springframework/integration/annotation/BridgeTo
      60: invokevirtual #3                  // Method java/lang/Class.getName:()Ljava/lang/String;
      63: invokestatic  #4                  // Method org/springframework/core/annotation/AnnotatedElementUtils.isAnnotated:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/String;)Z
      66: istore        6
      68: iload         6
      70: ifne          77
      73: iconst_1
      74: goto          78
      77: iconst_0
      78: ldc           #17                 // String \'@BridgeFrom\' and \'@BridgeTo\' are mutually exclusive \'MessageChannel\' \'@Bean\' method annotations
      80: invokestatic  #6                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      83: iconst_1
      84: ireturn

  protected java.lang.String getInputChannelAttribute();
    Code:
       0: ldc           #11                 // String value
       2: areturn

  protected org.springframework.messaging.MessageHandler createHandler(java.lang.Object, java.lang.reflect.Method, java.util.List<java.lang.annotation.Annotation>);
    Code:
       0: new           #19                 // class org/springframework/integration/handler/BridgeHandler
       3: dup
       4: invokespecial #20                 // Method org/springframework/integration/handler/BridgeHandler."<init>":()V
       7: astore        4
       9: aload_0
      10: aload_2
      11: invokevirtual #21                 // Method resolveTargetBeanName:(Ljava/lang/reflect/Method;)Ljava/lang/String;
      14: astore        5
      16: aload         4
      18: aload         5
      20: invokevirtual #22                 // Method org/springframework/integration/handler/BridgeHandler.setOutputChannelName:(Ljava/lang/String;)V
      23: aload         4
      25: areturn

  protected java.lang.Object resolveTargetBeanFromMethodWithBeanAnnotation(java.lang.reflect.Method);
    Code:
       0: aconst_null
       1: areturn
}
