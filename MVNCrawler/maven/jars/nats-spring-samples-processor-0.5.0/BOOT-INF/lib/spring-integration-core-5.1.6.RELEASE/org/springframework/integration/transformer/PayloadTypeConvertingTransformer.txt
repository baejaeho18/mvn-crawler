Compiled from "PayloadTypeConvertingTransformer.java"
public class org.springframework.integration.transformer.PayloadTypeConvertingTransformer<T, U> extends org.springframework.integration.transformer.AbstractPayloadTransformer<T, U> {
  private org.springframework.core.convert.converter.Converter<T, U> converter;

  public org.springframework.integration.transformer.PayloadTypeConvertingTransformer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/transformer/AbstractPayloadTransformer."<init>":()V
       4: return

  public void setConverter(org.springframework.core.convert.converter.Converter<T, U>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method doSetConverter:(Lorg/springframework/core/convert/converter/Converter;)V
       5: return

  protected final void doSetConverter(org.springframework.core.convert.converter.Converter<T, U>);
    Code:
       0: aload_1
       1: ldc           #3                  // String \'converter\' must not be null
       3: invokestatic  #4                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #5                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
      11: return

  protected org.springframework.core.convert.converter.Converter<T, U> getConverter();
    Code:
       0: aload_0
       1: getfield      #5                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
       4: areturn

  protected void onInit();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method org/springframework/integration/transformer/AbstractPayloadTransformer.onInit:()V
       4: aload_0
       5: getfield      #5                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
       8: aload_0
       9: invokedynamic #7,  0              // InvokeDynamic #0:get:(Lorg/springframework/integration/transformer/PayloadTypeConvertingTransformer;)Ljava/util/function/Supplier;
      14: invokestatic  #8                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/util/function/Supplier;)V
      17: return

  protected U transformPayload(T);
    Code:
       0: aload_0
       1: getfield      #5                  // Field converter:Lorg/springframework/core/convert/converter/Converter;
       4: aload_1
       5: invokeinterface #9,  2            // InterfaceMethod org/springframework/core/convert/converter/Converter.convert:(Ljava/lang/Object;)Ljava/lang/Object;
      10: areturn

  private java.lang.String lambda$onInit$0();
    Code:
       0: new           #10                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #11                 // Method java/lang/StringBuilder."<init>":()V
       7: aload_0
       8: invokevirtual #12                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: invokevirtual #13                 // Method java/lang/Class.getName:()Ljava/lang/String;
      14: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      17: ldc           #15                 // String  requires a Converter<Object, Object>
      19: invokevirtual #14                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      22: invokevirtual #16                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      25: areturn
}
