Compiled from "DynamicPeriodicTrigger.java"
public class org.springframework.integration.util.DynamicPeriodicTrigger implements org.springframework.scheduling.Trigger {
  private volatile java.time.Duration initialDuration;

  private volatile java.time.Duration duration;

  private volatile java.util.concurrent.TimeUnit timeUnit;

  private volatile boolean fixedRate;

  public org.springframework.integration.util.DynamicPeriodicTrigger(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       5: invokespecial #2                  // Method "<init>":(Ljava/time/Duration;)V
       8: return

  public org.springframework.integration.util.DynamicPeriodicTrigger(long, java.util.concurrent.TimeUnit);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       9: putfield      #4                  // Field initialDuration:Ljava/time/Duration;
      12: aload_0
      13: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: putfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      19: aload_0
      20: iconst_0
      21: putfield      #7                  // Field fixedRate:Z
      24: lload_1
      25: lconst_0
      26: lcmp
      27: iflt          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ldc           #8                  // String period must not be negative
      37: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      40: aload_3
      41: ldc           #10                 // String timeUnit must not be null
      43: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      46: aload_0
      47: aload_3
      48: putfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      51: aload_0
      52: aload_0
      53: getfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      56: lload_1
      57: invokevirtual #12                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      60: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      63: putfield      #13                 // Field duration:Ljava/time/Duration;
      66: return

  public org.springframework.integration.util.DynamicPeriodicTrigger(java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       9: putfield      #4                  // Field initialDuration:Ljava/time/Duration;
      12: aload_0
      13: getstatic     #5                  // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      16: putfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      19: aload_0
      20: iconst_0
      21: putfield      #7                  // Field fixedRate:Z
      24: aload_1
      25: ldc           #14                 // String duration must not be null
      27: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_1
      31: invokevirtual #15                 // Method java/time/Duration.isNegative:()Z
      34: ifne          41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ldc           #16                 // String duration must not be negative
      44: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      47: aload_0
      48: aload_1
      49: putfield      #13                 // Field duration:Ljava/time/Duration;
      52: return

  public void setInitialDelay(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #17                 // String initialDelay must not be negative
      13: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      16: aload_0
      17: aload_0
      18: getfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      21: lload_1
      22: invokevirtual #12                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      25: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      28: putfield      #4                  // Field initialDuration:Ljava/time/Duration;
      31: return

  public void setInitialDuration(java.time.Duration);
    Code:
       0: aload_1
       1: ldc           #18                 // String initialDuration must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokevirtual #15                 // Method java/time/Duration.isNegative:()Z
      10: ifne          17
      13: iconst_1
      14: goto          18
      17: iconst_0
      18: ldc           #19                 // String initialDuration must not be negative
      20: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      23: aload_0
      24: aload_1
      25: putfield      #4                  // Field initialDuration:Ljava/time/Duration;
      28: return

  public java.time.Duration getDuration();
    Code:
       0: aload_0
       1: getfield      #13                 // Field duration:Ljava/time/Duration;
       4: areturn

  public void setDuration(java.time.Duration);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field duration:Ljava/time/Duration;
       5: return

  public java.time.Duration getInitialDuration();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
       4: areturn

  public void setFixedRate(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #7                  // Field fixedRate:Z
       5: return

  public long getPeriod();
    Code:
       0: aload_0
       1: getfield      #13                 // Field duration:Ljava/time/Duration;
       4: invokevirtual #20                 // Method java/time/Duration.toMillis:()J
       7: lreturn

  public void setPeriod(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: iflt          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #8                  // String period must not be negative
      13: invokestatic  #9                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      16: aload_0
      17: aload_0
      18: getfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      21: lload_1
      22: invokevirtual #12                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      25: invokestatic  #1                  // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      28: putfield      #13                 // Field duration:Ljava/time/Duration;
      31: return

  public java.util.concurrent.TimeUnit getTimeUnit();
    Code:
       0: aload_0
       1: getfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
       4: areturn

  public void setTimeUnit(java.util.concurrent.TimeUnit);
    Code:
       0: aload_1
       1: ldc           #10                 // String timeUnit must not be null
       3: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #6                  // Field timeUnit:Ljava/util/concurrent/TimeUnit;
      11: return

  public long getInitialDelay();
    Code:
       0: aload_0
       1: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
       4: invokevirtual #20                 // Method java/time/Duration.toMillis:()J
       7: lreturn

  public boolean isFixedRate();
    Code:
       0: aload_0
       1: getfield      #7                  // Field fixedRate:Z
       4: ireturn

  public java.util.Date nextExecutionTime(org.springframework.scheduling.TriggerContext);
    Code:
       0: aload_1
       1: invokeinterface #21,  1           // InterfaceMethod org/springframework/scheduling/TriggerContext.lastScheduledExecutionTime:()Ljava/util/Date;
       6: astore_2
       7: aload_2
       8: ifnonnull     30
      11: new           #22                 // class java/util/Date
      14: dup
      15: invokestatic  #23                 // Method java/lang/System.currentTimeMillis:()J
      18: aload_0
      19: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      22: invokevirtual #20                 // Method java/time/Duration.toMillis:()J
      25: ladd
      26: invokespecial #24                 // Method java/util/Date."<init>":(J)V
      29: areturn
      30: aload_0
      31: getfield      #7                  // Field fixedRate:Z
      34: ifeq          57
      37: new           #22                 // class java/util/Date
      40: dup
      41: aload_2
      42: invokevirtual #25                 // Method java/util/Date.getTime:()J
      45: aload_0
      46: getfield      #13                 // Field duration:Ljava/time/Duration;
      49: invokevirtual #20                 // Method java/time/Duration.toMillis:()J
      52: ladd
      53: invokespecial #24                 // Method java/util/Date."<init>":(J)V
      56: areturn
      57: new           #22                 // class java/util/Date
      60: dup
      61: aload_1
      62: invokeinterface #26,  1           // InterfaceMethod org/springframework/scheduling/TriggerContext.lastCompletionTime:()Ljava/util/Date;
      67: invokevirtual #25                 // Method java/util/Date.getTime:()J
      70: aload_0
      71: getfield      #13                 // Field duration:Ljava/time/Duration;
      74: invokevirtual #20                 // Method java/time/Duration.toMillis:()J
      77: ladd
      78: invokespecial #24                 // Method java/util/Date."<init>":(J)V
      81: areturn

  public int hashCode();
    Code:
       0: bipush        31
       2: istore_1
       3: iconst_1
       4: istore_2
       5: bipush        31
       7: iload_2
       8: imul
       9: aload_0
      10: getfield      #13                 // Field duration:Ljava/time/Duration;
      13: ifnonnull     20
      16: iconst_0
      17: goto          27
      20: aload_0
      21: getfield      #13                 // Field duration:Ljava/time/Duration;
      24: invokevirtual #27                 // Method java/time/Duration.hashCode:()I
      27: iadd
      28: istore_2
      29: bipush        31
      31: iload_2
      32: imul
      33: aload_0
      34: getfield      #7                  // Field fixedRate:Z
      37: ifeq          46
      40: sipush        1231
      43: goto          49
      46: sipush        1237
      49: iadd
      50: istore_2
      51: bipush        31
      53: iload_2
      54: imul
      55: aload_0
      56: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      59: ifnonnull     66
      62: iconst_0
      63: goto          73
      66: aload_0
      67: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      70: invokevirtual #27                 // Method java/time/Duration.hashCode:()I
      73: iadd
      74: istore_2
      75: iload_2
      76: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnonnull     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      17: aload_1
      18: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      21: if_acmpeq     26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #29                 // class org/springframework/integration/util/DynamicPeriodicTrigger
      30: astore_2
      31: aload_0
      32: getfield      #13                 // Field duration:Ljava/time/Duration;
      35: ifnonnull     47
      38: aload_2
      39: getfield      #13                 // Field duration:Ljava/time/Duration;
      42: ifnull        63
      45: iconst_0
      46: ireturn
      47: aload_0
      48: getfield      #13                 // Field duration:Ljava/time/Duration;
      51: aload_2
      52: getfield      #13                 // Field duration:Ljava/time/Duration;
      55: invokevirtual #30                 // Method java/time/Duration.equals:(Ljava/lang/Object;)Z
      58: ifne          63
      61: iconst_0
      62: ireturn
      63: aload_0
      64: getfield      #7                  // Field fixedRate:Z
      67: aload_2
      68: getfield      #7                  // Field fixedRate:Z
      71: if_icmpeq     76
      74: iconst_0
      75: ireturn
      76: aload_0
      77: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      80: ifnonnull     92
      83: aload_2
      84: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      87: ifnull        108
      90: iconst_0
      91: ireturn
      92: aload_0
      93: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
      96: aload_2
      97: getfield      #4                  // Field initialDuration:Ljava/time/Duration;
     100: invokevirtual #30                 // Method java/time/Duration.equals:(Ljava/lang/Object;)Z
     103: ifne          108
     106: iconst_0
     107: ireturn
     108: iconst_1
     109: ireturn
}
