Compiled from "LockRegistryLeaderInitiator.java"
public class org.springframework.integration.support.leader.LockRegistryLeaderInitiator implements org.springframework.context.SmartLifecycle,org.springframework.beans.factory.DisposableBean,org.springframework.context.ApplicationEventPublisherAware {
  public static final long DEFAULT_HEART_BEAT_TIME;

  public static final long DEFAULT_BUSY_WAIT_TIME;

  private static final org.apache.commons.logging.Log logger;

  private final java.lang.Object lifecycleMonitor;

  private final org.springframework.integration.support.locks.LockRegistry locks;

  private final org.springframework.integration.leader.Candidate candidate;

  private final org.springframework.integration.leader.Context nullContext;

  private java.util.concurrent.ExecutorService executorService;

  private boolean executorServiceExplicitlySet;

  private long heartBeatMillis;

  private long busyWaitMillis;

  private boolean publishFailedEvents;

  private org.springframework.integration.support.leader.LockRegistryLeaderInitiator$LeaderSelector leaderSelector;

  private org.springframework.context.ApplicationEventPublisher applicationEventPublisher;

  private org.springframework.integration.leader.event.LeaderEventPublisher leaderEventPublisher;

  private boolean autoStartup;

  private int phase;

  private volatile boolean running;

  private volatile java.util.concurrent.Future<?> future;

  public org.springframework.integration.support.leader.LockRegistryLeaderInitiator(org.springframework.integration.support.locks.LockRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: new           #10                 // class org/springframework/integration/leader/DefaultCandidate
       5: dup
       6: invokespecial #11                 // Method org/springframework/integration/leader/DefaultCandidate."<init>":()V
       9: invokespecial #12                 // Method "<init>":(Lorg/springframework/integration/support/locks/LockRegistry;Lorg/springframework/integration/leader/Candidate;)V
      12: return

  public org.springframework.integration.support.leader.LockRegistryLeaderInitiator(org.springframework.integration.support.locks.LockRegistry, org.springframework.integration.leader.Candidate);
    Code:
       0: aload_0
       1: invokespecial #13                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #14                 // class java/lang/Object
       8: dup
       9: invokespecial #13                 // Method java/lang/Object."<init>":()V
      12: putfield      #15                 // Field lifecycleMonitor:Ljava/lang/Object;
      15: aload_0
      16: new           #16                 // class org/springframework/integration/support/leader/LockRegistryLeaderInitiator$1
      19: dup
      20: aload_0
      21: invokespecial #17                 // Method org/springframework/integration/support/leader/LockRegistryLeaderInitiator$1."<init>":(Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator;)V
      24: putfield      #18                 // Field nullContext:Lorg/springframework/integration/leader/Context;
      27: aload_0
      28: new           #19                 // class org/springframework/scheduling/concurrent/CustomizableThreadFactory
      31: dup
      32: ldc           #20                 // String lock-leadership-
      34: invokespecial #21                 // Method org/springframework/scheduling/concurrent/CustomizableThreadFactory."<init>":(Ljava/lang/String;)V
      37: invokestatic  #22                 // Method java/util/concurrent/Executors.newSingleThreadExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ExecutorService;
      40: putfield      #3                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      43: aload_0
      44: ldc2_w        #24                 // long 500l
      47: putfield      #6                  // Field heartBeatMillis:J
      50: aload_0
      51: ldc2_w        #26                 // long 50l
      54: putfield      #5                  // Field busyWaitMillis:J
      57: aload_0
      58: iconst_0
      59: putfield      #28                 // Field publishFailedEvents:Z
      62: aload_0
      63: iconst_1
      64: putfield      #29                 // Field autoStartup:Z
      67: aload_0
      68: ldc           #31                 // int 2147482647
      70: putfield      #32                 // Field phase:I
      73: aload_1
      74: ldc           #33                 // String \'locks\' must not be null
      76: invokestatic  #34                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      79: aload_2
      80: ldc           #35                 // String \'candidate\' must not be null
      82: invokestatic  #34                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      85: aload_0
      86: aload_1
      87: putfield      #8                  // Field locks:Lorg/springframework/integration/support/locks/LockRegistry;
      90: aload_0
      91: aload_2
      92: putfield      #9                  // Field candidate:Lorg/springframework/integration/leader/Candidate;
      95: return

  public void setExecutorService(java.util.concurrent.ExecutorService);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       5: aload_0
       6: iconst_1
       7: putfield      #36                 // Field executorServiceExplicitlySet:Z
      10: return

  public void setHeartBeatMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #6                  // Field heartBeatMillis:J
       5: return

  public void setBusyWaitMillis(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field busyWaitMillis:J
       5: return

  public void setLeaderEventPublisher(org.springframework.integration.leader.event.LeaderEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field leaderEventPublisher:Lorg/springframework/integration/leader/event/LeaderEventPublisher;
       5: return

  public void setApplicationEventPublisher(org.springframework.context.ApplicationEventPublisher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
       5: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lifecycleMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #38                 // Field running:Z
      11: aload_1
      12: monitorexit
      13: ireturn
      14: astore_2
      15: aload_1
      16: monitorexit
      17: aload_2
      18: athrow
    Exception table:
       from    to  target type
           7    13    14   any
          14    17    14   any

  public int getPhase();
    Code:
       0: aload_0
       1: getfield      #32                 // Field phase:I
       4: ireturn

  public void setPhase(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #32                 // Field phase:I
       5: return

  public boolean isAutoStartup();
    Code:
       0: aload_0
       1: getfield      #29                 // Field autoStartup:Z
       4: ireturn

  public void setAutoStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #29                 // Field autoStartup:Z
       5: return

  public org.springframework.integration.leader.Context getContext();
    Code:
       0: aload_0
       1: getfield      #1                  // Field leaderSelector:Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;
       4: ifnonnull     12
       7: aload_0
       8: getfield      #18                 // Field nullContext:Lorg/springframework/integration/leader/Context;
      11: areturn
      12: aload_0
      13: getfield      #1                  // Field leaderSelector:Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;
      16: invokestatic  #39                 // Method org/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector.access$100:(Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;)Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LockContext;
      19: areturn

  public boolean isPublishFailedEvents();
    Code:
       0: aload_0
       1: getfield      #28                 // Field publishFailedEvents:Z
       4: ireturn

  public void setPublishFailedEvents(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #28                 // Field publishFailedEvents:Z
       5: return

  public void start();
    Code:
       0: aload_0
       1: getfield      #2                  // Field leaderEventPublisher:Lorg/springframework/integration/leader/event/LeaderEventPublisher;
       4: ifnonnull     29
       7: aload_0
       8: getfield      #37                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      11: ifnull        29
      14: aload_0
      15: new           #40                 // class org/springframework/integration/leader/event/DefaultLeaderEventPublisher
      18: dup
      19: aload_0
      20: getfield      #37                 // Field applicationEventPublisher:Lorg/springframework/context/ApplicationEventPublisher;
      23: invokespecial #41                 // Method org/springframework/integration/leader/event/DefaultLeaderEventPublisher."<init>":(Lorg/springframework/context/ApplicationEventPublisher;)V
      26: putfield      #2                  // Field leaderEventPublisher:Lorg/springframework/integration/leader/event/LeaderEventPublisher;
      29: aload_0
      30: getfield      #15                 // Field lifecycleMonitor:Ljava/lang/Object;
      33: dup
      34: astore_1
      35: monitorenter
      36: aload_0
      37: getfield      #38                 // Field running:Z
      40: ifne          91
      43: aload_0
      44: new           #42                 // class org/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector
      47: dup
      48: aload_0
      49: aload_0
      50: invokespecial #43                 // Method buildLeaderPath:()Ljava/lang/String;
      53: invokespecial #44                 // Method org/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector."<init>":(Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator;Ljava/lang/String;)V
      56: putfield      #1                  // Field leaderSelector:Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;
      59: aload_0
      60: iconst_1
      61: putfield      #38                 // Field running:Z
      64: aload_0
      65: aload_0
      66: getfield      #3                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      69: aload_0
      70: getfield      #1                  // Field leaderSelector:Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;
      73: invokeinterface #45,  2           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;
      78: putfield      #4                  // Field future:Ljava/util/concurrent/Future;
      81: getstatic     #7                  // Field logger:Lorg/apache/commons/logging/Log;
      84: ldc           #46                 // String Started LeaderInitiator
      86: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      91: aload_1
      92: monitorexit
      93: goto          101
      96: astore_2
      97: aload_1
      98: monitorexit
      99: aload_2
     100: athrow
     101: return
    Exception table:
       from    to  target type
          36    93    96   any
          96    99    96   any

  public void destroy();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method stop:()V
       4: aload_0
       5: getfield      #36                 // Field executorServiceExplicitlySet:Z
       8: ifne          20
      11: aload_0
      12: getfield      #3                  // Field executorService:Ljava/util/concurrent/ExecutorService;
      15: invokeinterface #49,  1           // InterfaceMethod java/util/concurrent/ExecutorService.shutdown:()V
      20: return

  public void stop(java.lang.Runnable);
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method stop:()V
       4: aload_1
       5: invokeinterface #50,  1           // InterfaceMethod java/lang/Runnable.run:()V
      10: return

  public void stop();
    Code:
       0: aload_0
       1: getfield      #15                 // Field lifecycleMonitor:Ljava/lang/Object;
       4: dup
       5: astore_1
       6: monitorenter
       7: aload_0
       8: getfield      #38                 // Field running:Z
      11: ifeq          72
      14: aload_0
      15: iconst_0
      16: putfield      #38                 // Field running:Z
      19: aload_0
      20: getfield      #4                  // Field future:Ljava/util/concurrent/Future;
      23: ifnull        37
      26: aload_0
      27: getfield      #4                  // Field future:Ljava/util/concurrent/Future;
      30: iconst_1
      31: invokeinterface #51,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      36: pop
      37: aload_0
      38: aconst_null
      39: putfield      #4                  // Field future:Ljava/util/concurrent/Future;
      42: getstatic     #7                  // Field logger:Lorg/apache/commons/logging/Log;
      45: new           #52                 // class java/lang/StringBuilder
      48: dup
      49: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
      52: ldc           #54                 // String Stopped LeaderInitiator for
      54: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: aload_0
      58: invokevirtual #56                 // Method getContext:()Lorg/springframework/integration/leader/Context;
      61: invokevirtual #57                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      64: invokevirtual #58                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: aload_1
      73: monitorexit
      74: goto          82
      77: astore_2
      78: aload_1
      79: monitorexit
      80: aload_2
      81: athrow
      82: return
    Exception table:
       from    to  target type
           7    74    77   any
          77    80    77   any

  private java.lang.String buildLeaderPath();
    Code:
       0: aload_0
       1: getfield      #9                  // Field candidate:Lorg/springframework/integration/leader/Candidate;
       4: invokeinterface #59,  1           // InterfaceMethod org/springframework/integration/leader/Candidate.getRole:()Ljava/lang/String;
       9: areturn

  static org.springframework.integration.leader.Candidate access$000(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #9                  // Field candidate:Lorg/springframework/integration/leader/Candidate;
       4: areturn

  static org.springframework.integration.support.locks.LockRegistry access$200(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #8                  // Field locks:Lorg/springframework/integration/support/locks/LockRegistry;
       4: areturn

  static org.apache.commons.logging.Log access$300();
    Code:
       0: getstatic     #7                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static long access$400(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #6                  // Field heartBeatMillis:J
       4: lreturn

  static long access$500(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #5                  // Field busyWaitMillis:J
       4: lreturn

  static java.util.concurrent.Future access$602(org.springframework.integration.support.leader.LockRegistryLeaderInitiator, java.util.concurrent.Future);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #4                  // Field future:Ljava/util/concurrent/Future;
       6: areturn

  static java.util.concurrent.ExecutorService access$700(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #3                  // Field executorService:Ljava/util/concurrent/ExecutorService;
       4: areturn

  static org.springframework.integration.leader.event.LeaderEventPublisher access$800(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #2                  // Field leaderEventPublisher:Lorg/springframework/integration/leader/event/LeaderEventPublisher;
       4: areturn

  static org.springframework.integration.support.leader.LockRegistryLeaderInitiator$LeaderSelector access$900(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #1                  // Field leaderSelector:Lorg/springframework/integration/support/leader/LockRegistryLeaderInitiator$LeaderSelector;
       4: areturn

  static java.util.concurrent.Future access$600(org.springframework.integration.support.leader.LockRegistryLeaderInitiator);
    Code:
       0: aload_0
       1: getfield      #4                  // Field future:Ljava/util/concurrent/Future;
       4: areturn

  static {};
    Code:
       0: ldc           #23                 // class org/springframework/integration/support/leader/LockRegistryLeaderInitiator
       2: invokestatic  #60                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #7                  // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
