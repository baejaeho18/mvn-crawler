Compiled from "WireTap.java"
public class org.springframework.integration.channel.interceptor.WireTap implements org.springframework.messaging.support.ChannelInterceptor,org.springframework.context.Lifecycle,org.springframework.integration.channel.interceptor.VetoCapableInterceptor,org.springframework.beans.factory.BeanFactoryAware {
  private static final org.apache.commons.logging.Log logger;

  private volatile org.springframework.messaging.MessageChannel channel;

  private volatile java.lang.String channelName;

  private volatile long timeout;

  private final org.springframework.integration.core.MessageSelector selector;

  private volatile boolean running;

  private org.springframework.beans.factory.BeanFactory beanFactory;

  public org.springframework.integration.channel.interceptor.WireTap(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Lorg/springframework/messaging/MessageChannel;Lorg/springframework/integration/core/MessageSelector;)V
       6: return

  public org.springframework.integration.channel.interceptor.WireTap(org.springframework.messaging.MessageChannel, org.springframework.integration.core.MessageSelector);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #3                  // Field timeout:J
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field running:Z
      14: aload_1
      15: ldc           #5                  // String channel must not be null
      17: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #7                  // Field channel:Lorg/springframework/messaging/MessageChannel;
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field selector:Lorg/springframework/integration/core/MessageSelector;
      30: return

  public org.springframework.integration.channel.interceptor.WireTap(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #9                  // Method "<init>":(Ljava/lang/String;Lorg/springframework/integration/core/MessageSelector;)V
       6: return

  public org.springframework.integration.channel.interceptor.WireTap(java.lang.String, org.springframework.integration.core.MessageSelector);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: lconst_0
       6: putfield      #3                  // Field timeout:J
       9: aload_0
      10: iconst_1
      11: putfield      #4                  // Field running:Z
      14: aload_1
      15: ldc           #10                 // String channelName must not be empty
      17: invokestatic  #11                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      20: aload_0
      21: aload_1
      22: putfield      #12                 // Field channelName:Ljava/lang/String;
      25: aload_0
      26: aload_2
      27: putfield      #8                  // Field selector:Lorg/springframework/integration/core/MessageSelector;
      30: return

  public void setTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #3                  // Field timeout:J
       5: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
       4: ifnonnull     12
       7: aload_0
       8: aload_1
       9: putfield      #13                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      12: return

  public boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #4                  // Field running:Z
       4: ireturn

  public void start();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field running:Z
       5: return

  public void stop();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #4                  // Field running:Z
       5: return

  public org.springframework.messaging.Message<?> preSend(org.springframework.messaging.Message<?>, org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method getChannel:()Lorg/springframework/messaging/MessageChannel;
       4: astore_3
       5: aload_3
       6: aload_2
       7: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      10: ifeq          58
      13: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      16: invokeinterface #17,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      21: ifeq          56
      24: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
      27: new           #18                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #20                 // String WireTap is refusing to intercept its own channel \'
      36: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_3
      40: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: ldc           #23                 // String \'
      45: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      51: invokeinterface #25,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      56: aload_1
      57: areturn
      58: aload_0
      59: getfield      #4                  // Field running:Z
      62: ifeq          165
      65: aload_0
      66: getfield      #8                  // Field selector:Lorg/springframework/integration/core/MessageSelector;
      69: ifnull        85
      72: aload_0
      73: getfield      #8                  // Field selector:Lorg/springframework/integration/core/MessageSelector;
      76: aload_1
      77: invokeinterface #26,  2           // InterfaceMethod org/springframework/integration/core/MessageSelector.accept:(Lorg/springframework/messaging/Message;)Z
      82: ifeq          165
      85: aload_0
      86: getfield      #3                  // Field timeout:J
      89: lconst_0
      90: lcmp
      91: iflt          108
      94: aload_3
      95: aload_1
      96: aload_0
      97: getfield      #3                  // Field timeout:J
     100: invokeinterface #27,  4           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;J)Z
     105: goto          115
     108: aload_3
     109: aload_1
     110: invokeinterface #28,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     115: istore        4
     117: iload         4
     119: ifne          165
     122: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     125: invokeinterface #29,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     130: ifeq          165
     133: getstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
     136: new           #18                 // class java/lang/StringBuilder
     139: dup
     140: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     143: ldc           #30                 // String failed to send message to WireTap channel \'
     145: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: aload_3
     149: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     152: ldc           #23                 // String \'
     154: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokeinterface #31,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     165: aload_1
     166: areturn

  public boolean shouldIntercept(java.lang.String, org.springframework.integration.channel.ChannelInterceptorAware);
    Code:
       0: aload_0
       1: invokespecial #14                 // Method getChannel:()Lorg/springframework/messaging/MessageChannel;
       4: aload_2
       5: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  private org.springframework.messaging.MessageChannel getChannel();
    Code:
       0: aload_0
       1: getfield      #12                 // Field channelName:Ljava/lang/String;
       4: ifnull        55
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #12                 // Field channelName:Ljava/lang/String;
      15: ifnull        45
      18: aload_0
      19: new           #32                 // class org/springframework/integration/support/channel/BeanFactoryChannelResolver
      22: dup
      23: aload_0
      24: getfield      #13                 // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      27: invokespecial #33                 // Method org/springframework/integration/support/channel/BeanFactoryChannelResolver."<init>":(Lorg/springframework/beans/factory/BeanFactory;)V
      30: aload_0
      31: getfield      #12                 // Field channelName:Ljava/lang/String;
      34: invokevirtual #34                 // Method org/springframework/integration/support/channel/BeanFactoryChannelResolver.resolveDestination:(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
      37: putfield      #7                  // Field channel:Lorg/springframework/messaging/MessageChannel;
      40: aload_0
      41: aconst_null
      42: putfield      #12                 // Field channelName:Ljava/lang/String;
      45: aload_1
      46: monitorexit
      47: goto          55
      50: astore_2
      51: aload_1
      52: monitorexit
      53: aload_2
      54: athrow
      55: aload_0
      56: getfield      #7                  // Field channel:Lorg/springframework/messaging/MessageChannel;
      59: areturn
    Exception table:
       from    to  target type
          11    47    50   any
          50    53    50   any

  static {};
    Code:
       0: ldc           #35                 // class org/springframework/integration/channel/interceptor/WireTap
       2: invokestatic  #36                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #16                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
