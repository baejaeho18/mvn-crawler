Compiled from "MicrometerMetricsCaptor.java"
public class org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroTimerBuilder implements org.springframework.integration.support.management.metrics.MetricsCaptor$TimerBuilder {
  protected final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  private final io.micrometer.core.instrument.Timer$Builder builder;

  org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroTimerBuilder(io.micrometer.core.instrument.MeterRegistry, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: invokestatic  #3                  // InterfaceMethod io/micrometer/core/instrument/Timer.builder:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
      14: putfield      #4                  // Field builder:Lio/micrometer/core/instrument/Timer$Builder;
      17: return

  public org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroTimerBuilder tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Timer$Builder;
       4: aload_1
       5: aload_2
       6: invokevirtual #5                  // Method io/micrometer/core/instrument/Timer$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
       9: pop
      10: aload_0
      11: areturn

  public org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroTimerBuilder description(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Timer$Builder;
       4: aload_1
       5: invokevirtual #6                  // Method io/micrometer/core/instrument/Timer$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Timer$Builder;
       8: pop
       9: aload_0
      10: areturn

  public org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroTimer build();
    Code:
       0: new           #7                  // class org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimer
       3: dup
       4: aload_0
       5: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Timer$Builder;
       8: aload_0
       9: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      12: invokevirtual #8                  // Method io/micrometer/core/instrument/Timer$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Timer;
      15: aload_0
      16: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      19: invokespecial #9                  // Method org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimer."<init>":(Lio/micrometer/core/instrument/Timer;Lio/micrometer/core/instrument/MeterRegistry;)V
      22: areturn

  public org.springframework.integration.support.management.metrics.TimerFacade build();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method build:()Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimer;
       4: areturn

  public org.springframework.integration.support.management.metrics.MetricsCaptor$TimerBuilder description(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #11                 // Method description:(Ljava/lang/String;)Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimerBuilder;
       5: areturn

  public org.springframework.integration.support.management.metrics.MetricsCaptor$TimerBuilder tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #12                 // Method tag:(Ljava/lang/String;Ljava/lang/String;)Lorg/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroTimerBuilder;
       6: areturn
}
