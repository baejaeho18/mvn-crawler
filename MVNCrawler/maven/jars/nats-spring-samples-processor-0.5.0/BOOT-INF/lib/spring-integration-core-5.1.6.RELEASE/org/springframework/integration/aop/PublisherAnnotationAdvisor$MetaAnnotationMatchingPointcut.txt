Compiled from "PublisherAnnotationAdvisor.java"
final class org.springframework.integration.aop.PublisherAnnotationAdvisor$MetaAnnotationMatchingPointcut implements org.springframework.aop.Pointcut {
  private final org.springframework.aop.ClassFilter classFilter;

  private final org.springframework.aop.MethodMatcher methodMatcher;

  org.springframework.integration.aop.PublisherAnnotationAdvisor$MetaAnnotationMatchingPointcut(java.lang.Class<? extends java.lang.annotation.Annotation>, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/aop/support/annotation/AnnotationClassFilter
       8: dup
       9: aload_1
      10: iload_2
      11: invokespecial #3                  // Method org/springframework/aop/support/annotation/AnnotationClassFilter."<init>":(Ljava/lang/Class;Z)V
      14: putfield      #4                  // Field classFilter:Lorg/springframework/aop/ClassFilter;
      17: aload_0
      18: getstatic     #5                  // Field org/springframework/aop/MethodMatcher.TRUE:Lorg/springframework/aop/MethodMatcher;
      21: putfield      #6                  // Field methodMatcher:Lorg/springframework/aop/MethodMatcher;
      24: return

  org.springframework.integration.aop.PublisherAnnotationAdvisor$MetaAnnotationMatchingPointcut(java.lang.Class<? extends java.lang.annotation.Annotation>, java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ifnonnull     12
       8: aload_2
       9: ifnull        16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ldc           #7                  // String Either Class annotation type or Method annotation type needs to be specified (or both)
      19: invokestatic  #8                  // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      22: aload_1
      23: ifnull        41
      26: aload_0
      27: new           #2                  // class org/springframework/aop/support/annotation/AnnotationClassFilter
      30: dup
      31: aload_1
      32: invokespecial #9                  // Method org/springframework/aop/support/annotation/AnnotationClassFilter."<init>":(Ljava/lang/Class;)V
      35: putfield      #4                  // Field classFilter:Lorg/springframework/aop/ClassFilter;
      38: goto          48
      41: aload_0
      42: getstatic     #10                 // Field org/springframework/aop/ClassFilter.TRUE:Lorg/springframework/aop/ClassFilter;
      45: putfield      #4                  // Field classFilter:Lorg/springframework/aop/ClassFilter;
      48: aload_2
      49: ifnull        67
      52: aload_0
      53: new           #11                 // class org/springframework/integration/aop/PublisherAnnotationAdvisor$MetaAnnotationMethodMatcher
      56: dup
      57: aload_2
      58: invokespecial #12                 // Method org/springframework/integration/aop/PublisherAnnotationAdvisor$MetaAnnotationMethodMatcher."<init>":(Ljava/lang/Class;)V
      61: putfield      #6                  // Field methodMatcher:Lorg/springframework/aop/MethodMatcher;
      64: goto          74
      67: aload_0
      68: getstatic     #5                  // Field org/springframework/aop/MethodMatcher.TRUE:Lorg/springframework/aop/MethodMatcher;
      71: putfield      #6                  // Field methodMatcher:Lorg/springframework/aop/MethodMatcher;
      74: return

  public org.springframework.aop.ClassFilter getClassFilter();
    Code:
       0: aload_0
       1: getfield      #4                  // Field classFilter:Lorg/springframework/aop/ClassFilter;
       4: areturn

  public org.springframework.aop.MethodMatcher getMethodMatcher();
    Code:
       0: aload_0
       1: getfield      #6                  // Field methodMatcher:Lorg/springframework/aop/MethodMatcher;
       4: areturn
}
