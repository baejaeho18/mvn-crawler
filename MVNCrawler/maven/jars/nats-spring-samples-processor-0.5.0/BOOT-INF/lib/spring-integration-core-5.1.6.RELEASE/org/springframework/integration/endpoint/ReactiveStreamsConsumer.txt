Compiled from "ReactiveStreamsConsumer.java"
public class org.springframework.integration.endpoint.ReactiveStreamsConsumer extends org.springframework.integration.endpoint.AbstractEndpoint implements org.springframework.integration.endpoint.IntegrationConsumer {
  private final org.springframework.messaging.MessageChannel inputChannel;

  private final org.springframework.messaging.MessageHandler handler;

  private final org.reactivestreams.Publisher<org.springframework.messaging.Message<java.lang.Object>> publisher;

  private final org.reactivestreams.Subscriber<org.springframework.messaging.Message<?>> subscriber;

  private final org.springframework.context.Lifecycle lifecycleDelegate;

  private org.springframework.util.ErrorHandler errorHandler;

  private volatile org.reactivestreams.Subscription subscription;

  public org.springframework.integration.endpoint.ReactiveStreamsConsumer(org.springframework.messaging.MessageChannel, org.springframework.messaging.MessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: instanceof    #4                  // class org/reactivestreams/Subscriber
       6: ifeq          16
       9: aload_2
      10: checkcast     #4                  // class org/reactivestreams/Subscriber
      13: goto          24
      16: new           #5                  // class org/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber
      19: dup
      20: aload_2
      21: invokespecial #6                  // Method org/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber."<init>":(Lorg/springframework/messaging/MessageHandler;)V
      24: invokespecial #7                  // Method "<init>":(Lorg/springframework/messaging/MessageChannel;Lorg/reactivestreams/Subscriber;)V
      27: return

  public org.springframework.integration.endpoint.ReactiveStreamsConsumer(org.springframework.messaging.MessageChannel, org.reactivestreams.Subscriber<org.springframework.messaging.Message<?>>);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method org/springframework/integration/endpoint/AbstractEndpoint."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #9                  // Field inputChannel:Lorg/springframework/messaging/MessageChannel;
       9: aload_1
      10: ldc           #10                 // String \'inputChannel\' must not be null
      12: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_2
      16: ldc           #12                 // String \'subscriber\' must not be null
      18: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_1
      22: instanceof    #13                 // class org/springframework/integration/channel/NullChannel
      25: ifeq          51
      28: aload_0
      29: getfield      #14                 // Field logger:Lorg/apache/commons/logging/Log;
      32: invokeinterface #15,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      37: ifeq          51
      40: aload_0
      41: getfield      #14                 // Field logger:Lorg/apache/commons/logging/Log;
      44: ldc           #16                 // String The consuming from the NullChannel does not have any effects: it doesn\'t forward messages sent to it. A NullChannel is the end of the flow.
      46: invokeinterface #17,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      51: aload_0
      52: aload_1
      53: invokestatic  #18                 // Method org/springframework/integration/channel/MessageChannelReactiveUtils.toPublisher:(Lorg/springframework/messaging/MessageChannel;)Lorg/reactivestreams/Publisher;
      56: putfield      #19                 // Field publisher:Lorg/reactivestreams/Publisher;
      59: aload_0
      60: aload_2
      61: putfield      #3                  // Field subscriber:Lorg/reactivestreams/Subscriber;
      64: aload_0
      65: aload_2
      66: instanceof    #20                 // class org/springframework/context/Lifecycle
      69: ifeq          79
      72: aload_2
      73: checkcast     #20                 // class org/springframework/context/Lifecycle
      76: goto          80
      79: aconst_null
      80: putfield      #21                 // Field lifecycleDelegate:Lorg/springframework/context/Lifecycle;
      83: aload_2
      84: instanceof    #5                  // class org/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber
      87: ifeq          104
      90: aload_0
      91: aload_2
      92: checkcast     #5                  // class org/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber
      95: invokestatic  #22                 // Method org/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber.access$000:(Lorg/springframework/integration/endpoint/ReactiveStreamsConsumer$MessageHandlerSubscriber;)Lorg/springframework/messaging/MessageHandler;
      98: putfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
     101: goto          140
     104: aload_2
     105: instanceof    #24                 // class org/springframework/messaging/MessageHandler
     108: ifeq          122
     111: aload_0
     112: aload_2
     113: checkcast     #24                 // class org/springframework/messaging/MessageHandler
     116: putfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
     119: goto          140
     122: aload_0
     123: aload_0
     124: getfield      #3                  // Field subscriber:Lorg/reactivestreams/Subscriber;
     127: dup
     128: invokevirtual #25                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     131: pop
     132: invokedynamic #26,  0             // InvokeDynamic #0:handleMessage:(Lorg/reactivestreams/Subscriber;)Lorg/springframework/messaging/MessageHandler;
     137: putfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
     140: return

  public void setErrorHandler(org.springframework.util.ErrorHandler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field errorHandler:Lorg/springframework/util/ErrorHandler;
       5: return

  public org.springframework.messaging.MessageChannel getInputChannel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field inputChannel:Lorg/springframework/messaging/MessageChannel;
       4: areturn

  public org.springframework.messaging.MessageChannel getOutputChannel();
    Code:
       0: aload_0
       1: getfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
       4: instanceof    #27                 // class org/springframework/integration/core/MessageProducer
       7: ifeq          23
      10: aload_0
      11: getfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
      14: checkcast     #27                 // class org/springframework/integration/core/MessageProducer
      17: invokeinterface #28,  1           // InterfaceMethod org/springframework/integration/core/MessageProducer.getOutputChannel:()Lorg/springframework/messaging/MessageChannel;
      22: areturn
      23: aload_0
      24: getfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
      27: instanceof    #29                 // class org/springframework/integration/router/MessageRouter
      30: ifeq          46
      33: aload_0
      34: getfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
      37: checkcast     #29                 // class org/springframework/integration/router/MessageRouter
      40: invokeinterface #30,  1           // InterfaceMethod org/springframework/integration/router/MessageRouter.getDefaultOutputChannel:()Lorg/springframework/messaging/MessageChannel;
      45: areturn
      46: aconst_null
      47: areturn

  public org.springframework.messaging.MessageHandler getHandler();
    Code:
       0: aload_0
       1: getfield      #23                 // Field handler:Lorg/springframework/messaging/MessageHandler;
       4: areturn

  protected void onInit();
    Code:
       0: aload_0
       1: invokespecial #31                 // Method org/springframework/integration/endpoint/AbstractEndpoint.onInit:()V
       4: aload_0
       5: getfield      #1                  // Field errorHandler:Lorg/springframework/util/ErrorHandler;
       8: ifnonnull     42
      11: aload_0
      12: invokevirtual #32                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      15: ldc           #33                 // String BeanFactory is required
      17: invokestatic  #11                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      20: aload_0
      21: new           #34                 // class org/springframework/integration/channel/MessagePublishingErrorHandler
      24: dup
      25: new           #35                 // class org/springframework/integration/support/channel/BeanFactoryChannelResolver
      28: dup
      29: aload_0
      30: invokevirtual #32                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      33: invokespecial #36                 // Method org/springframework/integration/support/channel/BeanFactoryChannelResolver."<init>":(Lorg/springframework/beans/factory/BeanFactory;)V
      36: invokespecial #37                 // Method org/springframework/integration/channel/MessagePublishingErrorHandler."<init>":(Lorg/springframework/messaging/core/DestinationResolver;)V
      39: putfield      #1                  // Field errorHandler:Lorg/springframework/util/ErrorHandler;
      42: return

  protected void doStart();
    Code:
       0: aload_0
       1: getfield      #21                 // Field lifecycleDelegate:Lorg/springframework/context/Lifecycle;
       4: ifnull        16
       7: aload_0
       8: getfield      #21                 // Field lifecycleDelegate:Lorg/springframework/context/Lifecycle;
      11: invokeinterface #38,  1           // InterfaceMethod org/springframework/context/Lifecycle.start:()V
      16: aload_0
      17: getfield      #19                 // Field publisher:Lorg/reactivestreams/Publisher;
      20: new           #39                 // class org/springframework/integration/endpoint/ReactiveStreamsConsumer$1
      23: dup
      24: aload_0
      25: invokespecial #40                 // Method org/springframework/integration/endpoint/ReactiveStreamsConsumer$1."<init>":(Lorg/springframework/integration/endpoint/ReactiveStreamsConsumer;)V
      28: invokeinterface #41,  2           // InterfaceMethod org/reactivestreams/Publisher.subscribe:(Lorg/reactivestreams/Subscriber;)V
      33: return

  protected void doStop();
    Code:
       0: aload_0
       1: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
       4: ifnull        16
       7: aload_0
       8: getfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
      11: invokeinterface #42,  1           // InterfaceMethod org/reactivestreams/Subscription.cancel:()V
      16: aload_0
      17: getfield      #21                 // Field lifecycleDelegate:Lorg/springframework/context/Lifecycle;
      20: ifnull        32
      23: aload_0
      24: getfield      #21                 // Field lifecycleDelegate:Lorg/springframework/context/Lifecycle;
      27: invokeinterface #43,  1           // InterfaceMethod org/springframework/context/Lifecycle.stop:()V
      32: return

  static org.reactivestreams.Subscriber access$100(org.springframework.integration.endpoint.ReactiveStreamsConsumer);
    Code:
       0: aload_0
       1: getfield      #3                  // Field subscriber:Lorg/reactivestreams/Subscriber;
       4: areturn

  static org.reactivestreams.Subscription access$202(org.springframework.integration.endpoint.ReactiveStreamsConsumer, org.reactivestreams.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: dup_x1
       3: putfield      #2                  // Field subscription:Lorg/reactivestreams/Subscription;
       6: areturn

  static org.springframework.util.ErrorHandler access$300(org.springframework.integration.endpoint.ReactiveStreamsConsumer);
    Code:
       0: aload_0
       1: getfield      #1                  // Field errorHandler:Lorg/springframework/util/ErrorHandler;
       4: areturn
}
