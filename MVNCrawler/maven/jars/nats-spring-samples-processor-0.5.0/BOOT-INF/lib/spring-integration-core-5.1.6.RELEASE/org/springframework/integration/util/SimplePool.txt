Compiled from "SimplePool.java"
public class org.springframework.integration.util.SimplePool<T> implements org.springframework.integration.util.Pool<T> {
  protected final org.apache.commons.logging.Log logger;

  private final java.util.concurrent.Semaphore permits;

  private final java.util.concurrent.atomic.AtomicInteger poolSize;

  private final java.util.concurrent.atomic.AtomicInteger targetPoolSize;

  private long waitTimeout;

  private final java.util.concurrent.BlockingQueue<T> available;

  private final java.util.Set<T> allocated;

  private final java.util.Set<T> inUse;

  private final org.springframework.integration.util.SimplePool$PoolItemCallback<T> callback;

  public org.springframework.integration.util.SimplePool(int, org.springframework.integration.util.SimplePool$PoolItemCallback<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/Semaphore
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/Semaphore."<init>":(I)V
      24: putfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
      27: aload_0
      28: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      31: dup
      32: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      35: putfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      38: aload_0
      39: new           #8                  // class java/util/concurrent/atomic/AtomicInteger
      42: dup
      43: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      46: putfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      49: aload_0
      50: ldc2_w        #13                 // long 9223372036854775807l
      53: putfield      #15                 // Field waitTimeout:J
      56: aload_0
      57: new           #16                 // class java/util/concurrent/LinkedBlockingQueue
      60: dup
      61: invokespecial #17                 // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      64: putfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
      67: aload_0
      68: new           #19                 // class java/util/HashSet
      71: dup
      72: invokespecial #20                 // Method java/util/HashSet."<init>":()V
      75: invokestatic  #21                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      78: putfield      #22                 // Field allocated:Ljava/util/Set;
      81: aload_0
      82: new           #19                 // class java/util/HashSet
      85: dup
      86: invokespecial #20                 // Method java/util/HashSet."<init>":()V
      89: invokestatic  #21                 // Method java/util/Collections.synchronizedSet:(Ljava/util/Set;)Ljava/util/Set;
      92: putfield      #23                 // Field inUse:Ljava/util/Set;
      95: iload_1
      96: ifgt          129
      99: aload_0
     100: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
     103: ldc           #25                 // int 2147483647
     105: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     108: aload_0
     109: getfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
     112: ldc           #25                 // int 2147483647
     114: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     117: aload_0
     118: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
     121: ldc           #25                 // int 2147483647
     123: invokevirtual #27                 // Method java/util/concurrent/Semaphore.release:(I)V
     126: goto          153
     129: aload_0
     130: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
     133: iload_1
     134: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     137: aload_0
     138: getfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
     141: iload_1
     142: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     145: aload_0
     146: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
     149: iload_1
     150: invokevirtual #27                 // Method java/util/concurrent/Semaphore.release:(I)V
     153: aload_0
     154: aload_2
     155: putfield      #28                 // Field callback:Lorg/springframework/integration/util/SimplePool$PoolItemCallback;
     158: return

  public synchronized void setPoolSize(int);
    Code:
       0: iload_1
       1: aload_0
       2: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
       5: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       8: isub
       9: istore_2
      10: aload_0
      11: getfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      14: iload_2
      15: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      18: pop
      19: aload_0
      20: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      23: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      28: ifeq          69
      31: aload_0
      32: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      35: ldc           #32                 // String Target pool size changed by %d, now %d
      37: iconst_2
      38: anewarray     #33                 // class java/lang/Object
      41: dup
      42: iconst_0
      43: iload_2
      44: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      47: aastore
      48: dup
      49: iconst_1
      50: aload_0
      51: getfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      54: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      57: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      60: aastore
      61: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      64: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      69: iload_2
      70: ifle          93
      73: aload_0
      74: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      77: iload_2
      78: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.addAndGet:(I)I
      81: pop
      82: aload_0
      83: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
      86: iload_2
      87: invokevirtual #27                 // Method java/util/concurrent/Semaphore.release:(I)V
      90: goto          153
      93: iload_2
      94: ifge          153
      97: aload_0
      98: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
     101: invokevirtual #37                 // Method java/util/concurrent/Semaphore.tryAcquire:()Z
     104: ifne          110
     107: goto          153
     110: aload_0
     111: getfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
     114: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
     119: astore_3
     120: aload_3
     121: ifnonnull     134
     124: aload_0
     125: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
     128: invokevirtual #39                 // Method java/util/concurrent/Semaphore.release:()V
     131: goto          153
     134: aload_0
     135: aload_3
     136: invokespecial #40                 // Method doRemoveItem:(Ljava/lang/Object;)V
     139: aload_0
     140: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
     143: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
     146: pop
     147: iinc          2, 1
     150: goto          93
     153: iload_2
     154: ifge          195
     157: aload_0
     158: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     161: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     166: ifeq          195
     169: aload_0
     170: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     173: ldc           #42                 // String Pool is overcommitted by %d; items will be removed when returned
     175: iconst_1
     176: anewarray     #33                 // class java/lang/Object
     179: dup
     180: iconst_0
     181: iload_2
     182: ineg
     183: invokestatic  #34                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     186: aastore
     187: invokestatic  #35                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
     190: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     195: return

  public synchronized int getPoolSize();
    Code:
       0: aload_0
       1: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ireturn

  public int getIdleCount();
    Code:
       0: aload_0
       1: getfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.size:()I
       9: ireturn

  public int getActiveCount();
    Code:
       0: aload_0
       1: getfield      #23                 // Field inUse:Ljava/util/Set;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public int getAllocatedCount();
    Code:
       0: aload_0
       1: getfield      #22                 // Field allocated:Ljava/util/Set;
       4: invokeinterface #44,  1           // InterfaceMethod java/util/Set.size:()I
       9: ireturn

  public void setWaitTimeout(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #15                 // Field waitTimeout:J
       5: return

  public T getItem();
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
       6: aload_0
       7: getfield      #15                 // Field waitTimeout:J
      10: getstatic     #45                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      13: invokevirtual #46                 // Method java/util/concurrent/Semaphore.tryAcquire:(JLjava/util/concurrent/TimeUnit;)Z
      16: istore_1
      17: goto          38
      20: astore_2
      21: invokestatic  #48                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      24: invokevirtual #49                 // Method java/lang/Thread.interrupt:()V
      27: new           #50                 // class org/springframework/integration/util/PoolItemNotAvailableException
      30: dup
      31: ldc           #51                 // String Interrupted awaiting a pooled resource
      33: aload_2
      34: invokespecial #52                 // Method org/springframework/integration/util/PoolItemNotAvailableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      37: athrow
      38: iload_1
      39: ifne          52
      42: new           #50                 // class org/springframework/integration/util/PoolItemNotAvailableException
      45: dup
      46: ldc           #53                 // String Timed out while waiting to acquire a pool entry.
      48: invokespecial #54                 // Method org/springframework/integration/util/PoolItemNotAvailableException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: invokespecial #55                 // Method doGetItem:()Ljava/lang/Object;
      56: areturn
      57: astore_2
      58: iload_1
      59: ifeq          69
      62: aload_0
      63: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
      66: invokevirtual #39                 // Method java/util/concurrent/Semaphore.release:()V
      69: aload_2
      70: instanceof    #50                 // class org/springframework/integration/util/PoolItemNotAvailableException
      73: ifeq          81
      76: aload_2
      77: checkcast     #50                 // class org/springframework/integration/util/PoolItemNotAvailableException
      80: athrow
      81: new           #50                 // class org/springframework/integration/util/PoolItemNotAvailableException
      84: dup
      85: ldc           #57                 // String Failed to obtain pooled item
      87: aload_2
      88: invokespecial #52                 // Method org/springframework/integration/util/PoolItemNotAvailableException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      91: athrow
    Exception table:
       from    to  target type
           2    17    20   Class java/lang/InterruptedException
           2    56    57   Class java/lang/Exception

  private T doGetItem();
    Code:
       0: aload_0
       1: getfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: ifnull        59
      14: aload_0
      15: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      18: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      23: ifeq          59
      26: aload_0
      27: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      30: new           #58                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #60                 // String Obtained
      39: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      46: ldc           #63                 // String  from pool.
      48: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      54: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      59: aload_1
      60: ifnonnull     132
      63: aload_0
      64: getfield      #28                 // Field callback:Lorg/springframework/integration/util/SimplePool$PoolItemCallback;
      67: invokeinterface #65,  1           // InterfaceMethod org/springframework/integration/util/SimplePool$PoolItemCallback.createForPool:()Ljava/lang/Object;
      72: astore_1
      73: aload_0
      74: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      77: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      82: ifeq          118
      85: aload_0
      86: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      89: new           #58                 // class java/lang/StringBuilder
      92: dup
      93: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      96: ldc           #66                 // String Obtained new
      98: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_1
     102: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     105: ldc           #67                 // String .
     107: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     113: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     118: aload_0
     119: getfield      #22                 // Field allocated:Ljava/util/Set;
     122: aload_1
     123: invokeinterface #68,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     128: pop
     129: goto          200
     132: aload_0
     133: getfield      #28                 // Field callback:Lorg/springframework/integration/util/SimplePool$PoolItemCallback;
     136: aload_1
     137: invokeinterface #69,  2           // InterfaceMethod org/springframework/integration/util/SimplePool$PoolItemCallback.isStale:(Ljava/lang/Object;)Z
     142: ifeq          200
     145: aload_0
     146: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     149: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     154: ifeq          190
     157: aload_0
     158: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     161: new           #58                 // class java/lang/StringBuilder
     164: dup
     165: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
     168: ldc           #70                 // String Received a stale item
     170: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_1
     174: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     177: ldc           #71                 // String , will attempt to get a new one.
     179: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     182: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     185: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     190: aload_0
     191: aload_1
     192: invokespecial #40                 // Method doRemoveItem:(Ljava/lang/Object;)V
     195: aload_0
     196: invokespecial #55                 // Method doGetItem:()Ljava/lang/Object;
     199: astore_1
     200: aload_0
     201: getfield      #23                 // Field inUse:Ljava/util/Set;
     204: aload_1
     205: invokeinterface #68,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     210: pop
     211: aload_1
     212: areturn

  public synchronized void releaseItem(T);
    Code:
       0: aload_1
       1: ldc           #72                 // String Item cannot be null
       3: invokestatic  #73                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: getfield      #22                 // Field allocated:Ljava/util/Set;
      10: aload_1
      11: invokeinterface #74,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      16: ldc           #75                 // String You can only release items that were obtained from the pool
      18: invokestatic  #76                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      21: aload_0
      22: getfield      #23                 // Field inUse:Ljava/util/Set;
      25: aload_1
      26: invokeinterface #74,  2           // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      31: ifeq          152
      34: aload_0
      35: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      38: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      41: aload_0
      42: getfield      #11                 // Field targetPoolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      45: invokevirtual #29                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      48: if_icmple     71
      51: aload_0
      52: getfield      #10                 // Field poolSize:Ljava/util/concurrent/atomic/AtomicInteger;
      55: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicInteger.decrementAndGet:()I
      58: pop
      59: aload_1
      60: ifnull        197
      63: aload_0
      64: aload_1
      65: invokespecial #40                 // Method doRemoveItem:(Ljava/lang/Object;)V
      68: goto          197
      71: aload_0
      72: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      75: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      80: ifeq          116
      83: aload_0
      84: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      87: new           #58                 // class java/lang/StringBuilder
      90: dup
      91: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      94: ldc           #77                 // String Releasing
      96: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      99: aload_1
     100: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     103: ldc           #78                 // String  back to the pool
     105: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     108: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     111: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     116: aload_1
     117: ifnull        142
     120: aload_0
     121: getfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
     124: aload_1
     125: invokeinterface #79,  2           // InterfaceMethod java/util/concurrent/BlockingQueue.add:(Ljava/lang/Object;)Z
     130: pop
     131: aload_0
     132: getfield      #23                 // Field inUse:Ljava/util/Set;
     135: aload_1
     136: invokeinterface #80,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
     141: pop
     142: aload_0
     143: getfield      #7                  // Field permits:Ljava/util/concurrent/Semaphore;
     146: invokevirtual #39                 // Method java/util/concurrent/Semaphore.release:()V
     149: goto          197
     152: aload_0
     153: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     156: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     161: ifeq          197
     164: aload_0
     165: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     168: new           #58                 // class java/lang/StringBuilder
     171: dup
     172: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
     175: ldc           #81                 // String Ignoring release of
     177: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     180: aload_1
     181: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     184: ldc           #82                 // String  back to the pool - not in use
     186: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     192: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     197: return

  public synchronized void removeAllIdleItems();
    Code:
       0: aload_0
       1: getfield      #18                 // Field available:Ljava/util/concurrent/BlockingQueue;
       4: invokeinterface #38,  1           // InterfaceMethod java/util/concurrent/BlockingQueue.poll:()Ljava/lang/Object;
       9: dup
      10: astore_1
      11: ifnull        22
      14: aload_0
      15: aload_1
      16: invokespecial #40                 // Method doRemoveItem:(Ljava/lang/Object;)V
      19: goto          0
      22: return

  private void doRemoveItem(T);
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #31,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          45
      12: aload_0
      13: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      16: new           #58                 // class java/lang/StringBuilder
      19: dup
      20: invokespecial #59                 // Method java/lang/StringBuilder."<init>":()V
      23: ldc           #83                 // String Removing
      25: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: aload_1
      29: invokevirtual #62                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      32: ldc           #84                 // String  from the pool
      34: invokevirtual #61                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: invokevirtual #64                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      40: invokeinterface #36,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      45: aload_0
      46: getfield      #22                 // Field allocated:Ljava/util/Set;
      49: aload_1
      50: invokeinterface #80,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      55: pop
      56: aload_0
      57: getfield      #23                 // Field inUse:Ljava/util/Set;
      60: aload_1
      61: invokeinterface #80,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      66: pop
      67: aload_0
      68: getfield      #28                 // Field callback:Lorg/springframework/integration/util/SimplePool$PoolItemCallback;
      71: aload_1
      72: invokeinterface #85,  2           // InterfaceMethod org/springframework/integration/util/SimplePool$PoolItemCallback.removedFromPool:(Ljava/lang/Object;)V
      77: return
}
