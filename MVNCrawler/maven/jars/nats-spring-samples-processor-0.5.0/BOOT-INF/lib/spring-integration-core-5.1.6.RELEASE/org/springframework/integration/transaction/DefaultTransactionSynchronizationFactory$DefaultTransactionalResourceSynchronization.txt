Compiled from "DefaultTransactionSynchronizationFactory.java"
final class org.springframework.integration.transaction.DefaultTransactionSynchronizationFactory$DefaultTransactionalResourceSynchronization extends org.springframework.integration.transaction.IntegrationResourceHolderSynchronization {
  final org.springframework.integration.transaction.DefaultTransactionSynchronizationFactory this$0;

  org.springframework.integration.transaction.DefaultTransactionSynchronizationFactory$DefaultTransactionalResourceSynchronization(org.springframework.integration.transaction.DefaultTransactionSynchronizationFactory, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
       5: aload_0
       6: new           #2                  // class org/springframework/integration/transaction/IntegrationResourceHolder
       9: dup
      10: invokespecial #3                  // Method org/springframework/integration/transaction/IntegrationResourceHolder."<init>":()V
      13: aload_2
      14: invokespecial #4                  // Method org/springframework/integration/transaction/IntegrationResourceHolderSynchronization."<init>":(Lorg/springframework/integration/transaction/IntegrationResourceHolder;Ljava/lang/Object;)V
      17: return

  public void beforeCommit(boolean);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
       4: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
       7: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      12: ifeq          29
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      19: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
      22: ldc           #7                  // String \'pre-Committing\' transactional resource
      24: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      33: invokestatic  #9                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$100:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/springframework/integration/transaction/TransactionSynchronizationProcessor;
      36: aload_0
      37: getfield      #10                 // Field resourceHolder:Lorg/springframework/integration/transaction/IntegrationResourceHolder;
      40: invokeinterface #11,  2           // InterfaceMethod org/springframework/integration/transaction/TransactionSynchronizationProcessor.processBeforeCommit:(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
      45: return

  protected boolean shouldReleaseBeforeCompletion();
    Code:
       0: iconst_0
       1: ireturn

  protected void processResourceAfterCommit(org.springframework.integration.transaction.IntegrationResourceHolder);
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
       4: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
       7: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      12: ifeq          29
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      19: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
      22: ldc           #12                 // String \'Committing\' transactional resource
      24: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      29: aload_0
      30: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      33: invokestatic  #9                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$100:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/springframework/integration/transaction/TransactionSynchronizationProcessor;
      36: aload_1
      37: invokeinterface #13,  2           // InterfaceMethod org/springframework/integration/transaction/TransactionSynchronizationProcessor.processAfterCommit:(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
      42: return

  public void afterCompletion(int);
    Code:
       0: iload_1
       1: ifeq          49
       4: aload_0
       5: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
       8: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
      11: invokeinterface #6,  1            // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      16: ifeq          33
      19: aload_0
      20: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      23: invokestatic  #5                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$000:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/apache/commons/logging/Log;
      26: ldc           #14                 // String \'Rolling back\' transactional resource
      28: invokeinterface #8,  2            // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      33: aload_0
      34: getfield      #1                  // Field this$0:Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;
      37: invokestatic  #9                  // Method org/springframework/integration/transaction/DefaultTransactionSynchronizationFactory.access$100:(Lorg/springframework/integration/transaction/DefaultTransactionSynchronizationFactory;)Lorg/springframework/integration/transaction/TransactionSynchronizationProcessor;
      40: aload_0
      41: getfield      #10                 // Field resourceHolder:Lorg/springframework/integration/transaction/IntegrationResourceHolder;
      44: invokeinterface #15,  2           // InterfaceMethod org/springframework/integration/transaction/TransactionSynchronizationProcessor.processAfterRollback:(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
      49: aload_0
      50: iload_1
      51: invokespecial #16                 // Method org/springframework/integration/transaction/IntegrationResourceHolderSynchronization.afterCompletion:(I)V
      54: return

  protected void processResourceAfterCommit(org.springframework.transaction.support.ResourceHolder);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #2                  // class org/springframework/integration/transaction/IntegrationResourceHolder
       5: invokevirtual #17                 // Method processResourceAfterCommit:(Lorg/springframework/integration/transaction/IntegrationResourceHolder;)V
       8: return
}
