Compiled from "PublisherAnnotationAdvisor.java"
final class org.springframework.integration.aop.PublisherAnnotationAdvisor$MetaAnnotationMethodMatcher extends org.springframework.aop.support.annotation.AnnotationMethodMatcher {
  private final java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  org.springframework.integration.aop.PublisherAnnotationAdvisor$MetaAnnotationMethodMatcher(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/aop/support/annotation/AnnotationMethodMatcher."<init>":(Ljava/lang/Class;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field annotationType:Ljava/lang/Class;
      10: return

  public boolean matches(java.lang.reflect.Method, java.lang.Class);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #2                  // Field annotationType:Ljava/lang/Class;
       5: invokestatic  #3                  // Method org/springframework/core/annotation/AnnotationUtils.getAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: ifnull        13
      11: iconst_1
      12: ireturn
      13: aload_1
      14: aload_2
      15: invokestatic  #4                  // Method org/springframework/aop/support/AopUtils.getMostSpecificMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/reflect/Method;
      18: astore_3
      19: aload_3
      20: aload_1
      21: if_acmpeq     39
      24: aload_3
      25: aload_0
      26: getfield      #2                  // Field annotationType:Ljava/lang/Class;
      29: invokestatic  #3                  // Method org/springframework/core/annotation/AnnotationUtils.getAnnotation:(Ljava/lang/reflect/Method;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      32: ifnull        39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn
}
