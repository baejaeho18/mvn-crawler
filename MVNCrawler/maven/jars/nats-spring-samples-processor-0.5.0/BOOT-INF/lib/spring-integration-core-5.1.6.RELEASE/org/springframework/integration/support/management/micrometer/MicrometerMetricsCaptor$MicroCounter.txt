Compiled from "MicrometerMetricsCaptor.java"
public class org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroCounter extends org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$AbstractMeter<io.micrometer.core.instrument.Counter> implements org.springframework.integration.support.management.metrics.CounterFacade {
  private final io.micrometer.core.instrument.Counter counter;

  protected org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroCounter(io.micrometer.core.instrument.Counter, io.micrometer.core.instrument.MeterRegistry);
    Code:
       0: aload_0
       1: aload_2
       2: invokespecial #1                  // Method org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$AbstractMeter."<init>":(Lio/micrometer/core/instrument/MeterRegistry;)V
       5: aload_0
       6: aload_1
       7: putfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
      10: return

  protected io.micrometer.core.instrument.Counter getMeter();
    Code:
       0: aload_0
       1: getfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
       4: areturn

  public void increment();
    Code:
       0: aload_0
       1: getfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
       4: invokeinterface #3,  1            // InterfaceMethod io/micrometer/core/instrument/Counter.increment:()V
       9: return

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
       4: invokevirtual #4                  // Method java/lang/Object.hashCode:()I
       7: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: aload_1
       9: invokevirtual #5                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      12: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      15: ifne          20
      18: iconst_0
      19: ireturn
      20: aload_0
      21: getfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
      24: aload_1
      25: checkcast     #7                  // class org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroCounter
      28: getfield      #2                  // Field counter:Lio/micrometer/core/instrument/Counter;
      31: invokevirtual #6                  // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      34: ireturn

  protected io.micrometer.core.instrument.Meter getMeter();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getMeter:()Lio/micrometer/core/instrument/Counter;
       4: areturn
}
