Compiled from "MessageGroupQueue.java"
public class org.springframework.integration.store.MessageGroupQueue extends java.util.AbstractQueue<org.springframework.messaging.Message<?>> implements java.util.concurrent.BlockingQueue<org.springframework.messaging.Message<?>> {
  private final org.apache.commons.logging.Log logger;

  private static final int DEFAULT_CAPACITY;

  private final org.springframework.integration.store.BasicMessageGroupStore messageGroupStore;

  private final java.lang.Object groupId;

  private final int capacity;

  private final java.util.concurrent.locks.Lock storeLock;

  private final java.util.concurrent.locks.Condition messageStoreNotFull;

  private final java.util.concurrent.locks.Condition messageStoreNotEmpty;

  public org.springframework.integration.store.MessageGroupQueue(org.springframework.integration.store.BasicMessageGroupStore, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #3                  // int 2147483647
       5: new           #4                  // class java/util/concurrent/locks/ReentrantLock
       8: dup
       9: iconst_1
      10: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      13: invokespecial #6                  // Method "<init>":(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
      16: return

  public org.springframework.integration.store.MessageGroupQueue(org.springframework.integration.store.BasicMessageGroupStore, java.lang.Object, int);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload_3
       4: new           #4                  // class java/util/concurrent/locks/ReentrantLock
       7: dup
       8: iconst_1
       9: invokespecial #5                  // Method java/util/concurrent/locks/ReentrantLock."<init>":(Z)V
      12: invokespecial #6                  // Method "<init>":(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
      15: return

  public org.springframework.integration.store.MessageGroupQueue(org.springframework.integration.store.BasicMessageGroupStore, java.lang.Object, java.util.concurrent.locks.Lock);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: ldc           #3                  // int 2147483647
       5: aload_3
       6: invokespecial #6                  // Method "<init>":(Lorg/springframework/integration/store/BasicMessageGroupStore;Ljava/lang/Object;ILjava/util/concurrent/locks/Lock;)V
       9: return

  public org.springframework.integration.store.MessageGroupQueue(org.springframework.integration.store.BasicMessageGroupStore, java.lang.Object, int, java.util.concurrent.locks.Lock);
    Code:
       0: aload_0
       1: invokespecial #7                  // Method java/util/AbstractQueue."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #9                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
      15: iload_3
      16: ifle          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ldc           #11                 // String \'capacity\' must be greater than 0
      26: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      29: aload         4
      31: ldc           #13                 // String \'storeLock\' must not be null
      33: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      36: aload_1
      37: ldc           #15                 // String \'messageGroupStore\' must not be null
      39: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      42: aload_2
      43: ldc           #16                 // String \'groupId\' must not be null
      45: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      48: aload_0
      49: aload         4
      51: putfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      54: aload_0
      55: aload_0
      56: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      59: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      64: putfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
      67: aload_0
      68: aload_0
      69: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      72: invokeinterface #18,  1           // InterfaceMethod java/util/concurrent/locks/Lock.newCondition:()Ljava/util/concurrent/locks/Condition;
      77: putfield      #20                 // Field messageStoreNotEmpty:Ljava/util/concurrent/locks/Condition;
      80: aload_0
      81: aload_1
      82: putfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      85: aload_0
      86: aload_2
      87: putfield      #22                 // Field groupId:Ljava/lang/Object;
      90: aload_0
      91: iload_3
      92: putfield      #23                 // Field capacity:I
      95: aload_0
      96: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
      99: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     104: ifeq          148
     107: aload_1
     108: instanceof    #25                 // class org/springframework/integration/store/ChannelMessageStore
     111: ifne          148
     114: aload_0
     115: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
     118: new           #26                 // class java/lang/StringBuilder
     121: dup
     122: invokespecial #27                 // Method java/lang/StringBuilder."<init>":()V
     125: aload_1
     126: invokevirtual #8                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: invokevirtual #28                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     132: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     135: ldc           #30                 // String  is not optimized for use in a \'MessageGroupQueue\'; consider using a `ChannelMessageStore\'
     137: invokevirtual #29                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: invokevirtual #31                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     143: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     148: return

  public void setPriority(boolean);
    Code:
       0: iload_1
       1: ifeq          33
       4: ldc           #33                 // class org/springframework/integration/store/PriorityCapableChannelMessageStore
       6: aload_0
       7: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      10: invokestatic  #34                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;)V
      13: aload_0
      14: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      17: checkcast     #33                 // class org/springframework/integration/store/PriorityCapableChannelMessageStore
      20: invokeinterface #35,  1           // InterfaceMethod org/springframework/integration/store/PriorityCapableChannelMessageStore.isPriorityEnabled:()Z
      25: ldc           #36                 // String When using priority, the \'PriorityCapableChannelMessageStore\' must have priority enabled.
      27: invokestatic  #12                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      30: goto          81
      33: aload_0
      34: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
      37: invokeinterface #24,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      42: ifeq          81
      45: aload_0
      46: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      49: instanceof    #33                 // class org/springframework/integration/store/PriorityCapableChannelMessageStore
      52: ifeq          81
      55: aload_0
      56: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      59: checkcast     #33                 // class org/springframework/integration/store/PriorityCapableChannelMessageStore
      62: invokeinterface #35,  1           // InterfaceMethod org/springframework/integration/store/PriorityCapableChannelMessageStore.isPriorityEnabled:()Z
      67: ifeq          81
      70: aload_0
      71: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
      74: ldc           #37                 // String It\'s not recommended to use a priority-based message store when declaring a non-priority \'MessageGroupQueue\'; message retrieval may not be FIFO; set \'priority\' to \'true\' if that is your intent. If you are using the namespace to define a channel, use \'<priority-queue message-store.../> instead.
      76: invokeinterface #32,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      81: return

  public java.util.Iterator<org.springframework.messaging.Message<?>> iterator();
    Code:
       0: aload_0
       1: invokevirtual #38                 // Method getMessages:()Ljava/util/Collection;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: areturn

  protected org.springframework.integration.store.BasicMessageGroupStore getMessageGroupStore();
    Code:
       0: aload_0
       1: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
       4: areturn

  protected java.util.concurrent.locks.Lock getStoreLock();
    Code:
       0: aload_0
       1: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       4: areturn

  protected java.util.concurrent.locks.Condition getMessageStoreNotFull();
    Code:
       0: aload_0
       1: getfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
       4: areturn

  protected java.util.concurrent.locks.Condition getMessageStoreNotEmpty();
    Code:
       0: aload_0
       1: getfield      #20                 // Field messageStoreNotEmpty:Ljava/util/concurrent/locks/Condition;
       4: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
       4: aload_0
       5: getfield      #22                 // Field groupId:Ljava/lang/Object;
       8: invokeinterface #40,  2           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.messageGroupSize:(Ljava/lang/Object;)I
      13: ireturn

  public org.springframework.messaging.Message<?> peek();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       6: astore_2
       7: aload_2
       8: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      13: aload_0
      14: invokevirtual #38                 // Method getMessages:()Ljava/util/Collection;
      17: astore_3
      18: aload_3
      19: invokeinterface #42,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      24: ifne          42
      27: aload_3
      28: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      33: invokeinterface #43,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #44                 // class org/springframework/messaging/Message
      41: astore_1
      42: aload_2
      43: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      48: goto          62
      51: astore        4
      53: aload_2
      54: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      59: aload         4
      61: athrow
      62: goto          72
      65: astore_3
      66: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      69: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
      72: aload_1
      73: areturn
    Exception table:
       from    to  target type
          13    42    51   any
          51    53    51   any
           7    62    65   Class java/lang/InterruptedException

  public org.springframework.messaging.Message<?> poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore        4
       3: aload_3
       4: lload_1
       5: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       8: lstore        5
      10: aload_0
      11: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      14: astore        7
      16: aload         7
      18: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      23: aload_0
      24: invokevirtual #50                 // Method doPoll:()Lorg/springframework/messaging/Message;
      27: astore        4
      29: aload         4
      31: ifnonnull     63
      34: lload         5
      36: lconst_0
      37: lcmp
      38: ifle          63
      41: aload_0
      42: getfield      #20                 // Field messageStoreNotEmpty:Ljava/util/concurrent/locks/Condition;
      45: lload         5
      47: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      52: lstore        5
      54: aload_0
      55: invokevirtual #50                 // Method doPoll:()Lorg/springframework/messaging/Message;
      58: astore        4
      60: goto          29
      63: aload         7
      65: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      70: goto          85
      73: astore        8
      75: aload         7
      77: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      82: aload         8
      84: athrow
      85: aload         4
      87: areturn
    Exception table:
       from    to  target type
          23    63    73   any
          73    75    73   any

  public org.springframework.messaging.Message<?> poll();
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       6: astore_2
       7: aload_2
       8: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      13: aload_0
      14: invokevirtual #50                 // Method doPoll:()Lorg/springframework/messaging/Message;
      17: astore_1
      18: aload_2
      19: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      24: goto          36
      27: astore_3
      28: aload_2
      29: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      34: aload_3
      35: athrow
      36: goto          46
      39: astore_3
      40: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      43: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
      46: aload_1
      47: areturn
    Exception table:
       from    to  target type
          13    18    27   any
           7    36    39   Class java/lang/InterruptedException

  public int drainTo(java.util.Collection<? super org.springframework.messaging.Message<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #3                  // int 2147483647
       4: invokevirtual #52                 // Method drainTo:(Ljava/util/Collection;I)I
       7: ireturn

  public int drainTo(java.util.Collection<? super org.springframework.messaging.Message<?>>, int);
    Code:
       0: aload_1
       1: ldc           #53                 // String \'collection\' must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.size:()I
      12: istore_3
      13: new           #55                 // class java/util/ArrayList
      16: dup
      17: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      20: astore        4
      22: aload_0
      23: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      26: astore        5
      28: aload         5
      30: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      35: aload_0
      36: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      39: aload_0
      40: getfield      #22                 // Field groupId:Ljava/lang/Object;
      43: invokeinterface #57,  2           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.pollMessageFromGroup:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      48: astore        6
      50: iconst_0
      51: istore        7
      53: iload         7
      55: iload_2
      56: if_icmpge     93
      59: aload         6
      61: ifnull        93
      64: aload         4
      66: aload         6
      68: invokevirtual #58                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      71: pop
      72: aload_0
      73: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      76: aload_0
      77: getfield      #22                 // Field groupId:Ljava/lang/Object;
      80: invokeinterface #57,  2           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.pollMessageFromGroup:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      85: astore        6
      87: iinc          7, 1
      90: goto          53
      93: aload_0
      94: getfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
      97: invokeinterface #59,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
     102: aload         5
     104: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     109: goto          124
     112: astore        8
     114: aload         5
     116: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     121: aload         8
     123: athrow
     124: goto          148
     127: astore        6
     129: aload_0
     130: getfield      #10                 // Field logger:Lorg/apache/commons/logging/Log;
     133: ldc           #60                 // String Queue may not have drained completely since this operation was interrupted
     135: aload         6
     137: invokeinterface #61,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     142: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
     145: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
     148: aload_1
     149: aload         4
     151: invokeinterface #62,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     156: pop
     157: aload_1
     158: invokeinterface #54,  1           // InterfaceMethod java/util/Collection.size:()I
     163: iload_3
     164: isub
     165: ireturn
    Exception table:
       from    to  target type
          35   102   112   any
         112   114   112   any
          28   124   127   Class java/lang/InterruptedException

  public boolean offer(org.springframework.messaging.Message<?>);
    Code:
       0: iconst_1
       1: istore_2
       2: aload_0
       3: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       6: astore_3
       7: aload_3
       8: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      13: aload_0
      14: aload_1
      15: invokevirtual #63                 // Method doOffer:(Lorg/springframework/messaging/Message;)Z
      18: istore_2
      19: aload_3
      20: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      25: goto          39
      28: astore        4
      30: aload_3
      31: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      36: aload         4
      38: athrow
      39: goto          50
      42: astore        4
      44: invokestatic  #47                 // Method java/lang/Thread.currentThread:()Ljava/lang/Thread;
      47: invokevirtual #48                 // Method java/lang/Thread.interrupt:()V
      50: iload_2
      51: ireturn
    Exception table:
       from    to  target type
          13    19    28   any
          28    30    28   any
           7    39    42   Class java/lang/InterruptedException

  public boolean offer(org.springframework.messaging.Message<?>, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload         4
       2: lload_2
       3: invokevirtual #49                 // Method java/util/concurrent/TimeUnit.toNanos:(J)J
       6: lstore        5
       8: iconst_0
       9: istore        7
      11: aload_0
      12: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
      15: astore        8
      17: aload         8
      19: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      24: aload_0
      25: getfield      #23                 // Field capacity:I
      28: ldc           #3                  // int 2147483647
      30: if_icmpeq     67
      33: aload_0
      34: invokevirtual #64                 // Method size:()I
      37: aload_0
      38: getfield      #23                 // Field capacity:I
      41: if_icmpne     67
      44: lload         5
      46: lconst_0
      47: lcmp
      48: ifle          67
      51: aload_0
      52: getfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
      55: lload         5
      57: invokeinterface #51,  3           // InterfaceMethod java/util/concurrent/locks/Condition.awaitNanos:(J)J
      62: lstore        5
      64: goto          33
      67: lload         5
      69: lconst_0
      70: lcmp
      71: ifle          81
      74: aload_0
      75: aload_1
      76: invokevirtual #63                 // Method doOffer:(Lorg/springframework/messaging/Message;)Z
      79: istore        7
      81: aload         8
      83: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      88: goto          103
      91: astore        9
      93: aload         8
      95: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     100: aload         9
     102: athrow
     103: iload         7
     105: ireturn
    Exception table:
       from    to  target type
          24    81    91   any
          91    93    91   any

  public void put(org.springframework.messaging.Message<?>) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       4: astore_2
       5: aload_2
       6: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      11: aload_0
      12: getfield      #23                 // Field capacity:I
      15: ldc           #3                  // int 2147483647
      17: if_icmpeq     43
      20: aload_0
      21: invokevirtual #64                 // Method size:()I
      24: aload_0
      25: getfield      #23                 // Field capacity:I
      28: if_icmpne     43
      31: aload_0
      32: getfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
      35: invokeinterface #65,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      40: goto          20
      43: aload_0
      44: aload_1
      45: invokevirtual #63                 // Method doOffer:(Lorg/springframework/messaging/Message;)Z
      48: pop
      49: aload_2
      50: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      55: goto          67
      58: astore_3
      59: aload_2
      60: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      65: aload_3
      66: athrow
      67: return
    Exception table:
       from    to  target type
          11    49    58   any

  public int remainingCapacity();
    Code:
       0: aload_0
       1: getfield      #23                 // Field capacity:I
       4: ldc           #3                  // int 2147483647
       6: if_icmpne     12
       9: ldc           #3                  // int 2147483647
      11: ireturn
      12: aload_0
      13: getfield      #23                 // Field capacity:I
      16: aload_0
      17: invokevirtual #64                 // Method size:()I
      20: isub
      21: ireturn

  public org.springframework.messaging.Message<?> take() throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_1
       2: aload_0
       3: getfield      #17                 // Field storeLock:Ljava/util/concurrent/locks/Lock;
       6: astore_2
       7: aload_2
       8: invokeinterface #41,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lockInterruptibly:()V
      13: aload_0
      14: invokevirtual #64                 // Method size:()I
      17: ifne          32
      20: aload_0
      21: getfield      #20                 // Field messageStoreNotEmpty:Ljava/util/concurrent/locks/Condition;
      24: invokeinterface #65,  1           // InterfaceMethod java/util/concurrent/locks/Condition.await:()V
      29: goto          13
      32: aload_0
      33: invokevirtual #50                 // Method doPoll:()Lorg/springframework/messaging/Message;
      36: astore_1
      37: aload_2
      38: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      43: goto          55
      46: astore_3
      47: aload_2
      48: invokeinterface #45,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      53: aload_3
      54: athrow
      55: aload_1
      56: areturn
    Exception table:
       from    to  target type
          13    37    46   any

  protected java.util.Collection<org.springframework.messaging.Message<?>> getMessages();
    Code:
       0: aload_0
       1: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
       4: aload_0
       5: getfield      #22                 // Field groupId:Ljava/lang/Object;
       8: invokeinterface #66,  2           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.getMessageGroup:(Ljava/lang/Object;)Lorg/springframework/integration/store/MessageGroup;
      13: invokeinterface #67,  1           // InterfaceMethod org/springframework/integration/store/MessageGroup.getMessages:()Ljava/util/Collection;
      18: areturn

  protected org.springframework.messaging.Message<?> doPoll();
    Code:
       0: aload_0
       1: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
       4: aload_0
       5: getfield      #22                 // Field groupId:Ljava/lang/Object;
       8: invokeinterface #57,  2           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.pollMessageFromGroup:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      13: astore_1
      14: aload_0
      15: getfield      #19                 // Field messageStoreNotFull:Ljava/util/concurrent/locks/Condition;
      18: invokeinterface #59,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      23: aload_1
      24: areturn

  protected boolean doOffer(org.springframework.messaging.Message<?>);
    Code:
       0: iconst_0
       1: istore_2
       2: aload_0
       3: getfield      #23                 // Field capacity:I
       6: ldc           #3                  // int 2147483647
       8: if_icmpeq     22
      11: aload_0
      12: invokevirtual #64                 // Method size:()I
      15: aload_0
      16: getfield      #23                 // Field capacity:I
      19: if_icmpge     48
      22: aload_0
      23: getfield      #21                 // Field messageGroupStore:Lorg/springframework/integration/store/BasicMessageGroupStore;
      26: aload_0
      27: getfield      #22                 // Field groupId:Ljava/lang/Object;
      30: aload_1
      31: invokeinterface #68,  3           // InterfaceMethod org/springframework/integration/store/BasicMessageGroupStore.addMessageToGroup:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/integration/store/MessageGroup;
      36: pop
      37: iconst_1
      38: istore_2
      39: aload_0
      40: getfield      #20                 // Field messageStoreNotEmpty:Ljava/util/concurrent/locks/Condition;
      43: invokeinterface #59,  1           // InterfaceMethod java/util/concurrent/locks/Condition.signal:()V
      48: iload_2
      49: ireturn

  public java.lang.Object peek();
    Code:
       0: aload_0
       1: invokevirtual #69                 // Method peek:()Lorg/springframework/messaging/Message;
       4: areturn

  public java.lang.Object poll();
    Code:
       0: aload_0
       1: invokevirtual #70                 // Method poll:()Lorg/springframework/messaging/Message;
       4: areturn

  public boolean offer(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/springframework/messaging/Message
       5: invokevirtual #71                 // Method offer:(Lorg/springframework/messaging/Message;)Z
       8: ireturn

  public java.lang.Object poll(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: lload_1
       2: aload_3
       3: invokevirtual #72                 // Method poll:(JLjava/util/concurrent/TimeUnit;)Lorg/springframework/messaging/Message;
       6: areturn

  public java.lang.Object take() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #73                 // Method take:()Lorg/springframework/messaging/Message;
       4: areturn

  public boolean offer(java.lang.Object, long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/springframework/messaging/Message
       5: lload_2
       6: aload         4
       8: invokevirtual #74                 // Method offer:(Lorg/springframework/messaging/Message;JLjava/util/concurrent/TimeUnit;)Z
      11: ireturn

  public void put(java.lang.Object) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #44                 // class org/springframework/messaging/Message
       5: invokevirtual #75                 // Method put:(Lorg/springframework/messaging/Message;)V
       8: return
}
