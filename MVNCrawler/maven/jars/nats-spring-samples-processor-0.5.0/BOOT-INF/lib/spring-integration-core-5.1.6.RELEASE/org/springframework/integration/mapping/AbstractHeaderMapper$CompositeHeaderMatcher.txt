Compiled from "AbstractHeaderMapper.java"
public class org.springframework.integration.mapping.AbstractHeaderMapper$CompositeHeaderMatcher implements org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher {
  private static final org.apache.commons.logging.Log logger;

  private final java.util.Collection<org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher> matchers;

  org.springframework.integration.mapping.AbstractHeaderMapper$CompositeHeaderMatcher(java.util.Collection<org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field matchers:Ljava/util/Collection;
       9: return

  org.springframework.integration.mapping.AbstractHeaderMapper$CompositeHeaderMatcher(org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher...);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #3                  // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       5: invokespecial #4                  // Method "<init>":(Ljava/util/Collection;)V
       8: return

  public boolean matchHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field matchers:Ljava/util/Collection;
       4: invokeinterface #5,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore_2
      10: aload_2
      11: invokeinterface #6,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          56
      19: aload_2
      20: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #8                  // class org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher
      28: astore_3
      29: aload_3
      30: aload_1
      31: invokeinterface #9,  2            // InterfaceMethod org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher.matchHeader:(Ljava/lang/String;)Z
      36: ifeq          53
      39: aload_3
      40: invokeinterface #10,  1           // InterfaceMethod org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher.isNegated:()Z
      45: ifeq          51
      48: goto          56
      51: iconst_1
      52: ireturn
      53: goto          10
      56: getstatic     #11                 // Field logger:Lorg/apache/commons/logging/Log;
      59: invokeinterface #12,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      64: ifeq          88
      67: getstatic     #11                 // Field logger:Lorg/apache/commons/logging/Log;
      70: ldc           #13                 // String headerName=[{0}] WILL NOT be mapped
      72: iconst_1
      73: anewarray     #14                 // class java/lang/Object
      76: dup
      77: iconst_0
      78: aload_1
      79: aastore
      80: invokestatic  #15                 // Method java/text/MessageFormat.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      83: invokeinterface #16,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      88: iconst_0
      89: ireturn

  public boolean isNegated();
    Code:
       0: iconst_0
       1: ireturn

  static {};
    Code:
       0: ldc           #8                  // class org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher
       2: invokestatic  #17                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #11                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
