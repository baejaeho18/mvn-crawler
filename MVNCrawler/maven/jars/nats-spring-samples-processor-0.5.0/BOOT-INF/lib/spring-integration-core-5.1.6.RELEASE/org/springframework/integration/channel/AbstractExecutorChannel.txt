Compiled from "AbstractExecutorChannel.java"
public abstract class org.springframework.integration.channel.AbstractExecutorChannel extends org.springframework.integration.channel.AbstractSubscribableChannel implements org.springframework.integration.channel.ExecutorChannelInterceptorAware {
  protected volatile java.util.concurrent.Executor executor;

  protected volatile org.springframework.integration.dispatcher.AbstractDispatcher dispatcher;

  protected volatile java.lang.Integer maxSubscribers;

  protected volatile int executorInterceptorsSize;

  public org.springframework.integration.channel.AbstractExecutorChannel(java.util.concurrent.Executor);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method org/springframework/integration/channel/AbstractSubscribableChannel."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field executor:Ljava/util/concurrent/Executor;
       9: return

  public void setMaxSubscribers(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #4                  // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       5: putfield      #5                  // Field maxSubscribers:Ljava/lang/Integer;
       8: aload_0
       9: getfield      #6                  // Field dispatcher:Lorg/springframework/integration/dispatcher/AbstractDispatcher;
      12: iload_1
      13: invokevirtual #7                  // Method org/springframework/integration/dispatcher/AbstractDispatcher.setMaxSubscribers:(I)V
      16: return

  public void setInterceptors(java.util.List<org.springframework.messaging.support.ChannelInterceptor>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #8                  // Method org/springframework/integration/channel/AbstractSubscribableChannel.setInterceptors:(Ljava/util/List;)V
       5: aload_1
       6: invokeinterface #9,  1            // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      11: astore_2
      12: aload_2
      13: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          51
      21: aload_2
      22: invokeinterface #11,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #12                 // class org/springframework/messaging/support/ChannelInterceptor
      30: astore_3
      31: aload_3
      32: instanceof    #13                 // class org/springframework/messaging/support/ExecutorChannelInterceptor
      35: ifeq          48
      38: aload_0
      39: dup
      40: getfield      #14                 // Field executorInterceptorsSize:I
      43: iconst_1
      44: iadd
      45: putfield      #14                 // Field executorInterceptorsSize:I
      48: goto          12
      51: return

  public void addInterceptor(org.springframework.messaging.support.ChannelInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method org/springframework/integration/channel/AbstractSubscribableChannel.addInterceptor:(Lorg/springframework/messaging/support/ChannelInterceptor;)V
       5: aload_1
       6: instanceof    #13                 // class org/springframework/messaging/support/ExecutorChannelInterceptor
       9: ifeq          22
      12: aload_0
      13: dup
      14: getfield      #14                 // Field executorInterceptorsSize:I
      17: iconst_1
      18: iadd
      19: putfield      #14                 // Field executorInterceptorsSize:I
      22: return

  public void addInterceptor(int, org.springframework.messaging.support.ChannelInterceptor);
    Code:
       0: aload_0
       1: iload_1
       2: aload_2
       3: invokespecial #16                 // Method org/springframework/integration/channel/AbstractSubscribableChannel.addInterceptor:(ILorg/springframework/messaging/support/ChannelInterceptor;)V
       6: aload_2
       7: instanceof    #13                 // class org/springframework/messaging/support/ExecutorChannelInterceptor
      10: ifeq          23
      13: aload_0
      14: dup
      15: getfield      #14                 // Field executorInterceptorsSize:I
      18: iconst_1
      19: iadd
      20: putfield      #14                 // Field executorInterceptorsSize:I
      23: return

  public boolean removeInterceptor(org.springframework.messaging.support.ChannelInterceptor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #17                 // Method org/springframework/integration/channel/AbstractSubscribableChannel.removeInterceptor:(Lorg/springframework/messaging/support/ChannelInterceptor;)Z
       5: istore_2
       6: iload_2
       7: ifeq          27
      10: aload_1
      11: instanceof    #13                 // class org/springframework/messaging/support/ExecutorChannelInterceptor
      14: ifeq          27
      17: aload_0
      18: dup
      19: getfield      #14                 // Field executorInterceptorsSize:I
      22: iconst_1
      23: isub
      24: putfield      #14                 // Field executorInterceptorsSize:I
      27: iload_2
      28: ireturn

  public org.springframework.messaging.support.ChannelInterceptor removeInterceptor(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #18                 // Method org/springframework/integration/channel/AbstractSubscribableChannel.removeInterceptor:(I)Lorg/springframework/messaging/support/ChannelInterceptor;
       5: astore_2
       6: aload_2
       7: instanceof    #13                 // class org/springframework/messaging/support/ExecutorChannelInterceptor
      10: ifeq          23
      13: aload_0
      14: dup
      15: getfield      #14                 // Field executorInterceptorsSize:I
      18: iconst_1
      19: isub
      20: putfield      #14                 // Field executorInterceptorsSize:I
      23: aload_2
      24: areturn

  public boolean hasExecutorInterceptors();
    Code:
       0: aload_0
       1: getfield      #14                 // Field executorInterceptorsSize:I
       4: ifle          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  static org.apache.commons.logging.Log access$000(org.springframework.integration.channel.AbstractExecutorChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$100(org.springframework.integration.channel.AbstractExecutorChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$200(org.springframework.integration.channel.AbstractExecutorChannel);
    Code:
       0: aload_0
       1: getfield      #1                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn
}
