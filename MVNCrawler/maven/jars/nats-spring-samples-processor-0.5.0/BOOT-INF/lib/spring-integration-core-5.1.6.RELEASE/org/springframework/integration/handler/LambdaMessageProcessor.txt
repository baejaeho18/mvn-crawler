Compiled from "LambdaMessageProcessor.java"
public class org.springframework.integration.handler.LambdaMessageProcessor implements org.springframework.integration.handler.MessageProcessor<java.lang.Object>, org.springframework.beans.factory.BeanFactoryAware {
  private static final org.apache.commons.logging.Log logger;

  private final java.lang.Object target;

  private final java.lang.reflect.Method method;

  private final java.lang.Class<?> payloadType;

  private final java.lang.Class<?>[] parameterTypes;

  private org.springframework.messaging.converter.MessageConverter messageConverter;

  public org.springframework.integration.handler.LambdaMessageProcessor(java.lang.Object, java.lang.Class<?>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String \'target\' must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: putfield      #4                  // Field target:Ljava/lang/Object;
      15: new           #5                  // class java/util/concurrent/atomic/AtomicReference
      18: dup
      19: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicReference."<init>":()V
      22: astore_3
      23: aload_1
      24: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      27: aload_3
      28: dup
      29: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      32: pop
      33: invokedynamic #8,  0              // InvokeDynamic #0:doWith:(Ljava/util/concurrent/atomic/AtomicReference;)Lorg/springframework/util/ReflectionUtils$MethodCallback;
      38: aload_3
      39: invokedynamic #9,  0              // InvokeDynamic #1:matches:(Ljava/util/concurrent/atomic/AtomicReference;)Lorg/springframework/util/ReflectionUtils$MethodFilter;
      44: invokestatic  #10                 // Method org/springframework/util/ReflectionUtils.doWithMethods:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;Lorg/springframework/util/ReflectionUtils$MethodFilter;)V
      47: aload_3
      48: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      51: ldc           #12                 // String LambdaMessageProcessor is applicable for inline or lambda classes with single method - functional interface implementations.
      53: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      56: aload_0
      57: aload_3
      58: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      61: checkcast     #13                 // class java/lang/reflect/Method
      64: putfield      #14                 // Field method:Ljava/lang/reflect/Method;
      67: aload_0
      68: getfield      #14                 // Field method:Ljava/lang/reflect/Method;
      71: iconst_1
      72: invokevirtual #15                 // Method java/lang/reflect/Method.setAccessible:(Z)V
      75: aload_0
      76: aload_0
      77: getfield      #14                 // Field method:Ljava/lang/reflect/Method;
      80: invokevirtual #16                 // Method java/lang/reflect/Method.getParameterTypes:()[Ljava/lang/Class;
      83: putfield      #17                 // Field parameterTypes:[Ljava/lang/Class;
      86: aload_0
      87: aload_2
      88: putfield      #18                 // Field payloadType:Ljava/lang/Class;
      91: return

  public void setBeanFactory(org.springframework.beans.factory.BeanFactory) throws org.springframework.beans.BeansException;
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #20                 // String integrationArgumentResolverMessageConverter
       4: ldc           #21                 // class org/springframework/messaging/converter/MessageConverter
       6: invokeinterface #22,  3           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      11: checkcast     #21                 // class org/springframework/messaging/converter/MessageConverter
      14: putfield      #23                 // Field messageConverter:Lorg/springframework/messaging/converter/MessageConverter;
      17: return

  public java.lang.Object processMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method buildArgs:(Lorg/springframework/messaging/Message;)[Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: getfield      #14                 // Field method:Ljava/lang/reflect/Method;
      10: aload_0
      11: getfield      #4                  // Field target:Ljava/lang/Object;
      14: aload_2
      15: invokevirtual #25                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      18: areturn
      19: astore_3
      20: aload_3
      21: invokevirtual #27                 // Method java/lang/reflect/InvocationTargetException.getTargetException:()Ljava/lang/Throwable;
      24: instanceof    #28                 // class java/lang/ClassCastException
      27: ifeq          44
      30: getstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
      33: ldc           #30                 // String Could not invoke the method due to a class cast exception, if using a lambda in the DSL, consider using an overloaded EIP method that takes a Class<?> argument to explicitly specify the type. An example of when this often occurs is if the lambda is configured to receive a Message<?> argument.
      35: aload_3
      36: invokevirtual #31                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      39: invokeinterface #32,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      44: new           #33                 // class org/springframework/messaging/MessageHandlingException
      47: dup
      48: aload_1
      49: aload_3
      50: invokevirtual #31                 // Method java/lang/reflect/InvocationTargetException.getCause:()Ljava/lang/Throwable;
      53: invokespecial #34                 // Method org/springframework/messaging/MessageHandlingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
      56: athrow
      57: astore_3
      58: new           #33                 // class org/springframework/messaging/MessageHandlingException
      61: dup
      62: aload_1
      63: aload_3
      64: invokespecial #34                 // Method org/springframework/messaging/MessageHandlingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
      67: athrow
    Exception table:
       from    to  target type
           6    18    19   Class java/lang/reflect/InvocationTargetException
           6    18    57   Class java/lang/Exception

  private java.lang.Object[] buildArgs(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #17                 // Field parameterTypes:[Ljava/lang/Class;
       4: arraylength
       5: anewarray     #36                 // class java/lang/Object
       8: astore_2
       9: iconst_0
      10: istore_3
      11: iload_3
      12: aload_0
      13: getfield      #17                 // Field parameterTypes:[Ljava/lang/Class;
      16: arraylength
      17: if_icmpge     180
      20: aload_0
      21: getfield      #17                 // Field parameterTypes:[Ljava/lang/Class;
      24: iload_3
      25: aaload
      26: astore        4
      28: ldc           #37                 // class org/springframework/messaging/Message
      30: aload         4
      32: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      35: ifeq          45
      38: aload_2
      39: iload_3
      40: aload_1
      41: aastore
      42: goto          174
      45: ldc           #39                 // class java/util/Map
      47: aload         4
      49: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      52: ifeq          100
      55: aload_1
      56: invokeinterface #40,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      61: instanceof    #39                 // class java/util/Map
      64: ifeq          88
      67: aload_0
      68: getfield      #17                 // Field parameterTypes:[Ljava/lang/Class;
      71: arraylength
      72: iconst_1
      73: if_icmpne     88
      76: aload_2
      77: iload_3
      78: aload_1
      79: invokeinterface #40,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      84: aastore
      85: goto          174
      88: aload_2
      89: iload_3
      90: aload_1
      91: invokeinterface #41,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      96: aastore
      97: goto          174
     100: aload_0
     101: getfield      #18                 // Field payloadType:Ljava/lang/Class;
     104: ifnull        165
     107: aload_0
     108: getfield      #18                 // Field payloadType:Ljava/lang/Class;
     111: aload_1
     112: invokeinterface #40,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     117: invokevirtual #7                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
     120: invokestatic  #42                 // Method org/springframework/util/ClassUtils.isAssignable:(Ljava/lang/Class;Ljava/lang/Class;)Z
     123: ifne          165
     126: ldc           #37                 // class org/springframework/messaging/Message
     128: aload_0
     129: getfield      #18                 // Field payloadType:Ljava/lang/Class;
     132: invokevirtual #38                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
     135: ifeq          145
     138: aload_2
     139: iload_3
     140: aload_1
     141: aastore
     142: goto          174
     145: aload_2
     146: iload_3
     147: aload_0
     148: getfield      #23                 // Field messageConverter:Lorg/springframework/messaging/converter/MessageConverter;
     151: aload_1
     152: aload_0
     153: getfield      #18                 // Field payloadType:Ljava/lang/Class;
     156: invokeinterface #43,  3           // InterfaceMethod org/springframework/messaging/converter/MessageConverter.fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
     161: aastore
     162: goto          174
     165: aload_2
     166: iload_3
     167: aload_1
     168: invokeinterface #40,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     173: aastore
     174: iinc          3, 1
     177: goto          11
     180: aload_2
     181: areturn

  private static boolean lambda$new$0(java.util.concurrent.atomic.AtomicReference, java.lang.reflect.Method);
    Code:
       0: aload_1
       1: invokevirtual #44                 // Method java/lang/reflect/Method.isBridge:()Z
       4: ifne          47
       7: aload_1
       8: invokevirtual #45                 // Method java/lang/reflect/Method.isDefault:()Z
      11: ifne          47
      14: aload_1
      15: invokevirtual #46                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      18: ldc           #36                 // class java/lang/Object
      20: if_acmpeq     47
      23: aload_1
      24: invokevirtual #47                 // Method java/lang/reflect/Method.getModifiers:()I
      27: invokestatic  #48                 // Method java/lang/reflect/Modifier.isPublic:(I)Z
      30: ifeq          47
      33: aload_1
      34: invokevirtual #47                 // Method java/lang/reflect/Method.getModifiers:()I
      37: invokestatic  #49                 // Method java/lang/reflect/Modifier.isStatic:(I)Z
      40: ifne          47
      43: iconst_1
      44: goto          48
      47: iconst_0
      48: istore_2
      49: iload_2
      50: ifeq          62
      53: aload_0
      54: invokevirtual #11                 // Method java/util/concurrent/atomic/AtomicReference.get:()Ljava/lang/Object;
      57: ldc           #12                 // String LambdaMessageProcessor is applicable for inline or lambda classes with single method - functional interface implementations.
      59: invokestatic  #50                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      62: iload_2
      63: ireturn

  static {};
    Code:
       0: ldc           #51                 // class org/springframework/integration/handler/LambdaMessageProcessor
       2: invokestatic  #52                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #29                 // Field logger:Lorg/apache/commons/logging/Log;
       8: return
}
