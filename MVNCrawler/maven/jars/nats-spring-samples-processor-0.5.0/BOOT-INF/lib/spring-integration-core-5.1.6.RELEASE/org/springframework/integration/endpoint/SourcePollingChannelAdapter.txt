Compiled from "SourcePollingChannelAdapter.java"
public class org.springframework.integration.endpoint.SourcePollingChannelAdapter extends org.springframework.integration.endpoint.AbstractPollingEndpoint implements org.springframework.integration.support.management.TrackableComponent {
  private final org.springframework.integration.core.MessagingTemplate messagingTemplate;

  private final java.util.Collection<org.aopalliance.aop.Advice> appliedAdvices;

  private volatile org.springframework.integration.core.MessageSource<?> originalSource;

  private volatile org.springframework.integration.core.MessageSource<?> source;

  private volatile org.springframework.messaging.MessageChannel outputChannel;

  private volatile java.lang.String outputChannelName;

  private volatile boolean shouldTrack;

  public org.springframework.integration.endpoint.SourcePollingChannelAdapter();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/endpoint/AbstractPollingEndpoint."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/integration/core/MessagingTemplate
       8: dup
       9: invokespecial #3                  // Method org/springframework/integration/core/MessagingTemplate."<init>":()V
      12: putfield      #4                  // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      15: aload_0
      16: new           #5                  // class java/util/HashSet
      19: dup
      20: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      23: putfield      #7                  // Field appliedAdvices:Ljava/util/Collection;
      26: return

  public void setSource(org.springframework.integration.core.MessageSource<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       5: aload_1
       6: invokestatic  #9                  // Method extractProxyTarget:(Ljava/lang/Object;)Ljava/lang/Object;
       9: astore_2
      10: aload_0
      11: aload_2
      12: ifnull        22
      15: aload_2
      16: checkcast     #10                 // class org/springframework/integration/core/MessageSource
      19: goto          23
      22: aload_1
      23: putfield      #11                 // Field originalSource:Lorg/springframework/integration/core/MessageSource;
      26: aload_1
      27: instanceof    #12                 // class org/springframework/integration/context/ExpressionCapable
      30: ifeq          46
      33: aload_0
      34: aload_1
      35: checkcast     #12                 // class org/springframework/integration/context/ExpressionCapable
      38: invokeinterface #13,  1           // InterfaceMethod org/springframework/integration/context/ExpressionCapable.getExpression:()Lorg/springframework/expression/Expression;
      43: invokevirtual #14                 // Method setPrimaryExpression:(Lorg/springframework/expression/Expression;)V
      46: return

  public void setOutputChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public org.springframework.integration.core.MessageSource<?> getMessageSource();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       4: areturn

  public void setOutputChannelName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String \'outputChannelName\' must not be empty
       3: invokestatic  #17                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #18                 // Field outputChannelName:Ljava/lang/String;
      11: return

  public void setSendTimeout(long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
       4: lload_1
       5: invokevirtual #19                 // Method org/springframework/integration/core/MessagingTemplate.setSendTimeout:(J)V
       8: return

  public void setShouldTrack(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #20                 // Field shouldTrack:Z
       5: return

  public java.lang.String getComponentType();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       4: instanceof    #21                 // class org/springframework/integration/support/context/NamedComponent
       7: ifeq          25
      10: aload_0
      11: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      14: checkcast     #21                 // class org/springframework/integration/support/context/NamedComponent
      17: invokeinterface #22,  1           // InterfaceMethod org/springframework/integration/support/context/NamedComponent.getComponentType:()Ljava/lang/String;
      22: goto          27
      25: ldc           #23                 // String inbound-channel-adapter
      27: areturn

  protected boolean isReceiveOnlyAdvice(org.aopalliance.aop.Advice);
    Code:
       0: aload_1
       1: instanceof    #24                 // class org/springframework/integration/aop/MessageSourceMutator
       4: ireturn

  protected void applyReceiveOnlyAdviceChain(java.util.Collection<org.aopalliance.aop.Advice>);
    Code:
       0: aload_1
       1: invokestatic  #25                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Collection;)Z
       4: ifne          195
       7: aload_0
       8: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      11: invokestatic  #26                 // Method org/springframework/aop/support/AopUtils.isAopProxy:(Ljava/lang/Object;)Z
      14: ifeq          66
      17: aload_0
      18: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      21: checkcast     #27                 // class org/springframework/aop/framework/Advised
      24: astore_2
      25: aload_0
      26: getfield      #7                  // Field appliedAdvices:Ljava/util/Collection;
      29: aload_2
      30: dup
      31: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      34: pop
      35: invokedynamic #29,  0             // InvokeDynamic #0:accept:(Lorg/springframework/aop/framework/Advised;)Ljava/util/function/Consumer;
      40: invokeinterface #30,  2           // InterfaceMethod java/util/Collection.forEach:(Ljava/util/function/Consumer;)V
      45: aload_1
      46: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      51: aload_0
      52: aload_2
      53: invokedynamic #32,  0             // InvokeDynamic #1:accept:(Lorg/springframework/integration/endpoint/SourcePollingChannelAdapter;Lorg/springframework/aop/framework/Advised;)Ljava/util/function/Consumer;
      58: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      63: goto          111
      66: new           #34                 // class org/springframework/aop/framework/ProxyFactory
      69: dup
      70: aload_0
      71: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      74: invokespecial #35                 // Method org/springframework/aop/framework/ProxyFactory."<init>":(Ljava/lang/Object;)V
      77: astore_2
      78: aload_1
      79: invokeinterface #31,  1           // InterfaceMethod java/util/Collection.stream:()Ljava/util/stream/Stream;
      84: aload_0
      85: aload_2
      86: invokedynamic #36,  0             // InvokeDynamic #2:accept:(Lorg/springframework/integration/endpoint/SourcePollingChannelAdapter;Lorg/springframework/aop/framework/ProxyFactory;)Ljava/util/function/Consumer;
      91: invokeinterface #33,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      96: aload_0
      97: aload_2
      98: aload_0
      99: invokevirtual #37                 // Method getBeanClassLoader:()Ljava/lang/ClassLoader;
     102: invokevirtual #38                 // Method org/springframework/aop/framework/ProxyFactory.getProxy:(Ljava/lang/ClassLoader;)Ljava/lang/Object;
     105: checkcast     #10                 // class org/springframework/integration/core/MessageSource
     108: putfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
     111: aload_0
     112: getfield      #7                  // Field appliedAdvices:Ljava/util/Collection;
     115: invokeinterface #39,  1           // InterfaceMethod java/util/Collection.clear:()V
     120: aload_0
     121: getfield      #7                  // Field appliedAdvices:Ljava/util/Collection;
     124: aload_1
     125: invokeinterface #40,  2           // InterfaceMethod java/util/Collection.addAll:(Ljava/util/Collection;)Z
     130: pop
     131: aload_0
     132: invokevirtual #41                 // Method isSyncExecutor:()Z
     135: ifne          195
     138: aload_0
     139: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     142: invokeinterface #43,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     147: ifeq          195
     150: aload_0
     151: getfield      #42                 // Field logger:Lorg/apache/commons/logging/Log;
     154: new           #44                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #45                 // Method java/lang/StringBuilder."<init>":()V
     161: aload_0
     162: invokevirtual #46                 // Method getComponentName:()Ljava/lang/String;
     165: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     168: ldc           #48                 // String : A task executor is supplied and
     170: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     173: aload_1
     174: invokeinterface #49,  1           // InterfaceMethod java/util/Collection.size:()I
     179: invokevirtual #50                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     182: ldc           #51                 // String MessageSourceMutator(s) is/are provided. If an advice mutates the source, such mutations are not thread safe and could cause unexpected results, especially with high frequency pollers. Consider using a downstream ExecutorChannel instead of adding an executor to the poller
     184: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     187: invokevirtual #52                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     190: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     195: return

  protected boolean isReactive();
    Code:
       0: aload_0
       1: invokevirtual #54                 // Method getOutputChannel:()Lorg/springframework/messaging/MessageChannel;
       4: instanceof    #55                 // class org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
       7: ireturn

  private org.springframework.aop.support.NameMatchMethodPointcutAdvisor adviceToReceiveAdvisor(org.aopalliance.aop.Advice);
    Code:
       0: new           #56                 // class org/springframework/aop/support/NameMatchMethodPointcutAdvisor
       3: dup
       4: aload_1
       5: invokespecial #57                 // Method org/springframework/aop/support/NameMatchMethodPointcutAdvisor."<init>":(Lorg/aopalliance/aop/Advice;)V
       8: astore_2
       9: aload_2
      10: ldc           #58                 // String receive
      12: invokevirtual #59                 // Method org/springframework/aop/support/NameMatchMethodPointcutAdvisor.addMethodName:(Ljava/lang/String;)Lorg/springframework/aop/support/NameMatchMethodPointcut;
      15: pop
      16: aload_2
      17: areturn

  protected void doStart();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       4: instanceof    #60                 // class org/springframework/context/Lifecycle
       7: ifeq          22
      10: aload_0
      11: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      14: checkcast     #60                 // class org/springframework/context/Lifecycle
      17: invokeinterface #61,  1           // InterfaceMethod org/springframework/context/Lifecycle.start:()V
      22: aload_0
      23: invokespecial #62                 // Method org/springframework/integration/endpoint/AbstractPollingEndpoint.doStart:()V
      26: aload_0
      27: invokevirtual #63                 // Method isReactive:()Z
      30: ifeq          49
      33: aload_0
      34: getfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
      37: checkcast     #55                 // class org/springframework/integration/channel/ReactiveStreamsSubscribableChannel
      40: aload_0
      41: invokevirtual #64                 // Method getPollingFlux:()Lreactor/core/publisher/Flux;
      44: invokeinterface #65,  2           // InterfaceMethod org/springframework/integration/channel/ReactiveStreamsSubscribableChannel.subscribeTo:(Lorg/reactivestreams/Publisher;)V
      49: return

  protected void doStop();
    Code:
       0: aload_0
       1: invokespecial #66                 // Method org/springframework/integration/endpoint/AbstractPollingEndpoint.doStop:()V
       4: aload_0
       5: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       8: instanceof    #60                 // class org/springframework/context/Lifecycle
      11: ifeq          26
      14: aload_0
      15: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
      18: checkcast     #60                 // class org/springframework/context/Lifecycle
      21: invokeinterface #67,  1           // InterfaceMethod org/springframework/context/Lifecycle.stop:()V
      26: return

  protected void onInit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       4: ldc           #68                 // String source must not be null
       6: invokestatic  #69                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       9: aload_0
      10: getfield      #18                 // Field outputChannelName:Ljava/lang/String;
      13: ifnonnull     23
      16: aload_0
      17: getfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
      20: ifnonnull     37
      23: aload_0
      24: getfield      #18                 // Field outputChannelName:Ljava/lang/String;
      27: ifnull        41
      30: aload_0
      31: getfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
      34: ifnonnull     41
      37: iconst_1
      38: goto          42
      41: iconst_0
      42: ldc           #70                 // String One and only one of \'outputChannelName\' or \'outputChannel\' is required.
      44: invokestatic  #71                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      47: aload_0
      48: invokespecial #72                 // Method org/springframework/integration/endpoint/AbstractPollingEndpoint.onInit:()V
      51: aload_0
      52: invokevirtual #73                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      55: ifnull        69
      58: aload_0
      59: getfield      #4                  // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      62: aload_0
      63: invokevirtual #73                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
      66: invokevirtual #74                 // Method org/springframework/integration/core/MessagingTemplate.setBeanFactory:(Lorg/springframework/beans/factory/BeanFactory;)V
      69: return

  public org.springframework.messaging.MessageChannel getOutputChannel();
    Code:
       0: aload_0
       1: getfield      #18                 // Field outputChannelName:Ljava/lang/String;
       4: ifnull        53
       7: aload_0
       8: dup
       9: astore_1
      10: monitorenter
      11: aload_0
      12: getfield      #18                 // Field outputChannelName:Ljava/lang/String;
      15: ifnull        43
      18: aload_0
      19: aload_0
      20: invokevirtual #75                 // Method getChannelResolver:()Lorg/springframework/messaging/core/DestinationResolver;
      23: aload_0
      24: getfield      #18                 // Field outputChannelName:Ljava/lang/String;
      27: invokeinterface #76,  2           // InterfaceMethod org/springframework/messaging/core/DestinationResolver.resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
      32: checkcast     #77                 // class org/springframework/messaging/MessageChannel
      35: putfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
      38: aload_0
      39: aconst_null
      40: putfield      #18                 // Field outputChannelName:Ljava/lang/String;
      43: aload_1
      44: monitorexit
      45: goto          53
      48: astore_2
      49: aload_1
      50: monitorexit
      51: aload_2
      52: athrow
      53: aload_0
      54: getfield      #15                 // Field outputChannel:Lorg/springframework/messaging/MessageChannel;
      57: areturn
    Exception table:
       from    to  target type
          11    45    48   any
          48    51    48   any

  protected void handleMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: astore_2
       2: aload_0
       3: getfield      #20                 // Field shouldTrack:Z
       6: ifeq          19
       9: aload_2
      10: aload_0
      11: aload_0
      12: invokevirtual #78                 // Method getMessageBuilderFactory:()Lorg/springframework/integration/support/MessageBuilderFactory;
      15: invokestatic  #79                 // Method org/springframework/integration/history/MessageHistory.write:(Lorg/springframework/messaging/Message;Lorg/springframework/integration/support/context/NamedComponent;Lorg/springframework/integration/support/MessageBuilderFactory;)Lorg/springframework/messaging/Message;
      18: astore_2
      19: aload_2
      20: invokestatic  #80                 // Method org/springframework/integration/StaticMessageHeaderAccessor.getAcknowledgmentCallback:(Lorg/springframework/messaging/Message;)Lorg/springframework/integration/acks/AcknowledgmentCallback;
      23: astore_3
      24: aload_0
      25: getfield      #4                  // Field messagingTemplate:Lorg/springframework/integration/core/MessagingTemplate;
      28: aload_0
      29: invokevirtual #54                 // Method getOutputChannel:()Lorg/springframework/messaging/MessageChannel;
      32: aload_2
      33: invokevirtual #81                 // Method org/springframework/integration/core/MessagingTemplate.send:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
      36: aload_3
      37: invokestatic  #82                 // Method org/springframework/integration/acks/AckUtils.autoAck:(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
      40: goto          76
      43: astore        4
      45: aload_3
      46: invokestatic  #84                 // Method org/springframework/integration/acks/AckUtils.autoNack:(Lorg/springframework/integration/acks/AcknowledgmentCallback;)V
      49: aload         4
      51: instanceof    #85                 // class org/springframework/messaging/MessagingException
      54: ifeq          63
      57: aload         4
      59: checkcast     #85                 // class org/springframework/messaging/MessagingException
      62: athrow
      63: new           #85                 // class org/springframework/messaging/MessagingException
      66: dup
      67: aload_2
      68: ldc           #86                 // String Failed to send Message
      70: aload         4
      72: invokespecial #87                 // Method org/springframework/messaging/MessagingException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;Ljava/lang/Throwable;)V
      75: athrow
      76: return
    Exception table:
       from    to  target type
          24    40    43   Class java/lang/Exception

  protected org.springframework.messaging.Message<?> receiveMessage();
    Code:
       0: aload_0
       1: getfield      #8                  // Field source:Lorg/springframework/integration/core/MessageSource;
       4: invokeinterface #88,  1           // InterfaceMethod org/springframework/integration/core/MessageSource.receive:()Lorg/springframework/messaging/Message;
       9: areturn

  protected java.lang.Object getResourceToBind();
    Code:
       0: aload_0
       1: getfield      #11                 // Field originalSource:Lorg/springframework/integration/core/MessageSource;
       4: areturn

  protected java.lang.String getResourceKey();
    Code:
       0: ldc           #90                 // String messageSource
       2: areturn

  private static java.lang.Object extractProxyTarget(java.lang.Object);
    Code:
       0: aload_0
       1: instanceof    #27                 // class org/springframework/aop/framework/Advised
       4: ifne          9
       7: aload_0
       8: areturn
       9: aload_0
      10: checkcast     #27                 // class org/springframework/aop/framework/Advised
      13: astore_1
      14: aload_1
      15: invokeinterface #91,  1           // InterfaceMethod org/springframework/aop/framework/Advised.getTargetSource:()Lorg/springframework/aop/TargetSource;
      20: invokeinterface #92,  1           // InterfaceMethod org/springframework/aop/TargetSource.getTarget:()Ljava/lang/Object;
      25: invokestatic  #9                  // Method extractProxyTarget:(Ljava/lang/Object;)Ljava/lang/Object;
      28: areturn
      29: astore_2
      30: new           #93                 // class org/springframework/beans/factory/BeanCreationException
      33: dup
      34: ldc           #94                 // String Could not extract target
      36: aload_2
      37: invokespecial #95                 // Method org/springframework/beans/factory/BeanCreationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      40: athrow
    Exception table:
       from    to  target type
          14    28    29   Class java/lang/Exception

  private void lambda$applyReceiveOnlyAdviceChain$1(org.springframework.aop.framework.ProxyFactory, org.aopalliance.aop.Advice);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokespecial #96                 // Method adviceToReceiveAdvisor:(Lorg/aopalliance/aop/Advice;)Lorg/springframework/aop/support/NameMatchMethodPointcutAdvisor;
       6: invokevirtual #97                 // Method org/springframework/aop/framework/ProxyFactory.addAdvisor:(Lorg/springframework/aop/Advisor;)V
       9: return

  private void lambda$applyReceiveOnlyAdviceChain$0(org.springframework.aop.framework.Advised, org.aopalliance.aop.Advice);
    Code:
       0: aload_1
       1: aload_0
       2: aload_2
       3: invokespecial #96                 // Method adviceToReceiveAdvisor:(Lorg/aopalliance/aop/Advice;)Lorg/springframework/aop/support/NameMatchMethodPointcutAdvisor;
       6: invokeinterface #98,  2           // InterfaceMethod org/springframework/aop/framework/Advised.addAdvisor:(Lorg/springframework/aop/Advisor;)V
      11: return
}
