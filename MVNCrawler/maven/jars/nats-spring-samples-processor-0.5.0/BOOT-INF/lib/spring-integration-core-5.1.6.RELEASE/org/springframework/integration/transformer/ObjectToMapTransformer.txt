Compiled from "ObjectToMapTransformer.java"
public class org.springframework.integration.transformer.ObjectToMapTransformer extends org.springframework.integration.transformer.AbstractPayloadTransformer<java.lang.Object, java.util.Map<?, ?>> {
  private final org.springframework.integration.support.json.JsonObjectMapper<?, ?> jsonObjectMapper;

  private volatile boolean shouldFlattenKeys;

  public org.springframework.integration.transformer.ObjectToMapTransformer();
    Code:
       0: aload_0
       1: invokestatic  #1                  // Method org/springframework/integration/support/json/JsonObjectMapperProvider.newInstance:()Lorg/springframework/integration/support/json/JsonObjectMapper;
       4: invokespecial #2                  // Method "<init>":(Lorg/springframework/integration/support/json/JsonObjectMapper;)V
       7: return

  public org.springframework.integration.transformer.ObjectToMapTransformer(org.springframework.integration.support.json.JsonObjectMapper<?, ?>);
    Code:
       0: aload_0
       1: invokespecial #3                  // Method org/springframework/integration/transformer/AbstractPayloadTransformer."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #4                  // Field shouldFlattenKeys:Z
       9: aload_1
      10: ldc           #5                  // String \'jsonObjectMapper\' must not be null
      12: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_0
      16: aload_1
      17: putfield      #7                  // Field jsonObjectMapper:Lorg/springframework/integration/support/json/JsonObjectMapper;
      20: return

  public void setShouldFlattenKeys(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #4                  // Field shouldFlattenKeys:Z
       5: return

  protected java.util.Map<java.lang.String, java.lang.Object> transformPayload(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #7                  // Field jsonObjectMapper:Lorg/springframework/integration/support/json/JsonObjectMapper;
       4: aload_0
       5: getfield      #7                  // Field jsonObjectMapper:Lorg/springframework/integration/support/json/JsonObjectMapper;
       8: aload_1
       9: invokeinterface #8,  2            // InterfaceMethod org/springframework/integration/support/json/JsonObjectMapper.toJson:(Ljava/lang/Object;)Ljava/lang/String;
      14: ldc           #9                  // class java/util/Map
      16: invokeinterface #10,  3           // InterfaceMethod org/springframework/integration/support/json/JsonObjectMapper.fromJson:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      21: checkcast     #9                  // class java/util/Map
      24: astore_2
      25: aload_0
      26: getfield      #4                  // Field shouldFlattenKeys:Z
      29: ifeq          38
      32: aload_0
      33: aload_2
      34: invokespecial #11                 // Method flattenMap:(Ljava/util/Map;)Ljava/util/Map;
      37: astore_2
      38: aload_2
      39: areturn

  public java.lang.String getComponentType();
    Code:
       0: ldc           #12                 // String object-to-map-transformer
       2: areturn

  private void doProcessElement(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_2
       1: instanceof    #9                  // class java/util/Map
       4: ifeq          20
       7: aload_0
       8: aload_1
       9: aload_2
      10: checkcast     #9                  // class java/util/Map
      13: aload_3
      14: invokespecial #13                 // Method doFlatten:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
      17: goto          80
      20: aload_2
      21: instanceof    #14                 // class java/util/Collection
      24: ifeq          40
      27: aload_0
      28: aload_1
      29: aload_2
      30: checkcast     #14                 // class java/util/Collection
      33: aload_3
      34: invokespecial #15                 // Method doProcessCollection:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Map;)V
      37: goto          80
      40: aload_2
      41: ifnull        71
      44: aload_2
      45: invokevirtual #16                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      48: invokevirtual #17                 // Method java/lang/Class.isArray:()Z
      51: ifeq          71
      54: aload_2
      55: invokestatic  #18                 // Method org/springframework/util/CollectionUtils.arrayToList:(Ljava/lang/Object;)Ljava/util/List;
      58: astore        4
      60: aload_0
      61: aload_1
      62: aload         4
      64: aload_3
      65: invokespecial #15                 // Method doProcessCollection:(Ljava/lang/String;Ljava/util/Collection;Ljava/util/Map;)V
      68: goto          80
      71: aload_3
      72: aload_1
      73: aload_2
      74: invokeinterface #19,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      79: pop
      80: return

  private java.util.Map<java.lang.String, java.lang.Object> flattenMap(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: new           #20                 // class java/util/HashMap
       3: dup
       4: invokespecial #21                 // Method java/util/HashMap."<init>":()V
       7: astore_2
       8: aload_0
       9: ldc           #22                 // String
      11: aload_1
      12: aload_2
      13: invokespecial #13                 // Method doFlatten:(Ljava/lang/String;Ljava/util/Map;Ljava/util/Map;)V
      16: aload_2
      17: areturn

  private void doFlatten(java.lang.String, java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: astore        4
       3: aload         4
       5: invokestatic  #23                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       8: ifeq          33
      11: new           #24                 // class java/lang/StringBuilder
      14: dup
      15: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      18: aload         4
      20: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #27                 // String .
      25: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: astore        4
      33: aload_2
      34: invokeinterface #29,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      39: invokeinterface #30,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      44: astore        5
      46: aload         5
      48: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      53: ifeq          111
      56: aload         5
      58: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      63: checkcast     #33                 // class java/util/Map$Entry
      66: astore        6
      68: aload_0
      69: new           #24                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      76: aload         4
      78: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload         6
      83: invokeinterface #34,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      88: checkcast     #35                 // class java/lang/String
      91: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: aload         6
      99: invokeinterface #36,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
     104: aload_3
     105: invokespecial #37                 // Method doProcessElement:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
     108: goto          46
     111: return

  private void doProcessCollection(java.lang.String, java.util.Collection<?>, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: iconst_0
       1: istore        4
       3: aload_2
       4: invokeinterface #38,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       9: astore        5
      11: aload         5
      13: invokeinterface #31,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          72
      21: aload         5
      23: invokeinterface #32,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      28: astore        6
      30: aload_0
      31: new           #24                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      38: aload_1
      39: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #39                 // String [
      44: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: iload         4
      49: invokevirtual #40                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      52: ldc           #41                 // String ]
      54: invokevirtual #26                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: aload         6
      62: aload_3
      63: invokespecial #37                 // Method doProcessElement:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;)V
      66: iinc          4, 1
      69: goto          11
      72: return

  protected java.lang.Object transformPayload(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method transformPayload:(Ljava/lang/Object;)Ljava/util/Map;
       5: areturn
}
