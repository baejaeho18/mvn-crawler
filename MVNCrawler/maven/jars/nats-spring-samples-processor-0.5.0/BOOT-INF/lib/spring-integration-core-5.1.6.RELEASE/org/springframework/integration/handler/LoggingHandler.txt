Compiled from "LoggingHandler.java"
public class org.springframework.integration.handler.LoggingHandler extends org.springframework.integration.handler.AbstractMessageHandler {
  private volatile org.springframework.integration.handler.LoggingHandler$Level level;

  private volatile boolean expressionSet;

  private volatile org.springframework.expression.Expression expression;

  private volatile org.springframework.expression.EvaluationContext evaluationContext;

  private volatile boolean shouldLogFullMessageSet;

  private volatile org.apache.commons.logging.Log messageLogger;

  public org.springframework.integration.handler.LoggingHandler(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #1                  // Method convertLevel:(Ljava/lang/String;)Lorg/springframework/integration/handler/LoggingHandler$Level;
       5: invokespecial #2                  // Method "<init>":(Lorg/springframework/integration/handler/LoggingHandler$Level;)V
       8: return

  private static org.springframework.integration.handler.LoggingHandler$Level convertLevel(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #3                  // String \'level\' cannot be empty
       3: invokestatic  #4                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: invokevirtual #5                  // Method java/lang/String.toUpperCase:()Ljava/lang/String;
      10: invokestatic  #6                  // Method org/springframework/integration/handler/LoggingHandler$Level.valueOf:(Ljava/lang/String;)Lorg/springframework/integration/handler/LoggingHandler$Level;
      13: areturn
      14: astore_1
      15: new           #7                  // class java/lang/IllegalArgumentException
      18: dup
      19: new           #8                  // class java/lang/StringBuilder
      22: dup
      23: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #10                 // String Invalid log level \'
      28: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: ldc           #12                 // String \'. The (case-insensitive) supported values are:
      37: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: invokestatic  #13                 // Method org/springframework/integration/handler/LoggingHandler$Level.values:()[Lorg/springframework/integration/handler/LoggingHandler$Level;
      43: invokestatic  #14                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      46: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #16                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
    Exception table:
       from    to  target type
           6    13    14   Class java/lang/IllegalArgumentException

  public org.springframework.integration.handler.LoggingHandler(org.springframework.integration.handler.LoggingHandler$Level);
    Code:
       0: aload_0
       1: invokespecial #17                 // Method org/springframework/integration/handler/AbstractMessageHandler."<init>":()V
       4: aload_0
       5: getstatic     #18                 // Field EXPRESSION_PARSER:Lorg/springframework/expression/ExpressionParser;
       8: ldc           #19                 // String payload
      10: invokeinterface #20,  2           // InterfaceMethod org/springframework/expression/ExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      15: putfield      #21                 // Field expression:Lorg/springframework/expression/Expression;
      18: aload_0
      19: invokestatic  #22                 // Method org/springframework/integration/expression/ExpressionUtils.createStandardEvaluationContext:()Lorg/springframework/expression/spel/support/StandardEvaluationContext;
      22: putfield      #23                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
      25: aload_0
      26: aload_0
      27: getfield      #24                 // Field logger:Lorg/apache/commons/logging/Log;
      30: putfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      33: aload_0
      34: aload_1
      35: invokespecial #26                 // Method doSetLevel:(Lorg/springframework/integration/handler/LoggingHandler$Level;)V
      38: return

  public void setLogExpressionString(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #27                 // String \'expressionString\' must not be empty
       3: invokestatic  #4                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: getstatic     #18                 // Field EXPRESSION_PARSER:Lorg/springframework/expression/ExpressionParser;
      10: aload_1
      11: invokeinterface #20,  2           // InterfaceMethod org/springframework/expression/ExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      16: invokevirtual #28                 // Method setLogExpression:(Lorg/springframework/expression/Expression;)V
      19: return

  public void setLogExpression(org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: getfield      #29                 // Field shouldLogFullMessageSet:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #30                 // String Cannot set both \'expression\' AND \'shouldLogFullMessage\' properties
      14: invokestatic  #31                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      17: aload_0
      18: iconst_1
      19: putfield      #32                 // Field expressionSet:Z
      22: aload_0
      23: aload_1
      24: putfield      #21                 // Field expression:Lorg/springframework/expression/Expression;
      27: return

  public org.springframework.integration.handler.LoggingHandler$Level getLevel();
    Code:
       0: aload_0
       1: getfield      #33                 // Field level:Lorg/springframework/integration/handler/LoggingHandler$Level;
       4: areturn

  public void setLevel(org.springframework.integration.handler.LoggingHandler$Level);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method doSetLevel:(Lorg/springframework/integration/handler/LoggingHandler$Level;)V
       5: return

  private void doSetLevel(org.springframework.integration.handler.LoggingHandler$Level);
    Code:
       0: aload_1
       1: ldc           #34                 // String \'level\' cannot be null
       3: invokestatic  #35                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #33                 // Field level:Lorg/springframework/integration/handler/LoggingHandler$Level;
      11: return

  public void setLoggerName(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #36                 // String loggerName must not be empty
       3: invokestatic  #4                  // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: invokestatic  #37                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/String;)Lorg/apache/commons/logging/Log;
      11: putfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      14: return

  public void setShouldLogFullMessage(boolean);
    Code:
       0: aload_0
       1: getfield      #32                 // Field expressionSet:Z
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #30                 // String Cannot set both \'expression\' AND \'shouldLogFullMessage\' properties
      14: invokestatic  #31                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      17: aload_0
      18: iconst_1
      19: putfield      #29                 // Field shouldLogFullMessageSet:Z
      22: aload_0
      23: iload_1
      24: ifeq          40
      27: getstatic     #18                 // Field EXPRESSION_PARSER:Lorg/springframework/expression/ExpressionParser;
      30: ldc           #38                 // String #root
      32: invokeinterface #20,  2           // InterfaceMethod org/springframework/expression/ExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      37: goto          50
      40: getstatic     #18                 // Field EXPRESSION_PARSER:Lorg/springframework/expression/ExpressionParser;
      43: ldc           #19                 // String payload
      45: invokeinterface #20,  2           // InterfaceMethod org/springframework/expression/ExpressionParser.parseExpression:(Ljava/lang/String;)Lorg/springframework/expression/Expression;
      50: putfield      #21                 // Field expression:Lorg/springframework/expression/Expression;
      53: return

  public java.lang.String getComponentType();
    Code:
       0: ldc           #39                 // String logging-channel-adapter
       2: areturn

  protected void onInit();
    Code:
       0: aload_0
       1: invokespecial #40                 // Method org/springframework/integration/handler/AbstractMessageHandler.onInit:()V
       4: aload_0
       5: aload_0
       6: invokevirtual #41                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
       9: invokestatic  #42                 // Method org/springframework/integration/expression/ExpressionUtils.createStandardEvaluationContext:(Lorg/springframework/beans/factory/BeanFactory;)Lorg/springframework/expression/spel/support/StandardEvaluationContext;
      12: putfield      #23                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
      15: return

  protected void handleMessageInternal(org.springframework.messaging.Message<?>) throws java.lang.Exception;
    Code:
       0: getstatic     #43                 // Field org/springframework/integration/handler/LoggingHandler$1.$SwitchMap$org$springframework$integration$handler$LoggingHandler$Level:[I
       3: aload_0
       4: getfield      #33                 // Field level:Lorg/springframework/integration/handler/LoggingHandler$Level;
       7: invokevirtual #44                 // Method org/springframework/integration/handler/LoggingHandler$Level.ordinal:()I
      10: iaload
      11: tableswitch   { // 1 to 6
                     1: 48
                     2: 77
                     3: 106
                     4: 135
                     5: 164
                     6: 193
               default: 222
          }
      48: aload_0
      49: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      52: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isFatalEnabled:()Z
      57: ifeq          257
      60: aload_0
      61: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      64: aload_0
      65: aload_1
      66: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      69: invokeinterface #47,  2           // InterfaceMethod org/apache/commons/logging/Log.fatal:(Ljava/lang/Object;)V
      74: goto          257
      77: aload_0
      78: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      81: invokeinterface #48,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
      86: ifeq          257
      89: aload_0
      90: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
      93: aload_0
      94: aload_1
      95: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      98: invokeinterface #49,  2           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     103: goto          257
     106: aload_0
     107: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     110: invokeinterface #50,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     115: ifeq          257
     118: aload_0
     119: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     122: aload_0
     123: aload_1
     124: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
     127: invokeinterface #51,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
     132: goto          257
     135: aload_0
     136: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     139: invokeinterface #52,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     144: ifeq          257
     147: aload_0
     148: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     151: aload_0
     152: aload_1
     153: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
     156: invokeinterface #53,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     161: goto          257
     164: aload_0
     165: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     168: invokeinterface #54,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     173: ifeq          257
     176: aload_0
     177: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     180: aload_0
     181: aload_1
     182: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
     185: invokeinterface #55,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     190: goto          257
     193: aload_0
     194: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     197: invokeinterface #56,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     202: ifeq          257
     205: aload_0
     206: getfield      #25                 // Field messageLogger:Lorg/apache/commons/logging/Log;
     209: aload_0
     210: aload_1
     211: invokespecial #46                 // Method createLogMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
     214: invokeinterface #57,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     219: goto          257
     222: new           #58                 // class java/lang/IllegalStateException
     225: dup
     226: new           #8                  // class java/lang/StringBuilder
     229: dup
     230: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     233: ldc           #59                 // String Level \'
     235: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     238: aload_0
     239: getfield      #33                 // Field level:Lorg/springframework/integration/handler/LoggingHandler$Level;
     242: invokevirtual #60                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     245: ldc           #61                 // String \' is not supported
     247: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     250: invokevirtual #15                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     253: invokespecial #62                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     256: athrow
     257: return

  private java.lang.Object createLogMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #21                 // Field expression:Lorg/springframework/expression/Expression;
       4: aload_0
       5: getfield      #23                 // Field evaluationContext:Lorg/springframework/expression/EvaluationContext;
       8: aload_1
       9: invokeinterface #63,  3           // InterfaceMethod org/springframework/expression/Expression.getValue:(Lorg/springframework/expression/EvaluationContext;Ljava/lang/Object;)Ljava/lang/Object;
      14: astore_2
      15: aload_2
      16: instanceof    #64                 // class java/lang/Throwable
      19: ifeq          33
      22: aload_0
      23: aload_2
      24: checkcast     #64                 // class java/lang/Throwable
      27: invokespecial #65                 // Method createLogMessage:(Ljava/lang/Throwable;)Ljava/lang/String;
      30: goto          34
      33: aload_2
      34: areturn

  private java.lang.String createLogMessage(java.lang.Throwable);
    Code:
       0: new           #66                 // class java/io/StringWriter
       3: dup
       4: invokespecial #67                 // Method java/io/StringWriter."<init>":()V
       7: astore_2
       8: aload_1
       9: instanceof    #68                 // class org/springframework/integration/dispatcher/AggregateMessageDeliveryException
      12: ifeq          70
      15: aload_2
      16: aload_1
      17: invokevirtual #69                 // Method java/lang/Throwable.getMessage:()Ljava/lang/String;
      20: invokevirtual #70                 // Method java/io/StringWriter.append:(Ljava/lang/CharSequence;)Ljava/io/StringWriter;
      23: pop
      24: aload_1
      25: checkcast     #68                 // class org/springframework/integration/dispatcher/AggregateMessageDeliveryException
      28: invokevirtual #71                 // Method org/springframework/integration/dispatcher/AggregateMessageDeliveryException.getAggregatedExceptions:()Ljava/util/List;
      31: invokeinterface #72,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      36: astore_3
      37: aload_3
      38: invokeinterface #73,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      43: ifeq          67
      46: aload_3
      47: invokeinterface #74,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      52: checkcast     #75                 // class java/lang/Exception
      55: astore        4
      57: aload_0
      58: aload         4
      60: aload_2
      61: invokespecial #76                 // Method printStackTrace:(Ljava/lang/Throwable;Ljava/io/Writer;)V
      64: goto          37
      67: goto          76
      70: aload_0
      71: aload_1
      72: aload_2
      73: invokespecial #76                 // Method printStackTrace:(Ljava/lang/Throwable;Ljava/io/Writer;)V
      76: aload_2
      77: invokevirtual #77                 // Method java/io/StringWriter.toString:()Ljava/lang/String;
      80: areturn

  private void printStackTrace(java.lang.Throwable, java.io.Writer);
    Code:
       0: aload_1
       1: new           #78                 // class java/io/PrintWriter
       4: dup
       5: aload_2
       6: iconst_1
       7: invokespecial #79                 // Method java/io/PrintWriter."<init>":(Ljava/io/Writer;Z)V
      10: invokevirtual #80                 // Method java/lang/Throwable.printStackTrace:(Ljava/io/PrintWriter;)V
      13: return
}
