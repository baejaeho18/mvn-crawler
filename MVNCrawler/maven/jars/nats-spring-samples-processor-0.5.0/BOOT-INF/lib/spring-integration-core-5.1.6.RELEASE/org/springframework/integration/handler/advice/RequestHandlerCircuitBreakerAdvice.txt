Compiled from "RequestHandlerCircuitBreakerAdvice.java"
public class org.springframework.integration.handler.advice.RequestHandlerCircuitBreakerAdvice extends org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice {
  private volatile int threshold;

  private volatile long halfOpenAfter;

  private final java.util.concurrent.ConcurrentMap<java.lang.Object, org.springframework.integration.handler.advice.RequestHandlerCircuitBreakerAdvice$AdvisedMetadata> metadataMap;

  public org.springframework.integration.handler.advice.RequestHandlerCircuitBreakerAdvice();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice."<init>":()V
       4: aload_0
       5: iconst_5
       6: putfield      #2                  // Field threshold:I
       9: aload_0
      10: ldc2_w        #3                  // long 1000l
      13: putfield      #5                  // Field halfOpenAfter:J
      16: aload_0
      17: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      20: dup
      21: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      24: putfield      #8                  // Field metadataMap:Ljava/util/concurrent/ConcurrentMap;
      27: return

  public void setThreshold(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field threshold:I
       5: return

  public void setHalfOpenAfter(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field halfOpenAfter:J
       5: return

  protected java.lang.Object doInvoke(org.springframework.integration.handler.advice.AbstractRequestHandlerAdvice$ExecutionCallback, java.lang.Object, org.springframework.messaging.Message<?>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field metadataMap:Ljava/util/concurrent/ConcurrentMap;
       4: aload_2
       5: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata
      13: astore        4
      15: aload         4
      17: ifnonnull     53
      20: aload_0
      21: getfield      #8                  // Field metadataMap:Ljava/util/concurrent/ConcurrentMap;
      24: aload_2
      25: new           #10                 // class org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata
      28: dup
      29: invokespecial #11                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata."<init>":()V
      32: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      37: pop
      38: aload_0
      39: getfield      #8                  // Field metadataMap:Ljava/util/concurrent/ConcurrentMap;
      42: aload_2
      43: invokeinterface #9,  2            // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      48: checkcast     #10                 // class org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata
      51: astore        4
      53: aload         4
      55: invokestatic  #13                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$000:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;)Ljava/util/concurrent/atomic/AtomicInteger;
      58: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
      61: aload_0
      62: getfield      #2                  // Field threshold:I
      65: if_icmplt     113
      68: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
      71: aload         4
      73: invokestatic  #16                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$100:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;)J
      76: lsub
      77: aload_0
      78: getfield      #5                  // Field halfOpenAfter:J
      81: lcmp
      82: ifge          113
      85: new           #17                 // class org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$CircuitBreakerOpenException
      88: dup
      89: aload_3
      90: new           #18                 // class java/lang/StringBuilder
      93: dup
      94: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
      97: ldc           #20                 // String Circuit Breaker is Open for
      99: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_2
     103: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     109: invokespecial #24                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$CircuitBreakerOpenException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/String;)V
     112: athrow
     113: aload_1
     114: invokeinterface #25,  1           // InterfaceMethod org/springframework/integration/handler/advice/AbstractRequestHandlerAdvice$ExecutionCallback.execute:()Ljava/lang/Object;
     119: astore        5
     121: aload_0
     122: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     125: invokeinterface #27,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     130: ifeq          172
     133: aload         4
     135: invokestatic  #13                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$000:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;)Ljava/util/concurrent/atomic/AtomicInteger;
     138: invokevirtual #14                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
     141: ifle          172
     144: aload_0
     145: getfield      #26                 // Field logger:Lorg/apache/commons/logging/Log;
     148: new           #18                 // class java/lang/StringBuilder
     151: dup
     152: invokespecial #19                 // Method java/lang/StringBuilder."<init>":()V
     155: ldc           #28                 // String Closing Circuit Breaker for
     157: invokevirtual #21                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     160: aload_2
     161: invokevirtual #22                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     164: invokevirtual #23                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     167: invokeinterface #29,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     172: aload         4
     174: invokestatic  #13                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$000:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;)Ljava/util/concurrent/atomic/AtomicInteger;
     177: iconst_0
     178: invokevirtual #30                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
     181: aload         5
     183: areturn
     184: astore        5
     186: aload         4
     188: invokestatic  #13                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$000:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;)Ljava/util/concurrent/atomic/AtomicInteger;
     191: invokevirtual #32                 // Method java/util/concurrent/atomic/AtomicInteger.incrementAndGet:()I
     194: pop
     195: aload         4
     197: invokestatic  #15                 // Method java/lang/System.currentTimeMillis:()J
     200: invokestatic  #33                 // Method org/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata.access$200:(Lorg/springframework/integration/handler/advice/RequestHandlerCircuitBreakerAdvice$AdvisedMetadata;J)V
     203: aload_0
     204: aload         5
     206: invokevirtual #34                 // Method unwrapExceptionIfNecessary:(Ljava/lang/Exception;)Ljava/lang/Exception;
     209: athrow
    Exception table:
       from    to  target type
         113   183   184   Class java/lang/Exception
}
