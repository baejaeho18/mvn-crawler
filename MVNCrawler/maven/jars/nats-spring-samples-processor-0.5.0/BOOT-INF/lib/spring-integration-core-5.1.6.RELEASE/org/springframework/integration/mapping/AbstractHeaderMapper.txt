Compiled from "AbstractHeaderMapper.java"
public abstract class org.springframework.integration.mapping.AbstractHeaderMapper<T> implements org.springframework.integration.mapping.RequestReplyHeaderMapper<T> {
  public static final java.lang.String STANDARD_REQUEST_HEADER_NAME_PATTERN;

  public static final java.lang.String STANDARD_REPLY_HEADER_NAME_PATTERN;

  public static final java.lang.String NON_STANDARD_HEADER_NAME_PATTERN;

  private static final java.util.Collection<java.lang.String> TRANSIENT_HEADER_NAMES;

  protected final org.apache.commons.logging.Log logger;

  private final java.lang.String standardHeaderPrefix;

  private final java.util.Collection<java.lang.String> requestHeaderNames;

  private final java.util.Collection<java.lang.String> replyHeaderNames;

  private volatile org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher requestHeaderMatcher;

  private volatile org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher replyHeaderMatcher;

  protected org.springframework.integration.mapping.AbstractHeaderMapper(java.lang.String, java.util.Collection<java.lang.String>, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_0
       6: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       9: invokestatic  #3                  // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
      12: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field standardHeaderPrefix:Ljava/lang/String;
      20: aload_0
      21: aload_2
      22: putfield      #6                  // Field requestHeaderNames:Ljava/util/Collection;
      25: aload_0
      26: aload_3
      27: putfield      #7                  // Field replyHeaderNames:Ljava/util/Collection;
      30: aload_0
      31: aload_0
      32: aload_0
      33: getfield      #5                  // Field standardHeaderPrefix:Ljava/lang/String;
      36: aload_0
      37: getfield      #6                  // Field requestHeaderNames:Ljava/util/Collection;
      40: invokevirtual #8                  // Method createDefaultHeaderMatcher:(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      43: putfield      #9                  // Field requestHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      46: aload_0
      47: aload_0
      48: aload_0
      49: getfield      #5                  // Field standardHeaderPrefix:Ljava/lang/String;
      52: aload_0
      53: getfield      #7                  // Field replyHeaderNames:Ljava/util/Collection;
      56: invokevirtual #8                  // Method createDefaultHeaderMatcher:(Ljava/lang/String;Ljava/util/Collection;)Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      59: putfield      #10                 // Field replyHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      62: return

  public void setRequestHeaderNames(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #11                 // String \'requestHeaderNames\' must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #14                 // Method createHeaderMatcher:(Ljava/util/Collection;)Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      15: putfield      #9                  // Field requestHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      18: return

  public void setReplyHeaderNames(java.lang.String...);
    Code:
       0: aload_1
       1: ldc           #15                 // String \'replyHeaderNames\' must not be null
       3: invokestatic  #12                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_0
       8: aload_1
       9: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokevirtual #14                 // Method createHeaderMatcher:(Ljava/util/Collection;)Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      15: putfield      #10                 // Field replyHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
      18: return

  protected org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher createDefaultHeaderMatcher(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: new           #16                 // class org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher
       3: dup
       4: iconst_1
       5: aload_2
       6: invokespecial #17                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher."<init>":(ZLjava/util/Collection;)V
       9: areturn

  protected org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher createHeaderMatcher(java.util.Collection<java.lang.String>);
    Code:
       0: new           #18                 // class java/util/ArrayList
       3: dup
       4: invokespecial #19                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_1
       9: invokeinterface #20,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      14: astore_3
      15: aload_3
      16: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          227
      24: aload_3
      25: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #23                 // class java/lang/String
      33: astore        4
      35: ldc           #25                 // String STANDARD_REQUEST_HEADERS
      37: aload         4
      39: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      42: ifeq          67
      45: aload_2
      46: new           #16                 // class org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher
      49: dup
      50: iconst_1
      51: aload_0
      52: getfield      #6                  // Field requestHeaderNames:Ljava/util/Collection;
      55: invokespecial #17                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher."<init>":(ZLjava/util/Collection;)V
      58: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      63: pop
      64: goto          224
      67: ldc           #28                 // String STANDARD_REPLY_HEADERS
      69: aload         4
      71: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      74: ifeq          99
      77: aload_2
      78: new           #16                 // class org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher
      81: dup
      82: iconst_1
      83: aload_0
      84: getfield      #7                  // Field replyHeaderNames:Ljava/util/Collection;
      87: invokespecial #17                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$ContentBasedHeaderMatcher."<init>":(ZLjava/util/Collection;)V
      90: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      95: pop
      96: goto          224
      99: ldc           #29                 // String NON_STANDARD_HEADERS
     101: aload         4
     103: invokevirtual #26                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
     106: ifeq          131
     109: aload_2
     110: new           #30                 // class org/springframework/integration/mapping/AbstractHeaderMapper$PrefixBasedMatcher
     113: dup
     114: iconst_0
     115: aload_0
     116: getfield      #5                  // Field standardHeaderPrefix:Ljava/lang/String;
     119: invokespecial #31                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$PrefixBasedMatcher."<init>":(ZLjava/lang/String;)V
     122: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     127: pop
     128: goto          224
     131: aload         4
     133: astore        5
     135: iconst_0
     136: istore        6
     138: aload         4
     140: ldc           #32                 // String !
     142: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     145: ifeq          162
     148: aload         4
     150: iconst_1
     151: invokevirtual #34                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     154: astore        5
     156: iconst_1
     157: istore        6
     159: goto          180
     162: aload         4
     164: ldc           #35                 // String \\!
     166: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
     169: ifeq          180
     172: aload         4
     174: iconst_1
     175: invokevirtual #34                 // Method java/lang/String.substring:(I)Ljava/lang/String;
     178: astore        5
     180: iload         6
     182: ifeq          206
     185: aload_2
     186: iconst_0
     187: new           #36                 // class org/springframework/integration/mapping/AbstractHeaderMapper$SinglePatternBasedHeaderMatcher
     190: dup
     191: aload         5
     193: iload         6
     195: invokespecial #37                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$SinglePatternBasedHeaderMatcher."<init>":(Ljava/lang/String;Z)V
     198: invokeinterface #38,  3           // InterfaceMethod java/util/List.add:(ILjava/lang/Object;)V
     203: goto          224
     206: aload_2
     207: new           #36                 // class org/springframework/integration/mapping/AbstractHeaderMapper$SinglePatternBasedHeaderMatcher
     210: dup
     211: aload         5
     213: iload         6
     215: invokespecial #37                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$SinglePatternBasedHeaderMatcher."<init>":(Ljava/lang/String;Z)V
     218: invokeinterface #27,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     223: pop
     224: goto          15
     227: new           #39                 // class org/springframework/integration/mapping/AbstractHeaderMapper$CompositeHeaderMatcher
     230: dup
     231: aload_2
     232: invokespecial #40                 // Method org/springframework/integration/mapping/AbstractHeaderMapper$CompositeHeaderMatcher."<init>":(Ljava/util/Collection;)V
     235: areturn

  public void fromHeadersToRequest(org.springframework.messaging.MessageHeaders, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #9                  // Field requestHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
       7: invokespecial #41                 // Method fromHeaders:(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)V
      10: return

  public void fromHeadersToReply(org.springframework.messaging.MessageHeaders, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_0
       4: getfield      #10                 // Field replyHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
       7: invokespecial #41                 // Method fromHeaders:(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Object;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)V
      10: return

  public java.util.Map<java.lang.String, java.lang.Object> toHeadersFromRequest(T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #9                  // Field requestHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
       6: invokespecial #42                 // Method toHeaders:(Ljava/lang/Object;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)Ljava/util/Map;
       9: areturn

  public java.util.Map<java.lang.String, java.lang.Object> toHeadersFromReply(T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_0
       3: getfield      #10                 // Field replyHeaderMatcher:Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;
       6: invokespecial #42                 // Method toHeaders:(Ljava/lang/Object;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)Ljava/util/Map;
       9: areturn

  private void fromHeaders(org.springframework.messaging.MessageHeaders, T, org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher);
    Code:
       0: new           #43                 // class java/util/HashMap
       3: dup
       4: invokespecial #44                 // Method java/util/HashMap."<init>":()V
       7: astore        4
       9: aload_1
      10: invokevirtual #45                 // Method org/springframework/messaging/MessageHeaders.entrySet:()Ljava/util/Set;
      13: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore        5
      20: aload         5
      22: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          84
      30: aload         5
      32: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #47                 // class java/util/Map$Entry
      40: astore        6
      42: aload         6
      44: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      49: checkcast     #23                 // class java/lang/String
      52: astore        7
      54: aload_0
      55: aload         7
      57: aload_3
      58: invokespecial #49                 // Method shouldMapHeader:(Ljava/lang/String;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)Z
      61: ifeq          81
      64: aload         4
      66: aload         7
      68: aload         6
      70: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      75: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      80: pop
      81: goto          20
      84: aload_0
      85: aload_1
      86: aload         4
      88: aload_2
      89: invokevirtual #52                 // Method populateStandardHeaders:(Ljava/util/Map;Ljava/util/Map;Ljava/lang/Object;)V
      92: aload_0
      93: aload         4
      95: aload_2
      96: invokespecial #53                 // Method populateUserDefinedHeaders:(Ljava/util/Map;Ljava/lang/Object;)V
      99: goto          129
     102: astore        4
     104: aload_0
     105: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     108: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     113: ifeq          129
     116: aload_0
     117: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     120: ldc           #56                 // String error occurred while mapping from MessageHeaders
     122: aload         4
     124: invokeinterface #57,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     129: return
    Exception table:
       from    to  target type
           0    99   102   Class java/lang/Exception

  private void populateUserDefinedHeaders(java.util.Map<java.lang.String, java.lang.Object>, T);
    Code:
       0: aload_1
       1: invokeinterface #58,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       6: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      11: astore_3
      12: aload_3
      13: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      18: ifeq          155
      21: aload_3
      22: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      27: checkcast     #47                 // class java/util/Map$Entry
      30: astore        4
      32: aload         4
      34: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      39: checkcast     #23                 // class java/lang/String
      42: astore        5
      44: aload         4
      46: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      51: astore        6
      53: aload         6
      55: ifnull        152
      58: aload_0
      59: aload         5
      61: aload         6
      63: invokespecial #59                 // Method isMessageChannel:(Ljava/lang/String;Ljava/lang/Object;)Z
      66: ifne          152
      69: aload         5
      71: aload_0
      72: getfield      #5                  // Field standardHeaderPrefix:Ljava/lang/String;
      75: invokevirtual #33                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      78: ifne          99
      81: aload_0
      82: aload         5
      84: iconst_1
      85: invokevirtual #60                 // Method createTargetPropertyName:(Ljava/lang/String;Z)Ljava/lang/String;
      88: astore        7
      90: aload_0
      91: aload         7
      93: aload         6
      95: aload_2
      96: invokevirtual #61                 // Method populateUserDefinedHeader:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      99: goto          152
     102: astore        7
     104: aload_0
     105: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     108: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
     113: ifeq          152
     116: aload_0
     117: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     120: new           #62                 // class java/lang/StringBuilder
     123: dup
     124: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
     127: ldc           #64                 // String failed to map from Message header \'
     129: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: aload         5
     134: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     137: ldc           #66                 // String \' to target
     139: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     142: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     145: aload         7
     147: invokeinterface #57,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     152: goto          12
     155: return
    Exception table:
       from    to  target type
          69    99   102   Class java/lang/Exception

  private boolean isMessageChannel(java.lang.String, java.lang.Object);
    Code:
       0: aload_2
       1: instanceof    #68                 // class org/springframework/messaging/MessageChannel
       4: ifeq          49
       7: aload_0
       8: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: invokeinterface #69,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      16: ifeq          47
      19: aload_0
      20: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      23: new           #62                 // class java/lang/StringBuilder
      26: dup
      27: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      30: ldc           #70                 // String Cannot map a MessageChannel instance in header
      32: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      35: aload_1
      36: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      42: invokeinterface #71,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      47: iconst_1
      48: ireturn
      49: iconst_0
      50: ireturn

  private java.util.Map<java.lang.String, java.lang.Object> toHeaders(T, org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher);
    Code:
       0: new           #43                 // class java/util/HashMap
       3: dup
       4: invokespecial #44                 // Method java/util/HashMap."<init>":()V
       7: astore_3
       8: aload_0
       9: aload_1
      10: invokevirtual #72                 // Method extractStandardHeaders:(Ljava/lang/Object;)Ljava/util/Map;
      13: astore        4
      15: aload_0
      16: aload         4
      18: aload_3
      19: aload_2
      20: invokespecial #73                 // Method copyHeaders:(Ljava/util/Map;Ljava/util/Map;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)V
      23: aload_0
      24: aload_1
      25: invokevirtual #74                 // Method extractUserDefinedHeaders:(Ljava/lang/Object;)Ljava/util/Map;
      28: astore        5
      30: aload_0
      31: aload         5
      33: aload_3
      34: aload_2
      35: invokespecial #73                 // Method copyHeaders:(Ljava/util/Map;Ljava/util/Map;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)V
      38: aload_3
      39: areturn

  private <V> void copyHeaders(java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>, org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher);
    Code:
       0: aload_1
       1: invokestatic  #75                 // Method org/springframework/util/CollectionUtils.isEmpty:(Ljava/util/Map;)Z
       4: ifne          149
       7: aload_1
       8: invokeinterface #58,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      13: invokeinterface #46,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore        4
      20: aload         4
      22: invokeinterface #21,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          149
      30: aload         4
      32: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      37: checkcast     #47                 // class java/util/Map$Entry
      40: astore        5
      42: aload_0
      43: aload         5
      45: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      50: checkcast     #23                 // class java/lang/String
      53: iconst_0
      54: invokevirtual #60                 // Method createTargetPropertyName:(Ljava/lang/String;Z)Ljava/lang/String;
      57: astore        6
      59: aload_0
      60: aload         6
      62: aload_3
      63: invokespecial #49                 // Method shouldMapHeader:(Ljava/lang/String;Lorg/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher;)Z
      66: ifeq          85
      69: aload_2
      70: aload         6
      72: aload         5
      74: invokeinterface #50,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      79: invokeinterface #51,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          146
      88: astore        6
      90: aload_0
      91: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      94: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      99: ifeq          146
     102: aload_0
     103: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
     106: new           #62                 // class java/lang/StringBuilder
     109: dup
     110: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
     113: ldc           #76                 // String error occurred while mapping header \'
     115: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     118: aload         5
     120: invokeinterface #48,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
     125: checkcast     #23                 // class java/lang/String
     128: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #77                 // String \' to Message header
     133: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: aload         6
     141: invokeinterface #57,  3           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     146: goto          20
     149: return
    Exception table:
       from    to  target type
          42    85    88   Class java/lang/Exception

  private boolean shouldMapHeader(java.lang.String, org.springframework.integration.mapping.AbstractHeaderMapper$HeaderMatcher);
    Code:
       0: aload_1
       1: invokestatic  #78                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          34
       7: aload_0
       8: invokevirtual #79                 // Method getTransientHeaderNames:()Ljava/util/Collection;
      11: aload_1
      12: invokeinterface #80,  2           // InterfaceMethod java/util/Collection.contains:(Ljava/lang/Object;)Z
      17: ifne          34
      20: aload_2
      21: aload_1
      22: invokeinterface #81,  2           // InterfaceMethod org/springframework/integration/mapping/AbstractHeaderMapper$HeaderMatcher.matchHeader:(Ljava/lang/String;)Z
      27: ifeq          34
      30: iconst_1
      31: goto          35
      34: iconst_0
      35: ireturn

  protected <V> V getHeaderIfAvailable(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String, java.lang.Class<V>);
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #82,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore        4
       9: aload         4
      11: ifnonnull     16
      14: aconst_null
      15: areturn
      16: aload_3
      17: aload         4
      19: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      22: invokevirtual #83                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      25: ifne          97
      28: aload_0
      29: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      32: invokeinterface #55,  1           // InterfaceMethod org/apache/commons/logging/Log.isWarnEnabled:()Z
      37: ifeq          95
      40: aload_0
      41: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      44: new           #62                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #63                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #84                 // String skipping header \'
      53: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload_2
      57: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: ldc           #85                 // String \' since it is not of expected type [
      62: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      65: aload_3
      66: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      69: ldc           #87                 // String ], it is [
      71: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: aload         4
      76: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
      79: invokevirtual #86                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      82: ldc           #88                 // String ]
      84: invokevirtual #65                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #67                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokeinterface #89,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      95: aconst_null
      96: areturn
      97: aload         4
      99: areturn

  protected java.lang.String createTargetPropertyName(java.lang.String, boolean);
    Code:
       0: aload_1
       1: areturn

  protected java.util.Collection<java.lang.String> getTransientHeaderNames();
    Code:
       0: getstatic     #90                 // Field TRANSIENT_HEADER_NAMES:Ljava/util/Collection;
       3: areturn

  protected abstract java.util.Map<java.lang.String, java.lang.Object> extractStandardHeaders(T);

  protected abstract java.util.Map<java.lang.String, java.lang.Object> extractUserDefinedHeaders(T);

  protected abstract void populateStandardHeaders(java.util.Map<java.lang.String, java.lang.Object>, T);

  protected void populateStandardHeaders(java.util.Map<java.lang.String, java.lang.Object>, java.util.Map<java.lang.String, java.lang.Object>, T);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokevirtual #91                 // Method populateStandardHeaders:(Ljava/util/Map;Ljava/lang/Object;)V
       6: return

  protected abstract void populateUserDefinedHeader(java.lang.String, java.lang.Object, T);

  static {};
    Code:
       0: iconst_2
       1: anewarray     #23                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #93                 // String id
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #94                 // String timestamp
      13: aastore
      14: invokestatic  #13                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      17: putstatic     #90                 // Field TRANSIENT_HEADER_NAMES:Ljava/util/Collection;
      20: return
}
