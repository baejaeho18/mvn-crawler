Compiled from "DefaultMessageChannelMetrics.java"
public class org.springframework.integration.support.management.DefaultMessageChannelMetrics extends org.springframework.integration.support.management.AbstractMessageChannelMetrics {
  public static final long ONE_SECOND_SECONDS;

  public static final long ONE_MINUTE_SECONDS;

  public static final int DEFAULT_MOVING_AVERAGE_WINDOW;

  protected final org.springframework.integration.support.management.ExponentialMovingAverage sendDuration;

  protected final org.springframework.integration.support.management.ExponentialMovingAverageRate sendErrorRate;

  protected final org.springframework.integration.support.management.ExponentialMovingAverageRatio sendSuccessRatio;

  protected final org.springframework.integration.support.management.ExponentialMovingAverageRate sendRate;

  protected final java.util.concurrent.atomic.AtomicLong sendCount;

  protected final java.util.concurrent.atomic.AtomicLong sendErrorCount;

  protected final java.util.concurrent.atomic.AtomicLong receiveCount;

  protected final java.util.concurrent.atomic.AtomicLong receiveErrorCount;

  public org.springframework.integration.support.management.DefaultMessageChannelMetrics();
    Code:
       0: aload_0
       1: aconst_null
       2: invokespecial #1                  // Method "<init>":(Ljava/lang/String;)V
       5: return

  public org.springframework.integration.support.management.DefaultMessageChannelMetrics(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: new           #2                  // class org/springframework/integration/support/management/ExponentialMovingAverage
       5: dup
       6: bipush        10
       8: ldc2_w        #4                  // double 1000000.0d
      11: invokespecial #6                  // Method org/springframework/integration/support/management/ExponentialMovingAverage."<init>":(ID)V
      14: new           #7                  // class org/springframework/integration/support/management/ExponentialMovingAverageRate
      17: dup
      18: dconst_1
      19: ldc2_w        #8                  // double 60.0d
      22: bipush        10
      24: iconst_1
      25: invokespecial #10                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate."<init>":(DDIZ)V
      28: new           #11                 // class org/springframework/integration/support/management/ExponentialMovingAverageRatio
      31: dup
      32: ldc2_w        #8                  // double 60.0d
      35: bipush        10
      37: iconst_1
      38: invokespecial #12                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRatio."<init>":(DIZ)V
      41: new           #7                  // class org/springframework/integration/support/management/ExponentialMovingAverageRate
      44: dup
      45: dconst_1
      46: ldc2_w        #8                  // double 60.0d
      49: bipush        10
      51: iconst_1
      52: invokespecial #10                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate."<init>":(DDIZ)V
      55: invokespecial #13                 // Method "<init>":(Ljava/lang/String;Lorg/springframework/integration/support/management/ExponentialMovingAverage;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;)V
      58: return

  public org.springframework.integration.support.management.DefaultMessageChannelMetrics(java.lang.String, org.springframework.integration.support.management.ExponentialMovingAverage, org.springframework.integration.support.management.ExponentialMovingAverageRate, org.springframework.integration.support.management.ExponentialMovingAverageRatio, org.springframework.integration.support.management.ExponentialMovingAverageRate);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #14                 // Method org/springframework/integration/support/management/AbstractMessageChannelMetrics."<init>":(Ljava/lang/String;)V
       5: aload_0
       6: new           #15                 // class java/util/concurrent/atomic/AtomicLong
       9: dup
      10: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      13: putfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: aload_0
      17: new           #15                 // class java/util/concurrent/atomic/AtomicLong
      20: dup
      21: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      24: putfield      #18                 // Field sendErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
      27: aload_0
      28: new           #15                 // class java/util/concurrent/atomic/AtomicLong
      31: dup
      32: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      35: putfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
      38: aload_0
      39: new           #15                 // class java/util/concurrent/atomic/AtomicLong
      42: dup
      43: invokespecial #16                 // Method java/util/concurrent/atomic/AtomicLong."<init>":()V
      46: putfield      #20                 // Field receiveErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
      49: aload_0
      50: aload_2
      51: putfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      54: aload_0
      55: aload_3
      56: putfield      #22                 // Field sendErrorRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      59: aload_0
      60: aload         4
      62: putfield      #23                 // Field sendSuccessRatio:Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;
      65: aload_0
      66: aload         5
      68: putfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      71: return

  public void destroy();
    Code:
       0: aload_0
       1: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #26,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          25
      12: aload_0
      13: getfield      #25                 // Field logger:Lorg/apache/commons/logging/Log;
      16: aload_0
      17: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      20: invokeinterface #27,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      25: return

  public org.springframework.integration.support.management.MetricsContext beforeSend();
    Code:
       0: lconst_0
       1: lstore_1
       2: aload_0
       3: invokevirtual #28                 // Method isFullStatsEnabled:()Z
       6: ifeq          21
       9: invokestatic  #29                 // Method java/lang/System.nanoTime:()J
      12: lstore_1
      13: aload_0
      14: getfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      17: lload_1
      18: invokevirtual #30                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.increment:(J)V
      21: aload_0
      22: getfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
      25: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      28: pop2
      29: new           #32                 // class org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext
      32: dup
      33: lload_1
      34: invokespecial #33                 // Method org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext."<init>":(J)V
      37: areturn

  public void afterSend(org.springframework.integration.support.management.MetricsContext, boolean);
    Code:
       0: iload_2
       1: ifeq          43
       4: aload_0
       5: invokevirtual #28                 // Method isFullStatsEnabled:()Z
       8: ifeq          78
      11: invokestatic  #29                 // Method java/lang/System.nanoTime:()J
      14: lstore_3
      15: aload_0
      16: getfield      #23                 // Field sendSuccessRatio:Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;
      19: lload_3
      20: invokevirtual #34                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRatio.success:(J)V
      23: aload_0
      24: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
      27: lload_3
      28: aload_1
      29: checkcast     #32                 // class org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext
      32: getfield      #35                 // Field org/springframework/integration/support/management/DefaultMessageChannelMetrics$DefaultChannelMetricsContext.start:J
      35: lsub
      36: l2d
      37: invokevirtual #36                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.append:(D)V
      40: goto          78
      43: aload_0
      44: invokevirtual #28                 // Method isFullStatsEnabled:()Z
      47: ifeq          70
      50: invokestatic  #29                 // Method java/lang/System.nanoTime:()J
      53: lstore_3
      54: aload_0
      55: getfield      #23                 // Field sendSuccessRatio:Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;
      58: lload_3
      59: invokevirtual #37                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRatio.failure:(J)V
      62: aload_0
      63: getfield      #22                 // Field sendErrorRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      66: lload_3
      67: invokevirtual #30                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.increment:(J)V
      70: aload_0
      71: getfield      #18                 // Field sendErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
      74: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
      77: pop2
      78: return

  public synchronized void reset();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #38                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.reset:()V
       7: aload_0
       8: getfield      #22                 // Field sendErrorRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      11: invokevirtual #39                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.reset:()V
      14: aload_0
      15: getfield      #23                 // Field sendSuccessRatio:Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;
      18: invokevirtual #40                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRatio.reset:()V
      21: aload_0
      22: getfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
      25: invokevirtual #39                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.reset:()V
      28: aload_0
      29: getfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
      32: lconst_0
      33: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      36: aload_0
      37: getfield      #18                 // Field sendErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
      40: lconst_0
      41: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      44: aload_0
      45: getfield      #20                 // Field receiveErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
      48: lconst_0
      49: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      52: aload_0
      53: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
      56: lconst_0
      57: invokevirtual #41                 // Method java/util/concurrent/atomic/AtomicLong.set:(J)V
      60: return

  public int getSendCount();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getSendCountLong();
    Code:
       0: aload_0
       1: getfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public int getSendErrorCount();
    Code:
       0: aload_0
       1: getfield      #18                 // Field sendErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getSendErrorCountLong();
    Code:
       0: aload_0
       1: getfield      #18                 // Field sendErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public double getTimeSinceLastSend();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
       4: invokevirtual #43                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.getTimeSinceLastMeasurement:()D
       7: dreturn

  public double getMeanSendRate();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
       4: invokevirtual #44                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.getMean:()D
       7: dreturn

  public double getMeanErrorRate();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sendErrorRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
       4: invokevirtual #44                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.getMean:()D
       7: dreturn

  public double getMeanErrorRatio();
    Code:
       0: dconst_1
       1: aload_0
       2: getfield      #23                 // Field sendSuccessRatio:Lorg/springframework/integration/support/management/ExponentialMovingAverageRatio;
       5: invokevirtual #45                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRatio.getMean:()D
       8: dsub
       9: dreturn

  public double getMeanSendDuration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #46                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMean:()D
       7: dreturn

  public double getMinSendDuration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #47                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMin:()D
       7: dreturn

  public double getMaxSendDuration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #48                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getMax:()D
       7: dreturn

  public double getStandardDeviationSendDuration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #49                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getStandardDeviation:()D
       7: dreturn

  public org.springframework.integration.support.management.Statistics getSendDuration();
    Code:
       0: aload_0
       1: getfield      #21                 // Field sendDuration:Lorg/springframework/integration/support/management/ExponentialMovingAverage;
       4: invokevirtual #50                 // Method org/springframework/integration/support/management/ExponentialMovingAverage.getStatistics:()Lorg/springframework/integration/support/management/Statistics;
       7: areturn

  public org.springframework.integration.support.management.Statistics getSendRate();
    Code:
       0: aload_0
       1: getfield      #24                 // Field sendRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
       4: invokevirtual #51                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.getStatistics:()Lorg/springframework/integration/support/management/Statistics;
       7: areturn

  public org.springframework.integration.support.management.Statistics getErrorRate();
    Code:
       0: aload_0
       1: getfield      #22                 // Field sendErrorRate:Lorg/springframework/integration/support/management/ExponentialMovingAverageRate;
       4: invokevirtual #51                 // Method org/springframework/integration/support/management/ExponentialMovingAverageRate.getStatistics:()Lorg/springframework/integration/support/management/Statistics;
       7: areturn

  public void afterReceive();
    Code:
       0: aload_0
       1: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public void afterError();
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
       7: pop2
       8: return

  public int getReceiveCount();
    Code:
       0: aload_0
       1: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getReceiveCountLong();
    Code:
       0: aload_0
       1: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public int getReceiveErrorCount();
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: l2i
       8: ireturn

  public long getReceiveErrorCountLong();
    Code:
       0: aload_0
       1: getfield      #20                 // Field receiveErrorCount:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  public java.lang.String toString();
    Code:
       0: new           #52                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #53                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #54                 // String MessageChannelMonitor: [name=%s, sends=%d
       9: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
      16: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      19: lconst_0
      20: lcmp
      21: ifne          29
      24: ldc           #56                 // String
      26: goto          39
      29: aload_0
      30: getfield      #19                 // Field receiveCount:Ljava/util/concurrent/atomic/AtomicLong;
      33: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      36: invokestatic  #57                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      39: invokevirtual #58                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      42: ldc           #59                 // String ]
      44: invokevirtual #55                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: invokevirtual #60                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      50: iconst_2
      51: anewarray     #61                 // class java/lang/Object
      54: dup
      55: iconst_0
      56: aload_0
      57: getfield      #62                 // Field name:Ljava/lang/String;
      60: aastore
      61: dup
      62: iconst_1
      63: aload_0
      64: getfield      #17                 // Field sendCount:Ljava/util/concurrent/atomic/AtomicLong;
      67: invokevirtual #42                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
      70: invokestatic  #57                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      73: aastore
      74: invokestatic  #63                 // Method java/lang/String.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      77: areturn
}
