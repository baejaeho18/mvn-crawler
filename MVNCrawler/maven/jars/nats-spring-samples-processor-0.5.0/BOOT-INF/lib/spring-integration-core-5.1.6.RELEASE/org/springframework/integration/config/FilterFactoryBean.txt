Compiled from "FilterFactoryBean.java"
public class org.springframework.integration.config.FilterFactoryBean extends org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean {
  private volatile org.springframework.messaging.MessageChannel discardChannel;

  private volatile java.lang.Boolean throwExceptionOnRejection;

  private volatile java.lang.Boolean discardWithinAdvice;

  public org.springframework.integration.config.FilterFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean."<init>":()V
       4: return

  public void setDiscardChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field discardChannel:Lorg/springframework/messaging/MessageChannel;
       5: return

  public void setThrowExceptionOnRejection(java.lang.Boolean);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #3                  // Field throwExceptionOnRejection:Ljava/lang/Boolean;
       5: return

  public void setDiscardWithinAdvice(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #4                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #5                  // Field discardWithinAdvice:Ljava/lang/Boolean;
       8: return

  protected org.springframework.messaging.MessageHandler createMethodInvokingHandler(java.lang.Object, java.lang.String);
    Code:
       0: aconst_null
       1: astore_3
       2: aload_1
       3: instanceof    #6                  // class org/springframework/integration/core/MessageSelector
       6: ifeq          17
       9: aload_1
      10: checkcast     #6                  // class org/springframework/integration/core/MessageSelector
      13: astore_3
      14: goto          52
      17: aload_2
      18: invokestatic  #7                  // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      21: ifeq          43
      24: aload_0
      25: aload_1
      26: aload_2
      27: invokevirtual #8                  // Method checkForIllegalTarget:(Ljava/lang/Object;Ljava/lang/String;)V
      30: new           #9                  // class org/springframework/integration/filter/MethodInvokingSelector
      33: dup
      34: aload_1
      35: aload_2
      36: invokespecial #10                 // Method org/springframework/integration/filter/MethodInvokingSelector."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      39: astore_3
      40: goto          52
      43: new           #9                  // class org/springframework/integration/filter/MethodInvokingSelector
      46: dup
      47: aload_1
      48: invokespecial #11                 // Method org/springframework/integration/filter/MethodInvokingSelector."<init>":(Ljava/lang/Object;)V
      51: astore_3
      52: aload_0
      53: aload_3
      54: invokevirtual #12                 // Method createFilter:(Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/filter/MessageFilter;
      57: areturn

  protected void checkForIllegalTarget(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: instanceof    #13                 // class org/springframework/integration/handler/AbstractReplyProducingMessageHandler
       4: ifeq          25
       7: aload_0
       8: aload_2
       9: invokevirtual #14                 // Method methodIsHandleMessageOrEmpty:(Ljava/lang/String;)Z
      12: ifeq          25
      15: new           #15                 // class java/lang/IllegalArgumentException
      18: dup
      19: ldc           #16                 // String You cannot use \'AbstractReplyProducingMessageHandler.handleMessage()\' as a filter - it does not return a result
      21: invokespecial #17                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      24: athrow
      25: return

  protected org.springframework.messaging.MessageHandler createExpressionEvaluatingHandler(org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: new           #18                 // class org/springframework/integration/filter/ExpressionEvaluatingSelector
       4: dup
       5: aload_1
       6: invokespecial #19                 // Method org/springframework/integration/filter/ExpressionEvaluatingSelector."<init>":(Lorg/springframework/expression/Expression;)V
       9: invokevirtual #12                 // Method createFilter:(Lorg/springframework/integration/core/MessageSelector;)Lorg/springframework/integration/filter/MessageFilter;
      12: areturn

  protected org.springframework.integration.filter.MessageFilter createFilter(org.springframework.integration.core.MessageSelector);
    Code:
       0: new           #20                 // class org/springframework/integration/filter/MessageFilter
       3: dup
       4: aload_1
       5: invokespecial #21                 // Method org/springframework/integration/filter/MessageFilter."<init>":(Lorg/springframework/integration/core/MessageSelector;)V
       8: astore_2
       9: aload_0
      10: aload_2
      11: invokevirtual #22                 // Method postProcessReplyProducer:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
      14: aload_2
      15: areturn

  protected void postProcessFilter(org.springframework.integration.filter.MessageFilter);
    Code:
       0: aload_0
       1: getfield      #3                  // Field throwExceptionOnRejection:Ljava/lang/Boolean;
       4: ifnull        18
       7: aload_1
       8: aload_0
       9: getfield      #3                  // Field throwExceptionOnRejection:Ljava/lang/Boolean;
      12: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      15: invokevirtual #24                 // Method org/springframework/integration/filter/MessageFilter.setThrowExceptionOnRejection:(Z)V
      18: aload_0
      19: getfield      #2                  // Field discardChannel:Lorg/springframework/messaging/MessageChannel;
      22: ifnull        33
      25: aload_1
      26: aload_0
      27: getfield      #2                  // Field discardChannel:Lorg/springframework/messaging/MessageChannel;
      30: invokevirtual #25                 // Method org/springframework/integration/filter/MessageFilter.setDiscardChannel:(Lorg/springframework/messaging/MessageChannel;)V
      33: aload_0
      34: getfield      #5                  // Field discardWithinAdvice:Ljava/lang/Boolean;
      37: ifnull        51
      40: aload_1
      41: aload_0
      42: getfield      #5                  // Field discardWithinAdvice:Ljava/lang/Boolean;
      45: invokevirtual #23                 // Method java/lang/Boolean.booleanValue:()Z
      48: invokevirtual #26                 // Method org/springframework/integration/filter/MessageFilter.setDiscardWithinAdvice:(Z)V
      51: return

  protected void postProcessReplyProducer(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean.postProcessReplyProducer:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
       5: aload_1
       6: instanceof    #20                 // class org/springframework/integration/filter/MessageFilter
       9: ifne          42
      12: aload_0
      13: getfield      #3                  // Field throwExceptionOnRejection:Ljava/lang/Boolean;
      16: ldc           #28                 // String Cannot set throwExceptionOnRejection if the referenced bean is an AbstractReplyProducingMessageHandler, but not a MessageFilter
      18: invokestatic  #29                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: getfield      #2                  // Field discardChannel:Lorg/springframework/messaging/MessageChannel;
      25: ldc           #30                 // String Cannot set discardChannel if the referenced bean is an AbstractReplyProducingMessageHandler, but not a MessageFilter
      27: invokestatic  #29                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: aload_0
      31: getfield      #5                  // Field discardWithinAdvice:Ljava/lang/Boolean;
      34: ldc           #31                 // String Cannot set discardWithinAdvice if the referenced bean is an AbstractReplyProducingMessageHandler, but not a MessageFilter
      36: invokestatic  #29                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      39: goto          50
      42: aload_0
      43: aload_1
      44: checkcast     #20                 // class org/springframework/integration/filter/MessageFilter
      47: invokevirtual #32                 // Method postProcessFilter:(Lorg/springframework/integration/filter/MessageFilter;)V
      50: return

  protected boolean canBeUsedDirect(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_1
       1: instanceof    #20                 // class org/springframework/integration/filter/MessageFilter
       4: ifne          35
       7: aload_1
       8: instanceof    #6                  // class org/springframework/integration/core/MessageSelector
      11: ifne          39
      14: aload_0
      15: getfield      #2                  // Field discardChannel:Lorg/springframework/messaging/MessageChannel;
      18: ifnonnull     39
      21: aload_0
      22: getfield      #3                  // Field throwExceptionOnRejection:Ljava/lang/Boolean;
      25: ifnonnull     39
      28: aload_0
      29: getfield      #5                  // Field discardWithinAdvice:Ljava/lang/Boolean;
      32: ifnonnull     39
      35: iconst_1
      36: goto          40
      39: iconst_0
      40: ireturn

  protected java.lang.Class<? extends org.springframework.messaging.MessageHandler> getPreCreationHandlerType();
    Code:
       0: ldc           #20                 // class org/springframework/integration/filter/MessageFilter
       2: areturn
}
