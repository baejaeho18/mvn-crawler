Compiled from "MicrometerMetricsCaptor.java"
public class org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroGaugeBuilder implements org.springframework.integration.support.management.metrics.MetricsCaptor$GaugeBuilder {
  protected final io.micrometer.core.instrument.MeterRegistry meterRegistry;

  private final io.micrometer.core.instrument.Gauge$Builder<java.lang.Object> builder;

  protected org.springframework.integration.support.management.micrometer.MicrometerMetricsCaptor$MicroGaugeBuilder(io.micrometer.core.instrument.MeterRegistry, java.lang.String, java.lang.Object, java.util.function.ToDoubleFunction<java.lang.Object>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
       9: aload_0
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokestatic  #3                  // InterfaceMethod io/micrometer/core/instrument/Gauge.builder:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/function/ToDoubleFunction;)Lio/micrometer/core/instrument/Gauge$Builder;
      17: putfield      #4                  // Field builder:Lio/micrometer/core/instrument/Gauge$Builder;
      20: return

  public org.springframework.integration.support.management.metrics.MetricsCaptor$GaugeBuilder tag(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Gauge$Builder;
       4: aload_1
       5: aload_2
       6: invokevirtual #5                  // Method io/micrometer/core/instrument/Gauge$Builder.tag:(Ljava/lang/String;Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
       9: pop
      10: aload_0
      11: areturn

  public org.springframework.integration.support.management.metrics.MetricsCaptor$GaugeBuilder description(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Gauge$Builder;
       4: aload_1
       5: invokevirtual #6                  // Method io/micrometer/core/instrument/Gauge$Builder.description:(Ljava/lang/String;)Lio/micrometer/core/instrument/Gauge$Builder;
       8: pop
       9: aload_0
      10: areturn

  public org.springframework.integration.support.management.metrics.GaugeFacade build();
    Code:
       0: new           #7                  // class org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroGauge
       3: dup
       4: aload_0
       5: getfield      #4                  // Field builder:Lio/micrometer/core/instrument/Gauge$Builder;
       8: aload_0
       9: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      12: invokevirtual #8                  // Method io/micrometer/core/instrument/Gauge$Builder.register:(Lio/micrometer/core/instrument/MeterRegistry;)Lio/micrometer/core/instrument/Gauge;
      15: aload_0
      16: getfield      #2                  // Field meterRegistry:Lio/micrometer/core/instrument/MeterRegistry;
      19: invokespecial #9                  // Method org/springframework/integration/support/management/micrometer/MicrometerMetricsCaptor$MicroGauge."<init>":(Lio/micrometer/core/instrument/Gauge;Lio/micrometer/core/instrument/MeterRegistry;)V
      22: areturn
}
