Compiled from "SplitterFactoryBean.java"
public class org.springframework.integration.config.SplitterFactoryBean extends org.springframework.integration.config.AbstractStandardMessageHandlerFactoryBean {
  private java.lang.Boolean applySequence;

  private java.lang.String delimiters;

  public org.springframework.integration.config.SplitterFactoryBean();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean."<init>":()V
       4: return

  public void setApplySequence(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: putfield      #3                  // Field applySequence:Ljava/lang/Boolean;
       8: return

  public void setDelimiters(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field delimiters:Ljava/lang/String;
       5: return

  protected org.springframework.messaging.MessageHandler createMethodInvokingHandler(java.lang.Object, java.lang.String);
    Code:
       0: aload_1
       1: ldc           #5                  // String targetObject must not be null
       3: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
       9: invokestatic  #8                  // Method org/springframework/integration/context/IntegrationObjectSupport.extractTypeIfPossible:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: checkcast     #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
      15: astore_3
      16: aload_3
      17: ifnonnull     42
      20: aload_0
      21: aload_1
      22: aload_2
      23: invokevirtual #9                  // Method checkForIllegalTarget:(Ljava/lang/Object;Ljava/lang/String;)V
      26: aload_0
      27: aload_1
      28: aload_2
      29: invokevirtual #10                 // Method createMethodInvokingSplitter:(Ljava/lang/Object;Ljava/lang/String;)Lorg/springframework/integration/splitter/AbstractMessageSplitter;
      32: astore_3
      33: aload_0
      34: aload_3
      35: invokevirtual #11                 // Method configureSplitter:(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/splitter/AbstractMessageSplitter;
      38: pop
      39: goto          77
      42: aload_2
      43: invokestatic  #12                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      46: ifne          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ldc           #13                 // String target method should not be provided when the target object is an implementation of AbstractMessageSplitter
      56: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      59: aload_0
      60: aload_3
      61: invokevirtual #11                 // Method configureSplitter:(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/splitter/AbstractMessageSplitter;
      64: pop
      65: aload_1
      66: instanceof    #15                 // class org/springframework/messaging/MessageHandler
      69: ifeq          77
      72: aload_1
      73: checkcast     #15                 // class org/springframework/messaging/MessageHandler
      76: areturn
      77: aload_3
      78: areturn

  protected org.springframework.integration.splitter.AbstractMessageSplitter createMethodInvokingSplitter(java.lang.Object, java.lang.String);
    Code:
       0: aload_2
       1: invokestatic  #12                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
       4: ifeq          19
       7: new           #16                 // class org/springframework/integration/splitter/MethodInvokingSplitter
      10: dup
      11: aload_1
      12: aload_2
      13: invokespecial #17                 // Method org/springframework/integration/splitter/MethodInvokingSplitter."<init>":(Ljava/lang/Object;Ljava/lang/String;)V
      16: goto          27
      19: new           #16                 // class org/springframework/integration/splitter/MethodInvokingSplitter
      22: dup
      23: aload_1
      24: invokespecial #18                 // Method org/springframework/integration/splitter/MethodInvokingSplitter."<init>":(Ljava/lang/Object;)V
      27: areturn

  protected org.springframework.messaging.MessageHandler createExpressionEvaluatingHandler(org.springframework.expression.Expression);
    Code:
       0: aload_0
       1: new           #19                 // class org/springframework/integration/splitter/ExpressionEvaluatingSplitter
       4: dup
       5: aload_1
       6: invokespecial #20                 // Method org/springframework/integration/splitter/ExpressionEvaluatingSplitter."<init>":(Lorg/springframework/expression/Expression;)V
       9: invokevirtual #11                 // Method configureSplitter:(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/splitter/AbstractMessageSplitter;
      12: areturn

  protected org.springframework.messaging.MessageHandler createDefaultHandler();
    Code:
       0: aload_0
       1: new           #21                 // class org/springframework/integration/splitter/DefaultMessageSplitter
       4: dup
       5: invokespecial #22                 // Method org/springframework/integration/splitter/DefaultMessageSplitter."<init>":()V
       8: invokevirtual #11                 // Method configureSplitter:(Lorg/springframework/integration/splitter/AbstractMessageSplitter;)Lorg/springframework/integration/splitter/AbstractMessageSplitter;
      11: areturn

  protected org.springframework.integration.splitter.AbstractMessageSplitter configureSplitter(org.springframework.integration.splitter.AbstractMessageSplitter);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #23                 // Method postProcessReplyProducer:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
       5: aload_1
       6: areturn

  protected boolean canBeUsedDirect(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_1
       1: instanceof    #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
       4: ifne          21
       7: aload_0
       8: getfield      #3                  // Field applySequence:Ljava/lang/Boolean;
      11: ifnonnull     25
      14: aload_0
      15: getfield      #4                  // Field delimiters:Ljava/lang/String;
      18: ifnonnull     25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ireturn

  protected void postProcessReplyProducer(org.springframework.integration.handler.AbstractMessageProducingHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #24                 // Method org/springframework/integration/config/AbstractStandardMessageHandlerFactoryBean.postProcessReplyProducer:(Lorg/springframework/integration/handler/AbstractMessageProducingHandler;)V
       5: aload_1
       6: instanceof    #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
       9: ifne          33
      12: aload_0
      13: getfield      #3                  // Field applySequence:Ljava/lang/Boolean;
      16: ldc           #25                 // String Cannot set applySequence if the referenced bean is an AbstractReplyProducingMessageHandler, but not an AbstractMessageSplitter
      18: invokestatic  #26                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: getfield      #4                  // Field delimiters:Ljava/lang/String;
      25: ldc           #27                 // String Cannot set delimiters if the referenced bean is not an an AbstractReplyProducingMessageHandler, but not an AbstractMessageSplitter
      27: invokestatic  #26                 // Method org/springframework/util/Assert.isNull:(Ljava/lang/Object;Ljava/lang/String;)V
      30: goto          82
      33: aload_1
      34: checkcast     #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
      37: astore_2
      38: aload_0
      39: getfield      #4                  // Field delimiters:Ljava/lang/String;
      42: ifnull        64
      45: ldc           #21                 // class org/springframework/integration/splitter/DefaultMessageSplitter
      47: aload_2
      48: ldc           #28                 // String The \'delimiters\' property is only available for a Splitter definition where no \'ref\', \'expression\', or inner bean has been provided.
      50: invokestatic  #29                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      53: aload_2
      54: checkcast     #21                 // class org/springframework/integration/splitter/DefaultMessageSplitter
      57: aload_0
      58: getfield      #4                  // Field delimiters:Ljava/lang/String;
      61: invokevirtual #30                 // Method org/springframework/integration/splitter/DefaultMessageSplitter.setDelimiters:(Ljava/lang/String;)V
      64: aload_0
      65: getfield      #3                  // Field applySequence:Ljava/lang/Boolean;
      68: ifnull        82
      71: aload_2
      72: aload_0
      73: getfield      #3                  // Field applySequence:Ljava/lang/Boolean;
      76: invokevirtual #31                 // Method java/lang/Boolean.booleanValue:()Z
      79: invokevirtual #32                 // Method org/springframework/integration/splitter/AbstractMessageSplitter.setApplySequence:(Z)V
      82: return

  protected java.lang.Class<? extends org.springframework.messaging.MessageHandler> getPreCreationHandlerType();
    Code:
       0: ldc           #7                  // class org/springframework/integration/splitter/AbstractMessageSplitter
       2: areturn
}
