Compiled from "BoonJsonObjectMapper.java"
public class org.springframework.integration.support.json.BoonJsonObjectMapper extends org.springframework.integration.support.json.JsonObjectMapperAdapter<java.util.Map<java.lang.String, java.lang.Object>, java.lang.Object> implements org.springframework.beans.factory.BeanClassLoaderAware {
  private static final org.apache.commons.logging.Log logger;

  private static final java.util.Collection<java.lang.Class<?>> supportedJsonTypes;

  private final org.boon.json.ObjectMapper objectMapper;

  private final org.boon.json.JsonSlurper slurper;

  private volatile java.lang.ClassLoader classLoader;

  public org.springframework.integration.support.json.BoonJsonObjectMapper();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/support/json/JsonObjectMapperAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/boon/json/JsonSlurper
       8: dup
       9: invokespecial #3                  // Method org/boon/json/JsonSlurper."<init>":()V
      12: putfield      #4                  // Field slurper:Lorg/boon/json/JsonSlurper;
      15: aload_0
      16: invokestatic  #5                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      19: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      22: aload_0
      23: invokestatic  #7                  // Method org/boon/json/JsonFactory.create:()Lorg/boon/json/ObjectMapper;
      26: putfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      29: return

  public org.springframework.integration.support.json.BoonJsonObjectMapper(org.boon.json.JsonParserFactory, org.boon.json.JsonSerializerFactory);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/support/json/JsonObjectMapperAdapter."<init>":()V
       4: aload_0
       5: new           #2                  // class org/boon/json/JsonSlurper
       8: dup
       9: invokespecial #3                  // Method org/boon/json/JsonSlurper."<init>":()V
      12: putfield      #4                  // Field slurper:Lorg/boon/json/JsonSlurper;
      15: aload_0
      16: invokestatic  #5                  // Method org/springframework/util/ClassUtils.getDefaultClassLoader:()Ljava/lang/ClassLoader;
      19: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      22: aload_0
      23: aload_1
      24: aload_2
      25: invokestatic  #9                  // Method org/boon/json/JsonFactory.create:(Lorg/boon/json/JsonParserFactory;Lorg/boon/json/JsonSerializerFactory;)Lorg/boon/json/ObjectMapper;
      28: putfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      31: return

  public void setBeanClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
       5: return

  public java.lang.String toJson(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
       4: aload_1
       5: invokeinterface #10,  2           // InterfaceMethod org/boon/json/ObjectMapper.writeValueAsString:(Ljava/lang/Object;)Ljava/lang/String;
      10: areturn

  public void toJson(java.lang.Object, java.io.Writer);
    Code:
       0: aload_0
       1: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
       4: aload_1
       5: aload_2
       6: invokeinterface #11,  3           // InterfaceMethod org/boon/json/ObjectMapper.toJson:(Ljava/lang/Object;Ljava/lang/Appendable;)V
      11: return

  public java.util.Map<java.lang.String, java.lang.Object> toJsonNode(java.lang.Object) throws java.lang.Exception;
    Code:
       0: new           #12                 // class java/io/PipedReader
       3: dup
       4: invokespecial #13                 // Method java/io/PipedReader."<init>":()V
       7: astore_2
       8: new           #14                 // class java/io/PipedWriter
      11: dup
      12: aload_2
      13: invokespecial #15                 // Method java/io/PipedWriter."<init>":(Ljava/io/PipedReader;)V
      16: astore_3
      17: invokestatic  #16                 // Method java/util/concurrent/Executors.newSingleThreadExecutor:()Ljava/util/concurrent/ExecutorService;
      20: aload_0
      21: aload_1
      22: aload_3
      23: invokedynamic #17,  0             // InvokeDynamic #0:run:(Lorg/springframework/integration/support/json/BoonJsonObjectMapper;Ljava/lang/Object;Ljava/io/PipedWriter;)Ljava/lang/Runnable;
      28: invokeinterface #18,  2           // InterfaceMethod java/util/concurrent/ExecutorService.execute:(Ljava/lang/Runnable;)V
      33: aload_0
      34: getfield      #4                  // Field slurper:Lorg/boon/json/JsonSlurper;
      37: aload_2
      38: invokevirtual #19                 // Method org/boon/json/JsonSlurper.parse:(Ljava/io/Reader;)Ljava/lang/Object;
      41: checkcast     #20                 // class java/util/Map
      44: areturn

  public <T> T fromJson(java.lang.Object, java.lang.Class<T>) throws java.lang.Exception;
    Code:
       0: aload_1
       1: instanceof    #21                 // class java/lang/String
       4: ifeq          22
       7: aload_0
       8: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      11: aload_1
      12: checkcast     #21                 // class java/lang/String
      15: aload_2
      16: invokeinterface #22,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      21: areturn
      22: aload_1
      23: instanceof    #23                 // class "[B"
      26: ifeq          47
      29: aload_0
      30: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      33: aload_1
      34: checkcast     #23                 // class "[B"
      37: checkcast     #23                 // class "[B"
      40: aload_2
      41: invokeinterface #24,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:([BLjava/lang/Class;)Ljava/lang/Object;
      46: areturn
      47: aload_1
      48: instanceof    #25                 // class "[C"
      51: ifeq          72
      54: aload_0
      55: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      58: aload_1
      59: checkcast     #25                 // class "[C"
      62: checkcast     #25                 // class "[C"
      65: aload_2
      66: invokeinterface #26,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:([CLjava/lang/Class;)Ljava/lang/Object;
      71: areturn
      72: aload_1
      73: instanceof    #27                 // class java/io/File
      76: ifeq          94
      79: aload_0
      80: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
      83: aload_1
      84: checkcast     #27                 // class java/io/File
      87: aload_2
      88: invokeinterface #28,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/File;Ljava/lang/Class;)Ljava/lang/Object;
      93: areturn
      94: aload_1
      95: instanceof    #29                 // class java/io/InputStream
      98: ifeq          116
     101: aload_0
     102: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     105: aload_1
     106: checkcast     #29                 // class java/io/InputStream
     109: aload_2
     110: invokeinterface #30,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/InputStream;Ljava/lang/Class;)Ljava/lang/Object;
     115: areturn
     116: aload_1
     117: instanceof    #31                 // class java/io/Reader
     120: ifeq          138
     123: aload_0
     124: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     127: aload_1
     128: checkcast     #31                 // class java/io/Reader
     131: aload_2
     132: invokeinterface #32,  3           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/Reader;Ljava/lang/Class;)Ljava/lang/Object;
     137: areturn
     138: new           #33                 // class java/lang/IllegalArgumentException
     141: dup
     142: new           #34                 // class java/lang/StringBuilder
     145: dup
     146: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     149: ldc           #36                 // String \'json\' argument must be an instance of:
     151: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: getstatic     #38                 // Field supportedJsonTypes:Ljava/util/Collection;
     157: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     160: ldc           #40                 // String  , but gotten:
     162: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     165: aload_1
     166: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     169: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     172: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     175: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     178: athrow

  public <T> T fromJson(java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
       4: invokeinterface #44,  1           // InterfaceMethod org/boon/json/ObjectMapper.parser:()Lorg/boon/json/JsonParserAndMapper;
       9: astore_3
      10: aload_0
      11: aload_2
      12: ldc           #46                 // String json__TypeId__
      14: invokevirtual #47                 // Method createJavaType:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Class;
      17: astore        4
      19: aload_0
      20: aload_2
      21: ldc           #48                 // String json__ContentTypeId__
      23: invokevirtual #47                 // Method createJavaType:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Class;
      26: astore        5
      28: aload_0
      29: aload_2
      30: ldc           #49                 // String json__KeyTypeId__
      32: invokevirtual #47                 // Method createJavaType:(Ljava/util/Map;Ljava/lang/String;)Ljava/lang/Class;
      35: astore        6
      37: aload         6
      39: ifnull        214
      42: getstatic     #50                 // Field logger:Lorg/apache/commons/logging/Log;
      45: ldc           #51                 // String Boon doesn\'t support the Map \'key\' conversion. Will be returned raw Map<String, Object>
      47: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/logging/Log.warn:(Ljava/lang/Object;)V
      52: aload_1
      53: instanceof    #21                 // class java/lang/String
      56: ifeq          70
      59: aload_3
      60: aload_1
      61: checkcast     #21                 // class java/lang/String
      64: invokeinterface #53,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:(Ljava/lang/String;)Ljava/util/Map;
      69: areturn
      70: aload_1
      71: instanceof    #23                 // class "[B"
      74: ifeq          91
      77: aload_3
      78: aload_1
      79: checkcast     #23                 // class "[B"
      82: checkcast     #23                 // class "[B"
      85: invokeinterface #54,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:([B)Ljava/util/Map;
      90: areturn
      91: aload_1
      92: instanceof    #25                 // class "[C"
      95: ifeq          112
      98: aload_3
      99: aload_1
     100: checkcast     #25                 // class "[C"
     103: checkcast     #25                 // class "[C"
     106: invokeinterface #55,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:([C)Ljava/util/Map;
     111: areturn
     112: aload_1
     113: instanceof    #27                 // class java/io/File
     116: ifeq          137
     119: aload_3
     120: new           #56                 // class java/io/FileReader
     123: dup
     124: aload_1
     125: checkcast     #27                 // class java/io/File
     128: invokespecial #57                 // Method java/io/FileReader."<init>":(Ljava/io/File;)V
     131: invokeinterface #58,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:(Ljava/io/Reader;)Ljava/util/Map;
     136: areturn
     137: aload_1
     138: instanceof    #29                 // class java/io/InputStream
     141: ifeq          155
     144: aload_3
     145: aload_1
     146: checkcast     #29                 // class java/io/InputStream
     149: invokeinterface #59,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:(Ljava/io/InputStream;)Ljava/util/Map;
     154: areturn
     155: aload_1
     156: instanceof    #31                 // class java/io/Reader
     159: ifeq          173
     162: aload_3
     163: aload_1
     164: checkcast     #31                 // class java/io/Reader
     167: invokeinterface #58,  2           // InterfaceMethod org/boon/json/JsonParserAndMapper.parseMap:(Ljava/io/Reader;)Ljava/util/Map;
     172: areturn
     173: new           #33                 // class java/lang/IllegalArgumentException
     176: dup
     177: new           #34                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #36                 // String \'json\' argument must be an instance of:
     186: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: getstatic     #38                 // Field supportedJsonTypes:Ljava/util/Collection;
     192: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     195: ldc           #40                 // String  , but gotten:
     197: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     200: aload_1
     201: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     204: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     207: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     210: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     213: athrow
     214: aload         5
     216: ifnull        416
     219: aload_1
     220: instanceof    #21                 // class java/lang/String
     223: ifeq          244
     226: aload_0
     227: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     230: aload_1
     231: checkcast     #21                 // class java/lang/String
     234: aload         4
     236: aload         5
     238: invokeinterface #60,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     243: areturn
     244: aload_1
     245: instanceof    #23                 // class "[B"
     248: ifeq          272
     251: aload_0
     252: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     255: aload_1
     256: checkcast     #23                 // class "[B"
     259: checkcast     #23                 // class "[B"
     262: aload         4
     264: aload         5
     266: invokeinterface #61,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:([BLjava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     271: areturn
     272: aload_1
     273: instanceof    #25                 // class "[C"
     276: ifeq          300
     279: aload_0
     280: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     283: aload_1
     284: checkcast     #25                 // class "[C"
     287: checkcast     #25                 // class "[C"
     290: aload         4
     292: aload         5
     294: invokeinterface #62,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:([CLjava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     299: areturn
     300: aload_1
     301: instanceof    #27                 // class java/io/File
     304: ifeq          325
     307: aload_0
     308: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     311: aload_1
     312: checkcast     #27                 // class java/io/File
     315: aload         4
     317: aload         5
     319: invokeinterface #63,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/File;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     324: areturn
     325: aload_1
     326: instanceof    #29                 // class java/io/InputStream
     329: ifeq          350
     332: aload_0
     333: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     336: aload_1
     337: checkcast     #29                 // class java/io/InputStream
     340: aload         4
     342: aload         5
     344: invokeinterface #64,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/InputStream;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     349: areturn
     350: aload_1
     351: instanceof    #31                 // class java/io/Reader
     354: ifeq          375
     357: aload_0
     358: getfield      #8                  // Field objectMapper:Lorg/boon/json/ObjectMapper;
     361: aload_1
     362: checkcast     #31                 // class java/io/Reader
     365: aload         4
     367: aload         5
     369: invokeinterface #65,  4           // InterfaceMethod org/boon/json/ObjectMapper.readValue:(Ljava/io/Reader;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/Collection;
     374: areturn
     375: new           #33                 // class java/lang/IllegalArgumentException
     378: dup
     379: new           #34                 // class java/lang/StringBuilder
     382: dup
     383: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     386: ldc           #36                 // String \'json\' argument must be an instance of:
     388: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     391: getstatic     #38                 // Field supportedJsonTypes:Ljava/util/Collection;
     394: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     397: ldc           #40                 // String  , but gotten:
     399: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     402: aload_1
     403: invokevirtual #41                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     406: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     409: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     412: invokespecial #43                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     415: athrow
     416: aload_0
     417: aload_1
     418: aload         4
     420: invokevirtual #66                 // Method fromJson:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
     423: areturn

  protected java.lang.Class<?> createJavaType(java.util.Map<java.lang.String, java.lang.Object>, java.lang.String) throws java.lang.Exception;
    Code:
       0: aload_1
       1: aload_2
       2: invokeinterface #67,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       7: astore_3
       8: aload_3
       9: instanceof    #68                 // class java/lang/Class
      12: ifeq          20
      15: aload_3
      16: checkcast     #68                 // class java/lang/Class
      19: areturn
      20: aload_3
      21: ifnull        36
      24: aload_3
      25: invokevirtual #69                 // Method java/lang/Object.toString:()Ljava/lang/String;
      28: aload_0
      29: getfield      #6                  // Field classLoader:Ljava/lang/ClassLoader;
      32: invokestatic  #70                 // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      35: areturn
      36: aconst_null
      37: areturn

  public <T> T fromJson(java.lang.Object, java.lang.reflect.Type) throws java.lang.Exception;
    Code:
       0: new           #71                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #72                 // String Boon doesn\'t support JSON reader parser abstraction
       6: invokespecial #73                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public java.lang.Object toJsonNode(java.lang.Object) throws java.lang.Exception;
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #74                 // Method toJsonNode:(Ljava/lang/Object;)Ljava/util/Map;
       5: areturn

  private void lambda$toJsonNode$0(java.lang.Object, java.io.PipedWriter);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokevirtual #75                 // Method toJson:(Ljava/lang/Object;Ljava/io/Writer;)V
       6: return

  static {};
    Code:
       0: ldc           #76                 // class org/springframework/integration/support/json/BoonJsonObjectMapper
       2: invokestatic  #77                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #50                 // Field logger:Lorg/apache/commons/logging/Log;
       8: bipush        6
      10: anewarray     #68                 // class java/lang/Class
      13: dup
      14: iconst_0
      15: ldc           #21                 // class java/lang/String
      17: aastore
      18: dup
      19: iconst_1
      20: ldc           #23                 // class "[B"
      22: aastore
      23: dup
      24: iconst_2
      25: ldc           #23                 // class "[B"
      27: aastore
      28: dup
      29: iconst_3
      30: ldc           #27                 // class java/io/File
      32: aastore
      33: dup
      34: iconst_4
      35: ldc           #29                 // class java/io/InputStream
      37: aastore
      38: dup
      39: iconst_5
      40: ldc           #31                 // class java/io/Reader
      42: aastore
      43: invokestatic  #78                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      46: putstatic     #38                 // Field supportedJsonTypes:Ljava/util/Collection;
      49: return
}
