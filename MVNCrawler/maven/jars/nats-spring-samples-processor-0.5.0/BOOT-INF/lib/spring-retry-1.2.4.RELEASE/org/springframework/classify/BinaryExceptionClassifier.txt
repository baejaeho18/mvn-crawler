Compiled from "BinaryExceptionClassifier.java"
public class org.springframework.classify.BinaryExceptionClassifier extends org.springframework.classify.SubclassClassifier<java.lang.Throwable, java.lang.Boolean> {
  private boolean traverseCauses;

  public org.springframework.classify.BinaryExceptionClassifier(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       5: invokespecial #2                  // Method org/springframework/classify/SubclassClassifier."<init>":(Ljava/lang/Object;)V
       8: return

  public org.springframework.classify.BinaryExceptionClassifier(java.util.Collection<java.lang.Class<? extends java.lang.Throwable>>, boolean);
    Code:
       0: aload_0
       1: iload_2
       2: ifne          9
       5: iconst_1
       6: goto          10
       9: iconst_0
      10: invokespecial #3                  // Method "<init>":(Z)V
      13: aload_1
      14: ifnull        93
      17: new           #4                  // class java/util/HashMap
      20: dup
      21: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      24: astore_3
      25: aload_1
      26: invokeinterface #6,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      31: astore        4
      33: aload         4
      35: invokeinterface #7,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          88
      43: aload         4
      45: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      50: checkcast     #9                  // class java/lang/Class
      53: astore        5
      55: aload_3
      56: aload         5
      58: aload_0
      59: invokevirtual #10                 // Method getDefault:()Ljava/lang/Object;
      62: checkcast     #11                 // class java/lang/Boolean
      65: invokevirtual #12                 // Method java/lang/Boolean.booleanValue:()Z
      68: ifne          75
      71: iconst_1
      72: goto          76
      75: iconst_0
      76: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
      79: invokeinterface #13,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      84: pop
      85: goto          33
      88: aload_0
      89: aload_3
      90: invokevirtual #14                 // Method setTypeMap:(Ljava/util/Map;)V
      93: return

  public org.springframework.classify.BinaryExceptionClassifier(java.util.Collection<java.lang.Class<? extends java.lang.Throwable>>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_1
       3: invokespecial #15                 // Method "<init>":(Ljava/util/Collection;Z)V
       6: return

  public org.springframework.classify.BinaryExceptionClassifier(java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokespecial #16                 // Method "<init>":(Ljava/util/Map;Z)V
       6: return

  public org.springframework.classify.BinaryExceptionClassifier(java.util.Map<java.lang.Class<? extends java.lang.Throwable>, java.lang.Boolean>, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokestatic  #1                  // Method java/lang/Boolean.valueOf:(Z)Ljava/lang/Boolean;
       6: invokespecial #17                 // Method org/springframework/classify/SubclassClassifier."<init>":(Ljava/util/Map;Ljava/lang/Object;)V
       9: return

  public void setTraverseCauses(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #18                 // Field traverseCauses:Z
       5: return

  public java.lang.Boolean classify(java.lang.Throwable);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #19                 // Method org/springframework/classify/SubclassClassifier.classify:(Ljava/lang/Object;)Ljava/lang/Object;
       5: checkcast     #11                 // class java/lang/Boolean
       8: astore_2
       9: aload_0
      10: getfield      #18                 // Field traverseCauses:Z
      13: ifne          18
      16: aload_2
      17: areturn
      18: aload_2
      19: aload_0
      20: invokevirtual #10                 // Method getDefault:()Ljava/lang/Object;
      23: invokevirtual #20                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      26: ifeq          78
      29: aload_1
      30: astore_3
      31: aload_0
      32: invokevirtual #21                 // Method getClassified:()Ljava/util/Map;
      35: aload_3
      36: invokevirtual #22                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: invokeinterface #23,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      44: ifeq          49
      47: aload_2
      48: areturn
      49: aload_3
      50: invokevirtual #24                 // Method java/lang/Throwable.getCause:()Ljava/lang/Throwable;
      53: astore_3
      54: aload_0
      55: aload_3
      56: invokespecial #19                 // Method org/springframework/classify/SubclassClassifier.classify:(Ljava/lang/Object;)Ljava/lang/Object;
      59: checkcast     #11                 // class java/lang/Boolean
      62: astore_2
      63: aload_3
      64: ifnull        78
      67: aload_2
      68: aload_0
      69: invokevirtual #10                 // Method getDefault:()Ljava/lang/Object;
      72: invokevirtual #20                 // Method java/lang/Boolean.equals:(Ljava/lang/Object;)Z
      75: ifne          31
      78: aload_2
      79: areturn

  public java.lang.Object classify(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #25                 // class java/lang/Throwable
       5: invokevirtual #26                 // Method classify:(Ljava/lang/Throwable;)Ljava/lang/Boolean;
       8: areturn
}
