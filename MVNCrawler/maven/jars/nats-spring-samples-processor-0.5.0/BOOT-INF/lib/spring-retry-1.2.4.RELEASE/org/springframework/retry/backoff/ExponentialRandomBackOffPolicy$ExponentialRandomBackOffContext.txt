Compiled from "ExponentialRandomBackOffPolicy.java"
class org.springframework.retry.backoff.ExponentialRandomBackOffPolicy$ExponentialRandomBackOffContext extends org.springframework.retry.backoff.ExponentialBackOffPolicy$ExponentialBackOffContext {
  private final java.util.Random r;

  public org.springframework.retry.backoff.ExponentialRandomBackOffPolicy$ExponentialRandomBackOffContext(long, double, long);
    Code:
       0: aload_0
       1: lload_1
       2: dload_3
       3: lload         5
       5: invokespecial #1                  // Method org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext."<init>":(JDJ)V
       8: aload_0
       9: new           #2                  // class java/util/Random
      12: dup
      13: invokespecial #3                  // Method java/util/Random."<init>":()V
      16: putfield      #4                  // Field r:Ljava/util/Random;
      19: return

  public synchronized long getSleepAndIncrement();
    Code:
       0: aload_0
       1: invokespecial #5                  // Method org/springframework/retry/backoff/ExponentialBackOffPolicy$ExponentialBackOffContext.getSleepAndIncrement:()J
       4: lstore_1
       5: lload_1
       6: l2d
       7: dconst_1
       8: aload_0
       9: getfield      #4                  // Field r:Ljava/util/Random;
      12: invokevirtual #6                  // Method java/util/Random.nextFloat:()F
      15: f2d
      16: aload_0
      17: invokevirtual #7                  // Method getMultiplier:()D
      20: dconst_1
      21: dsub
      22: dmul
      23: dadd
      24: dmul
      25: d2l
      26: lstore_1
      27: lload_1
      28: lreturn
}
