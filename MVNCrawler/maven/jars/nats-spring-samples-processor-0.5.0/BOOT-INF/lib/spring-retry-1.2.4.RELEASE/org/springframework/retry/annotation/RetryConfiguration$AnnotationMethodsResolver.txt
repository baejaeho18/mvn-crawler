Compiled from "RetryConfiguration.java"
class org.springframework.retry.annotation.RetryConfiguration$AnnotationMethodsResolver {
  private java.lang.Class<? extends java.lang.annotation.Annotation> annotationType;

  public org.springframework.retry.annotation.RetryConfiguration$AnnotationMethodsResolver(java.lang.Class<? extends java.lang.annotation.Annotation>);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #1                  // Field annotationType:Ljava/lang/Class;
       9: return

  public boolean hasAnnotatedMethods(java.lang.Class<?>);
    Code:
       0: new           #3                  // class java/util/concurrent/atomic/AtomicBoolean
       3: dup
       4: iconst_0
       5: invokespecial #4                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
       8: astore_2
       9: aload_1
      10: new           #5                  // class org/springframework/retry/annotation/RetryConfiguration$AnnotationMethodsResolver$1
      13: dup
      14: aload_0
      15: aload_2
      16: invokespecial #6                  // Method org/springframework/retry/annotation/RetryConfiguration$AnnotationMethodsResolver$1."<init>":(Lorg/springframework/retry/annotation/RetryConfiguration$AnnotationMethodsResolver;Ljava/util/concurrent/atomic/AtomicBoolean;)V
      19: invokestatic  #7                  // Method org/springframework/util/ReflectionUtils.doWithMethods:(Ljava/lang/Class;Lorg/springframework/util/ReflectionUtils$MethodCallback;)V
      22: aload_2
      23: invokevirtual #8                  // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
      26: ireturn

  static java.lang.Class access$000(org.springframework.retry.annotation.RetryConfiguration$AnnotationMethodsResolver);
    Code:
       0: aload_0
       1: getfield      #1                  // Field annotationType:Ljava/lang/Class;
       4: areturn
}
