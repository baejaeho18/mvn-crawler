Compiled from "UniformRandomBackOffPolicy.java"
public class org.springframework.retry.backoff.UniformRandomBackOffPolicy extends org.springframework.retry.backoff.StatelessBackOffPolicy implements org.springframework.retry.backoff.SleepingBackOffPolicy<org.springframework.retry.backoff.UniformRandomBackOffPolicy> {
  private static final long DEFAULT_BACK_OFF_MIN_PERIOD;

  private static final long DEFAULT_BACK_OFF_MAX_PERIOD;

  private volatile long minBackOffPeriod;

  private volatile long maxBackOffPeriod;

  private java.util.Random random;

  private org.springframework.retry.backoff.Sleeper sleeper;

  public org.springframework.retry.backoff.UniformRandomBackOffPolicy();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/retry/backoff/StatelessBackOffPolicy."<init>":()V
       4: aload_0
       5: ldc2_w        #3                  // long 500l
       8: putfield      #5                  // Field minBackOffPeriod:J
      11: aload_0
      12: ldc2_w        #6                  // long 1500l
      15: putfield      #8                  // Field maxBackOffPeriod:J
      18: aload_0
      19: new           #9                  // class java/util/Random
      22: dup
      23: invokestatic  #10                 // Method java/lang/System.currentTimeMillis:()J
      26: invokespecial #11                 // Method java/util/Random."<init>":(J)V
      29: putfield      #12                 // Field random:Ljava/util/Random;
      32: aload_0
      33: new           #13                 // class org/springframework/retry/backoff/ThreadWaitSleeper
      36: dup
      37: invokespecial #14                 // Method org/springframework/retry/backoff/ThreadWaitSleeper."<init>":()V
      40: putfield      #15                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
      43: return

  public org.springframework.retry.backoff.UniformRandomBackOffPolicy withSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: new           #2                  // class org/springframework/retry/backoff/UniformRandomBackOffPolicy
       3: dup
       4: invokespecial #16                 // Method "<init>":()V
       7: astore_2
       8: aload_2
       9: aload_0
      10: getfield      #5                  // Field minBackOffPeriod:J
      13: invokevirtual #17                 // Method setMinBackOffPeriod:(J)V
      16: aload_2
      17: aload_1
      18: invokevirtual #18                 // Method setSleeper:(Lorg/springframework/retry/backoff/Sleeper;)V
      21: aload_2
      22: areturn

  public void setSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #15                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
       5: return

  public void setMinBackOffPeriod(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: lcmp
       4: ifle          11
       7: lload_1
       8: goto          12
      11: lconst_1
      12: putfield      #5                  // Field minBackOffPeriod:J
      15: return

  public long getMinBackOffPeriod();
    Code:
       0: aload_0
       1: getfield      #5                  // Field minBackOffPeriod:J
       4: lreturn

  public void setMaxBackOffPeriod(long);
    Code:
       0: aload_0
       1: lload_1
       2: lconst_0
       3: lcmp
       4: ifle          11
       7: lload_1
       8: goto          12
      11: lconst_1
      12: putfield      #8                  // Field maxBackOffPeriod:J
      15: return

  public long getMaxBackOffPeriod();
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxBackOffPeriod:J
       4: lreturn

  protected void doBackOff() throws org.springframework.retry.backoff.BackOffInterruptedException;
    Code:
       0: aload_0
       1: getfield      #8                  // Field maxBackOffPeriod:J
       4: aload_0
       5: getfield      #5                  // Field minBackOffPeriod:J
       8: lcmp
       9: ifne          16
      12: lconst_0
      13: goto          34
      16: aload_0
      17: getfield      #12                 // Field random:Ljava/util/Random;
      20: aload_0
      21: getfield      #8                  // Field maxBackOffPeriod:J
      24: aload_0
      25: getfield      #5                  // Field minBackOffPeriod:J
      28: lsub
      29: l2i
      30: invokevirtual #19                 // Method java/util/Random.nextInt:(I)I
      33: i2l
      34: lstore_1
      35: aload_0
      36: getfield      #15                 // Field sleeper:Lorg/springframework/retry/backoff/Sleeper;
      39: aload_0
      40: getfield      #5                  // Field minBackOffPeriod:J
      43: lload_1
      44: ladd
      45: invokeinterface #20,  3           // InterfaceMethod org/springframework/retry/backoff/Sleeper.sleep:(J)V
      50: goto          65
      53: astore_1
      54: new           #22                 // class org/springframework/retry/backoff/BackOffInterruptedException
      57: dup
      58: ldc           #23                 // String Thread interrupted while sleeping
      60: aload_1
      61: invokespecial #24                 // Method org/springframework/retry/backoff/BackOffInterruptedException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      64: athrow
      65: return
    Exception table:
       from    to  target type
           0    50    53   Class java/lang/InterruptedException

  public java.lang.String toString();
    Code:
       0: new           #25                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #27                 // String RandomBackOffPolicy[backOffPeriod=
       9: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #5                  // Field minBackOffPeriod:J
      16: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      19: ldc           #30                 // String ,
      21: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #8                  // Field maxBackOffPeriod:J
      28: invokevirtual #29                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      31: ldc           #31                 // String ]
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: invokevirtual #32                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: areturn

  public org.springframework.retry.backoff.SleepingBackOffPolicy withSleeper(org.springframework.retry.backoff.Sleeper);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #33                 // Method withSleeper:(Lorg/springframework/retry/backoff/Sleeper;)Lorg/springframework/retry/backoff/UniformRandomBackOffPolicy;
       5: areturn
}
