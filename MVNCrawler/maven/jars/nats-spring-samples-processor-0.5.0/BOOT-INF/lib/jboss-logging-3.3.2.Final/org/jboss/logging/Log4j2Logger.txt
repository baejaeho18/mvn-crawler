Compiled from "Log4j2Logger.java"
final class org.jboss.logging.Log4j2Logger extends org.jboss.logging.Logger {
  private static final long serialVersionUID;

  private final org.apache.logging.log4j.spi.AbstractLogger logger;

  private final org.apache.logging.log4j.message.MessageFormatMessageFactory messageFactory;

  org.jboss.logging.Log4j2Logger(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/jboss/logging/Logger."<init>":(Ljava/lang/String;)V
       5: aload_1
       6: invokestatic  #2                  // Method org/apache/logging/log4j/LogManager.getLogger:(Ljava/lang/String;)Lorg/apache/logging/log4j/Logger;
       9: astore_2
      10: aload_2
      11: instanceof    #3                  // class org/apache/logging/log4j/spi/AbstractLogger
      14: ifne          59
      17: new           #4                  // class org/apache/logging/log4j/LoggingException
      20: dup
      21: new           #5                  // class java/lang/StringBuilder
      24: dup
      25: invokespecial #6                  // Method java/lang/StringBuilder."<init>":()V
      28: ldc           #7                  // String The logger for [
      30: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: aload_1
      34: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      37: ldc           #9                  // String ] does not extend AbstractLogger. Actual logger:
      39: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_2
      43: invokevirtual #10                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: invokevirtual #11                 // Method java/lang/Class.getName:()Ljava/lang/String;
      49: invokevirtual #8                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      52: invokevirtual #12                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      55: invokespecial #13                 // Method org/apache/logging/log4j/LoggingException."<init>":(Ljava/lang/String;)V
      58: athrow
      59: aload_0
      60: aload_2
      61: checkcast     #3                  // class org/apache/logging/log4j/spi/AbstractLogger
      64: putfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
      67: aload_0
      68: new           #15                 // class org/apache/logging/log4j/message/MessageFormatMessageFactory
      71: dup
      72: invokespecial #16                 // Method org/apache/logging/log4j/message/MessageFormatMessageFactory."<init>":()V
      75: putfield      #17                 // Field messageFactory:Lorg/apache/logging/log4j/message/MessageFormatMessageFactory;
      78: return

  public boolean isEnabled(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
       4: aload_1
       5: invokestatic  #18                 // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/logging/log4j/Level;
       8: invokevirtual #19                 // Method org/apache/logging/log4j/spi/AbstractLogger.isEnabled:(Lorg/apache/logging/log4j/Level;)Z
      11: ireturn

  protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/logging/log4j/Level;
       4: astore        6
       6: aload_0
       7: getfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
      10: aload         6
      12: invokevirtual #19                 // Method org/apache/logging/log4j/spi/AbstractLogger.isEnabled:(Lorg/apache/logging/log4j/Level;)Z
      15: ifeq          71
      18: aload_0
      19: getfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
      22: aload_2
      23: aload         6
      25: aconst_null
      26: aload         4
      28: ifnull        37
      31: aload         4
      33: arraylength
      34: ifne          48
      37: aload_0
      38: getfield      #17                 // Field messageFactory:Lorg/apache/logging/log4j/message/MessageFormatMessageFactory;
      41: aload_3
      42: invokevirtual #20                 // Method org/apache/logging/log4j/message/MessageFormatMessageFactory.newMessage:(Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;
      45: goto          61
      48: aload_0
      49: getfield      #17                 // Field messageFactory:Lorg/apache/logging/log4j/message/MessageFormatMessageFactory;
      52: aload_3
      53: invokestatic  #21                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      56: aload         4
      58: invokevirtual #22                 // Method org/apache/logging/log4j/message/MessageFormatMessageFactory.newMessage:(Ljava/lang/String;[Ljava/lang/Object;)Lorg/apache/logging/log4j/message/Message;
      61: aload         5
      63: invokevirtual #23                 // Method org/apache/logging/log4j/spi/AbstractLogger.logMessage:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      66: goto          71
      69: astore        7
      71: return
    Exception table:
       from    to  target type
          18    66    69   Class java/lang/Throwable

  protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable);
    Code:
       0: aload_1
       1: invokestatic  #18                 // Method translate:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/logging/log4j/Level;
       4: astore        6
       6: aload_0
       7: getfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
      10: aload         6
      12: invokevirtual #19                 // Method org/apache/logging/log4j/spi/AbstractLogger.isEnabled:(Lorg/apache/logging/log4j/Level;)Z
      15: ifeq          46
      18: aload_0
      19: getfield      #14                 // Field logger:Lorg/apache/logging/log4j/spi/AbstractLogger;
      22: aload_2
      23: aload         6
      25: aconst_null
      26: new           #25                 // class org/apache/logging/log4j/message/StringFormattedMessage
      29: dup
      30: aload_3
      31: aload         4
      33: invokespecial #26                 // Method org/apache/logging/log4j/message/StringFormattedMessage."<init>":(Ljava/lang/String;[Ljava/lang/Object;)V
      36: aload         5
      38: invokevirtual #23                 // Method org/apache/logging/log4j/spi/AbstractLogger.logMessage:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;Lorg/apache/logging/log4j/Marker;Lorg/apache/logging/log4j/message/Message;Ljava/lang/Throwable;)V
      41: goto          46
      44: astore        7
      46: return
    Exception table:
       from    to  target type
          18    41    44   Class java/lang/Throwable

  private static org.apache.logging.log4j.Level translate(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field org/jboss/logging/Logger$Level.TRACE:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #28                 // Field org/apache/logging/log4j/Level.TRACE:Lorg/apache/logging/log4j/Level;
      10: areturn
      11: aload_0
      12: getstatic     #29                 // Field org/jboss/logging/Logger$Level.DEBUG:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #30                 // Field org/apache/logging/log4j/Level.DEBUG:Lorg/apache/logging/log4j/Level;
      21: areturn
      22: aload_0
      23: invokestatic  #31                 // Method infoOrHigher:(Lorg/jboss/logging/Logger$Level;)Lorg/apache/logging/log4j/Level;
      26: areturn

  private static org.apache.logging.log4j.Level infoOrHigher(org.jboss.logging.Logger$Level);
    Code:
       0: aload_0
       1: getstatic     #32                 // Field org/jboss/logging/Logger$Level.INFO:Lorg/jboss/logging/Logger$Level;
       4: if_acmpne     11
       7: getstatic     #33                 // Field org/apache/logging/log4j/Level.INFO:Lorg/apache/logging/log4j/Level;
      10: areturn
      11: aload_0
      12: getstatic     #34                 // Field org/jboss/logging/Logger$Level.WARN:Lorg/jboss/logging/Logger$Level;
      15: if_acmpne     22
      18: getstatic     #35                 // Field org/apache/logging/log4j/Level.WARN:Lorg/apache/logging/log4j/Level;
      21: areturn
      22: aload_0
      23: getstatic     #36                 // Field org/jboss/logging/Logger$Level.ERROR:Lorg/jboss/logging/Logger$Level;
      26: if_acmpne     33
      29: getstatic     #37                 // Field org/apache/logging/log4j/Level.ERROR:Lorg/apache/logging/log4j/Level;
      32: areturn
      33: aload_0
      34: getstatic     #38                 // Field org/jboss/logging/Logger$Level.FATAL:Lorg/jboss/logging/Logger$Level;
      37: if_acmpne     44
      40: getstatic     #39                 // Field org/apache/logging/log4j/Level.FATAL:Lorg/apache/logging/log4j/Level;
      43: areturn
      44: getstatic     #40                 // Field org/apache/logging/log4j/Level.ALL:Lorg/apache/logging/log4j/Level;
      47: areturn
}
