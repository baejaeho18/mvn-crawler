Compiled from "NatsDispatcher.java"
class io.nats.client.impl.NatsDispatcher extends io.nats.client.impl.NatsConsumer implements io.nats.client.Dispatcher,java.lang.Runnable {
  private io.nats.client.impl.MessageQueue incoming;

  private io.nats.client.MessageHandler defaultHandler;

  private java.util.concurrent.Future<java.lang.Boolean> thread;

  private final java.util.concurrent.atomic.AtomicBoolean running;

  private java.lang.String id;

  private java.util.Map<java.lang.String, io.nats.client.impl.NatsSubscription> subscriptionsUsingDefaultHandler;

  private java.util.Map<java.lang.String, io.nats.client.impl.NatsSubscription> subscriptionsWithHandlers;

  private java.util.Map<java.lang.String, io.nats.client.MessageHandler> subscriptionHandlers;

  private java.time.Duration waitForMessage;

  io.nats.client.impl.NatsDispatcher(io.nats.client.impl.NatsConnection, io.nats.client.MessageHandler);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method io/nats/client/impl/NatsConsumer."<init>":(Lio/nats/client/impl/NatsConnection;)V
       5: aload_0
       6: aload_2
       7: putfield      #2                  // Field defaultHandler:Lio/nats/client/MessageHandler;
      10: aload_0
      11: new           #3                  // class io/nats/client/impl/MessageQueue
      14: dup
      15: iconst_1
      16: invokespecial #4                  // Method io/nats/client/impl/MessageQueue."<init>":(Z)V
      19: putfield      #5                  // Field incoming:Lio/nats/client/impl/MessageQueue;
      22: aload_0
      23: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      26: dup
      27: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      30: putfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      33: aload_0
      34: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      37: dup
      38: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      41: putfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      44: aload_0
      45: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      48: dup
      49: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      52: putfield      #10                 // Field subscriptionHandlers:Ljava/util/Map;
      55: aload_0
      56: new           #11                 // class java/util/concurrent/atomic/AtomicBoolean
      59: dup
      60: iconst_0
      61: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      64: putfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      67: aload_0
      68: ldc2_w        #14                 // long 5l
      71: invokestatic  #16                 // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      74: putfield      #17                 // Field waitForMessage:Ljava/time/Duration;
      77: return

  void start(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field id:Ljava/lang/String;
       5: aload_0
       6: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       9: iconst_1
      10: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      13: aload_0
      14: aload_0
      15: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
      18: invokevirtual #21                 // Method io/nats/client/impl/NatsConnection.getExecutor:()Ljava/util/concurrent/ExecutorService;
      21: aload_0
      22: getstatic     #22                 // Field java/lang/Boolean.TRUE:Ljava/lang/Boolean;
      25: invokeinterface #23,  3           // InterfaceMethod java/util/concurrent/ExecutorService.submit:(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;
      30: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
      33: return

  boolean breakRunLoop();
    Code:
       0: aload_0
       1: getfield      #5                  // Field incoming:Lio/nats/client/impl/MessageQueue;
       4: invokevirtual #25                 // Method io/nats/client/impl/MessageQueue.isDrained:()Z
       7: ireturn

  public void run();
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifeq          162
      10: aload_0
      11: getfield      #5                  // Field incoming:Lio/nats/client/impl/MessageQueue;
      14: aload_0
      15: getfield      #17                 // Field waitForMessage:Ljava/time/Duration;
      18: invokevirtual #27                 // Method io/nats/client/impl/MessageQueue.pop:(Ljava/time/Duration;)Lio/nats/client/impl/NatsMessage;
      21: astore_1
      22: aload_1
      23: ifnonnull     47
      26: aload_0
      27: invokevirtual #28                 // Method breakRunLoop:()Z
      30: ifeq          0
      33: aload_0
      34: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
      37: iconst_0
      38: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      41: aload_0
      42: aconst_null
      43: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
      46: return
      47: aload_1
      48: invokevirtual #29                 // Method io/nats/client/impl/NatsMessage.getNatsSubscription:()Lio/nats/client/impl/NatsSubscription;
      51: astore_2
      52: aload_2
      53: ifnull        138
      56: aload_2
      57: invokevirtual #30                 // Method io/nats/client/impl/NatsSubscription.isActive:()Z
      60: ifeq          138
      63: aload_2
      64: invokevirtual #31                 // Method io/nats/client/impl/NatsSubscription.incrementDeliveredCount:()V
      67: aload_0
      68: invokevirtual #32                 // Method incrementDeliveredCount:()V
      71: aload_0
      72: getfield      #2                  // Field defaultHandler:Lio/nats/client/MessageHandler;
      75: astore_3
      76: aload_0
      77: getfield      #10                 // Field subscriptionHandlers:Ljava/util/Map;
      80: aload_2
      81: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
      84: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      89: checkcast     #35                 // class io/nats/client/MessageHandler
      92: astore        4
      94: aload         4
      96: ifnull        102
      99: aload         4
     101: astore_3
     102: aload_3
     103: aload_1
     104: invokeinterface #36,  2           // InterfaceMethod io/nats/client/MessageHandler.onMessage:(Lio/nats/client/Message;)V
     109: goto          123
     112: astore        5
     114: aload_0
     115: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
     118: aload         5
     120: invokevirtual #38                 // Method io/nats/client/impl/NatsConnection.processException:(Ljava/lang/Exception;)V
     123: aload_2
     124: invokevirtual #39                 // Method io/nats/client/impl/NatsSubscription.reachedUnsubLimit:()Z
     127: ifeq          138
     130: aload_0
     131: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
     134: aload_2
     135: invokevirtual #40                 // Method io/nats/client/impl/NatsConnection.invalidate:(Lio/nats/client/impl/NatsSubscription;)V
     138: aload_0
     139: invokevirtual #28                 // Method breakRunLoop:()Z
     142: ifeq          159
     145: aload_0
     146: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     149: iconst_0
     150: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     153: aload_0
     154: aconst_null
     155: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
     158: return
     159: goto          0
     162: aload_0
     163: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     166: iconst_0
     167: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     170: aload_0
     171: aconst_null
     172: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
     175: goto          231
     178: astore_1
     179: aload_0
     180: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     183: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
     186: ifeq          197
     189: aload_0
     190: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
     193: aload_1
     194: invokevirtual #38                 // Method io/nats/client/impl/NatsConnection.processException:(Ljava/lang/Exception;)V
     197: aload_0
     198: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     201: iconst_0
     202: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     205: aload_0
     206: aconst_null
     207: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
     210: goto          231
     213: astore        6
     215: aload_0
     216: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
     219: iconst_0
     220: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
     223: aload_0
     224: aconst_null
     225: putfield      #24                 // Field thread:Ljava/util/concurrent/Future;
     228: aload         6
     230: athrow
     231: return
    Exception table:
       from    to  target type
         102   109   112   Class java/lang/Exception
           0    33   178   Class java/lang/InterruptedException
          47   145   178   Class java/lang/InterruptedException
         159   162   178   Class java/lang/InterruptedException
           0    33   213   any
          47   145   213   any
         159   162   213   any
         178   197   213   any
         213   215   213   any

  void stop(boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: iconst_0
       5: invokevirtual #19                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
       8: aload_0
       9: getfield      #5                  // Field incoming:Lio/nats/client/impl/MessageQueue;
      12: invokevirtual #42                 // Method io/nats/client/impl/MessageQueue.pause:()V
      15: aload_0
      16: getfield      #24                 // Field thread:Ljava/util/concurrent/Future;
      19: ifnull        49
      22: aload_0
      23: getfield      #24                 // Field thread:Ljava/util/concurrent/Future;
      26: invokeinterface #43,  1           // InterfaceMethod java/util/concurrent/Future.isCancelled:()Z
      31: ifne          45
      34: aload_0
      35: getfield      #24                 // Field thread:Ljava/util/concurrent/Future;
      38: iconst_1
      39: invokeinterface #44,  2           // InterfaceMethod java/util/concurrent/Future.cancel:(Z)Z
      44: pop
      45: goto          49
      48: astore_2
      49: iload_1
      50: ifeq          86
      53: aload_0
      54: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      57: aload_0
      58: invokedynamic #45,  0             // InvokeDynamic #0:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      63: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      68: aload_0
      69: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      72: aload_0
      73: invokedynamic #47,  0             // InvokeDynamic #1:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      78: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      83: goto          113
      86: aload_0
      87: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      90: invokeinterface #48,  1           // InterfaceMethod java/util/Map.clear:()V
      95: aload_0
      96: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      99: invokeinterface #48,  1           // InterfaceMethod java/util/Map.clear:()V
     104: aload_0
     105: getfield      #10                 // Field subscriptionHandlers:Ljava/util/Map;
     108: invokeinterface #48,  1           // InterfaceMethod java/util/Map.clear:()V
     113: return
    Exception table:
       from    to  target type
          22    45    48   Class java/lang/Exception

  public boolean isActive();
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ireturn

  java.lang.String getId();
    Code:
       0: aload_0
       1: getfield      #18                 // Field id:Ljava/lang/String;
       4: areturn

  io.nats.client.impl.MessageQueue getMessageQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field incoming:Lio/nats/client/impl/MessageQueue;
       4: areturn

  void resendSubscriptions();
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
       4: aload_0
       5: invokedynamic #49,  0             // InvokeDynamic #2:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      10: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      15: aload_0
      16: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      19: aload_0
      20: invokedynamic #50,  0             // InvokeDynamic #3:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      25: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      30: return

  void remove(io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
       4: aload_1
       5: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
       8: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      13: ifnull        33
      16: aload_0
      17: getfield      #10                 // Field subscriptionHandlers:Ljava/util/Map;
      20: aload_1
      21: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
      24: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      29: pop
      30: goto          75
      33: aload_0
      34: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      37: aload_1
      38: invokevirtual #52                 // Method io/nats/client/impl/NatsSubscription.getSubject:()Ljava/lang/String;
      41: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      46: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      49: astore_2
      50: aload_2
      51: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
      54: aload_1
      55: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
      58: if_acmpne     75
      61: aload_0
      62: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      65: aload_1
      66: invokevirtual #52                 // Method io/nats/client/impl/NatsSubscription.getSubject:()Ljava/lang/String;
      69: invokeinterface #51,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: return

  public io.nats.client.Dispatcher subscribe(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #54                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #55                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #56                 // String Subject is required in subscribe
      17: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: aconst_null
      24: aconst_null
      25: iconst_0
      26: invokevirtual #58                 // Method subscribeImpl:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/MessageHandler;Z)Lio/nats/client/impl/NatsSubscription;
      29: pop
      30: aload_0
      31: areturn

  io.nats.client.impl.NatsSubscription subscribeReturningSubscription(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #54                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #55                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #56                 // String Subject is required in subscribe
      17: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: aconst_null
      24: aconst_null
      25: iconst_0
      26: invokevirtual #58                 // Method subscribeImpl:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/MessageHandler;Z)Lio/nats/client/impl/NatsSubscription;
      29: areturn

  public io.nats.client.Subscription subscribe(java.lang.String, io.nats.client.MessageHandler);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #54                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #55                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #56                 // String Subject is required in subscribe
      17: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ifnonnull     35
      25: new           #55                 // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #59                 // String MessageHandler is required in subscribe
      31: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: aconst_null
      38: aload_2
      39: iconst_0
      40: invokevirtual #58                 // Method subscribeImpl:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/MessageHandler;Z)Lio/nats/client/impl/NatsSubscription;
      43: areturn

  public io.nats.client.Dispatcher subscribe(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #54                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #55                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #56                 // String Subject is required in subscribe
      17: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ifnull        32
      25: aload_2
      26: invokevirtual #54                 // Method java/lang/String.length:()I
      29: ifne          42
      32: new           #55                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #60                 // String QueueName is required in subscribe
      38: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_0
      43: aload_1
      44: aload_2
      45: aconst_null
      46: iconst_0
      47: invokevirtual #58                 // Method subscribeImpl:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/MessageHandler;Z)Lio/nats/client/impl/NatsSubscription;
      50: pop
      51: aload_0
      52: areturn

  public io.nats.client.Subscription subscribe(java.lang.String, java.lang.String, io.nats.client.MessageHandler);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #54                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #55                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #56                 // String Subject is required in subscribe
      17: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ifnull        32
      25: aload_2
      26: invokevirtual #54                 // Method java/lang/String.length:()I
      29: ifne          42
      32: new           #55                 // class java/lang/IllegalArgumentException
      35: dup
      36: ldc           #60                 // String QueueName is required in subscribe
      38: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      41: athrow
      42: aload_3
      43: ifnonnull     56
      46: new           #55                 // class java/lang/IllegalArgumentException
      49: dup
      50: ldc           #59                 // String MessageHandler is required in subscribe
      52: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: aload_2
      59: aload_3
      60: iconst_0
      61: invokevirtual #58                 // Method subscribeImpl:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/MessageHandler;Z)Lio/nats/client/impl/NatsSubscription;
      64: areturn

  io.nats.client.impl.NatsSubscription subscribeImpl(java.lang.String, java.lang.String, io.nats.client.MessageHandler, boolean);
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          20
      10: new           #61                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #62                 // String Dispatcher is closed
      16: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #64                 // Method isDraining:()Z
      24: ifeq          37
      27: new           #61                 // class java/lang/IllegalStateException
      30: dup
      31: ldc           #65                 // String Dispatcher is draining
      33: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: aload_3
      38: ifnonnull     110
      41: aload_0
      42: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      45: aload_1
      46: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      51: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      54: astore        5
      56: aload         5
      58: ifnonnull     107
      61: aload_0
      62: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
      65: aload_1
      66: aload_2
      67: aload_0
      68: iload         4
      70: invokevirtual #66                 // Method io/nats/client/impl/NatsConnection.createSubscription:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/impl/NatsDispatcher;Z)Lio/nats/client/impl/NatsSubscription;
      73: astore        5
      75: aload_0
      76: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      79: aload_1
      80: aload         5
      82: invokeinterface #67,  3           // InterfaceMethod java/util/Map.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      87: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      90: astore        6
      92: aload         6
      94: ifnull        107
      97: aload_0
      98: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
     101: aload         5
     103: iconst_m1
     104: invokevirtual #68                 // Method io/nats/client/impl/NatsConnection.unsubscribe:(Lio/nats/client/impl/NatsSubscription;I)V
     107: aload         5
     109: areturn
     110: aload_0
     111: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
     114: aload_1
     115: aload_2
     116: aload_0
     117: iload         4
     119: invokevirtual #66                 // Method io/nats/client/impl/NatsConnection.createSubscription:(Ljava/lang/String;Ljava/lang/String;Lio/nats/client/impl/NatsDispatcher;Z)Lio/nats/client/impl/NatsSubscription;
     122: astore        5
     124: aload_0
     125: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
     128: aload         5
     130: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
     133: aload         5
     135: invokeinterface #69,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     140: pop
     141: aload_0
     142: getfield      #10                 // Field subscriptionHandlers:Ljava/util/Map;
     145: aload         5
     147: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
     150: aload_3
     151: invokeinterface #69,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     156: pop
     157: aload         5
     159: areturn

  public io.nats.client.Dispatcher unsubscribe(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokevirtual #70                 // Method unsubscribe:(Ljava/lang/String;I)Lio/nats/client/Dispatcher;
       6: areturn

  public io.nats.client.Dispatcher unsubscribe(io.nats.client.Subscription);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_m1
       3: invokevirtual #71                 // Method unsubscribe:(Lio/nats/client/Subscription;I)Lio/nats/client/Dispatcher;
       6: areturn

  public io.nats.client.Dispatcher unsubscribe(java.lang.String, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          20
      10: new           #61                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #62                 // String Dispatcher is closed
      16: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #64                 // Method isDraining:()Z
      24: ifeq          29
      27: aload_0
      28: areturn
      29: aload_1
      30: ifnull        40
      33: aload_1
      34: invokevirtual #54                 // Method java/lang/String.length:()I
      37: ifne          50
      40: new           #55                 // class java/lang/IllegalArgumentException
      43: dup
      44: ldc           #72                 // String Subject is required in unsubscribe
      46: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: aload_0
      51: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
      54: aload_1
      55: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      60: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      63: astore_3
      64: aload_3
      65: ifnull        77
      68: aload_0
      69: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
      72: aload_3
      73: iload_2
      74: invokevirtual #68                 // Method io/nats/client/impl/NatsConnection.unsubscribe:(Lio/nats/client/impl/NatsSubscription;I)V
      77: aload_0
      78: areturn

  public io.nats.client.Dispatcher unsubscribe(io.nats.client.Subscription, int);
    Code:
       0: aload_0
       1: getfield      #13                 // Field running:Ljava/util/concurrent/atomic/AtomicBoolean;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicBoolean.get:()Z
       7: ifne          20
      10: new           #61                 // class java/lang/IllegalStateException
      13: dup
      14: ldc           #62                 // String Dispatcher is closed
      16: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      19: athrow
      20: aload_0
      21: invokevirtual #64                 // Method isDraining:()Z
      24: ifeq          29
      27: aload_0
      28: areturn
      29: aload_1
      30: invokeinterface #73,  1           // InterfaceMethod io/nats/client/Subscription.getDispatcher:()Lio/nats/client/Dispatcher;
      35: aload_0
      36: if_acmpeq     49
      39: new           #61                 // class java/lang/IllegalStateException
      42: dup
      43: ldc           #74                 // String Subscription is not managed by this Dispatcher
      45: invokespecial #63                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      48: athrow
      49: aload_1
      50: instanceof    #53                 // class io/nats/client/impl/NatsSubscription
      53: ifne          66
      56: new           #55                 // class java/lang/IllegalArgumentException
      59: dup
      60: ldc           #75                 // String This Subscription implementation is not known by Dispatcher
      62: invokespecial #57                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      65: athrow
      66: aload_1
      67: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      70: astore_3
      71: aload_0
      72: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      75: aload_3
      76: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
      79: invokeinterface #34,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      84: checkcast     #53                 // class io/nats/client/impl/NatsSubscription
      87: astore        4
      89: aload         4
      91: ifnull        104
      94: aload_0
      95: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
      98: aload         4
     100: iload_2
     101: invokevirtual #68                 // Method io/nats/client/impl/NatsConnection.unsubscribe:(Lio/nats/client/impl/NatsSubscription;I)V
     104: aload_0
     105: areturn

  void sendUnsubForDrain();
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscriptionsUsingDefaultHandler:Ljava/util/Map;
       4: aload_0
       5: invokedynamic #76,  0             // InvokeDynamic #4:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      10: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      15: aload_0
      16: getfield      #9                  // Field subscriptionsWithHandlers:Ljava/util/Map;
      19: aload_0
      20: invokedynamic #77,  0             // InvokeDynamic #5:accept:(Lio/nats/client/impl/NatsDispatcher;)Ljava/util/function/BiConsumer;
      25: invokeinterface #46,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      30: return

  void cleanUpAfterDrain();
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_0
       5: invokevirtual #78                 // Method io/nats/client/impl/NatsConnection.cleanupDispatcher:(Lio/nats/client/impl/NatsDispatcher;)V
       8: return

  public boolean isDrained();
    Code:
       0: aload_0
       1: invokevirtual #79                 // Method isActive:()Z
       4: ifne          18
       7: aload_0
       8: invokespecial #80                 // Method io/nats/client/impl/NatsConsumer.isDrained:()Z
      11: ifeq          18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ireturn

  private void lambda$sendUnsubForDrain$5(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: iconst_m1
       6: invokevirtual #81                 // Method io/nats/client/impl/NatsConnection.sendUnsub:(Lio/nats/client/impl/NatsSubscription;I)V
       9: return

  private void lambda$sendUnsubForDrain$4(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: iconst_m1
       6: invokevirtual #81                 // Method io/nats/client/impl/NatsConnection.sendUnsub:(Lio/nats/client/impl/NatsSubscription;I)V
       9: return

  private void lambda$resendSubscriptions$3(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #52                 // Method io/nats/client/impl/NatsSubscription.getSubject:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #82                 // Method io/nats/client/impl/NatsSubscription.getQueueName:()Ljava/lang/String;
      16: iconst_1
      17: invokevirtual #83                 // Method io/nats/client/impl/NatsConnection.sendSubscriptionMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      20: return

  private void lambda$resendSubscriptions$2(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: invokevirtual #33                 // Method io/nats/client/impl/NatsSubscription.getSID:()Ljava/lang/String;
       8: aload_2
       9: invokevirtual #52                 // Method io/nats/client/impl/NatsSubscription.getSubject:()Ljava/lang/String;
      12: aload_2
      13: invokevirtual #82                 // Method io/nats/client/impl/NatsSubscription.getQueueName:()Ljava/lang/String;
      16: iconst_1
      17: invokevirtual #83                 // Method io/nats/client/impl/NatsConnection.sendSubscriptionMessage:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V
      20: return

  private void lambda$stop$1(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: iconst_m1
       6: invokevirtual #68                 // Method io/nats/client/impl/NatsConnection.unsubscribe:(Lio/nats/client/impl/NatsSubscription;I)V
       9: return

  private void lambda$stop$0(java.lang.String, io.nats.client.impl.NatsSubscription);
    Code:
       0: aload_0
       1: getfield      #20                 // Field connection:Lio/nats/client/impl/NatsConnection;
       4: aload_2
       5: iconst_m1
       6: invokevirtual #68                 // Method io/nats/client/impl/NatsConnection.unsubscribe:(Lio/nats/client/impl/NatsSubscription;I)V
       9: return
}
