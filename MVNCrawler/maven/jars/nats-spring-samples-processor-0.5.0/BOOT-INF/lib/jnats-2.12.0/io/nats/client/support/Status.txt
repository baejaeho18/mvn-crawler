Compiled from "Status.java"
public class io.nats.client.support.Status {
  public static final java.lang.String FLOW_CONTROL_TEXT;

  public static final java.lang.String HEARTBEAT_TEXT;

  public static final java.lang.String NO_RESPONDERS_TEXT;

  public static final int FLOW_OR_HEARTBEAT_STATUS_CODE;

  public static final int NO_RESPONDERS_CODE;

  private final int code;

  private final java.lang.String message;

  private static final java.util.Map<java.lang.Integer, java.lang.String> MESSAGE_MAP;

  public io.nats.client.support.Status(int, java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_1
       6: putfield      #2                  // Field code:I
       9: aload_0
      10: aload_2
      11: ifnonnull     22
      14: aload_0
      15: iload_1
      16: invokespecial #3                  // Method makeMessage:(I)Ljava/lang/String;
      19: goto          23
      22: aload_2
      23: putfield      #4                  // Field message:Ljava/lang/String;
      26: return

  public io.nats.client.support.Status(io.nats.client.support.Token, io.nats.client.support.Token);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #5                  // Method extractCode:(Lio/nats/client/support/Token;)I
       5: aload_2
       6: invokestatic  #6                  // Method extractMessage:(Lio/nats/client/support/Token;)Ljava/lang/String;
       9: invokespecial #7                  // Method "<init>":(ILjava/lang/String;)V
      12: return

  public int getCode();
    Code:
       0: aload_0
       1: getfield      #2                  // Field code:I
       4: ireturn

  public java.lang.String getMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field message:Ljava/lang/String;
       4: areturn

  private static java.lang.String extractMessage(io.nats.client.support.Token);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method io/nats/client/support/Token.hasValue:()Z
       4: ifeq          14
       7: aload_0
       8: invokevirtual #9                  // Method io/nats/client/support/Token.getValue:()Ljava/lang/String;
      11: goto          15
      14: aconst_null
      15: areturn

  private static int extractCode(io.nats.client.support.Token);
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method io/nats/client/support/Token.getValue:()Ljava/lang/String;
       4: invokestatic  #10                 // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
       7: ireturn
       8: astore_1
       9: new           #12                 // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #14                 // String Invalid header status code
      15: invokespecial #15                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
    Exception table:
       from    to  target type
           0     7     8   Class java/lang/Exception

  private java.lang.String makeMessage(int);
    Code:
       0: getstatic     #16                 // Field MESSAGE_MAP:Ljava/util/Map;
       3: iload_1
       4: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
       7: invokeinterface #18,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #19                 // class java/lang/String
      15: astore_2
      16: aload_2
      17: ifnonnull     42
      20: new           #20                 // class java/lang/StringBuilder
      23: dup
      24: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
      27: ldc           #22                 // String Server Status Message:
      29: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      32: iload_1
      33: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      36: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      39: goto          43
      42: aload_2
      43: areturn

  public java.lang.String toString();
    Code:
       0: new           #20                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #21                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #26                 // String Status{code=
       9: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field code:I
      16: invokevirtual #24                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #27                 // String , message=\'
      21: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: getfield      #4                  // Field message:Ljava/lang/String;
      28: invokevirtual #23                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: bipush        39
      33: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      36: bipush        125
      38: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      41: invokevirtual #25                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      44: areturn

  private boolean isStatus(int, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field code:I
       4: iload_1
       5: if_icmpne     23
       8: aload_0
       9: getfield      #4                  // Field message:Ljava/lang/String;
      12: aload_2
      13: invokevirtual #29                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      16: ifeq          23
      19: iconst_1
      20: goto          24
      23: iconst_0
      24: ireturn

  public boolean isFlowControl();
    Code:
       0: aload_0
       1: bipush        100
       3: ldc           #31                 // String FlowControl Request
       5: invokespecial #32                 // Method isStatus:(ILjava/lang/String;)Z
       8: ireturn

  public boolean isHeartbeat();
    Code:
       0: aload_0
       1: bipush        100
       3: ldc           #33                 // String Idle Heartbeat
       5: invokespecial #32                 // Method isStatus:(ILjava/lang/String;)Z
       8: ireturn

  public boolean isNoResponders();
    Code:
       0: aload_0
       1: sipush        503
       4: ldc           #34                 // String No Responders Available For Request
       6: invokespecial #32                 // Method isStatus:(ILjava/lang/String;)Z
       9: ireturn

  static {};
    Code:
       0: new           #35                 // class java/util/HashMap
       3: dup
       4: invokespecial #36                 // Method java/util/HashMap."<init>":()V
       7: putstatic     #16                 // Field MESSAGE_MAP:Ljava/util/Map;
      10: getstatic     #16                 // Field MESSAGE_MAP:Ljava/util/Map;
      13: sipush        503
      16: invokestatic  #17                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      19: ldc           #34                 // String No Responders Available For Request
      21: invokeinterface #37,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      26: pop
      27: return
}
