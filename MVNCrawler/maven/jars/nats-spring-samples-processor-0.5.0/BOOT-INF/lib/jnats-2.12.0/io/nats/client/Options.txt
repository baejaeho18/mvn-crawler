Compiled from "Options.java"
public class io.nats.client.Options {
  public static final java.lang.String DEFAULT_URL;

  public static final int DEFAULT_PORT;

  public static final int DEFAULT_MAX_RECONNECT;

  public static final java.time.Duration DEFAULT_RECONNECT_WAIT;

  public static final java.time.Duration DEFAULT_RECONNECT_JITTER;

  public static final java.time.Duration DEFAULT_RECONNECT_JITTER_TLS;

  public static final java.time.Duration DEFAULT_CONNECTION_TIMEOUT;

  public static final java.time.Duration DEFAULT_PING_INTERVAL;

  public static final java.time.Duration DEFAULT_REQUEST_CLEANUP_INTERVAL;

  public static final int DEFAULT_MAX_PINGS_OUT;

  public static final java.lang.String DEFAULT_SSL_PROTOCOL;

  public static final int DEFAULT_RECONNECT_BUF_SIZE;

  public static final int DEFAULT_MAX_CONTROL_LINE;

  public static final java.lang.String DEFAULT_DATA_PORT_TYPE;

  public static final int DEFAULT_BUFFER_SIZE;

  public static final java.lang.String DEFAULT_THREAD_NAME_PREFIX;

  public static final java.lang.String DEFAULT_INBOX_PREFIX;

  public static final int MAX_MESSAGES_IN_NETWORK_BUFFER;

  public static final int DEFAULT_MAX_MESSAGES_IN_OUTGOING_QUEUE;

  public static final boolean DEFAULT_DISCARD_MESSAGES_WHEN_OUTGOING_QUEUE_FULL;

  static final java.lang.String PFX;

  public static final java.lang.String PROP_CONNECTION_CB;

  public static final java.lang.String PROP_DATA_PORT_TYPE;

  public static final java.lang.String PROP_ERROR_LISTENER;

  public static final java.lang.String PROP_MAX_PINGS;

  public static final java.lang.String PROP_PING_INTERVAL;

  public static final java.lang.String PROP_CLEANUP_INTERVAL;

  public static final java.lang.String PROP_CONNECTION_TIMEOUT;

  public static final java.lang.String PROP_RECONNECT_BUF_SIZE;

  public static final java.lang.String PROP_RECONNECT_WAIT;

  public static final java.lang.String PROP_MAX_RECONNECT;

  public static final java.lang.String PROP_RECONNECT_JITTER;

  public static final java.lang.String PROP_RECONNECT_JITTER_TLS;

  public static final java.lang.String PROP_PEDANTIC;

  public static final java.lang.String PROP_VERBOSE;

  public static final java.lang.String PROP_NO_ECHO;

  public static final java.lang.String PROP_NO_HEADERS;

  public static final java.lang.String PROP_NO_NORESPONDERS;

  public static final java.lang.String PROP_CONNECTION_NAME;

  public static final java.lang.String PROP_NORANDOMIZE;

  public static final java.lang.String PROP_SERVERS;

  public static final java.lang.String PROP_PASSWORD;

  public static final java.lang.String PROP_USERNAME;

  public static final java.lang.String PROP_TOKEN;

  public static final java.lang.String PROP_URL;

  public static final java.lang.String PROP_SECURE;

  public static final java.lang.String PROP_OPENTLS;

  public static final java.lang.String PROP_MAX_MESSAGES_IN_OUTGOING_QUEUE;

  public static final java.lang.String PROP_DISCARD_MESSAGES_WHEN_OUTGOING_QUEUE_FULL;

  public static final java.lang.String PROP_USE_OLD_REQUEST_STYLE;

  public static final java.lang.String PROP_MAX_CONTROL_LINE;

  public static final java.lang.String PROP_UTF8_SUBJECTS;

  public static final java.lang.String PROP_INBOX_PREFIX;

  static final java.lang.String OPTION_VERBOSE;

  static final java.lang.String OPTION_PEDANTIC;

  static final java.lang.String OPTION_TLS_REQUIRED;

  static final java.lang.String OPTION_AUTH_TOKEN;

  static final java.lang.String OPTION_USER;

  static final java.lang.String OPTION_PASSWORD;

  static final java.lang.String OPTION_NAME;

  static final java.lang.String OPTION_LANG;

  static final java.lang.String OPTION_VERSION;

  static final java.lang.String OPTION_PROTOCOL;

  static final java.lang.String OPTION_ECHO;

  static final java.lang.String OPTION_NKEY;

  static final java.lang.String OPTION_SIG;

  static final java.lang.String OPTION_JWT;

  static final java.lang.String OPTION_HEADERS;

  static final java.lang.String OPTION_NORESPONDERS;

  private final java.util.List<java.net.URI> servers;

  private final boolean noRandomize;

  private final java.lang.String connectionName;

  private final boolean verbose;

  private final boolean pedantic;

  private final javax.net.ssl.SSLContext sslContext;

  private final int maxReconnect;

  private final int maxControlLine;

  private final java.time.Duration reconnectWait;

  private final java.time.Duration reconnectJitter;

  private final java.time.Duration reconnectJitterTls;

  private final java.time.Duration connectionTimeout;

  private final java.time.Duration pingInterval;

  private final java.time.Duration requestCleanupInterval;

  private final int maxPingsOut;

  private final long reconnectBufferSize;

  private final char[] username;

  private final char[] password;

  private final char[] token;

  private final java.lang.String inboxPrefix;

  private boolean useOldRequestStyle;

  private final int bufferSize;

  private final boolean noEcho;

  private final boolean noHeaders;

  private final boolean noNoResponders;

  private final boolean utf8Support;

  private final int maxMessagesInOutgoingQueue;

  private final boolean discardMessagesWhenOutgoingQueueFull;

  private final io.nats.client.AuthHandler authHandler;

  private final io.nats.client.ReconnectDelayHandler reconnectDelayHandler;

  private final io.nats.client.ErrorListener errorListener;

  private final io.nats.client.ConnectionListener connectionListener;

  private final java.lang.String dataPortType;

  private final boolean trackAdvancedStats;

  private final boolean traceConnection;

  private final java.util.concurrent.ExecutorService executor;

  private io.nats.client.Options(io.nats.client.Options$Builder);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #5                  // Method io/nats/client/Options$Builder.access$100:(Lio/nats/client/Options$Builder;)Ljava/util/ArrayList;
       9: putfield      #6                  // Field servers:Ljava/util/List;
      12: aload_0
      13: aload_1
      14: invokestatic  #7                  // Method io/nats/client/Options$Builder.access$200:(Lio/nats/client/Options$Builder;)Z
      17: putfield      #8                  // Field noRandomize:Z
      20: aload_0
      21: aload_1
      22: invokestatic  #9                  // Method io/nats/client/Options$Builder.access$300:(Lio/nats/client/Options$Builder;)Ljava/lang/String;
      25: putfield      #10                 // Field connectionName:Ljava/lang/String;
      28: aload_0
      29: aload_1
      30: invokestatic  #11                 // Method io/nats/client/Options$Builder.access$400:(Lio/nats/client/Options$Builder;)Z
      33: putfield      #12                 // Field verbose:Z
      36: aload_0
      37: aload_1
      38: invokestatic  #13                 // Method io/nats/client/Options$Builder.access$500:(Lio/nats/client/Options$Builder;)Z
      41: putfield      #14                 // Field pedantic:Z
      44: aload_0
      45: aload_1
      46: invokestatic  #15                 // Method io/nats/client/Options$Builder.access$600:(Lio/nats/client/Options$Builder;)Ljavax/net/ssl/SSLContext;
      49: putfield      #16                 // Field sslContext:Ljavax/net/ssl/SSLContext;
      52: aload_0
      53: aload_1
      54: invokestatic  #17                 // Method io/nats/client/Options$Builder.access$700:(Lio/nats/client/Options$Builder;)I
      57: putfield      #18                 // Field maxReconnect:I
      60: aload_0
      61: aload_1
      62: invokestatic  #19                 // Method io/nats/client/Options$Builder.access$800:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
      65: putfield      #20                 // Field reconnectWait:Ljava/time/Duration;
      68: aload_0
      69: aload_1
      70: invokestatic  #21                 // Method io/nats/client/Options$Builder.access$900:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
      73: putfield      #22                 // Field reconnectJitter:Ljava/time/Duration;
      76: aload_0
      77: aload_1
      78: invokestatic  #23                 // Method io/nats/client/Options$Builder.access$1000:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
      81: putfield      #24                 // Field reconnectJitterTls:Ljava/time/Duration;
      84: aload_0
      85: aload_1
      86: invokestatic  #25                 // Method io/nats/client/Options$Builder.access$1100:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
      89: putfield      #26                 // Field connectionTimeout:Ljava/time/Duration;
      92: aload_0
      93: aload_1
      94: invokestatic  #27                 // Method io/nats/client/Options$Builder.access$1200:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
      97: putfield      #28                 // Field pingInterval:Ljava/time/Duration;
     100: aload_0
     101: aload_1
     102: invokestatic  #29                 // Method io/nats/client/Options$Builder.access$1300:(Lio/nats/client/Options$Builder;)Ljava/time/Duration;
     105: putfield      #30                 // Field requestCleanupInterval:Ljava/time/Duration;
     108: aload_0
     109: aload_1
     110: invokestatic  #31                 // Method io/nats/client/Options$Builder.access$1400:(Lio/nats/client/Options$Builder;)I
     113: putfield      #32                 // Field maxPingsOut:I
     116: aload_0
     117: aload_1
     118: invokestatic  #33                 // Method io/nats/client/Options$Builder.access$1500:(Lio/nats/client/Options$Builder;)J
     121: putfield      #34                 // Field reconnectBufferSize:J
     124: aload_0
     125: aload_1
     126: invokestatic  #35                 // Method io/nats/client/Options$Builder.access$1600:(Lio/nats/client/Options$Builder;)[C
     129: putfield      #36                 // Field username:[C
     132: aload_0
     133: aload_1
     134: invokestatic  #37                 // Method io/nats/client/Options$Builder.access$1700:(Lio/nats/client/Options$Builder;)[C
     137: putfield      #38                 // Field password:[C
     140: aload_0
     141: aload_1
     142: invokestatic  #39                 // Method io/nats/client/Options$Builder.access$1800:(Lio/nats/client/Options$Builder;)[C
     145: putfield      #40                 // Field token:[C
     148: aload_0
     149: aload_1
     150: invokestatic  #41                 // Method io/nats/client/Options$Builder.access$1900:(Lio/nats/client/Options$Builder;)Z
     153: putfield      #42                 // Field useOldRequestStyle:Z
     156: aload_0
     157: aload_1
     158: invokestatic  #43                 // Method io/nats/client/Options$Builder.access$2000:(Lio/nats/client/Options$Builder;)I
     161: putfield      #44                 // Field maxControlLine:I
     164: aload_0
     165: aload_1
     166: invokestatic  #45                 // Method io/nats/client/Options$Builder.access$2100:(Lio/nats/client/Options$Builder;)I
     169: putfield      #46                 // Field bufferSize:I
     172: aload_0
     173: aload_1
     174: invokestatic  #47                 // Method io/nats/client/Options$Builder.access$2200:(Lio/nats/client/Options$Builder;)Z
     177: putfield      #48                 // Field noEcho:Z
     180: aload_0
     181: aload_1
     182: invokestatic  #49                 // Method io/nats/client/Options$Builder.access$2300:(Lio/nats/client/Options$Builder;)Z
     185: putfield      #50                 // Field noHeaders:Z
     188: aload_0
     189: aload_1
     190: invokestatic  #51                 // Method io/nats/client/Options$Builder.access$2400:(Lio/nats/client/Options$Builder;)Z
     193: putfield      #52                 // Field noNoResponders:Z
     196: aload_0
     197: aload_1
     198: invokestatic  #53                 // Method io/nats/client/Options$Builder.access$2500:(Lio/nats/client/Options$Builder;)Z
     201: putfield      #54                 // Field utf8Support:Z
     204: aload_0
     205: aload_1
     206: invokestatic  #55                 // Method io/nats/client/Options$Builder.access$2600:(Lio/nats/client/Options$Builder;)Ljava/lang/String;
     209: putfield      #56                 // Field inboxPrefix:Ljava/lang/String;
     212: aload_0
     213: aload_1
     214: invokestatic  #57                 // Method io/nats/client/Options$Builder.access$2700:(Lio/nats/client/Options$Builder;)Z
     217: putfield      #58                 // Field traceConnection:Z
     220: aload_0
     221: aload_1
     222: invokestatic  #59                 // Method io/nats/client/Options$Builder.access$2800:(Lio/nats/client/Options$Builder;)I
     225: putfield      #60                 // Field maxMessagesInOutgoingQueue:I
     228: aload_0
     229: aload_1
     230: invokestatic  #61                 // Method io/nats/client/Options$Builder.access$2900:(Lio/nats/client/Options$Builder;)Z
     233: putfield      #62                 // Field discardMessagesWhenOutgoingQueueFull:Z
     236: aload_0
     237: aload_1
     238: invokestatic  #63                 // Method io/nats/client/Options$Builder.access$3000:(Lio/nats/client/Options$Builder;)Lio/nats/client/AuthHandler;
     241: putfield      #64                 // Field authHandler:Lio/nats/client/AuthHandler;
     244: aload_0
     245: aload_1
     246: invokestatic  #65                 // Method io/nats/client/Options$Builder.access$3100:(Lio/nats/client/Options$Builder;)Lio/nats/client/ReconnectDelayHandler;
     249: putfield      #66                 // Field reconnectDelayHandler:Lio/nats/client/ReconnectDelayHandler;
     252: aload_0
     253: aload_1
     254: invokestatic  #67                 // Method io/nats/client/Options$Builder.access$3200:(Lio/nats/client/Options$Builder;)Lio/nats/client/ErrorListener;
     257: putfield      #68                 // Field errorListener:Lio/nats/client/ErrorListener;
     260: aload_0
     261: aload_1
     262: invokestatic  #69                 // Method io/nats/client/Options$Builder.access$3300:(Lio/nats/client/Options$Builder;)Lio/nats/client/ConnectionListener;
     265: putfield      #70                 // Field connectionListener:Lio/nats/client/ConnectionListener;
     268: aload_0
     269: aload_1
     270: invokestatic  #71                 // Method io/nats/client/Options$Builder.access$3400:(Lio/nats/client/Options$Builder;)Ljava/lang/String;
     273: putfield      #72                 // Field dataPortType:Ljava/lang/String;
     276: aload_0
     277: aload_1
     278: invokestatic  #73                 // Method io/nats/client/Options$Builder.access$3500:(Lio/nats/client/Options$Builder;)Z
     281: putfield      #74                 // Field trackAdvancedStats:Z
     284: aload_0
     285: aload_1
     286: invokestatic  #75                 // Method io/nats/client/Options$Builder.access$3600:(Lio/nats/client/Options$Builder;)Ljava/util/concurrent/ExecutorService;
     289: putfield      #76                 // Field executor:Ljava/util/concurrent/ExecutorService;
     292: return

  public java.util.concurrent.ExecutorService getExecutor();
    Code:
       0: aload_0
       1: getfield      #76                 // Field executor:Ljava/util/concurrent/ExecutorService;
       4: areturn

  public io.nats.client.ErrorListener getErrorListener();
    Code:
       0: aload_0
       1: getfield      #68                 // Field errorListener:Lio/nats/client/ErrorListener;
       4: areturn

  public io.nats.client.ConnectionListener getConnectionListener();
    Code:
       0: aload_0
       1: getfield      #70                 // Field connectionListener:Lio/nats/client/ConnectionListener;
       4: areturn

  public io.nats.client.AuthHandler getAuthHandler();
    Code:
       0: aload_0
       1: getfield      #64                 // Field authHandler:Lio/nats/client/AuthHandler;
       4: areturn

  public io.nats.client.ReconnectDelayHandler getReconnectDelayHandler();
    Code:
       0: aload_0
       1: getfield      #66                 // Field reconnectDelayHandler:Lio/nats/client/ReconnectDelayHandler;
       4: areturn

  public java.lang.String getDataPortType();
    Code:
       0: aload_0
       1: getfield      #72                 // Field dataPortType:Ljava/lang/String;
       4: areturn

  public io.nats.client.impl.DataPort buildDataPort();
    Code:
       0: aload_0
       1: getfield      #72                 // Field dataPortType:Ljava/lang/String;
       4: invokestatic  #77                 // Method io/nats/client/Options$Builder.createInstanceOf:(Ljava/lang/String;)Ljava/lang/Object;
       7: checkcast     #78                 // class io/nats/client/impl/DataPort
      10: areturn

  public java.util.Collection<java.net.URI> getServers();
    Code:
       0: aload_0
       1: getfield      #6                  // Field servers:Ljava/util/List;
       4: areturn

  public boolean isNoRandomize();
    Code:
       0: aload_0
       1: getfield      #8                  // Field noRandomize:Z
       4: ireturn

  public boolean supportUTF8Subjects();
    Code:
       0: aload_0
       1: getfield      #54                 // Field utf8Support:Z
       4: ireturn

  public java.lang.String getConnectionName();
    Code:
       0: aload_0
       1: getfield      #10                 // Field connectionName:Ljava/lang/String;
       4: areturn

  public boolean isVerbose();
    Code:
       0: aload_0
       1: getfield      #12                 // Field verbose:Z
       4: ireturn

  public boolean isNoEcho();
    Code:
       0: aload_0
       1: getfield      #48                 // Field noEcho:Z
       4: ireturn

  public boolean isNoHeaders();
    Code:
       0: aload_0
       1: getfield      #50                 // Field noHeaders:Z
       4: ireturn

  public boolean isNoNoResponders();
    Code:
       0: aload_0
       1: getfield      #52                 // Field noNoResponders:Z
       4: ireturn

  public boolean isPedantic();
    Code:
       0: aload_0
       1: getfield      #14                 // Field pedantic:Z
       4: ireturn

  public boolean isTrackAdvancedStats();
    Code:
       0: aload_0
       1: getfield      #74                 // Field trackAdvancedStats:Z
       4: ireturn

  public boolean isTraceConnection();
    Code:
       0: aload_0
       1: getfield      #58                 // Field traceConnection:Z
       4: ireturn

  public int getMaxControlLine();
    Code:
       0: aload_0
       1: getfield      #44                 // Field maxControlLine:I
       4: ireturn

  public boolean isTLSRequired();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public javax.net.ssl.SSLContext getSslContext();
    Code:
       0: aload_0
       1: getfield      #16                 // Field sslContext:Ljavax/net/ssl/SSLContext;
       4: areturn

  public int getMaxReconnect();
    Code:
       0: aload_0
       1: getfield      #18                 // Field maxReconnect:I
       4: ireturn

  public java.time.Duration getReconnectWait();
    Code:
       0: aload_0
       1: getfield      #20                 // Field reconnectWait:Ljava/time/Duration;
       4: areturn

  public java.time.Duration getReconnectJitter();
    Code:
       0: aload_0
       1: getfield      #22                 // Field reconnectJitter:Ljava/time/Duration;
       4: areturn

  public java.time.Duration getReconnectJitterTls();
    Code:
       0: aload_0
       1: getfield      #24                 // Field reconnectJitterTls:Ljava/time/Duration;
       4: areturn

  public java.time.Duration getConnectionTimeout();
    Code:
       0: aload_0
       1: getfield      #26                 // Field connectionTimeout:Ljava/time/Duration;
       4: areturn

  public java.time.Duration getPingInterval();
    Code:
       0: aload_0
       1: getfield      #28                 // Field pingInterval:Ljava/time/Duration;
       4: areturn

  public java.time.Duration getRequestCleanupInterval();
    Code:
       0: aload_0
       1: getfield      #30                 // Field requestCleanupInterval:Ljava/time/Duration;
       4: areturn

  public int getMaxPingsOut();
    Code:
       0: aload_0
       1: getfield      #32                 // Field maxPingsOut:I
       4: ireturn

  public long getReconnectBufferSize();
    Code:
       0: aload_0
       1: getfield      #34                 // Field reconnectBufferSize:J
       4: lreturn

  public int getBufferSize();
    Code:
       0: aload_0
       1: getfield      #46                 // Field bufferSize:I
       4: ireturn

  public java.lang.String getUsername();
    Code:
       0: aload_0
       1: getfield      #36                 // Field username:[C
       4: ifnonnull     11
       7: aconst_null
       8: goto          22
      11: new           #79                 // class java/lang/String
      14: dup
      15: aload_0
      16: getfield      #36                 // Field username:[C
      19: invokespecial #80                 // Method java/lang/String."<init>":([C)V
      22: areturn

  public char[] getUsernameChars();
    Code:
       0: aload_0
       1: getfield      #36                 // Field username:[C
       4: areturn

  public java.lang.String getPassword();
    Code:
       0: aload_0
       1: getfield      #38                 // Field password:[C
       4: ifnonnull     11
       7: aconst_null
       8: goto          22
      11: new           #79                 // class java/lang/String
      14: dup
      15: aload_0
      16: getfield      #38                 // Field password:[C
      19: invokespecial #80                 // Method java/lang/String."<init>":([C)V
      22: areturn

  public char[] getPasswordChars();
    Code:
       0: aload_0
       1: getfield      #38                 // Field password:[C
       4: areturn

  public java.lang.String getToken();
    Code:
       0: aload_0
       1: getfield      #40                 // Field token:[C
       4: ifnonnull     11
       7: aconst_null
       8: goto          22
      11: new           #79                 // class java/lang/String
      14: dup
      15: aload_0
      16: getfield      #40                 // Field token:[C
      19: invokespecial #80                 // Method java/lang/String."<init>":([C)V
      22: areturn

  public char[] getTokenChars();
    Code:
       0: aload_0
       1: getfield      #40                 // Field token:[C
       4: areturn

  public boolean isOldRequestStyle();
    Code:
       0: aload_0
       1: getfield      #42                 // Field useOldRequestStyle:Z
       4: ireturn

  public java.lang.String getInboxPrefix();
    Code:
       0: aload_0
       1: getfield      #56                 // Field inboxPrefix:Ljava/lang/String;
       4: areturn

  public int getMaxMessagesInOutgoingQueue();
    Code:
       0: aload_0
       1: getfield      #60                 // Field maxMessagesInOutgoingQueue:I
       4: ireturn

  public boolean isDiscardMessagesWhenOutgoingQueueFull();
    Code:
       0: aload_0
       1: getfield      #62                 // Field discardMessagesWhenOutgoingQueueFull:Z
       4: ireturn

  public java.net.URI createURIForServer(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: aload_1
       1: invokestatic  #81                 // Method parseURIForServer:(Ljava/lang/String;)Ljava/net/URI;
       4: areturn

  static java.net.URI parseURIForServer(java.lang.String) throws java.net.URISyntaxException;
    Code:
       0: new           #82                 // class java/net/URI
       3: dup
       4: aload_0
       5: invokespecial #83                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
       8: astore_1
       9: aload_1
      10: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
      13: ifnull        43
      16: aload_1
      17: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
      20: invokevirtual #85                 // Method java/lang/String.length:()I
      23: ifeq          43
      26: aload_1
      27: invokevirtual #86                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      30: ifnull        43
      33: aload_1
      34: invokevirtual #86                 // Method java/net/URI.getScheme:()Ljava/lang/String;
      37: invokevirtual #85                 // Method java/lang/String.length:()I
      40: ifne          70
      43: new           #82                 // class java/net/URI
      46: dup
      47: new           #87                 // class java/lang/StringBuilder
      50: dup
      51: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
      54: ldc           #89                 // String nats://
      56: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_0
      60: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      66: invokespecial #83                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
      69: astore_1
      70: goto          101
      73: astore_2
      74: new           #82                 // class java/net/URI
      77: dup
      78: new           #87                 // class java/lang/StringBuilder
      81: dup
      82: invokespecial #88                 // Method java/lang/StringBuilder."<init>":()V
      85: ldc           #89                 // String nats://
      87: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      90: aload_0
      91: invokevirtual #90                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      94: invokevirtual #91                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      97: invokespecial #83                 // Method java/net/URI."<init>":(Ljava/lang/String;)V
     100: astore_1
     101: getstatic     #93                 // Field io/nats/client/support/NatsConstants.KNOWN_PROTOCOLS:Ljava/util/List;
     104: aload_1
     105: invokevirtual #86                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     108: invokeinterface #94,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
     113: ifne          127
     116: new           #92                 // class java/net/URISyntaxException
     119: dup
     120: aload_0
     121: ldc           #95                 // String unknown URI scheme
     123: invokespecial #96                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     126: athrow
     127: aload_1
     128: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
     131: ifnull        189
     134: aload_1
     135: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
     138: invokevirtual #85                 // Method java/lang/String.length:()I
     141: ifle          189
     144: aload_1
     145: invokevirtual #97                 // Method java/net/URI.getPort:()I
     148: iconst_m1
     149: if_icmpne     187
     152: new           #82                 // class java/net/URI
     155: dup
     156: aload_1
     157: invokevirtual #86                 // Method java/net/URI.getScheme:()Ljava/lang/String;
     160: aload_1
     161: invokevirtual #98                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     164: aload_1
     165: invokevirtual #84                 // Method java/net/URI.getHost:()Ljava/lang/String;
     168: sipush        4222
     171: aload_1
     172: invokevirtual #99                 // Method java/net/URI.getPath:()Ljava/lang/String;
     175: aload_1
     176: invokevirtual #100                // Method java/net/URI.getQuery:()Ljava/lang/String;
     179: aload_1
     180: invokevirtual #101                // Method java/net/URI.getFragment:()Ljava/lang/String;
     183: invokespecial #102                // Method java/net/URI."<init>":(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
     186: astore_1
     187: aload_1
     188: areturn
     189: new           #92                 // class java/net/URISyntaxException
     192: dup
     193: aload_0
     194: ldc           #103                // String unable to parse server URI
     196: invokespecial #96                 // Method java/net/URISyntaxException."<init>":(Ljava/lang/String;Ljava/lang/String;)V
     199: athrow
    Exception table:
       from    to  target type
           0    70    73   Class java/net/URISyntaxException

  public java.nio.CharBuffer buildProtocolConnectOptionsString(java.lang.String, boolean, byte[]);
    Code:
       0: aload_0
       1: getfield      #44                 // Field maxControlLine:I
       4: invokestatic  #104                // Method java/nio/CharBuffer.allocate:(I)Ljava/nio/CharBuffer;
       7: astore        4
       9: aload         4
      11: ldc           #105                // String {
      13: invokevirtual #106                // Method java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      16: pop
      17: aload_0
      18: aload         4
      20: ldc           #107                // String lang
      22: ldc           #109                // String java
      24: iconst_1
      25: iconst_0
      26: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
      29: aload_0
      30: aload         4
      32: ldc           #111                // String version
      34: ldc           #112                // String 2.12.0
      36: iconst_1
      37: iconst_1
      38: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
      41: aload_0
      42: getfield      #10                 // Field connectionName:Ljava/lang/String;
      45: ifnull        62
      48: aload_0
      49: aload         4
      51: ldc           #113                // String name
      53: aload_0
      54: getfield      #10                 // Field connectionName:Ljava/lang/String;
      57: iconst_1
      58: iconst_1
      59: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
      62: aload_0
      63: aload         4
      65: ldc           #114                // String protocol
      67: ldc           #115                // String 1
      69: iconst_0
      70: iconst_1
      71: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
      74: aload_0
      75: aload         4
      77: ldc           #116                // String verbose
      79: aload_0
      80: invokevirtual #117                // Method isVerbose:()Z
      83: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
      86: iconst_0
      87: iconst_1
      88: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
      91: aload_0
      92: aload         4
      94: ldc           #119                // String pedantic
      96: aload_0
      97: invokevirtual #120                // Method isPedantic:()Z
     100: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     103: iconst_0
     104: iconst_1
     105: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     108: aload_0
     109: aload         4
     111: ldc           #121                // String tls_required
     113: aload_0
     114: invokevirtual #122                // Method isTLSRequired:()Z
     117: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     120: iconst_0
     121: iconst_1
     122: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     125: aload_0
     126: aload         4
     128: ldc           #123                // String echo
     130: aload_0
     131: invokevirtual #124                // Method isNoEcho:()Z
     134: ifne          141
     137: iconst_1
     138: goto          142
     141: iconst_0
     142: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     145: iconst_0
     146: iconst_1
     147: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     150: aload_0
     151: aload         4
     153: ldc           #125                // String headers
     155: aload_0
     156: invokevirtual #126                // Method isNoHeaders:()Z
     159: ifne          166
     162: iconst_1
     163: goto          167
     166: iconst_0
     167: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     170: iconst_0
     171: iconst_1
     172: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     175: aload_0
     176: aload         4
     178: ldc           #127                // String no_responders
     180: aload_0
     181: invokevirtual #128                // Method isNoNoResponders:()Z
     184: ifne          191
     187: iconst_1
     188: goto          192
     191: iconst_0
     192: invokestatic  #118                // Method java/lang/String.valueOf:(Z)Ljava/lang/String;
     195: iconst_0
     196: iconst_1
     197: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     200: iload_2
     201: ifeq          331
     204: aload_3
     205: ifnull        331
     208: aload_0
     209: invokevirtual #129                // Method getAuthHandler:()Lio/nats/client/AuthHandler;
     212: ifnull        331
     215: aload_0
     216: invokevirtual #129                // Method getAuthHandler:()Lio/nats/client/AuthHandler;
     219: invokeinterface #130,  1          // InterfaceMethod io/nats/client/AuthHandler.getID:()[C
     224: astore        5
     226: aload_0
     227: invokevirtual #129                // Method getAuthHandler:()Lio/nats/client/AuthHandler;
     230: aload_3
     231: invokeinterface #131,  2          // InterfaceMethod io/nats/client/AuthHandler.sign:([B)[B
     236: astore        6
     238: aload_0
     239: invokevirtual #129                // Method getAuthHandler:()Lio/nats/client/AuthHandler;
     242: invokeinterface #132,  1          // InterfaceMethod io/nats/client/AuthHandler.getJWT:()[C
     247: astore        7
     249: aload         6
     251: ifnonnull     259
     254: iconst_0
     255: newarray       byte
     257: astore        6
     259: aload         7
     261: ifnonnull     269
     264: iconst_0
     265: newarray       char
     267: astore        7
     269: aload         5
     271: ifnonnull     279
     274: iconst_0
     275: newarray       char
     277: astore        5
     279: invokestatic  #133                // Method java/util/Base64.getUrlEncoder:()Ljava/util/Base64$Encoder;
     282: invokevirtual #134                // Method java/util/Base64$Encoder.withoutPadding:()Ljava/util/Base64$Encoder;
     285: aload         6
     287: invokevirtual #135                // Method java/util/Base64$Encoder.encodeToString:([B)Ljava/lang/String;
     290: astore        8
     292: aload_0
     293: aload         4
     295: ldc           #136                // String nkey
     297: aload         5
     299: iconst_1
     300: iconst_1
     301: invokespecial #137                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;[CZZ)V
     304: aload_0
     305: aload         4
     307: ldc           #138                // String sig
     309: aload         8
     311: iconst_1
     312: iconst_1
     313: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     316: aload_0
     317: aload         4
     319: ldc           #139                // String jwt
     321: aload         7
     323: iconst_1
     324: iconst_1
     325: invokespecial #137                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;[CZZ)V
     328: goto          526
     331: iload_2
     332: ifeq          526
     335: aconst_null
     336: astore        5
     338: aconst_null
     339: astore        6
     341: aconst_null
     342: astore        7
     344: aload_0
     345: aload_1
     346: invokevirtual #140                // Method createURIForServer:(Ljava/lang/String;)Ljava/net/URI;
     349: astore        8
     351: aload         8
     353: invokevirtual #98                 // Method java/net/URI.getUserInfo:()Ljava/lang/String;
     356: astore        9
     358: aload         9
     360: ifnull        398
     363: aload         9
     365: ldc           #141                // String :
     367: invokevirtual #142                // Method java/lang/String.split:(Ljava/lang/String;)[Ljava/lang/String;
     370: astore        10
     372: aload         10
     374: arraylength
     375: iconst_2
     376: if_icmpne     394
     379: aload         10
     381: iconst_0
     382: aaload
     383: astore        5
     385: aload         10
     387: iconst_1
     388: aaload
     389: astore        6
     391: goto          398
     394: aload         9
     396: astore        7
     398: goto          403
     401: astore        8
     403: aload         5
     405: ifnull        423
     408: aload_0
     409: aload         4
     411: ldc           #143                // String user
     413: aload         5
     415: iconst_1
     416: iconst_1
     417: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     420: goto          444
     423: aload_0
     424: getfield      #36                 // Field username:[C
     427: ifnull        444
     430: aload_0
     431: aload         4
     433: ldc           #143                // String user
     435: aload_0
     436: getfield      #36                 // Field username:[C
     439: iconst_1
     440: iconst_1
     441: invokespecial #137                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;[CZZ)V
     444: aload         6
     446: ifnull        464
     449: aload_0
     450: aload         4
     452: ldc           #144                // String pass
     454: aload         6
     456: iconst_1
     457: iconst_1
     458: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     461: goto          485
     464: aload_0
     465: getfield      #38                 // Field password:[C
     468: ifnull        485
     471: aload_0
     472: aload         4
     474: ldc           #144                // String pass
     476: aload_0
     477: getfield      #38                 // Field password:[C
     480: iconst_1
     481: iconst_1
     482: invokespecial #137                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;[CZZ)V
     485: aload         7
     487: ifnull        505
     490: aload_0
     491: aload         4
     493: ldc           #145                // String auth_token
     495: aload         7
     497: iconst_1
     498: iconst_1
     499: invokespecial #110                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;Ljava/lang/String;ZZ)V
     502: goto          526
     505: aload_0
     506: getfield      #40                 // Field token:[C
     509: ifnull        526
     512: aload_0
     513: aload         4
     515: ldc           #145                // String auth_token
     517: aload_0
     518: getfield      #40                 // Field token:[C
     521: iconst_1
     522: iconst_1
     523: invokespecial #137                // Method appendOption:(Ljava/nio/CharBuffer;Ljava/lang/String;[CZZ)V
     526: aload         4
     528: ldc           #146                // String }
     530: invokevirtual #106                // Method java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
     533: pop
     534: aload         4
     536: invokevirtual #147                // Method java/nio/CharBuffer.flip:()Ljava/nio/Buffer;
     539: pop
     540: aload         4
     542: areturn
    Exception table:
       from    to  target type
         344   398   401   Class java/net/URISyntaxException

  private void appendOption(java.nio.CharBuffer, java.lang.String, java.lang.String, boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: iload         5
       7: invokespecial #148                // Method _appendStart:(Ljava/nio/CharBuffer;Ljava/lang/String;ZZ)V
      10: aload_1
      11: aload_3
      12: invokevirtual #106                // Method java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      15: pop
      16: aload_0
      17: aload_1
      18: iload         4
      20: invokespecial #149                // Method _appendOptionEnd:(Ljava/nio/CharBuffer;Z)V
      23: return

  private void appendOption(java.nio.CharBuffer, java.lang.String, char[], boolean, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iload         4
       5: iload         5
       7: invokespecial #148                // Method _appendStart:(Ljava/nio/CharBuffer;Ljava/lang/String;ZZ)V
      10: aload_1
      11: aload_3
      12: invokevirtual #150                // Method java/nio/CharBuffer.put:([C)Ljava/nio/CharBuffer;
      15: pop
      16: aload_0
      17: aload_1
      18: iload         4
      20: invokespecial #149                // Method _appendOptionEnd:(Ljava/nio/CharBuffer;Z)V
      23: return

  private void _appendStart(java.nio.CharBuffer, java.lang.String, boolean, boolean);
    Code:
       0: iload         4
       2: ifeq          12
       5: aload_1
       6: bipush        44
       8: invokevirtual #151                // Method java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
      11: pop
      12: aload_1
      13: bipush        34
      15: invokevirtual #151                // Method java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
      18: pop
      19: aload_1
      20: aload_2
      21: invokevirtual #106                // Method java/nio/CharBuffer.append:(Ljava/lang/CharSequence;)Ljava/nio/CharBuffer;
      24: pop
      25: aload_1
      26: bipush        34
      28: invokevirtual #151                // Method java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
      31: pop
      32: aload_1
      33: bipush        58
      35: invokevirtual #151                // Method java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
      38: pop
      39: aload_0
      40: aload_1
      41: iload_3
      42: invokespecial #149                // Method _appendOptionEnd:(Ljava/nio/CharBuffer;Z)V
      45: return

  private void _appendOptionEnd(java.nio.CharBuffer, boolean);
    Code:
       0: iload_2
       1: ifeq          11
       4: aload_1
       5: bipush        34
       7: invokevirtual #151                // Method java/nio/CharBuffer.append:(C)Ljava/nio/CharBuffer;
      10: pop
      11: return

  public void setOldRequestStyle(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #42                 // Field useOldRequestStyle:Z
       5: return

  io.nats.client.Options(io.nats.client.Options$Builder, io.nats.client.Options$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lio/nats/client/Options$Builder;)V
       5: return

  static {};
    Code:
       0: ldc2_w        #152                // long 2000l
       3: invokestatic  #154                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
       6: putstatic     #155                // Field DEFAULT_RECONNECT_WAIT:Ljava/time/Duration;
       9: ldc2_w        #156                // long 100l
      12: invokestatic  #154                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      15: putstatic     #158                // Field DEFAULT_RECONNECT_JITTER:Ljava/time/Duration;
      18: ldc2_w        #159                // long 1000l
      21: invokestatic  #154                // Method java/time/Duration.ofMillis:(J)Ljava/time/Duration;
      24: putstatic     #161                // Field DEFAULT_RECONNECT_JITTER_TLS:Ljava/time/Duration;
      27: ldc2_w        #162                // long 2l
      30: invokestatic  #164                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      33: putstatic     #165                // Field DEFAULT_CONNECTION_TIMEOUT:Ljava/time/Duration;
      36: ldc2_w        #162                // long 2l
      39: invokestatic  #166                // Method java/time/Duration.ofMinutes:(J)Ljava/time/Duration;
      42: putstatic     #167                // Field DEFAULT_PING_INTERVAL:Ljava/time/Duration;
      45: ldc2_w        #168                // long 5l
      48: invokestatic  #164                // Method java/time/Duration.ofSeconds:(J)Ljava/time/Duration;
      51: putstatic     #170                // Field DEFAULT_REQUEST_CLEANUP_INTERVAL:Ljava/time/Duration;
      54: ldc           #171                // class io/nats/client/impl/SocketDataPort
      56: invokevirtual #172                // Method java/lang/Class.getCanonicalName:()Ljava/lang/String;
      59: putstatic     #173                // Field DEFAULT_DATA_PORT_TYPE:Ljava/lang/String;
      62: return
}
