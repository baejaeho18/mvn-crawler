Compiled from "AckType.java"
public final class io.nats.client.impl.AckType extends java.lang.Enum<io.nats.client.impl.AckType> {
  public static final io.nats.client.impl.AckType AckAck;

  public static final io.nats.client.impl.AckType AckNak;

  public static final io.nats.client.impl.AckType AckProgress;

  public static final io.nats.client.impl.AckType AckTerm;

  public static final io.nats.client.impl.AckType AckNext;

  public final java.lang.String text;

  public final byte[] bytes;

  private static final io.nats.client.impl.AckType[] $VALUES;

  public static io.nats.client.impl.AckType[] values();
    Code:
       0: getstatic     #1                  // Field $VALUES:[Lio/nats/client/impl/AckType;
       3: invokevirtual #2                  // Method "[Lio/nats/client/impl/AckType;".clone:()Ljava/lang/Object;
       6: checkcast     #3                  // class "[Lio/nats/client/impl/AckType;"
       9: areturn

  public static io.nats.client.impl.AckType valueOf(java.lang.String);
    Code:
       0: ldc           #4                  // class io/nats/client/impl/AckType
       2: aload_0
       3: invokestatic  #5                  // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       6: checkcast     #4                  // class io/nats/client/impl/AckType
       9: areturn

  private io.nats.client.impl.AckType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #6                  // Method java/lang/Enum."<init>":(Ljava/lang/String;I)V
       6: aload_0
       7: aload_3
       8: putfield      #7                  // Field text:Ljava/lang/String;
      11: aload_0
      12: aload_3
      13: invokevirtual #8                  // Method java/lang/String.getBytes:()[B
      16: putfield      #9                  // Field bytes:[B
      19: return

  static {};
    Code:
       0: new           #4                  // class io/nats/client/impl/AckType
       3: dup
       4: ldc           #10                 // String AckAck
       6: iconst_0
       7: ldc           #11                 // String +ACK
       9: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      12: putstatic     #13                 // Field AckAck:Lio/nats/client/impl/AckType;
      15: new           #4                  // class io/nats/client/impl/AckType
      18: dup
      19: ldc           #14                 // String AckNak
      21: iconst_1
      22: ldc           #15                 // String -NAK
      24: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      27: putstatic     #16                 // Field AckNak:Lio/nats/client/impl/AckType;
      30: new           #4                  // class io/nats/client/impl/AckType
      33: dup
      34: ldc           #17                 // String AckProgress
      36: iconst_2
      37: ldc           #18                 // String +WPI
      39: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      42: putstatic     #19                 // Field AckProgress:Lio/nats/client/impl/AckType;
      45: new           #4                  // class io/nats/client/impl/AckType
      48: dup
      49: ldc           #20                 // String AckTerm
      51: iconst_3
      52: ldc           #21                 // String +TERM
      54: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      57: putstatic     #22                 // Field AckTerm:Lio/nats/client/impl/AckType;
      60: new           #4                  // class io/nats/client/impl/AckType
      63: dup
      64: ldc           #23                 // String AckNext
      66: iconst_4
      67: ldc           #24                 // String +NXT
      69: invokespecial #12                 // Method "<init>":(Ljava/lang/String;ILjava/lang/String;)V
      72: putstatic     #25                 // Field AckNext:Lio/nats/client/impl/AckType;
      75: iconst_5
      76: anewarray     #4                  // class io/nats/client/impl/AckType
      79: dup
      80: iconst_0
      81: getstatic     #13                 // Field AckAck:Lio/nats/client/impl/AckType;
      84: aastore
      85: dup
      86: iconst_1
      87: getstatic     #16                 // Field AckNak:Lio/nats/client/impl/AckType;
      90: aastore
      91: dup
      92: iconst_2
      93: getstatic     #19                 // Field AckProgress:Lio/nats/client/impl/AckType;
      96: aastore
      97: dup
      98: iconst_3
      99: getstatic     #22                 // Field AckTerm:Lio/nats/client/impl/AckType;
     102: aastore
     103: dup
     104: iconst_4
     105: getstatic     #25                 // Field AckNext:Lio/nats/client/impl/AckType;
     108: aastore
     109: putstatic     #1                  // Field $VALUES:[Lio/nats/client/impl/AckType;
     112: return
}
