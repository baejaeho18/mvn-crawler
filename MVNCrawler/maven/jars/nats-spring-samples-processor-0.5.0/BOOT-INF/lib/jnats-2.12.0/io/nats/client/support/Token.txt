Compiled from "Token.java"
public class io.nats.client.support.Token {
  private final byte[] serialized;

  private final io.nats.client.support.TokenType type;

  private final int start;

  private int end;

  private boolean hasValue;

  public io.nats.client.support.Token(byte[], int, io.nats.client.support.Token, io.nats.client.support.TokenType);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: aload_3
       4: getfield      #2                  // Field end:I
       7: aload_3
       8: getfield      #3                  // Field type:Lio/nats/client/support/TokenType;
      11: getstatic     #4                  // Field io/nats/client/support/TokenType.KEY:Lio/nats/client/support/TokenType;
      14: if_acmpne     21
      17: iconst_2
      18: goto          22
      21: iconst_1
      22: iadd
      23: aload         4
      25: invokespecial #5                  // Method "<init>":([BIILio/nats/client/support/TokenType;)V
      28: return

  public io.nats.client.support.Token(byte[], int, int, io.nats.client.support.TokenType);
    Code:
       0: aload_0
       1: invokespecial #6                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #7                  // Field serialized:[B
       9: iload_3
      10: iload_2
      11: if_icmplt     24
      14: new           #8                  // class java/lang/IllegalArgumentException
      17: dup
      18: ldc           #9                  // String Invalid header composition
      20: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_1
      25: iload_3
      26: baload
      27: bipush        32
      29: if_icmpne     68
      32: aload_0
      33: getstatic     #11                 // Field io/nats/client/support/TokenType.SPACE:Lio/nats/client/support/TokenType;
      36: putfield      #3                  // Field type:Lio/nats/client/support/TokenType;
      39: aload_0
      40: iload_3
      41: putfield      #12                 // Field start:I
      44: aload_0
      45: iload_3
      46: putfield      #2                  // Field end:I
      49: aload_1
      50: iinc          3, 1
      53: iload_3
      54: baload
      55: bipush        32
      57: if_icmpne     278
      60: aload_0
      61: iload_3
      62: putfield      #2                  // Field end:I
      65: goto          49
      68: aload_1
      69: iload_3
      70: baload
      71: bipush        13
      73: if_icmpne     104
      76: aload_0
      77: iload_2
      78: iload_3
      79: invokespecial #13                 // Method mustBeCrlf:(II)V
      82: aload_0
      83: getstatic     #14                 // Field io/nats/client/support/TokenType.CRLF:Lio/nats/client/support/TokenType;
      86: putfield      #3                  // Field type:Lio/nats/client/support/TokenType;
      89: aload_0
      90: iload_3
      91: putfield      #12                 // Field start:I
      94: aload_0
      95: iload_3
      96: iconst_1
      97: iadd
      98: putfield      #2                  // Field end:I
     101: goto          278
     104: aload         4
     106: getstatic     #14                 // Field io/nats/client/support/TokenType.CRLF:Lio/nats/client/support/TokenType;
     109: if_acmpeq     120
     112: aload         4
     114: getstatic     #11                 // Field io/nats/client/support/TokenType.SPACE:Lio/nats/client/support/TokenType;
     117: if_acmpne     130
     120: new           #8                  // class java/lang/IllegalArgumentException
     123: dup
     124: ldc           #9                  // String Invalid header composition
     126: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     129: athrow
     130: bipush        13
     132: istore        5
     134: bipush        13
     136: istore        6
     138: aload         4
     140: ifnull        151
     143: aload         4
     145: getstatic     #15                 // Field io/nats/client/support/TokenType.TEXT:Lio/nats/client/support/TokenType;
     148: if_acmpne     161
     151: aload_0
     152: getstatic     #15                 // Field io/nats/client/support/TokenType.TEXT:Lio/nats/client/support/TokenType;
     155: putfield      #3                  // Field type:Lio/nats/client/support/TokenType;
     158: goto          202
     161: aload         4
     163: getstatic     #16                 // Field io/nats/client/support/TokenType.WORD:Lio/nats/client/support/TokenType;
     166: if_acmpne     187
     169: bipush        32
     171: istore        5
     173: bipush        13
     175: istore        6
     177: aload_0
     178: getstatic     #16                 // Field io/nats/client/support/TokenType.WORD:Lio/nats/client/support/TokenType;
     181: putfield      #3                  // Field type:Lio/nats/client/support/TokenType;
     184: goto          202
     187: bipush        58
     189: istore        5
     191: bipush        58
     193: istore        6
     195: aload_0
     196: getstatic     #4                  // Field io/nats/client/support/TokenType.KEY:Lio/nats/client/support/TokenType;
     199: putfield      #3                  // Field type:Lio/nats/client/support/TokenType;
     202: aload_0
     203: iload_3
     204: putfield      #12                 // Field start:I
     207: aload_0
     208: iload_3
     209: putfield      #2                  // Field end:I
     212: iinc          3, 1
     215: iload_3
     216: iload_2
     217: if_icmpge     244
     220: aload_1
     221: iload_3
     222: baload
     223: iload         5
     225: if_icmpeq     244
     228: aload_1
     229: iload_3
     230: baload
     231: iload         6
     233: if_icmpeq     244
     236: aload_0
     237: iload_3
     238: putfield      #2                  // Field end:I
     241: goto          212
     244: iload_3
     245: iload_2
     246: if_icmplt     259
     249: new           #8                  // class java/lang/IllegalArgumentException
     252: dup
     253: ldc           #9                  // String Invalid header composition
     255: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     258: athrow
     259: aload_1
     260: iload_3
     261: baload
     262: bipush        13
     264: if_icmpne     273
     267: aload_0
     268: iload_2
     269: iload_3
     270: invokespecial #13                 // Method mustBeCrlf:(II)V
     273: aload_0
     274: iconst_1
     275: putfield      #17                 // Field hasValue:Z
     278: return

  private void mustBeCrlf(int, int);
    Code:
       0: iload_2
       1: iconst_1
       2: iadd
       3: iload_1
       4: if_icmpge     20
       7: aload_0
       8: getfield      #7                  // Field serialized:[B
      11: iload_2
      12: iconst_1
      13: iadd
      14: baload
      15: bipush        10
      17: if_icmpeq     30
      20: new           #8                  // class java/lang/IllegalArgumentException
      23: dup
      24: ldc           #9                  // String Invalid header composition
      26: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      29: athrow
      30: return

  public void mustBe(io.nats.client.support.TokenType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lio/nats/client/support/TokenType;
       4: aload_1
       5: if_acmpeq     18
       8: new           #8                  // class java/lang/IllegalArgumentException
      11: dup
      12: ldc           #9                  // String Invalid header composition
      14: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      17: athrow
      18: return

  public boolean isType(io.nats.client.support.TokenType);
    Code:
       0: aload_0
       1: getfield      #3                  // Field type:Lio/nats/client/support/TokenType;
       4: aload_1
       5: if_acmpne     12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public boolean hasValue();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hasValue:Z
       4: ireturn

  public java.lang.String getValue();
    Code:
       0: aload_0
       1: getfield      #17                 // Field hasValue:Z
       4: ifeq          42
       7: new           #18                 // class java/lang/String
      10: dup
      11: aload_0
      12: getfield      #7                  // Field serialized:[B
      15: aload_0
      16: getfield      #12                 // Field start:I
      19: aload_0
      20: getfield      #2                  // Field end:I
      23: aload_0
      24: getfield      #12                 // Field start:I
      27: isub
      28: iconst_1
      29: iadd
      30: getstatic     #19                 // Field java/nio/charset/StandardCharsets.US_ASCII:Ljava/nio/charset/Charset;
      33: invokespecial #20                 // Method java/lang/String."<init>":([BIILjava/nio/charset/Charset;)V
      36: invokevirtual #21                 // Method java/lang/String.trim:()Ljava/lang/String;
      39: goto          44
      42: ldc           #22                 // String
      44: areturn

  public boolean samePoint(io.nats.client.support.Token);
    Code:
       0: aload_0
       1: getfield      #12                 // Field start:I
       4: aload_1
       5: getfield      #12                 // Field start:I
       8: if_icmpne     37
      11: aload_0
      12: getfield      #2                  // Field end:I
      15: aload_1
      16: getfield      #2                  // Field end:I
      19: if_icmpne     37
      22: aload_0
      23: getfield      #3                  // Field type:Lio/nats/client/support/TokenType;
      26: aload_1
      27: getfield      #3                  // Field type:Lio/nats/client/support/TokenType;
      30: if_acmpne     37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ireturn
}
