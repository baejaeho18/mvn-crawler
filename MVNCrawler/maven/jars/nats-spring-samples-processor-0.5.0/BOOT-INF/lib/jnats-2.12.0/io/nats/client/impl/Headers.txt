Compiled from "Headers.java"
public class io.nats.client.impl.Headers {
  private static final java.lang.String KEY_CANNOT_BE_EMPTY_OR_NULL;

  private static final java.lang.String KEY_INVALID_CHARACTER;

  private static final java.lang.String VALUE_INVALID_CHARACTERS;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> valuesMap;

  private final java.util.Map<java.lang.String, java.lang.Integer> lengthMap;

  private byte[] serialized;

  private int dataLength;

  private static final int NON_DATA_BYTES;

  public io.nats.client.impl.Headers();
    Code:
       0: aload_0
       1: invokespecial #3                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #4                  // class java/util/HashMap
       8: dup
       9: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      12: putfield      #6                  // Field valuesMap:Ljava/util/Map;
      15: aload_0
      16: new           #4                  // class java/util/HashMap
      19: dup
      20: invokespecial #5                  // Method java/util/HashMap."<init>":()V
      23: putfield      #7                  // Field lengthMap:Ljava/util/Map;
      26: return

  public io.nats.client.impl.Headers(io.nats.client.impl.Headers);
    Code:
       0: aload_0
       1: invokespecial #8                  // Method "<init>":()V
       4: aload_1
       5: ifnull        47
       8: aload_0
       9: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      12: aload_1
      13: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      16: invokeinterface #9,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      21: aload_0
      22: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      25: aload_1
      26: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      29: invokeinterface #9,  2            // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      34: aload_0
      35: aload_1
      36: getfield      #10                 // Field dataLength:I
      39: putfield      #10                 // Field dataLength:I
      42: aload_0
      43: aconst_null
      44: putfield      #11                 // Field serialized:[B
      47: return

  public io.nats.client.impl.Headers add(java.lang.String, java.lang.String...);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: invokespecial #13                 // Method _add:(Ljava/lang/String;Ljava/util/Collection;)V
      13: aload_0
      14: areturn

  public io.nats.client.impl.Headers add(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #13                 // Method _add:(Ljava/lang/String;Ljava/util/Collection;)V
       6: aload_0
       7: areturn

  private void _add(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_2
       1: ifnull        115
       4: new           #14                 // class io/nats/client/impl/Headers$Checker
       7: dup
       8: aload_0
       9: aload_1
      10: aload_2
      11: invokespecial #15                 // Method io/nats/client/impl/Headers$Checker."<init>":(Lio/nats/client/impl/Headers;Ljava/lang/String;Ljava/util/Collection;)V
      14: astore_3
      15: aload_3
      16: invokevirtual #16                 // Method io/nats/client/impl/Headers$Checker.hasValues:()Z
      19: ifeq          115
      22: aload_0
      23: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      26: aload_1
      27: invokedynamic #17,  0             // InvokeDynamic #0:apply:()Ljava/util/function/Function;
      32: invokeinterface #18,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      37: checkcast     #19                 // class java/util/List
      40: astore        4
      42: aload         4
      44: aload_3
      45: getfield      #20                 // Field io/nats/client/impl/Headers$Checker.list:Ljava/util/List;
      48: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      53: pop
      54: aload_0
      55: dup
      56: getfield      #10                 // Field dataLength:I
      59: aload_3
      60: getfield      #22                 // Field io/nats/client/impl/Headers$Checker.len:I
      63: iadd
      64: putfield      #10                 // Field dataLength:I
      67: aload_0
      68: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      71: aload_1
      72: iconst_0
      73: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      76: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: checkcast     #25                 // class java/lang/Integer
      84: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      87: istore        5
      89: aload_0
      90: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      93: aload_1
      94: iload         5
      96: aload_3
      97: getfield      #22                 // Field io/nats/client/impl/Headers$Checker.len:I
     100: iadd
     101: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: aconst_null
     112: putfield      #11                 // Field serialized:[B
     115: return

  public io.nats.client.impl.Headers put(java.lang.String, java.lang.String...);
    Code:
       0: aload_2
       1: ifnull        13
       4: aload_0
       5: aload_1
       6: aload_2
       7: invokestatic  #12                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      10: invokespecial #28                 // Method _put:(Ljava/lang/String;Ljava/util/Collection;)V
      13: aload_0
      14: areturn

  public io.nats.client.impl.Headers put(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #28                 // Method _put:(Ljava/lang/String;Ljava/util/Collection;)V
       6: aload_0
       7: areturn

  private void _put(java.lang.String, java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #29                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #30                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #31                 // String Key cannot be null or empty.
      17: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_2
      22: ifnull        115
      25: new           #14                 // class io/nats/client/impl/Headers$Checker
      28: dup
      29: aload_0
      30: aload_1
      31: aload_2
      32: invokespecial #15                 // Method io/nats/client/impl/Headers$Checker."<init>":(Lio/nats/client/impl/Headers;Ljava/lang/String;Ljava/util/Collection;)V
      35: astore_3
      36: aload_3
      37: invokevirtual #16                 // Method io/nats/client/impl/Headers$Checker.hasValues:()Z
      40: ifeq          115
      43: aload_0
      44: aload_0
      45: getfield      #10                 // Field dataLength:I
      48: aload_0
      49: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      52: aload_1
      53: iconst_0
      54: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      57: invokeinterface #24,  3           // InterfaceMethod java/util/Map.getOrDefault:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      62: checkcast     #25                 // class java/lang/Integer
      65: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      68: isub
      69: aload_3
      70: getfield      #22                 // Field io/nats/client/impl/Headers$Checker.len:I
      73: iadd
      74: putfield      #10                 // Field dataLength:I
      77: aload_0
      78: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      81: aload_1
      82: aload_3
      83: getfield      #20                 // Field io/nats/client/impl/Headers$Checker.list:Ljava/util/List;
      86: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      91: pop
      92: aload_0
      93: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      96: aload_1
      97: aload_3
      98: getfield      #22                 // Field io/nats/client/impl/Headers$Checker.len:I
     101: invokestatic  #23                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
     104: invokeinterface #27,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     109: pop
     110: aload_0
     111: aconst_null
     112: putfield      #11                 // Field serialized:[B
     115: return

  public void remove(java.lang.String...);
    Code:
       0: aload_1
       1: astore_2
       2: aload_2
       3: arraylength
       4: istore_3
       5: iconst_0
       6: istore        4
       8: iload         4
      10: iload_3
      11: if_icmpge     32
      14: aload_2
      15: iload         4
      17: aaload
      18: astore        5
      20: aload_0
      21: aload         5
      23: invokespecial #33                 // Method _remove:(Ljava/lang/String;)V
      26: iinc          4, 1
      29: goto          8
      32: aload_0
      33: aconst_null
      34: putfield      #11                 // Field serialized:[B
      37: return

  public void remove(java.util.Collection<java.lang.String>);
    Code:
       0: aload_1
       1: invokeinterface #34,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          34
      16: aload_2
      17: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #37                 // class java/lang/String
      25: astore_3
      26: aload_0
      27: aload_3
      28: invokespecial #33                 // Method _remove:(Ljava/lang/String;)V
      31: goto          7
      34: aload_0
      35: aconst_null
      36: putfield      #11                 // Field serialized:[B
      39: return

  private void _remove(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        38
      13: aload_0
      14: dup
      15: getfield      #10                 // Field dataLength:I
      18: aload_0
      19: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      22: aload_1
      23: invokeinterface #38,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      28: checkcast     #25                 // class java/lang/Integer
      31: invokevirtual #26                 // Method java/lang/Integer.intValue:()I
      34: isub
      35: putfield      #10                 // Field dataLength:I
      38: return

  public int size();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #39,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #40,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public void clear();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #41,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #7                  // Field lengthMap:Ljava/util/Map;
      13: invokeinterface #41,  1           // InterfaceMethod java/util/Map.clear:()V
      18: aload_0
      19: iconst_0
      20: putfield      #10                 // Field dataLength:I
      23: aload_0
      24: aconst_null
      25: putfield      #11                 // Field serialized:[B
      28: return

  public boolean containsKey(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #42,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsKeyIgnoreCase(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      14: astore_2
      15: aload_2
      16: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      21: ifeq          47
      24: aload_2
      25: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      30: checkcast     #37                 // class java/lang/String
      33: astore_3
      34: aload_3
      35: aload_1
      36: invokevirtual #45                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      39: ifeq          44
      42: iconst_1
      43: ireturn
      44: goto          15
      47: iconst_0
      48: ireturn

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: invokestatic  #46                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public java.util.Set<java.lang.String> keySetIgnoreCase();
    Code:
       0: new           #47                 // class java/util/HashSet
       3: dup
       4: invokespecial #48                 // Method java/util/HashSet."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      12: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          54
      32: aload_2
      33: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #37                 // class java/lang/String
      41: astore_3
      42: aload_1
      43: aload_3
      44: invokevirtual #49                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
      47: invokevirtual #50                 // Method java/util/HashSet.add:(Ljava/lang/Object;)Z
      50: pop
      51: goto          23
      54: aload_1
      55: invokestatic  #46                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      58: areturn

  public java.util.List<java.lang.String> get(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          26
      22: aload_2
      23: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      26: areturn

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #19                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnonnull     22
      18: aconst_null
      19: goto          32
      22: aload_2
      23: iconst_0
      24: invokeinterface #53,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      29: checkcast     #37                 // class java/lang/String
      32: areturn

  public java.util.List<java.lang.String> getIgnoreCase(java.lang.String);
    Code:
       0: new           #54                 // class java/util/ArrayList
       3: dup
       4: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
       7: astore_2
       8: aload_0
       9: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      12: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_3
      23: aload_3
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          76
      32: aload_3
      33: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #37                 // class java/lang/String
      41: astore        4
      43: aload         4
      45: aload_1
      46: invokevirtual #45                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      49: ifeq          73
      52: aload_2
      53: aload_0
      54: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      57: aload         4
      59: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      64: checkcast     #56                 // class java/util/Collection
      67: invokeinterface #21,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      72: pop
      73: goto          23
      76: aload_2
      77: invokeinterface #57,  1           // InterfaceMethod java/util/List.size:()I
      82: ifne          89
      85: aconst_null
      86: goto          93
      89: aload_2
      90: invokestatic  #52                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
      93: areturn

  public void forEach(java.util.function.BiConsumer<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokestatic  #58                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
       7: aload_1
       8: invokeinterface #59,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      13: return

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #6                  // Field valuesMap:Ljava/util/Map;
       4: invokeinterface #60,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: invokestatic  #46                 // Method java/util/Collections.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;
      12: areturn

  public boolean isDirty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field serialized:[B
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public int serializedLength();
    Code:
       0: aload_0
       1: getfield      #10                 // Field dataLength:I
       4: getstatic     #61                 // Field NON_DATA_BYTES:I
       7: iadd
       8: ireturn

  public byte[] getSerialized();
    Code:
       0: aload_0
       1: getfield      #11                 // Field serialized:[B
       4: ifnonnull     33
       7: aload_0
       8: aload_0
       9: new           #62                 // class io/nats/client/support/ByteArrayBuilder
      12: dup
      13: aload_0
      14: getfield      #10                 // Field dataLength:I
      17: getstatic     #61                 // Field NON_DATA_BYTES:I
      20: iadd
      21: invokespecial #63                 // Method io/nats/client/support/ByteArrayBuilder."<init>":(I)V
      24: invokevirtual #64                 // Method appendSerialized:(Lio/nats/client/support/ByteArrayBuilder;)Lio/nats/client/support/ByteArrayBuilder;
      27: invokevirtual #65                 // Method io/nats/client/support/ByteArrayBuilder.toByteArray:()[B
      30: putfield      #11                 // Field serialized:[B
      33: aload_0
      34: getfield      #11                 // Field serialized:[B
      37: areturn

  public io.nats.client.support.ByteArrayBuilder appendSerialized(io.nats.client.support.ByteArrayBuilder);
    Code:
       0: aload_1
       1: getstatic     #66                 // Field io/nats/client/support/NatsConstants.HEADER_VERSION_BYTES_PLUS_CRLF:[B
       4: invokevirtual #67                 // Method io/nats/client/support/ByteArrayBuilder.append:([B)Lio/nats/client/support/ByteArrayBuilder;
       7: pop
       8: aload_0
       9: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      12: invokeinterface #43,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      17: invokeinterface #44,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      22: astore_2
      23: aload_2
      24: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      29: ifeq          119
      32: aload_2
      33: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      38: checkcast     #37                 // class java/lang/String
      41: astore_3
      42: aload_0
      43: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      46: aload_3
      47: invokeinterface #51,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      52: checkcast     #19                 // class java/util/List
      55: invokeinterface #68,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      60: astore        4
      62: aload         4
      64: invokeinterface #35,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      69: ifeq          116
      72: aload         4
      74: invokeinterface #36,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      79: checkcast     #37                 // class java/lang/String
      82: astore        5
      84: aload_1
      85: aload_3
      86: invokevirtual #69                 // Method io/nats/client/support/ByteArrayBuilder.append:(Ljava/lang/String;)Lio/nats/client/support/ByteArrayBuilder;
      89: pop
      90: aload_1
      91: getstatic     #70                 // Field io/nats/client/support/NatsConstants.COLON_BYTES:[B
      94: invokevirtual #67                 // Method io/nats/client/support/ByteArrayBuilder.append:([B)Lio/nats/client/support/ByteArrayBuilder;
      97: pop
      98: aload_1
      99: aload         5
     101: invokevirtual #69                 // Method io/nats/client/support/ByteArrayBuilder.append:(Ljava/lang/String;)Lio/nats/client/support/ByteArrayBuilder;
     104: pop
     105: aload_1
     106: getstatic     #71                 // Field io/nats/client/support/NatsConstants.CRLF_BYTES:[B
     109: invokevirtual #67                 // Method io/nats/client/support/ByteArrayBuilder.append:([B)Lio/nats/client/support/ByteArrayBuilder;
     112: pop
     113: goto          62
     116: goto          23
     119: aload_1
     120: getstatic     #71                 // Field io/nats/client/support/NatsConstants.CRLF_BYTES:[B
     123: invokevirtual #67                 // Method io/nats/client/support/ByteArrayBuilder.append:([B)Lio/nats/client/support/ByteArrayBuilder;
     126: pop
     127: aload_1
     128: areturn

  private void checkKey(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        11
       4: aload_1
       5: invokevirtual #29                 // Method java/lang/String.length:()I
       8: ifne          21
      11: new           #30                 // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #73                 // String Header key cannot be null.
      17: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_1
      22: invokevirtual #29                 // Method java/lang/String.length:()I
      25: istore_2
      26: iconst_0
      27: istore_3
      28: iload_3
      29: iload_2
      30: if_icmpge     100
      33: aload_1
      34: iload_3
      35: invokevirtual #74                 // Method java/lang/String.charAt:(I)C
      38: istore        4
      40: iload         4
      42: bipush        33
      44: if_icmplt     61
      47: iload         4
      49: bipush        126
      51: if_icmpgt     61
      54: iload         4
      56: bipush        58
      58: if_icmpne     94
      61: new           #30                 // class java/lang/IllegalArgumentException
      64: dup
      65: new           #75                 // class java/lang/StringBuilder
      68: dup
      69: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      72: ldc           #77                 // String Header key has invalid character: \'
      74: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      77: iload         4
      79: invokevirtual #79                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      82: ldc           #80                 // String \'
      84: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      87: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      90: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      93: athrow
      94: iinc          3, 1
      97: goto          28
     100: return

  private void checkValue(java.lang.String);
    Code:
       0: aload_1
       1: invokevirtual #82                 // Method java/lang/String.chars:()Ljava/util/stream/IntStream;
       4: invokedynamic #83,  0             // InvokeDynamic #1:accept:()Ljava/util/function/IntConsumer;
       9: invokeinterface #84,  2           // InterfaceMethod java/util/stream/IntStream.forEach:(Ljava/util/function/IntConsumer;)V
      14: return

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: ifnull        22
      11: aload_0
      12: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      15: aload_1
      16: invokevirtual #85                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      19: if_acmpeq     24
      22: iconst_0
      23: ireturn
      24: aload_1
      25: checkcast     #72                 // class io/nats/client/impl/Headers
      28: astore_2
      29: aload_0
      30: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      33: aload_2
      34: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      37: invokestatic  #86                 // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      40: ireturn

  public int hashCode();
    Code:
       0: iconst_1
       1: anewarray     #87                 // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: getfield      #6                  // Field valuesMap:Ljava/util/Map;
      10: aastore
      11: invokestatic  #88                 // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      14: ireturn

  private static void lambda$checkValue$1(int);
    Code:
       0: iload_0
       1: bipush        32
       3: if_icmpge     12
       6: iload_0
       7: bipush        9
       9: if_icmpne     18
      12: iload_0
      13: bipush        126
      15: if_icmple     45
      18: new           #30                 // class java/lang/IllegalArgumentException
      21: dup
      22: new           #75                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #76                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #89                 // String Header value has invalid character:
      31: invokevirtual #78                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: iload_0
      35: invokevirtual #90                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      38: invokevirtual #81                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokespecial #32                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      44: athrow
      45: return

  private static java.util.List lambda$_add$0(java.lang.String);
    Code:
       0: new           #54                 // class java/util/ArrayList
       3: dup
       4: invokespecial #55                 // Method java/util/ArrayList."<init>":()V
       7: areturn

  static void access$000(io.nats.client.impl.Headers, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method checkKey:(Ljava/lang/String;)V
       5: return

  static void access$100(io.nats.client.impl.Headers, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method checkValue:(Ljava/lang/String;)V
       5: return

  static {};
    Code:
       0: getstatic     #66                 // Field io/nats/client/support/NatsConstants.HEADER_VERSION_BYTES_PLUS_CRLF:[B
       3: arraylength
       4: iconst_2
       5: iadd
       6: putstatic     #61                 // Field NON_DATA_BYTES:I
       9: return
}
