Compiled from "MessageQueue.java"
class io.nats.client.impl.MessageQueue {
  private static final int STOPPED;

  private static final int RUNNING;

  private static final int DRAINING;

  private final java.util.concurrent.atomic.AtomicLong length;

  private final java.util.concurrent.atomic.AtomicLong sizeInBytes;

  private final java.util.concurrent.atomic.AtomicInteger running;

  private final boolean singleThreadedReader;

  private final java.util.concurrent.LinkedBlockingQueue<io.nats.client.impl.NatsMessage> queue;

  private final java.util.concurrent.locks.Lock filterLock;

  private final boolean discardWhenFull;

  private final io.nats.client.impl.NatsMessage poisonPill;

  io.nats.client.impl.MessageQueue(boolean, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: iload_2
       6: ifle          20
       9: new           #2                  // class java/util/concurrent/LinkedBlockingQueue
      12: dup
      13: iload_2
      14: invokespecial #3                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":(I)V
      17: goto          27
      20: new           #2                  // class java/util/concurrent/LinkedBlockingQueue
      23: dup
      24: invokespecial #4                  // Method java/util/concurrent/LinkedBlockingQueue."<init>":()V
      27: putfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      30: aload_0
      31: iload_3
      32: putfield      #6                  // Field discardWhenFull:Z
      35: aload_0
      36: new           #7                  // class java/util/concurrent/atomic/AtomicInteger
      39: dup
      40: iconst_1
      41: invokespecial #9                  // Method java/util/concurrent/atomic/AtomicInteger."<init>":(I)V
      44: putfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
      47: aload_0
      48: new           #11                 // class java/util/concurrent/atomic/AtomicLong
      51: dup
      52: lconst_0
      53: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      56: putfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
      59: aload_0
      60: new           #11                 // class java/util/concurrent/atomic/AtomicLong
      63: dup
      64: lconst_0
      65: invokespecial #12                 // Method java/util/concurrent/atomic/AtomicLong."<init>":(J)V
      68: putfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      71: aload_0
      72: new           #15                 // class io/nats/client/impl/NatsMessage
      75: dup
      76: ldc           #16                 // String _poison
      78: aconst_null
      79: getstatic     #17                 // Field io/nats/client/support/NatsConstants.EMPTY_BODY:[B
      82: invokespecial #18                 // Method io/nats/client/impl/NatsMessage."<init>":(Ljava/lang/String;Ljava/lang/String;[B)V
      85: putfield      #19                 // Field poisonPill:Lio/nats/client/impl/NatsMessage;
      88: aload_0
      89: new           #20                 // class java/util/concurrent/locks/ReentrantLock
      92: dup
      93: invokespecial #21                 // Method java/util/concurrent/locks/ReentrantLock."<init>":()V
      96: putfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
      99: aload_0
     100: iload_1
     101: putfield      #23                 // Field singleThreadedReader:Z
     104: return

  io.nats.client.impl.MessageQueue(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: iconst_0
       3: invokespecial #24                 // Method "<init>":(ZI)V
       6: return

  io.nats.client.impl.MessageQueue(boolean, int);
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: iconst_0
       4: invokespecial #25                 // Method "<init>":(ZIZ)V
       7: return

  boolean isSingleReaderMode();
    Code:
       0: aload_0
       1: getfield      #23                 // Field singleThreadedReader:Z
       4: ireturn

  boolean isRunning();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: ifeq          14
      10: iconst_1
      11: goto          15
      14: iconst_0
      15: ireturn

  boolean isDraining();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: iconst_2
       8: if_icmpne     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  void pause();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_0
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: invokevirtual #28                 // Method poisonTheQueue:()V
      12: return

  void resume();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_1
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: return

  void drain();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: iconst_2
       5: invokevirtual #27                 // Method java/util/concurrent/atomic/AtomicInteger.set:(I)V
       8: aload_0
       9: invokevirtual #28                 // Method poisonTheQueue:()V
      12: return

  boolean isDrained();
    Code:
       0: aload_0
       1: getfield      #10                 // Field running:Ljava/util/concurrent/atomic/AtomicInteger;
       4: invokevirtual #26                 // Method java/util/concurrent/atomic/AtomicInteger.get:()I
       7: iconst_2
       8: if_icmpne     24
      11: aload_0
      12: invokevirtual #29                 // Method length:()J
      15: lconst_0
      16: lcmp
      17: ifne          24
      20: iconst_1
      21: goto          25
      24: iconst_0
      25: ireturn

  boolean push(io.nats.client.impl.NatsMessage);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: invokevirtual #30                 // Method push:(Lio/nats/client/impl/NatsMessage;Z)Z
       6: ireturn

  boolean push(io.nats.client.impl.NatsMessage, boolean);
    Code:
       0: aload_0
       1: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: iload_2
      10: ifne          44
      13: aload_0
      14: getfield      #6                  // Field discardWhenFull:Z
      17: ifeq          44
      20: aload_0
      21: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      24: aload_1
      25: invokevirtual #32                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;)Z
      28: istore_3
      29: iload_3
      30: istore        4
      32: aload_0
      33: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
      36: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
      41: iload         4
      43: ireturn
      44: aload_0
      45: aload_1
      46: invokevirtual #34                 // Method offer:(Lio/nats/client/impl/NatsMessage;)Z
      49: ifne          85
      52: new           #35                 // class java/lang/IllegalStateException
      55: dup
      56: new           #36                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #37                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #38                 // String Output queue is full
      65: invokevirtual #39                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_0
      69: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      72: invokevirtual #40                 // Method java/util/concurrent/LinkedBlockingQueue.size:()I
      75: invokevirtual #41                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      78: invokevirtual #42                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
      89: aload_1
      90: invokevirtual #44                 // Method io/nats/client/impl/NatsMessage.getSizeInBytes:()J
      93: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.getAndAdd:(J)J
      96: pop2
      97: aload_0
      98: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
     101: invokevirtual #46                 // Method java/util/concurrent/atomic/AtomicLong.incrementAndGet:()J
     104: pop2
     105: iconst_1
     106: istore_3
     107: aload_0
     108: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
     111: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     116: iload_3
     117: ireturn
     118: astore        5
     120: aload_0
     121: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
     124: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     129: aload         5
     131: athrow
    Exception table:
       from    to  target type
           9    32   118   any
          44   107   118   any
         118   120   118   any

  void poisonTheQueue();
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
       4: aload_0
       5: getfield      #19                 // Field poisonPill:Lio/nats/client/impl/NatsMessage;
       8: invokevirtual #47                 // Method java/util/concurrent/LinkedBlockingQueue.add:(Ljava/lang/Object;)Z
      11: pop
      12: goto          16
      15: astore_1
      16: return
    Exception table:
       from    to  target type
           0    12    15   Class java/lang/IllegalStateException

  boolean offer(io.nats.client.impl.NatsMessage);
    Code:
       0: aload_0
       1: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
       4: aload_1
       5: ldc2_w        #48                 // long 5l
       8: getstatic     #50                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      11: invokevirtual #51                 // Method java/util/concurrent/LinkedBlockingQueue.offer:(Ljava/lang/Object;JLjava/util/concurrent/TimeUnit;)Z
      14: ireturn
      15: astore_2
      16: iconst_0
      17: ireturn
    Exception table:
       from    to  target type
           0    14    15   Class java/lang/InterruptedException

  io.nats.client.impl.NatsMessage poll(java.time.Duration) throws java.lang.InterruptedException;
    Code:
       0: aconst_null
       1: astore_2
       2: aload_1
       3: ifnull        13
       6: aload_0
       7: invokevirtual #53                 // Method isDraining:()Z
      10: ifeq          27
      13: aload_0
      14: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      17: invokevirtual #54                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      20: checkcast     #15                 // class io/nats/client/impl/NatsMessage
      23: astore_2
      24: goto          87
      27: aload_1
      28: invokevirtual #55                 // Method java/time/Duration.toNanos:()J
      31: lstore_3
      32: lload_3
      33: lconst_0
      34: lcmp
      35: ifeq          56
      38: aload_0
      39: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      42: lload_3
      43: getstatic     #56                 // Field java/util/concurrent/TimeUnit.NANOSECONDS:Ljava/util/concurrent/TimeUnit;
      46: invokevirtual #57                 // Method java/util/concurrent/LinkedBlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      49: checkcast     #15                 // class io/nats/client/impl/NatsMessage
      52: astore_2
      53: goto          87
      56: aload_0
      57: invokevirtual #58                 // Method isRunning:()Z
      60: ifeq          87
      63: aload_0
      64: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      67: ldc2_w        #59                 // long 100l
      70: getstatic     #61                 // Field java/util/concurrent/TimeUnit.DAYS:Ljava/util/concurrent/TimeUnit;
      73: invokevirtual #57                 // Method java/util/concurrent/LinkedBlockingQueue.poll:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      76: checkcast     #15                 // class io/nats/client/impl/NatsMessage
      79: astore_2
      80: aload_2
      81: ifnull        56
      84: goto          87
      87: aload_2
      88: aload_0
      89: getfield      #19                 // Field poisonPill:Lio/nats/client/impl/NatsMessage;
      92: if_acmpne     97
      95: aconst_null
      96: areturn
      97: aload_2
      98: areturn

  io.nats.client.impl.NatsMessage pop(java.time.Duration) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method isRunning:()Z
       4: ifne          9
       7: aconst_null
       8: areturn
       9: aload_0
      10: aload_1
      11: invokevirtual #62                 // Method poll:(Ljava/time/Duration;)Lio/nats/client/impl/NatsMessage;
      14: astore_2
      15: aload_2
      16: ifnonnull     21
      19: aconst_null
      20: areturn
      21: aload_0
      22: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
      25: aload_2
      26: invokevirtual #44                 // Method io/nats/client/impl/NatsMessage.getSizeInBytes:()J
      29: lneg
      30: invokevirtual #45                 // Method java/util/concurrent/atomic/AtomicLong.getAndAdd:(J)J
      33: pop2
      34: aload_0
      35: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      38: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      41: pop2
      42: aload_2
      43: areturn

  io.nats.client.impl.NatsMessage accumulate(long, long, java.time.Duration) throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: getfield      #23                 // Field singleThreadedReader:Z
       4: ifne          17
       7: new           #35                 // class java/lang/IllegalStateException
      10: dup
      11: ldc           #64                 // String Accumulate is only supported in single reader mode.
      13: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      16: athrow
      17: aload_0
      18: invokevirtual #58                 // Method isRunning:()Z
      21: ifne          26
      24: aconst_null
      25: areturn
      26: aload_0
      27: aload         5
      29: invokevirtual #62                 // Method poll:(Ljava/time/Duration;)Lio/nats/client/impl/NatsMessage;
      32: astore        6
      34: aload         6
      36: ifnonnull     41
      39: aconst_null
      40: areturn
      41: aload         6
      43: invokevirtual #44                 // Method io/nats/client/impl/NatsMessage.getSizeInBytes:()J
      46: lstore        7
      48: lload_3
      49: lconst_1
      50: lcmp
      51: ifle          61
      54: lload         7
      56: lload_1
      57: lcmp
      58: iflt          83
      61: aload_0
      62: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
      65: lload         7
      67: lneg
      68: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      71: pop2
      72: aload_0
      73: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      76: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      79: pop2
      80: aload         6
      82: areturn
      83: lconst_1
      84: lstore        9
      86: aload         6
      88: astore        11
      90: aload         11
      92: ifnull        192
      95: aload_0
      96: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      99: invokevirtual #66                 // Method java/util/concurrent/LinkedBlockingQueue.peek:()Ljava/lang/Object;
     102: checkcast     #15                 // class io/nats/client/impl/NatsMessage
     105: astore        12
     107: aload         12
     109: ifnull        192
     112: aload         12
     114: aload_0
     115: getfield      #19                 // Field poisonPill:Lio/nats/client/impl/NatsMessage;
     118: if_acmpeq     192
     121: aload         12
     123: invokevirtual #44                 // Method io/nats/client/impl/NatsMessage.getSizeInBytes:()J
     126: lstore        13
     128: lload_1
     129: lconst_0
     130: lcmp
     131: iflt          144
     134: lload         7
     136: lload         13
     138: ladd
     139: lload_1
     140: lcmp
     141: ifge          192
     144: lload         7
     146: lload         13
     148: ladd
     149: lstore        7
     151: lload         9
     153: lconst_1
     154: ladd
     155: lstore        9
     157: aload         11
     159: aload_0
     160: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
     163: invokevirtual #54                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
     166: checkcast     #15                 // class io/nats/client/impl/NatsMessage
     169: putfield      #67                 // Field io/nats/client/impl/NatsMessage.next:Lio/nats/client/impl/NatsMessage;
     172: aload         11
     174: getfield      #67                 // Field io/nats/client/impl/NatsMessage.next:Lio/nats/client/impl/NatsMessage;
     177: astore        11
     179: lload         9
     181: lload_3
     182: lcmp
     183: ifne          189
     186: goto          192
     189: goto          90
     192: aload_0
     193: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
     196: lload         7
     198: lneg
     199: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     202: pop2
     203: aload_0
     204: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
     207: lload         9
     209: lneg
     210: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
     213: pop2
     214: aload         6
     216: areturn

  io.nats.client.impl.NatsMessage popNow() throws java.lang.InterruptedException;
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #68                 // Method pop:(Ljava/time/Duration;)Lio/nats/client/impl/NatsMessage;
       5: areturn

  long length();
    Code:
       0: aload_0
       1: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  long sizeInBytes();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
       4: invokevirtual #69                 // Method java/util/concurrent/atomic/AtomicLong.get:()J
       7: lreturn

  void filter(java.util.function.Predicate<io.nats.client.impl.NatsMessage>);
    Code:
       0: aload_0
       1: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
       4: invokeinterface #31,  1           // InterfaceMethod java/util/concurrent/locks/Lock.lock:()V
       9: aload_0
      10: invokevirtual #58                 // Method isRunning:()Z
      13: ifeq          26
      16: new           #35                 // class java/lang/IllegalStateException
      19: dup
      20: ldc           #70                 // String Filter is only supported when the queue is paused
      22: invokespecial #43                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      25: athrow
      26: new           #71                 // class java/util/ArrayList
      29: dup
      30: invokespecial #72                 // Method java/util/ArrayList."<init>":()V
      33: astore_2
      34: aload_0
      35: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      38: invokevirtual #54                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      41: checkcast     #15                 // class io/nats/client/impl/NatsMessage
      44: astore_3
      45: aload_3
      46: ifnull        103
      49: aload_1
      50: aload_3
      51: invokeinterface #73,  2           // InterfaceMethod java/util/function/Predicate.test:(Ljava/lang/Object;)Z
      56: ifne          68
      59: aload_2
      60: aload_3
      61: invokevirtual #74                 // Method java/util/ArrayList.add:(Ljava/lang/Object;)Z
      64: pop
      65: goto          89
      68: aload_0
      69: getfield      #13                 // Field sizeInBytes:Ljava/util/concurrent/atomic/AtomicLong;
      72: aload_3
      73: invokevirtual #44                 // Method io/nats/client/impl/NatsMessage.getSizeInBytes:()J
      76: lneg
      77: invokevirtual #65                 // Method java/util/concurrent/atomic/AtomicLong.addAndGet:(J)J
      80: pop2
      81: aload_0
      82: getfield      #14                 // Field length:Ljava/util/concurrent/atomic/AtomicLong;
      85: invokevirtual #63                 // Method java/util/concurrent/atomic/AtomicLong.decrementAndGet:()J
      88: pop2
      89: aload_0
      90: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
      93: invokevirtual #54                 // Method java/util/concurrent/LinkedBlockingQueue.poll:()Ljava/lang/Object;
      96: checkcast     #15                 // class io/nats/client/impl/NatsMessage
      99: astore_3
     100: goto          45
     103: aload_0
     104: getfield      #5                  // Field queue:Ljava/util/concurrent/LinkedBlockingQueue;
     107: aload_2
     108: invokevirtual #75                 // Method java/util/concurrent/LinkedBlockingQueue.addAll:(Ljava/util/Collection;)Z
     111: pop
     112: aload_0
     113: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
     116: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     121: goto          138
     124: astore        4
     126: aload_0
     127: getfield      #22                 // Field filterLock:Ljava/util/concurrent/locks/Lock;
     130: invokeinterface #33,  1           // InterfaceMethod java/util/concurrent/locks/Lock.unlock:()V
     135: aload         4
     137: athrow
     138: return
    Exception table:
       from    to  target type
           9   112   124   any
         124   126   124   any
}
