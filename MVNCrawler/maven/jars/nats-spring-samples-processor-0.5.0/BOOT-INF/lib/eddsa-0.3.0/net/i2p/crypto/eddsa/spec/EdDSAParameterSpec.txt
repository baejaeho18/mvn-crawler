Compiled from "EdDSAParameterSpec.java"
public class net.i2p.crypto.eddsa.spec.EdDSAParameterSpec implements java.security.spec.AlgorithmParameterSpec,java.io.Serializable {
  private static final long serialVersionUID;

  private final net.i2p.crypto.eddsa.math.Curve curve;

  private final java.lang.String hashAlgo;

  private final net.i2p.crypto.eddsa.math.ScalarOps sc;

  private final net.i2p.crypto.eddsa.math.GroupElement B;

  public net.i2p.crypto.eddsa.spec.EdDSAParameterSpec(net.i2p.crypto.eddsa.math.Curve, java.lang.String, net.i2p.crypto.eddsa.math.ScalarOps, net.i2p.crypto.eddsa.math.GroupElement);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_2
       5: invokestatic  #2                  // Method java/security/MessageDigest.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;
       8: astore        5
      10: aload_1
      11: invokevirtual #3                  // Method net/i2p/crypto/eddsa/math/Curve.getField:()Lnet/i2p/crypto/eddsa/math/Field;
      14: invokevirtual #4                  // Method net/i2p/crypto/eddsa/math/Field.getb:()I
      17: iconst_4
      18: idiv
      19: aload         5
      21: invokevirtual #5                  // Method java/security/MessageDigest.getDigestLength:()I
      24: if_icmpeq     37
      27: new           #6                  // class java/lang/IllegalArgumentException
      30: dup
      31: ldc           #7                  // String Hash output is not 2b-bit
      33: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: goto          52
      40: astore        5
      42: new           #6                  // class java/lang/IllegalArgumentException
      45: dup
      46: ldc           #10                 // String Unsupported hash algorithm
      48: invokespecial #8                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      51: athrow
      52: aload_0
      53: aload_1
      54: putfield      #11                 // Field curve:Lnet/i2p/crypto/eddsa/math/Curve;
      57: aload_0
      58: aload_2
      59: putfield      #12                 // Field hashAlgo:Ljava/lang/String;
      62: aload_0
      63: aload_3
      64: putfield      #13                 // Field sc:Lnet/i2p/crypto/eddsa/math/ScalarOps;
      67: aload_0
      68: aload         4
      70: putfield      #14                 // Field B:Lnet/i2p/crypto/eddsa/math/GroupElement;
      73: return
    Exception table:
       from    to  target type
           4    37    40   Class java/security/NoSuchAlgorithmException

  public net.i2p.crypto.eddsa.math.Curve getCurve();
    Code:
       0: aload_0
       1: getfield      #11                 // Field curve:Lnet/i2p/crypto/eddsa/math/Curve;
       4: areturn

  public java.lang.String getHashAlgorithm();
    Code:
       0: aload_0
       1: getfield      #12                 // Field hashAlgo:Ljava/lang/String;
       4: areturn

  public net.i2p.crypto.eddsa.math.ScalarOps getScalarOps();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sc:Lnet/i2p/crypto/eddsa/math/ScalarOps;
       4: areturn

  public net.i2p.crypto.eddsa.math.GroupElement getB();
    Code:
       0: aload_0
       1: getfield      #14                 // Field B:Lnet/i2p/crypto/eddsa/math/GroupElement;
       4: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #12                 // Field hashAlgo:Ljava/lang/String;
       4: invokevirtual #15                 // Method java/lang/String.hashCode:()I
       7: aload_0
       8: getfield      #11                 // Field curve:Lnet/i2p/crypto/eddsa/math/Curve;
      11: invokevirtual #16                 // Method net/i2p/crypto/eddsa/math/Curve.hashCode:()I
      14: ixor
      15: aload_0
      16: getfield      #14                 // Field B:Lnet/i2p/crypto/eddsa/math/GroupElement;
      19: invokevirtual #17                 // Method net/i2p/crypto/eddsa/math/GroupElement.hashCode:()I
      22: ixor
      23: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: aload_0
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #18                 // class net/i2p/crypto/eddsa/spec/EdDSAParameterSpec
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #18                 // class net/i2p/crypto/eddsa/spec/EdDSAParameterSpec
      20: astore_2
      21: aload_0
      22: getfield      #12                 // Field hashAlgo:Ljava/lang/String;
      25: aload_2
      26: invokevirtual #19                 // Method getHashAlgorithm:()Ljava/lang/String;
      29: invokevirtual #20                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      32: ifeq          67
      35: aload_0
      36: getfield      #11                 // Field curve:Lnet/i2p/crypto/eddsa/math/Curve;
      39: aload_2
      40: invokevirtual #21                 // Method getCurve:()Lnet/i2p/crypto/eddsa/math/Curve;
      43: invokevirtual #22                 // Method net/i2p/crypto/eddsa/math/Curve.equals:(Ljava/lang/Object;)Z
      46: ifeq          67
      49: aload_0
      50: getfield      #14                 // Field B:Lnet/i2p/crypto/eddsa/math/GroupElement;
      53: aload_2
      54: invokevirtual #23                 // Method getB:()Lnet/i2p/crypto/eddsa/math/GroupElement;
      57: invokevirtual #24                 // Method net/i2p/crypto/eddsa/math/GroupElement.equals:(Ljava/lang/Object;)Z
      60: ifeq          67
      63: iconst_1
      64: goto          68
      67: iconst_0
      68: ireturn
}
