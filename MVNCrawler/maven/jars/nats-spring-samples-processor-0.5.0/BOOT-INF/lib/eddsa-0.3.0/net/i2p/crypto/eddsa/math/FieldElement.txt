Compiled from "FieldElement.java"
public abstract class net.i2p.crypto.eddsa.math.FieldElement implements java.io.Serializable {
  private static final long serialVersionUID;

  protected final net.i2p.crypto.eddsa.math.Field f;

  public net.i2p.crypto.eddsa.math.FieldElement(net.i2p.crypto.eddsa.math.Field);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aconst_null
       5: aload_1
       6: if_acmpne     19
       9: new           #2                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #3                  // String field cannot be null
      15: invokespecial #4                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #5                  // Field f:Lnet/i2p/crypto/eddsa/math/Field;
      24: return

  public byte[] toByteArray();
    Code:
       0: aload_0
       1: getfield      #5                  // Field f:Lnet/i2p/crypto/eddsa/math/Field;
       4: invokevirtual #6                  // Method net/i2p/crypto/eddsa/math/Field.getEncoding:()Lnet/i2p/crypto/eddsa/math/Encoding;
       7: aload_0
       8: invokevirtual #7                  // Method net/i2p/crypto/eddsa/math/Encoding.encode:(Lnet/i2p/crypto/eddsa/math/FieldElement;)[B
      11: areturn

  public abstract boolean isNonZero();

  public boolean isNegative();
    Code:
       0: aload_0
       1: getfield      #5                  // Field f:Lnet/i2p/crypto/eddsa/math/Field;
       4: invokevirtual #6                  // Method net/i2p/crypto/eddsa/math/Field.getEncoding:()Lnet/i2p/crypto/eddsa/math/Encoding;
       7: aload_0
       8: invokevirtual #8                  // Method net/i2p/crypto/eddsa/math/Encoding.isNegative:(Lnet/i2p/crypto/eddsa/math/FieldElement;)Z
      11: ireturn

  public abstract net.i2p.crypto.eddsa.math.FieldElement add(net.i2p.crypto.eddsa.math.FieldElement);

  public net.i2p.crypto.eddsa.math.FieldElement addOne();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field f:Lnet/i2p/crypto/eddsa/math/Field;
       5: getfield      #9                  // Field net/i2p/crypto/eddsa/math/Field.ONE:Lnet/i2p/crypto/eddsa/math/FieldElement;
       8: invokevirtual #10                 // Method add:(Lnet/i2p/crypto/eddsa/math/FieldElement;)Lnet/i2p/crypto/eddsa/math/FieldElement;
      11: areturn

  public abstract net.i2p.crypto.eddsa.math.FieldElement subtract(net.i2p.crypto.eddsa.math.FieldElement);

  public net.i2p.crypto.eddsa.math.FieldElement subtractOne();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #5                  // Field f:Lnet/i2p/crypto/eddsa/math/Field;
       5: getfield      #9                  // Field net/i2p/crypto/eddsa/math/Field.ONE:Lnet/i2p/crypto/eddsa/math/FieldElement;
       8: invokevirtual #11                 // Method subtract:(Lnet/i2p/crypto/eddsa/math/FieldElement;)Lnet/i2p/crypto/eddsa/math/FieldElement;
      11: areturn

  public abstract net.i2p.crypto.eddsa.math.FieldElement negate();

  public net.i2p.crypto.eddsa.math.FieldElement divide(net.i2p.crypto.eddsa.math.FieldElement);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #12                 // Method invert:()Lnet/i2p/crypto/eddsa/math/FieldElement;
       5: invokevirtual #13                 // Method multiply:(Lnet/i2p/crypto/eddsa/math/FieldElement;)Lnet/i2p/crypto/eddsa/math/FieldElement;
       8: areturn

  public abstract net.i2p.crypto.eddsa.math.FieldElement multiply(net.i2p.crypto.eddsa.math.FieldElement);

  public abstract net.i2p.crypto.eddsa.math.FieldElement square();

  public abstract net.i2p.crypto.eddsa.math.FieldElement squareAndDouble();

  public abstract net.i2p.crypto.eddsa.math.FieldElement invert();

  public abstract net.i2p.crypto.eddsa.math.FieldElement pow22523();

  public abstract net.i2p.crypto.eddsa.math.FieldElement cmov(net.i2p.crypto.eddsa.math.FieldElement, int);
}
