Compiled from "NotificationPublishingMessageHandler.java"
public class org.springframework.integration.jmx.NotificationPublishingMessageHandler extends org.springframework.integration.handler.AbstractMessageHandler implements org.springframework.beans.factory.BeanFactoryAware,org.springframework.beans.factory.InitializingBean {
  private final org.springframework.integration.jmx.NotificationPublishingMessageHandler$PublisherDelegate delegate;

  private final javax.management.ObjectName objectName;

  private java.lang.String defaultNotificationType;

  private org.springframework.integration.mapping.OutboundMessageMapper<javax.management.Notification> notificationMapper;

  public org.springframework.integration.jmx.NotificationPublishingMessageHandler(javax.management.ObjectName);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/handler/AbstractMessageHandler."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate
       8: dup
       9: invokespecial #3                  // Method org/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate."<init>":()V
      12: putfield      #4                  // Field delegate:Lorg/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate;
      15: aload_1
      16: ldc           #5                  // String JMX ObjectName is required
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: putfield      #7                  // Field objectName:Ljavax/management/ObjectName;
      26: return

  public org.springframework.integration.jmx.NotificationPublishingMessageHandler(java.lang.String);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/integration/handler/AbstractMessageHandler."<init>":()V
       4: aload_0
       5: new           #2                  // class org/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate
       8: dup
       9: invokespecial #3                  // Method org/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate."<init>":()V
      12: putfield      #4                  // Field delegate:Lorg/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate;
      15: aload_1
      16: ldc           #5                  // String JMX ObjectName is required
      18: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      21: aload_0
      22: aload_1
      23: invokestatic  #8                  // Method org/springframework/jmx/support/ObjectNameManager.getInstance:(Ljava/lang/String;)Ljavax/management/ObjectName;
      26: putfield      #7                  // Field objectName:Ljavax/management/ObjectName;
      29: goto          42
      32: astore_2
      33: new           #10                 // class java/lang/IllegalArgumentException
      36: dup
      37: aload_2
      38: invokespecial #11                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/Throwable;)V
      41: athrow
      42: return
    Exception table:
       from    to  target type
          21    29    32   Class javax/management/MalformedObjectNameException

  public void setNotificationMapper(org.springframework.integration.mapping.OutboundMessageMapper<javax.management.Notification>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #12                 // Field notificationMapper:Lorg/springframework/integration/mapping/OutboundMessageMapper;
       5: return

  public void setDefaultNotificationType(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #13                 // Field defaultNotificationType:Ljava/lang/String;
       5: return

  public java.lang.String getComponentType();
    Code:
       0: ldc           #14                 // String jmx:notification-publishing-channel-adapter
       2: areturn

  public final void onInit();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getBeanFactory:()Lorg/springframework/beans/factory/BeanFactory;
       4: astore_1
       5: aload_1
       6: instanceof    #16                 // class org/springframework/beans/factory/ListableBeanFactory
       9: ldc           #17                 // String A ListableBeanFactory is required.
      11: invokestatic  #18                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      14: aload_1
      15: checkcast     #16                 // class org/springframework/beans/factory/ListableBeanFactory
      18: ldc           #19                 // class org/springframework/jmx/export/MBeanExporter
      20: invokestatic  #20                 // Method org/springframework/beans/factory/BeanFactoryUtils.beansOfTypeIncludingAncestors:(Lorg/springframework/beans/factory/ListableBeanFactory;Ljava/lang/Class;)Ljava/util/Map;
      23: astore_2
      24: aload_2
      25: invokeinterface #21,  1           // InterfaceMethod java/util/Map.size:()I
      30: ifle          37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #22                 // String No MBeanExporter is available in the current context.
      40: invokestatic  #23                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      43: aconst_null
      44: astore_3
      45: aload_2
      46: invokeinterface #24,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      51: invokeinterface #25,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      56: astore        4
      58: aload         4
      60: invokeinterface #26,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      65: ifeq          96
      68: aload         4
      70: invokeinterface #27,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      75: checkcast     #19                 // class org/springframework/jmx/export/MBeanExporter
      78: astore        5
      80: aload         5
      82: astore_3
      83: aload_3
      84: instanceof    #28                 // class org/springframework/integration/monitor/IntegrationMBeanExporter
      87: ifeq          93
      90: goto          96
      93: goto          58
      96: aload_0
      97: getfield      #12                 // Field notificationMapper:Lorg/springframework/integration/mapping/OutboundMessageMapper;
     100: ifnonnull     122
     103: aload_0
     104: new           #29                 // class org/springframework/integration/jmx/DefaultNotificationMapper
     107: dup
     108: aload_0
     109: getfield      #7                  // Field objectName:Ljavax/management/ObjectName;
     112: aload_0
     113: getfield      #13                 // Field defaultNotificationType:Ljava/lang/String;
     116: invokespecial #30                 // Method org/springframework/integration/jmx/DefaultNotificationMapper."<init>":(Ljavax/management/ObjectName;Ljava/lang/String;)V
     119: putfield      #12                 // Field notificationMapper:Lorg/springframework/integration/mapping/OutboundMessageMapper;
     122: aload_3
     123: ifnull        181
     126: aload_3
     127: aload_0
     128: getfield      #4                  // Field delegate:Lorg/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate;
     131: aload_0
     132: getfield      #7                  // Field objectName:Ljavax/management/ObjectName;
     135: invokevirtual #31                 // Method org/springframework/jmx/export/MBeanExporter.registerManagedResource:(Ljava/lang/Object;Ljavax/management/ObjectName;)V
     138: aload_0
     139: getfield      #32                 // Field logger:Lorg/apache/commons/logging/Log;
     142: invokeinterface #33,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
     147: ifeq          181
     150: aload_0
     151: getfield      #32                 // Field logger:Lorg/apache/commons/logging/Log;
     154: new           #34                 // class java/lang/StringBuilder
     157: dup
     158: invokespecial #35                 // Method java/lang/StringBuilder."<init>":()V
     161: ldc           #36                 // String Registered JMX notification publisher as MBean with ObjectName:
     163: invokevirtual #37                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: aload_0
     167: getfield      #7                  // Field objectName:Ljavax/management/ObjectName;
     170: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
     181: return

  protected void handleMessageInternal(org.springframework.messaging.Message<?>) throws java.lang.Exception;
    Code:
       0: aload_0
       1: getfield      #4                  // Field delegate:Lorg/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate;
       4: aload_0
       5: getfield      #12                 // Field notificationMapper:Lorg/springframework/integration/mapping/OutboundMessageMapper;
       8: aload_1
       9: invokeinterface #41,  2           // InterfaceMethod org/springframework/integration/mapping/OutboundMessageMapper.fromMessage:(Lorg/springframework/messaging/Message;)Ljava/lang/Object;
      14: checkcast     #42                 // class javax/management/Notification
      17: invokestatic  #43                 // Method org/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate.access$000:(Lorg/springframework/integration/jmx/NotificationPublishingMessageHandler$PublisherDelegate;Ljavax/management/Notification;)V
      20: return
}
