Compiled from "TimeBasedFileNamingAndTriggeringPolicyBase.java"
public abstract class ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase<E> extends ch.qos.logback.core.spi.ContextAwareBase implements ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicy<E> {
  private static java.lang.String COLLIDING_DATE_FORMAT_URL;

  protected ch.qos.logback.core.rolling.TimeBasedRollingPolicy<E> tbrp;

  protected ch.qos.logback.core.rolling.helper.ArchiveRemover archiveRemover;

  protected java.lang.String elapsedPeriodsFileName;

  protected ch.qos.logback.core.rolling.helper.RollingCalendar rc;

  protected long artificialCurrentTime;

  protected java.util.Date dateInCurrentPeriod;

  protected long nextCheck;

  protected boolean started;

  protected boolean errorFree;

  public ch.qos.logback.core.rolling.TimeBasedFileNamingAndTriggeringPolicyBase();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method ch/qos/logback/core/spi/ContextAwareBase."<init>":()V
       4: aload_0
       5: aconst_null
       6: putfield      #2                  // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
       9: aload_0
      10: ldc2_w        #3                  // long -1l
      13: putfield      #5                  // Field artificialCurrentTime:J
      16: aload_0
      17: aconst_null
      18: putfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
      21: aload_0
      22: iconst_0
      23: putfield      #7                  // Field started:Z
      26: aload_0
      27: iconst_1
      28: putfield      #8                  // Field errorFree:Z
      31: return

  public boolean isStarted();
    Code:
       0: aload_0
       1: getfield      #7                  // Field started:Z
       4: ireturn

  public void start();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       4: getfield      #10                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
       7: invokevirtual #11                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPrimaryDateTokenConverter:()Lch/qos/logback/core/rolling/helper/DateTokenConverter;
      10: astore_1
      11: aload_1
      12: ifnonnull     56
      15: new           #12                 // class java/lang/IllegalStateException
      18: dup
      19: new           #13                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #15                 // String FileNamePattern [
      28: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
      35: getfield      #10                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
      38: invokevirtual #17                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPattern:()Ljava/lang/String;
      41: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: ldc           #18                 // String ] does not contain a valid DateToken
      46: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_1
      57: invokevirtual #21                 // Method ch/qos/logback/core/rolling/helper/DateTokenConverter.getTimeZone:()Ljava/util/TimeZone;
      60: ifnull        88
      63: aload_0
      64: new           #22                 // class ch/qos/logback/core/rolling/helper/RollingCalendar
      67: dup
      68: aload_1
      69: invokevirtual #23                 // Method ch/qos/logback/core/rolling/helper/DateTokenConverter.getDatePattern:()Ljava/lang/String;
      72: aload_1
      73: invokevirtual #21                 // Method ch/qos/logback/core/rolling/helper/DateTokenConverter.getTimeZone:()Ljava/util/TimeZone;
      76: invokestatic  #24                 // Method java/util/Locale.getDefault:()Ljava/util/Locale;
      79: invokespecial #25                 // Method ch/qos/logback/core/rolling/helper/RollingCalendar."<init>":(Ljava/lang/String;Ljava/util/TimeZone;Ljava/util/Locale;)V
      82: putfield      #26                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
      85: goto          103
      88: aload_0
      89: new           #22                 // class ch/qos/logback/core/rolling/helper/RollingCalendar
      92: dup
      93: aload_1
      94: invokevirtual #23                 // Method ch/qos/logback/core/rolling/helper/DateTokenConverter.getDatePattern:()Ljava/lang/String;
      97: invokespecial #27                 // Method ch/qos/logback/core/rolling/helper/RollingCalendar."<init>":(Ljava/lang/String;)V
     100: putfield      #26                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
     103: aload_0
     104: new           #13                 // class java/lang/StringBuilder
     107: dup
     108: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     111: ldc           #28                 // String The date pattern is \'
     113: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     116: aload_1
     117: invokevirtual #23                 // Method ch/qos/logback/core/rolling/helper/DateTokenConverter.getDatePattern:()Ljava/lang/String;
     120: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     123: ldc           #29                 // String \' from file name pattern \'
     125: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     128: aload_0
     129: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
     132: getfield      #10                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePattern:Lch/qos/logback/core/rolling/helper/FileNamePattern;
     135: invokevirtual #17                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.getPattern:()Ljava/lang/String;
     138: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     141: ldc           #30                 // String \'.
     143: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     146: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     149: invokevirtual #31                 // Method addInfo:(Ljava/lang/String;)V
     152: aload_0
     153: getfield      #26                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
     156: aload_0
     157: invokevirtual #32                 // Method ch/qos/logback/core/rolling/helper/RollingCalendar.printPeriodicity:(Lch/qos/logback/core/spi/ContextAwareBase;)V
     160: aload_0
     161: getfield      #26                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
     164: invokevirtual #33                 // Method ch/qos/logback/core/rolling/helper/RollingCalendar.isCollisionFree:()Z
     167: ifne          206
     170: aload_0
     171: ldc           #34                 // String The date format in FileNamePattern will result in collisions in the names of archived log files.
     173: invokevirtual #35                 // Method addError:(Ljava/lang/String;)V
     176: aload_0
     177: new           #13                 // class java/lang/StringBuilder
     180: dup
     181: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     184: ldc           #36                 // String For more information, please visit
     186: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     189: getstatic     #37                 // Field COLLIDING_DATE_FORMAT_URL:Ljava/lang/String;
     192: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     195: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     198: invokevirtual #35                 // Method addError:(Ljava/lang/String;)V
     201: aload_0
     202: invokevirtual #38                 // Method withErrors:()V
     205: return
     206: aload_0
     207: new           #39                 // class java/util/Date
     210: dup
     211: aload_0
     212: invokevirtual #40                 // Method getCurrentTime:()J
     215: invokespecial #41                 // Method java/util/Date."<init>":(J)V
     218: invokevirtual #42                 // Method setDateInCurrentPeriod:(Ljava/util/Date;)V
     221: aload_0
     222: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
     225: invokevirtual #43                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.getParentsRawFileProperty:()Ljava/lang/String;
     228: ifnull        275
     231: new           #44                 // class java/io/File
     234: dup
     235: aload_0
     236: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
     239: invokevirtual #43                 // Method ch/qos/logback/core/rolling/TimeBasedRollingPolicy.getParentsRawFileProperty:()Ljava/lang/String;
     242: invokespecial #45                 // Method java/io/File."<init>":(Ljava/lang/String;)V
     245: astore_2
     246: aload_2
     247: invokevirtual #46                 // Method java/io/File.exists:()Z
     250: ifeq          275
     253: aload_2
     254: invokevirtual #47                 // Method java/io/File.canRead:()Z
     257: ifeq          275
     260: aload_0
     261: new           #39                 // class java/util/Date
     264: dup
     265: aload_2
     266: invokevirtual #48                 // Method java/io/File.lastModified:()J
     269: invokespecial #41                 // Method java/util/Date."<init>":(J)V
     272: invokevirtual #42                 // Method setDateInCurrentPeriod:(Ljava/util/Date;)V
     275: aload_0
     276: new           #13                 // class java/lang/StringBuilder
     279: dup
     280: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
     283: ldc           #49                 // String Setting initial period to
     285: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     288: aload_0
     289: getfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
     292: invokevirtual #50                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     295: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     298: invokevirtual #31                 // Method addInfo:(Ljava/lang/String;)V
     301: aload_0
     302: invokevirtual #51                 // Method computeNextCheck:()V
     305: return

  public void stop();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #7                  // Field started:Z
       5: return

  protected void computeNextCheck();
    Code:
       0: aload_0
       1: aload_0
       2: getfield      #26                 // Field rc:Lch/qos/logback/core/rolling/helper/RollingCalendar;
       5: aload_0
       6: getfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
       9: invokevirtual #52                 // Method ch/qos/logback/core/rolling/helper/RollingCalendar.getNextTriggeringDate:(Ljava/util/Date;)Ljava/util/Date;
      12: invokevirtual #53                 // Method java/util/Date.getTime:()J
      15: putfield      #54                 // Field nextCheck:J
      18: return

  protected void setDateInCurrentPeriod(long);
    Code:
       0: aload_0
       1: getfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
       4: lload_1
       5: invokevirtual #55                 // Method java/util/Date.setTime:(J)V
       8: return

  public void setDateInCurrentPeriod(java.util.Date);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
       5: return

  public java.lang.String getElapsedPeriodsFileName();
    Code:
       0: aload_0
       1: getfield      #56                 // Field elapsedPeriodsFileName:Ljava/lang/String;
       4: areturn

  public java.lang.String getCurrentPeriodsFileNameWithoutCompressionSuffix();
    Code:
       0: aload_0
       1: getfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       4: getfield      #57                 // Field ch/qos/logback/core/rolling/TimeBasedRollingPolicy.fileNamePatternWithoutCompSuffix:Lch/qos/logback/core/rolling/helper/FileNamePattern;
       7: aload_0
       8: getfield      #6                  // Field dateInCurrentPeriod:Ljava/util/Date;
      11: invokevirtual #58                 // Method ch/qos/logback/core/rolling/helper/FileNamePattern.convert:(Ljava/lang/Object;)Ljava/lang/String;
      14: areturn

  public void setCurrentTime(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #5                  // Field artificialCurrentTime:J
       5: return

  public long getCurrentTime();
    Code:
       0: aload_0
       1: getfield      #5                  // Field artificialCurrentTime:J
       4: lconst_0
       5: lcmp
       6: iflt          14
       9: aload_0
      10: getfield      #5                  // Field artificialCurrentTime:J
      13: lreturn
      14: invokestatic  #59                 // Method java/lang/System.currentTimeMillis:()J
      17: lreturn

  public void setTimeBasedRollingPolicy(ch.qos.logback.core.rolling.TimeBasedRollingPolicy<E>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field tbrp:Lch/qos/logback/core/rolling/TimeBasedRollingPolicy;
       5: return

  public ch.qos.logback.core.rolling.helper.ArchiveRemover getArchiveRemover();
    Code:
       0: aload_0
       1: getfield      #2                  // Field archiveRemover:Lch/qos/logback/core/rolling/helper/ArchiveRemover;
       4: areturn

  protected void withErrors();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #8                  // Field errorFree:Z
       5: return

  protected boolean isErrorFree();
    Code:
       0: aload_0
       1: getfield      #8                  // Field errorFree:Z
       4: ireturn

  static {};
    Code:
       0: ldc           #60                 // String http://logback.qos.ch/codes.html#rfa_collision_in_dateFormat
       2: putstatic     #37                 // Field COLLIDING_DATE_FORMAT_URL:Ljava/lang/String;
       5: return
}
