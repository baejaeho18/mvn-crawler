Compiled from "Level.java"
public final class org.apache.logging.log4j.Level implements java.lang.Comparable<org.apache.logging.log4j.Level>, java.io.Serializable {
  public static final org.apache.logging.log4j.Level OFF;

  public static final org.apache.logging.log4j.Level FATAL;

  public static final org.apache.logging.log4j.Level ERROR;

  public static final org.apache.logging.log4j.Level WARN;

  public static final org.apache.logging.log4j.Level INFO;

  public static final org.apache.logging.log4j.Level DEBUG;

  public static final org.apache.logging.log4j.Level TRACE;

  public static final org.apache.logging.log4j.Level ALL;

  public static final java.lang.String CATEGORY;

  private static final java.util.concurrent.ConcurrentMap<java.lang.String, org.apache.logging.log4j.Level> LEVELS;

  private static final long serialVersionUID;

  private final java.lang.String name;

  private final int intLevel;

  private final org.apache.logging.log4j.spi.StandardLevel standardLevel;

  private org.apache.logging.log4j.Level(java.lang.String, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokestatic  #2                  // Method org/apache/logging/log4j/util/Strings.isEmpty:(Ljava/lang/CharSequence;)Z
       8: ifeq          21
      11: new           #3                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #4                  // String Illegal null or empty Level name.
      17: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: iload_2
      22: ifge          35
      25: new           #3                  // class java/lang/IllegalArgumentException
      28: dup
      29: ldc           #6                  // String Illegal Level int less than zero.
      31: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      34: athrow
      35: aload_0
      36: aload_1
      37: putfield      #7                  // Field name:Ljava/lang/String;
      40: aload_0
      41: iload_2
      42: putfield      #8                  // Field intLevel:I
      45: aload_0
      46: iload_2
      47: invokestatic  #9                  // Method org/apache/logging/log4j/spi/StandardLevel.getStandardLevel:(I)Lorg/apache/logging/log4j/spi/StandardLevel;
      50: putfield      #10                 // Field standardLevel:Lorg/apache/logging/log4j/spi/StandardLevel;
      53: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      56: aload_1
      57: aload_0
      58: invokeinterface #12,  3           // InterfaceMethod java/util/concurrent/ConcurrentMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      63: ifnull        98
      66: new           #13                 // class java/lang/IllegalStateException
      69: dup
      70: new           #14                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #16                 // String Level
      79: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_1
      83: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: ldc           #18                 // String  has already been defined.
      88: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      91: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      94: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      97: athrow
      98: return

  public int intLevel();
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: ireturn

  public org.apache.logging.log4j.spi.StandardLevel getStandardLevel();
    Code:
       0: aload_0
       1: getfield      #10                 // Field standardLevel:Lorg/apache/logging/log4j/spi/StandardLevel;
       4: areturn

  public boolean isInRange(org.apache.logging.log4j.Level, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmplt     26
      11: aload_0
      12: getfield      #8                  // Field intLevel:I
      15: aload_2
      16: getfield      #8                  // Field intLevel:I
      19: if_icmpgt     26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ireturn

  public boolean isLessSpecificThan(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmplt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public boolean isMoreSpecificThan(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmpgt     15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ireturn

  public org.apache.logging.log4j.Level clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: new           #21                 // class java/lang/CloneNotSupportedException
       3: dup
       4: invokespecial #22                 // Method java/lang/CloneNotSupportedException."<init>":()V
       7: athrow

  public int compareTo(org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: getfield      #8                  // Field intLevel:I
       4: aload_1
       5: getfield      #8                  // Field intLevel:I
       8: if_icmpge     15
      11: iconst_m1
      12: goto          31
      15: aload_0
      16: getfield      #8                  // Field intLevel:I
      19: aload_1
      20: getfield      #8                  // Field intLevel:I
      23: if_icmple     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_1
       1: instanceof    #23                 // class org/apache/logging/log4j/Level
       4: ifeq          16
       7: aload_1
       8: aload_0
       9: if_acmpne     16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  public java.lang.Class<org.apache.logging.log4j.Level> getDeclaringClass();
    Code:
       0: ldc_w         #23                 // class org/apache/logging/log4j/Level
       3: areturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: invokevirtual #24                 // Method java/lang/String.hashCode:()I
       7: ireturn

  public java.lang.String name();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: areturn

  public static org.apache.logging.log4j.Level forName(java.lang.String, int);
    Code:
       0: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #23                 // class org/apache/logging/log4j/Level
      12: astore_2
      13: aload_2
      14: ifnull        19
      17: aload_2
      18: areturn
      19: new           #23                 // class org/apache/logging/log4j/Level
      22: dup
      23: aload_0
      24: iload_1
      25: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      28: areturn
      29: astore_3
      30: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      33: aload_0
      34: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      39: checkcast     #23                 // class org/apache/logging/log4j/Level
      42: areturn
    Exception table:
       from    to  target type
          19    28    29   Class java/lang/IllegalStateException

  public static org.apache.logging.log4j.Level getLevel(java.lang.String);
    Code:
       0: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       3: aload_0
       4: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #23                 // class org/apache/logging/log4j/Level
      12: areturn

  public static org.apache.logging.log4j.Level toLevel(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #27                 // Field DEBUG:Lorg/apache/logging/log4j/Level;
       4: invokestatic  #28                 // Method toLevel:(Ljava/lang/String;Lorg/apache/logging/log4j/Level;)Lorg/apache/logging/log4j/Level;
       7: areturn

  public static org.apache.logging.log4j.Level toLevel(java.lang.String, org.apache.logging.log4j.Level);
    Code:
       0: aload_0
       1: ifnonnull     6
       4: aload_1
       5: areturn
       6: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       9: aload_0
      10: invokestatic  #29                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      13: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      18: checkcast     #23                 // class org/apache/logging/log4j/Level
      21: astore_2
      22: aload_2
      23: ifnonnull     30
      26: aload_1
      27: goto          31
      30: aload_2
      31: areturn

  private static java.lang.String toUpperCase(java.lang.String);
    Code:
       0: aload_0
       1: getstatic     #30                 // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
       4: invokevirtual #31                 // Method java/lang/String.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;
       7: areturn

  public static org.apache.logging.log4j.Level[] values();
    Code:
       0: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
       3: invokeinterface #32,  1           // InterfaceMethod java/util/concurrent/ConcurrentMap.values:()Ljava/util/Collection;
       8: astore_0
       9: aload_0
      10: aload_0
      11: invokeinterface #33,  1           // InterfaceMethod java/util/Collection.size:()I
      16: anewarray     #23                 // class org/apache/logging/log4j/Level
      19: invokeinterface #34,  2           // InterfaceMethod java/util/Collection.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;
      24: checkcast     #35                 // class "[Lorg/apache/logging/log4j/Level;"
      27: areturn

  public static org.apache.logging.log4j.Level valueOf(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #36                 // String No level name given.
       3: invokestatic  #37                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;
       6: pop
       7: aload_0
       8: invokestatic  #29                 // Method toUpperCase:(Ljava/lang/String;)Ljava/lang/String;
      11: astore_1
      12: getstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      15: aload_1
      16: invokeinterface #25,  2           // InterfaceMethod java/util/concurrent/ConcurrentMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      21: checkcast     #23                 // class org/apache/logging/log4j/Level
      24: astore_2
      25: aload_2
      26: ifnull        31
      29: aload_2
      30: areturn
      31: new           #3                  // class java/lang/IllegalArgumentException
      34: dup
      35: new           #14                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #15                 // Method java/lang/StringBuilder."<init>":()V
      42: ldc           #38                 // String Unknown level constant [
      44: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload_1
      48: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: ldc           #39                 // String ].
      53: invokevirtual #17                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: invokevirtual #19                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      59: invokespecial #5                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      62: athrow

  public static <T extends java.lang.Enum<T>> T valueOf(java.lang.Class<T>, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #40                 // Method java/lang/Enum.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;
       5: areturn

  protected java.lang.Object readResolve();
    Code:
       0: aload_0
       1: getfield      #7                  // Field name:Ljava/lang/String;
       4: invokestatic  #41                 // Method valueOf:(Ljava/lang/String;)Lorg/apache/logging/log4j/Level;
       7: areturn

  public java.lang.Object clone() throws java.lang.CloneNotSupportedException;
    Code:
       0: aload_0
       1: invokevirtual #42                 // Method clone:()Lorg/apache/logging/log4j/Level;
       4: areturn

  public int compareTo(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #23                 // class org/apache/logging/log4j/Level
       5: invokevirtual #43                 // Method compareTo:(Lorg/apache/logging/log4j/Level;)I
       8: ireturn

  static {};
    Code:
       0: new           #44                 // class java/util/concurrent/ConcurrentHashMap
       3: dup
       4: invokespecial #45                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
       7: putstatic     #11                 // Field LEVELS:Ljava/util/concurrent/ConcurrentMap;
      10: new           #23                 // class org/apache/logging/log4j/Level
      13: dup
      14: ldc           #46                 // String OFF
      16: getstatic     #47                 // Field org/apache/logging/log4j/spi/StandardLevel.OFF:Lorg/apache/logging/log4j/spi/StandardLevel;
      19: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      22: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      25: putstatic     #49                 // Field OFF:Lorg/apache/logging/log4j/Level;
      28: new           #23                 // class org/apache/logging/log4j/Level
      31: dup
      32: ldc           #50                 // String FATAL
      34: getstatic     #51                 // Field org/apache/logging/log4j/spi/StandardLevel.FATAL:Lorg/apache/logging/log4j/spi/StandardLevel;
      37: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      40: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      43: putstatic     #52                 // Field FATAL:Lorg/apache/logging/log4j/Level;
      46: new           #23                 // class org/apache/logging/log4j/Level
      49: dup
      50: ldc           #53                 // String ERROR
      52: getstatic     #54                 // Field org/apache/logging/log4j/spi/StandardLevel.ERROR:Lorg/apache/logging/log4j/spi/StandardLevel;
      55: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      58: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      61: putstatic     #55                 // Field ERROR:Lorg/apache/logging/log4j/Level;
      64: new           #23                 // class org/apache/logging/log4j/Level
      67: dup
      68: ldc           #56                 // String WARN
      70: getstatic     #57                 // Field org/apache/logging/log4j/spi/StandardLevel.WARN:Lorg/apache/logging/log4j/spi/StandardLevel;
      73: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      76: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      79: putstatic     #58                 // Field WARN:Lorg/apache/logging/log4j/Level;
      82: new           #23                 // class org/apache/logging/log4j/Level
      85: dup
      86: ldc           #59                 // String INFO
      88: getstatic     #60                 // Field org/apache/logging/log4j/spi/StandardLevel.INFO:Lorg/apache/logging/log4j/spi/StandardLevel;
      91: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
      94: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
      97: putstatic     #61                 // Field INFO:Lorg/apache/logging/log4j/Level;
     100: new           #23                 // class org/apache/logging/log4j/Level
     103: dup
     104: ldc           #62                 // String DEBUG
     106: getstatic     #63                 // Field org/apache/logging/log4j/spi/StandardLevel.DEBUG:Lorg/apache/logging/log4j/spi/StandardLevel;
     109: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     112: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
     115: putstatic     #27                 // Field DEBUG:Lorg/apache/logging/log4j/Level;
     118: new           #23                 // class org/apache/logging/log4j/Level
     121: dup
     122: ldc           #64                 // String TRACE
     124: getstatic     #65                 // Field org/apache/logging/log4j/spi/StandardLevel.TRACE:Lorg/apache/logging/log4j/spi/StandardLevel;
     127: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     130: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
     133: putstatic     #66                 // Field TRACE:Lorg/apache/logging/log4j/Level;
     136: new           #23                 // class org/apache/logging/log4j/Level
     139: dup
     140: ldc           #67                 // String ALL
     142: getstatic     #68                 // Field org/apache/logging/log4j/spi/StandardLevel.ALL:Lorg/apache/logging/log4j/spi/StandardLevel;
     145: invokevirtual #48                 // Method org/apache/logging/log4j/spi/StandardLevel.intLevel:()I
     148: invokespecial #26                 // Method "<init>":(Ljava/lang/String;I)V
     151: putstatic     #69                 // Field ALL:Lorg/apache/logging/log4j/Level;
     154: return
}
