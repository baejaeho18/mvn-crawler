Compiled from "DefaultErrorWebExceptionHandler.java"
public class org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler extends org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler {
  private static final java.util.Map<org.springframework.http.HttpStatus$Series, java.lang.String> SERIES_VIEWS;

  private final org.springframework.boot.autoconfigure.web.ErrorProperties errorProperties;

  public org.springframework.boot.autoconfigure.web.reactive.error.DefaultErrorWebExceptionHandler(org.springframework.boot.web.reactive.error.ErrorAttributes, org.springframework.boot.autoconfigure.web.ResourceProperties, org.springframework.boot.autoconfigure.web.ErrorProperties, org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload         4
       5: invokespecial #1                  // Method org/springframework/boot/autoconfigure/web/reactive/error/AbstractErrorWebExceptionHandler."<init>":(Lorg/springframework/boot/web/reactive/error/ErrorAttributes;Lorg/springframework/boot/autoconfigure/web/ResourceProperties;Lorg/springframework/context/ApplicationContext;)V
       8: aload_0
       9: aload_3
      10: putfield      #2                  // Field errorProperties:Lorg/springframework/boot/autoconfigure/web/ErrorProperties;
      13: return

  protected org.springframework.web.reactive.function.server.RouterFunction<org.springframework.web.reactive.function.server.ServerResponse> getRoutingFunction(org.springframework.boot.web.reactive.error.ErrorAttributes);
    Code:
       0: aload_0
       1: invokevirtual #3                  // Method acceptsTextHtml:()Lorg/springframework/web/reactive/function/server/RequestPredicate;
       4: aload_0
       5: invokedynamic #4,  0              // InvokeDynamic #0:handle:(Lorg/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler;)Lorg/springframework/web/reactive/function/server/HandlerFunction;
      10: invokestatic  #5                  // Method org/springframework/web/reactive/function/server/RouterFunctions.route:(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
      13: invokestatic  #6                  // Method org/springframework/web/reactive/function/server/RequestPredicates.all:()Lorg/springframework/web/reactive/function/server/RequestPredicate;
      16: aload_0
      17: invokedynamic #7,  0              // InvokeDynamic #1:handle:(Lorg/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler;)Lorg/springframework/web/reactive/function/server/HandlerFunction;
      22: invokeinterface #8,  3            // InterfaceMethod org/springframework/web/reactive/function/server/RouterFunction.andRoute:(Lorg/springframework/web/reactive/function/server/RequestPredicate;Lorg/springframework/web/reactive/function/server/HandlerFunction;)Lorg/springframework/web/reactive/function/server/RouterFunction;
      27: areturn

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderErrorView(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #9                  // Field org/springframework/http/MediaType.TEXT_HTML:Lorg/springframework/http/MediaType;
       5: invokevirtual #10                 // Method isIncludeStackTrace:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/http/MediaType;)Z
       8: istore_2
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokevirtual #11                 // Method getErrorAttributes:(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #12                 // Method getHttpStatus:(Ljava/util/Map;)Lorg/springframework/http/HttpStatus;
      21: astore        4
      23: aload         4
      25: invokestatic  #13                 // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.status:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
      28: getstatic     #9                  // Field org/springframework/http/MediaType.TEXT_HTML:Lorg/springframework/http/MediaType;
      31: invokeinterface #14,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.contentType:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
      36: astore        5
      38: iconst_3
      39: anewarray     #15                 // class java/lang/String
      42: dup
      43: iconst_0
      44: new           #16                 // class java/lang/StringBuilder
      47: dup
      48: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      51: ldc           #18                 // String error/
      53: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      56: aload         4
      58: invokevirtual #20                 // Method org/springframework/http/HttpStatus.value:()I
      61: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      64: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: aastore
      68: dup
      69: iconst_1
      70: new           #16                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #18                 // String error/
      79: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: getstatic     #23                 // Field SERIES_VIEWS:Ljava/util/Map;
      85: aload         4
      87: invokevirtual #24                 // Method org/springframework/http/HttpStatus.series:()Lorg/springframework/http/HttpStatus$Series;
      90: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      95: checkcast     #15                 // class java/lang/String
      98: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     104: aastore
     105: dup
     106: iconst_2
     107: ldc           #26                 // String error/error
     109: aastore
     110: invokestatic  #27                 // Method reactor/core/publisher/Flux.just:([Ljava/lang/Object;)Lreactor/core/publisher/Flux;
     113: aload_0
     114: aload         5
     116: aload_3
     117: invokedynamic #28,  0             // InvokeDynamic #2:apply:(Lorg/springframework/boot/autoconfigure/web/reactive/error/DefaultErrorWebExceptionHandler;Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/util/Map;)Ljava/util/function/Function;
     122: invokevirtual #29                 // Method reactor/core/publisher/Flux.flatMap:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
     125: aload_0
     126: getfield      #2                  // Field errorProperties:Lorg/springframework/boot/autoconfigure/web/ErrorProperties;
     129: invokevirtual #30                 // Method org/springframework/boot/autoconfigure/web/ErrorProperties.getWhitelabel:()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel;
     132: invokevirtual #31                 // Method org/springframework/boot/autoconfigure/web/ErrorProperties$Whitelabel.isEnabled:()Z
     135: ifeq          148
     138: aload_0
     139: aload         5
     141: aload_3
     142: invokevirtual #32                 // Method renderDefaultErrorView:(Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/util/Map;)Lreactor/core/publisher/Mono;
     145: goto          156
     148: aload_0
     149: aload_1
     150: invokevirtual #33                 // Method getError:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Ljava/lang/Throwable;
     153: invokestatic  #34                 // Method reactor/core/publisher/Mono.error:(Ljava/lang/Throwable;)Lreactor/core/publisher/Mono;
     156: invokevirtual #35                 // Method reactor/core/publisher/Flux.switchIfEmpty:(Lorg/reactivestreams/Publisher;)Lreactor/core/publisher/Flux;
     159: invokevirtual #36                 // Method reactor/core/publisher/Flux.next:()Lreactor/core/publisher/Mono;
     162: areturn

  protected reactor.core.publisher.Mono<org.springframework.web.reactive.function.server.ServerResponse> renderErrorResponse(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: aload_1
       2: getstatic     #37                 // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
       5: invokevirtual #10                 // Method isIncludeStackTrace:(Lorg/springframework/web/reactive/function/server/ServerRequest;Lorg/springframework/http/MediaType;)Z
       8: istore_2
       9: aload_0
      10: aload_1
      11: iload_2
      12: invokevirtual #11                 // Method getErrorAttributes:(Lorg/springframework/web/reactive/function/server/ServerRequest;Z)Ljava/util/Map;
      15: astore_3
      16: aload_0
      17: aload_3
      18: invokevirtual #12                 // Method getHttpStatus:(Ljava/util/Map;)Lorg/springframework/http/HttpStatus;
      21: invokestatic  #13                 // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse.status:(Lorg/springframework/http/HttpStatus;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
      24: getstatic     #38                 // Field org/springframework/http/MediaType.APPLICATION_JSON_UTF8:Lorg/springframework/http/MediaType;
      27: invokeinterface #14,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.contentType:(Lorg/springframework/http/MediaType;)Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;
      32: aload_3
      33: invokestatic  #39                 // Method org/springframework/web/reactive/function/BodyInserters.fromObject:(Ljava/lang/Object;)Lorg/springframework/web/reactive/function/BodyInserter;
      36: invokeinterface #40,  2           // InterfaceMethod org/springframework/web/reactive/function/server/ServerResponse$BodyBuilder.body:(Lorg/springframework/web/reactive/function/BodyInserter;)Lreactor/core/publisher/Mono;
      41: areturn

  protected boolean isIncludeStackTrace(org.springframework.web.reactive.function.server.ServerRequest, org.springframework.http.MediaType);
    Code:
       0: aload_0
       1: getfield      #2                  // Field errorProperties:Lorg/springframework/boot/autoconfigure/web/ErrorProperties;
       4: invokevirtual #41                 // Method org/springframework/boot/autoconfigure/web/ErrorProperties.getIncludeStacktrace:()Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
       7: astore_3
       8: aload_3
       9: getstatic     #42                 // Field org/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace.ALWAYS:Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
      12: if_acmpne     17
      15: iconst_1
      16: ireturn
      17: aload_3
      18: getstatic     #43                 // Field org/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace.ON_TRACE_PARAM:Lorg/springframework/boot/autoconfigure/web/ErrorProperties$IncludeStacktrace;
      21: if_acmpne     30
      24: aload_0
      25: aload_1
      26: invokevirtual #44                 // Method isTraceEnabled:(Lorg/springframework/web/reactive/function/server/ServerRequest;)Z
      29: ireturn
      30: iconst_0
      31: ireturn

  protected org.springframework.http.HttpStatus getHttpStatus(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_1
       1: ldc           #45                 // String status
       3: invokeinterface #25,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
       8: checkcast     #46                 // class java/lang/Integer
      11: invokevirtual #47                 // Method java/lang/Integer.intValue:()I
      14: istore_2
      15: iload_2
      16: invokestatic  #48                 // Method org/springframework/http/HttpStatus.valueOf:(I)Lorg/springframework/http/HttpStatus;
      19: areturn

  protected org.springframework.web.reactive.function.server.RequestPredicate acceptsTextHtml();
    Code:
       0: invokedynamic #49,  0             // InvokeDynamic #3:test:()Lorg/springframework/web/reactive/function/server/RequestPredicate;
       5: areturn

  private static boolean lambda$acceptsTextHtml$1(org.springframework.web.reactive.function.server.ServerRequest);
    Code:
       0: aload_0
       1: invokeinterface #50,  1           // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest.headers:()Lorg/springframework/web/reactive/function/server/ServerRequest$Headers;
       6: invokeinterface #51,  1           // InterfaceMethod org/springframework/web/reactive/function/server/ServerRequest$Headers.accept:()Ljava/util/List;
      11: astore_1
      12: aload_1
      13: getstatic     #37                 // Field org/springframework/http/MediaType.ALL:Lorg/springframework/http/MediaType;
      16: invokeinterface #52,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload_1
      23: invokestatic  #53                 // Method org/springframework/http/MediaType.sortBySpecificityAndQuality:(Ljava/util/List;)V
      26: aload_1
      27: invokeinterface #54,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      32: getstatic     #9                  // Field org/springframework/http/MediaType.TEXT_HTML:Lorg/springframework/http/MediaType;
      35: dup
      36: invokevirtual #55                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: pop
      40: invokedynamic #56,  0             // InvokeDynamic #4:test:(Lorg/springframework/http/MediaType;)Ljava/util/function/Predicate;
      45: invokeinterface #57,  2           // InterfaceMethod java/util/stream/Stream.anyMatch:(Ljava/util/function/Predicate;)Z
      50: ireturn
      51: astore_1
      52: iconst_0
      53: ireturn
    Exception table:
       from    to  target type
           0    50    51   Class org/springframework/http/InvalidMediaTypeException

  private org.reactivestreams.Publisher lambda$renderErrorView$0(org.springframework.web.reactive.function.server.ServerResponse$BodyBuilder, java.util.Map, java.lang.String);
    Code:
       0: aload_0
       1: aload_3
       2: aload_1
       3: aload_2
       4: invokevirtual #59                 // Method renderErrorView:(Ljava/lang/String;Lorg/springframework/web/reactive/function/server/ServerResponse$BodyBuilder;Ljava/util/Map;)Lreactor/core/publisher/Mono;
       7: areturn

  static {};
    Code:
       0: new           #60                 // class java/util/EnumMap
       3: dup
       4: ldc           #61                 // class org/springframework/http/HttpStatus$Series
       6: invokespecial #62                 // Method java/util/EnumMap."<init>":(Ljava/lang/Class;)V
       9: astore_0
      10: aload_0
      11: getstatic     #63                 // Field org/springframework/http/HttpStatus$Series.CLIENT_ERROR:Lorg/springframework/http/HttpStatus$Series;
      14: ldc           #64                 // String 4xx
      16: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      21: pop
      22: aload_0
      23: getstatic     #66                 // Field org/springframework/http/HttpStatus$Series.SERVER_ERROR:Lorg/springframework/http/HttpStatus$Series;
      26: ldc           #67                 // String 5xx
      28: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      33: pop
      34: aload_0
      35: invokestatic  #68                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      38: putstatic     #23                 // Field SERIES_VIEWS:Ljava/util/Map;
      41: return
}
