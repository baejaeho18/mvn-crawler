Compiled from "AspectJAfterThrowingAdvice.java"
public class org.springframework.aop.aspectj.AspectJAfterThrowingAdvice extends org.springframework.aop.aspectj.AbstractAspectJAdvice implements org.aopalliance.intercept.MethodInterceptor,org.springframework.aop.AfterAdvice,java.io.Serializable {
  public org.springframework.aop.aspectj.AspectJAfterThrowingAdvice(java.lang.reflect.Method, org.springframework.aop.aspectj.AspectJExpressionPointcut, org.springframework.aop.aspectj.AspectInstanceFactory);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/aop/aspectj/AbstractAspectJAdvice."<init>":(Ljava/lang/reflect/Method;Lorg/springframework/aop/aspectj/AspectJExpressionPointcut;Lorg/springframework/aop/aspectj/AspectInstanceFactory;)V
       7: return

  public boolean isBeforeAdvice();
    Code:
       0: iconst_0
       1: ireturn

  public boolean isAfterAdvice();
    Code:
       0: iconst_1
       1: ireturn

  public void setThrowingName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #2                  // Method setThrowingNameNoCheck:(Ljava/lang/String;)V
       5: return

  public java.lang.Object invoke(org.aopalliance.intercept.MethodInvocation) throws java.lang.Throwable;
    Code:
       0: aload_1
       1: invokeinterface #3,  1            // InterfaceMethod org/aopalliance/intercept/MethodInvocation.proceed:()Ljava/lang/Object;
       6: areturn
       7: astore_2
       8: aload_0
       9: aload_2
      10: invokespecial #5                  // Method shouldInvokeOnThrowing:(Ljava/lang/Throwable;)Z
      13: ifeq          27
      16: aload_0
      17: aload_0
      18: invokevirtual #6                  // Method getJoinPointMatch:()Lorg/aspectj/weaver/tools/JoinPointMatch;
      21: aconst_null
      22: aload_2
      23: invokevirtual #7                  // Method invokeAdviceMethod:(Lorg/aspectj/weaver/tools/JoinPointMatch;Ljava/lang/Object;Ljava/lang/Throwable;)Ljava/lang/Object;
      26: pop
      27: aload_2
      28: athrow
    Exception table:
       from    to  target type
           0     6     7   Class java/lang/Throwable

  private boolean shouldInvokeOnThrowing(java.lang.Throwable);
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getDiscoveredThrowingType:()Ljava/lang/Class;
       4: aload_1
       5: invokevirtual #9                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       8: invokevirtual #10                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      11: ireturn
}
