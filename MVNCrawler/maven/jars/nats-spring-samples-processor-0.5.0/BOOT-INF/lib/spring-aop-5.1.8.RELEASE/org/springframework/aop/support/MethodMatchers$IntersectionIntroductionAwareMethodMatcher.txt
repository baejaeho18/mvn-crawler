Compiled from "MethodMatchers.java"
class org.springframework.aop.support.MethodMatchers$IntersectionIntroductionAwareMethodMatcher extends org.springframework.aop.support.MethodMatchers$IntersectionMethodMatcher implements org.springframework.aop.IntroductionAwareMethodMatcher {
  public org.springframework.aop.support.MethodMatchers$IntersectionIntroductionAwareMethodMatcher(org.springframework.aop.MethodMatcher, org.springframework.aop.MethodMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method org/springframework/aop/support/MethodMatchers$IntersectionMethodMatcher."<init>":(Lorg/springframework/aop/MethodMatcher;Lorg/springframework/aop/MethodMatcher;)V
       6: return

  public boolean matches(java.lang.reflect.Method, java.lang.Class<?>, boolean);
    Code:
       0: aload_0
       1: getfield      #2                  // Field mm1:Lorg/springframework/aop/MethodMatcher;
       4: aload_1
       5: aload_2
       6: iload_3
       7: invokestatic  #3                  // Method org/springframework/aop/support/MethodMatchers.matches:(Lorg/springframework/aop/MethodMatcher;Ljava/lang/reflect/Method;Ljava/lang/Class;Z)Z
      10: ifeq          30
      13: aload_0
      14: getfield      #4                  // Field mm2:Lorg/springframework/aop/MethodMatcher;
      17: aload_1
      18: aload_2
      19: iload_3
      20: invokestatic  #3                  // Method org/springframework/aop/support/MethodMatchers.matches:(Lorg/springframework/aop/MethodMatcher;Ljava/lang/reflect/Method;Ljava/lang/Class;Z)Z
      23: ifeq          30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn
}
