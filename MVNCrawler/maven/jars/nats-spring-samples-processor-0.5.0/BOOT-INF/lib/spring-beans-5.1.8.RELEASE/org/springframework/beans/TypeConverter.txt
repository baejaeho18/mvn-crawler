Compiled from "TypeConverter.java"
public interface org.springframework.beans.TypeConverter {
  public abstract <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>) throws org.springframework.beans.TypeMismatchException;

  public abstract <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>, org.springframework.core.MethodParameter) throws org.springframework.beans.TypeMismatchException;

  public abstract <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>, java.lang.reflect.Field) throws org.springframework.beans.TypeMismatchException;

  public default <T> T convertIfNecessary(java.lang.Object, java.lang.Class<T>, org.springframework.core.convert.TypeDescriptor) throws org.springframework.beans.TypeMismatchException;
    Code:
       0: new           #1                  // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #2                  // String TypeDescriptor resolution not supported
       6: invokespecial #3                  // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow
}
