Compiled from "FluxConsumer.java"
public class org.springframework.cloud.function.core.FluxConsumer<I> extends org.springframework.cloud.function.core.WrappedFunction<I, java.lang.Void, reactor.core.publisher.Flux<I>, reactor.core.publisher.Mono<java.lang.Void>, java.util.function.Consumer<I>> {
  public org.springframework.cloud.function.core.FluxConsumer(java.util.function.Consumer<I>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/cloud/function/core/WrappedFunction."<init>":(Ljava/lang/Object;)V
       5: return

  public reactor.core.publisher.Mono<java.lang.Void> apply(reactor.core.publisher.Flux<I>);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #2                  // Method getTarget:()Ljava/lang/Object;
       5: checkcast     #3                  // class java/util/function/Consumer
       8: invokevirtual #4                  // Method reactor/core/publisher/Flux.doOnNext:(Ljava/util/function/Consumer;)Lreactor/core/publisher/Flux;
      11: invokevirtual #5                  // Method reactor/core/publisher/Flux.then:()Lreactor/core/publisher/Mono;
      14: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #6                  // class reactor/core/publisher/Flux
       5: invokevirtual #7                  // Method apply:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Mono;
       8: areturn
}
