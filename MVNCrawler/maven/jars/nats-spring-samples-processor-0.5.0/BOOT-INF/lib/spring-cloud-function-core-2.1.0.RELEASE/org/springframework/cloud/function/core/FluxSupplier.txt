Compiled from "FluxSupplier.java"
public class org.springframework.cloud.function.core.FluxSupplier<T> implements java.util.function.Supplier<reactor.core.publisher.Flux<T>>, org.springframework.cloud.function.core.FluxWrapper<java.util.function.Supplier<T>> {
  private final java.util.function.Supplier<T> supplier;

  private final java.time.Duration period;

  public org.springframework.cloud.function.core.FluxSupplier(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: invokespecial #1                  // Method "<init>":(Ljava/util/function/Supplier;Ljava/time/Duration;)V
       6: return

  public org.springframework.cloud.function.core.FluxSupplier(java.util.function.Supplier<T>, java.time.Duration);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #3                  // Field supplier:Ljava/util/function/Supplier;
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field period:Ljava/time/Duration;
      14: return

  public java.util.function.Supplier<T> getTarget();
    Code:
       0: aload_0
       1: getfield      #3                  // Field supplier:Ljava/util/function/Supplier;
       4: areturn

  public reactor.core.publisher.Flux<T> get();
    Code:
       0: aload_0
       1: getfield      #4                  // Field period:Ljava/time/Duration;
       4: ifnull        24
       7: aload_0
       8: getfield      #4                  // Field period:Ljava/time/Duration;
      11: invokestatic  #5                  // Method reactor/core/publisher/Flux.interval:(Ljava/time/Duration;)Lreactor/core/publisher/Flux;
      14: aload_0
      15: invokedynamic #6,  0              // InvokeDynamic #0:apply:(Lorg/springframework/cloud/function/core/FluxSupplier;)Ljava/util/function/Function;
      20: invokevirtual #7                  // Method reactor/core/publisher/Flux.map:(Ljava/util/function/Function;)Lreactor/core/publisher/Flux;
      23: areturn
      24: aload_0
      25: getfield      #3                  // Field supplier:Ljava/util/function/Supplier;
      28: invokeinterface #8,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
      33: astore_1
      34: aload_1
      35: instanceof    #9                  // class java/util/stream/Stream
      38: ifeq          49
      41: aload_1
      42: checkcast     #9                  // class java/util/stream/Stream
      45: invokestatic  #10                 // Method reactor/core/publisher/Flux.fromStream:(Ljava/util/stream/Stream;)Lreactor/core/publisher/Flux;
      48: areturn
      49: aload_1
      50: invokestatic  #11                 // Method reactor/core/publisher/Flux.just:(Ljava/lang/Object;)Lreactor/core/publisher/Flux;
      53: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #12                 // Method get:()Lreactor/core/publisher/Flux;
       4: areturn

  public java.lang.Object getTarget();
    Code:
       0: aload_0
       1: invokevirtual #13                 // Method getTarget:()Ljava/util/function/Supplier;
       4: areturn

  private java.lang.Object lambda$get$0(java.lang.Long);
    Code:
       0: aload_0
       1: getfield      #3                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: areturn
}
