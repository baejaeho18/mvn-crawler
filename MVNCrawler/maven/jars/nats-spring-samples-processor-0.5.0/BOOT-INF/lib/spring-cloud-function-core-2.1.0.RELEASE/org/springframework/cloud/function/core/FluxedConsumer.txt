Compiled from "FluxedConsumer.java"
public class org.springframework.cloud.function.core.FluxedConsumer<I> extends org.springframework.cloud.function.core.WrappedFunction<I, java.lang.Void, reactor.core.publisher.Flux<I>, reactor.core.publisher.Mono<java.lang.Void>, java.util.function.Consumer<reactor.core.publisher.Flux<I>>> {
  public org.springframework.cloud.function.core.FluxedConsumer(java.util.function.Consumer<reactor.core.publisher.Flux<I>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method org/springframework/cloud/function/core/WrappedFunction."<init>":(Ljava/lang/Object;)V
       5: return

  public reactor.core.publisher.Mono<java.lang.Void> apply(reactor.core.publisher.Flux<I>);
    Code:
       0: aload_0
       1: aload_1
       2: invokedynamic #2,  0              // InvokeDynamic #0:run:(Lorg/springframework/cloud/function/core/FluxedConsumer;Lreactor/core/publisher/Flux;)Ljava/lang/Runnable;
       7: invokestatic  #3                  // Method reactor/core/publisher/Mono.fromRunnable:(Ljava/lang/Runnable;)Lreactor/core/publisher/Mono;
      10: areturn

  public java.lang.Object apply(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #4                  // class reactor/core/publisher/Flux
       5: invokevirtual #5                  // Method apply:(Lreactor/core/publisher/Flux;)Lreactor/core/publisher/Mono;
       8: areturn

  private void lambda$apply$0(reactor.core.publisher.Flux);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getTarget:()Ljava/lang/Object;
       4: checkcast     #7                  // class java/util/function/Consumer
       7: aload_1
       8: invokeinterface #8,  2            // InterfaceMethod java/util/function/Consumer.accept:(Ljava/lang/Object;)V
      13: return
}
