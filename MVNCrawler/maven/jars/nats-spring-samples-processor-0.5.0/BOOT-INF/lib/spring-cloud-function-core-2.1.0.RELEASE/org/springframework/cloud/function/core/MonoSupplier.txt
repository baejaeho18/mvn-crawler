Compiled from "MonoSupplier.java"
public class org.springframework.cloud.function.core.MonoSupplier<T> implements java.util.function.Supplier<reactor.core.publisher.Mono<T>>, org.springframework.cloud.function.core.FluxWrapper<java.util.function.Supplier<T>> {
  private final java.util.function.Supplier<T> supplier;

  public org.springframework.cloud.function.core.MonoSupplier(java.util.function.Supplier<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       9: return

  public java.util.function.Supplier<T> getTarget();
    Code:
       0: aload_0
       1: getfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       4: areturn

  public reactor.core.publisher.Mono<T> get();
    Code:
       0: aload_0
       1: getfield      #2                  // Field supplier:Ljava/util/function/Supplier;
       4: invokeinterface #3,  1            // InterfaceMethod java/util/function/Supplier.get:()Ljava/lang/Object;
       9: astore_1
      10: aload_1
      11: invokestatic  #4                  // Method reactor/core/publisher/Mono.just:(Ljava/lang/Object;)Lreactor/core/publisher/Mono;
      14: areturn

  public java.lang.Object get();
    Code:
       0: aload_0
       1: invokevirtual #5                  // Method get:()Lreactor/core/publisher/Mono;
       4: areturn

  public java.lang.Object getTarget();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getTarget:()Ljava/util/function/Supplier;
       4: areturn
}
