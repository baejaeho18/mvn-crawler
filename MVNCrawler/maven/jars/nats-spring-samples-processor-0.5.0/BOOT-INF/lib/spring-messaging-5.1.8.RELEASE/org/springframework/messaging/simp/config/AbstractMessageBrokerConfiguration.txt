Compiled from "AbstractMessageBrokerConfiguration.java"
public abstract class org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration implements org.springframework.context.ApplicationContextAware {
  private static final java.lang.String MVC_VALIDATOR_NAME;

  private static final boolean jackson2Present;

  private org.springframework.context.ApplicationContext applicationContext;

  private org.springframework.messaging.simp.config.ChannelRegistration clientInboundChannelRegistration;

  private org.springframework.messaging.simp.config.ChannelRegistration clientOutboundChannelRegistration;

  private org.springframework.messaging.simp.config.MessageBrokerRegistry brokerRegistry;

  protected org.springframework.messaging.simp.config.AbstractMessageBrokerConfiguration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public void setApplicationContext(org.springframework.context.ApplicationContext);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       5: return

  public org.springframework.context.ApplicationContext getApplicationContext();
    Code:
       0: aload_0
       1: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
       4: areturn

  public org.springframework.messaging.support.AbstractSubscribableChannel clientInboundChannel();
    Code:
       0: new           #3                  // class org/springframework/messaging/support/ExecutorSubscribableChannel
       3: dup
       4: aload_0
       5: invokevirtual #4                  // Method clientInboundChannelExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       8: invokespecial #5                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel."<init>":(Ljava/util/concurrent/Executor;)V
      11: astore_1
      12: aload_1
      13: aload_1
      14: invokevirtual #6                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.getLogger:()Lorg/apache/commons/logging/Log;
      17: invokestatic  #7                  // Method org/springframework/messaging/simp/SimpLogging.forLog:(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
      20: invokevirtual #8                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setLogger:(Lorg/apache/commons/logging/Log;)V
      23: aload_0
      24: invokevirtual #9                  // Method getClientInboundChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
      27: astore_2
      28: aload_2
      29: invokevirtual #10                 // Method org/springframework/messaging/simp/config/ChannelRegistration.hasInterceptors:()Z
      32: ifeq          43
      35: aload_1
      36: aload_2
      37: invokevirtual #11                 // Method org/springframework/messaging/simp/config/ChannelRegistration.getInterceptors:()Ljava/util/List;
      40: invokevirtual #12                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setInterceptors:(Ljava/util/List;)V
      43: aload_1
      44: areturn

  public org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor clientInboundChannelExecutor();
    Code:
       0: aload_0
       1: invokevirtual #9                  // Method getClientInboundChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
       4: invokevirtual #13                 // Method org/springframework/messaging/simp/config/ChannelRegistration.taskExecutor:()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       7: astore_1
       8: aload_1
       9: invokevirtual #14                 // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.getTaskExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      12: astore_2
      13: aload_2
      14: ldc           #15                 // String clientInboundChannel-
      16: invokevirtual #16                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadNamePrefix:(Ljava/lang/String;)V
      19: aload_2
      20: areturn

  protected final org.springframework.messaging.simp.config.ChannelRegistration getClientInboundChannelRegistration();
    Code:
       0: aload_0
       1: getfield      #17                 // Field clientInboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
       4: ifnonnull     44
       7: new           #18                 // class org/springframework/messaging/simp/config/ChannelRegistration
      10: dup
      11: invokespecial #19                 // Method org/springframework/messaging/simp/config/ChannelRegistration."<init>":()V
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #20                 // Method configureClientInboundChannel:(Lorg/springframework/messaging/simp/config/ChannelRegistration;)V
      20: aload_1
      21: iconst_1
      22: anewarray     #21                 // class org/springframework/messaging/support/ChannelInterceptor
      25: dup
      26: iconst_0
      27: new           #22                 // class org/springframework/messaging/support/ImmutableMessageChannelInterceptor
      30: dup
      31: invokespecial #23                 // Method org/springframework/messaging/support/ImmutableMessageChannelInterceptor."<init>":()V
      34: aastore
      35: invokevirtual #24                 // Method org/springframework/messaging/simp/config/ChannelRegistration.interceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      38: pop
      39: aload_0
      40: aload_1
      41: putfield      #17                 // Field clientInboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
      44: aload_0
      45: getfield      #17                 // Field clientInboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
      48: areturn

  protected void configureClientInboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: return

  public org.springframework.messaging.support.AbstractSubscribableChannel clientOutboundChannel();
    Code:
       0: new           #3                  // class org/springframework/messaging/support/ExecutorSubscribableChannel
       3: dup
       4: aload_0
       5: invokevirtual #25                 // Method clientOutboundChannelExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
       8: invokespecial #5                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel."<init>":(Ljava/util/concurrent/Executor;)V
      11: astore_1
      12: aload_1
      13: aload_1
      14: invokevirtual #6                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.getLogger:()Lorg/apache/commons/logging/Log;
      17: invokestatic  #7                  // Method org/springframework/messaging/simp/SimpLogging.forLog:(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
      20: invokevirtual #8                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setLogger:(Lorg/apache/commons/logging/Log;)V
      23: aload_0
      24: invokevirtual #26                 // Method getClientOutboundChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
      27: astore_2
      28: aload_2
      29: invokevirtual #10                 // Method org/springframework/messaging/simp/config/ChannelRegistration.hasInterceptors:()Z
      32: ifeq          43
      35: aload_1
      36: aload_2
      37: invokevirtual #11                 // Method org/springframework/messaging/simp/config/ChannelRegistration.getInterceptors:()Ljava/util/List;
      40: invokevirtual #12                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setInterceptors:(Ljava/util/List;)V
      43: aload_1
      44: areturn

  public org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor clientOutboundChannelExecutor();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method getClientOutboundChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
       4: invokevirtual #13                 // Method org/springframework/messaging/simp/config/ChannelRegistration.taskExecutor:()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       7: astore_1
       8: aload_1
       9: invokevirtual #14                 // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.getTaskExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      12: astore_2
      13: aload_2
      14: ldc           #27                 // String clientOutboundChannel-
      16: invokevirtual #16                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadNamePrefix:(Ljava/lang/String;)V
      19: aload_2
      20: areturn

  protected final org.springframework.messaging.simp.config.ChannelRegistration getClientOutboundChannelRegistration();
    Code:
       0: aload_0
       1: getfield      #28                 // Field clientOutboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
       4: ifnonnull     44
       7: new           #18                 // class org/springframework/messaging/simp/config/ChannelRegistration
      10: dup
      11: invokespecial #19                 // Method org/springframework/messaging/simp/config/ChannelRegistration."<init>":()V
      14: astore_1
      15: aload_0
      16: aload_1
      17: invokevirtual #29                 // Method configureClientOutboundChannel:(Lorg/springframework/messaging/simp/config/ChannelRegistration;)V
      20: aload_1
      21: iconst_1
      22: anewarray     #21                 // class org/springframework/messaging/support/ChannelInterceptor
      25: dup
      26: iconst_0
      27: new           #22                 // class org/springframework/messaging/support/ImmutableMessageChannelInterceptor
      30: dup
      31: invokespecial #23                 // Method org/springframework/messaging/support/ImmutableMessageChannelInterceptor."<init>":()V
      34: aastore
      35: invokevirtual #24                 // Method org/springframework/messaging/simp/config/ChannelRegistration.interceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      38: pop
      39: aload_0
      40: aload_1
      41: putfield      #28                 // Field clientOutboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
      44: aload_0
      45: getfield      #28                 // Field clientOutboundChannelRegistration:Lorg/springframework/messaging/simp/config/ChannelRegistration;
      48: areturn

  protected void configureClientOutboundChannel(org.springframework.messaging.simp.config.ChannelRegistration);
    Code:
       0: return

  public org.springframework.messaging.support.AbstractSubscribableChannel brokerChannel();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: invokevirtual #31                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getBrokerChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
       7: astore_1
       8: aload_1
       9: invokevirtual #32                 // Method org/springframework/messaging/simp/config/ChannelRegistration.hasTaskExecutor:()Z
      12: ifeq          29
      15: new           #3                  // class org/springframework/messaging/support/ExecutorSubscribableChannel
      18: dup
      19: aload_0
      20: invokevirtual #33                 // Method brokerChannelExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      23: invokespecial #5                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel."<init>":(Ljava/util/concurrent/Executor;)V
      26: goto          36
      29: new           #3                  // class org/springframework/messaging/support/ExecutorSubscribableChannel
      32: dup
      33: invokespecial #34                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel."<init>":()V
      36: astore_2
      37: aload_1
      38: iconst_1
      39: anewarray     #21                 // class org/springframework/messaging/support/ChannelInterceptor
      42: dup
      43: iconst_0
      44: new           #22                 // class org/springframework/messaging/support/ImmutableMessageChannelInterceptor
      47: dup
      48: invokespecial #23                 // Method org/springframework/messaging/support/ImmutableMessageChannelInterceptor."<init>":()V
      51: aastore
      52: invokevirtual #24                 // Method org/springframework/messaging/simp/config/ChannelRegistration.interceptors:([Lorg/springframework/messaging/support/ChannelInterceptor;)Lorg/springframework/messaging/simp/config/ChannelRegistration;
      55: pop
      56: aload_2
      57: aload_2
      58: invokevirtual #6                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.getLogger:()Lorg/apache/commons/logging/Log;
      61: invokestatic  #7                  // Method org/springframework/messaging/simp/SimpLogging.forLog:(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
      64: invokevirtual #8                  // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setLogger:(Lorg/apache/commons/logging/Log;)V
      67: aload_2
      68: aload_1
      69: invokevirtual #11                 // Method org/springframework/messaging/simp/config/ChannelRegistration.getInterceptors:()Ljava/util/List;
      72: invokevirtual #12                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.setInterceptors:(Ljava/util/List;)V
      75: aload_2
      76: areturn

  public org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor brokerChannelExecutor();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: invokevirtual #31                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getBrokerChannelRegistration:()Lorg/springframework/messaging/simp/config/ChannelRegistration;
       7: astore_1
       8: aload_1
       9: invokevirtual #32                 // Method org/springframework/messaging/simp/config/ChannelRegistration.hasTaskExecutor:()Z
      12: ifeq          26
      15: aload_1
      16: invokevirtual #13                 // Method org/springframework/messaging/simp/config/ChannelRegistration.taskExecutor:()Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      19: invokevirtual #14                 // Method org/springframework/messaging/simp/config/TaskExecutorRegistration.getTaskExecutor:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;
      22: astore_2
      23: goto          49
      26: new           #35                 // class org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor
      29: dup
      30: invokespecial #36                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor."<init>":()V
      33: astore_2
      34: aload_2
      35: iconst_0
      36: invokevirtual #37                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setCorePoolSize:(I)V
      39: aload_2
      40: iconst_1
      41: invokevirtual #38                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setMaxPoolSize:(I)V
      44: aload_2
      45: iconst_0
      46: invokevirtual #39                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setQueueCapacity:(I)V
      49: aload_2
      50: ldc           #40                 // String brokerChannel-
      52: invokevirtual #16                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskExecutor.setThreadNamePrefix:(Ljava/lang/String;)V
      55: aload_2
      56: areturn

  protected final org.springframework.messaging.simp.config.MessageBrokerRegistry getBrokerRegistry();
    Code:
       0: aload_0
       1: getfield      #41                 // Field brokerRegistry:Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: ifnonnull     33
       7: new           #42                 // class org/springframework/messaging/simp/config/MessageBrokerRegistry
      10: dup
      11: aload_0
      12: invokevirtual #43                 // Method clientInboundChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
      15: aload_0
      16: invokevirtual #44                 // Method clientOutboundChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
      19: invokespecial #45                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;)V
      22: astore_1
      23: aload_0
      24: aload_1
      25: invokevirtual #46                 // Method configureMessageBroker:(Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;)V
      28: aload_0
      29: aload_1
      30: putfield      #41                 // Field brokerRegistry:Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      33: aload_0
      34: getfield      #41                 // Field brokerRegistry:Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      37: areturn

  protected void configureMessageBroker(org.springframework.messaging.simp.config.MessageBrokerRegistry);
    Code:
       0: return

  public final org.springframework.util.PathMatcher getPathMatcher();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: invokevirtual #47                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getPathMatcher:()Lorg/springframework/util/PathMatcher;
       7: areturn

  public org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler simpAnnotationMethodMessageHandler();
    Code:
       0: aload_0
       1: invokevirtual #48                 // Method createAnnotationMethodMessageHandler:()Lorg/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler;
       4: astore_1
       5: aload_1
       6: aload_0
       7: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      10: invokevirtual #49                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getApplicationDestinationPrefixes:()Ljava/util/Collection;
      13: invokevirtual #50                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setDestinationPrefixes:(Ljava/util/Collection;)V
      16: aload_1
      17: aload_0
      18: invokevirtual #51                 // Method brokerMessageConverter:()Lorg/springframework/messaging/converter/CompositeMessageConverter;
      21: invokevirtual #52                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setMessageConverter:(Lorg/springframework/messaging/converter/MessageConverter;)V
      24: aload_1
      25: aload_0
      26: invokevirtual #53                 // Method simpValidator:()Lorg/springframework/validation/Validator;
      29: invokevirtual #54                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setValidator:(Lorg/springframework/validation/Validator;)V
      32: new           #55                 // class java/util/ArrayList
      35: dup
      36: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      39: astore_2
      40: aload_0
      41: aload_2
      42: invokevirtual #57                 // Method addArgumentResolvers:(Ljava/util/List;)V
      45: aload_1
      46: aload_2
      47: invokevirtual #58                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setCustomArgumentResolvers:(Ljava/util/List;)V
      50: new           #55                 // class java/util/ArrayList
      53: dup
      54: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
      57: astore_3
      58: aload_0
      59: aload_3
      60: invokevirtual #59                 // Method addReturnValueHandlers:(Ljava/util/List;)V
      63: aload_1
      64: aload_3
      65: invokevirtual #60                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setCustomReturnValueHandlers:(Ljava/util/List;)V
      68: aload_0
      69: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      72: invokevirtual #47                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getPathMatcher:()Lorg/springframework/util/PathMatcher;
      75: astore        4
      77: aload         4
      79: ifnull        88
      82: aload_1
      83: aload         4
      85: invokevirtual #61                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler.setPathMatcher:(Lorg/springframework/util/PathMatcher;)V
      88: aload_1
      89: areturn

  protected org.springframework.messaging.simp.annotation.support.SimpAnnotationMethodMessageHandler createAnnotationMethodMessageHandler();
    Code:
       0: new           #62                 // class org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method clientInboundChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
       8: aload_0
       9: invokevirtual #44                 // Method clientOutboundChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
      12: aload_0
      13: invokevirtual #63                 // Method brokerMessagingTemplate:()Lorg/springframework/messaging/simp/SimpMessagingTemplate;
      16: invokespecial #64                 // Method org/springframework/messaging/simp/annotation/support/SimpAnnotationMethodMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/simp/SimpMessageSendingOperations;)V
      19: areturn

  protected void addArgumentResolvers(java.util.List<org.springframework.messaging.handler.invocation.HandlerMethodArgumentResolver>);
    Code:
       0: return

  protected void addReturnValueHandlers(java.util.List<org.springframework.messaging.handler.invocation.HandlerMethodReturnValueHandler>);
    Code:
       0: return

  public org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler simpleBrokerMessageHandler();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: aload_0
       5: invokevirtual #65                 // Method brokerChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
       8: invokevirtual #66                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getSimpleBroker:(Lorg/springframework/messaging/SubscribableChannel;)Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler;
      11: astore_1
      12: aload_1
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: aload_0
      19: aload_1
      20: invokespecial #67                 // Method updateUserDestinationResolver:(Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;)V
      23: aload_1
      24: areturn

  private void updateUserDestinationResolver(org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler);
    Code:
       0: aload_1
       1: invokevirtual #68                 // Method org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler.getDestinationPrefixes:()Ljava/util/Collection;
       4: astore_2
       5: aload_2
       6: invokeinterface #69,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      11: ifne          47
      14: aload_2
      15: invokeinterface #70,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: invokeinterface #71,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      25: checkcast     #72                 // class java/lang/String
      28: ldc           #73                 // String /
      30: invokevirtual #74                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      33: ifne          47
      36: aload_0
      37: invokevirtual #75                 // Method userDestinationResolver:()Lorg/springframework/messaging/simp/user/UserDestinationResolver;
      40: checkcast     #76                 // class org/springframework/messaging/simp/user/DefaultUserDestinationResolver
      43: iconst_1
      44: invokevirtual #77                 // Method org/springframework/messaging/simp/user/DefaultUserDestinationResolver.setRemoveLeadingSlash:(Z)V
      47: return

  public org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler stompBrokerRelayMessageHandler();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: aload_0
       5: invokevirtual #65                 // Method brokerChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
       8: invokevirtual #78                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getStompBrokerRelay:(Lorg/springframework/messaging/SubscribableChannel;)Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;
      11: astore_1
      12: aload_1
      13: ifnonnull     18
      16: aconst_null
      17: areturn
      18: new           #79                 // class java/util/HashMap
      21: dup
      22: iconst_4
      23: invokespecial #80                 // Method java/util/HashMap."<init>":(I)V
      26: astore_2
      27: aload_0
      28: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      31: invokevirtual #81                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserDestinationBroadcast:()Ljava/lang/String;
      34: astore_3
      35: aload_3
      36: ifnull        51
      39: aload_2
      40: aload_3
      41: aload_0
      42: invokevirtual #82                 // Method userDestinationMessageHandler:()Lorg/springframework/messaging/simp/user/UserDestinationMessageHandler;
      45: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      50: pop
      51: aload_0
      52: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      55: invokevirtual #84                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserRegistryBroadcast:()Ljava/lang/String;
      58: astore_3
      59: aload_3
      60: ifnull        75
      63: aload_2
      64: aload_3
      65: aload_0
      66: invokevirtual #85                 // Method userRegistryMessageHandler:()Lorg/springframework/messaging/MessageHandler;
      69: invokeinterface #83,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      74: pop
      75: aload_1
      76: aload_2
      77: invokevirtual #86                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setSystemSubscriptions:(Ljava/util/Map;)V
      80: aload_0
      81: aload_1
      82: invokespecial #67                 // Method updateUserDestinationResolver:(Lorg/springframework/messaging/simp/broker/AbstractBrokerMessageHandler;)V
      85: aload_1
      86: areturn

  public org.springframework.messaging.simp.user.UserDestinationMessageHandler userDestinationMessageHandler();
    Code:
       0: new           #87                 // class org/springframework/messaging/simp/user/UserDestinationMessageHandler
       3: dup
       4: aload_0
       5: invokevirtual #43                 // Method clientInboundChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
       8: aload_0
       9: invokevirtual #65                 // Method brokerChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
      12: aload_0
      13: invokevirtual #75                 // Method userDestinationResolver:()Lorg/springframework/messaging/simp/user/UserDestinationResolver;
      16: invokespecial #88                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/simp/user/UserDestinationResolver;)V
      19: astore_1
      20: aload_0
      21: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      24: invokevirtual #81                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserDestinationBroadcast:()Ljava/lang/String;
      27: astore_2
      28: aload_2
      29: ifnull        37
      32: aload_1
      33: aload_2
      34: invokevirtual #89                 // Method org/springframework/messaging/simp/user/UserDestinationMessageHandler.setBroadcastDestination:(Ljava/lang/String;)V
      37: aload_1
      38: areturn

  public org.springframework.messaging.MessageHandler userRegistryMessageHandler();
    Code:
       0: aload_0
       1: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
       4: invokevirtual #84                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserRegistryBroadcast:()Ljava/lang/String;
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: invokevirtual #90                 // Method userRegistry:()Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      16: astore_1
      17: ldc           #91                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry
      19: aload_1
      20: ldc           #92                 // String MultiServerUserRegistry required
      22: invokestatic  #93                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      25: new           #94                 // class org/springframework/messaging/simp/user/UserRegistryMessageHandler
      28: dup
      29: aload_1
      30: checkcast     #91                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry
      33: aload_0
      34: invokevirtual #63                 // Method brokerMessagingTemplate:()Lorg/springframework/messaging/simp/SimpMessagingTemplate;
      37: aload_0
      38: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      41: invokevirtual #84                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserRegistryBroadcast:()Ljava/lang/String;
      44: aload_0
      45: invokevirtual #95                 // Method messageBrokerTaskScheduler:()Lorg/springframework/scheduling/concurrent/ThreadPoolTaskScheduler;
      48: invokespecial #96                 // Method org/springframework/messaging/simp/user/UserRegistryMessageHandler."<init>":(Lorg/springframework/messaging/simp/user/MultiServerUserRegistry;Lorg/springframework/messaging/simp/SimpMessagingTemplate;Ljava/lang/String;Lorg/springframework/scheduling/TaskScheduler;)V
      51: areturn

  public org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler messageBrokerTaskScheduler();
    Code:
       0: new           #97                 // class org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler
       3: dup
       4: invokespecial #98                 // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler."<init>":()V
       7: astore_1
       8: aload_1
       9: ldc           #99                 // String MessageBroker-
      11: invokevirtual #100                // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setThreadNamePrefix:(Ljava/lang/String;)V
      14: aload_1
      15: invokestatic  #101                // Method java/lang/Runtime.getRuntime:()Ljava/lang/Runtime;
      18: invokevirtual #102                // Method java/lang/Runtime.availableProcessors:()I
      21: invokevirtual #103                // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setPoolSize:(I)V
      24: aload_1
      25: iconst_1
      26: invokevirtual #104                // Method org/springframework/scheduling/concurrent/ThreadPoolTaskScheduler.setRemoveOnCancelPolicy:(Z)V
      29: aload_1
      30: areturn

  public org.springframework.messaging.simp.SimpMessagingTemplate brokerMessagingTemplate();
    Code:
       0: new           #105                // class org/springframework/messaging/simp/SimpMessagingTemplate
       3: dup
       4: aload_0
       5: invokevirtual #65                 // Method brokerChannel:()Lorg/springframework/messaging/support/AbstractSubscribableChannel;
       8: invokespecial #106                // Method org/springframework/messaging/simp/SimpMessagingTemplate."<init>":(Lorg/springframework/messaging/MessageChannel;)V
      11: astore_1
      12: aload_0
      13: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      16: invokevirtual #107                // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserDestinationPrefix:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: ifnull        29
      24: aload_1
      25: aload_2
      26: invokevirtual #108                // Method org/springframework/messaging/simp/SimpMessagingTemplate.setUserDestinationPrefix:(Ljava/lang/String;)V
      29: aload_1
      30: aload_0
      31: invokevirtual #51                 // Method brokerMessageConverter:()Lorg/springframework/messaging/converter/CompositeMessageConverter;
      34: invokevirtual #109                // Method org/springframework/messaging/simp/SimpMessagingTemplate.setMessageConverter:(Lorg/springframework/messaging/converter/MessageConverter;)V
      37: aload_1
      38: areturn

  public org.springframework.messaging.converter.CompositeMessageConverter brokerMessageConverter();
    Code:
       0: new           #55                 // class java/util/ArrayList
       3: dup
       4: invokespecial #56                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: aload_1
      10: invokevirtual #110                // Method configureMessageConverters:(Ljava/util/List;)Z
      13: istore_2
      14: iload_2
      15: ifeq          63
      18: aload_1
      19: new           #111                // class org/springframework/messaging/converter/StringMessageConverter
      22: dup
      23: invokespecial #112                // Method org/springframework/messaging/converter/StringMessageConverter."<init>":()V
      26: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      31: pop
      32: aload_1
      33: new           #114                // class org/springframework/messaging/converter/ByteArrayMessageConverter
      36: dup
      37: invokespecial #115                // Method org/springframework/messaging/converter/ByteArrayMessageConverter."<init>":()V
      40: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      45: pop
      46: getstatic     #116                // Field jackson2Present:Z
      49: ifeq          63
      52: aload_1
      53: aload_0
      54: invokevirtual #117                // Method createJacksonConverter:()Lorg/springframework/messaging/converter/MappingJackson2MessageConverter;
      57: invokeinterface #113,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      62: pop
      63: new           #118                // class org/springframework/messaging/converter/CompositeMessageConverter
      66: dup
      67: aload_1
      68: invokespecial #119                // Method org/springframework/messaging/converter/CompositeMessageConverter."<init>":(Ljava/util/Collection;)V
      71: areturn

  protected org.springframework.messaging.converter.MappingJackson2MessageConverter createJacksonConverter();
    Code:
       0: new           #120                // class org/springframework/messaging/converter/DefaultContentTypeResolver
       3: dup
       4: invokespecial #121                // Method org/springframework/messaging/converter/DefaultContentTypeResolver."<init>":()V
       7: astore_1
       8: aload_1
       9: getstatic     #122                // Field org/springframework/util/MimeTypeUtils.APPLICATION_JSON:Lorg/springframework/util/MimeType;
      12: invokevirtual #123                // Method org/springframework/messaging/converter/DefaultContentTypeResolver.setDefaultMimeType:(Lorg/springframework/util/MimeType;)V
      15: new           #124                // class org/springframework/messaging/converter/MappingJackson2MessageConverter
      18: dup
      19: invokespecial #125                // Method org/springframework/messaging/converter/MappingJackson2MessageConverter."<init>":()V
      22: astore_2
      23: aload_2
      24: aload_1
      25: invokevirtual #126                // Method org/springframework/messaging/converter/MappingJackson2MessageConverter.setContentTypeResolver:(Lorg/springframework/messaging/converter/ContentTypeResolver;)V
      28: aload_2
      29: areturn

  protected boolean configureMessageConverters(java.util.List<org.springframework.messaging.converter.MessageConverter>);
    Code:
       0: iconst_1
       1: ireturn

  public org.springframework.messaging.simp.user.UserDestinationResolver userDestinationResolver();
    Code:
       0: new           #76                 // class org/springframework/messaging/simp/user/DefaultUserDestinationResolver
       3: dup
       4: aload_0
       5: invokevirtual #90                 // Method userRegistry:()Lorg/springframework/messaging/simp/user/SimpUserRegistry;
       8: invokespecial #127                // Method org/springframework/messaging/simp/user/DefaultUserDestinationResolver."<init>":(Lorg/springframework/messaging/simp/user/SimpUserRegistry;)V
      11: astore_1
      12: aload_0
      13: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      16: invokevirtual #107                // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserDestinationPrefix:()Ljava/lang/String;
      19: astore_2
      20: aload_2
      21: ifnull        29
      24: aload_1
      25: aload_2
      26: invokevirtual #128                // Method org/springframework/messaging/simp/user/DefaultUserDestinationResolver.setUserDestinationPrefix:(Ljava/lang/String;)V
      29: aload_1
      30: areturn

  public org.springframework.messaging.simp.user.SimpUserRegistry userRegistry();
    Code:
       0: aload_0
       1: invokevirtual #129                // Method createLocalUserRegistry:()Lorg/springframework/messaging/simp/user/SimpUserRegistry;
       4: astore_1
       5: aload_1
       6: ifnonnull     21
       9: aload_0
      10: aload_0
      11: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      14: invokevirtual #130                // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserRegistryOrder:()Ljava/lang/Integer;
      17: invokevirtual #131                // Method createLocalUserRegistry:(Ljava/lang/Integer;)Lorg/springframework/messaging/simp/user/SimpUserRegistry;
      20: astore_1
      21: aload_0
      22: invokevirtual #30                 // Method getBrokerRegistry:()Lorg/springframework/messaging/simp/config/MessageBrokerRegistry;
      25: invokevirtual #84                 // Method org/springframework/messaging/simp/config/MessageBrokerRegistry.getUserRegistryBroadcast:()Ljava/lang/String;
      28: ifnull        35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: istore_2
      37: iload_2
      38: ifeq          52
      41: new           #91                 // class org/springframework/messaging/simp/user/MultiServerUserRegistry
      44: dup
      45: aload_1
      46: invokespecial #132                // Method org/springframework/messaging/simp/user/MultiServerUserRegistry."<init>":(Lorg/springframework/messaging/simp/user/SimpUserRegistry;)V
      49: goto          53
      52: aload_1
      53: areturn

  protected org.springframework.messaging.simp.user.SimpUserRegistry createLocalUserRegistry();
    Code:
       0: aconst_null
       1: areturn

  protected abstract org.springframework.messaging.simp.user.SimpUserRegistry createLocalUserRegistry(java.lang.Integer);

  protected org.springframework.validation.Validator simpValidator();
    Code:
       0: aload_0
       1: invokevirtual #133                // Method getValidator:()Lorg/springframework/validation/Validator;
       4: astore_1
       5: aload_1
       6: ifnonnull     113
       9: aload_0
      10: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      13: ifnull        50
      16: aload_0
      17: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      20: ldc           #135                // String mvcValidator
      22: invokeinterface #136,  2          // InterfaceMethod org/springframework/context/ApplicationContext.containsBean:(Ljava/lang/String;)Z
      27: ifeq          50
      30: aload_0
      31: getfield      #2                  // Field applicationContext:Lorg/springframework/context/ApplicationContext;
      34: ldc           #135                // String mvcValidator
      36: ldc           #137                // class org/springframework/validation/Validator
      38: invokeinterface #138,  3          // InterfaceMethod org/springframework/context/ApplicationContext.getBean:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;
      43: checkcast     #137                // class org/springframework/validation/Validator
      46: astore_1
      47: goto          113
      50: ldc           #139                // String javax.validation.Validator
      52: aload_0
      53: invokevirtual #140                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      56: invokevirtual #141                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      59: invokestatic  #142                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      62: ifeq          104
      65: ldc           #143                // String org.springframework.validation.beanvalidation.OptionalValidatorFactoryBean
      67: astore_3
      68: aload_3
      69: ldc           #134                // class org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration
      71: invokevirtual #141                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      74: invokestatic  #144                // Method org/springframework/util/ClassUtils.forName:(Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;
      77: astore_2
      78: goto          93
      81: astore_3
      82: new           #146                // class org/springframework/beans/factory/BeanInitializationException
      85: dup
      86: ldc           #147                // String Could not find default validator class
      88: aload_3
      89: invokespecial #148                // Method org/springframework/beans/factory/BeanInitializationException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      92: athrow
      93: aload_2
      94: invokestatic  #149                // Method org/springframework/beans/BeanUtils.instantiateClass:(Ljava/lang/Class;)Ljava/lang/Object;
      97: checkcast     #137                // class org/springframework/validation/Validator
     100: astore_1
     101: goto          113
     104: new           #150                // class org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration$1
     107: dup
     108: aload_0
     109: invokespecial #151                // Method org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration$1."<init>":(Lorg/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration;)V
     112: astore_1
     113: aload_1
     114: areturn
    Exception table:
       from    to  target type
          65    78    81   Class java/lang/Throwable

  public org.springframework.validation.Validator getValidator();
    Code:
       0: aconst_null
       1: areturn

  static {};
    Code:
       0: ldc           #152                // String com.fasterxml.jackson.databind.ObjectMapper
       2: ldc           #134                // class org/springframework/messaging/simp/config/AbstractMessageBrokerConfiguration
       4: invokevirtual #141                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       7: invokestatic  #142                // Method org/springframework/util/ClassUtils.isPresent:(Ljava/lang/String;Ljava/lang/ClassLoader;)Z
      10: putstatic     #116                // Field jackson2Present:Z
      13: return
}
