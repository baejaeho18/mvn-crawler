Compiled from "DefaultSubscriptionRegistry.java"
class org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$DestinationCache {
  private final java.util.Map<java.lang.String, org.springframework.util.LinkedMultiValueMap<java.lang.String, java.lang.String>> accessCache;

  private final java.util.Map<java.lang.String, org.springframework.util.LinkedMultiValueMap<java.lang.String, java.lang.String>> updateCache;

  final org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry this$0;

  private org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$DestinationCache(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field this$0:Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;
       5: aload_0
       6: invokespecial #5                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: new           #6                  // class java/util/concurrent/ConcurrentHashMap
      13: dup
      14: sipush        1024
      17: invokespecial #7                  // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      20: putfield      #2                  // Field accessCache:Ljava/util/Map;
      23: aload_0
      24: new           #8                  // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache$1
      27: dup
      28: aload_0
      29: sipush        1024
      32: ldc           #9                  // float 0.75f
      34: iconst_1
      35: invokespecial #10                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache$1."<init>":(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache;IFZ)V
      38: putfield      #11                 // Field updateCache:Ljava/util/Map;
      41: return

  public org.springframework.util.LinkedMultiValueMap<java.lang.String, java.lang.String> getSubscriptions(java.lang.String, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #2                  // Field accessCache:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #12,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #13                 // class org/springframework/util/LinkedMultiValueMap
      13: astore_3
      14: aload_3
      15: ifnonnull     232
      18: aload_0
      19: getfield      #11                 // Field updateCache:Ljava/util/Map;
      22: dup
      23: astore        4
      25: monitorenter
      26: new           #13                 // class org/springframework/util/LinkedMultiValueMap
      29: dup
      30: invokespecial #14                 // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
      33: astore_3
      34: aload_0
      35: getfield      #4                  // Field this$0:Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;
      38: invokestatic  #15                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.access$400:(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;)Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionRegistry;
      41: invokevirtual #16                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionRegistry.getAllSubscriptions:()Ljava/util/Collection;
      44: invokeinterface #17,  1           // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      49: astore        5
      51: aload         5
      53: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      58: ifeq          184
      61: aload         5
      63: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      68: checkcast     #20                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo
      71: astore        6
      73: aload         6
      75: invokevirtual #21                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo.getDestinations:()Ljava/util/Set;
      78: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      83: astore        7
      85: aload         7
      87: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      92: ifeq          181
      95: aload         7
      97: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #23                 // class java/lang/String
     105: astore        8
     107: aload_0
     108: getfield      #4                  // Field this$0:Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;
     111: invokevirtual #24                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.getPathMatcher:()Lorg/springframework/util/PathMatcher;
     114: aload         8
     116: aload_1
     117: invokeinterface #25,  3           // InterfaceMethod org/springframework/util/PathMatcher.match:(Ljava/lang/String;Ljava/lang/String;)Z
     122: ifeq          178
     125: aload         6
     127: aload         8
     129: invokevirtual #26                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo.getSubscriptions:(Ljava/lang/String;)Ljava/util/Set;
     132: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     137: astore        9
     139: aload         9
     141: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     146: ifeq          178
     149: aload         9
     151: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     156: checkcast     #27                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$Subscription
     159: astore        10
     161: aload_3
     162: aload         6
     164: invokestatic  #28                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo.access$500:(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo;)Ljava/lang/String;
     167: aload         10
     169: invokevirtual #29                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$Subscription.getId:()Ljava/lang/String;
     172: invokevirtual #30                 // Method org/springframework/util/LinkedMultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
     175: goto          139
     178: goto          85
     181: goto          51
     184: aload_3
     185: invokevirtual #31                 // Method org/springframework/util/LinkedMultiValueMap.isEmpty:()Z
     188: ifne          218
     191: aload_0
     192: getfield      #11                 // Field updateCache:Ljava/util/Map;
     195: aload_1
     196: aload_3
     197: invokevirtual #32                 // Method org/springframework/util/LinkedMultiValueMap.deepCopy:()Lorg/springframework/util/LinkedMultiValueMap;
     200: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     205: pop
     206: aload_0
     207: getfield      #2                  // Field accessCache:Ljava/util/Map;
     210: aload_1
     211: aload_3
     212: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     217: pop
     218: aload         4
     220: monitorexit
     221: goto          232
     224: astore        11
     226: aload         4
     228: monitorexit
     229: aload         11
     231: athrow
     232: aload_3
     233: areturn
    Exception table:
       from    to  target type
          26   221   224   any
         224   229   224   any

  public void updateAfterNewSubscription(java.lang.String, java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field updateCache:Ljava/util/Map;
       4: dup
       5: astore        4
       7: monitorenter
       8: aload_0
       9: getfield      #11                 // Field updateCache:Ljava/util/Map;
      12: aload_0
      13: aload_1
      14: aload_2
      15: aload_3
      16: invokedynamic #34,  0             // InvokeDynamic #0:accept:(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/util/function/BiConsumer;
      21: invokeinterface #35,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      26: aload         4
      28: monitorexit
      29: goto          40
      32: astore        5
      34: aload         4
      36: monitorexit
      37: aload         5
      39: athrow
      40: return
    Exception table:
       from    to  target type
           8    29    32   any
          32    37    32   any

  public void updateAfterRemovedSubscription(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field updateCache:Ljava/util/Map;
       4: dup
       5: astore_3
       6: monitorenter
       7: new           #36                 // class java/util/HashSet
      10: dup
      11: invokespecial #37                 // Method java/util/HashSet."<init>":()V
      14: astore        4
      16: aload_0
      17: getfield      #11                 // Field updateCache:Ljava/util/Map;
      20: aload_0
      21: aload_1
      22: aload_2
      23: aload         4
      25: invokedynamic #38,  0             // InvokeDynamic #1:accept:(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache;Ljava/lang/String;Ljava/lang/String;Ljava/util/Set;)Ljava/util/function/BiConsumer;
      30: invokeinterface #35,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      35: aload         4
      37: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      42: astore        5
      44: aload         5
      46: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      51: ifeq          93
      54: aload         5
      56: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      61: checkcast     #23                 // class java/lang/String
      64: astore        6
      66: aload_0
      67: getfield      #11                 // Field updateCache:Ljava/util/Map;
      70: aload         6
      72: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      77: pop
      78: aload_0
      79: getfield      #2                  // Field accessCache:Ljava/util/Map;
      82: aload         6
      84: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      89: pop
      90: goto          44
      93: aload_3
      94: monitorexit
      95: goto          105
      98: astore        7
     100: aload_3
     101: monitorexit
     102: aload         7
     104: athrow
     105: return
    Exception table:
       from    to  target type
           7    95    98   any
          98   102    98   any

  public void updateAfterRemovedSession(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo);
    Code:
       0: aload_0
       1: getfield      #11                 // Field updateCache:Ljava/util/Map;
       4: dup
       5: astore_2
       6: monitorenter
       7: new           #36                 // class java/util/HashSet
      10: dup
      11: invokespecial #37                 // Method java/util/HashSet."<init>":()V
      14: astore_3
      15: aload_0
      16: getfield      #11                 // Field updateCache:Ljava/util/Map;
      19: aload_0
      20: aload_1
      21: aload_3
      22: invokedynamic #40,  0             // InvokeDynamic #2:accept:(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$DestinationCache;Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo;Ljava/util/Set;)Ljava/util/function/BiConsumer;
      27: invokeinterface #35,  2           // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: aload_3
      33: invokeinterface #22,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      38: astore        4
      40: aload         4
      42: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      47: ifeq          89
      50: aload         4
      52: invokeinterface #19,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      57: checkcast     #23                 // class java/lang/String
      60: astore        5
      62: aload_0
      63: getfield      #11                 // Field updateCache:Ljava/util/Map;
      66: aload         5
      68: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      73: pop
      74: aload_0
      75: getfield      #2                  // Field accessCache:Ljava/util/Map;
      78: aload         5
      80: invokeinterface #39,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      85: pop
      86: goto          40
      89: aload_2
      90: monitorexit
      91: goto          101
      94: astore        6
      96: aload_2
      97: monitorexit
      98: aload         6
     100: athrow
     101: return
    Exception table:
       from    to  target type
           7    91    94   any
          94    98    94   any

  public java.lang.String toString();
    Code:
       0: new           #41                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #43                 // String cache[
       9: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #2                  // Field accessCache:Ljava/util/Map;
      16: invokeinterface #45,  1           // InterfaceMethod java/util/Map.size:()I
      21: invokevirtual #46                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      24: ldc           #47                 // String  destination(s)]
      26: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      29: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      32: areturn

  private void lambda$updateAfterRemovedSession$2(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SessionSubscriptionInfo, java.util.Set, java.lang.String, org.springframework.util.LinkedMultiValueMap);
    Code:
       0: aload         4
       2: aload_1
       3: invokevirtual #49                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry$SessionSubscriptionInfo.getSessionId:()Ljava/lang/String;
       6: invokevirtual #50                 // Method org/springframework/util/LinkedMultiValueMap.remove:(Ljava/lang/Object;)Ljava/util/List;
       9: ifnull        47
      12: aload         4
      14: invokevirtual #31                 // Method org/springframework/util/LinkedMultiValueMap.isEmpty:()Z
      17: ifeq          31
      20: aload_2
      21: aload_3
      22: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      27: pop
      28: goto          47
      31: aload_0
      32: getfield      #2                  // Field accessCache:Ljava/util/Map;
      35: aload_3
      36: aload         4
      38: invokevirtual #32                 // Method org/springframework/util/LinkedMultiValueMap.deepCopy:()Lorg/springframework/util/LinkedMultiValueMap;
      41: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      46: pop
      47: return

  private void lambda$updateAfterRemovedSubscription$1(java.lang.String, java.lang.String, java.util.Set, java.lang.String, org.springframework.util.LinkedMultiValueMap);
    Code:
       0: aload         5
       2: aload_1
       3: invokevirtual #52                 // Method org/springframework/util/LinkedMultiValueMap.get:(Ljava/lang/Object;)Ljava/util/List;
       6: astore        6
       8: aload         6
      10: ifnull        76
      13: aload         6
      15: aload_2
      16: invokeinterface #53,  2           // InterfaceMethod java/util/List.remove:(Ljava/lang/Object;)Z
      21: pop
      22: aload         6
      24: invokeinterface #54,  1           // InterfaceMethod java/util/List.isEmpty:()Z
      29: ifeq          39
      32: aload         5
      34: aload_1
      35: invokevirtual #50                 // Method org/springframework/util/LinkedMultiValueMap.remove:(Ljava/lang/Object;)Ljava/util/List;
      38: pop
      39: aload         5
      41: invokevirtual #31                 // Method org/springframework/util/LinkedMultiValueMap.isEmpty:()Z
      44: ifeq          59
      47: aload_3
      48: aload         4
      50: invokeinterface #51,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      55: pop
      56: goto          76
      59: aload_0
      60: getfield      #2                  // Field accessCache:Ljava/util/Map;
      63: aload         4
      65: aload         5
      67: invokevirtual #32                 // Method org/springframework/util/LinkedMultiValueMap.deepCopy:()Lorg/springframework/util/LinkedMultiValueMap;
      70: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      75: pop
      76: return

  private void lambda$updateAfterNewSubscription$0(java.lang.String, java.lang.String, java.lang.String, java.lang.String, org.springframework.util.LinkedMultiValueMap);
    Code:
       0: aload_0
       1: getfield      #4                  // Field this$0:Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;
       4: invokevirtual #24                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.getPathMatcher:()Lorg/springframework/util/PathMatcher;
       7: aload_1
       8: aload         4
      10: invokeinterface #25,  3           // InterfaceMethod org/springframework/util/PathMatcher.match:(Ljava/lang/String;Ljava/lang/String;)Z
      15: ifeq          66
      18: aload         5
      20: aload_2
      21: invokevirtual #52                 // Method org/springframework/util/LinkedMultiValueMap.get:(Ljava/lang/Object;)Ljava/util/List;
      24: astore        6
      26: aload         6
      28: ifnull        42
      31: aload         6
      33: aload_3
      34: invokeinterface #55,  2           // InterfaceMethod java/util/List.contains:(Ljava/lang/Object;)Z
      39: ifne          66
      42: aload         5
      44: aload_2
      45: aload_3
      46: invokevirtual #30                 // Method org/springframework/util/LinkedMultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
      49: aload_0
      50: getfield      #2                  // Field accessCache:Ljava/util/Map;
      53: aload         4
      55: aload         5
      57: invokevirtual #32                 // Method org/springframework/util/LinkedMultiValueMap.deepCopy:()Lorg/springframework/util/LinkedMultiValueMap;
      60: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: return

  org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$DestinationCache(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry, org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$1);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #3                  // Method "<init>":(Lorg/springframework/messaging/simp/broker/DefaultSubscriptionRegistry;)V
       5: return

  static java.util.Map access$300(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$DestinationCache);
    Code:
       0: aload_0
       1: getfield      #2                  // Field accessCache:Ljava/util/Map;
       4: areturn
}
