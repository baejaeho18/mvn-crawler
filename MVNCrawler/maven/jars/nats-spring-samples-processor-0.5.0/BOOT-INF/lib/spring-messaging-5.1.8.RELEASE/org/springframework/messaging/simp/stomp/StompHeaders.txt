Compiled from "StompHeaders.java"
public class org.springframework.messaging.simp.stomp.StompHeaders implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.io.Serializable {
  private static final long serialVersionUID;

  public static final java.lang.String CONTENT_TYPE;

  public static final java.lang.String CONTENT_LENGTH;

  public static final java.lang.String RECEIPT;

  public static final java.lang.String HOST;

  public static final java.lang.String ACCEPT_VERSION;

  public static final java.lang.String LOGIN;

  public static final java.lang.String PASSCODE;

  public static final java.lang.String HEARTBEAT;

  public static final java.lang.String SESSION;

  public static final java.lang.String SERVER;

  public static final java.lang.String DESTINATION;

  public static final java.lang.String ID;

  public static final java.lang.String ACK;

  public static final java.lang.String SUBSCRIPTION;

  public static final java.lang.String MESSAGE_ID;

  public static final java.lang.String RECEIPT_ID;

  private final java.util.Map<java.lang.String, java.util.List<java.lang.String>> headers;

  public org.springframework.messaging.simp.stomp.StompHeaders();
    Code:
       0: aload_0
       1: new           #1                  // class org/springframework/util/LinkedMultiValueMap
       4: dup
       5: iconst_4
       6: invokespecial #2                  // Method org/springframework/util/LinkedMultiValueMap."<init>":(I)V
       9: iconst_0
      10: invokespecial #3                  // Method "<init>":(Ljava/util/Map;Z)V
      13: return

  private org.springframework.messaging.simp.stomp.StompHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>, boolean);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #5                  // String \'headers\' must not be null
       7: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: iload_2
      11: ifeq          51
      14: new           #1                  // class org/springframework/util/LinkedMultiValueMap
      17: dup
      18: aload_1
      19: invokeinterface #7,  1            // InterfaceMethod java/util/Map.size:()I
      24: invokespecial #2                  // Method org/springframework/util/LinkedMultiValueMap."<init>":(I)V
      27: astore_3
      28: aload_1
      29: aload_3
      30: invokedynamic #8,  0              // InvokeDynamic #0:accept:(Ljava/util/Map;)Ljava/util/function/BiConsumer;
      35: invokeinterface #9,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      40: aload_0
      41: aload_3
      42: invokestatic  #10                 // Method java/util/Collections.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;
      45: putfield      #11                 // Field headers:Ljava/util/Map;
      48: goto          56
      51: aload_0
      52: aload_1
      53: putfield      #11                 // Field headers:Ljava/util/Map;
      56: return

  public void setContentType(org.springframework.util.MimeType);
    Code:
       0: aload_1
       1: ifnull        51
       4: aload_1
       5: invokevirtual #12                 // Method org/springframework/util/MimeType.isWildcardType:()Z
       8: ifne          15
      11: iconst_1
      12: goto          16
      15: iconst_0
      16: ldc           #13                 // String \'Content-Type\' cannot contain wildcard type \'*\'
      18: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      21: aload_1
      22: invokevirtual #15                 // Method org/springframework/util/MimeType.isWildcardSubtype:()Z
      25: ifne          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ldc           #16                 // String \'Content-Type\' cannot contain wildcard subtype \'*\'
      35: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      38: aload_0
      39: ldc           #18                 // String content-type
      41: aload_1
      42: invokevirtual #19                 // Method org/springframework/util/MimeType.toString:()Ljava/lang/String;
      45: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      48: goto          58
      51: aload_0
      52: ldc           #18                 // String content-type
      54: aconst_null
      55: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      58: return

  public org.springframework.util.MimeType getContentType();
    Code:
       0: aload_0
       1: ldc           #18                 // String content-type
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: invokestatic  #22                 // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
      11: ifeq          21
      14: aload_1
      15: invokestatic  #23                 // Method org/springframework/util/MimeTypeUtils.parseMimeType:(Ljava/lang/String;)Lorg/springframework/util/MimeType;
      18: goto          22
      21: aconst_null
      22: areturn

  public void setContentLength(long);
    Code:
       0: aload_0
       1: ldc           #24                 // String content-length
       3: lload_1
       4: invokestatic  #25                 // Method java/lang/Long.toString:(J)Ljava/lang/String;
       7: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      10: return

  public long getContentLength();
    Code:
       0: aload_0
       1: ldc           #24                 // String content-length
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #26                 // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
      15: goto          21
      18: ldc2_w        #27                 // long -1l
      21: lreturn

  public void setReceipt(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #29                 // String receipt
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getReceipt();
    Code:
       0: aload_0
       1: ldc           #29                 // String receipt
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setHost(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #30                 // String host
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getHost();
    Code:
       0: aload_0
       1: ldc           #30                 // String host
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setAcceptVersion(java.lang.String...);
    Code:
       0: aload_1
       1: invokestatic  #31                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       4: ifeq          15
       7: aload_0
       8: ldc           #32                 // String accept-version
      10: aconst_null
      11: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      14: return
      15: aload_1
      16: invokestatic  #33                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
      19: invokedynamic #34,  0             // InvokeDynamic #1:accept:()Ljava/util/function/Consumer;
      24: invokeinterface #35,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      29: aload_0
      30: ldc           #32                 // String accept-version
      32: aload_1
      33: invokestatic  #36                 // Method org/springframework/util/StringUtils.arrayToCommaDelimitedString:([Ljava/lang/Object;)Ljava/lang/String;
      36: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      39: return

  public java.lang.String[] getAcceptVersion();
    Code:
       0: aload_0
       1: ldc           #32                 // String accept-version
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        18
      11: aload_1
      12: invokestatic  #37                 // Method org/springframework/util/StringUtils.commaDelimitedListToStringArray:(Ljava/lang/String;)[Ljava/lang/String;
      15: goto          19
      18: aconst_null
      19: areturn

  public void setLogin(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #38                 // String login
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getLogin();
    Code:
       0: aload_0
       1: ldc           #38                 // String login
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setPasscode(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #39                 // String passcode
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getPasscode();
    Code:
       0: aload_0
       1: ldc           #39                 // String passcode
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setHeartbeat(long[]);
    Code:
       0: aload_1
       1: ifnull        10
       4: aload_1
       5: arraylength
       6: iconst_2
       7: if_icmpeq     50
      10: new           #40                 // class java/lang/IllegalArgumentException
      13: dup
      14: new           #41                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #43                 // String Heart-beat array must be of length 2, not
      23: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_1
      27: ifnull        38
      30: aload_1
      31: arraylength
      32: invokestatic  #45                 // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      35: goto          40
      38: ldc           #46                 // String null
      40: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      49: athrow
      50: new           #41                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      57: aload_1
      58: iconst_0
      59: laload
      60: invokevirtual #50                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      63: ldc           #51                 // String ,
      65: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: iconst_1
      70: laload
      71: invokevirtual #50                 // Method java/lang/StringBuilder.append:(J)Ljava/lang/StringBuilder;
      74: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: astore_2
      78: aload_1
      79: iconst_0
      80: laload
      81: lconst_0
      82: lcmp
      83: iflt          94
      86: aload_1
      87: iconst_1
      88: laload
      89: lconst_0
      90: lcmp
      91: ifge          121
      94: new           #40                 // class java/lang/IllegalArgumentException
      97: dup
      98: new           #41                 // class java/lang/StringBuilder
     101: dup
     102: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
     105: ldc           #52                 // String Heart-beat values cannot be negative:
     107: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     110: aload_2
     111: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     114: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     117: invokespecial #49                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     120: athrow
     121: aload_0
     122: ldc           #53                 // String heart-beat
     124: aload_2
     125: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
     128: return

  public long[] getHeartbeat();
    Code:
       0: aload_0
       1: ldc           #53                 // String heart-beat
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ldc           #51                 // String ,
      10: invokestatic  #54                 // Method org/springframework/util/StringUtils.split:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
      13: astore_2
      14: aload_2
      15: ifnonnull     20
      18: aconst_null
      19: areturn
      20: iconst_2
      21: newarray       long
      23: dup
      24: iconst_0
      25: aload_2
      26: iconst_0
      27: aaload
      28: invokestatic  #55                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      31: invokevirtual #56                 // Method java/lang/Long.longValue:()J
      34: lastore
      35: dup
      36: iconst_1
      37: aload_2
      38: iconst_1
      39: aaload
      40: invokestatic  #55                 // Method java/lang/Long.valueOf:(Ljava/lang/String;)Ljava/lang/Long;
      43: invokevirtual #56                 // Method java/lang/Long.longValue:()J
      46: lastore
      47: areturn

  public boolean isHeartbeatEnabled();
    Code:
       0: aload_0
       1: invokevirtual #57                 // Method getHeartbeat:()[J
       4: astore_1
       5: aload_1
       6: ifnull        29
       9: aload_1
      10: iconst_0
      11: laload
      12: lconst_0
      13: lcmp
      14: ifeq          29
      17: aload_1
      18: iconst_1
      19: laload
      20: lconst_0
      21: lcmp
      22: ifeq          29
      25: iconst_1
      26: goto          30
      29: iconst_0
      30: ireturn

  public void setSession(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #58                 // String session
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getSession();
    Code:
       0: aload_0
       1: ldc           #58                 // String session
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setServer(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #59                 // String server
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getServer();
    Code:
       0: aload_0
       1: ldc           #59                 // String server
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setDestination(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #60                 // String destination
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getDestination();
    Code:
       0: aload_0
       1: ldc           #60                 // String destination
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setId(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #61                 // String id
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getId();
    Code:
       0: aload_0
       1: ldc           #61                 // String id
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setAck(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #62                 // String ack
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getAck();
    Code:
       0: aload_0
       1: ldc           #62                 // String ack
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setSubscription(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #63                 // String subscription
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getSubscription();
    Code:
       0: aload_0
       1: ldc           #63                 // String subscription
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setMessageId(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #64                 // String message-id
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getMessageId();
    Code:
       0: aload_0
       1: ldc           #64                 // String message-id
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public void setReceiptId(java.lang.String);
    Code:
       0: aload_0
       1: ldc           #65                 // String receipt-id
       3: aload_1
       4: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
       7: return

  public java.lang.String getReceiptId();
    Code:
       0: aload_0
       1: ldc           #65                 // String receipt-id
       3: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       6: areturn

  public java.lang.String getFirst(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/util/List
      13: astore_2
      14: aload_2
      15: ifnull        31
      18: aload_2
      19: iconst_0
      20: invokeinterface #68,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      25: checkcast     #69                 // class java/lang/String
      28: goto          32
      31: aconst_null
      32: areturn

  public void add(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #70,  0             // InvokeDynamic #2:apply:()Ljava/util/function/Function;
      10: invokeinterface #71,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #67                 // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #72,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      26: pop
      27: return

  public void addAll(java.lang.String, java.util.List<? extends java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokedynamic #73,  0             // InvokeDynamic #3:apply:()Ljava/util/function/Function;
      10: invokeinterface #71,  3           // InterfaceMethod java/util/Map.computeIfAbsent:(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;
      15: checkcast     #67                 // class java/util/List
      18: astore_3
      19: aload_3
      20: aload_2
      21: invokeinterface #74,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      26: pop
      27: return

  public void addAll(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #75,  0             // InvokeDynamic #4:accept:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/util/function/BiConsumer;
       7: invokeinterface #76,  2           // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public void set(java.lang.String, java.lang.String);
    Code:
       0: new           #77                 // class java/util/LinkedList
       3: dup
       4: invokespecial #78                 // Method java/util/LinkedList."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_2
      10: invokeinterface #72,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      15: pop
      16: aload_0
      17: getfield      #11                 // Field headers:Ljava/util/Map;
      20: aload_1
      21: aload_3
      22: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      27: pop
      28: return

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #80,  0             // InvokeDynamic #5:accept:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/util/function/BiConsumer;
       7: invokeinterface #9,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      12: return

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    Code:
       0: new           #81                 // class java/util/LinkedHashMap
       3: dup
       4: aload_0
       5: getfield      #11                 // Field headers:Ljava/util/Map;
       8: invokeinterface #7,  1            // InterfaceMethod java/util/Map.size:()I
      13: invokespecial #82                 // Method java/util/LinkedHashMap."<init>":(I)V
      16: astore_1
      17: aload_0
      18: getfield      #11                 // Field headers:Ljava/util/Map;
      21: aload_1
      22: invokedynamic #83,  0             // InvokeDynamic #6:accept:(Ljava/util/LinkedHashMap;)Ljava/util/function/BiConsumer;
      27: invokeinterface #9,  2            // InterfaceMethod java/util/Map.forEach:(Ljava/util/function/BiConsumer;)V
      32: aload_1
      33: areturn

  public int size();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #7,  1            // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  public boolean isEmpty();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #84,  1           // InterfaceMethod java/util/Map.isEmpty:()Z
       9: ireturn

  public boolean containsKey(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #85,  2           // InterfaceMethod java/util/Map.containsKey:(Ljava/lang/Object;)Z
      10: ireturn

  public boolean containsValue(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #86,  2           // InterfaceMethod java/util/Map.containsValue:(Ljava/lang/Object;)Z
      10: ireturn

  public java.util.List<java.lang.String> get(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #66,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/util/List
      13: areturn

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #67                 // class java/util/List
      14: areturn

  public java.util.List<java.lang.String> remove(java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #87,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #67                 // class java/util/List
      13: areturn

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #88,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      10: return

  public void clear();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #89,  1           // InterfaceMethod java/util/Map.clear:()V
       9: return

  public java.util.Set<java.lang.String> keySet();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #90,  1           // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: areturn

  public java.util.Collection<java.util.List<java.lang.String>> values();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #91,  1           // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
       9: areturn

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #92,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
       9: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpeq     31
       5: aload_1
       6: instanceof    #17                 // class org/springframework/messaging/simp/stomp/StompHeaders
       9: ifeq          35
      12: aload_0
      13: getfield      #11                 // Field headers:Ljava/util/Map;
      16: aload_1
      17: checkcast     #17                 // class org/springframework/messaging/simp/stomp/StompHeaders
      20: getfield      #11                 // Field headers:Ljava/util/Map;
      23: invokeinterface #93,  2           // InterfaceMethod java/util/Map.equals:(Ljava/lang/Object;)Z
      28: ifeq          35
      31: iconst_1
      32: goto          36
      35: iconst_0
      36: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokeinterface #94,  1           // InterfaceMethod java/util/Map.hashCode:()I
       9: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #11                 // Field headers:Ljava/util/Map;
       4: invokevirtual #95                 // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  public static org.springframework.messaging.simp.stomp.StompHeaders readOnlyStompHeaders(java.util.Map<java.lang.String, java.util.List<java.lang.String>>);
    Code:
       0: new           #17                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: aload_0
       5: ifnull        12
       8: aload_0
       9: goto          15
      12: invokestatic  #96                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
      15: iconst_1
      16: invokespecial #3                  // Method "<init>":(Ljava/util/Map;Z)V
      19: areturn

  public void set(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class java/lang/String
       5: aload_2
       6: checkcast     #69                 // class java/lang/String
       9: invokevirtual #20                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public void addAll(java.lang.Object, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class java/lang/String
       5: aload_2
       6: invokevirtual #97                 // Method addAll:(Ljava/lang/String;Ljava/util/List;)V
       9: return

  public void add(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class java/lang/String
       5: aload_2
       6: checkcast     #69                 // class java/lang/String
       9: invokevirtual #98                 // Method add:(Ljava/lang/String;Ljava/lang/String;)V
      12: return

  public java.lang.Object getFirst(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class java/lang/String
       5: invokevirtual #21                 // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
       8: areturn

  public java.lang.Object remove(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #99                 // Method remove:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #69                 // class java/lang/String
       5: aload_2
       6: checkcast     #67                 // class java/util/List
       9: invokevirtual #100                // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
      12: areturn

  public java.lang.Object get(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #101                // Method get:(Ljava/lang/Object;)Ljava/util/List;
       5: areturn

  private static void lambda$toSingleValueMap$4(java.util.LinkedHashMap, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: iconst_0
       4: invokeinterface #68,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
       9: invokevirtual #102                // Method java/util/LinkedHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      12: checkcast     #69                 // class java/lang/String
      15: pop
      16: return

  private static java.util.List lambda$addAll$3(java.lang.String);
    Code:
       0: new           #77                 // class java/util/LinkedList
       3: dup
       4: invokespecial #78                 // Method java/util/LinkedList."<init>":()V
       7: areturn

  private static java.util.List lambda$add$2(java.lang.String);
    Code:
       0: new           #77                 // class java/util/LinkedList
       3: dup
       4: invokespecial #78                 // Method java/util/LinkedList."<init>":()V
       7: areturn

  private static void lambda$setAcceptVersion$1(java.lang.String);
    Code:
       0: aload_0
       1: ifnull        26
       4: aload_0
       5: ldc           #103                // String 1.1
       7: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      10: ifne          22
      13: aload_0
      14: ldc           #105                // String 1.2
      16: invokevirtual #104                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      19: ifeq          26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: new           #41                 // class java/lang/StringBuilder
      30: dup
      31: invokespecial #42                 // Method java/lang/StringBuilder."<init>":()V
      34: ldc           #106                // String Invalid version:
      36: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: aload_0
      40: invokevirtual #44                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: invokevirtual #48                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokestatic  #14                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      49: return

  private static void lambda$new$0(java.util.Map, java.lang.String, java.util.List);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokestatic  #107                // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       6: invokeinterface #79,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #67                 // class java/util/List
      14: pop
      15: return
}
