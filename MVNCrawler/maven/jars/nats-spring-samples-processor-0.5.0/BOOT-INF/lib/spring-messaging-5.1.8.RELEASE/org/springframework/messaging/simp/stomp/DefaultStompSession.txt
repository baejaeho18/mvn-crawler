Compiled from "DefaultStompSession.java"
public class org.springframework.messaging.simp.stomp.DefaultStompSession implements org.springframework.messaging.simp.stomp.ConnectionHandlingStompSession {
  private static final org.apache.commons.logging.Log logger;

  private static final org.springframework.util.IdGenerator idGenerator;

  public static final byte[] EMPTY_PAYLOAD;

  private static final long HEARTBEAT_MULTIPLIER;

  private static final org.springframework.messaging.Message<byte[]> HEARTBEAT;

  private final java.lang.String sessionId;

  private final org.springframework.messaging.simp.stomp.StompSessionHandler sessionHandler;

  private final org.springframework.messaging.simp.stomp.StompHeaders connectHeaders;

  private final org.springframework.util.concurrent.SettableListenableFuture<org.springframework.messaging.simp.stomp.StompSession> sessionFuture;

  private org.springframework.messaging.converter.MessageConverter converter;

  private org.springframework.scheduling.TaskScheduler taskScheduler;

  private long receiptTimeLimit;

  private volatile boolean autoReceiptEnabled;

  private volatile org.springframework.messaging.tcp.TcpConnection<byte[]> connection;

  private volatile java.lang.String version;

  private final java.util.concurrent.atomic.AtomicInteger subscriptionIndex;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.DefaultStompSession$DefaultSubscription> subscriptions;

  private final java.util.concurrent.atomic.AtomicInteger receiptIndex;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.DefaultStompSession$ReceiptHandler> receiptHandlers;

  private volatile boolean closing;

  public org.springframework.messaging.simp.stomp.DefaultStompSession(org.springframework.messaging.simp.stomp.StompSessionHandler, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: invokespecial #10                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #11                 // class org/springframework/util/concurrent/SettableListenableFuture
       8: dup
       9: invokespecial #12                 // Method org/springframework/util/concurrent/SettableListenableFuture."<init>":()V
      12: putfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
      15: aload_0
      16: new           #14                 // class org/springframework/messaging/converter/SimpleMessageConverter
      19: dup
      20: invokespecial #15                 // Method org/springframework/messaging/converter/SimpleMessageConverter."<init>":()V
      23: putfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
      26: aload_0
      27: getstatic     #17                 // Field java/util/concurrent/TimeUnit.SECONDS:Ljava/util/concurrent/TimeUnit;
      30: ldc2_w        #18                 // long 15l
      33: invokevirtual #20                 // Method java/util/concurrent/TimeUnit.toMillis:(J)J
      36: putfield      #21                 // Field receiptTimeLimit:J
      39: aload_0
      40: new           #22                 // class java/util/concurrent/atomic/AtomicInteger
      43: dup
      44: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      47: putfield      #24                 // Field subscriptionIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      50: aload_0
      51: new           #25                 // class java/util/concurrent/ConcurrentHashMap
      54: dup
      55: iconst_4
      56: invokespecial #26                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      59: putfield      #8                  // Field subscriptions:Ljava/util/Map;
      62: aload_0
      63: new           #22                 // class java/util/concurrent/atomic/AtomicInteger
      66: dup
      67: invokespecial #23                 // Method java/util/concurrent/atomic/AtomicInteger."<init>":()V
      70: putfield      #27                 // Field receiptIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      73: aload_0
      74: new           #25                 // class java/util/concurrent/ConcurrentHashMap
      77: dup
      78: iconst_4
      79: invokespecial #26                 // Method java/util/concurrent/ConcurrentHashMap."<init>":(I)V
      82: putfield      #9                  // Field receiptHandlers:Ljava/util/Map;
      85: aload_0
      86: iconst_0
      87: putfield      #4                  // Field closing:Z
      90: aload_1
      91: ldc           #28                 // String StompSessionHandler must not be null
      93: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      96: aload_2
      97: ldc           #30                 // String StompHeaders must not be null
      99: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
     102: aload_0
     103: getstatic     #31                 // Field idGenerator:Lorg/springframework/util/IdGenerator;
     106: invokeinterface #32,  1           // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
     111: invokevirtual #33                 // Method java/util/UUID.toString:()Ljava/lang/String;
     114: putfield      #3                  // Field sessionId:Ljava/lang/String;
     117: aload_0
     118: aload_1
     119: putfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     122: aload_0
     123: aload_2
     124: putfield      #35                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
     127: return

  public java.lang.String getSessionId();
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionId:Ljava/lang/String;
       4: areturn

  public org.springframework.messaging.simp.stomp.StompSessionHandler getSessionHandler();
    Code:
       0: aload_0
       1: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
       4: areturn

  public org.springframework.util.concurrent.ListenableFuture<org.springframework.messaging.simp.stomp.StompSession> getSessionFuture();
    Code:
       0: aload_0
       1: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
       4: areturn

  public void setMessageConverter(org.springframework.messaging.converter.MessageConverter);
    Code:
       0: aload_1
       1: ldc           #36                 // String MessageConverter must not be null
       3: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
      11: return

  public org.springframework.messaging.converter.MessageConverter getMessageConverter();
    Code:
       0: aload_0
       1: getfield      #16                 // Field converter:Lorg/springframework/messaging/converter/MessageConverter;
       4: areturn

  public void setTaskScheduler(org.springframework.scheduling.TaskScheduler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #37                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       5: return

  public org.springframework.scheduling.TaskScheduler getTaskScheduler();
    Code:
       0: aload_0
       1: getfield      #37                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       4: areturn

  public void setReceiptTimeLimit(long);
    Code:
       0: lload_1
       1: lconst_0
       2: lcmp
       3: ifle          10
       6: iconst_1
       7: goto          11
      10: iconst_0
      11: ldc           #38                 // String Receipt time limit must be larger than zero
      13: invokestatic  #39                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      16: aload_0
      17: lload_1
      18: putfield      #21                 // Field receiptTimeLimit:J
      21: return

  public long getReceiptTimeLimit();
    Code:
       0: aload_0
       1: getfield      #21                 // Field receiptTimeLimit:J
       4: lreturn

  public void setAutoReceipt(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #40                 // Field autoReceiptEnabled:Z
       5: return

  public boolean isAutoReceiptEnabled();
    Code:
       0: aload_0
       1: getfield      #40                 // Field autoReceiptEnabled:Z
       4: ireturn

  public boolean isConnected();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable send(java.lang.String, java.lang.Object);
    Code:
       0: new           #41                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #42                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #43                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setDestination:(Ljava/lang/String;)V
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokevirtual #44                 // Method send:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
      19: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable send(org.springframework.messaging.simp.stomp.StompHeaders, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getDestination:()Ljava/lang/String;
       4: ldc           #46                 // String Destination header is required
       6: invokestatic  #47                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_0
      10: aload_1
      11: invokespecial #48                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
      14: astore_3
      15: new           #49                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
      18: dup
      19: aload_0
      20: aload_3
      21: invokespecial #50                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Ljava/lang/String;)V
      24: astore        4
      26: aload_0
      27: getstatic     #51                 // Field org/springframework/messaging/simp/stomp/StompCommand.SEND:Lorg/springframework/messaging/simp/stomp/StompCommand;
      30: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      33: astore        5
      35: aload         5
      37: aload_1
      38: invokevirtual #53                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      41: aload_0
      42: aload         5
      44: aload_2
      45: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      48: astore        6
      50: aload_0
      51: aload         6
      53: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      56: aload         4
      58: areturn

  private java.lang.String checkOrAddReceipt(org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_1
       1: invokevirtual #56                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getReceipt:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: invokevirtual #57                 // Method isAutoReceiptEnabled:()Z
       9: ifeq          32
      12: aload_2
      13: ifnonnull     32
      16: aload_0
      17: getfield      #27                 // Field receiptIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      20: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      23: invokestatic  #59                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      26: astore_2
      27: aload_1
      28: aload_2
      29: invokevirtual #60                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setReceipt:(Ljava/lang/String;)V
      32: aload_2
      33: areturn

  private org.springframework.messaging.simp.stomp.StompHeaderAccessor createHeaderAccessor(org.springframework.messaging.simp.stomp.StompCommand);
    Code:
       0: aload_1
       1: invokestatic  #61                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
       4: astore_2
       5: aload_2
       6: aload_0
       7: getfield      #3                  // Field sessionId:Ljava/lang/String;
      10: invokevirtual #62                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      13: aload_2
      14: iconst_1
      15: invokevirtual #63                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLeaveMutable:(Z)V
      18: aload_2
      19: areturn

  private org.springframework.messaging.Message<byte[]> createMessage(org.springframework.messaging.simp.stomp.StompHeaderAccessor, java.lang.Object);
    Code:
       0: aload_1
       1: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateSimpMessageHeadersFromStompHeaders:()V
       4: aload_2
       5: ifnonnull     22
       8: getstatic     #65                 // Field EMPTY_PAYLOAD:[B
      11: aload_1
      12: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      15: invokestatic  #67                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      18: astore_3
      19: goto          132
      22: aload_2
      23: instanceof    #68                 // class "[B"
      26: ifeq          47
      29: aload_2
      30: checkcast     #68                 // class "[B"
      33: checkcast     #68                 // class "[B"
      36: aload_1
      37: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      40: invokestatic  #67                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      43: astore_3
      44: goto          132
      47: aload_0
      48: invokevirtual #69                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
      51: aload_2
      52: aload_1
      53: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      56: invokeinterface #70,  3           // InterfaceMethod org/springframework/messaging/converter/MessageConverter.toMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      61: astore_3
      62: aload_1
      63: invokevirtual #71                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateStompHeadersFromSimpMessageHeaders:()V
      66: aload_3
      67: ifnonnull     132
      70: new           #72                 // class org/springframework/messaging/converter/MessageConversionException
      73: dup
      74: new           #73                 // class java/lang/StringBuilder
      77: dup
      78: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      81: ldc           #75                 // String Unable to convert payload with type=\'
      83: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      86: aload_2
      87: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      90: invokevirtual #78                 // Method java/lang/Class.getName:()Ljava/lang/String;
      93: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      96: ldc           #79                 // String \', contentType=\'
      98: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     101: aload_1
     102: invokevirtual #80                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getContentType:()Lorg/springframework/util/MimeType;
     105: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     108: ldc           #82                 // String \', converter=[
     110: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     113: aload_0
     114: invokevirtual #69                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
     117: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     120: ldc           #83                 // String ]
     122: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     128: invokespecial #85                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
     131: athrow
     132: aload_3
     133: areturn

  private void execute(org.springframework.messaging.Message<byte[]>);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #86,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
       8: ifeq          61
      11: aload_1
      12: ldc           #87                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
      14: invokestatic  #88                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      17: checkcast     #87                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
      20: astore_2
      21: aload_2
      22: ifnull        61
      25: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      28: new           #73                 // class java/lang/StringBuilder
      31: dup
      32: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      35: ldc           #89                 // String Sending
      37: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: aload_2
      41: aload_1
      42: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      47: invokevirtual #91                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      50: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      56: invokeinterface #92,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
      61: aload_0
      62: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      65: astore_2
      66: aload_2
      67: ifnull        74
      70: iconst_1
      71: goto          75
      74: iconst_0
      75: ldc           #93                 // String Connection closed
      77: invokestatic  #94                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      80: aload_2
      81: aload_1
      82: invokeinterface #95,  2           // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.send:(Lorg/springframework/messaging/Message;)Lorg/springframework/util/concurrent/ListenableFuture;
      87: invokeinterface #96,  1           // InterfaceMethod org/springframework/util/concurrent/ListenableFuture.get:()Ljava/lang/Object;
      92: pop
      93: goto          121
      96: astore_3
      97: new           #98                 // class org/springframework/messaging/MessageDeliveryException
     100: dup
     101: aload_1
     102: aload_3
     103: invokevirtual #99                 // Method java/util/concurrent/ExecutionException.getCause:()Ljava/lang/Throwable;
     106: invokespecial #100                // Method org/springframework/messaging/MessageDeliveryException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
     109: athrow
     110: astore_3
     111: new           #98                 // class org/springframework/messaging/MessageDeliveryException
     114: dup
     115: aload_1
     116: aload_3
     117: invokespecial #100                // Method org/springframework/messaging/MessageDeliveryException."<init>":(Lorg/springframework/messaging/Message;Ljava/lang/Throwable;)V
     120: athrow
     121: return
    Exception table:
       from    to  target type
          80    93    96   Class java/util/concurrent/ExecutionException
          80    93   110   Class java/lang/Throwable

  public org.springframework.messaging.simp.stomp.StompSession$Subscription subscribe(java.lang.String, org.springframework.messaging.simp.stomp.StompFrameHandler);
    Code:
       0: new           #41                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #42                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: aload_3
       9: aload_1
      10: invokevirtual #43                 // Method org/springframework/messaging/simp/stomp/StompHeaders.setDestination:(Ljava/lang/String;)V
      13: aload_0
      14: aload_3
      15: aload_2
      16: invokevirtual #102                // Method subscribe:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)Lorg/springframework/messaging/simp/stomp/StompSession$Subscription;
      19: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Subscription subscribe(org.springframework.messaging.simp.stomp.StompHeaders, org.springframework.messaging.simp.stomp.StompFrameHandler);
    Code:
       0: aload_1
       1: invokevirtual #45                 // Method org/springframework/messaging/simp/stomp/StompHeaders.getDestination:()Ljava/lang/String;
       4: ldc           #46                 // String Destination header is required
       6: invokestatic  #47                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       9: aload_2
      10: ldc           #103                // String StompFrameHandler must not be null
      12: invokestatic  #29                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      15: aload_1
      16: invokevirtual #104                // Method org/springframework/messaging/simp/stomp/StompHeaders.getId:()Ljava/lang/String;
      19: astore_3
      20: aload_3
      21: invokestatic  #105                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      24: ifne          43
      27: aload_0
      28: getfield      #24                 // Field subscriptionIndex:Ljava/util/concurrent/atomic/AtomicInteger;
      31: invokevirtual #58                 // Method java/util/concurrent/atomic/AtomicInteger.getAndIncrement:()I
      34: invokestatic  #59                 // Method java/lang/String.valueOf:(I)Ljava/lang/String;
      37: astore_3
      38: aload_1
      39: aload_3
      40: invokevirtual #106                // Method org/springframework/messaging/simp/stomp/StompHeaders.setId:(Ljava/lang/String;)V
      43: aload_0
      44: aload_1
      45: invokespecial #48                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
      48: pop
      49: new           #107                // class org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription
      52: dup
      53: aload_0
      54: aload_1
      55: aload_2
      56: invokespecial #108                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Lorg/springframework/messaging/simp/stomp/StompHeaders;Lorg/springframework/messaging/simp/stomp/StompFrameHandler;)V
      59: astore        4
      61: aload_0
      62: getstatic     #109                // Field org/springframework/messaging/simp/stomp/StompCommand.SUBSCRIBE:Lorg/springframework/messaging/simp/stomp/StompCommand;
      65: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      68: astore        5
      70: aload         5
      72: aload_1
      73: invokevirtual #53                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      76: aload_0
      77: aload         5
      79: getstatic     #65                 // Field EMPTY_PAYLOAD:[B
      82: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      85: astore        6
      87: aload_0
      88: aload         6
      90: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      93: aload         4
      95: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable acknowledge(java.lang.String, boolean);
    Code:
       0: new           #41                 // class org/springframework/messaging/simp/stomp/StompHeaders
       3: dup
       4: invokespecial #42                 // Method org/springframework/messaging/simp/stomp/StompHeaders."<init>":()V
       7: astore_3
       8: ldc           #110                // String 1.1
      10: aload_0
      11: getfield      #111                // Field version:Ljava/lang/String;
      14: invokevirtual #112                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      17: ifeq          28
      20: aload_3
      21: aload_1
      22: invokevirtual #113                // Method org/springframework/messaging/simp/stomp/StompHeaders.setMessageId:(Ljava/lang/String;)V
      25: goto          33
      28: aload_3
      29: aload_1
      30: invokevirtual #106                // Method org/springframework/messaging/simp/stomp/StompHeaders.setId:(Ljava/lang/String;)V
      33: aload_0
      34: aload_3
      35: iload_2
      36: invokevirtual #114                // Method acknowledge:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Z)Lorg/springframework/messaging/simp/stomp/StompSession$Receiptable;
      39: areturn

  public org.springframework.messaging.simp.stomp.StompSession$Receiptable acknowledge(org.springframework.messaging.simp.stomp.StompHeaders, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #48                 // Method checkOrAddReceipt:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/String;
       5: astore_3
       6: new           #49                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
       9: dup
      10: aload_0
      11: aload_3
      12: invokespecial #50                 // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Ljava/lang/String;)V
      15: astore        4
      17: iload_2
      18: ifeq          27
      21: getstatic     #115                // Field org/springframework/messaging/simp/stomp/StompCommand.ACK:Lorg/springframework/messaging/simp/stomp/StompCommand;
      24: goto          30
      27: getstatic     #116                // Field org/springframework/messaging/simp/stomp/StompCommand.NACK:Lorg/springframework/messaging/simp/stomp/StompCommand;
      30: astore        5
      32: aload_0
      33: aload         5
      35: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      38: astore        6
      40: aload         6
      42: aload_1
      43: invokevirtual #53                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      46: aload_0
      47: aload         6
      49: aconst_null
      50: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      53: astore        7
      55: aload_0
      56: aload         7
      58: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      61: aload         4
      63: areturn

  private void unsubscribe(java.lang.String, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: getstatic     #117                // Field org/springframework/messaging/simp/stomp/StompCommand.UNSUBSCRIBE:Lorg/springframework/messaging/simp/stomp/StompCommand;
       4: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
       7: astore_3
       8: aload_2
       9: ifnull        17
      12: aload_3
      13: aload_2
      14: invokevirtual #53                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      17: aload_3
      18: aload_1
      19: invokevirtual #118                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSubscriptionId:(Ljava/lang/String;)V
      22: aload_0
      23: aload_3
      24: getstatic     #65                 // Field EMPTY_PAYLOAD:[B
      27: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      30: astore        4
      32: aload_0
      33: aload         4
      35: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      38: return

  public void disconnect();
    Code:
       0: aload_0
       1: iconst_1
       2: putfield      #4                  // Field closing:Z
       5: aload_0
       6: getstatic     #119                // Field org/springframework/messaging/simp/stomp/StompCommand.DISCONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
       9: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      12: astore_1
      13: aload_0
      14: aload_1
      15: getstatic     #65                 // Field EMPTY_PAYLOAD:[B
      18: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      21: astore_2
      22: aload_0
      23: aload_2
      24: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      27: aload_0
      28: invokespecial #1                  // Method resetConnection:()V
      31: goto          41
      34: astore_3
      35: aload_0
      36: invokespecial #1                  // Method resetConnection:()V
      39: aload_3
      40: athrow
      41: return
    Exception table:
       from    to  target type
           5    27    34   any

  public void afterConnected(org.springframework.messaging.tcp.TcpConnection<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       5: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       8: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      13: ifeq          46
      16: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      19: new           #73                 // class java/lang/StringBuilder
      22: dup
      23: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      26: ldc           #121                // String Connection established in session id=
      28: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: aload_0
      32: getfield      #3                  // Field sessionId:Ljava/lang/String;
      35: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      38: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      41: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      46: aload_0
      47: getstatic     #123                // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
      50: invokespecial #52                 // Method createHeaderAccessor:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      53: astore_2
      54: aload_2
      55: aload_0
      56: getfield      #35                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
      59: invokevirtual #53                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.addNativeHeaders:(Lorg/springframework/util/MultiValueMap;)V
      62: aload_0
      63: getfield      #35                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
      66: invokevirtual #124                // Method org/springframework/messaging/simp/stomp/StompHeaders.getAcceptVersion:()[Ljava/lang/String;
      69: ifnonnull     78
      72: aload_2
      73: ldc           #125                // String 1.1,1.2
      75: invokevirtual #126                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setAcceptVersion:(Ljava/lang/String;)V
      78: aload_0
      79: aload_2
      80: getstatic     #65                 // Field EMPTY_PAYLOAD:[B
      83: invokespecial #54                 // Method createMessage:(Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      86: astore_3
      87: aload_0
      88: aload_3
      89: invokespecial #55                 // Method execute:(Lorg/springframework/messaging/Message;)V
      92: return

  public void afterConnectFailure(java.lang.Throwable);
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          42
      11: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #73                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #127                // String Failed to connect session id=
      23: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field sessionId:Ljava/lang/String;
      30: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: aload_1
      37: invokeinterface #128,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      42: aload_0
      43: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
      46: aload_1
      47: invokevirtual #129                // Method org/springframework/util/concurrent/SettableListenableFuture.setException:(Ljava/lang/Throwable;)Z
      50: pop
      51: aload_0
      52: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
      55: aload_0
      56: aload_1
      57: invokeinterface #130,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleTransportError:(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V
      62: return

  public void handleMessage(org.springframework.messaging.Message<byte[]>);
    Code:
       0: aload_1
       1: ldc           #87                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
       3: invokestatic  #88                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       6: checkcast     #87                 // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
       9: astore_2
      10: aload_2
      11: ifnull        18
      14: iconst_1
      15: goto          19
      18: iconst_0
      19: ldc           #131                // String No StompHeaderAccessor
      21: invokestatic  #94                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      24: aload_2
      25: aload_0
      26: getfield      #3                  // Field sessionId:Ljava/lang/String;
      29: invokevirtual #62                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      32: aload_2
      33: invokevirtual #132                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
      36: astore_3
      37: aload_2
      38: invokevirtual #133                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getNativeHeaders:()Ljava/util/Map;
      41: astore        4
      43: aload         4
      45: invokestatic  #134                // Method org/springframework/messaging/simp/stomp/StompHeaders.readOnlyStompHeaders:(Ljava/util/Map;)Lorg/springframework/messaging/simp/stomp/StompHeaders;
      48: astore        5
      50: aload_2
      51: invokevirtual #135                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.isHeartbeat:()Z
      54: istore        6
      56: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      59: invokeinterface #86,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
      64: ifeq          103
      67: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      70: new           #73                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      77: ldc           #136                // String Received
      79: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: aload_2
      83: aload_1
      84: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      89: invokevirtual #91                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      92: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      95: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      98: invokeinterface #92,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     103: getstatic     #137                // Field org/springframework/messaging/simp/stomp/StompCommand.MESSAGE:Lorg/springframework/messaging/simp/stomp/StompCommand;
     106: aload_3
     107: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     110: ifeq          207
     113: aload_0
     114: getfield      #8                  // Field subscriptions:Ljava/util/Map;
     117: aload         5
     119: invokevirtual #139                // Method org/springframework/messaging/simp/stomp/StompHeaders.getSubscription:()Ljava/lang/String;
     122: invokeinterface #140,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     127: checkcast     #107                // class org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription
     130: astore        7
     132: aload         7
     134: ifnull        152
     137: aload_0
     138: aload         7
     140: invokevirtual #141                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$DefaultSubscription.getHandler:()Lorg/springframework/messaging/simp/stomp/StompFrameHandler;
     143: aload_1
     144: aload         5
     146: invokespecial #142                // Method invokeHandler:(Lorg/springframework/messaging/simp/stomp/StompFrameHandler;Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     149: goto          204
     152: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     155: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     160: ifeq          204
     163: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     166: new           #73                 // class java/lang/StringBuilder
     169: dup
     170: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     173: ldc           #143                // String No handler for:
     175: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     178: aload_2
     179: aload_1
     180: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     185: invokevirtual #91                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     188: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     191: ldc           #144                // String . Perhaps just unsubscribed?
     193: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     196: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     199: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     204: goto          404
     207: getstatic     #145                // Field org/springframework/messaging/simp/stomp/StompCommand.RECEIPT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     210: aload_3
     211: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     214: ifeq          303
     217: aload         5
     219: invokevirtual #146                // Method org/springframework/messaging/simp/stomp/StompHeaders.getReceiptId:()Ljava/lang/String;
     222: astore        7
     224: aload_0
     225: getfield      #9                  // Field receiptHandlers:Ljava/util/Map;
     228: aload         7
     230: invokeinterface #140,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     235: checkcast     #49                 // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler
     238: astore        8
     240: aload         8
     242: ifnull        253
     245: aload         8
     247: invokevirtual #147                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReceiptHandler.handleReceiptReceived:()V
     250: goto          300
     253: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     256: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     261: ifeq          300
     264: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     267: new           #73                 // class java/lang/StringBuilder
     270: dup
     271: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     274: ldc           #148                // String No matching receipt:
     276: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     279: aload_2
     280: aload_1
     281: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     286: invokevirtual #91                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDetailedLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     289: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     292: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     295: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     300: goto          404
     303: getstatic     #149                // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECTED:Lorg/springframework/messaging/simp/stomp/StompCommand;
     306: aload_3
     307: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     310: ifeq          354
     313: aload_0
     314: aload         5
     316: invokespecial #150                // Method initHeartbeatTasks:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     319: aload_0
     320: aload         5
     322: ldc           #151                // String version
     324: invokevirtual #152                // Method org/springframework/messaging/simp/stomp/StompHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
     327: putfield      #111                // Field version:Ljava/lang/String;
     330: aload_0
     331: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
     334: aload_0
     335: invokevirtual #153                // Method org/springframework/util/concurrent/SettableListenableFuture.set:(Ljava/lang/Object;)Z
     338: pop
     339: aload_0
     340: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     343: aload_0
     344: aload         5
     346: invokeinterface #154,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.afterConnected:(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     351: goto          404
     354: getstatic     #155                // Field org/springframework/messaging/simp/stomp/StompCommand.ERROR:Lorg/springframework/messaging/simp/stomp/StompCommand;
     357: aload_3
     358: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     361: ifeq          378
     364: aload_0
     365: aload_0
     366: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     369: aload_1
     370: aload         5
     372: invokespecial #142                // Method invokeHandler:(Lorg/springframework/messaging/simp/stomp/StompFrameHandler;Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
     375: goto          404
     378: iload         6
     380: ifne          404
     383: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     386: invokeinterface #86,  1           // InterfaceMethod org/apache/commons/logging/Log.isTraceEnabled:()Z
     391: ifeq          404
     394: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
     397: ldc           #156                // String Message not handled.
     399: invokeinterface #92,  2           // InterfaceMethod org/apache/commons/logging/Log.trace:(Ljava/lang/Object;)V
     404: goto          433
     407: astore        7
     409: aload_0
     410: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
     413: aload_0
     414: aload_3
     415: aload         5
     417: aload_1
     418: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
     423: checkcast     #68                 // class "[B"
     426: aload         7
     428: invokeinterface #157,  6          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleException:(Lorg/springframework/messaging/simp/stomp/StompSession;Lorg/springframework/messaging/simp/stomp/StompCommand;Lorg/springframework/messaging/simp/stomp/StompHeaders;[BLjava/lang/Throwable;)V
     433: return
    Exception table:
       from    to  target type
         103   404   407   Class java/lang/Throwable

  private void invokeHandler(org.springframework.messaging.simp.stomp.StompFrameHandler, org.springframework.messaging.Message<byte[]>, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_2
       1: invokeinterface #90,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
       6: checkcast     #68                 // class "[B"
       9: arraylength
      10: ifne          22
      13: aload_1
      14: aload_3
      15: aconst_null
      16: invokeinterface #158,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.handleFrame:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V
      21: return
      22: aload_1
      23: aload_3
      24: invokeinterface #159,  2          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.getPayloadType:(Lorg/springframework/messaging/simp/stomp/StompHeaders;)Ljava/lang/reflect/Type;
      29: astore        4
      31: aload         4
      33: invokestatic  #160                // Method org/springframework/core/ResolvableType.forType:(Ljava/lang/reflect/Type;)Lorg/springframework/core/ResolvableType;
      36: invokevirtual #161                // Method org/springframework/core/ResolvableType.resolve:()Ljava/lang/Class;
      39: astore        5
      41: aload         5
      43: ifnonnull     91
      46: new           #72                 // class org/springframework/messaging/converter/MessageConversionException
      49: dup
      50: new           #73                 // class java/lang/StringBuilder
      53: dup
      54: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      57: ldc           #162                // String Unresolvable payload type [
      59: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: aload         4
      64: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: ldc           #163                // String ] from handler type [
      69: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: aload_1
      73: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      76: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      79: ldc           #83                 // String ]
      81: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      84: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      87: invokespecial #85                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
      90: athrow
      91: aload_0
      92: invokevirtual #69                 // Method getMessageConverter:()Lorg/springframework/messaging/converter/MessageConverter;
      95: aload_2
      96: aload         5
      98: invokeinterface #164,  3          // InterfaceMethod org/springframework/messaging/converter/MessageConverter.fromMessage:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Ljava/lang/Object;
     103: astore        6
     105: aload         6
     107: ifnonnull     155
     110: new           #72                 // class org/springframework/messaging/converter/MessageConversionException
     113: dup
     114: new           #73                 // class java/lang/StringBuilder
     117: dup
     118: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
     121: ldc           #165                // String No suitable converter for payload type [
     123: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     126: aload         4
     128: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     131: ldc           #163                // String ] from handler type [
     133: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: aload_1
     137: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     140: invokevirtual #81                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     143: ldc           #83                 // String ]
     145: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     148: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     151: invokespecial #85                 // Method org/springframework/messaging/converter/MessageConversionException."<init>":(Ljava/lang/String;)V
     154: athrow
     155: aload_1
     156: aload_3
     157: aload         6
     159: invokeinterface #158,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompFrameHandler.handleFrame:(Lorg/springframework/messaging/simp/stomp/StompHeaders;Ljava/lang/Object;)V
     164: return

  private void initHeartbeatTasks(org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: getfield      #35                 // Field connectHeaders:Lorg/springframework/messaging/simp/stomp/StompHeaders;
       4: invokevirtual #166                // Method org/springframework/messaging/simp/stomp/StompHeaders.getHeartbeat:()[J
       7: astore_2
       8: aload_1
       9: invokevirtual #166                // Method org/springframework/messaging/simp/stomp/StompHeaders.getHeartbeat:()[J
      12: astore_3
      13: aload_2
      14: ifnull        21
      17: aload_3
      18: ifnonnull     22
      21: return
      22: aload_0
      23: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      26: astore        4
      28: aload         4
      30: ifnull        37
      33: iconst_1
      34: goto          38
      37: iconst_0
      38: ldc           #167                // String No TcpConnection available
      40: invokestatic  #94                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      43: aload_2
      44: iconst_0
      45: laload
      46: lconst_0
      47: lcmp
      48: ifle          88
      51: aload_3
      52: iconst_1
      53: laload
      54: lconst_0
      55: lcmp
      56: ifle          88
      59: aload_2
      60: iconst_0
      61: laload
      62: aload_3
      63: iconst_1
      64: laload
      65: invokestatic  #168                // Method java/lang/Math.max:(JJ)J
      68: lstore        5
      70: aload         4
      72: new           #169                // class org/springframework/messaging/simp/stomp/DefaultStompSession$WriteInactivityTask
      75: dup
      76: aload_0
      77: aconst_null
      78: invokespecial #170                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$WriteInactivityTask."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Lorg/springframework/messaging/simp/stomp/DefaultStompSession$1;)V
      81: lload         5
      83: invokeinterface #171,  4          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.onWriteInactivity:(Ljava/lang/Runnable;J)V
      88: aload_2
      89: iconst_1
      90: laload
      91: lconst_0
      92: lcmp
      93: ifle          137
      96: aload_3
      97: iconst_0
      98: laload
      99: lconst_0
     100: lcmp
     101: ifle          137
     104: aload_2
     105: iconst_1
     106: laload
     107: aload_3
     108: iconst_0
     109: laload
     110: invokestatic  #168                // Method java/lang/Math.max:(JJ)J
     113: ldc2_w        #173                // long 3l
     116: lmul
     117: lstore        5
     119: aload         4
     121: new           #175                // class org/springframework/messaging/simp/stomp/DefaultStompSession$ReadInactivityTask
     124: dup
     125: aload_0
     126: aconst_null
     127: invokespecial #176                // Method org/springframework/messaging/simp/stomp/DefaultStompSession$ReadInactivityTask."<init>":(Lorg/springframework/messaging/simp/stomp/DefaultStompSession;Lorg/springframework/messaging/simp/stomp/DefaultStompSession$1;)V
     130: lload         5
     132: invokeinterface #177,  4          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.onReadInactivity:(Ljava/lang/Runnable;J)V
     137: return

  public void handleFailure(java.lang.Throwable);
    Code:
       0: aload_0
       1: getfield      #13                 // Field sessionFuture:Lorg/springframework/util/concurrent/SettableListenableFuture;
       4: aload_1
       5: invokevirtual #129                // Method org/springframework/util/concurrent/SettableListenableFuture.setException:(Ljava/lang/Throwable;)Z
       8: pop
       9: aload_0
      10: getfield      #34                 // Field sessionHandler:Lorg/springframework/messaging/simp/stomp/StompSessionHandler;
      13: aload_0
      14: aload_1
      15: invokeinterface #130,  3          // InterfaceMethod org/springframework/messaging/simp/stomp/StompSessionHandler.handleTransportError:(Lorg/springframework/messaging/simp/stomp/StompSession;Ljava/lang/Throwable;)V
      20: goto          46
      23: astore_2
      24: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      27: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      32: ifeq          46
      35: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      38: ldc           #178                // String Uncaught failure while handling transport failure
      40: aload_2
      41: invokeinterface #128,  3          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      46: return
    Exception table:
       from    to  target type
           0    20    23   Class java/lang/Throwable

  public void afterConnectionClosed();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: invokeinterface #120,  1          // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       8: ifeq          41
      11: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
      14: new           #73                 // class java/lang/StringBuilder
      17: dup
      18: invokespecial #74                 // Method java/lang/StringBuilder."<init>":()V
      21: ldc           #179                // String Connection closed in session id=
      23: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      26: aload_0
      27: getfield      #3                  // Field sessionId:Ljava/lang/String;
      30: invokevirtual #76                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      33: invokevirtual #84                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      36: invokeinterface #122,  2          // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      41: aload_0
      42: getfield      #4                  // Field closing:Z
      45: ifne          65
      48: aload_0
      49: invokespecial #1                  // Method resetConnection:()V
      52: aload_0
      53: new           #180                // class org/springframework/messaging/simp/stomp/ConnectionLostException
      56: dup
      57: ldc           #93                 // String Connection closed
      59: invokespecial #181                // Method org/springframework/messaging/simp/stomp/ConnectionLostException."<init>":(Ljava/lang/String;)V
      62: invokevirtual #182                // Method handleFailure:(Ljava/lang/Throwable;)V
      65: return

  private void resetConnection();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: astore_1
       5: aload_0
       6: aconst_null
       7: putfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
      10: aload_1
      11: ifnull        24
      14: aload_1
      15: invokeinterface #183,  1          // InterfaceMethod org/springframework/messaging/tcp/TcpConnection.close:()V
      20: goto          24
      23: astore_2
      24: return
    Exception table:
       from    to  target type
          14    20    23   Class java/lang/Throwable

  static java.util.Map access$200(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #9                  // Field receiptHandlers:Ljava/util/Map;
       4: areturn

  static java.util.Map access$300(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #8                  // Field subscriptions:Ljava/util/Map;
       4: areturn

  static void access$400(org.springframework.messaging.simp.stomp.DefaultStompSession, java.lang.String, org.springframework.messaging.simp.stomp.StompHeaders);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #7                  // Method unsubscribe:(Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompHeaders;)V
       6: return

  static org.springframework.messaging.tcp.TcpConnection access$500(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connection:Lorg/springframework/messaging/tcp/TcpConnection;
       4: areturn

  static org.springframework.messaging.Message access$600();
    Code:
       0: getstatic     #5                  // Field HEARTBEAT:Lorg/springframework/messaging/Message;
       3: areturn

  static boolean access$702(org.springframework.messaging.simp.stomp.DefaultStompSession, boolean);
    Code:
       0: aload_0
       1: iload_1
       2: dup_x1
       3: putfield      #4                  // Field closing:Z
       6: ireturn

  static java.lang.String access$800(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: getfield      #3                  // Field sessionId:Ljava/lang/String;
       4: areturn

  static org.apache.commons.logging.Log access$900();
    Code:
       0: getstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       3: areturn

  static void access$1000(org.springframework.messaging.simp.stomp.DefaultStompSession);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method resetConnection:()V
       4: return

  static {};
    Code:
       0: ldc           #172                // class org/springframework/messaging/simp/stomp/DefaultStompSession
       2: invokestatic  #184                // Method org/springframework/messaging/simp/SimpLogging.forLogName:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #2                  // Field logger:Lorg/apache/commons/logging/Log;
       8: new           #185                // class org/springframework/util/AlternativeJdkIdGenerator
      11: dup
      12: invokespecial #186                // Method org/springframework/util/AlternativeJdkIdGenerator."<init>":()V
      15: putstatic     #31                 // Field idGenerator:Lorg/springframework/util/IdGenerator;
      18: iconst_0
      19: newarray       byte
      21: putstatic     #65                 // Field EMPTY_PAYLOAD:[B
      24: invokestatic  #187                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.createForHeartbeat:()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      27: astore_0
      28: getstatic     #188                // Field org/springframework/messaging/simp/stomp/StompDecoder.HEARTBEAT_PAYLOAD:[B
      31: aload_0
      32: invokevirtual #66                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      35: invokestatic  #67                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      38: putstatic     #5                  // Field HEARTBEAT:Lorg/springframework/messaging/Message;
      41: return
}
