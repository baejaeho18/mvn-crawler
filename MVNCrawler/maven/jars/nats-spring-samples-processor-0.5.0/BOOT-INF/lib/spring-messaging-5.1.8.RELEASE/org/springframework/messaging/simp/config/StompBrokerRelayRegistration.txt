Compiled from "StompBrokerRelayRegistration.java"
public class org.springframework.messaging.simp.config.StompBrokerRelayRegistration extends org.springframework.messaging.simp.config.AbstractBrokerRegistration {
  private java.lang.String relayHost;

  private int relayPort;

  private java.lang.String clientLogin;

  private java.lang.String clientPasscode;

  private java.lang.String systemLogin;

  private java.lang.String systemPasscode;

  private java.lang.Long systemHeartbeatSendInterval;

  private java.lang.Long systemHeartbeatReceiveInterval;

  private java.lang.String virtualHost;

  private org.springframework.messaging.tcp.TcpOperations<byte[]> tcpClient;

  private boolean autoStartup;

  private java.lang.String userDestinationBroadcast;

  private java.lang.String userRegistryBroadcast;

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.MessageChannel, java.lang.String[]);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #1                  // Method org/springframework/messaging/simp/config/AbstractBrokerRegistration."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;[Ljava/lang/String;)V
       7: aload_0
       8: ldc           #2                  // String 127.0.0.1
      10: putfield      #3                  // Field relayHost:Ljava/lang/String;
      13: aload_0
      14: ldc           #4                  // int 61613
      16: putfield      #5                  // Field relayPort:I
      19: aload_0
      20: ldc           #6                  // String guest
      22: putfield      #7                  // Field clientLogin:Ljava/lang/String;
      25: aload_0
      26: ldc           #6                  // String guest
      28: putfield      #8                  // Field clientPasscode:Ljava/lang/String;
      31: aload_0
      32: ldc           #6                  // String guest
      34: putfield      #9                  // Field systemLogin:Ljava/lang/String;
      37: aload_0
      38: ldc           #6                  // String guest
      40: putfield      #10                 // Field systemPasscode:Ljava/lang/String;
      43: aload_0
      44: iconst_1
      45: putfield      #11                 // Field autoStartup:Z
      48: return

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setRelayHost(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #12                 // String relayHost must not be empty
       3: invokestatic  #13                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #3                  // Field relayHost:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setRelayPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field relayPort:I
       5: aload_0
       6: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setClientLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #14                 // String clientLogin must not be empty
       3: invokestatic  #13                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #7                  // Field clientLogin:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setClientPasscode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #15                 // String clientPasscode must not be empty
       3: invokestatic  #13                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #8                  // Field clientPasscode:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #16                 // String systemLogin must not be empty
       3: invokestatic  #13                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field systemLogin:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemPasscode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #17                 // String systemPasscode must not be empty
       3: invokestatic  #13                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #10                 // Field systemPasscode:Ljava/lang/String;
      11: aload_0
      12: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemHeartbeatSendInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: putfield      #19                 // Field systemHeartbeatSendInterval:Ljava/lang/Long;
       8: aload_0
       9: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setSystemHeartbeatReceiveInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: invokestatic  #18                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
       5: putfield      #20                 // Field systemHeartbeatReceiveInterval:Ljava/lang/Long;
       8: aload_0
       9: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #21                 // Field virtualHost:Ljava/lang/String;
       5: aload_0
       6: areturn

  public void setTcpClient(org.springframework.messaging.tcp.TcpOperations<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #22                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       5: return

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setAutoStartup(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #11                 // Field autoStartup:Z
       5: aload_0
       6: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setUserDestinationBroadcast(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #23                 // Field userDestinationBroadcast:Ljava/lang/String;
       5: aload_0
       6: areturn

  protected java.lang.String getUserDestinationBroadcast();
    Code:
       0: aload_0
       1: getfield      #23                 // Field userDestinationBroadcast:Ljava/lang/String;
       4: areturn

  public org.springframework.messaging.simp.config.StompBrokerRelayRegistration setUserRegistryBroadcast(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field userRegistryBroadcast:Ljava/lang/String;
       5: aload_0
       6: areturn

  protected java.lang.String getUserRegistryBroadcast();
    Code:
       0: aload_0
       1: getfield      #24                 // Field userRegistryBroadcast:Ljava/lang/String;
       4: areturn

  protected org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler getMessageHandler(org.springframework.messaging.SubscribableChannel);
    Code:
       0: new           #25                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler
       3: dup
       4: aload_0
       5: invokevirtual #26                 // Method getClientInboundChannel:()Lorg/springframework/messaging/SubscribableChannel;
       8: aload_0
       9: invokevirtual #27                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
      12: aload_1
      13: aload_0
      14: invokevirtual #28                 // Method getDestinationPrefixes:()Ljava/util/Collection;
      17: invokespecial #29                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
      20: astore_2
      21: aload_2
      22: aload_0
      23: getfield      #3                  // Field relayHost:Ljava/lang/String;
      26: invokevirtual #30                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setRelayHost:(Ljava/lang/String;)V
      29: aload_2
      30: aload_0
      31: getfield      #5                  // Field relayPort:I
      34: invokevirtual #31                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setRelayPort:(I)V
      37: aload_2
      38: aload_0
      39: getfield      #7                  // Field clientLogin:Ljava/lang/String;
      42: invokevirtual #32                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setClientLogin:(Ljava/lang/String;)V
      45: aload_2
      46: aload_0
      47: getfield      #8                  // Field clientPasscode:Ljava/lang/String;
      50: invokevirtual #33                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setClientPasscode:(Ljava/lang/String;)V
      53: aload_2
      54: aload_0
      55: getfield      #9                  // Field systemLogin:Ljava/lang/String;
      58: invokevirtual #34                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setSystemLogin:(Ljava/lang/String;)V
      61: aload_2
      62: aload_0
      63: getfield      #10                 // Field systemPasscode:Ljava/lang/String;
      66: invokevirtual #35                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setSystemPasscode:(Ljava/lang/String;)V
      69: aload_0
      70: getfield      #19                 // Field systemHeartbeatSendInterval:Ljava/lang/Long;
      73: ifnull        87
      76: aload_2
      77: aload_0
      78: getfield      #19                 // Field systemHeartbeatSendInterval:Ljava/lang/Long;
      81: invokevirtual #36                 // Method java/lang/Long.longValue:()J
      84: invokevirtual #37                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setSystemHeartbeatSendInterval:(J)V
      87: aload_0
      88: getfield      #20                 // Field systemHeartbeatReceiveInterval:Ljava/lang/Long;
      91: ifnull        105
      94: aload_2
      95: aload_0
      96: getfield      #20                 // Field systemHeartbeatReceiveInterval:Ljava/lang/Long;
      99: invokevirtual #36                 // Method java/lang/Long.longValue:()J
     102: invokevirtual #38                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setSystemHeartbeatReceiveInterval:(J)V
     105: aload_0
     106: getfield      #21                 // Field virtualHost:Ljava/lang/String;
     109: ifnull        120
     112: aload_2
     113: aload_0
     114: getfield      #21                 // Field virtualHost:Ljava/lang/String;
     117: invokevirtual #39                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setVirtualHost:(Ljava/lang/String;)V
     120: aload_0
     121: getfield      #22                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     124: ifnull        135
     127: aload_2
     128: aload_0
     129: getfield      #22                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     132: invokevirtual #40                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setTcpClient:(Lorg/springframework/messaging/tcp/TcpOperations;)V
     135: aload_2
     136: aload_0
     137: getfield      #11                 // Field autoStartup:Z
     140: invokevirtual #41                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler.setAutoStartup:(Z)V
     143: aload_2
     144: areturn

  protected org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler getMessageHandler(org.springframework.messaging.SubscribableChannel);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #42                 // Method getMessageHandler:(Lorg/springframework/messaging/SubscribableChannel;)Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;
       5: areturn
}
