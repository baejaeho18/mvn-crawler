Compiled from "ChannelRegistration.java"
public class org.springframework.messaging.simp.config.ChannelRegistration {
  private org.springframework.messaging.simp.config.TaskExecutorRegistration registration;

  private final java.util.List<org.springframework.messaging.support.ChannelInterceptor> interceptors;

  public org.springframework.messaging.simp.config.ChannelRegistration();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/ArrayList
       8: dup
       9: invokespecial #3                  // Method java/util/ArrayList."<init>":()V
      12: putfield      #4                  // Field interceptors:Ljava/util/List;
      15: return

  public org.springframework.messaging.simp.config.TaskExecutorRegistration taskExecutor();
    Code:
       0: aload_0
       1: aconst_null
       2: invokevirtual #5                  // Method taskExecutor:(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       5: areturn

  public org.springframework.messaging.simp.config.TaskExecutorRegistration taskExecutor(org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor);
    Code:
       0: aload_0
       1: getfield      #6                  // Field registration:Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       4: ifnonnull     33
       7: aload_0
       8: aload_1
       9: ifnull        23
      12: new           #7                  // class org/springframework/messaging/simp/config/TaskExecutorRegistration
      15: dup
      16: aload_1
      17: invokespecial #8                  // Method org/springframework/messaging/simp/config/TaskExecutorRegistration."<init>":(Lorg/springframework/scheduling/concurrent/ThreadPoolTaskExecutor;)V
      20: goto          30
      23: new           #7                  // class org/springframework/messaging/simp/config/TaskExecutorRegistration
      26: dup
      27: invokespecial #9                  // Method org/springframework/messaging/simp/config/TaskExecutorRegistration."<init>":()V
      30: putfield      #6                  // Field registration:Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      33: aload_0
      34: getfield      #6                  // Field registration:Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
      37: areturn

  public org.springframework.messaging.simp.config.ChannelRegistration interceptors(org.springframework.messaging.support.ChannelInterceptor...);
    Code:
       0: aload_0
       1: getfield      #4                  // Field interceptors:Ljava/util/List;
       4: aload_1
       5: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
       8: invokeinterface #11,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      13: pop
      14: aload_0
      15: areturn

  public org.springframework.messaging.simp.config.ChannelRegistration setInterceptors(org.springframework.messaging.support.ChannelInterceptor...);
    Code:
       0: aload_1
       1: ifnull        18
       4: aload_0
       5: getfield      #4                  // Field interceptors:Ljava/util/List;
       8: aload_1
       9: invokestatic  #10                 // Method java/util/Arrays.asList:([Ljava/lang/Object;)Ljava/util/List;
      12: invokeinterface #11,  2           // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
      17: pop
      18: aload_0
      19: areturn

  protected boolean hasTaskExecutor();
    Code:
       0: aload_0
       1: getfield      #6                  // Field registration:Lorg/springframework/messaging/simp/config/TaskExecutorRegistration;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  protected boolean hasInterceptors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field interceptors:Ljava/util/List;
       4: invokeinterface #12,  1           // InterfaceMethod java/util/List.isEmpty:()Z
       9: ifne          16
      12: iconst_1
      13: goto          17
      16: iconst_0
      17: ireturn

  protected java.util.List<org.springframework.messaging.support.ChannelInterceptor> getInterceptors();
    Code:
       0: aload_0
       1: getfield      #4                  // Field interceptors:Ljava/util/List;
       4: areturn
}
