Compiled from "HandlerMethod.java"
public class org.springframework.messaging.handler.HandlerMethod {
  public static final org.apache.commons.logging.Log defaultLogger;

  private final java.lang.Object bean;

  private final org.springframework.beans.factory.BeanFactory beanFactory;

  private final java.lang.Class<?> beanType;

  private final java.lang.reflect.Method method;

  private final java.lang.reflect.Method bridgedMethod;

  private final org.springframework.core.MethodParameter[] parameters;

  private org.springframework.messaging.handler.HandlerMethod resolvedFromHandlerMethod;

  protected org.apache.commons.logging.Log logger;

  public org.springframework.messaging.handler.HandlerMethod(java.lang.Object, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_1
      12: ldc           #5                  // String Bean is required
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #7                  // String Method is required
      20: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_1
      25: putfield      #8                  // Field bean:Ljava/lang/Object;
      28: aload_0
      29: aconst_null
      30: putfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      33: aload_0
      34: aload_1
      35: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Object;)Ljava/lang/Class;
      38: putfield      #11                 // Field beanType:Ljava/lang/Class;
      41: aload_0
      42: aload_2
      43: putfield      #12                 // Field method:Ljava/lang/reflect/Method;
      46: aload_0
      47: aload_2
      48: invokestatic  #13                 // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      51: putfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      54: aload_0
      55: aload_0
      56: invokespecial #14                 // Method initMethodParameters:()[Lorg/springframework/core/MethodParameter;
      59: putfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      62: return

  public org.springframework.messaging.handler.HandlerMethod(java.lang.Object, java.lang.String, java.lang.Class<?>...) throws java.lang.NoSuchMethodException;
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_1
      12: ldc           #5                  // String Bean is required
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #16                 // String Method name is required
      20: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_1
      25: putfield      #8                  // Field bean:Ljava/lang/Object;
      28: aload_0
      29: aconst_null
      30: putfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      33: aload_0
      34: aload_1
      35: invokestatic  #10                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Object;)Ljava/lang/Class;
      38: putfield      #11                 // Field beanType:Ljava/lang/Class;
      41: aload_0
      42: aload_1
      43: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      46: aload_2
      47: aload_3
      48: invokevirtual #18                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      51: putfield      #12                 // Field method:Ljava/lang/reflect/Method;
      54: aload_0
      55: aload_0
      56: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      59: invokestatic  #13                 // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
      62: putfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      65: aload_0
      66: aload_0
      67: invokespecial #14                 // Method initMethodParameters:()[Lorg/springframework/core/MethodParameter;
      70: putfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      73: return

  public org.springframework.messaging.handler.HandlerMethod(java.lang.String, org.springframework.beans.factory.BeanFactory, java.lang.reflect.Method);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_1
      12: ldc           #19                 // String Bean name is required
      14: invokestatic  #20                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #21                 // String BeanFactory is required
      20: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_3
      24: ldc           #7                  // String Method is required
      26: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      29: aload_0
      30: aload_1
      31: putfield      #8                  // Field bean:Ljava/lang/Object;
      34: aload_0
      35: aload_2
      36: putfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      39: aload_2
      40: aload_1
      41: invokeinterface #22,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getType:(Ljava/lang/String;)Ljava/lang/Class;
      46: astore        4
      48: aload         4
      50: ifnonnull     85
      53: new           #23                 // class java/lang/IllegalStateException
      56: dup
      57: new           #24                 // class java/lang/StringBuilder
      60: dup
      61: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      64: ldc           #26                 // String Cannot resolve bean type for bean with name \'
      66: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: aload_1
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: ldc           #28                 // String \'
      75: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      78: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      81: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      84: athrow
      85: aload_0
      86: aload         4
      88: invokestatic  #31                 // Method org/springframework/util/ClassUtils.getUserClass:(Ljava/lang/Class;)Ljava/lang/Class;
      91: putfield      #11                 // Field beanType:Ljava/lang/Class;
      94: aload_0
      95: aload_3
      96: putfield      #12                 // Field method:Ljava/lang/reflect/Method;
      99: aload_0
     100: aload_3
     101: invokestatic  #13                 // Method org/springframework/core/BridgeMethodResolver.findBridgedMethod:(Ljava/lang/reflect/Method;)Ljava/lang/reflect/Method;
     104: putfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
     107: aload_0
     108: aload_0
     109: invokespecial #14                 // Method initMethodParameters:()[Lorg/springframework/core/MethodParameter;
     112: putfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
     115: return

  protected org.springframework.messaging.handler.HandlerMethod(org.springframework.messaging.handler.HandlerMethod);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_1
      12: ldc           #32                 // String HandlerMethod is required
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_0
      18: aload_1
      19: getfield      #8                  // Field bean:Ljava/lang/Object;
      22: putfield      #8                  // Field bean:Ljava/lang/Object;
      25: aload_0
      26: aload_1
      27: getfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      30: putfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      33: aload_0
      34: aload_1
      35: getfield      #11                 // Field beanType:Ljava/lang/Class;
      38: putfield      #11                 // Field beanType:Ljava/lang/Class;
      41: aload_0
      42: aload_1
      43: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      46: putfield      #12                 // Field method:Ljava/lang/reflect/Method;
      49: aload_0
      50: aload_1
      51: getfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      54: putfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      57: aload_0
      58: aload_1
      59: getfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      62: putfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      65: aload_0
      66: aload_1
      67: getfield      #33                 // Field resolvedFromHandlerMethod:Lorg/springframework/messaging/handler/HandlerMethod;
      70: putfield      #33                 // Field resolvedFromHandlerMethod:Lorg/springframework/messaging/handler/HandlerMethod;
      73: return

  private org.springframework.messaging.handler.HandlerMethod(org.springframework.messaging.handler.HandlerMethod, java.lang.Object);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: getstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
      11: aload_1
      12: ldc           #32                 // String HandlerMethod is required
      14: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      17: aload_2
      18: ldc           #34                 // String Handler object is required
      20: invokestatic  #6                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      23: aload_0
      24: aload_2
      25: putfield      #8                  // Field bean:Ljava/lang/Object;
      28: aload_0
      29: aload_1
      30: getfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      33: putfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      36: aload_0
      37: aload_1
      38: getfield      #11                 // Field beanType:Ljava/lang/Class;
      41: putfield      #11                 // Field beanType:Ljava/lang/Class;
      44: aload_0
      45: aload_1
      46: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      49: putfield      #12                 // Field method:Ljava/lang/reflect/Method;
      52: aload_0
      53: aload_1
      54: getfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      57: putfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
      60: aload_0
      61: aload_1
      62: getfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      65: putfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
      68: aload_0
      69: aload_1
      70: putfield      #33                 // Field resolvedFromHandlerMethod:Lorg/springframework/messaging/handler/HandlerMethod;
      73: return

  private org.springframework.core.MethodParameter[] initMethodParameters();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
       4: invokevirtual #35                 // Method java/lang/reflect/Method.getParameterCount:()I
       7: istore_1
       8: iload_1
       9: anewarray     #36                 // class org/springframework/core/MethodParameter
      12: astore_2
      13: iconst_0
      14: istore_3
      15: iload_3
      16: iload_1
      17: if_icmpge     52
      20: new           #37                 // class org/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter
      23: dup
      24: aload_0
      25: iload_3
      26: invokespecial #38                 // Method org/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter."<init>":(Lorg/springframework/messaging/handler/HandlerMethod;I)V
      29: astore        4
      31: aload         4
      33: aload_0
      34: getfield      #11                 // Field beanType:Ljava/lang/Class;
      37: invokestatic  #39                 // Method org/springframework/core/GenericTypeResolver.resolveParameterType:(Lorg/springframework/core/MethodParameter;Ljava/lang/Class;)Ljava/lang/Class;
      40: pop
      41: aload_2
      42: iload_3
      43: aload         4
      45: aastore
      46: iinc          3, 1
      49: goto          15
      52: aload_2
      53: areturn

  public void setLogger(org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       5: return

  public org.apache.commons.logging.Log getLogger();
    Code:
       0: aload_0
       1: getfield      #4                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  public java.lang.Object getBean();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bean:Ljava/lang/Object;
       4: areturn

  public java.lang.reflect.Method getMethod();
    Code:
       0: aload_0
       1: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
       4: areturn

  public java.lang.Class<?> getBeanType();
    Code:
       0: aload_0
       1: getfield      #11                 // Field beanType:Ljava/lang/Class;
       4: areturn

  protected java.lang.reflect.Method getBridgedMethod();
    Code:
       0: aload_0
       1: getfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
       4: areturn

  public org.springframework.core.MethodParameter[] getMethodParameters();
    Code:
       0: aload_0
       1: getfield      #15                 // Field parameters:[Lorg/springframework/core/MethodParameter;
       4: areturn

  public org.springframework.core.MethodParameter getReturnType();
    Code:
       0: new           #37                 // class org/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter
       3: dup
       4: aload_0
       5: iconst_m1
       6: invokespecial #38                 // Method org/springframework/messaging/handler/HandlerMethod$HandlerMethodParameter."<init>":(Lorg/springframework/messaging/handler/HandlerMethod;I)V
       9: areturn

  public org.springframework.core.MethodParameter getReturnValueType(java.lang.Object);
    Code:
       0: new           #40                 // class org/springframework/messaging/handler/HandlerMethod$ReturnValueMethodParameter
       3: dup
       4: aload_0
       5: aload_1
       6: invokespecial #41                 // Method org/springframework/messaging/handler/HandlerMethod$ReturnValueMethodParameter."<init>":(Lorg/springframework/messaging/handler/HandlerMethod;Ljava/lang/Object;)V
       9: areturn

  public boolean isVoid();
    Code:
       0: getstatic     #42                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
       3: aload_0
       4: invokevirtual #43                 // Method getReturnType:()Lorg/springframework/core/MethodParameter;
       7: invokevirtual #44                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      10: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      13: ireturn

  public <A extends java.lang.annotation.Annotation> A getMethodAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
       4: aload_1
       5: invokestatic  #46                 // Method org/springframework/core/annotation/AnnotatedElementUtils.findMergedAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
       8: areturn

  public <A extends java.lang.annotation.Annotation> boolean hasMethodAnnotation(java.lang.Class<A>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
       4: aload_1
       5: invokestatic  #47                 // Method org/springframework/core/annotation/AnnotatedElementUtils.hasAnnotation:(Ljava/lang/reflect/AnnotatedElement;Ljava/lang/Class;)Z
       8: ireturn

  public org.springframework.messaging.handler.HandlerMethod getResolvedFromHandlerMethod();
    Code:
       0: aload_0
       1: getfield      #33                 // Field resolvedFromHandlerMethod:Lorg/springframework/messaging/handler/HandlerMethod;
       4: areturn

  public org.springframework.messaging.handler.HandlerMethod createWithResolvedBean();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bean:Ljava/lang/Object;
       4: astore_1
       5: aload_0
       6: getfield      #8                  // Field bean:Ljava/lang/Object;
       9: instanceof    #48                 // class java/lang/String
      12: ifeq          51
      15: aload_0
      16: getfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      19: ifnull        26
      22: iconst_1
      23: goto          27
      26: iconst_0
      27: ldc           #49                 // String Cannot resolve bean name without BeanFactory
      29: invokestatic  #50                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      32: aload_0
      33: getfield      #8                  // Field bean:Ljava/lang/Object;
      36: checkcast     #48                 // class java/lang/String
      39: astore_2
      40: aload_0
      41: getfield      #9                  // Field beanFactory:Lorg/springframework/beans/factory/BeanFactory;
      44: aload_2
      45: invokeinterface #51,  2           // InterfaceMethod org/springframework/beans/factory/BeanFactory.getBean:(Ljava/lang/String;)Ljava/lang/Object;
      50: astore_1
      51: new           #52                 // class org/springframework/messaging/handler/HandlerMethod
      54: dup
      55: aload_0
      56: aload_1
      57: invokespecial #53                 // Method "<init>":(Lorg/springframework/messaging/handler/HandlerMethod;Ljava/lang/Object;)V
      60: areturn

  public java.lang.String getShortLogMessage();
    Code:
       0: aload_0
       1: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #35                 // Method java/lang/reflect/Method.getParameterCount:()I
       7: istore_1
       8: new           #24                 // class java/lang/StringBuilder
      11: dup
      12: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      15: aload_0
      16: invokevirtual #54                 // Method getBeanType:()Ljava/lang/Class;
      19: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      22: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      25: ldc           #56                 // String #
      27: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      30: aload_0
      31: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      34: invokevirtual #57                 // Method java/lang/reflect/Method.getName:()Ljava/lang/String;
      37: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      40: ldc           #58                 // String [
      42: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      45: iload_1
      46: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      49: ldc           #60                 // String  args]
      51: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      57: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #52                 // class org/springframework/messaging/handler/HandlerMethod
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_1
      17: checkcast     #52                 // class org/springframework/messaging/handler/HandlerMethod
      20: astore_2
      21: aload_0
      22: getfield      #8                  // Field bean:Ljava/lang/Object;
      25: aload_2
      26: getfield      #8                  // Field bean:Ljava/lang/Object;
      29: invokevirtual #45                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      32: ifeq          53
      35: aload_0
      36: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      39: aload_2
      40: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      43: invokevirtual #61                 // Method java/lang/reflect/Method.equals:(Ljava/lang/Object;)Z
      46: ifeq          53
      49: iconst_1
      50: goto          54
      53: iconst_0
      54: ireturn

  public int hashCode();
    Code:
       0: aload_0
       1: getfield      #8                  // Field bean:Ljava/lang/Object;
       4: invokevirtual #62                 // Method java/lang/Object.hashCode:()I
       7: bipush        31
       9: imul
      10: aload_0
      11: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
      14: invokevirtual #63                 // Method java/lang/reflect/Method.hashCode:()I
      17: iadd
      18: ireturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #12                 // Field method:Ljava/lang/reflect/Method;
       4: invokevirtual #64                 // Method java/lang/reflect/Method.toGenericString:()Ljava/lang/String;
       7: areturn

  protected static java.lang.Object findProvidedArgument(org.springframework.core.MethodParameter, java.lang.Object...);
    Code:
       0: aload_1
       1: invokestatic  #65                 // Method org/springframework/util/ObjectUtils.isEmpty:([Ljava/lang/Object;)Z
       4: ifne          48
       7: aload_1
       8: astore_2
       9: aload_2
      10: arraylength
      11: istore_3
      12: iconst_0
      13: istore        4
      15: iload         4
      17: iload_3
      18: if_icmpge     48
      21: aload_2
      22: iload         4
      24: aaload
      25: astore        5
      27: aload_0
      28: invokevirtual #44                 // Method org/springframework/core/MethodParameter.getParameterType:()Ljava/lang/Class;
      31: aload         5
      33: invokevirtual #66                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      36: ifeq          42
      39: aload         5
      41: areturn
      42: iinc          4, 1
      45: goto          15
      48: aconst_null
      49: areturn

  protected static java.lang.String formatArgumentError(org.springframework.core.MethodParameter, java.lang.String);
    Code:
       0: new           #24                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #67                 // String Could not resolve parameter [
       9: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokevirtual #68                 // Method org/springframework/core/MethodParameter.getParameterIndex:()I
      16: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      19: ldc           #69                 // String ] in
      21: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: aload_0
      25: invokevirtual #70                 // Method org/springframework/core/MethodParameter.getExecutable:()Ljava/lang/reflect/Executable;
      28: invokevirtual #71                 // Method java/lang/reflect/Executable.toGenericString:()Ljava/lang/String;
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokestatic  #72                 // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
      38: ifeq          63
      41: new           #24                 // class java/lang/StringBuilder
      44: dup
      45: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #73                 // String :
      50: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      57: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: goto          65
      63: ldc           #74                 // String
      65: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      71: areturn

  protected void assertTargetBean(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]);
    Code:
       0: aload_1
       1: invokevirtual #75                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
       4: astore        4
       6: aload_2
       7: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      10: astore        5
      12: aload         4
      14: aload         5
      16: invokevirtual #76                 // Method java/lang/Class.isAssignableFrom:(Ljava/lang/Class;)Z
      19: ifne          80
      22: new           #24                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #77                 // String The mapped handler method class \'
      31: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload         4
      36: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      39: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: ldc           #78                 // String \' is not an instance of the actual endpoint bean class \'
      44: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      47: aload         5
      49: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: ldc           #79                 // String \'. If the endpoint requires proxying (e.g. due to @Transactional), please use class-based proxying.
      57: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      60: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      63: astore        6
      65: new           #23                 // class java/lang/IllegalStateException
      68: dup
      69: aload_0
      70: aload         6
      72: aload_3
      73: invokevirtual #80                 // Method formatInvokeError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;
      76: invokespecial #30                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
      79: athrow
      80: return

  protected java.lang.String formatInvokeError(java.lang.String, java.lang.Object[]);
    Code:
       0: iconst_0
       1: aload_2
       2: arraylength
       3: invokestatic  #81                 // InterfaceMethod java/util/stream/IntStream.range:(II)Ljava/util/stream/IntStream;
       6: aload_2
       7: invokedynamic #82,  0             // InvokeDynamic #0:apply:([Ljava/lang/Object;)Ljava/util/function/IntFunction;
      12: invokeinterface #83,  2           // InterfaceMethod java/util/stream/IntStream.mapToObj:(Ljava/util/function/IntFunction;)Ljava/util/stream/Stream;
      17: ldc           #84                 // String ,\n
      19: ldc           #85                 // String
      21: ldc           #85                 // String
      23: invokestatic  #86                 // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
      26: invokeinterface #87,  2           // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      31: checkcast     #48                 // class java/lang/String
      34: astore_3
      35: new           #24                 // class java/lang/StringBuilder
      38: dup
      39: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      42: aload_1
      43: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      46: ldc           #88                 // String \nEndpoint [
      48: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_0
      52: invokevirtual #54                 // Method getBeanType:()Ljava/lang/Class;
      55: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      58: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: ldc           #89                 // String ]\nMethod [
      63: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      66: aload_0
      67: invokevirtual #90                 // Method getBridgedMethod:()Ljava/lang/reflect/Method;
      70: invokevirtual #64                 // Method java/lang/reflect/Method.toGenericString:()Ljava/lang/String;
      73: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      76: ldc           #91                 // String ] with argument values:\n
      78: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_3
      82: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      85: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      88: areturn

  private static java.lang.String lambda$formatInvokeError$0(java.lang.Object[], int);
    Code:
       0: aload_0
       1: iload_1
       2: aaload
       3: ifnull        61
       6: new           #24                 // class java/lang/StringBuilder
       9: dup
      10: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      13: ldc           #58                 // String [
      15: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      18: iload_1
      19: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      22: ldc           #92                 // String ] [type=
      24: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      27: aload_0
      28: iload_1
      29: aaload
      30: invokevirtual #17                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      33: invokevirtual #55                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      39: ldc           #93                 // String ] [value=
      41: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      44: aload_0
      45: iload_1
      46: aaload
      47: invokevirtual #94                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      50: ldc           #95                 // String ]
      52: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      55: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      58: goto          85
      61: new           #24                 // class java/lang/StringBuilder
      64: dup
      65: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      68: ldc           #58                 // String [
      70: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      73: iload_1
      74: invokevirtual #59                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      77: ldc           #96                 // String ] [null]
      79: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      82: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      85: areturn

  static java.lang.reflect.Method access$000(org.springframework.messaging.handler.HandlerMethod);
    Code:
       0: aload_0
       1: getfield      #1                  // Field bridgedMethod:Ljava/lang/reflect/Method;
       4: areturn

  static {};
    Code:
       0: ldc           #52                 // class org/springframework/messaging/handler/HandlerMethod
       2: invokestatic  #97                 // Method org/apache/commons/logging/LogFactory.getLog:(Ljava/lang/Class;)Lorg/apache/commons/logging/Log;
       5: putstatic     #3                  // Field defaultLogger:Lorg/apache/commons/logging/Log;
       8: return
}
