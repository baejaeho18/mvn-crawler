Compiled from "MessageRequestReplyOperations.java"
public interface org.springframework.messaging.core.MessageRequestReplyOperations<D> {
  public abstract org.springframework.messaging.Message<?> sendAndReceive(org.springframework.messaging.Message<?>) throws org.springframework.messaging.MessagingException;

  public abstract org.springframework.messaging.Message<?> sendAndReceive(D, org.springframework.messaging.Message<?>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.Object, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(D, java.lang.Object, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(D, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(java.lang.Object, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(D, java.lang.Object, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;

  public abstract <T> T convertSendAndReceive(D, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor) throws org.springframework.messaging.MessagingException;
}
