Compiled from "StompBrokerRelayMessageHandler.java"
public class org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler extends org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler {
  public static final java.lang.String SYSTEM_SESSION_ID;

  private static final long HEARTBEAT_MULTIPLIER;

  private static final int MAX_TIME_TO_CONNECTED_FRAME;

  private static final byte[] EMPTY_PAYLOAD;

  private static final org.springframework.util.concurrent.ListenableFutureTask<java.lang.Void> EMPTY_TASK;

  private static final org.springframework.messaging.Message<byte[]> HEARTBEAT_MESSAGE;

  private java.lang.String relayHost;

  private int relayPort;

  private java.lang.String clientLogin;

  private java.lang.String clientPasscode;

  private java.lang.String systemLogin;

  private java.lang.String systemPasscode;

  private long systemHeartbeatSendInterval;

  private long systemHeartbeatReceiveInterval;

  private final java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler> systemSubscriptions;

  private java.lang.String virtualHost;

  private org.springframework.messaging.tcp.TcpOperations<byte[]> tcpClient;

  private org.springframework.messaging.support.MessageHeaderInitializer headerInitializer;

  private final org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats stats;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$StompConnectionHandler> connectionHandlers;

  public org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.MessageChannel, org.springframework.messaging.SubscribableChannel, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #11                 // Method org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
       9: aload_0
      10: ldc           #12                 // String 127.0.0.1
      12: putfield      #13                 // Field relayHost:Ljava/lang/String;
      15: aload_0
      16: ldc           #14                 // int 61613
      18: putfield      #15                 // Field relayPort:I
      21: aload_0
      22: ldc           #16                 // String guest
      24: putfield      #17                 // Field clientLogin:Ljava/lang/String;
      27: aload_0
      28: ldc           #16                 // String guest
      30: putfield      #18                 // Field clientPasscode:Ljava/lang/String;
      33: aload_0
      34: ldc           #16                 // String guest
      36: putfield      #19                 // Field systemLogin:Ljava/lang/String;
      39: aload_0
      40: ldc           #16                 // String guest
      42: putfield      #20                 // Field systemPasscode:Ljava/lang/String;
      45: aload_0
      46: ldc2_w        #21                 // long 10000l
      49: putfield      #23                 // Field systemHeartbeatSendInterval:J
      52: aload_0
      53: ldc2_w        #21                 // long 10000l
      56: putfield      #24                 // Field systemHeartbeatReceiveInterval:J
      59: aload_0
      60: new           #25                 // class java/util/HashMap
      63: dup
      64: iconst_4
      65: invokespecial #26                 // Method java/util/HashMap."<init>":(I)V
      68: putfield      #27                 // Field systemSubscriptions:Ljava/util/Map;
      71: aload_0
      72: new           #28                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats
      75: dup
      76: aload_0
      77: aconst_null
      78: invokespecial #29                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
      81: putfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
      84: aload_0
      85: new           #30                 // class java/util/concurrent/ConcurrentHashMap
      88: dup
      89: invokespecial #31                 // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      92: putfield      #6                  // Field connectionHandlers:Ljava/util/Map;
      95: return

  public void setRelayHost(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #32                 // String relayHost must not be empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #13                 // Field relayHost:Ljava/lang/String;
      11: return

  public java.lang.String getRelayHost();
    Code:
       0: aload_0
       1: getfield      #13                 // Field relayHost:Ljava/lang/String;
       4: areturn

  public void setRelayPort(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #15                 // Field relayPort:I
       5: return

  public int getRelayPort();
    Code:
       0: aload_0
       1: getfield      #15                 // Field relayPort:I
       4: ireturn

  public void setClientLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #34                 // String clientLogin must not be empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #17                 // Field clientLogin:Ljava/lang/String;
      11: return

  public java.lang.String getClientLogin();
    Code:
       0: aload_0
       1: getfield      #17                 // Field clientLogin:Ljava/lang/String;
       4: areturn

  public void setClientPasscode(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #35                 // String clientPasscode must not be empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #18                 // Field clientPasscode:Ljava/lang/String;
      11: return

  public java.lang.String getClientPasscode();
    Code:
       0: aload_0
       1: getfield      #18                 // Field clientPasscode:Ljava/lang/String;
       4: areturn

  public void setSystemLogin(java.lang.String);
    Code:
       0: aload_1
       1: ldc           #36                 // String systemLogin must not be empty
       3: invokestatic  #33                 // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #19                 // Field systemLogin:Ljava/lang/String;
      11: return

  public java.lang.String getSystemLogin();
    Code:
       0: aload_0
       1: getfield      #19                 // Field systemLogin:Ljava/lang/String;
       4: areturn

  public void setSystemPasscode(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field systemPasscode:Ljava/lang/String;
       5: return

  public java.lang.String getSystemPasscode();
    Code:
       0: aload_0
       1: getfield      #20                 // Field systemPasscode:Ljava/lang/String;
       4: areturn

  public void setSystemHeartbeatSendInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #23                 // Field systemHeartbeatSendInterval:J
       5: return

  public long getSystemHeartbeatSendInterval();
    Code:
       0: aload_0
       1: getfield      #23                 // Field systemHeartbeatSendInterval:J
       4: lreturn

  public void setSystemHeartbeatReceiveInterval(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #24                 // Field systemHeartbeatReceiveInterval:J
       5: return

  public long getSystemHeartbeatReceiveInterval();
    Code:
       0: aload_0
       1: getfield      #24                 // Field systemHeartbeatReceiveInterval:J
       4: lreturn

  public void setSystemSubscriptions(java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler>);
    Code:
       0: aload_0
       1: getfield      #27                 // Field systemSubscriptions:Ljava/util/Map;
       4: invokeinterface #37,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_1
      10: ifnull        23
      13: aload_0
      14: getfield      #27                 // Field systemSubscriptions:Ljava/util/Map;
      17: aload_1
      18: invokeinterface #38,  2           // InterfaceMethod java/util/Map.putAll:(Ljava/util/Map;)V
      23: return

  public java.util.Map<java.lang.String, org.springframework.messaging.MessageHandler> getSystemSubscriptions();
    Code:
       0: aload_0
       1: getfield      #27                 // Field systemSubscriptions:Ljava/util/Map;
       4: areturn

  public void setVirtualHost(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #39                 // Field virtualHost:Ljava/lang/String;
       5: return

  public java.lang.String getVirtualHost();
    Code:
       0: aload_0
       1: getfield      #39                 // Field virtualHost:Ljava/lang/String;
       4: areturn

  public void setTcpClient(org.springframework.messaging.tcp.TcpOperations<byte[]>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       5: return

  public org.springframework.messaging.tcp.TcpOperations<byte[]> getTcpClient();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       4: areturn

  public void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #41                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       5: return

  public org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer();
    Code:
       0: aload_0
       1: getfield      #41                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: areturn

  public java.lang.String getStatsInfo();
    Code:
       0: aload_0
       1: getfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
       4: invokevirtual #42                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.toString:()Ljava/lang/String;
       7: areturn

  public int getConnectionCount();
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
       4: invokeinterface #43,  1           // InterfaceMethod java/util/Map.size:()I
       9: ireturn

  protected void startInternal();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       4: ifnonnull     15
       7: aload_0
       8: aload_0
       9: invokespecial #44                 // Method initTcpClient:()Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
      12: putfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
      15: aload_0
      16: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      19: invokeinterface #45,  1           // InterfaceMethod org/apache/commons/logging/Log.isInfoEnabled:()Z
      24: ifeq          58
      27: aload_0
      28: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      31: new           #46                 // class java/lang/StringBuilder
      34: dup
      35: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      38: ldc           #48                 // String Starting \"system\" session,
      40: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      43: aload_0
      44: invokevirtual #50                 // Method toString:()Ljava/lang/String;
      47: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      53: invokeinterface #52,  2           // InterfaceMethod org/apache/commons/logging/Log.info:(Ljava/lang/Object;)V
      58: getstatic     #53                 // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
      61: invokestatic  #54                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      64: astore_1
      65: aload_1
      66: ldc           #55                 // String 1.1,1.2
      68: invokevirtual #56                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setAcceptVersion:(Ljava/lang/String;)V
      71: aload_1
      72: aload_0
      73: getfield      #19                 // Field systemLogin:Ljava/lang/String;
      76: invokevirtual #57                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLogin:(Ljava/lang/String;)V
      79: aload_1
      80: aload_0
      81: getfield      #20                 // Field systemPasscode:Ljava/lang/String;
      84: invokevirtual #58                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setPasscode:(Ljava/lang/String;)V
      87: aload_1
      88: aload_0
      89: getfield      #23                 // Field systemHeartbeatSendInterval:J
      92: aload_0
      93: getfield      #24                 // Field systemHeartbeatReceiveInterval:J
      96: invokevirtual #59                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHeartbeat:(JJ)V
      99: aload_0
     100: invokevirtual #60                 // Method getVirtualHost:()Ljava/lang/String;
     103: astore_2
     104: aload_2
     105: ifnull        113
     108: aload_1
     109: aload_2
     110: invokevirtual #61                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHost:(Ljava/lang/String;)V
     113: aload_1
     114: ldc           #63                 // String _system_
     116: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     119: aload_0
     120: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     123: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     128: ifeq          165
     131: aload_0
     132: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     135: new           #46                 // class java/lang/StringBuilder
     138: dup
     139: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     142: ldc           #66                 // String Forwarding
     144: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     147: aload_1
     148: getstatic     #9                  // Field EMPTY_PAYLOAD:[B
     151: invokevirtual #67                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     154: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     157: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     160: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     165: new           #69                 // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler
     168: dup
     169: aload_0
     170: aload_1
     171: invokespecial #70                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)V
     174: astore_3
     175: aload_0
     176: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     179: aload_3
     180: invokevirtual #71                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$SystemStompConnectionHandler.getSessionId:()Ljava/lang/String;
     183: aload_3
     184: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     189: pop
     190: aload_0
     191: getfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     194: invokevirtual #73                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementConnectCount:()V
     197: aload_0
     198: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     201: aload_3
     202: new           #74                 // class org/springframework/messaging/tcp/FixedIntervalReconnectStrategy
     205: dup
     206: ldc2_w        #75                 // long 5000l
     209: invokespecial #77                 // Method org/springframework/messaging/tcp/FixedIntervalReconnectStrategy."<init>":(J)V
     212: invokeinterface #78,  3           // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.connect:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;Lorg/springframework/messaging/tcp/ReconnectStrategy;)Lorg/springframework/util/concurrent/ListenableFuture;
     217: pop
     218: return

  private org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient<byte[]> initTcpClient();
    Code:
       0: new           #79                 // class org/springframework/messaging/simp/stomp/StompDecoder
       3: dup
       4: invokespecial #80                 // Method org/springframework/messaging/simp/stomp/StompDecoder."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #41                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
      12: ifnull        23
      15: aload_1
      16: aload_0
      17: getfield      #41                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
      20: invokevirtual #81                 // Method org/springframework/messaging/simp/stomp/StompDecoder.setHeaderInitializer:(Lorg/springframework/messaging/support/MessageHeaderInitializer;)V
      23: new           #82                 // class org/springframework/messaging/simp/stomp/StompReactorNettyCodec
      26: dup
      27: aload_1
      28: invokespecial #83                 // Method org/springframework/messaging/simp/stomp/StompReactorNettyCodec."<init>":(Lorg/springframework/messaging/simp/stomp/StompDecoder;)V
      31: astore_2
      32: new           #84                 // class org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient
      35: dup
      36: aload_0
      37: getfield      #13                 // Field relayHost:Ljava/lang/String;
      40: aload_0
      41: getfield      #15                 // Field relayPort:I
      44: aload_2
      45: invokespecial #85                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient."<init>":(Ljava/lang/String;ILorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;)V
      48: astore_3
      49: aload_3
      50: aload_3
      51: invokevirtual #86                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.getLogger:()Lorg/apache/commons/logging/Log;
      54: invokestatic  #87                 // Method org/springframework/messaging/simp/SimpLogging.forLog:(Lorg/apache/commons/logging/Log;)Lorg/apache/commons/logging/Log;
      57: invokevirtual #88                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.setLogger:(Lorg/apache/commons/logging/Log;)V
      60: aload_3
      61: areturn

  protected void stopInternal();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method publishBrokerUnavailableEvent:()V
       4: aload_0
       5: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       8: ifnull        48
      11: aload_0
      12: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
      15: invokeinterface #89,  1           // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.shutdown:()Lorg/springframework/util/concurrent/ListenableFuture;
      20: ldc2_w        #75                 // long 5000l
      23: getstatic     #90                 // Field java/util/concurrent/TimeUnit.MILLISECONDS:Ljava/util/concurrent/TimeUnit;
      26: invokeinterface #91,  4           // InterfaceMethod org/springframework/util/concurrent/ListenableFuture.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;
      31: pop
      32: goto          48
      35: astore_1
      36: aload_0
      37: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
      40: ldc           #93                 // String Error in shutdown of TCP client
      42: aload_1
      43: invokeinterface #94,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      48: return
    Exception table:
       from    to  target type
          11    32    35   Class java/lang/Throwable

  protected void handleMessageInternal(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #95,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: invokestatic  #96                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getSessionId:(Ljava/util/Map;)Ljava/lang/String;
       9: astore_2
      10: aload_0
      11: invokevirtual #97                 // Method isBrokerAvailable:()Z
      14: ifne          159
      17: aload_2
      18: ifnull        30
      21: ldc           #63                 // String _system_
      23: aload_2
      24: invokevirtual #98                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      27: ifeq          40
      30: new           #99                 // class org/springframework/messaging/MessageDeliveryException
      33: dup
      34: ldc           #100                // String Message broker not active. Consider subscribing to receive BrokerAvailabilityEvent\'s from an ApplicationListener Spring bean.
      36: invokespecial #101                // Method org/springframework/messaging/MessageDeliveryException."<init>":(Ljava/lang/String;)V
      39: athrow
      40: aload_0
      41: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
      44: aload_2
      45: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      50: checkcast     #103                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
      53: astore_3
      54: aload_3
      55: ifnull        71
      58: aload_3
      59: ldc           #104                // String Broker not available.
      61: invokestatic  #105                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.access$200:(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler;Ljava/lang/String;)V
      64: aload_3
      65: invokevirtual #106                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.clearConnection:()V
      68: goto          158
      71: getstatic     #107                // Field org/springframework/messaging/simp/stomp/StompCommand.ERROR:Lorg/springframework/messaging/simp/stomp/StompCommand;
      74: invokestatic  #54                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.create:(Lorg/springframework/messaging/simp/stomp/StompCommand;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      77: astore        4
      79: aload_0
      80: invokevirtual #108                // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      83: ifnull        97
      86: aload_0
      87: invokevirtual #108                // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      90: aload         4
      92: invokeinterface #109,  2          // InterfaceMethod org/springframework/messaging/support/MessageHeaderInitializer.initHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      97: aload         4
      99: aload_2
     100: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     103: aload_1
     104: invokeinterface #95,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
     109: invokestatic  #110                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     112: astore        5
     114: aload         5
     116: ifnull        126
     119: aload         4
     121: aload         5
     123: invokevirtual #111                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setUser:(Ljava/security/Principal;)V
     126: aload         4
     128: ldc           #104                // String Broker not available.
     130: invokevirtual #112                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setMessage:(Ljava/lang/String;)V
     133: aload         4
     135: invokevirtual #113                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     138: astore        6
     140: aload_0
     141: invokevirtual #114                // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     144: getstatic     #9                  // Field EMPTY_PAYLOAD:[B
     147: aload         6
     149: invokestatic  #115                // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     152: invokeinterface #116,  2          // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     157: pop
     158: return
     159: aload_1
     160: ldc           #117                // class org/springframework/messaging/support/MessageHeaderAccessor
     162: invokestatic  #118                // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
     165: astore        5
     167: aload         5
     169: ifnonnull     199
     172: new           #119                // class java/lang/IllegalStateException
     175: dup
     176: new           #46                 // class java/lang/StringBuilder
     179: dup
     180: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     183: ldc           #120                // String No header accessor (not using the SimpMessagingTemplate?):
     185: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     188: aload_1
     189: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     192: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     195: invokespecial #122                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     198: athrow
     199: aload         5
     201: instanceof    #123                // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
     204: ifeq          222
     207: aload         5
     209: checkcast     #123                // class org/springframework/messaging/simp/stomp/StompHeaderAccessor
     212: astore_3
     213: aload_3
     214: invokevirtual #124                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     217: astore        4
     219: goto          295
     222: aload         5
     224: instanceof    #125                // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
     227: ifeq          255
     230: aload_1
     231: invokestatic  #126                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
     234: astore_3
     235: aload_3
     236: invokevirtual #124                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getCommand:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     239: astore        4
     241: aload         4
     243: ifnonnull     295
     246: aload_3
     247: invokevirtual #127                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.updateStompCommandAsClientMessage:()Lorg/springframework/messaging/simp/stomp/StompCommand;
     250: astore        4
     252: goto          295
     255: new           #119                // class java/lang/IllegalStateException
     258: dup
     259: new           #46                 // class java/lang/StringBuilder
     262: dup
     263: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     266: ldc           #128                // String Unexpected header accessor type
     268: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     271: aload         5
     273: invokevirtual #129                // Method java/lang/Object.getClass:()Ljava/lang/Class;
     276: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     279: ldc           #130                // String  in
     281: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     284: aload_1
     285: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     288: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     291: invokespecial #122                // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     294: athrow
     295: aload_2
     296: ifnonnull     361
     299: getstatic     #131                // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
     302: aload_3
     303: invokevirtual #132                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageType:()Lorg/springframework/messaging/simp/SimpMessageType;
     306: invokevirtual #133                // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     309: ifne          353
     312: aload_0
     313: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     316: invokeinterface #134,  1          // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     321: ifeq          352
     324: aload_0
     325: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     328: new           #46                 // class java/lang/StringBuilder
     331: dup
     332: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     335: ldc           #135                // String Only STOMP SEND supported from within the server side. Ignoring
     337: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     340: aload_1
     341: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     344: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     347: invokeinterface #136,  2          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;)V
     352: return
     353: ldc           #63                 // String _system_
     355: astore_2
     356: aload_3
     357: aload_2
     358: invokevirtual #64                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     361: aload_3
     362: invokevirtual #137                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getDestination:()Ljava/lang/String;
     365: astore        6
     367: aload         4
     369: ifnull        390
     372: aload         4
     374: invokevirtual #138                // Method org/springframework/messaging/simp/stomp/StompCommand.requiresDestination:()Z
     377: ifeq          390
     380: aload_0
     381: aload         6
     383: invokevirtual #139                // Method checkDestinationPrefix:(Ljava/lang/String;)Z
     386: ifne          390
     389: return
     390: getstatic     #53                 // Field org/springframework/messaging/simp/stomp/StompCommand.CONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     393: aload         4
     395: invokevirtual #140                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     398: ifne          412
     401: getstatic     #141                // Field org/springframework/messaging/simp/stomp/StompCommand.STOMP:Lorg/springframework/messaging/simp/stomp/StompCommand;
     404: aload         4
     406: invokevirtual #140                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     409: ifeq          551
     412: aload_0
     413: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     416: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     421: ifeq          440
     424: aload_0
     425: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     428: aload_3
     429: getstatic     #9                  // Field EMPTY_PAYLOAD:[B
     432: invokevirtual #67                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
     435: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     440: aload_3
     441: invokevirtual #142                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.isMutable:()Z
     444: ifeq          451
     447: aload_3
     448: goto          455
     451: aload_1
     452: invokestatic  #126                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
     455: astore_3
     456: aload_3
     457: aload_0
     458: getfield      #17                 // Field clientLogin:Ljava/lang/String;
     461: invokevirtual #57                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setLogin:(Ljava/lang/String;)V
     464: aload_3
     465: aload_0
     466: getfield      #18                 // Field clientPasscode:Ljava/lang/String;
     469: invokevirtual #58                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setPasscode:(Ljava/lang/String;)V
     472: aload_0
     473: invokevirtual #60                 // Method getVirtualHost:()Ljava/lang/String;
     476: ifnull        487
     479: aload_3
     480: aload_0
     481: invokevirtual #60                 // Method getVirtualHost:()Ljava/lang/String;
     484: invokevirtual #61                 // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.setHost:(Ljava/lang/String;)V
     487: new           #103                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     490: dup
     491: aload_0
     492: aload_2
     493: aload_3
     494: invokespecial #143                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler;Ljava/lang/String;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)V
     497: astore        7
     499: aload_0
     500: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     503: aload_2
     504: aload         7
     506: invokeinterface #72,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     511: pop
     512: aload_0
     513: getfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     516: invokevirtual #73                 // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementConnectCount:()V
     519: aload_0
     520: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     523: ifnull        530
     526: iconst_1
     527: goto          531
     530: iconst_0
     531: ldc           #144                // String No TCP client available
     533: invokestatic  #145                // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
     536: aload_0
     537: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
     540: aload         7
     542: invokeinterface #146,  2          // InterfaceMethod org/springframework/messaging/tcp/TcpOperations.connect:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Lorg/springframework/util/concurrent/ListenableFuture;
     547: pop
     548: goto          724
     551: getstatic     #147                // Field org/springframework/messaging/simp/stomp/StompCommand.DISCONNECT:Lorg/springframework/messaging/simp/stomp/StompCommand;
     554: aload         4
     556: invokevirtual #140                // Method org/springframework/messaging/simp/stomp/StompCommand.equals:(Ljava/lang/Object;)Z
     559: ifeq          646
     562: aload_0
     563: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     566: aload_2
     567: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     572: checkcast     #103                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     575: astore        7
     577: aload         7
     579: ifnonnull     628
     582: aload_0
     583: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     586: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     591: ifeq          627
     594: aload_0
     595: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     598: new           #46                 // class java/lang/StringBuilder
     601: dup
     602: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     605: ldc           #148                // String Ignoring DISCONNECT in session
     607: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     610: aload_2
     611: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     614: ldc           #149                // String . Connection already cleaned up.
     616: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     619: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     622: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     627: return
     628: aload_0
     629: getfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
     632: invokevirtual #150                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats.incrementDisconnectCount:()V
     635: aload         7
     637: aload_1
     638: aload_3
     639: invokevirtual #151                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.forward:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)Lorg/springframework/util/concurrent/ListenableFuture;
     642: pop
     643: goto          724
     646: aload_0
     647: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
     650: aload_2
     651: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     656: checkcast     #103                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler
     659: astore        7
     661: aload         7
     663: ifnonnull     716
     666: aload_0
     667: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     670: invokeinterface #65,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
     675: ifeq          715
     678: aload_0
     679: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
     682: new           #46                 // class java/lang/StringBuilder
     685: dup
     686: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
     689: ldc           #152                // String No TCP connection for session
     691: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     694: aload_2
     695: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     698: ldc           #130                // String  in
     700: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     703: aload_1
     704: invokevirtual #121                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     707: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     710: invokeinterface #68,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
     715: return
     716: aload         7
     718: aload_1
     719: aload_3
     720: invokevirtual #151                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$StompConnectionHandler.forward:(Lorg/springframework/messaging/Message;Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;)Lorg/springframework/util/concurrent/ListenableFuture;
     723: pop
     724: return

  public java.lang.String toString();
    Code:
       0: new           #46                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #153                // String StompBrokerRelay[
       9: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: invokespecial #1                  // Method getTcpClientInfo:()Ljava/lang/String;
      16: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      19: ldc           #154                // String ]
      21: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private java.lang.String getTcpClientInfo();
    Code:
       0: aload_0
       1: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
       4: ifnull        17
       7: aload_0
       8: getfield      #40                 // Field tcpClient:Lorg/springframework/messaging/tcp/TcpOperations;
      11: invokevirtual #155                // Method java/lang/Object.toString:()Ljava/lang/String;
      14: goto          46
      17: new           #46                 // class java/lang/StringBuilder
      20: dup
      21: invokespecial #47                 // Method java/lang/StringBuilder."<init>":()V
      24: aload_0
      25: getfield      #13                 // Field relayHost:Ljava/lang/String;
      28: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      31: ldc           #156                // String :
      33: invokevirtual #49                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      36: aload_0
      37: getfield      #15                 // Field relayPort:I
      40: invokevirtual #157                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      43: invokevirtual #51                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: areturn

  static org.springframework.messaging.MessageChannel access$300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler, java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #10                 // Method getClientOutboundChannelForSession:(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
       5: areturn

  static org.apache.commons.logging.Log access$400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static byte[] access$600();
    Code:
       0: getstatic     #9                  // Field EMPTY_PAYLOAD:[B
       3: areturn

  static org.apache.commons.logging.Log access$700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler$Stats access$1700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #8                  // Field stats:Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$Stats;
       4: areturn

  static org.apache.commons.logging.Log access$1800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$1900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.springframework.util.concurrent.ListenableFutureTask access$2400();
    Code:
       0: getstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
       3: areturn

  static org.apache.commons.logging.Log access$2500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$2800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static java.util.Map access$3700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #6                  // Field connectionHandlers:Ljava/util/Map;
       4: areturn

  static org.apache.commons.logging.Log access$3800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$3900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.springframework.messaging.Message access$4000();
    Code:
       0: getstatic     #5                  // Field HEARTBEAT_MESSAGE:Lorg/springframework/messaging/Message;
       3: areturn

  static org.apache.commons.logging.Log access$4200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static void access$4400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #4                  // Method publishBrokerAvailableEvent:()V
       4: return

  static org.apache.commons.logging.Log access$4500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4600(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4700(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4800(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$4900(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5000(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5100(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static org.apache.commons.logging.Log access$5200(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: getfield      #3                  // Field logger:Lorg/apache/commons/logging/Log;
       4: areturn

  static void access$5300(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method publishBrokerUnavailableEvent:()V
       4: return

  static void access$5400(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method publishBrokerUnavailableEvent:()V
       4: return

  static java.lang.String access$5500(org.springframework.messaging.simp.stomp.StompBrokerRelayMessageHandler);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method getTcpClientInfo:()Ljava/lang/String;
       4: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #9                  // Field EMPTY_PAYLOAD:[B
       6: new           #158                // class org/springframework/util/concurrent/ListenableFutureTask
       9: dup
      10: new           #159                // class org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$VoidCallable
      13: dup
      14: aconst_null
      15: invokespecial #160                // Method org/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$VoidCallable."<init>":(Lorg/springframework/messaging/simp/stomp/StompBrokerRelayMessageHandler$1;)V
      18: invokespecial #161                // Method org/springframework/util/concurrent/ListenableFutureTask."<init>":(Ljava/util/concurrent/Callable;)V
      21: putstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
      24: getstatic     #7                  // Field EMPTY_TASK:Lorg/springframework/util/concurrent/ListenableFutureTask;
      27: invokevirtual #162                // Method org/springframework/util/concurrent/ListenableFutureTask.run:()V
      30: invokestatic  #163                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.createForHeartbeat:()Lorg/springframework/messaging/simp/stomp/StompHeaderAccessor;
      33: astore_0
      34: getstatic     #164                // Field org/springframework/messaging/simp/stomp/StompDecoder.HEARTBEAT_PAYLOAD:[B
      37: aload_0
      38: invokevirtual #113                // Method org/springframework/messaging/simp/stomp/StompHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      41: invokestatic  #115                // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      44: putstatic     #5                  // Field HEARTBEAT_MESSAGE:Lorg/springframework/messaging/Message;
      47: return
}
