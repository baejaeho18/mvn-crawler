Compiled from "ReactorNettyTcpClient.java"
class org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient$ReactorNettyHandler implements java.util.function.BiFunction<reactor.netty.NettyInbound, reactor.netty.NettyOutbound, org.reactivestreams.Publisher<java.lang.Void>> {
  private final org.springframework.messaging.tcp.TcpConnectionHandler<P> connectionHandler;

  final org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient this$0;

  org.springframework.messaging.tcp.reactor.ReactorNettyTcpClient$ReactorNettyHandler(org.springframework.messaging.tcp.TcpConnectionHandler<P>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
       5: aload_0
       6: invokespecial #3                  // Method java/lang/Object."<init>":()V
       9: aload_0
      10: aload_2
      11: putfield      #4                  // Field connectionHandler:Lorg/springframework/messaging/tcp/TcpConnectionHandler;
      14: return

  public org.reactivestreams.Publisher<java.lang.Void> apply(reactor.netty.NettyInbound, reactor.netty.NettyOutbound);
    Code:
       0: aload_1
       1: aload_0
       2: invokedynamic #5,  0              // InvokeDynamic #0:accept:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient$ReactorNettyHandler;)Ljava/util/function/Consumer;
       7: invokeinterface #6,  2            // InterfaceMethod reactor/netty/NettyInbound.withConnection:(Ljava/util/function/Consumer;)Lreactor/netty/NettyInbound;
      12: pop
      13: invokestatic  #7                  // Method reactor/core/publisher/DirectProcessor.create:()Lreactor/core/publisher/DirectProcessor;
      16: astore_3
      17: new           #8                  // class org/springframework/messaging/tcp/reactor/ReactorNettyTcpConnection
      20: dup
      21: aload_1
      22: aload_2
      23: aload_0
      24: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
      27: invokestatic  #9                  // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$000:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;
      30: aload_3
      31: invokespecial #10                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpConnection."<init>":(Lreactor/netty/NettyInbound;Lreactor/netty/NettyOutbound;Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;Lreactor/core/publisher/DirectProcessor;)V
      34: astore        4
      36: aload_0
      37: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
      40: invokestatic  #11                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$100:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lreactor/core/scheduler/Scheduler;
      43: aload_0
      44: aload         4
      46: invokedynamic #12,  0             // InvokeDynamic #1:run:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient$ReactorNettyHandler;Lorg/springframework/messaging/tcp/TcpConnection;)Ljava/lang/Runnable;
      51: invokeinterface #13,  2           // InterfaceMethod reactor/core/scheduler/Scheduler.schedule:(Ljava/lang/Runnable;)Lreactor/core/Disposable;
      56: pop
      57: aload_1
      58: aload_0
      59: invokedynamic #14,  0             // InvokeDynamic #2:accept:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient$ReactorNettyHandler;)Ljava/util/function/Consumer;
      64: invokeinterface #6,  2            // InterfaceMethod reactor/netty/NettyInbound.withConnection:(Ljava/util/function/Consumer;)Lreactor/netty/NettyInbound;
      69: pop
      70: aload_1
      71: invokeinterface #15,  1           // InterfaceMethod reactor/netty/NettyInbound.receiveObject:()Lreactor/core/publisher/Flux;
      76: ldc           #16                 // class org/springframework/messaging/Message
      78: invokevirtual #17                 // Method reactor/core/publisher/Flux.cast:(Ljava/lang/Class;)Lreactor/core/publisher/Flux;
      81: aload_0
      82: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
      85: invokestatic  #11                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$100:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lreactor/core/scheduler/Scheduler;
      88: bipush        16
      90: invokevirtual #18                 // Method reactor/core/publisher/Flux.publishOn:(Lreactor/core/scheduler/Scheduler;I)Lreactor/core/publisher/Flux;
      93: aload_0
      94: getfield      #4                  // Field connectionHandler:Lorg/springframework/messaging/tcp/TcpConnectionHandler;
      97: dup
      98: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     101: pop
     102: invokedynamic #20,  0             // InvokeDynamic #3:accept:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Ljava/util/function/Consumer;
     107: aload_0
     108: getfield      #4                  // Field connectionHandler:Lorg/springframework/messaging/tcp/TcpConnectionHandler;
     111: dup
     112: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     115: pop
     116: invokedynamic #21,  0             // InvokeDynamic #4:accept:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Ljava/util/function/Consumer;
     121: aload_0
     122: getfield      #4                  // Field connectionHandler:Lorg/springframework/messaging/tcp/TcpConnectionHandler;
     125: dup
     126: invokevirtual #19                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     129: pop
     130: invokedynamic #22,  0             // InvokeDynamic #5:run:(Lorg/springframework/messaging/tcp/TcpConnectionHandler;)Ljava/lang/Runnable;
     135: invokevirtual #23                 // Method reactor/core/publisher/Flux.subscribe:(Ljava/util/function/Consumer;Ljava/util/function/Consumer;Ljava/lang/Runnable;)Lreactor/core/Disposable;
     138: pop
     139: aload_3
     140: areturn

  public java.lang.Object apply(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #24                 // class reactor/netty/NettyInbound
       5: aload_2
       6: checkcast     #25                 // class reactor/netty/NettyOutbound
       9: invokevirtual #26                 // Method apply:(Lreactor/netty/NettyInbound;Lreactor/netty/NettyOutbound;)Lorg/reactivestreams/Publisher;
      12: areturn

  private void lambda$apply$2(reactor.netty.Connection);
    Code:
       0: aload_1
       1: new           #27                 // class org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient$StompMessageDecoder
       4: dup
       5: aload_0
       6: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
       9: invokestatic  #9                  // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$000:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;
      12: invokespecial #28                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient$StompMessageDecoder."<init>":(Lorg/springframework/messaging/tcp/reactor/ReactorNettyCodec;)V
      15: invokeinterface #29,  2           // InterfaceMethod reactor/netty/Connection.addHandler:(Lio/netty/channel/ChannelHandler;)Lreactor/netty/Connection;
      20: pop
      21: return

  private void lambda$apply$1(org.springframework.messaging.tcp.TcpConnection);
    Code:
       0: aload_0
       1: getfield      #4                  // Field connectionHandler:Lorg/springframework/messaging/tcp/TcpConnectionHandler;
       4: aload_1
       5: invokeinterface #30,  2           // InterfaceMethod org/springframework/messaging/tcp/TcpConnectionHandler.afterConnected:(Lorg/springframework/messaging/tcp/TcpConnection;)V
      10: return

  private void lambda$apply$0(reactor.netty.Connection);
    Code:
       0: aload_0
       1: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
       4: invokestatic  #31                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$200:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lorg/apache/commons/logging/Log;
       7: invokeinterface #32,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      12: ifeq          51
      15: aload_0
      16: getfield      #2                  // Field this$0:Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;
      19: invokestatic  #31                 // Method org/springframework/messaging/tcp/reactor/ReactorNettyTcpClient.access$200:(Lorg/springframework/messaging/tcp/reactor/ReactorNettyTcpClient;)Lorg/apache/commons/logging/Log;
      22: new           #33                 // class java/lang/StringBuilder
      25: dup
      26: invokespecial #34                 // Method java/lang/StringBuilder."<init>":()V
      29: ldc           #35                 // String Connected to
      31: invokevirtual #36                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      34: aload_1
      35: invokeinterface #37,  1           // InterfaceMethod reactor/netty/Connection.address:()Ljava/net/InetSocketAddress;
      40: invokevirtual #38                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      43: invokevirtual #39                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      46: invokeinterface #40,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      51: return
}
