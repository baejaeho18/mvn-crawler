Compiled from "MessageBuilder.java"
public final class org.springframework.messaging.support.MessageBuilder<T> {
  private final T payload;

  private final org.springframework.messaging.Message<T> originalMessage;

  private org.springframework.messaging.support.MessageHeaderAccessor headerAccessor;

  private org.springframework.messaging.support.MessageBuilder(org.springframework.messaging.Message<T>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #2                  // String Message must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_0
      11: aload_1
      12: invokeinterface #4,  1            // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      17: putfield      #5                  // Field payload:Ljava/lang/Object;
      20: aload_0
      21: aload_1
      22: putfield      #6                  // Field originalMessage:Lorg/springframework/messaging/Message;
      25: aload_0
      26: new           #7                  // class org/springframework/messaging/support/MessageHeaderAccessor
      29: dup
      30: aload_1
      31: invokespecial #8                  // Method org/springframework/messaging/support/MessageHeaderAccessor."<init>":(Lorg/springframework/messaging/Message;)V
      34: putfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      37: return

  private org.springframework.messaging.support.MessageBuilder(T, org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_1
       5: ldc           #10                 // String Payload must not be null
       7: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      10: aload_2
      11: ldc           #11                 // String MessageHeaderAccessor must not be null
      13: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      16: aload_0
      17: aload_1
      18: putfield      #5                  // Field payload:Ljava/lang/Object;
      21: aload_0
      22: aconst_null
      23: putfield      #6                  // Field originalMessage:Lorg/springframework/messaging/Message;
      26: aload_0
      27: aload_2
      28: putfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      31: return

  public org.springframework.messaging.support.MessageBuilder<T> setHeaders(org.springframework.messaging.support.MessageHeaderAccessor);
    Code:
       0: aload_1
       1: ldc           #11                 // String MessageHeaderAccessor must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      11: aload_0
      12: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setHeader(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: aload_2
       6: invokevirtual #12                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
       9: aload_0
      10: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setHeaderIfAbsent(java.lang.String, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: aload_2
       6: invokevirtual #13                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setHeaderIfAbsent:(Ljava/lang/String;Ljava/lang/Object;)V
       9: aload_0
      10: areturn

  public org.springframework.messaging.support.MessageBuilder<T> removeHeaders(java.lang.String...);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #14                 // Method org/springframework/messaging/support/MessageHeaderAccessor.removeHeaders:([Ljava/lang/String;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> removeHeader(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #15                 // Method org/springframework/messaging/support/MessageHeaderAccessor.removeHeader:(Ljava/lang/String;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> copyHeaders(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #16                 // Method org/springframework/messaging/support/MessageHeaderAccessor.copyHeaders:(Ljava/util/Map;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> copyHeadersIfAbsent(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #17                 // Method org/springframework/messaging/support/MessageHeaderAccessor.copyHeadersIfAbsent:(Ljava/util/Map;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setReplyChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #18                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setReplyChannel:(Lorg/springframework/messaging/MessageChannel;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setReplyChannelName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #19                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setReplyChannelName:(Ljava/lang/String;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setErrorChannel(org.springframework.messaging.MessageChannel);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #20                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setErrorChannel:(Lorg/springframework/messaging/MessageChannel;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.support.MessageBuilder<T> setErrorChannelName(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: aload_1
       5: invokevirtual #21                 // Method org/springframework/messaging/support/MessageHeaderAccessor.setErrorChannelName:(Ljava/lang/String;)V
       8: aload_0
       9: areturn

  public org.springframework.messaging.Message<T> build();
    Code:
       0: aload_0
       1: getfield      #6                  // Field originalMessage:Lorg/springframework/messaging/Message;
       4: ifnull        22
       7: aload_0
       8: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      11: invokevirtual #22                 // Method org/springframework/messaging/support/MessageHeaderAccessor.isModified:()Z
      14: ifne          22
      17: aload_0
      18: getfield      #6                  // Field originalMessage:Lorg/springframework/messaging/Message;
      21: areturn
      22: aload_0
      23: getfield      #9                  // Field headerAccessor:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      26: invokevirtual #23                 // Method org/springframework/messaging/support/MessageHeaderAccessor.toMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      29: astore_1
      30: aload_0
      31: getfield      #5                  // Field payload:Ljava/lang/Object;
      34: instanceof    #24                 // class java/lang/Throwable
      37: ifeq          56
      40: new           #25                 // class org/springframework/messaging/support/ErrorMessage
      43: dup
      44: aload_0
      45: getfield      #5                  // Field payload:Ljava/lang/Object;
      48: checkcast     #24                 // class java/lang/Throwable
      51: aload_1
      52: invokespecial #26                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;)V
      55: areturn
      56: new           #27                 // class org/springframework/messaging/support/GenericMessage
      59: dup
      60: aload_0
      61: getfield      #5                  // Field payload:Ljava/lang/Object;
      64: aload_1
      65: invokespecial #28                 // Method org/springframework/messaging/support/GenericMessage."<init>":(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V
      68: areturn

  public static <T> org.springframework.messaging.support.MessageBuilder<T> fromMessage(org.springframework.messaging.Message<T>);
    Code:
       0: new           #29                 // class org/springframework/messaging/support/MessageBuilder
       3: dup
       4: aload_0
       5: invokespecial #30                 // Method "<init>":(Lorg/springframework/messaging/Message;)V
       8: areturn

  public static <T> org.springframework.messaging.support.MessageBuilder<T> withPayload(T);
    Code:
       0: new           #29                 // class org/springframework/messaging/support/MessageBuilder
       3: dup
       4: aload_0
       5: new           #7                  // class org/springframework/messaging/support/MessageHeaderAccessor
       8: dup
       9: invokespecial #31                 // Method org/springframework/messaging/support/MessageHeaderAccessor."<init>":()V
      12: invokespecial #32                 // Method "<init>":(Ljava/lang/Object;Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      15: areturn

  public static <T> org.springframework.messaging.Message<T> createMessage(T, org.springframework.messaging.MessageHeaders);
    Code:
       0: aload_0
       1: ldc           #10                 // String Payload must not be null
       3: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_1
       7: ldc           #33                 // String MessageHeaders must not be null
       9: invokestatic  #3                  // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: instanceof    #24                 // class java/lang/Throwable
      16: ifeq          32
      19: new           #25                 // class org/springframework/messaging/support/ErrorMessage
      22: dup
      23: aload_0
      24: checkcast     #24                 // class java/lang/Throwable
      27: aload_1
      28: invokespecial #26                 // Method org/springframework/messaging/support/ErrorMessage."<init>":(Ljava/lang/Throwable;Lorg/springframework/messaging/MessageHeaders;)V
      31: areturn
      32: new           #27                 // class org/springframework/messaging/support/GenericMessage
      35: dup
      36: aload_0
      37: aload_1
      38: invokespecial #28                 // Method org/springframework/messaging/support/GenericMessage."<init>":(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)V
      41: areturn
}
