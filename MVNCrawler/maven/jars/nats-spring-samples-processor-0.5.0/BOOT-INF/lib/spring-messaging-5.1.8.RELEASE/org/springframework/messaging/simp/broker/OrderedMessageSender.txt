Compiled from "OrderedMessageSender.java"
class org.springframework.messaging.simp.broker.OrderedMessageSender implements org.springframework.messaging.MessageChannel {
  static final java.lang.String COMPLETION_TASK_HEADER;

  private final org.springframework.messaging.MessageChannel channel;

  private final org.apache.commons.logging.Log logger;

  private final java.util.Queue<org.springframework.messaging.Message<?>> messages;

  private final java.util.concurrent.atomic.AtomicBoolean sendInProgress;

  public org.springframework.messaging.simp.broker.OrderedMessageSender(org.springframework.messaging.MessageChannel, org.apache.commons.logging.Log);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/concurrent/ConcurrentLinkedQueue
       8: dup
       9: invokespecial #3                  // Method java/util/concurrent/ConcurrentLinkedQueue."<init>":()V
      12: putfield      #4                  // Field messages:Ljava/util/Queue;
      15: aload_0
      16: new           #5                  // class java/util/concurrent/atomic/AtomicBoolean
      19: dup
      20: iconst_0
      21: invokespecial #6                  // Method java/util/concurrent/atomic/AtomicBoolean."<init>":(Z)V
      24: putfield      #7                  // Field sendInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      27: aload_0
      28: aload_1
      29: putfield      #8                  // Field channel:Lorg/springframework/messaging/MessageChannel;
      32: aload_0
      33: aload_2
      34: putfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      37: return

  public boolean send(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc2_w        #10                 // long -1l
       5: invokevirtual #12                 // Method send:(Lorg/springframework/messaging/Message;J)Z
       8: ireturn

  public boolean send(org.springframework.messaging.Message<?>, long);
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/util/Queue;
       4: aload_1
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Queue.add:(Ljava/lang/Object;)Z
      10: pop
      11: aload_0
      12: invokespecial #14                 // Method trySend:()V
      15: iconst_1
      16: ireturn

  private void trySend();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/util/Queue;
       4: invokeinterface #15,  1           // InterfaceMethod java/util/Queue.isEmpty:()Z
       9: ifeq          13
      12: return
      13: aload_0
      14: getfield      #7                  // Field sendInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      17: iconst_0
      18: iconst_1
      19: invokevirtual #16                 // Method java/util/concurrent/atomic/AtomicBoolean.compareAndSet:(ZZ)Z
      22: ifeq          29
      25: aload_0
      26: invokespecial #17                 // Method sendNextMessage:()V
      29: return

  private void sendNextMessage();
    Code:
       0: aload_0
       1: getfield      #4                  // Field messages:Ljava/util/Queue;
       4: invokeinterface #18,  1           // InterfaceMethod java/util/Queue.poll:()Ljava/lang/Object;
       9: checkcast     #19                 // class org/springframework/messaging/Message
      12: astore_1
      13: aload_1
      14: ifnull        84
      17: aload_0
      18: aload_1
      19: invokespecial #20                 // Method addCompletionCallback:(Lorg/springframework/messaging/Message;)V
      22: aload_0
      23: getfield      #8                  // Field channel:Lorg/springframework/messaging/MessageChannel;
      26: aload_1
      27: invokeinterface #21,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      32: ifeq          36
      35: return
      36: goto          99
      39: astore_2
      40: aload_0
      41: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      44: invokeinterface #23,  1           // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
      49: ifeq          81
      52: aload_0
      53: getfield      #9                  // Field logger:Lorg/apache/commons/logging/Log;
      56: new           #24                 // class java/lang/StringBuilder
      59: dup
      60: invokespecial #25                 // Method java/lang/StringBuilder."<init>":()V
      63: ldc           #26                 // String Failed to send
      65: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      68: aload_1
      69: invokevirtual #28                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      72: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      75: aload_2
      76: invokeinterface #30,  3           // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
      81: goto          99
      84: aload_0
      85: getfield      #7                  // Field sendInProgress:Ljava/util/concurrent/atomic/AtomicBoolean;
      88: iconst_0
      89: invokevirtual #31                 // Method java/util/concurrent/atomic/AtomicBoolean.set:(Z)V
      92: aload_0
      93: invokespecial #14                 // Method trySend:()V
      96: goto          102
      99: goto          0
     102: return
    Exception table:
       from    to  target type
          17    35    39   Class java/lang/Throwable

  private void addCompletionCallback(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: ldc           #32                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
       3: invokestatic  #33                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
       6: checkcast     #32                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
       9: astore_2
      10: aload_2
      11: ifnull        25
      14: aload_2
      15: invokevirtual #34                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.isMutable:()Z
      18: ifeq          25
      21: iconst_1
      22: goto          26
      25: iconst_0
      26: ldc           #35                 // String Expected mutable SimpMessageHeaderAccessor
      28: invokestatic  #36                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      31: aload_2
      32: ldc           #38                 // String simpSendCompletionTask
      34: aload_0
      35: invokedynamic #39,  0             // InvokeDynamic #0:run:(Lorg/springframework/messaging/simp/broker/OrderedMessageSender;)Ljava/lang/Runnable;
      40: invokevirtual #40                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      43: return

  static void configureOutboundChannel(org.springframework.messaging.MessageChannel, boolean);
    Code:
       0: iload_1
       1: ifeq          55
       4: ldc           #41                 // class org/springframework/messaging/support/ExecutorSubscribableChannel
       6: aload_0
       7: ldc           #42                 // String An ExecutorSubscribableChannel is required for `preservePublishOrder`
       9: invokestatic  #43                 // Method org/springframework/util/Assert.isInstanceOf:(Ljava/lang/Class;Ljava/lang/Object;Ljava/lang/String;)V
      12: aload_0
      13: checkcast     #41                 // class org/springframework/messaging/support/ExecutorSubscribableChannel
      16: astore_2
      17: aload_2
      18: invokevirtual #44                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.getInterceptors:()Ljava/util/List;
      21: invokeinterface #45,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      26: invokedynamic #46,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      31: invokeinterface #47,  2           // InterfaceMethod java/util/stream/Stream.noneMatch:(Ljava/util/function/Predicate;)Z
      36: ifeq          52
      39: aload_2
      40: iconst_0
      41: new           #48                 // class org/springframework/messaging/simp/broker/OrderedMessageSender$CallbackInterceptor
      44: dup
      45: aconst_null
      46: invokespecial #49                 // Method org/springframework/messaging/simp/broker/OrderedMessageSender$CallbackInterceptor."<init>":(Lorg/springframework/messaging/simp/broker/OrderedMessageSender$1;)V
      49: invokevirtual #50                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.addInterceptor:(ILorg/springframework/messaging/support/ChannelInterceptor;)V
      52: goto          106
      55: aload_0
      56: instanceof    #41                 // class org/springframework/messaging/support/ExecutorSubscribableChannel
      59: ifeq          106
      62: aload_0
      63: checkcast     #41                 // class org/springframework/messaging/support/ExecutorSubscribableChannel
      66: astore_2
      67: aload_2
      68: invokevirtual #44                 // Method org/springframework/messaging/support/ExecutorSubscribableChannel.getInterceptors:()Ljava/util/List;
      71: invokeinterface #45,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
      76: invokedynamic #51,  0             // InvokeDynamic #2:test:()Ljava/util/function/Predicate;
      81: invokeinterface #52,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      86: invokeinterface #53,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      91: aload_2
      92: dup
      93: invokevirtual #54                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      96: pop
      97: invokedynamic #55,  0             // InvokeDynamic #3:apply:(Lorg/springframework/messaging/support/ExecutorSubscribableChannel;)Ljava/util/function/Function;
     102: invokevirtual #56                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
     105: pop
     106: return

  private static boolean lambda$configureOutboundChannel$1(org.springframework.messaging.support.ChannelInterceptor);
    Code:
       0: aload_0
       1: instanceof    #48                 // class org/springframework/messaging/simp/broker/OrderedMessageSender$CallbackInterceptor
       4: ireturn

  private static boolean lambda$configureOutboundChannel$0(org.springframework.messaging.support.ChannelInterceptor);
    Code:
       0: aload_0
       1: instanceof    #48                 // class org/springframework/messaging/simp/broker/OrderedMessageSender$CallbackInterceptor
       4: ireturn
}
