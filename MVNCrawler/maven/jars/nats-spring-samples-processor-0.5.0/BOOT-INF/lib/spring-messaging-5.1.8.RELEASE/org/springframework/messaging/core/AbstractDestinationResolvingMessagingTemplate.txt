Compiled from "AbstractDestinationResolvingMessagingTemplate.java"
public abstract class org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate<D> extends org.springframework.messaging.core.AbstractMessagingTemplate<D> implements org.springframework.messaging.core.DestinationResolvingMessageSendingOperations<D>, org.springframework.messaging.core.DestinationResolvingMessageReceivingOperations<D>, org.springframework.messaging.core.DestinationResolvingMessageRequestReplyOperations<D> {
  private org.springframework.messaging.core.DestinationResolver<D> destinationResolver;

  public org.springframework.messaging.core.AbstractDestinationResolvingMessagingTemplate();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/springframework/messaging/core/AbstractMessagingTemplate."<init>":()V
       4: return

  public void setDestinationResolver(org.springframework.messaging.core.DestinationResolver<D>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #2                  // Field destinationResolver:Lorg/springframework/messaging/core/DestinationResolver;
       5: return

  public org.springframework.messaging.core.DestinationResolver<D> getDestinationResolver();
    Code:
       0: aload_0
       1: getfield      #2                  // Field destinationResolver:Lorg/springframework/messaging/core/DestinationResolver;
       4: areturn

  public void send(java.lang.String, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_2
       9: invokevirtual #4                  // Method doSend:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)V
      12: return

  protected final D resolveDestination(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #2                  // Field destinationResolver:Lorg/springframework/messaging/core/DestinationResolver;
       4: ifnull        11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ldc           #5                  // String DestinationResolver is required to resolve destination names
      14: invokestatic  #6                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      17: aload_0
      18: getfield      #2                  // Field destinationResolver:Lorg/springframework/messaging/core/DestinationResolver;
      21: aload_1
      22: invokeinterface #7,  2            // InterfaceMethod org/springframework/messaging/core/DestinationResolver.resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
      27: areturn

  public <T> void convertAndSend(java.lang.String, T);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aconst_null
       5: invokevirtual #8                  // Method convertAndSend:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
       8: return

  public <T> void convertAndSend(java.lang.String, T, java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aconst_null
       5: invokevirtual #8                  // Method convertAndSend:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
       8: return

  public <T> void convertAndSend(java.lang.String, T, org.springframework.messaging.core.MessagePostProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokevirtual #8                  // Method convertAndSend:(Ljava/lang/String;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
       8: return

  public <T> void convertAndSend(java.lang.String, T, java.util.Map<java.lang.String, java.lang.Object>, org.springframework.messaging.core.MessagePostProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        5
       7: aload_0
       8: aload         5
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokespecial #9                  // Method org/springframework/messaging/core/AbstractMessagingTemplate.convertAndSend:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Lorg/springframework/messaging/core/MessagePostProcessor;)V
      17: return

  public org.springframework.messaging.Message<?> receive(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_2
       6: aload_0
       7: aload_2
       8: invokespecial #10                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.receive:(Ljava/lang/Object;)Lorg/springframework/messaging/Message;
      11: areturn

  public <T> T receiveAndConvert(java.lang.String, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_2
       9: invokespecial #11                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.receiveAndConvert:(Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      12: areturn

  public org.springframework.messaging.Message<?> sendAndReceive(java.lang.String, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore_3
       6: aload_0
       7: aload_3
       8: aload_2
       9: invokespecial #12                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.sendAndReceive:(Ljava/lang/Object;Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/Message;
      12: areturn

  public <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        4
       7: aload_0
       8: aload         4
      10: aload_2
      11: aload_3
      12: invokespecial #13                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.convertSendAndReceive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)Ljava/lang/Object;
      15: areturn

  public <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        5
       7: aload_0
       8: aload         5
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokespecial #14                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.convertSendAndReceive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;)Ljava/lang/Object;
      17: areturn

  public <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        5
       7: aload_0
       8: aload         5
      10: aload_2
      11: aload_3
      12: aload         4
      14: invokespecial #15                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.convertSendAndReceive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
      17: areturn

  public <T> T convertSendAndReceive(java.lang.String, java.lang.Object, java.util.Map<java.lang.String, java.lang.Object>, java.lang.Class<T>, org.springframework.messaging.core.MessagePostProcessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #3                  // Method resolveDestination:(Ljava/lang/String;)Ljava/lang/Object;
       5: astore        6
       7: aload_0
       8: aload         6
      10: aload_2
      11: aload_3
      12: aload         4
      14: aload         5
      16: invokespecial #16                 // Method org/springframework/messaging/core/AbstractMessagingTemplate.convertSendAndReceive:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Map;Ljava/lang/Class;Lorg/springframework/messaging/core/MessagePostProcessor;)Ljava/lang/Object;
      19: areturn
}
