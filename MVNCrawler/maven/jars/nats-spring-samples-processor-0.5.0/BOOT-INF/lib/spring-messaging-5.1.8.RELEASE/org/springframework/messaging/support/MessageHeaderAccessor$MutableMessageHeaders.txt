Compiled from "MessageHeaderAccessor.java"
class org.springframework.messaging.support.MessageHeaderAccessor$MutableMessageHeaders extends org.springframework.messaging.MessageHeaders {
  private boolean mutable;

  final org.springframework.messaging.support.MessageHeaderAccessor this$0;

  public org.springframework.messaging.support.MessageHeaderAccessor$MutableMessageHeaders(java.util.Map<java.lang.String, java.lang.Object>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       5: aload_0
       6: aload_2
       7: getstatic     #2                  // Field org/springframework/messaging/MessageHeaders.ID_VALUE_NONE:Ljava/util/UUID;
      10: ldc2_w        #3                  // long -1l
      13: invokestatic  #5                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      16: invokespecial #6                  // Method org/springframework/messaging/MessageHeaders."<init>":(Ljava/util/Map;Ljava/util/UUID;Ljava/lang/Long;)V
      19: aload_0
      20: iconst_1
      21: putfield      #7                  // Field mutable:Z
      24: return

  public java.util.Map<java.lang.String, java.lang.Object> getRawHeaders();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mutable:Z
       4: ldc           #8                  // String Already immutable
       6: invokestatic  #9                  // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
       9: aload_0
      10: invokespecial #10                 // Method org/springframework/messaging/MessageHeaders.getRawHeaders:()Ljava/util/Map;
      13: areturn

  public void setImmutable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mutable:Z
       4: ifne          8
       7: return
       8: aload_0
       9: invokevirtual #11                 // Method getId:()Ljava/util/UUID;
      12: ifnonnull     66
      15: aload_0
      16: getfield      #1                  // Field this$0:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      19: invokestatic  #12                 // Method org/springframework/messaging/support/MessageHeaderAccessor.access$000:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Lorg/springframework/util/IdGenerator;
      22: ifnull        35
      25: aload_0
      26: getfield      #1                  // Field this$0:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      29: invokestatic  #12                 // Method org/springframework/messaging/support/MessageHeaderAccessor.access$000:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Lorg/springframework/util/IdGenerator;
      32: goto          38
      35: invokestatic  #13                 // Method org/springframework/messaging/MessageHeaders.getIdGenerator:()Lorg/springframework/util/IdGenerator;
      38: astore_1
      39: aload_1
      40: invokeinterface #14,  1           // InterfaceMethod org/springframework/util/IdGenerator.generateId:()Ljava/util/UUID;
      45: astore_2
      46: aload_2
      47: getstatic     #2                  // Field org/springframework/messaging/MessageHeaders.ID_VALUE_NONE:Ljava/util/UUID;
      50: if_acmpeq     66
      53: aload_0
      54: invokevirtual #15                 // Method getRawHeaders:()Ljava/util/Map;
      57: ldc           #17                 // String id
      59: aload_2
      60: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      65: pop
      66: aload_0
      67: invokevirtual #19                 // Method getTimestamp:()Ljava/lang/Long;
      70: ifnonnull     101
      73: aload_0
      74: getfield      #1                  // Field this$0:Lorg/springframework/messaging/support/MessageHeaderAccessor;
      77: invokestatic  #20                 // Method org/springframework/messaging/support/MessageHeaderAccessor.access$100:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)Z
      80: ifeq          101
      83: aload_0
      84: invokevirtual #15                 // Method getRawHeaders:()Ljava/util/Map;
      87: ldc           #21                 // String timestamp
      89: invokestatic  #22                 // Method java/lang/System.currentTimeMillis:()J
      92: invokestatic  #5                  // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
      95: invokeinterface #18,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: aload_0
     102: iconst_0
     103: putfield      #7                  // Field mutable:Z
     106: return

  public boolean isMutable();
    Code:
       0: aload_0
       1: getfield      #7                  // Field mutable:Z
       4: ireturn

  public org.springframework.messaging.support.MessageHeaderAccessor getAccessor();
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lorg/springframework/messaging/support/MessageHeaderAccessor;
       4: areturn

  protected java.lang.Object writeReplace();
    Code:
       0: new           #16                 // class org/springframework/messaging/MessageHeaders
       3: dup
       4: aload_0
       5: invokespecial #23                 // Method org/springframework/messaging/MessageHeaders."<init>":(Ljava/util/Map;)V
       8: areturn
}
