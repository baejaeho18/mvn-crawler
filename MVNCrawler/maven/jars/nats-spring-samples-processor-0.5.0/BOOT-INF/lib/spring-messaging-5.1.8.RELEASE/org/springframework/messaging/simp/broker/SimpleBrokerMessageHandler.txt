Compiled from "SimpleBrokerMessageHandler.java"
public class org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler extends org.springframework.messaging.simp.broker.AbstractBrokerMessageHandler {
  private static final byte[] EMPTY_PAYLOAD;

  private org.springframework.util.PathMatcher pathMatcher;

  private java.lang.Integer cacheLimit;

  private java.lang.String selectorHeaderName;

  private org.springframework.scheduling.TaskScheduler taskScheduler;

  private long[] heartbeatValue;

  private org.springframework.messaging.support.MessageHeaderInitializer headerInitializer;

  private org.springframework.messaging.simp.broker.SubscriptionRegistry subscriptionRegistry;

  private final java.util.Map<java.lang.String, org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler$SessionInfo> sessions;

  private java.util.concurrent.ScheduledFuture<?> heartbeatFuture;

  public org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler(org.springframework.messaging.SubscribableChannel, org.springframework.messaging.MessageChannel, org.springframework.messaging.SubscribableChannel, java.util.Collection<java.lang.String>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: aload         4
       6: invokespecial #5                  // Method org/springframework/messaging/simp/broker/AbstractBrokerMessageHandler."<init>":(Lorg/springframework/messaging/SubscribableChannel;Lorg/springframework/messaging/MessageChannel;Lorg/springframework/messaging/SubscribableChannel;Ljava/util/Collection;)V
       9: aload_0
      10: ldc           #6                  // String selector
      12: putfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
      15: aload_0
      16: new           #8                  // class java/util/concurrent/ConcurrentHashMap
      19: dup
      20: invokespecial #9                  // Method java/util/concurrent/ConcurrentHashMap."<init>":()V
      23: putfield      #4                  // Field sessions:Ljava/util/Map;
      26: aload_0
      27: new           #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      30: dup
      31: invokespecial #11                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry."<init>":()V
      34: putfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      37: return

  public void setSubscriptionRegistry(org.springframework.messaging.simp.broker.SubscriptionRegistry);
    Code:
       0: aload_1
       1: ldc           #13                 // String SubscriptionRegistry must not be null
       3: invokestatic  #14                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
       6: aload_0
       7: aload_1
       8: putfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: aload_0
      12: invokespecial #15                 // Method initPathMatcherToUse:()V
      15: aload_0
      16: invokespecial #16                 // Method initCacheLimitToUse:()V
      19: aload_0
      20: invokespecial #17                 // Method initSelectorHeaderNameToUse:()V
      23: return

  public org.springframework.messaging.simp.broker.SubscriptionRegistry getSubscriptionRegistry();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: areturn

  public void setPathMatcher(org.springframework.util.PathMatcher);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #18                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
       5: aload_0
       6: invokespecial #15                 // Method initPathMatcherToUse:()V
       9: return

  private void initPathMatcherToUse();
    Code:
       0: aload_0
       1: getfield      #18                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
       4: ifnull        31
       7: aload_0
       8: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      14: ifeq          31
      17: aload_0
      18: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      21: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      24: aload_0
      25: getfield      #18                 // Field pathMatcher:Lorg/springframework/util/PathMatcher;
      28: invokevirtual #19                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setPathMatcher:(Lorg/springframework/util/PathMatcher;)V
      31: return

  public void setCacheLimit(java.lang.Integer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #20                 // Field cacheLimit:Ljava/lang/Integer;
       5: aload_0
       6: invokespecial #16                 // Method initCacheLimitToUse:()V
       9: return

  private void initCacheLimitToUse();
    Code:
       0: aload_0
       1: getfield      #20                 // Field cacheLimit:Ljava/lang/Integer;
       4: ifnull        34
       7: aload_0
       8: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      11: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      14: ifeq          34
      17: aload_0
      18: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      21: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      24: aload_0
      25: getfield      #20                 // Field cacheLimit:Ljava/lang/Integer;
      28: invokevirtual #21                 // Method java/lang/Integer.intValue:()I
      31: invokevirtual #22                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setCacheLimit:(I)V
      34: return

  public void setSelectorHeaderName(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
       5: aload_0
       6: invokespecial #17                 // Method initSelectorHeaderNameToUse:()V
       9: return

  private void initSelectorHeaderNameToUse();
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: instanceof    #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
       7: ifeq          24
      10: aload_0
      11: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      14: checkcast     #10                 // class org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry
      17: aload_0
      18: getfield      #7                  // Field selectorHeaderName:Ljava/lang/String;
      21: invokevirtual #23                 // Method org/springframework/messaging/simp/broker/DefaultSubscriptionRegistry.setSelectorHeaderName:(Ljava/lang/String;)V
      24: return

  public void setTaskScheduler(org.springframework.scheduling.TaskScheduler);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #24                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       5: aload_1
       6: ifnull        35
       9: aload_0
      10: getfield      #25                 // Field heartbeatValue:[J
      13: ifnonnull     35
      16: aload_0
      17: iconst_2
      18: newarray       long
      20: dup
      21: iconst_0
      22: ldc2_w        #26                 // long 10000l
      25: lastore
      26: dup
      27: iconst_1
      28: ldc2_w        #26                 // long 10000l
      31: lastore
      32: putfield      #25                 // Field heartbeatValue:[J
      35: return

  public org.springframework.scheduling.TaskScheduler getTaskScheduler();
    Code:
       0: aload_0
       1: getfield      #24                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       4: areturn

  public void setHeartbeatValue(long[]);
    Code:
       0: aload_1
       1: ifnull        56
       4: aload_1
       5: arraylength
       6: iconst_2
       7: if_icmpne     26
      10: aload_1
      11: iconst_0
      12: laload
      13: lconst_0
      14: lcmp
      15: iflt          26
      18: aload_1
      19: iconst_1
      20: laload
      21: lconst_0
      22: lcmp
      23: ifge          56
      26: new           #28                 // class java/lang/IllegalArgumentException
      29: dup
      30: new           #29                 // class java/lang/StringBuilder
      33: dup
      34: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      37: ldc           #31                 // String Invalid heart-beat:
      39: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: aload_1
      43: invokestatic  #33                 // Method java/util/Arrays.toString:([J)Ljava/lang/String;
      46: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      49: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      52: invokespecial #35                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      55: athrow
      56: aload_0
      57: aload_1
      58: putfield      #25                 // Field heartbeatValue:[J
      61: return

  public long[] getHeartbeatValue();
    Code:
       0: aload_0
       1: getfield      #25                 // Field heartbeatValue:[J
       4: areturn

  public void setHeaderInitializer(org.springframework.messaging.support.MessageHeaderInitializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #36                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       5: return

  public org.springframework.messaging.support.MessageHeaderInitializer getHeaderInitializer();
    Code:
       0: aload_0
       1: getfield      #36                 // Field headerInitializer:Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: areturn

  public void startInternal();
    Code:
       0: aload_0
       1: invokevirtual #37                 // Method publishBrokerAvailableEvent:()V
       4: aload_0
       5: getfield      #24                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
       8: ifnull        48
      11: aload_0
      12: invokespecial #38                 // Method initHeartbeatTaskDelay:()J
      15: lstore_1
      16: lload_1
      17: lconst_0
      18: lcmp
      19: ifle          45
      22: aload_0
      23: aload_0
      24: getfield      #24                 // Field taskScheduler:Lorg/springframework/scheduling/TaskScheduler;
      27: new           #39                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$HeartbeatTask
      30: dup
      31: aload_0
      32: aconst_null
      33: invokespecial #40                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$HeartbeatTask."<init>":(Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler;Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$1;)V
      36: lload_1
      37: invokeinterface #41,  4           // InterfaceMethod org/springframework/scheduling/TaskScheduler.scheduleWithFixedDelay:(Ljava/lang/Runnable;J)Ljava/util/concurrent/ScheduledFuture;
      42: putfield      #42                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
      45: goto          87
      48: aload_0
      49: invokevirtual #43                 // Method getHeartbeatValue:()[J
      52: ifnull        77
      55: aload_0
      56: invokevirtual #43                 // Method getHeartbeatValue:()[J
      59: iconst_0
      60: laload
      61: lconst_0
      62: lcmp
      63: ifne          81
      66: aload_0
      67: invokevirtual #43                 // Method getHeartbeatValue:()[J
      70: iconst_1
      71: laload
      72: lconst_0
      73: lcmp
      74: ifne          81
      77: iconst_1
      78: goto          82
      81: iconst_0
      82: ldc           #44                 // String Heartbeat values configured but no TaskScheduler provided
      84: invokestatic  #45                 // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
      87: return

  private long initHeartbeatTaskDelay();
    Code:
       0: aload_0
       1: invokevirtual #43                 // Method getHeartbeatValue:()[J
       4: ifnonnull     9
       7: lconst_0
       8: lreturn
       9: aload_0
      10: invokevirtual #43                 // Method getHeartbeatValue:()[J
      13: iconst_0
      14: laload
      15: lconst_0
      16: lcmp
      17: ifle          47
      20: aload_0
      21: invokevirtual #43                 // Method getHeartbeatValue:()[J
      24: iconst_1
      25: laload
      26: lconst_0
      27: lcmp
      28: ifle          47
      31: aload_0
      32: invokevirtual #43                 // Method getHeartbeatValue:()[J
      35: iconst_0
      36: laload
      37: aload_0
      38: invokevirtual #43                 // Method getHeartbeatValue:()[J
      41: iconst_1
      42: laload
      43: invokestatic  #46                 // Method java/lang/Math.min:(JJ)J
      46: lreturn
      47: aload_0
      48: invokevirtual #43                 // Method getHeartbeatValue:()[J
      51: iconst_0
      52: laload
      53: lconst_0
      54: lcmp
      55: ifle          67
      58: aload_0
      59: invokevirtual #43                 // Method getHeartbeatValue:()[J
      62: iconst_0
      63: laload
      64: goto          73
      67: aload_0
      68: invokevirtual #43                 // Method getHeartbeatValue:()[J
      71: iconst_1
      72: laload
      73: lreturn

  public void stopInternal();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method publishBrokerUnavailableEvent:()V
       4: aload_0
       5: getfield      #42                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
       8: ifnull        22
      11: aload_0
      12: getfield      #42                 // Field heartbeatFuture:Ljava/util/concurrent/ScheduledFuture;
      15: iconst_1
      16: invokeinterface #48,  2           // InterfaceMethod java/util/concurrent/ScheduledFuture.cancel:(Z)Z
      21: pop
      22: return

  protected void handleMessageInternal(org.springframework.messaging.Message<?>);
    Code:
       0: aload_1
       1: invokeinterface #49,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
       6: astore_2
       7: aload_2
       8: invokestatic  #50                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageType:(Ljava/util/Map;)Lorg/springframework/messaging/simp/SimpMessageType;
      11: astore_3
      12: aload_2
      13: invokestatic  #51                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getDestination:(Ljava/util/Map;)Ljava/lang/String;
      16: astore        4
      18: aload_2
      19: invokestatic  #52                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getSessionId:(Ljava/util/Map;)Ljava/lang/String;
      22: astore        5
      24: aload_0
      25: aload         5
      27: invokespecial #53                 // Method updateSessionReadTime:(Ljava/lang/String;)V
      30: aload_0
      31: aload         4
      33: invokevirtual #54                 // Method checkDestinationPrefix:(Ljava/lang/String;)Z
      36: ifne          40
      39: return
      40: getstatic     #55                 // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
      43: aload_3
      44: invokevirtual #56                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
      47: ifeq          65
      50: aload_0
      51: aload_1
      52: invokespecial #57                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
      55: aload_0
      56: aload         4
      58: aload_1
      59: invokevirtual #58                 // Method sendMessageToSubscribers:(Ljava/lang/String;Lorg/springframework/messaging/Message;)V
      62: goto          309
      65: getstatic     #59                 // Field org/springframework/messaging/simp/SimpMessageType.CONNECT:Lorg/springframework/messaging/simp/SimpMessageType;
      68: aload_3
      69: invokevirtual #56                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
      72: ifeq          218
      75: aload_0
      76: aload_1
      77: invokespecial #57                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
      80: aload         5
      82: ifnull        309
      85: aload_2
      86: invokestatic  #60                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getHeartbeat:(Ljava/util/Map;)[J
      89: astore        6
      91: aload_0
      92: invokevirtual #43                 // Method getHeartbeatValue:()[J
      95: astore        7
      97: aload_2
      98: invokestatic  #61                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     101: astore        8
     103: aload_0
     104: aload         5
     106: invokevirtual #62                 // Method getClientOutboundChannelForSession:(Ljava/lang/String;)Lorg/springframework/messaging/MessageChannel;
     109: astore        9
     111: aload_0
     112: getfield      #4                  // Field sessions:Ljava/util/Map;
     115: aload         5
     117: new           #63                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     120: dup
     121: aload         5
     123: aload         8
     125: aload         9
     127: aload         6
     129: aload         7
     131: invokespecial #64                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo."<init>":(Ljava/lang/String;Ljava/security/Principal;Lorg/springframework/messaging/MessageChannel;[J[J)V
     134: invokeinterface #65,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     139: pop
     140: getstatic     #66                 // Field org/springframework/messaging/simp/SimpMessageType.CONNECT_ACK:Lorg/springframework/messaging/simp/SimpMessageType;
     143: invokestatic  #67                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
     146: astore        10
     148: aload_0
     149: aload         10
     151: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
     154: aload         10
     156: aload         5
     158: invokevirtual #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
     161: aload         8
     163: ifnull        173
     166: aload         10
     168: aload         8
     170: invokevirtual #69                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setUser:(Ljava/security/Principal;)V
     173: aload         10
     175: ldc           #71                 // String simpConnectMessage
     177: aload_1
     178: invokevirtual #72                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
     181: aload         10
     183: ldc           #73                 // String simpHeartbeat
     185: aload         7
     187: invokevirtual #72                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
     190: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
     193: aload         10
     195: invokevirtual #74                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
     198: invokestatic  #75                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
     201: astore        11
     203: aload_0
     204: invokevirtual #76                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     207: aload         11
     209: invokeinterface #77,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     214: pop
     215: goto          309
     218: getstatic     #78                 // Field org/springframework/messaging/simp/SimpMessageType.DISCONNECT:Lorg/springframework/messaging/simp/SimpMessageType;
     221: aload_3
     222: invokevirtual #56                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     225: ifeq          256
     228: aload_0
     229: aload_1
     230: invokespecial #57                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     233: aload         5
     235: ifnull        309
     238: aload_2
     239: invokestatic  #61                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getUser:(Ljava/util/Map;)Ljava/security/Principal;
     242: astore        6
     244: aload_0
     245: aload         5
     247: aload         6
     249: aload_1
     250: invokespecial #3                  // Method handleDisconnect:(Ljava/lang/String;Ljava/security/Principal;Lorg/springframework/messaging/Message;)V
     253: goto          309
     256: getstatic     #79                 // Field org/springframework/messaging/simp/SimpMessageType.SUBSCRIBE:Lorg/springframework/messaging/simp/SimpMessageType;
     259: aload_3
     260: invokevirtual #56                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     263: ifeq          284
     266: aload_0
     267: aload_1
     268: invokespecial #57                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     271: aload_0
     272: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
     275: aload_1
     276: invokeinterface #80,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.registerSubscription:(Lorg/springframework/messaging/Message;)V
     281: goto          309
     284: getstatic     #81                 // Field org/springframework/messaging/simp/SimpMessageType.UNSUBSCRIBE:Lorg/springframework/messaging/simp/SimpMessageType;
     287: aload_3
     288: invokevirtual #56                 // Method org/springframework/messaging/simp/SimpMessageType.equals:(Ljava/lang/Object;)Z
     291: ifeq          309
     294: aload_0
     295: aload_1
     296: invokespecial #57                 // Method logMessage:(Lorg/springframework/messaging/Message;)V
     299: aload_0
     300: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
     303: aload_1
     304: invokeinterface #82,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.unregisterSubscription:(Lorg/springframework/messaging/Message;)V
     309: return

  private void updateSessionReadTime(java.lang.String);
    Code:
       0: aload_1
       1: ifnull        29
       4: aload_0
       5: getfield      #4                  // Field sessions:Ljava/util/Map;
       8: aload_1
       9: invokeinterface #83,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      14: checkcast     #63                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
      17: astore_2
      18: aload_2
      19: ifnull        29
      22: aload_2
      23: invokestatic  #84                 // Method java/lang/System.currentTimeMillis:()J
      26: invokevirtual #85                 // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastReadTime:(J)V
      29: return

  private void logMessage(org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
       4: invokeinterface #87,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
       9: ifeq          72
      12: aload_1
      13: ldc           #70                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      15: invokestatic  #88                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/Message;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      18: checkcast     #70                 // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      21: astore_2
      22: aload_2
      23: ifnull        30
      26: aload_2
      27: goto          34
      30: aload_1
      31: invokestatic  #89                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.wrap:(Lorg/springframework/messaging/Message;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
      34: astore_2
      35: aload_0
      36: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
      39: new           #29                 // class java/lang/StringBuilder
      42: dup
      43: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      46: ldc           #90                 // String Processing
      48: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: aload_2
      52: aload_1
      53: invokeinterface #91,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      58: invokevirtual #92                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getShortLogMessage:(Ljava/lang/Object;)Ljava/lang/String;
      61: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      67: invokeinterface #93,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      72: return

  private void initHeaders(org.springframework.messaging.simp.SimpMessageHeaderAccessor);
    Code:
       0: aload_0
       1: invokevirtual #94                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
       4: ifnull        17
       7: aload_0
       8: invokevirtual #94                 // Method getHeaderInitializer:()Lorg/springframework/messaging/support/MessageHeaderInitializer;
      11: aload_1
      12: invokeinterface #95,  2           // InterfaceMethod org/springframework/messaging/support/MessageHeaderInitializer.initHeaders:(Lorg/springframework/messaging/support/MessageHeaderAccessor;)V
      17: return

  private void handleDisconnect(java.lang.String, java.security.Principal, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessions:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #96,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: pop
      11: aload_0
      12: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      15: aload_1
      16: invokeinterface #97,  2           // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.unregisterAllSubscriptions:(Ljava/lang/String;)V
      21: getstatic     #98                 // Field org/springframework/messaging/simp/SimpMessageType.DISCONNECT_ACK:Lorg/springframework/messaging/simp/SimpMessageType;
      24: invokestatic  #67                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
      27: astore        4
      29: aload         4
      31: aload_1
      32: invokevirtual #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      35: aload_2
      36: ifnull        45
      39: aload         4
      41: aload_2
      42: invokevirtual #69                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setUser:(Ljava/security/Principal;)V
      45: aload_3
      46: ifnull        57
      49: aload         4
      51: ldc           #99                 // String simpDisconnectMessage
      53: aload_3
      54: invokevirtual #72                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setHeader:(Ljava/lang/String;Ljava/lang/Object;)V
      57: aload_0
      58: aload         4
      60: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
      63: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
      66: aload         4
      68: invokevirtual #74                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      71: invokestatic  #75                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      74: astore        5
      76: aload_0
      77: invokevirtual #76                 // Method getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
      80: aload         5
      82: invokeinterface #77,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
      87: pop
      88: return

  protected void sendMessageToSubscribers(java.lang.String, org.springframework.messaging.Message<?>);
    Code:
       0: aload_0
       1: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
       4: aload_2
       5: invokeinterface #100,  2          // InterfaceMethod org/springframework/messaging/simp/broker/SubscriptionRegistry.findSubscriptions:(Lorg/springframework/messaging/Message;)Lorg/springframework/util/MultiValueMap;
      10: astore_3
      11: aload_3
      12: invokeinterface #101,  1          // InterfaceMethod org/springframework/util/MultiValueMap.isEmpty:()Z
      17: ifne          70
      20: aload_0
      21: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
      24: invokeinterface #87,  1           // InterfaceMethod org/apache/commons/logging/Log.isDebugEnabled:()Z
      29: ifeq          70
      32: aload_0
      33: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
      36: new           #29                 // class java/lang/StringBuilder
      39: dup
      40: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
      43: ldc           #102                // String Broadcasting to
      45: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      48: aload_3
      49: invokeinterface #103,  1          // InterfaceMethod org/springframework/util/MultiValueMap.size:()I
      54: invokevirtual #104                // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: ldc           #105                // String  sessions.
      59: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      62: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      65: invokeinterface #93,  2           // InterfaceMethod org/apache/commons/logging/Log.debug:(Ljava/lang/Object;)V
      70: invokestatic  #84                 // Method java/lang/System.currentTimeMillis:()J
      73: lstore        4
      75: aload_3
      76: aload_0
      77: aload_2
      78: lload         4
      80: invokedynamic #106,  0            // InvokeDynamic #0:accept:(Lorg/springframework/messaging/simp/broker/SimpleBrokerMessageHandler;Lorg/springframework/messaging/Message;J)Ljava/util/function/BiConsumer;
      85: invokeinterface #107,  2          // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
      90: return

  public java.lang.String toString();
    Code:
       0: new           #29                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
       7: ldc           #108                // String SimpleBrokerMessageHandler [
       9: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      12: aload_0
      13: getfield      #12                 // Field subscriptionRegistry:Lorg/springframework/messaging/simp/broker/SubscriptionRegistry;
      16: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      19: ldc           #110                // String ]
      21: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      24: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      27: areturn

  private void lambda$sendMessageToSubscribers$0(org.springframework.messaging.Message, long, java.lang.String, java.util.List);
    Code:
       0: aload         5
       2: invokeinterface #111,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       7: astore        6
       9: aload         6
      11: invokeinterface #112,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
      16: ifeq          206
      19: aload         6
      21: invokeinterface #113,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      26: checkcast     #114                // class java/lang/String
      29: astore        7
      31: getstatic     #55                 // Field org/springframework/messaging/simp/SimpMessageType.MESSAGE:Lorg/springframework/messaging/simp/SimpMessageType;
      34: invokestatic  #67                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.create:(Lorg/springframework/messaging/simp/SimpMessageType;)Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;
      37: astore        8
      39: aload_0
      40: aload         8
      42: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
      45: aload         8
      47: aload         4
      49: invokevirtual #68                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSessionId:(Ljava/lang/String;)V
      52: aload         8
      54: aload         7
      56: invokevirtual #115                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setSubscriptionId:(Ljava/lang/String;)V
      59: aload         8
      61: aload_1
      62: invokeinterface #49,  1           // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      67: invokevirtual #116                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.copyHeadersIfAbsent:(Ljava/util/Map;)V
      70: aload         8
      72: iconst_1
      73: invokevirtual #117                // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.setLeaveMutable:(Z)V
      76: aload_1
      77: invokeinterface #91,  1           // InterfaceMethod org/springframework/messaging/Message.getPayload:()Ljava/lang/Object;
      82: astore        9
      84: aload         9
      86: aload         8
      88: invokevirtual #74                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getMessageHeaders:()Lorg/springframework/messaging/MessageHeaders;
      91: invokestatic  #75                 // Method org/springframework/messaging/support/MessageBuilder.createMessage:(Ljava/lang/Object;Lorg/springframework/messaging/MessageHeaders;)Lorg/springframework/messaging/Message;
      94: astore        10
      96: aload_0
      97: getfield      #4                  // Field sessions:Ljava/util/Map;
     100: aload         4
     102: invokeinterface #83,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
     107: checkcast     #63                 // class org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo
     110: astore        11
     112: aload         11
     114: ifnull        203
     117: aload         11
     119: invokevirtual #118                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.getClientOutboundChannel:()Lorg/springframework/messaging/MessageChannel;
     122: aload         10
     124: invokeinterface #77,  2           // InterfaceMethod org/springframework/messaging/MessageChannel.send:(Lorg/springframework/messaging/Message;)Z
     129: pop
     130: aload         11
     132: lload_2
     133: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     136: goto          203
     139: astore        12
     141: aload_0
     142: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
     145: invokeinterface #121,  1          // InterfaceMethod org/apache/commons/logging/Log.isErrorEnabled:()Z
     150: ifeq          183
     153: aload_0
     154: getfield      #86                 // Field logger:Lorg/apache/commons/logging/Log;
     157: new           #29                 // class java/lang/StringBuilder
     160: dup
     161: invokespecial #30                 // Method java/lang/StringBuilder."<init>":()V
     164: ldc           #122                // String Failed to send
     166: invokevirtual #32                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     169: aload_1
     170: invokevirtual #109                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     173: invokevirtual #34                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     176: aload         12
     178: invokeinterface #123,  3          // InterfaceMethod org/apache/commons/logging/Log.error:(Ljava/lang/Object;Ljava/lang/Throwable;)V
     183: aload         11
     185: lload_2
     186: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     189: goto          203
     192: astore        13
     194: aload         11
     196: lload_2
     197: invokevirtual #119                // Method org/springframework/messaging/simp/broker/SimpleBrokerMessageHandler$SessionInfo.setLastWriteTime:(J)V
     200: aload         13
     202: athrow
     203: goto          9
     206: return
    Exception table:
       from    to  target type
         117   130   139   Class java/lang/Throwable
         117   130   192   any
         139   183   192   any
         192   194   192   any

  static java.util.Map access$100(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler);
    Code:
       0: aload_0
       1: getfield      #4                  // Field sessions:Ljava/util/Map;
       4: areturn

  static void access$200(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler, java.lang.String, java.security.Principal, org.springframework.messaging.Message);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokespecial #3                  // Method handleDisconnect:(Ljava/lang/String;Ljava/security/Principal;Lorg/springframework/messaging/Message;)V
       7: return

  static void access$300(org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler, org.springframework.messaging.simp.SimpMessageHeaderAccessor);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #2                  // Method initHeaders:(Lorg/springframework/messaging/simp/SimpMessageHeaderAccessor;)V
       5: return

  static byte[] access$400();
    Code:
       0: getstatic     #1                  // Field EMPTY_PAYLOAD:[B
       3: areturn

  static {};
    Code:
       0: iconst_0
       1: newarray       byte
       3: putstatic     #1                  // Field EMPTY_PAYLOAD:[B
       6: return
}
