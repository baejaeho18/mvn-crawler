Compiled from "DefaultSubscriptionRegistry.java"
class org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor implements org.springframework.expression.PropertyAccessor {
  private org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor();
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: return

  public java.lang.Class<?>[] getSpecificTargetClasses();
    Code:
       0: iconst_2
       1: anewarray     #3                  // class java/lang/Class
       4: dup
       5: iconst_0
       6: ldc           #4                  // class org/springframework/messaging/Message
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #5                  // class org/springframework/messaging/MessageHeaders
      13: aastore
      14: areturn

  public boolean canRead(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String);
    Code:
       0: iconst_1
       1: ireturn

  public org.springframework.expression.TypedValue read(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String);
    Code:
       0: aload_2
       1: instanceof    #4                  // class org/springframework/messaging/Message
       4: ifeq          34
       7: aload_3
       8: ldc           #6                  // String headers
      10: invokevirtual #7                  // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      13: ifeq          28
      16: aload_2
      17: checkcast     #4                  // class org/springframework/messaging/Message
      20: invokeinterface #8,  1            // InterfaceMethod org/springframework/messaging/Message.getHeaders:()Lorg/springframework/messaging/MessageHeaders;
      25: goto          29
      28: aconst_null
      29: astore        4
      31: goto          127
      34: aload_2
      35: instanceof    #5                  // class org/springframework/messaging/MessageHeaders
      38: ifeq          117
      41: aload_2
      42: checkcast     #5                  // class org/springframework/messaging/MessageHeaders
      45: astore        5
      47: aload         5
      49: ldc           #9                  // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      51: invokestatic  #10                 // Method org/springframework/messaging/support/MessageHeaderAccessor.getAccessor:(Lorg/springframework/messaging/MessageHeaders;Ljava/lang/Class;)Lorg/springframework/messaging/support/MessageHeaderAccessor;
      54: checkcast     #9                  // class org/springframework/messaging/simp/SimpMessageHeaderAccessor
      57: astore        6
      59: aload         6
      61: ifnull        68
      64: iconst_1
      65: goto          69
      68: iconst_0
      69: ldc           #11                 // String No SimpMessageHeaderAccessor
      71: invokestatic  #12                 // Method org/springframework/util/Assert.state:(ZLjava/lang/String;)V
      74: ldc           #13                 // String destination
      76: aload_3
      77: invokevirtual #14                 // Method java/lang/String.equalsIgnoreCase:(Ljava/lang/String;)Z
      80: ifeq          93
      83: aload         6
      85: invokevirtual #15                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getDestination:()Ljava/lang/String;
      88: astore        4
      90: goto          114
      93: aload         6
      95: aload_3
      96: invokevirtual #16                 // Method org/springframework/messaging/simp/SimpMessageHeaderAccessor.getFirstNativeHeader:(Ljava/lang/String;)Ljava/lang/String;
      99: astore        4
     101: aload         4
     103: ifnonnull     114
     106: aload         5
     108: aload_3
     109: invokevirtual #17                 // Method org/springframework/messaging/MessageHeaders.get:(Ljava/lang/Object;)Ljava/lang/Object;
     112: astore        4
     114: goto          127
     117: new           #18                 // class java/lang/IllegalStateException
     120: dup
     121: ldc           #19                 // String Expected Message or MessageHeaders.
     123: invokespecial #20                 // Method java/lang/IllegalStateException."<init>":(Ljava/lang/String;)V
     126: athrow
     127: new           #21                 // class org/springframework/expression/TypedValue
     130: dup
     131: aload         4
     133: invokespecial #22                 // Method org/springframework/expression/TypedValue."<init>":(Ljava/lang/Object;)V
     136: areturn

  public boolean canWrite(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String);
    Code:
       0: iconst_0
       1: ireturn

  public void write(org.springframework.expression.EvaluationContext, java.lang.Object, java.lang.String, java.lang.Object);
    Code:
       0: return

  org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$SimpMessageHeaderPropertyAccessor(org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry$1);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method "<init>":()V
       4: return
}
