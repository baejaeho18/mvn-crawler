Compiled from "SimpleFilterProvider.java"
public class com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider extends com.fasterxml.jackson.databind.ser.FilterProvider implements java.io.Serializable {
  private static final long serialVersionUID;

  protected final java.util.Map<java.lang.String, com.fasterxml.jackson.databind.ser.PropertyFilter> _filtersById;

  protected com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter;

  protected boolean _cfgFailOnUnknownId;

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider();
    Code:
       0: aload_0
       1: new           #1                  // class java/util/HashMap
       4: dup
       5: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       8: invokespecial #3                  // Method "<init>":(Ljava/util/Map;)V
      11: return

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider(java.util.Map<java.lang.String, ?>);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method com/fasterxml/jackson/databind/ser/FilterProvider."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #5                  // Field _cfgFailOnUnknownId:Z
       9: aload_1
      10: invokeinterface #6,  1            // InterfaceMethod java/util/Map.values:()Ljava/util/Collection;
      15: invokeinterface #7,  1            // InterfaceMethod java/util/Collection.iterator:()Ljava/util/Iterator;
      20: astore_2
      21: aload_2
      22: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      27: ifeq          56
      30: aload_2
      31: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      36: astore_3
      37: aload_3
      38: instanceof    #10                 // class com/fasterxml/jackson/databind/ser/PropertyFilter
      41: ifne          53
      44: aload_0
      45: aload_1
      46: invokestatic  #11                 // Method _convert:(Ljava/util/Map;)Ljava/util/Map;
      49: putfield      #12                 // Field _filtersById:Ljava/util/Map;
      52: return
      53: goto          21
      56: aload_0
      57: aload_1
      58: putfield      #12                 // Field _filtersById:Ljava/util/Map;
      61: return

  private static final java.util.Map<java.lang.String, com.fasterxml.jackson.databind.ser.PropertyFilter> _convert(java.util.Map<java.lang.String, ?>);
    Code:
       0: new           #1                  // class java/util/HashMap
       3: dup
       4: invokespecial #2                  // Method java/util/HashMap."<init>":()V
       7: astore_1
       8: aload_0
       9: invokeinterface #13,  1           // InterfaceMethod java/util/Map.entrySet:()Ljava/util/Set;
      14: invokeinterface #14,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #8,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          146
      29: aload_2
      30: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #15                 // class java/util/Map$Entry
      38: astore_3
      39: aload_3
      40: invokeinterface #16,  1           // InterfaceMethod java/util/Map$Entry.getValue:()Ljava/lang/Object;
      45: astore        4
      47: aload         4
      49: instanceof    #10                 // class com/fasterxml/jackson/databind/ser/PropertyFilter
      52: ifeq          74
      55: aload_1
      56: aload_3
      57: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      62: aload         4
      64: checkcast     #10                 // class com/fasterxml/jackson/databind/ser/PropertyFilter
      67: invokevirtual #18                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      70: pop
      71: goto          143
      74: aload         4
      76: instanceof    #19                 // class com/fasterxml/jackson/databind/ser/BeanPropertyFilter
      79: ifeq          104
      82: aload_1
      83: aload_3
      84: invokeinterface #17,  1           // InterfaceMethod java/util/Map$Entry.getKey:()Ljava/lang/Object;
      89: aload         4
      91: checkcast     #19                 // class com/fasterxml/jackson/databind/ser/BeanPropertyFilter
      94: invokestatic  #20                 // Method _convert:(Lcom/fasterxml/jackson/databind/ser/BeanPropertyFilter;)Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
      97: invokevirtual #18                 // Method java/util/HashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     100: pop
     101: goto          143
     104: new           #21                 // class java/lang/IllegalArgumentException
     107: dup
     108: new           #22                 // class java/lang/StringBuilder
     111: dup
     112: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #24                 // String Unrecognized filter type (
     117: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: aload         4
     122: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
     125: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
     128: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     131: ldc           #28                 // String )
     133: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     136: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     139: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
     142: athrow
     143: goto          20
     146: aload_1
     147: areturn

  private static final com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter);
    Code:
       0: aload_0
       1: invokestatic  #31                 // Method com/fasterxml/jackson/databind/ser/impl/SimpleBeanPropertyFilter.from:(Lcom/fasterxml/jackson/databind/ser/BeanPropertyFilter;)Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       4: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter);
    Code:
       0: aload_0
       1: aload_1
       2: invokestatic  #31                 // Method com/fasterxml/jackson/databind/ser/impl/SimpleBeanPropertyFilter.from:(Lcom/fasterxml/jackson/databind/ser/BeanPropertyFilter;)Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       5: putfield      #32                 // Field _defaultFilter:Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       8: aload_0
       9: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field _defaultFilter:Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       5: aload_0
       6: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #32                 // Field _defaultFilter:Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       5: aload_0
       6: areturn

  public com.fasterxml.jackson.databind.ser.PropertyFilter getDefaultFilter();
    Code:
       0: aload_0
       1: getfield      #32                 // Field _defaultFilter:Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       4: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field _cfgFailOnUnknownId:Z
       5: aload_0
       6: areturn

  public boolean willFailOnUnknownId();
    Code:
       0: aload_0
       1: getfield      #5                  // Field _cfgFailOnUnknownId:Z
       4: ireturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.BeanPropertyFilter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokestatic  #20                 // Method _convert:(Lcom/fasterxml/jackson/databind/ser/BeanPropertyFilter;)Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
       9: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      14: pop
      15: aload_0
      16: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.PropertyFilter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter);
    Code:
       0: aload_0
       1: getfield      #12                 // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: aload_2
       6: invokeinterface #33,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: pop
      12: aload_0
      13: areturn

  public com.fasterxml.jackson.databind.ser.PropertyFilter removeFilter(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #12                 // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #34,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class com/fasterxml/jackson/databind/ser/PropertyFilter
      13: areturn

  public com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object);
    Code:
       0: new           #35                 // class java/lang/UnsupportedOperationException
       3: dup
       4: ldc           #36                 // String Access to deprecated filters not supported
       6: invokespecial #37                 // Method java/lang/UnsupportedOperationException."<init>":(Ljava/lang/String;)V
       9: athrow

  public com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #12                 // Field _filtersById:Ljava/util/Map;
       4: aload_1
       5: invokeinterface #38,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      10: checkcast     #10                 // class com/fasterxml/jackson/databind/ser/PropertyFilter
      13: astore_3
      14: aload_3
      15: ifnonnull     81
      18: aload_0
      19: getfield      #32                 // Field _defaultFilter:Lcom/fasterxml/jackson/databind/ser/PropertyFilter;
      22: astore_3
      23: aload_3
      24: ifnonnull     81
      27: aload_0
      28: getfield      #5                  // Field _cfgFailOnUnknownId:Z
      31: ifeq          81
      34: new           #21                 // class java/lang/IllegalArgumentException
      37: dup
      38: new           #22                 // class java/lang/StringBuilder
      41: dup
      42: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      45: ldc           #39                 // String No filter configured with id \'
      47: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      50: aload_1
      51: invokevirtual #40                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      54: ldc           #41                 // String \' (type
      56: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: aload_1
      60: invokevirtual #26                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      63: invokevirtual #27                 // Method java/lang/Class.getName:()Ljava/lang/String;
      66: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      69: ldc           #28                 // String )
      71: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      74: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      77: invokespecial #30                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      80: athrow
      81: aload_3
      82: areturn
}
