Compiled from "VersionFieldSerializer.java"
public class com.esotericsoftware.kryo.serializers.VersionFieldSerializer<T> extends com.esotericsoftware.kryo.serializers.FieldSerializer<T> {
  private int typeVersion;

  private int[] fieldVersion;

  private boolean compatible;

  public com.esotericsoftware.kryo.serializers.VersionFieldSerializer(com.esotericsoftware.kryo.Kryo, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer."<init>":(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;)V
       6: aload_0
       7: iconst_0
       8: putfield      #2                  // Field typeVersion:I
      11: aload_0
      12: iconst_1
      13: putfield      #3                  // Field compatible:Z
      16: aload_0
      17: invokevirtual #4                  // Method initializeCachedFields:()V
      20: return

  public com.esotericsoftware.kryo.serializers.VersionFieldSerializer(com.esotericsoftware.kryo.Kryo, java.lang.Class, boolean);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #5                  // Method "<init>":(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;)V
       6: aload_0
       7: iload_3
       8: putfield      #3                  // Field compatible:Z
      11: return

  protected void initializeCachedFields();
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: astore_1
       5: aload_0
       6: aload_1
       7: arraylength
       8: newarray       int
      10: putfield      #7                  // Field fieldVersion:[I
      13: iconst_0
      14: istore_2
      15: aload_1
      16: arraylength
      17: istore_3
      18: iload_2
      19: iload_3
      20: if_icmpge     94
      23: aload_1
      24: iload_2
      25: aaload
      26: invokevirtual #8                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.getField:()Ljava/lang/reflect/Field;
      29: astore        4
      31: aload         4
      33: ldc           #9                  // class com/esotericsoftware/kryo/serializers/VersionFieldSerializer$Since
      35: invokevirtual #10                 // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      38: checkcast     #9                  // class com/esotericsoftware/kryo/serializers/VersionFieldSerializer$Since
      41: astore        5
      43: aload         5
      45: ifnull        81
      48: aload_0
      49: getfield      #7                  // Field fieldVersion:[I
      52: iload_2
      53: aload         5
      55: invokeinterface #11,  1           // InterfaceMethod com/esotericsoftware/kryo/serializers/VersionFieldSerializer$Since.value:()I
      60: iastore
      61: aload_0
      62: aload_0
      63: getfield      #7                  // Field fieldVersion:[I
      66: iload_2
      67: iaload
      68: aload_0
      69: getfield      #2                  // Field typeVersion:I
      72: invokestatic  #12                 // Method java/lang/Math.max:(II)I
      75: putfield      #2                  // Field typeVersion:I
      78: goto          88
      81: aload_0
      82: getfield      #7                  // Field fieldVersion:[I
      85: iload_2
      86: iconst_0
      87: iastore
      88: iinc          2, 1
      91: goto          18
      94: aload_0
      95: getfield      #13                 // Field removedFields:Ljava/util/HashSet;
      98: invokevirtual #14                 // Method java/util/HashSet.clear:()V
     101: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     104: ifeq          147
     107: new           #16                 // class java/lang/StringBuilder
     110: dup
     111: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     114: ldc           #18                 // String Version for type
     116: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     119: aload_0
     120: invokevirtual #20                 // Method getType:()Ljava/lang/Class;
     123: invokevirtual #21                 // Method java/lang/Class.getName:()Ljava/lang/String;
     126: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: ldc           #22                 // String  is
     131: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     134: aload_0
     135: getfield      #2                  // Field typeVersion:I
     138: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     141: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     144: invokestatic  #25                 // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;)V
     147: return

  public void removeField(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #26                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer.removeField:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #4                  // Method initializeCachedFields:()V
       9: return

  public void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #27                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer.removeField:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;)V
       5: aload_0
       6: invokevirtual #4                  // Method initializeCachedFields:()V
       9: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, T);
    Code:
       0: aload_0
       1: invokevirtual #6                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: astore        4
       6: aload_2
       7: aload_0
       8: getfield      #2                  // Field typeVersion:I
      11: iconst_1
      12: invokevirtual #28                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      15: pop
      16: iconst_0
      17: istore        5
      19: aload         4
      21: arraylength
      22: istore        6
      24: iload         5
      26: iload         6
      28: if_icmpge     47
      31: aload         4
      33: iload         5
      35: aaload
      36: aload_2
      37: aload_3
      38: invokevirtual #29                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.write:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      41: iinc          5, 1
      44: goto          24
      47: return

  public T read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #30                 // Method create:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
       7: astore        4
       9: aload_1
      10: aload         4
      12: invokevirtual #31                 // Method com/esotericsoftware/kryo/Kryo.reference:(Ljava/lang/Object;)V
      15: aload_2
      16: iconst_1
      17: invokevirtual #32                 // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
      20: istore        5
      22: aload_0
      23: getfield      #3                  // Field compatible:Z
      26: ifne          78
      29: iload         5
      31: aload_0
      32: getfield      #2                  // Field typeVersion:I
      35: if_icmpeq     78
      38: new           #33                 // class com/esotericsoftware/kryo/KryoException
      41: dup
      42: new           #16                 // class java/lang/StringBuilder
      45: dup
      46: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
      49: ldc           #34                 // String Version not compatible:
      51: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      54: iload         5
      56: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      59: ldc           #35                 // String  <->
      61: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      64: aload_0
      65: getfield      #2                  // Field typeVersion:I
      68: invokevirtual #23                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      71: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      74: invokespecial #36                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      77: athrow
      78: aload_0
      79: invokevirtual #6                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      82: astore        6
      84: iconst_0
      85: istore        7
      87: aload         6
      89: arraylength
      90: istore        8
      92: iload         7
      94: iload         8
      96: if_icmpge     169
      99: aload_0
     100: getfield      #7                  // Field fieldVersion:[I
     103: iload         7
     105: iaload
     106: iload         5
     108: if_icmple     152
     111: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.DEBUG:Z
     114: ifeq          163
     117: new           #16                 // class java/lang/StringBuilder
     120: dup
     121: invokespecial #17                 // Method java/lang/StringBuilder."<init>":()V
     124: ldc           #37                 // String Skip field
     126: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     129: aload         6
     131: iload         7
     133: aaload
     134: invokevirtual #8                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.getField:()Ljava/lang/reflect/Field;
     137: invokevirtual #38                 // Method java/lang/reflect/Field.getName:()Ljava/lang/String;
     140: invokevirtual #19                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     143: invokevirtual #24                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     146: invokestatic  #25                 // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;)V
     149: goto          163
     152: aload         6
     154: iload         7
     156: aaload
     157: aload_2
     158: aload         4
     160: invokevirtual #39                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.read:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Object;)V
     163: iinc          7, 1
     166: goto          92
     169: aload         4
     171: areturn
}
