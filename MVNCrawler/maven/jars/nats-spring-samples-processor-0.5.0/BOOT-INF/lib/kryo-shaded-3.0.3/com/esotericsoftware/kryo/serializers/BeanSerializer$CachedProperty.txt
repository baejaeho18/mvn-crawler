Compiled from "BeanSerializer.java"
class com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty<X> {
  java.lang.String name;

  java.lang.reflect.Method getMethod;

  java.lang.reflect.Method setMethod;

  java.lang.Class setMethodType;

  com.esotericsoftware.kryo.Serializer serializer;

  int getterAccessIndex;

  int setterAccessIndex;

  final com.esotericsoftware.kryo.serializers.BeanSerializer this$0;

  com.esotericsoftware.kryo.serializers.BeanSerializer$CachedProperty(com.esotericsoftware.kryo.serializers.BeanSerializer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #1                  // Field this$0:Lcom/esotericsoftware/kryo/serializers/BeanSerializer;
       5: aload_0
       6: invokespecial #2                  // Method java/lang/Object."<init>":()V
       9: return

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #3                  // Field name:Ljava/lang/String;
       4: areturn

  java.lang.Object get(java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/esotericsoftware/kryo/serializers/BeanSerializer;
       4: getfield      #4                  // Field com/esotericsoftware/kryo/serializers/BeanSerializer.access:Ljava/lang/Object;
       7: ifnull        33
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/esotericsoftware/kryo/serializers/BeanSerializer;
      14: getfield      #4                  // Field com/esotericsoftware/kryo/serializers/BeanSerializer.access:Ljava/lang/Object;
      17: checkcast     #5                  // class com/esotericsoftware/reflectasm/MethodAccess
      20: aload_1
      21: aload_0
      22: getfield      #6                  // Field getterAccessIndex:I
      25: iconst_0
      26: anewarray     #7                  // class java/lang/Object
      29: invokevirtual #8                  // Method com/esotericsoftware/reflectasm/MethodAccess.invoke:(Ljava/lang/Object;I[Ljava/lang/Object;)Ljava/lang/Object;
      32: areturn
      33: aload_0
      34: getfield      #9                  // Field getMethod:Ljava/lang/reflect/Method;
      37: aload_1
      38: getstatic     #10                 // Field com/esotericsoftware/kryo/serializers/BeanSerializer.noArgs:[Ljava/lang/Object;
      41: invokevirtual #11                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      44: areturn

  void set(java.lang.Object, java.lang.Object) throws java.lang.IllegalAccessException, java.lang.reflect.InvocationTargetException;
    Code:
       0: aload_0
       1: getfield      #1                  // Field this$0:Lcom/esotericsoftware/kryo/serializers/BeanSerializer;
       4: getfield      #4                  // Field com/esotericsoftware/kryo/serializers/BeanSerializer.access:Ljava/lang/Object;
       7: ifnull        38
      10: aload_0
      11: getfield      #1                  // Field this$0:Lcom/esotericsoftware/kryo/serializers/BeanSerializer;
      14: getfield      #4                  // Field com/esotericsoftware/kryo/serializers/BeanSerializer.access:Ljava/lang/Object;
      17: checkcast     #5                  // class com/esotericsoftware/reflectasm/MethodAccess
      20: aload_1
      21: aload_0
      22: getfield      #12                 // Field setterAccessIndex:I
      25: iconst_1
      26: anewarray     #7                  // class java/lang/Object
      29: dup
      30: iconst_0
      31: aload_2
      32: aastore
      33: invokevirtual #8                  // Method com/esotericsoftware/reflectasm/MethodAccess.invoke:(Ljava/lang/Object;I[Ljava/lang/Object;)Ljava/lang/Object;
      36: pop
      37: return
      38: aload_0
      39: getfield      #13                 // Field setMethod:Ljava/lang/reflect/Method;
      42: aload_1
      43: iconst_1
      44: anewarray     #7                  // class java/lang/Object
      47: dup
      48: iconst_0
      49: aload_2
      50: aastore
      51: invokevirtual #11                 // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      54: pop
      55: return
}
