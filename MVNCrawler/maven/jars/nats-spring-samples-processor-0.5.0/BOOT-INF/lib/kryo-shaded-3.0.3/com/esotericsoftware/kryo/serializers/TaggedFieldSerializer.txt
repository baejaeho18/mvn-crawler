Compiled from "TaggedFieldSerializer.java"
public class com.esotericsoftware.kryo.serializers.TaggedFieldSerializer<T> extends com.esotericsoftware.kryo.serializers.FieldSerializer<T> {
  private int[] tags;

  private int writeFieldCount;

  private boolean[] deprecated;

  public com.esotericsoftware.kryo.serializers.TaggedFieldSerializer(com.esotericsoftware.kryo.Kryo, java.lang.Class);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: invokespecial #1                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer."<init>":(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Class;)V
       6: return

  protected void initializeCachedFields();
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: aload_1
       8: arraylength
       9: istore_3
      10: iload_2
      11: iload_3
      12: if_icmpge     78
      15: aload_1
      16: iload_2
      17: aaload
      18: invokevirtual #3                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.getField:()Ljava/lang/reflect/Field;
      21: astore        4
      23: aload         4
      25: ldc           #4                  // class com/esotericsoftware/kryo/serializers/TaggedFieldSerializer$Tag
      27: invokevirtual #5                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
      30: ifnonnull     72
      33: getstatic     #6                  // Field com/esotericsoftware/minlog/Log.TRACE:Z
      36: ifeq          65
      39: ldc           #7                  // String kryo
      41: new           #8                  // class java/lang/StringBuilder
      44: dup
      45: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
      48: ldc           #10                 // String Ignoring field without tag:
      50: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: aload_1
      54: iload_2
      55: aaload
      56: invokevirtual #12                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      59: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      62: invokestatic  #14                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      65: aload_0
      66: aload_1
      67: iload_2
      68: aaload
      69: invokespecial #15                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer.removeField:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;)V
      72: iinc          2, 1
      75: goto          10
      78: aload_0
      79: invokevirtual #2                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      82: astore_1
      83: aload_0
      84: aload_1
      85: arraylength
      86: newarray       int
      88: putfield      #16                 // Field tags:[I
      91: aload_0
      92: aload_1
      93: arraylength
      94: newarray       boolean
      96: putfield      #17                 // Field deprecated:[Z
      99: aload_0
     100: aload_1
     101: arraylength
     102: putfield      #18                 // Field writeFieldCount:I
     105: iconst_0
     106: istore_2
     107: aload_1
     108: arraylength
     109: istore_3
     110: iload_2
     111: iload_3
     112: if_icmpge     177
     115: aload_1
     116: iload_2
     117: aaload
     118: invokevirtual #3                  // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.getField:()Ljava/lang/reflect/Field;
     121: astore        4
     123: aload_0
     124: getfield      #16                 // Field tags:[I
     127: iload_2
     128: aload         4
     130: ldc           #4                  // class com/esotericsoftware/kryo/serializers/TaggedFieldSerializer$Tag
     132: invokevirtual #5                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     135: checkcast     #4                  // class com/esotericsoftware/kryo/serializers/TaggedFieldSerializer$Tag
     138: invokeinterface #19,  1           // InterfaceMethod com/esotericsoftware/kryo/serializers/TaggedFieldSerializer$Tag.value:()I
     143: iastore
     144: aload         4
     146: ldc           #20                 // class java/lang/Deprecated
     148: invokevirtual #5                  // Method java/lang/reflect/Field.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;
     151: ifnull        171
     154: aload_0
     155: getfield      #17                 // Field deprecated:[Z
     158: iload_2
     159: iconst_1
     160: bastore
     161: aload_0
     162: dup
     163: getfield      #18                 // Field writeFieldCount:I
     166: iconst_1
     167: isub
     168: putfield      #18                 // Field writeFieldCount:I
     171: iinc          2, 1
     174: goto          110
     177: aload_0
     178: getfield      #21                 // Field removedFields:Ljava/util/HashSet;
     181: invokevirtual #22                 // Method java/util/HashSet.clear:()V
     184: return

  public void removeField(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #23                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer.removeField:(Ljava/lang/String;)V
       5: aload_0
       6: invokevirtual #24                 // Method initializeCachedFields:()V
       9: return

  public void removeField(com.esotericsoftware.kryo.serializers.FieldSerializer$CachedField);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #15                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer.removeField:(Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;)V
       5: aload_0
       6: invokevirtual #24                 // Method initializeCachedFields:()V
       9: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, T);
    Code:
       0: aload_0
       1: invokevirtual #2                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
       4: astore        4
       6: aload_2
       7: aload_0
       8: getfield      #18                 // Field writeFieldCount:I
      11: iconst_1
      12: invokevirtual #25                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      15: pop
      16: iconst_0
      17: istore        5
      19: aload         4
      21: arraylength
      22: istore        6
      24: iload         5
      26: iload         6
      28: if_icmpge     73
      31: aload_0
      32: getfield      #17                 // Field deprecated:[Z
      35: iload         5
      37: baload
      38: ifeq          44
      41: goto          67
      44: aload_2
      45: aload_0
      46: getfield      #16                 // Field tags:[I
      49: iload         5
      51: iaload
      52: iconst_1
      53: invokevirtual #25                 // Method com/esotericsoftware/kryo/io/Output.writeVarInt:(IZ)I
      56: pop
      57: aload         4
      59: iload         5
      61: aaload
      62: aload_2
      63: aload_3
      64: invokevirtual #26                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.write:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      67: iinc          5, 1
      70: goto          24
      73: return

  public T read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class<T>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aload_3
       4: invokevirtual #27                 // Method create:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
       7: astore        4
       9: aload_1
      10: aload         4
      12: invokevirtual #28                 // Method com/esotericsoftware/kryo/Kryo.reference:(Ljava/lang/Object;)V
      15: aload_2
      16: iconst_1
      17: invokevirtual #29                 // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
      20: istore        5
      22: aload_0
      23: getfield      #16                 // Field tags:[I
      26: astore        6
      28: aload_0
      29: invokevirtual #2                  // Method getFields:()[Lcom/esotericsoftware/kryo/serializers/FieldSerializer$CachedField;
      32: astore        7
      34: iconst_0
      35: istore        8
      37: iload         5
      39: istore        9
      41: iload         8
      43: iload         9
      45: if_icmpge     166
      48: aload_2
      49: iconst_1
      50: invokevirtual #29                 // Method com/esotericsoftware/kryo/io/Input.readVarInt:(Z)I
      53: istore        10
      55: aconst_null
      56: astore        11
      58: iconst_0
      59: istore        12
      61: aload         6
      63: arraylength
      64: istore        13
      66: iload         12
      68: iload         13
      70: if_icmpge     99
      73: aload         6
      75: iload         12
      77: iaload
      78: iload         10
      80: if_icmpne     93
      83: aload         7
      85: iload         12
      87: aaload
      88: astore        11
      90: goto          99
      93: iinc          12, 1
      96: goto          66
      99: aload         11
     101: ifnonnull     152
     104: new           #30                 // class com/esotericsoftware/kryo/KryoException
     107: dup
     108: new           #8                  // class java/lang/StringBuilder
     111: dup
     112: invokespecial #9                  // Method java/lang/StringBuilder."<init>":()V
     115: ldc           #31                 // String Unknown field tag:
     117: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: iload         10
     122: invokevirtual #32                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
     125: ldc           #33                 // String  (
     127: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     130: aload_0
     131: invokevirtual #34                 // Method getType:()Ljava/lang/Class;
     134: invokevirtual #35                 // Method java/lang/Class.getName:()Ljava/lang/String;
     137: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     140: ldc           #36                 // String )
     142: invokevirtual #11                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     145: invokevirtual #13                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     148: invokespecial #37                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     151: athrow
     152: aload         11
     154: aload_2
     155: aload         4
     157: invokevirtual #38                 // Method com/esotericsoftware/kryo/serializers/FieldSerializer$CachedField.read:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Object;)V
     160: iinc          8, 1
     163: goto          41
     166: aload         4
     168: areturn
}
