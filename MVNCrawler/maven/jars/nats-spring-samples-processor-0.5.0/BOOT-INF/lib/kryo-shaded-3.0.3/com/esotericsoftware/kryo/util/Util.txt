Compiled from "Util.java"
public class com.esotericsoftware.kryo.util.Util {
  public static boolean isAndroid;

  public com.esotericsoftware.kryo.util.Util();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.lang.Class getWrapperClass(java.lang.Class);
    Code:
       0: aload_0
       1: getstatic     #2                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
       4: if_acmpne     10
       7: ldc           #3                  // class java/lang/Integer
       9: areturn
      10: aload_0
      11: getstatic     #4                  // Field java/lang/Float.TYPE:Ljava/lang/Class;
      14: if_acmpne     20
      17: ldc           #5                  // class java/lang/Float
      19: areturn
      20: aload_0
      21: getstatic     #6                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      24: if_acmpne     30
      27: ldc           #7                  // class java/lang/Boolean
      29: areturn
      30: aload_0
      31: getstatic     #8                  // Field java/lang/Long.TYPE:Ljava/lang/Class;
      34: if_acmpne     40
      37: ldc           #9                  // class java/lang/Long
      39: areturn
      40: aload_0
      41: getstatic     #10                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      44: if_acmpne     50
      47: ldc           #11                 // class java/lang/Byte
      49: areturn
      50: aload_0
      51: getstatic     #12                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      54: if_acmpne     60
      57: ldc           #13                 // class java/lang/Character
      59: areturn
      60: aload_0
      61: getstatic     #14                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      64: if_acmpne     70
      67: ldc           #15                 // class java/lang/Short
      69: areturn
      70: aload_0
      71: getstatic     #16                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      74: if_acmpne     80
      77: ldc           #17                 // class java/lang/Double
      79: areturn
      80: ldc           #18                 // class java/lang/Void
      82: areturn

  public static java.lang.Class getPrimitiveClass(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #3                  // class java/lang/Integer
       3: if_acmpne     10
       6: getstatic     #2                  // Field java/lang/Integer.TYPE:Ljava/lang/Class;
       9: areturn
      10: aload_0
      11: ldc           #5                  // class java/lang/Float
      13: if_acmpne     20
      16: getstatic     #4                  // Field java/lang/Float.TYPE:Ljava/lang/Class;
      19: areturn
      20: aload_0
      21: ldc           #7                  // class java/lang/Boolean
      23: if_acmpne     30
      26: getstatic     #6                  // Field java/lang/Boolean.TYPE:Ljava/lang/Class;
      29: areturn
      30: aload_0
      31: ldc           #9                  // class java/lang/Long
      33: if_acmpne     40
      36: getstatic     #8                  // Field java/lang/Long.TYPE:Ljava/lang/Class;
      39: areturn
      40: aload_0
      41: ldc           #11                 // class java/lang/Byte
      43: if_acmpne     50
      46: getstatic     #10                 // Field java/lang/Byte.TYPE:Ljava/lang/Class;
      49: areturn
      50: aload_0
      51: ldc           #13                 // class java/lang/Character
      53: if_acmpne     60
      56: getstatic     #12                 // Field java/lang/Character.TYPE:Ljava/lang/Class;
      59: areturn
      60: aload_0
      61: ldc           #15                 // class java/lang/Short
      63: if_acmpne     70
      66: getstatic     #14                 // Field java/lang/Short.TYPE:Ljava/lang/Class;
      69: areturn
      70: aload_0
      71: ldc           #17                 // class java/lang/Double
      73: if_acmpne     80
      76: getstatic     #16                 // Field java/lang/Double.TYPE:Ljava/lang/Class;
      79: areturn
      80: aload_0
      81: ldc           #18                 // class java/lang/Void
      83: if_acmpne     90
      86: getstatic     #19                 // Field java/lang/Void.TYPE:Ljava/lang/Class;
      89: areturn
      90: aload_0
      91: areturn

  public static boolean isWrapperClass(java.lang.Class);
    Code:
       0: aload_0
       1: ldc           #3                  // class java/lang/Integer
       3: if_acmpeq     48
       6: aload_0
       7: ldc           #5                  // class java/lang/Float
       9: if_acmpeq     48
      12: aload_0
      13: ldc           #7                  // class java/lang/Boolean
      15: if_acmpeq     48
      18: aload_0
      19: ldc           #9                  // class java/lang/Long
      21: if_acmpeq     48
      24: aload_0
      25: ldc           #11                 // class java/lang/Byte
      27: if_acmpeq     48
      30: aload_0
      31: ldc           #13                 // class java/lang/Character
      33: if_acmpeq     48
      36: aload_0
      37: ldc           #15                 // class java/lang/Short
      39: if_acmpeq     48
      42: aload_0
      43: ldc           #17                 // class java/lang/Double
      45: if_acmpne     52
      48: iconst_1
      49: goto          53
      52: iconst_0
      53: ireturn

  public static void log(java.lang.String, java.lang.Object);
    Code:
       0: aload_1
       1: ifnonnull     35
       4: getstatic     #20                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
       7: ifeq          34
      10: ldc           #21                 // String kryo
      12: new           #22                 // class java/lang/StringBuilder
      15: dup
      16: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      19: aload_0
      20: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: ldc           #25                 // String : null
      25: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      28: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      31: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      34: return
      35: aload_1
      36: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      39: astore_2
      40: aload_2
      41: invokevirtual #29                 // Method java/lang/Class.isPrimitive:()Z
      44: ifne          101
      47: aload_2
      48: ldc           #7                  // class java/lang/Boolean
      50: if_acmpeq     101
      53: aload_2
      54: ldc           #11                 // class java/lang/Byte
      56: if_acmpeq     101
      59: aload_2
      60: ldc           #13                 // class java/lang/Character
      62: if_acmpeq     101
      65: aload_2
      66: ldc           #15                 // class java/lang/Short
      68: if_acmpeq     101
      71: aload_2
      72: ldc           #3                  // class java/lang/Integer
      74: if_acmpeq     101
      77: aload_2
      78: ldc           #9                  // class java/lang/Long
      80: if_acmpeq     101
      83: aload_2
      84: ldc           #5                  // class java/lang/Float
      86: if_acmpeq     101
      89: aload_2
      90: ldc           #17                 // class java/lang/Double
      92: if_acmpeq     101
      95: aload_2
      96: ldc           #30                 // class java/lang/String
      98: if_acmpne     141
     101: getstatic     #20                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
     104: ifeq          172
     107: ldc           #21                 // String kryo
     109: new           #22                 // class java/lang/StringBuilder
     112: dup
     113: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     116: aload_0
     117: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     120: ldc           #31                 // String :
     122: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     125: aload_1
     126: invokestatic  #32                 // Method string:(Ljava/lang/Object;)Ljava/lang/String;
     129: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     132: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     135: invokestatic  #27                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
     138: goto          172
     141: ldc           #21                 // String kryo
     143: new           #22                 // class java/lang/StringBuilder
     146: dup
     147: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
     150: aload_0
     151: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     154: ldc           #31                 // String :
     156: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     159: aload_1
     160: invokestatic  #32                 // Method string:(Ljava/lang/Object;)Ljava/lang/String;
     163: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     166: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     169: invokestatic  #33                 // Method com/esotericsoftware/minlog/Log.debug:(Ljava/lang/String;Ljava/lang/String;)V
     172: return

  public static java.lang.String string(java.lang.Object);
    Code:
       0: aload_0
       1: ifnonnull     7
       4: ldc           #34                 // String null
       6: areturn
       7: aload_0
       8: invokevirtual #28                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      11: astore_1
      12: aload_1
      13: invokevirtual #35                 // Method java/lang/Class.isArray:()Z
      16: ifeq          24
      19: aload_1
      20: invokestatic  #36                 // Method className:(Ljava/lang/Class;)Ljava/lang/String;
      23: areturn
      24: aload_1
      25: ldc           #37                 // String toString
      27: iconst_0
      28: anewarray     #38                 // class java/lang/Class
      31: invokevirtual #39                 // Method java/lang/Class.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      34: invokevirtual #40                 // Method java/lang/reflect/Method.getDeclaringClass:()Ljava/lang/Class;
      37: ldc           #41                 // class java/lang/Object
      39: if_acmpne     60
      42: getstatic     #20                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      45: ifeq          55
      48: aload_1
      49: invokestatic  #36                 // Method className:(Ljava/lang/Class;)Ljava/lang/String;
      52: goto          59
      55: aload_1
      56: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      59: areturn
      60: goto          64
      63: astore_2
      64: aload_0
      65: invokestatic  #44                 // Method java/lang/String.valueOf:(Ljava/lang/Object;)Ljava/lang/String;
      68: areturn
      69: astore_2
      70: new           #22                 // class java/lang/StringBuilder
      73: dup
      74: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      77: getstatic     #20                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      80: ifeq          90
      83: aload_1
      84: invokestatic  #36                 // Method className:(Ljava/lang/Class;)Ljava/lang/String;
      87: goto          94
      90: aload_1
      91: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
      94: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      97: ldc           #46                 // String (Exception
      99: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     102: aload_2
     103: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
     106: ldc           #48                 // String  in toString)
     108: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
     111: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
     114: areturn
    Exception table:
       from    to  target type
          24    59    63   Class java/lang/Exception
          64    68    69   Class java/lang/Throwable

  public static java.lang.String className(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method java/lang/Class.isArray:()Z
       4: ifeq          71
       7: aload_0
       8: invokestatic  #49                 // Method getElementClass:(Ljava/lang/Class;)Ljava/lang/Class;
      11: astore_1
      12: new           #22                 // class java/lang/StringBuilder
      15: dup
      16: bipush        16
      18: invokespecial #50                 // Method java/lang/StringBuilder."<init>":(I)V
      21: astore_2
      22: iconst_0
      23: istore_3
      24: aload_0
      25: invokestatic  #51                 // Method getDimensionCount:(Ljava/lang/Class;)I
      28: istore        4
      30: iload_3
      31: iload         4
      33: if_icmpge     49
      36: aload_2
      37: ldc           #52                 // String []
      39: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      42: pop
      43: iinc          3, 1
      46: goto          30
      49: new           #22                 // class java/lang/StringBuilder
      52: dup
      53: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      56: aload_1
      57: invokestatic  #36                 // Method className:(Ljava/lang/Class;)Ljava/lang/String;
      60: invokevirtual #24                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      63: aload_2
      64: invokevirtual #47                 // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      67: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      70: areturn
      71: aload_0
      72: invokevirtual #29                 // Method java/lang/Class.isPrimitive:()Z
      75: ifne          138
      78: aload_0
      79: ldc           #41                 // class java/lang/Object
      81: if_acmpeq     138
      84: aload_0
      85: ldc           #7                  // class java/lang/Boolean
      87: if_acmpeq     138
      90: aload_0
      91: ldc           #11                 // class java/lang/Byte
      93: if_acmpeq     138
      96: aload_0
      97: ldc           #13                 // class java/lang/Character
      99: if_acmpeq     138
     102: aload_0
     103: ldc           #15                 // class java/lang/Short
     105: if_acmpeq     138
     108: aload_0
     109: ldc           #3                  // class java/lang/Integer
     111: if_acmpeq     138
     114: aload_0
     115: ldc           #9                  // class java/lang/Long
     117: if_acmpeq     138
     120: aload_0
     121: ldc           #5                  // class java/lang/Float
     123: if_acmpeq     138
     126: aload_0
     127: ldc           #17                 // class java/lang/Double
     129: if_acmpeq     138
     132: aload_0
     133: ldc           #30                 // class java/lang/String
     135: if_acmpne     143
     138: aload_0
     139: invokevirtual #42                 // Method java/lang/Class.getSimpleName:()Ljava/lang/String;
     142: areturn
     143: aload_0
     144: invokevirtual #53                 // Method java/lang/Class.getName:()Ljava/lang/String;
     147: areturn

  public static int getDimensionCount(java.lang.Class);
    Code:
       0: iconst_0
       1: istore_1
       2: aload_0
       3: invokevirtual #54                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       6: astore_2
       7: aload_2
       8: ifnull        22
      11: iinc          1, 1
      14: aload_2
      15: invokevirtual #54                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      18: astore_2
      19: goto          7
      22: iload_1
      23: ireturn

  public static java.lang.Class getElementClass(java.lang.Class);
    Code:
       0: aload_0
       1: astore_1
       2: aload_1
       3: invokevirtual #54                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
       6: ifnull        17
       9: aload_1
      10: invokevirtual #54                 // Method java/lang/Class.getComponentType:()Ljava/lang/Class;
      13: astore_1
      14: goto          2
      17: aload_1
      18: areturn

  public static int swapInt(int);
    Code:
       0: iload_0
       1: sipush        255
       4: iand
       5: bipush        24
       7: ishl
       8: iload_0
       9: ldc           #55                 // int 65280
      11: iand
      12: bipush        8
      14: ishl
      15: ior
      16: iload_0
      17: ldc           #56                 // int 16711680
      19: iand
      20: bipush        8
      22: ishr
      23: ior
      24: iload_0
      25: bipush        24
      27: ishr
      28: sipush        255
      31: iand
      32: ior
      33: ireturn

  public static long swapLong(long);
    Code:
       0: lload_0
       1: iconst_0
       2: lshr
       3: ldc2_w        #57                 // long 255l
       6: land
       7: bipush        56
       9: lshl
      10: lload_0
      11: bipush        8
      13: lshr
      14: ldc2_w        #57                 // long 255l
      17: land
      18: bipush        48
      20: lshl
      21: lor
      22: lload_0
      23: bipush        16
      25: lshr
      26: ldc2_w        #57                 // long 255l
      29: land
      30: bipush        40
      32: lshl
      33: lor
      34: lload_0
      35: bipush        24
      37: lshr
      38: ldc2_w        #57                 // long 255l
      41: land
      42: bipush        32
      44: lshl
      45: lor
      46: lload_0
      47: bipush        32
      49: lshr
      50: ldc2_w        #57                 // long 255l
      53: land
      54: bipush        24
      56: lshl
      57: lor
      58: lload_0
      59: bipush        40
      61: lshr
      62: ldc2_w        #57                 // long 255l
      65: land
      66: bipush        16
      68: lshl
      69: lor
      70: lload_0
      71: bipush        48
      73: lshr
      74: ldc2_w        #57                 // long 255l
      77: land
      78: bipush        8
      80: lshl
      81: lor
      82: lload_0
      83: bipush        56
      85: lshr
      86: ldc2_w        #57                 // long 255l
      89: land
      90: iconst_0
      91: lshl
      92: lor
      93: lreturn

  static {};
    Code:
       0: ldc           #59                 // String android.os.Process
       2: invokestatic  #60                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: pop
       6: iconst_1
       7: putstatic     #61                 // Field isAndroid:Z
      10: goto          14
      13: astore_0
      14: return
    Exception table:
       from    to  target type
           0    10    13   Class java/lang/Exception
}
