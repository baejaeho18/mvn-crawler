Compiled from "ByteBufferOutputStream.java"
public class com.esotericsoftware.kryo.io.ByteBufferOutputStream extends java.io.OutputStream {
  private java.nio.ByteBuffer byteBuffer;

  public com.esotericsoftware.kryo.io.ByteBufferOutputStream();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: return

  public com.esotericsoftware.kryo.io.ByteBufferOutputStream(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokestatic  #2                  // Method java/nio/ByteBuffer.allocate:(I)Ljava/nio/ByteBuffer;
       5: invokespecial #3                  // Method "<init>":(Ljava/nio/ByteBuffer;)V
       8: return

  public com.esotericsoftware.kryo.io.ByteBufferOutputStream(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/OutputStream."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       9: return

  public java.nio.ByteBuffer getByteBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: areturn

  public void setByteBuffer(java.nio.ByteBuffer);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       5: return

  public void write(int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #5                  // Method java/nio/ByteBuffer.hasRemaining:()Z
       7: ifne          14
      10: aload_0
      11: invokevirtual #6                  // Method flush:()V
      14: aload_0
      15: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      18: iload_1
      19: i2b
      20: invokevirtual #7                  // Method java/nio/ByteBuffer.put:(B)Ljava/nio/ByteBuffer;
      23: pop
      24: return

  public void write(byte[], int, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
       4: invokevirtual #8                  // Method java/nio/ByteBuffer.remaining:()I
       7: iload_3
       8: if_icmpge     15
      11: aload_0
      12: invokevirtual #6                  // Method flush:()V
      15: aload_0
      16: getfield      #4                  // Field byteBuffer:Ljava/nio/ByteBuffer;
      19: aload_1
      20: iload_2
      21: iload_3
      22: invokevirtual #9                  // Method java/nio/ByteBuffer.put:([BII)Ljava/nio/ByteBuffer;
      25: pop
      26: return
}
