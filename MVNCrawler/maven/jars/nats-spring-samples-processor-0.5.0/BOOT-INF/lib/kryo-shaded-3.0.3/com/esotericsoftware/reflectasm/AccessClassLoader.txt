Compiled from "AccessClassLoader.java"
class com.esotericsoftware.reflectasm.AccessClassLoader extends java.lang.ClassLoader {
  private static final java.util.WeakHashMap<java.lang.ClassLoader, java.lang.ref.WeakReference<com.esotericsoftware.reflectasm.AccessClassLoader>> accessClassLoaders;

  private static final java.lang.ClassLoader selfContextParentClassLoader;

  private static volatile com.esotericsoftware.reflectasm.AccessClassLoader selfContextAccessClassLoader;

  private static volatile java.lang.reflect.Method defineClassMethod;

  static com.esotericsoftware.reflectasm.AccessClassLoader get(java.lang.Class);
    Code:
       0: aload_0
       1: invokestatic  #20                 // Method getParentClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
       4: astore_1
       5: getstatic     #22                 // Field selfContextParentClassLoader:Ljava/lang/ClassLoader;
       8: aload_1
       9: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      12: ifeq          60
      15: getstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      18: ifnonnull     56
      21: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      24: dup
      25: astore_2
      26: monitorenter
      27: getstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      30: ifnonnull     46
      33: new           #2                  // class com/esotericsoftware/reflectasm/AccessClassLoader
      36: dup
      37: getstatic     #22                 // Field selfContextParentClassLoader:Ljava/lang/ClassLoader;
      40: invokespecial #36                 // Method "<init>":(Ljava/lang/ClassLoader;)V
      43: putstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      46: aload_2
      47: monitorexit
      48: goto          56
      51: astore_3
      52: aload_2
      53: monitorexit
      54: aload_3
      55: athrow
      56: getstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      59: areturn
      60: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      63: dup
      64: astore_2
      65: monitorenter
      66: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      69: aload_1
      70: invokevirtual #41                 // Method java/util/WeakHashMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #43                 // class java/lang/ref/WeakReference
      76: astore_3
      77: aload_3
      78: ifnull        108
      81: aload_3
      82: invokevirtual #46                 // Method java/lang/ref/WeakReference.get:()Ljava/lang/Object;
      85: checkcast     #2                  // class com/esotericsoftware/reflectasm/AccessClassLoader
      88: astore        4
      90: aload         4
      92: ifnull        100
      95: aload         4
      97: aload_2
      98: monitorexit
      99: areturn
     100: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
     103: aload_1
     104: invokevirtual #49                 // Method java/util/WeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
     107: pop
     108: new           #2                  // class com/esotericsoftware/reflectasm/AccessClassLoader
     111: dup
     112: aload_1
     113: invokespecial #36                 // Method "<init>":(Ljava/lang/ClassLoader;)V
     116: astore        4
     118: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
     121: aload_1
     122: new           #43                 // class java/lang/ref/WeakReference
     125: dup
     126: aload         4
     128: invokespecial #52                 // Method java/lang/ref/WeakReference."<init>":(Ljava/lang/Object;)V
     131: invokevirtual #56                 // Method java/util/WeakHashMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
     134: pop
     135: aload         4
     137: aload_2
     138: monitorexit
     139: areturn
     140: astore        5
     142: aload_2
     143: monitorexit
     144: aload         5
     146: athrow
    Exception table:
       from    to  target type
          27    48    51   any
          51    54    51   any
          66    99   140   any
         100   139   140   any
         140   144   140   any

  public static void remove(java.lang.ClassLoader);
    Code:
       0: getstatic     #22                 // Field selfContextParentClassLoader:Ljava/lang/ClassLoader;
       3: aload_0
       4: invokevirtual #28                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
       7: ifeq          17
      10: aconst_null
      11: putstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      14: goto          41
      17: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      20: dup
      21: astore_1
      22: monitorenter
      23: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      26: aload_0
      27: invokevirtual #49                 // Method java/util/WeakHashMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      30: pop
      31: aload_1
      32: monitorexit
      33: goto          41
      36: astore_2
      37: aload_1
      38: monitorexit
      39: aload_2
      40: athrow
      41: return
    Exception table:
       from    to  target type
          23    33    36   any
          36    39    36   any

  public static int activeAccessClassLoaders();
    Code:
       0: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
       3: invokevirtual #68                 // Method java/util/WeakHashMap.size:()I
       6: istore_0
       7: getstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      10: ifnull        16
      13: iinc          0, 1
      16: iload_0
      17: ireturn

  private com.esotericsoftware.reflectasm.AccessClassLoader(java.lang.ClassLoader);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #71                 // Method java/lang/ClassLoader."<init>":(Ljava/lang/ClassLoader;)V
       5: return

  protected synchronized java.lang.Class<?> loadClass(java.lang.String, boolean) throws java.lang.ClassNotFoundException;
    Code:
       0: aload_1
       1: ldc           #78                 // class com/esotericsoftware/reflectasm/FieldAccess
       3: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
       6: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          15
      12: ldc           #78                 // class com/esotericsoftware/reflectasm/FieldAccess
      14: areturn
      15: aload_1
      16: ldc           #89                 // class com/esotericsoftware/reflectasm/MethodAccess
      18: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
      21: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      24: ifeq          30
      27: ldc           #89                 // class com/esotericsoftware/reflectasm/MethodAccess
      29: areturn
      30: aload_1
      31: ldc           #91                 // class com/esotericsoftware/reflectasm/ConstructorAccess
      33: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
      36: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      39: ifeq          45
      42: ldc           #91                 // class com/esotericsoftware/reflectasm/ConstructorAccess
      44: areturn
      45: aload_1
      46: ldc           #93                 // class com/esotericsoftware/reflectasm/PublicConstructorAccess
      48: invokevirtual #84                 // Method java/lang/Class.getName:()Ljava/lang/String;
      51: invokevirtual #87                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      54: ifeq          60
      57: ldc           #93                 // class com/esotericsoftware/reflectasm/PublicConstructorAccess
      59: areturn
      60: aload_0
      61: aload_1
      62: iload_2
      63: invokespecial #95                 // Method java/lang/ClassLoader.loadClass:(Ljava/lang/String;Z)Ljava/lang/Class;
      66: areturn

  java.lang.Class<?> defineClass(java.lang.String, byte[]) throws java.lang.ClassFormatError;
    Code:
       0: invokestatic  #109                // Method getDefineClassMethod:()Ljava/lang/reflect/Method;
       3: aload_0
       4: invokevirtual #113                // Method getParent:()Ljava/lang/ClassLoader;
       7: iconst_5
       8: anewarray     #24                 // class java/lang/Object
      11: dup
      12: iconst_0
      13: aload_1
      14: aastore
      15: dup
      16: iconst_1
      17: aload_2
      18: aastore
      19: dup
      20: iconst_2
      21: iconst_0
      22: invokestatic  #119                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      25: aastore
      26: dup
      27: iconst_3
      28: aload_2
      29: arraylength
      30: invokestatic  #119                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      33: aastore
      34: dup
      35: iconst_4
      36: aload_0
      37: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      40: invokevirtual #127                // Method java/lang/Class.getProtectionDomain:()Ljava/security/ProtectionDomain;
      43: aastore
      44: invokevirtual #133                // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      47: checkcast     #80                 // class java/lang/Class
      50: areturn
      51: astore_3
      52: aload_0
      53: aload_1
      54: aload_2
      55: iconst_0
      56: aload_2
      57: arraylength
      58: aload_0
      59: invokevirtual #123                // Method java/lang/Object.getClass:()Ljava/lang/Class;
      62: invokevirtual #127                // Method java/lang/Class.getProtectionDomain:()Ljava/security/ProtectionDomain;
      65: invokevirtual #136                // Method defineClass:(Ljava/lang/String;[BIILjava/security/ProtectionDomain;)Ljava/lang/Class;
      68: areturn
    Exception table:
       from    to  target type
           0    50    51   Class java/lang/Exception

  static boolean areInSameRuntimeClassLoader(java.lang.Class, java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #146                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       4: aload_1
       5: invokevirtual #146                // Method java/lang/Class.getPackage:()Ljava/lang/Package;
       8: if_acmpeq     13
      11: iconst_0
      12: ireturn
      13: aload_0
      14: invokevirtual #149                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      17: astore_2
      18: aload_1
      19: invokevirtual #149                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
      22: astore_3
      23: invokestatic  #152                // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      26: astore        4
      28: aload_2
      29: ifnonnull     48
      32: aload_3
      33: ifnull        42
      36: aload_3
      37: aload         4
      39: if_acmpne     46
      42: iconst_1
      43: goto          47
      46: iconst_0
      47: ireturn
      48: aload_3
      49: ifnonnull     64
      52: aload_2
      53: aload         4
      55: if_acmpne     62
      58: iconst_1
      59: goto          63
      62: iconst_0
      63: ireturn
      64: aload_2
      65: aload_3
      66: if_acmpne     73
      69: iconst_1
      70: goto          74
      73: iconst_0
      74: ireturn

  private static java.lang.ClassLoader getParentClassLoader(java.lang.Class);
    Code:
       0: aload_0
       1: invokevirtual #149                // Method java/lang/Class.getClassLoader:()Ljava/lang/ClassLoader;
       4: astore_1
       5: aload_1
       6: ifnonnull     13
       9: invokestatic  #152                // Method java/lang/ClassLoader.getSystemClassLoader:()Ljava/lang/ClassLoader;
      12: astore_1
      13: aload_1
      14: areturn

  private static java.lang.reflect.Method getDefineClassMethod() throws java.lang.Exception;
    Code:
       0: getstatic     #159                // Field defineClassMethod:Ljava/lang/reflect/Method;
       3: ifnonnull     74
       6: getstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
       9: dup
      10: astore_0
      11: monitorenter
      12: ldc           #4                  // class java/lang/ClassLoader
      14: ldc           #160                // String defineClass
      16: iconst_5
      17: anewarray     #80                 // class java/lang/Class
      20: dup
      21: iconst_0
      22: ldc           #86                 // class java/lang/String
      24: aastore
      25: dup
      26: iconst_1
      27: ldc           #161                // class "[B"
      29: aastore
      30: dup
      31: iconst_2
      32: getstatic     #164                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      35: aastore
      36: dup
      37: iconst_3
      38: getstatic     #164                // Field java/lang/Integer.TYPE:Ljava/lang/Class;
      41: aastore
      42: dup
      43: iconst_4
      44: ldc           #166                // class java/security/ProtectionDomain
      46: aastore
      47: invokevirtual #170                // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      50: putstatic     #159                // Field defineClassMethod:Ljava/lang/reflect/Method;
      53: getstatic     #159                // Field defineClassMethod:Ljava/lang/reflect/Method;
      56: iconst_1
      57: invokevirtual #174                // Method java/lang/reflect/Method.setAccessible:(Z)V
      60: goto          64
      63: astore_1
      64: aload_0
      65: monitorexit
      66: goto          74
      69: astore_2
      70: aload_0
      71: monitorexit
      72: aload_2
      73: athrow
      74: getstatic     #159                // Field defineClassMethod:Ljava/lang/reflect/Method;
      77: areturn
    Exception table:
       from    to  target type
          53    60    63   Class java/lang/Exception
          12    66    69   any
          69    72    69   any

  static {};
    Code:
       0: new           #38                 // class java/util/WeakHashMap
       3: dup
       4: invokespecial #178                // Method java/util/WeakHashMap."<init>":()V
       7: putstatic     #32                 // Field accessClassLoaders:Ljava/util/WeakHashMap;
      10: ldc           #2                  // class com/esotericsoftware/reflectasm/AccessClassLoader
      12: invokestatic  #20                 // Method getParentClassLoader:(Ljava/lang/Class;)Ljava/lang/ClassLoader;
      15: putstatic     #22                 // Field selfContextParentClassLoader:Ljava/lang/ClassLoader;
      18: new           #2                  // class com/esotericsoftware/reflectasm/AccessClassLoader
      21: dup
      22: getstatic     #22                 // Field selfContextParentClassLoader:Ljava/lang/ClassLoader;
      25: invokespecial #36                 // Method "<init>":(Ljava/lang/ClassLoader;)V
      28: putstatic     #30                 // Field selfContextAccessClassLoader:Lcom/esotericsoftware/reflectasm/AccessClassLoader;
      31: return
}
