Compiled from "Input.java"
public class com.esotericsoftware.kryo.io.Input extends java.io.InputStream {
  protected byte[] buffer;

  protected int position;

  protected int capacity;

  protected int limit;

  protected long total;

  protected char[] chars;

  protected java.io.InputStream inputStream;

  public com.esotericsoftware.kryo.io.Input();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: bipush        32
       7: newarray       char
       9: putfield      #2                  // Field chars:[C
      12: return

  public com.esotericsoftware.kryo.io.Input(int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: bipush        32
       7: newarray       char
       9: putfield      #2                  // Field chars:[C
      12: aload_0
      13: iload_1
      14: putfield      #3                  // Field capacity:I
      17: aload_0
      18: iload_1
      19: newarray       byte
      21: putfield      #4                  // Field buffer:[B
      24: return

  public com.esotericsoftware.kryo.io.Input(byte[]);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: bipush        32
       7: newarray       char
       9: putfield      #2                  // Field chars:[C
      12: aload_0
      13: aload_1
      14: iconst_0
      15: aload_1
      16: arraylength
      17: invokevirtual #5                  // Method setBuffer:([BII)V
      20: return

  public com.esotericsoftware.kryo.io.Input(byte[], int, int);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/io/InputStream."<init>":()V
       4: aload_0
       5: bipush        32
       7: newarray       char
       9: putfield      #2                  // Field chars:[C
      12: aload_0
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #5                  // Method setBuffer:([BII)V
      19: return

  public com.esotericsoftware.kryo.io.Input(java.io.InputStream);
    Code:
       0: aload_0
       1: sipush        4096
       4: invokespecial #6                  // Method "<init>":(I)V
       7: aload_1
       8: ifnonnull     21
      11: new           #7                  // class java/lang/IllegalArgumentException
      14: dup
      15: ldc           #8                  // String inputStream cannot be null.
      17: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      20: athrow
      21: aload_0
      22: aload_1
      23: putfield      #10                 // Field inputStream:Ljava/io/InputStream;
      26: return

  public com.esotericsoftware.kryo.io.Input(java.io.InputStream, int);
    Code:
       0: aload_0
       1: iload_2
       2: invokespecial #6                  // Method "<init>":(I)V
       5: aload_1
       6: ifnonnull     19
       9: new           #7                  // class java/lang/IllegalArgumentException
      12: dup
      13: ldc           #8                  // String inputStream cannot be null.
      15: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      18: athrow
      19: aload_0
      20: aload_1
      21: putfield      #10                 // Field inputStream:Ljava/io/InputStream;
      24: return

  public void setBuffer(byte[]);
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #5                  // Method setBuffer:([BII)V
       8: return

  public void setBuffer(byte[], int, int);
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String bytes cannot be null.
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field buffer:[B
      19: aload_0
      20: iload_2
      21: putfield      #12                 // Field position:I
      24: aload_0
      25: iload_2
      26: iload_3
      27: iadd
      28: putfield      #13                 // Field limit:I
      31: aload_0
      32: aload_1
      33: arraylength
      34: putfield      #3                  // Field capacity:I
      37: aload_0
      38: lconst_0
      39: putfield      #14                 // Field total:J
      42: aload_0
      43: aconst_null
      44: putfield      #10                 // Field inputStream:Ljava/io/InputStream;
      47: return

  public byte[] getBuffer();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: areturn

  public java.io.InputStream getInputStream();
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
       4: areturn

  public void setInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #10                 // Field inputStream:Ljava/io/InputStream;
       5: aload_0
       6: iconst_0
       7: putfield      #13                 // Field limit:I
      10: aload_0
      11: invokevirtual #15                 // Method rewind:()V
      14: return

  public long total();
    Code:
       0: aload_0
       1: getfield      #14                 // Field total:J
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: i2l
       9: ladd
      10: lreturn

  public void setTotal(long);
    Code:
       0: aload_0
       1: lload_1
       2: putfield      #14                 // Field total:J
       5: return

  public int position();
    Code:
       0: aload_0
       1: getfield      #12                 // Field position:I
       4: ireturn

  public void setPosition(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #12                 // Field position:I
       5: return

  public int limit();
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: ireturn

  public void setLimit(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #13                 // Field limit:I
       5: return

  public void rewind();
    Code:
       0: aload_0
       1: iconst_0
       2: putfield      #12                 // Field position:I
       5: aload_0
       6: lconst_0
       7: putfield      #14                 // Field total:J
      10: return

  public void skip(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: iload_1
      10: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      13: istore_2
      14: aload_0
      15: dup
      16: getfield      #12                 // Field position:I
      19: iload_2
      20: iadd
      21: putfield      #12                 // Field position:I
      24: iload_1
      25: iload_2
      26: isub
      27: istore_1
      28: iload_1
      29: ifne          35
      32: goto          53
      35: iload_1
      36: aload_0
      37: getfield      #3                  // Field capacity:I
      40: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      43: istore_2
      44: aload_0
      45: iload_2
      46: invokevirtual #17                 // Method require:(I)I
      49: pop
      50: goto          14
      53: return

  protected int fill(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
       4: ifnonnull     9
       7: iconst_m1
       8: ireturn
       9: aload_0
      10: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
      13: aload_1
      14: iload_2
      15: iload_3
      16: invokevirtual #18                 // Method java/io/InputStream.read:([BII)I
      19: ireturn
      20: astore        4
      22: new           #20                 // class com/esotericsoftware/kryo/KryoException
      25: dup
      26: aload         4
      28: invokespecial #21                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
      31: athrow
    Exception table:
       from    to  target type
           9    19    20   Class java/io/IOException

  protected int require(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmplt     17
      15: iload_2
      16: ireturn
      17: iload_1
      18: aload_0
      19: getfield      #3                  // Field capacity:I
      22: if_icmple     64
      25: new           #20                 // class com/esotericsoftware/kryo/KryoException
      28: dup
      29: new           #22                 // class java/lang/StringBuilder
      32: dup
      33: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
      36: ldc           #24                 // String Buffer too small: capacity:
      38: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      41: aload_0
      42: getfield      #3                  // Field capacity:I
      45: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      48: ldc           #27                 // String , required:
      50: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      53: iload_1
      54: invokevirtual #26                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      57: invokevirtual #28                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      60: invokespecial #29                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      63: athrow
      64: iload_2
      65: ifle          126
      68: aload_0
      69: aload_0
      70: getfield      #4                  // Field buffer:[B
      73: aload_0
      74: getfield      #13                 // Field limit:I
      77: aload_0
      78: getfield      #3                  // Field capacity:I
      81: aload_0
      82: getfield      #13                 // Field limit:I
      85: isub
      86: invokevirtual #30                 // Method fill:([BII)I
      89: istore_3
      90: iload_3
      91: iconst_m1
      92: if_icmpne     105
      95: new           #20                 // class com/esotericsoftware/kryo/KryoException
      98: dup
      99: ldc           #31                 // String Buffer underflow.
     101: invokespecial #29                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     104: athrow
     105: iload_2
     106: iload_3
     107: iadd
     108: istore_2
     109: iload_2
     110: iload_1
     111: if_icmplt     126
     114: aload_0
     115: dup
     116: getfield      #13                 // Field limit:I
     119: iload_3
     120: iadd
     121: putfield      #13                 // Field limit:I
     124: iload_2
     125: ireturn
     126: aload_0
     127: getfield      #4                  // Field buffer:[B
     130: aload_0
     131: getfield      #12                 // Field position:I
     134: aload_0
     135: getfield      #4                  // Field buffer:[B
     138: iconst_0
     139: iload_2
     140: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     143: aload_0
     144: dup
     145: getfield      #14                 // Field total:J
     148: aload_0
     149: getfield      #12                 // Field position:I
     152: i2l
     153: ladd
     154: putfield      #14                 // Field total:J
     157: aload_0
     158: iconst_0
     159: putfield      #12                 // Field position:I
     162: aload_0
     163: aload_0
     164: getfield      #4                  // Field buffer:[B
     167: iload_2
     168: aload_0
     169: getfield      #3                  // Field capacity:I
     172: iload_2
     173: isub
     174: invokevirtual #30                 // Method fill:([BII)I
     177: istore_3
     178: iload_3
     179: iconst_m1
     180: if_icmpne     201
     183: iload_2
     184: iload_1
     185: if_icmplt     191
     188: goto          213
     191: new           #20                 // class com/esotericsoftware/kryo/KryoException
     194: dup
     195: ldc           #31                 // String Buffer underflow.
     197: invokespecial #29                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     200: athrow
     201: iload_2
     202: iload_3
     203: iadd
     204: istore_2
     205: iload_2
     206: iload_1
     207: if_icmplt     162
     210: goto          213
     213: aload_0
     214: iload_2
     215: putfield      #13                 // Field limit:I
     218: iload_2
     219: ireturn

  private int optional(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: istore_2
      10: iload_2
      11: iload_1
      12: if_icmplt     17
      15: iload_1
      16: ireturn
      17: iload_1
      18: aload_0
      19: getfield      #3                  // Field capacity:I
      22: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      25: istore_1
      26: aload_0
      27: aload_0
      28: getfield      #4                  // Field buffer:[B
      31: aload_0
      32: getfield      #13                 // Field limit:I
      35: aload_0
      36: getfield      #3                  // Field capacity:I
      39: aload_0
      40: getfield      #13                 // Field limit:I
      43: isub
      44: invokevirtual #30                 // Method fill:([BII)I
      47: istore_3
      48: iload_3
      49: iconst_m1
      50: if_icmpne     67
      53: iload_2
      54: ifne          61
      57: iconst_m1
      58: goto          66
      61: iload_2
      62: iload_1
      63: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      66: ireturn
      67: iload_2
      68: iload_3
      69: iadd
      70: istore_2
      71: iload_2
      72: iload_1
      73: if_icmplt     88
      76: aload_0
      77: dup
      78: getfield      #13                 // Field limit:I
      81: iload_3
      82: iadd
      83: putfield      #13                 // Field limit:I
      86: iload_1
      87: ireturn
      88: aload_0
      89: getfield      #4                  // Field buffer:[B
      92: aload_0
      93: getfield      #12                 // Field position:I
      96: aload_0
      97: getfield      #4                  // Field buffer:[B
     100: iconst_0
     101: iload_2
     102: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     105: aload_0
     106: dup
     107: getfield      #14                 // Field total:J
     110: aload_0
     111: getfield      #12                 // Field position:I
     114: i2l
     115: ladd
     116: putfield      #14                 // Field total:J
     119: aload_0
     120: iconst_0
     121: putfield      #12                 // Field position:I
     124: aload_0
     125: aload_0
     126: getfield      #4                  // Field buffer:[B
     129: iload_2
     130: aload_0
     131: getfield      #3                  // Field capacity:I
     134: iload_2
     135: isub
     136: invokevirtual #30                 // Method fill:([BII)I
     139: istore_3
     140: iload_3
     141: iconst_m1
     142: if_icmpne     148
     145: goto          160
     148: iload_2
     149: iload_3
     150: iadd
     151: istore_2
     152: iload_2
     153: iload_1
     154: if_icmplt     124
     157: goto          160
     160: aload_0
     161: iload_2
     162: putfield      #13                 // Field limit:I
     165: iload_2
     166: ifne          173
     169: iconst_m1
     170: goto          178
     173: iload_2
     174: iload_1
     175: invokestatic  #16                 // Method java/lang/Math.min:(II)I
     178: ireturn

  public boolean eof();
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #33                 // Method optional:(I)I
       5: ifgt          12
       8: iconst_1
       9: goto          13
      12: iconst_0
      13: ireturn

  public int available() throws java.io.IOException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: aconst_null
      10: aload_0
      11: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
      14: if_acmpeq     27
      17: aload_0
      18: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
      21: invokevirtual #34                 // Method java/io/InputStream.available:()I
      24: goto          28
      27: iconst_0
      28: iadd
      29: ireturn

  public int read() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokespecial #33                 // Method optional:(I)I
       5: ifgt          10
       8: iconst_m1
       9: ireturn
      10: aload_0
      11: getfield      #4                  // Field buffer:[B
      14: aload_0
      15: dup
      16: getfield      #12                 // Field position:I
      19: dup_x1
      20: iconst_1
      21: iadd
      22: putfield      #12                 // Field position:I
      25: baload
      26: sipush        255
      29: iand
      30: ireturn

  public int read(byte[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #35                 // Method read:([BII)I
       8: ireturn

  public int read(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String bytes cannot be null.
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: iload_3
      15: istore        4
      17: aload_0
      18: getfield      #13                 // Field limit:I
      21: aload_0
      22: getfield      #12                 // Field position:I
      25: isub
      26: iload_3
      27: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      30: istore        5
      32: aload_0
      33: getfield      #4                  // Field buffer:[B
      36: aload_0
      37: getfield      #12                 // Field position:I
      40: aload_1
      41: iload_2
      42: iload         5
      44: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      47: aload_0
      48: dup
      49: getfield      #12                 // Field position:I
      52: iload         5
      54: iadd
      55: putfield      #12                 // Field position:I
      58: iload_3
      59: iload         5
      61: isub
      62: istore_3
      63: iload_3
      64: ifne          70
      67: goto          110
      70: iload_2
      71: iload         5
      73: iadd
      74: istore_2
      75: aload_0
      76: iload_3
      77: invokespecial #33                 // Method optional:(I)I
      80: istore        5
      82: iload         5
      84: iconst_m1
      85: if_icmpne     96
      88: iload         4
      90: iload_3
      91: if_icmpne     110
      94: iconst_m1
      95: ireturn
      96: aload_0
      97: getfield      #12                 // Field position:I
     100: aload_0
     101: getfield      #13                 // Field limit:I
     104: if_icmpne     32
     107: goto          110
     110: iload         4
     112: iload_3
     113: isub
     114: ireturn

  public long skip(long) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: lload_1
       1: lstore_3
       2: lload_3
       3: lconst_0
       4: lcmp
       5: ifle          33
       8: ldc2_w        #37                 // long 2147483647l
      11: lload_3
      12: invokestatic  #39                 // Method java/lang/Math.min:(JJ)J
      15: l2i
      16: istore        5
      18: aload_0
      19: iload         5
      21: invokevirtual #40                 // Method skip:(I)V
      24: lload_3
      25: iload         5
      27: i2l
      28: lsub
      29: lstore_3
      30: goto          2
      33: lload_1
      34: lreturn

  public void close() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
       4: ifnull        18
       7: aload_0
       8: getfield      #10                 // Field inputStream:Ljava/io/InputStream;
      11: invokevirtual #41                 // Method java/io/InputStream.close:()V
      14: goto          18
      17: astore_1
      18: return
    Exception table:
       from    to  target type
           7    14    17   Class java/io/IOException

  public byte readByte() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: ireturn

  public int readByteUnsigned() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: sipush        255
      25: iand
      26: ireturn

  public byte[] readBytes(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       byte
       3: astore_2
       4: aload_0
       5: aload_2
       6: iconst_0
       7: iload_1
       8: invokevirtual #42                 // Method readBytes:([BII)V
      11: aload_2
      12: areturn

  public void readBytes(byte[]) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: aload_1
       2: iconst_0
       3: aload_1
       4: arraylength
       5: invokevirtual #42                 // Method readBytes:([BII)V
       8: return

  public void readBytes(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_1
       1: ifnonnull     14
       4: new           #7                  // class java/lang/IllegalArgumentException
       7: dup
       8: ldc           #11                 // String bytes cannot be null.
      10: invokespecial #9                  // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      13: athrow
      14: aload_0
      15: getfield      #13                 // Field limit:I
      18: aload_0
      19: getfield      #12                 // Field position:I
      22: isub
      23: iload_3
      24: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      27: istore        4
      29: aload_0
      30: getfield      #4                  // Field buffer:[B
      33: aload_0
      34: getfield      #12                 // Field position:I
      37: aload_1
      38: iload_2
      39: iload         4
      41: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
      44: aload_0
      45: dup
      46: getfield      #12                 // Field position:I
      49: iload         4
      51: iadd
      52: putfield      #12                 // Field position:I
      55: iload_3
      56: iload         4
      58: isub
      59: istore_3
      60: iload_3
      61: ifne          67
      64: goto          92
      67: iload_2
      68: iload         4
      70: iadd
      71: istore_2
      72: iload_3
      73: aload_0
      74: getfield      #3                  // Field capacity:I
      77: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      80: istore        4
      82: aload_0
      83: iload         4
      85: invokevirtual #17                 // Method require:(I)I
      88: pop
      89: goto          29
      92: return

  public int readInt() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_4
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: astore_1
      11: aload_0
      12: getfield      #12                 // Field position:I
      15: istore_2
      16: aload_0
      17: iload_2
      18: iconst_4
      19: iadd
      20: putfield      #12                 // Field position:I
      23: aload_1
      24: iload_2
      25: baload
      26: sipush        255
      29: iand
      30: bipush        24
      32: ishl
      33: aload_1
      34: iload_2
      35: iconst_1
      36: iadd
      37: baload
      38: sipush        255
      41: iand
      42: bipush        16
      44: ishl
      45: ior
      46: aload_1
      47: iload_2
      48: iconst_2
      49: iadd
      50: baload
      51: sipush        255
      54: iand
      55: bipush        8
      57: ishl
      58: ior
      59: aload_1
      60: iload_2
      61: iconst_3
      62: iadd
      63: baload
      64: sipush        255
      67: iand
      68: ior
      69: ireturn

  public int readInt(boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #43                 // Method readVarInt:(Z)I
       5: ireturn

  public int readVarInt(boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: iconst_5
       6: if_icmpge     15
       9: aload_0
      10: iload_1
      11: invokespecial #44                 // Method readInt_slow:(Z)I
      14: ireturn
      15: aload_0
      16: getfield      #4                  // Field buffer:[B
      19: aload_0
      20: dup
      21: getfield      #12                 // Field position:I
      24: dup_x1
      25: iconst_1
      26: iadd
      27: putfield      #12                 // Field position:I
      30: baload
      31: istore_2
      32: iload_2
      33: bipush        127
      35: iand
      36: istore_3
      37: iload_2
      38: sipush        128
      41: iand
      42: ifeq          175
      45: aload_0
      46: getfield      #4                  // Field buffer:[B
      49: astore        4
      51: aload         4
      53: aload_0
      54: dup
      55: getfield      #12                 // Field position:I
      58: dup_x1
      59: iconst_1
      60: iadd
      61: putfield      #12                 // Field position:I
      64: baload
      65: istore_2
      66: iload_3
      67: iload_2
      68: bipush        127
      70: iand
      71: bipush        7
      73: ishl
      74: ior
      75: istore_3
      76: iload_2
      77: sipush        128
      80: iand
      81: ifeq          175
      84: aload         4
      86: aload_0
      87: dup
      88: getfield      #12                 // Field position:I
      91: dup_x1
      92: iconst_1
      93: iadd
      94: putfield      #12                 // Field position:I
      97: baload
      98: istore_2
      99: iload_3
     100: iload_2
     101: bipush        127
     103: iand
     104: bipush        14
     106: ishl
     107: ior
     108: istore_3
     109: iload_2
     110: sipush        128
     113: iand
     114: ifeq          175
     117: aload         4
     119: aload_0
     120: dup
     121: getfield      #12                 // Field position:I
     124: dup_x1
     125: iconst_1
     126: iadd
     127: putfield      #12                 // Field position:I
     130: baload
     131: istore_2
     132: iload_3
     133: iload_2
     134: bipush        127
     136: iand
     137: bipush        21
     139: ishl
     140: ior
     141: istore_3
     142: iload_2
     143: sipush        128
     146: iand
     147: ifeq          175
     150: aload         4
     152: aload_0
     153: dup
     154: getfield      #12                 // Field position:I
     157: dup_x1
     158: iconst_1
     159: iadd
     160: putfield      #12                 // Field position:I
     163: baload
     164: istore_2
     165: iload_3
     166: iload_2
     167: bipush        127
     169: iand
     170: bipush        28
     172: ishl
     173: ior
     174: istore_3
     175: iload_1
     176: ifeq          183
     179: iload_3
     180: goto          191
     183: iload_3
     184: iconst_1
     185: iushr
     186: iload_3
     187: iconst_1
     188: iand
     189: ineg
     190: ixor
     191: ireturn

  private int readInt_slow(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #12                 // Field position:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #12                 // Field position:I
      15: baload
      16: istore_2
      17: iload_2
      18: bipush        127
      20: iand
      21: istore_3
      22: iload_2
      23: sipush        128
      26: iand
      27: ifeq          184
      30: aload_0
      31: iconst_1
      32: invokevirtual #17                 // Method require:(I)I
      35: pop
      36: aload_0
      37: getfield      #4                  // Field buffer:[B
      40: astore        4
      42: aload         4
      44: aload_0
      45: dup
      46: getfield      #12                 // Field position:I
      49: dup_x1
      50: iconst_1
      51: iadd
      52: putfield      #12                 // Field position:I
      55: baload
      56: istore_2
      57: iload_3
      58: iload_2
      59: bipush        127
      61: iand
      62: bipush        7
      64: ishl
      65: ior
      66: istore_3
      67: iload_2
      68: sipush        128
      71: iand
      72: ifeq          184
      75: aload_0
      76: iconst_1
      77: invokevirtual #17                 // Method require:(I)I
      80: pop
      81: aload         4
      83: aload_0
      84: dup
      85: getfield      #12                 // Field position:I
      88: dup_x1
      89: iconst_1
      90: iadd
      91: putfield      #12                 // Field position:I
      94: baload
      95: istore_2
      96: iload_3
      97: iload_2
      98: bipush        127
     100: iand
     101: bipush        14
     103: ishl
     104: ior
     105: istore_3
     106: iload_2
     107: sipush        128
     110: iand
     111: ifeq          184
     114: aload_0
     115: iconst_1
     116: invokevirtual #17                 // Method require:(I)I
     119: pop
     120: aload         4
     122: aload_0
     123: dup
     124: getfield      #12                 // Field position:I
     127: dup_x1
     128: iconst_1
     129: iadd
     130: putfield      #12                 // Field position:I
     133: baload
     134: istore_2
     135: iload_3
     136: iload_2
     137: bipush        127
     139: iand
     140: bipush        21
     142: ishl
     143: ior
     144: istore_3
     145: iload_2
     146: sipush        128
     149: iand
     150: ifeq          184
     153: aload_0
     154: iconst_1
     155: invokevirtual #17                 // Method require:(I)I
     158: pop
     159: aload         4
     161: aload_0
     162: dup
     163: getfield      #12                 // Field position:I
     166: dup_x1
     167: iconst_1
     168: iadd
     169: putfield      #12                 // Field position:I
     172: baload
     173: istore_2
     174: iload_3
     175: iload_2
     176: bipush        127
     178: iand
     179: bipush        28
     181: ishl
     182: ior
     183: istore_3
     184: iload_1
     185: ifeq          192
     188: iload_3
     189: goto          200
     192: iload_3
     193: iconst_1
     194: iushr
     195: iload_3
     196: iconst_1
     197: iand
     198: ineg
     199: ixor
     200: ireturn

  public boolean canReadInt() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: iconst_5
      10: if_icmplt     15
      13: iconst_1
      14: ireturn
      15: aload_0
      16: iconst_5
      17: invokespecial #33                 // Method optional:(I)I
      20: ifgt          25
      23: iconst_0
      24: ireturn
      25: aload_0
      26: getfield      #12                 // Field position:I
      29: istore_1
      30: aload_0
      31: getfield      #4                  // Field buffer:[B
      34: iload_1
      35: iinc          1, 1
      38: baload
      39: sipush        128
      42: iand
      43: ifne          48
      46: iconst_1
      47: ireturn
      48: iload_1
      49: aload_0
      50: getfield      #13                 // Field limit:I
      53: if_icmpne     58
      56: iconst_0
      57: ireturn
      58: aload_0
      59: getfield      #4                  // Field buffer:[B
      62: iload_1
      63: iinc          1, 1
      66: baload
      67: sipush        128
      70: iand
      71: ifne          76
      74: iconst_1
      75: ireturn
      76: iload_1
      77: aload_0
      78: getfield      #13                 // Field limit:I
      81: if_icmpne     86
      84: iconst_0
      85: ireturn
      86: aload_0
      87: getfield      #4                  // Field buffer:[B
      90: iload_1
      91: iinc          1, 1
      94: baload
      95: sipush        128
      98: iand
      99: ifne          104
     102: iconst_1
     103: ireturn
     104: iload_1
     105: aload_0
     106: getfield      #13                 // Field limit:I
     109: if_icmpne     114
     112: iconst_0
     113: ireturn
     114: aload_0
     115: getfield      #4                  // Field buffer:[B
     118: iload_1
     119: iinc          1, 1
     122: baload
     123: sipush        128
     126: iand
     127: ifne          132
     130: iconst_1
     131: ireturn
     132: iload_1
     133: aload_0
     134: getfield      #13                 // Field limit:I
     137: if_icmpne     142
     140: iconst_0
     141: ireturn
     142: iconst_1
     143: ireturn

  public boolean canReadLong() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #13                 // Field limit:I
       4: aload_0
       5: getfield      #12                 // Field position:I
       8: isub
       9: bipush        9
      11: if_icmplt     16
      14: iconst_1
      15: ireturn
      16: aload_0
      17: iconst_5
      18: invokespecial #33                 // Method optional:(I)I
      21: ifgt          26
      24: iconst_0
      25: ireturn
      26: aload_0
      27: getfield      #12                 // Field position:I
      30: istore_1
      31: aload_0
      32: getfield      #4                  // Field buffer:[B
      35: iload_1
      36: iinc          1, 1
      39: baload
      40: sipush        128
      43: iand
      44: ifne          49
      47: iconst_1
      48: ireturn
      49: iload_1
      50: aload_0
      51: getfield      #13                 // Field limit:I
      54: if_icmpne     59
      57: iconst_0
      58: ireturn
      59: aload_0
      60: getfield      #4                  // Field buffer:[B
      63: iload_1
      64: iinc          1, 1
      67: baload
      68: sipush        128
      71: iand
      72: ifne          77
      75: iconst_1
      76: ireturn
      77: iload_1
      78: aload_0
      79: getfield      #13                 // Field limit:I
      82: if_icmpne     87
      85: iconst_0
      86: ireturn
      87: aload_0
      88: getfield      #4                  // Field buffer:[B
      91: iload_1
      92: iinc          1, 1
      95: baload
      96: sipush        128
      99: iand
     100: ifne          105
     103: iconst_1
     104: ireturn
     105: iload_1
     106: aload_0
     107: getfield      #13                 // Field limit:I
     110: if_icmpne     115
     113: iconst_0
     114: ireturn
     115: aload_0
     116: getfield      #4                  // Field buffer:[B
     119: iload_1
     120: iinc          1, 1
     123: baload
     124: sipush        128
     127: iand
     128: ifne          133
     131: iconst_1
     132: ireturn
     133: iload_1
     134: aload_0
     135: getfield      #13                 // Field limit:I
     138: if_icmpne     143
     141: iconst_0
     142: ireturn
     143: aload_0
     144: getfield      #4                  // Field buffer:[B
     147: iload_1
     148: iinc          1, 1
     151: baload
     152: sipush        128
     155: iand
     156: ifne          161
     159: iconst_1
     160: ireturn
     161: iload_1
     162: aload_0
     163: getfield      #13                 // Field limit:I
     166: if_icmpne     171
     169: iconst_0
     170: ireturn
     171: aload_0
     172: getfield      #4                  // Field buffer:[B
     175: iload_1
     176: iinc          1, 1
     179: baload
     180: sipush        128
     183: iand
     184: ifne          189
     187: iconst_1
     188: ireturn
     189: iload_1
     190: aload_0
     191: getfield      #13                 // Field limit:I
     194: if_icmpne     199
     197: iconst_0
     198: ireturn
     199: aload_0
     200: getfield      #4                  // Field buffer:[B
     203: iload_1
     204: iinc          1, 1
     207: baload
     208: sipush        128
     211: iand
     212: ifne          217
     215: iconst_1
     216: ireturn
     217: iload_1
     218: aload_0
     219: getfield      #13                 // Field limit:I
     222: if_icmpne     227
     225: iconst_0
     226: ireturn
     227: aload_0
     228: getfield      #4                  // Field buffer:[B
     231: iload_1
     232: iinc          1, 1
     235: baload
     236: sipush        128
     239: iand
     240: ifne          245
     243: iconst_1
     244: ireturn
     245: iload_1
     246: aload_0
     247: getfield      #13                 // Field limit:I
     250: if_icmpne     255
     253: iconst_0
     254: ireturn
     255: iconst_1
     256: ireturn

  public java.lang.String readString();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: istore_1
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: istore_2
      23: iload_2
      24: sipush        128
      27: iand
      28: ifne          36
      31: aload_0
      32: invokespecial #45                 // Method readAscii:()Ljava/lang/String;
      35: areturn
      36: iload_1
      37: iconst_5
      38: if_icmplt     49
      41: aload_0
      42: iload_2
      43: invokespecial #46                 // Method readUtf8Length:(I)I
      46: goto          54
      49: aload_0
      50: iload_2
      51: invokespecial #47                 // Method readUtf8Length_slow:(I)I
      54: istore_3
      55: iload_3
      56: lookupswitch  { // 2
                     0: 84
                     1: 86
               default: 89
          }
      84: aconst_null
      85: areturn
      86: ldc           #48                 // String
      88: areturn
      89: iinc          3, -1
      92: aload_0
      93: getfield      #2                  // Field chars:[C
      96: arraylength
      97: iload_3
      98: if_icmpge     108
     101: aload_0
     102: iload_3
     103: newarray       char
     105: putfield      #2                  // Field chars:[C
     108: aload_0
     109: iload_3
     110: invokespecial #49                 // Method readUtf8:(I)V
     113: new           #50                 // class java/lang/String
     116: dup
     117: aload_0
     118: getfield      #2                  // Field chars:[C
     121: iconst_0
     122: iload_3
     123: invokespecial #51                 // Method java/lang/String."<init>":([CII)V
     126: areturn

  private int readUtf8Length(int);
    Code:
       0: iload_1
       1: bipush        63
       3: iand
       4: istore_2
       5: iload_1
       6: bipush        64
       8: iand
       9: ifeq          137
      12: aload_0
      13: getfield      #4                  // Field buffer:[B
      16: astore_3
      17: aload_3
      18: aload_0
      19: dup
      20: getfield      #12                 // Field position:I
      23: dup_x1
      24: iconst_1
      25: iadd
      26: putfield      #12                 // Field position:I
      29: baload
      30: istore_1
      31: iload_2
      32: iload_1
      33: bipush        127
      35: iand
      36: bipush        6
      38: ishl
      39: ior
      40: istore_2
      41: iload_1
      42: sipush        128
      45: iand
      46: ifeq          137
      49: aload_3
      50: aload_0
      51: dup
      52: getfield      #12                 // Field position:I
      55: dup_x1
      56: iconst_1
      57: iadd
      58: putfield      #12                 // Field position:I
      61: baload
      62: istore_1
      63: iload_2
      64: iload_1
      65: bipush        127
      67: iand
      68: bipush        13
      70: ishl
      71: ior
      72: istore_2
      73: iload_1
      74: sipush        128
      77: iand
      78: ifeq          137
      81: aload_3
      82: aload_0
      83: dup
      84: getfield      #12                 // Field position:I
      87: dup_x1
      88: iconst_1
      89: iadd
      90: putfield      #12                 // Field position:I
      93: baload
      94: istore_1
      95: iload_2
      96: iload_1
      97: bipush        127
      99: iand
     100: bipush        20
     102: ishl
     103: ior
     104: istore_2
     105: iload_1
     106: sipush        128
     109: iand
     110: ifeq          137
     113: aload_3
     114: aload_0
     115: dup
     116: getfield      #12                 // Field position:I
     119: dup_x1
     120: iconst_1
     121: iadd
     122: putfield      #12                 // Field position:I
     125: baload
     126: istore_1
     127: iload_2
     128: iload_1
     129: bipush        127
     131: iand
     132: bipush        27
     134: ishl
     135: ior
     136: istore_2
     137: iload_2
     138: ireturn

  private int readUtf8Length_slow(int);
    Code:
       0: iload_1
       1: bipush        63
       3: iand
       4: istore_2
       5: iload_1
       6: bipush        64
       8: iand
       9: ifeq          161
      12: aload_0
      13: iconst_1
      14: invokevirtual #17                 // Method require:(I)I
      17: pop
      18: aload_0
      19: getfield      #4                  // Field buffer:[B
      22: astore_3
      23: aload_3
      24: aload_0
      25: dup
      26: getfield      #12                 // Field position:I
      29: dup_x1
      30: iconst_1
      31: iadd
      32: putfield      #12                 // Field position:I
      35: baload
      36: istore_1
      37: iload_2
      38: iload_1
      39: bipush        127
      41: iand
      42: bipush        6
      44: ishl
      45: ior
      46: istore_2
      47: iload_1
      48: sipush        128
      51: iand
      52: ifeq          161
      55: aload_0
      56: iconst_1
      57: invokevirtual #17                 // Method require:(I)I
      60: pop
      61: aload_3
      62: aload_0
      63: dup
      64: getfield      #12                 // Field position:I
      67: dup_x1
      68: iconst_1
      69: iadd
      70: putfield      #12                 // Field position:I
      73: baload
      74: istore_1
      75: iload_2
      76: iload_1
      77: bipush        127
      79: iand
      80: bipush        13
      82: ishl
      83: ior
      84: istore_2
      85: iload_1
      86: sipush        128
      89: iand
      90: ifeq          161
      93: aload_0
      94: iconst_1
      95: invokevirtual #17                 // Method require:(I)I
      98: pop
      99: aload_3
     100: aload_0
     101: dup
     102: getfield      #12                 // Field position:I
     105: dup_x1
     106: iconst_1
     107: iadd
     108: putfield      #12                 // Field position:I
     111: baload
     112: istore_1
     113: iload_2
     114: iload_1
     115: bipush        127
     117: iand
     118: bipush        20
     120: ishl
     121: ior
     122: istore_2
     123: iload_1
     124: sipush        128
     127: iand
     128: ifeq          161
     131: aload_0
     132: iconst_1
     133: invokevirtual #17                 // Method require:(I)I
     136: pop
     137: aload_3
     138: aload_0
     139: dup
     140: getfield      #12                 // Field position:I
     143: dup_x1
     144: iconst_1
     145: iadd
     146: putfield      #12                 // Field position:I
     149: baload
     150: istore_1
     151: iload_2
     152: iload_1
     153: bipush        127
     155: iand
     156: bipush        27
     158: ishl
     159: ior
     160: istore_2
     161: iload_2
     162: ireturn

  private void readUtf8(int);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: astore_2
       5: aload_0
       6: getfield      #2                  // Field chars:[C
       9: astore_3
      10: iconst_0
      11: istore        4
      13: aload_0
      14: iconst_1
      15: invokevirtual #17                 // Method require:(I)I
      18: iload_1
      19: invokestatic  #16                 // Method java/lang/Math.min:(II)I
      22: istore        5
      24: aload_0
      25: getfield      #12                 // Field position:I
      28: istore        6
      30: iload         4
      32: iload         5
      34: if_icmpge     70
      37: aload_2
      38: iload         6
      40: iinc          6, 1
      43: baload
      44: istore        7
      46: iload         7
      48: ifge          57
      51: iinc          6, -1
      54: goto          70
      57: aload_3
      58: iload         4
      60: iinc          4, 1
      63: iload         7
      65: i2c
      66: castore
      67: goto          30
      70: aload_0
      71: iload         6
      73: putfield      #12                 // Field position:I
      76: iload         4
      78: iload_1
      79: if_icmpge     89
      82: aload_0
      83: iload_1
      84: iload         4
      86: invokespecial #52                 // Method readUtf8_slow:(II)V
      89: return

  private void readUtf8_slow(int, int);
    Code:
       0: aload_0
       1: getfield      #2                  // Field chars:[C
       4: astore_3
       5: aload_0
       6: getfield      #4                  // Field buffer:[B
       9: astore        4
      11: iload_2
      12: iload_1
      13: if_icmpge     254
      16: aload_0
      17: getfield      #12                 // Field position:I
      20: aload_0
      21: getfield      #13                 // Field limit:I
      24: if_icmpne     33
      27: aload_0
      28: iconst_1
      29: invokevirtual #17                 // Method require:(I)I
      32: pop
      33: aload         4
      35: aload_0
      36: dup
      37: getfield      #12                 // Field position:I
      40: dup_x1
      41: iconst_1
      42: iadd
      43: putfield      #12                 // Field position:I
      46: baload
      47: sipush        255
      50: iand
      51: istore        5
      53: iload         5
      55: iconst_4
      56: ishr
      57: tableswitch   { // 0 to 14
                     0: 132
                     1: 132
                     2: 132
                     3: 132
                     4: 132
                     5: 132
                     6: 132
                     7: 132
                     8: 248
                     9: 248
                    10: 248
                    11: 248
                    12: 141
                    13: 141
                    14: 191
               default: 248
          }
     132: aload_3
     133: iload_2
     134: iload         5
     136: i2c
     137: castore
     138: goto          248
     141: aload_0
     142: getfield      #12                 // Field position:I
     145: aload_0
     146: getfield      #13                 // Field limit:I
     149: if_icmpne     158
     152: aload_0
     153: iconst_1
     154: invokevirtual #17                 // Method require:(I)I
     157: pop
     158: aload_3
     159: iload_2
     160: iload         5
     162: bipush        31
     164: iand
     165: bipush        6
     167: ishl
     168: aload         4
     170: aload_0
     171: dup
     172: getfield      #12                 // Field position:I
     175: dup_x1
     176: iconst_1
     177: iadd
     178: putfield      #12                 // Field position:I
     181: baload
     182: bipush        63
     184: iand
     185: ior
     186: i2c
     187: castore
     188: goto          248
     191: aload_0
     192: iconst_2
     193: invokevirtual #17                 // Method require:(I)I
     196: pop
     197: aload_3
     198: iload_2
     199: iload         5
     201: bipush        15
     203: iand
     204: bipush        12
     206: ishl
     207: aload         4
     209: aload_0
     210: dup
     211: getfield      #12                 // Field position:I
     214: dup_x1
     215: iconst_1
     216: iadd
     217: putfield      #12                 // Field position:I
     220: baload
     221: bipush        63
     223: iand
     224: bipush        6
     226: ishl
     227: ior
     228: aload         4
     230: aload_0
     231: dup
     232: getfield      #12                 // Field position:I
     235: dup_x1
     236: iconst_1
     237: iadd
     238: putfield      #12                 // Field position:I
     241: baload
     242: bipush        63
     244: iand
     245: ior
     246: i2c
     247: castore
     248: iinc          2, 1
     251: goto          11
     254: return

  private java.lang.String readAscii();
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: astore_1
       5: aload_0
       6: getfield      #12                 // Field position:I
       9: istore_2
      10: iload_2
      11: iconst_1
      12: isub
      13: istore_3
      14: aload_0
      15: getfield      #13                 // Field limit:I
      18: istore        4
      20: iload_2
      21: iload         4
      23: if_icmpne     31
      26: aload_0
      27: invokespecial #53                 // Method readAscii_slow:()Ljava/lang/String;
      30: areturn
      31: aload_1
      32: iload_2
      33: iinc          2, 1
      36: baload
      37: istore        5
      39: iload         5
      41: sipush        128
      44: iand
      45: ifeq          20
      48: aload_1
      49: iload_2
      50: iconst_1
      51: isub
      52: dup2
      53: baload
      54: bipush        127
      56: iand
      57: i2b
      58: bastore
      59: new           #50                 // class java/lang/String
      62: dup
      63: aload_1
      64: iconst_0
      65: iload_3
      66: iload_2
      67: iload_3
      68: isub
      69: invokespecial #54                 // Method java/lang/String."<init>":([BIII)V
      72: astore        6
      74: aload_1
      75: iload_2
      76: iconst_1
      77: isub
      78: dup2
      79: baload
      80: sipush        128
      83: ior
      84: i2b
      85: bastore
      86: aload_0
      87: iload_2
      88: putfield      #12                 // Field position:I
      91: aload         6
      93: areturn

  private java.lang.String readAscii_slow();
    Code:
       0: aload_0
       1: dup
       2: getfield      #12                 // Field position:I
       5: iconst_1
       6: isub
       7: putfield      #12                 // Field position:I
      10: aload_0
      11: getfield      #13                 // Field limit:I
      14: aload_0
      15: getfield      #12                 // Field position:I
      18: isub
      19: istore_1
      20: iload_1
      21: aload_0
      22: getfield      #2                  // Field chars:[C
      25: arraylength
      26: if_icmple     38
      29: aload_0
      30: iload_1
      31: iconst_2
      32: imul
      33: newarray       char
      35: putfield      #2                  // Field chars:[C
      38: aload_0
      39: getfield      #2                  // Field chars:[C
      42: astore_2
      43: aload_0
      44: getfield      #4                  // Field buffer:[B
      47: astore_3
      48: aload_0
      49: getfield      #12                 // Field position:I
      52: istore        4
      54: iconst_0
      55: istore        5
      57: aload_0
      58: getfield      #13                 // Field limit:I
      61: istore        6
      63: iload         4
      65: iload         6
      67: if_icmpge     88
      70: aload_2
      71: iload         5
      73: aload_3
      74: iload         4
      76: baload
      77: i2c
      78: castore
      79: iinc          4, 1
      82: iinc          5, 1
      85: goto          63
      88: aload_0
      89: aload_0
      90: getfield      #13                 // Field limit:I
      93: putfield      #12                 // Field position:I
      96: aload_0
      97: iconst_1
      98: invokevirtual #17                 // Method require:(I)I
     101: pop
     102: aload_3
     103: aload_0
     104: dup
     105: getfield      #12                 // Field position:I
     108: dup_x1
     109: iconst_1
     110: iadd
     111: putfield      #12                 // Field position:I
     114: baload
     115: istore        4
     117: iload_1
     118: aload_2
     119: arraylength
     120: if_icmpne     148
     123: iload_1
     124: iconst_2
     125: imul
     126: newarray       char
     128: astore        5
     130: aload_2
     131: iconst_0
     132: aload         5
     134: iconst_0
     135: iload_1
     136: invokestatic  #32                 // Method java/lang/System.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V
     139: aload         5
     141: astore_2
     142: aload_0
     143: aload         5
     145: putfield      #2                  // Field chars:[C
     148: iload         4
     150: sipush        128
     153: iand
     154: sipush        128
     157: if_icmpne     175
     160: aload_2
     161: iload_1
     162: iinc          1, 1
     165: iload         4
     167: bipush        127
     169: iand
     170: i2c
     171: castore
     172: goto          187
     175: aload_2
     176: iload_1
     177: iinc          1, 1
     180: iload         4
     182: i2c
     183: castore
     184: goto          96
     187: new           #50                 // class java/lang/String
     190: dup
     191: aload_2
     192: iconst_0
     193: iload_1
     194: invokespecial #51                 // Method java/lang/String."<init>":([CII)V
     197: areturn

  public java.lang.StringBuilder readStringBuilder();
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: istore_1
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: istore_2
      23: iload_2
      24: sipush        128
      27: iand
      28: ifne          43
      31: new           #22                 // class java/lang/StringBuilder
      34: dup
      35: aload_0
      36: invokespecial #45                 // Method readAscii:()Ljava/lang/String;
      39: invokespecial #55                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      42: areturn
      43: iload_1
      44: iconst_5
      45: if_icmplt     56
      48: aload_0
      49: iload_2
      50: invokespecial #46                 // Method readUtf8Length:(I)I
      53: goto          61
      56: aload_0
      57: iload_2
      58: invokespecial #47                 // Method readUtf8Length_slow:(I)I
      61: istore_3
      62: iload_3
      63: lookupswitch  { // 2
                     0: 88
                     1: 90
               default: 100
          }
      88: aconst_null
      89: areturn
      90: new           #22                 // class java/lang/StringBuilder
      93: dup
      94: ldc           #48                 // String
      96: invokespecial #55                 // Method java/lang/StringBuilder."<init>":(Ljava/lang/String;)V
      99: areturn
     100: iinc          3, -1
     103: aload_0
     104: getfield      #2                  // Field chars:[C
     107: arraylength
     108: iload_3
     109: if_icmpge     119
     112: aload_0
     113: iload_3
     114: newarray       char
     116: putfield      #2                  // Field chars:[C
     119: aload_0
     120: iload_3
     121: invokespecial #49                 // Method readUtf8:(I)V
     124: new           #22                 // class java/lang/StringBuilder
     127: dup
     128: iload_3
     129: invokespecial #56                 // Method java/lang/StringBuilder."<init>":(I)V
     132: astore        4
     134: aload         4
     136: aload_0
     137: getfield      #2                  // Field chars:[C
     140: iconst_0
     141: iload_3
     142: invokevirtual #57                 // Method java/lang/StringBuilder.append:([CII)Ljava/lang/StringBuilder;
     145: pop
     146: aload         4
     148: areturn

  public float readFloat() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: invokevirtual #58                 // Method readInt:()I
       4: invokestatic  #59                 // Method java/lang/Float.intBitsToFloat:(I)F
       7: freturn

  public float readFloat(float, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iload_2
       2: invokevirtual #60                 // Method readInt:(Z)I
       5: i2f
       6: fload_1
       7: fdiv
       8: freturn

  public short readShort() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: sipush        255
      25: iand
      26: bipush        8
      28: ishl
      29: aload_0
      30: getfield      #4                  // Field buffer:[B
      33: aload_0
      34: dup
      35: getfield      #12                 // Field position:I
      38: dup_x1
      39: iconst_1
      40: iadd
      41: putfield      #12                 // Field position:I
      44: baload
      45: sipush        255
      48: iand
      49: ior
      50: i2s
      51: ireturn

  public int readShortUnsigned() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: sipush        255
      25: iand
      26: bipush        8
      28: ishl
      29: aload_0
      30: getfield      #4                  // Field buffer:[B
      33: aload_0
      34: dup
      35: getfield      #12                 // Field position:I
      38: dup_x1
      39: iconst_1
      40: iadd
      41: putfield      #12                 // Field position:I
      44: baload
      45: sipush        255
      48: iand
      49: ior
      50: ireturn

  public long readLong() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: bipush        8
       3: invokevirtual #17                 // Method require:(I)I
       6: pop
       7: aload_0
       8: getfield      #4                  // Field buffer:[B
      11: astore_1
      12: aload_1
      13: aload_0
      14: dup
      15: getfield      #12                 // Field position:I
      18: dup_x1
      19: iconst_1
      20: iadd
      21: putfield      #12                 // Field position:I
      24: baload
      25: i2l
      26: bipush        56
      28: lshl
      29: aload_1
      30: aload_0
      31: dup
      32: getfield      #12                 // Field position:I
      35: dup_x1
      36: iconst_1
      37: iadd
      38: putfield      #12                 // Field position:I
      41: baload
      42: sipush        255
      45: iand
      46: i2l
      47: bipush        48
      49: lshl
      50: lor
      51: aload_1
      52: aload_0
      53: dup
      54: getfield      #12                 // Field position:I
      57: dup_x1
      58: iconst_1
      59: iadd
      60: putfield      #12                 // Field position:I
      63: baload
      64: sipush        255
      67: iand
      68: i2l
      69: bipush        40
      71: lshl
      72: lor
      73: aload_1
      74: aload_0
      75: dup
      76: getfield      #12                 // Field position:I
      79: dup_x1
      80: iconst_1
      81: iadd
      82: putfield      #12                 // Field position:I
      85: baload
      86: sipush        255
      89: iand
      90: i2l
      91: bipush        32
      93: lshl
      94: lor
      95: aload_1
      96: aload_0
      97: dup
      98: getfield      #12                 // Field position:I
     101: dup_x1
     102: iconst_1
     103: iadd
     104: putfield      #12                 // Field position:I
     107: baload
     108: sipush        255
     111: iand
     112: i2l
     113: bipush        24
     115: lshl
     116: lor
     117: aload_1
     118: aload_0
     119: dup
     120: getfield      #12                 // Field position:I
     123: dup_x1
     124: iconst_1
     125: iadd
     126: putfield      #12                 // Field position:I
     129: baload
     130: sipush        255
     133: iand
     134: bipush        16
     136: ishl
     137: i2l
     138: lor
     139: aload_1
     140: aload_0
     141: dup
     142: getfield      #12                 // Field position:I
     145: dup_x1
     146: iconst_1
     147: iadd
     148: putfield      #12                 // Field position:I
     151: baload
     152: sipush        255
     155: iand
     156: bipush        8
     158: ishl
     159: i2l
     160: lor
     161: aload_1
     162: aload_0
     163: dup
     164: getfield      #12                 // Field position:I
     167: dup_x1
     168: iconst_1
     169: iadd
     170: putfield      #12                 // Field position:I
     173: baload
     174: sipush        255
     177: iand
     178: i2l
     179: lor
     180: lreturn

  public long readLong(boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iload_1
       2: invokevirtual #61                 // Method readVarLong:(Z)J
       5: lreturn

  public long readVarLong(boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: bipush        9
       7: if_icmpge     16
      10: aload_0
      11: iload_1
      12: invokespecial #62                 // Method readLong_slow:(Z)J
      15: lreturn
      16: aload_0
      17: getfield      #4                  // Field buffer:[B
      20: aload_0
      21: dup
      22: getfield      #12                 // Field position:I
      25: dup_x1
      26: iconst_1
      27: iadd
      28: putfield      #12                 // Field position:I
      31: baload
      32: istore_2
      33: iload_2
      34: bipush        127
      36: iand
      37: i2l
      38: lstore_3
      39: iload_2
      40: sipush        128
      43: iand
      44: ifeq          314
      47: aload_0
      48: getfield      #4                  // Field buffer:[B
      51: astore        5
      53: aload         5
      55: aload_0
      56: dup
      57: getfield      #12                 // Field position:I
      60: dup_x1
      61: iconst_1
      62: iadd
      63: putfield      #12                 // Field position:I
      66: baload
      67: istore_2
      68: lload_3
      69: iload_2
      70: bipush        127
      72: iand
      73: bipush        7
      75: ishl
      76: i2l
      77: lor
      78: lstore_3
      79: iload_2
      80: sipush        128
      83: iand
      84: ifeq          314
      87: aload         5
      89: aload_0
      90: dup
      91: getfield      #12                 // Field position:I
      94: dup_x1
      95: iconst_1
      96: iadd
      97: putfield      #12                 // Field position:I
     100: baload
     101: istore_2
     102: lload_3
     103: iload_2
     104: bipush        127
     106: iand
     107: bipush        14
     109: ishl
     110: i2l
     111: lor
     112: lstore_3
     113: iload_2
     114: sipush        128
     117: iand
     118: ifeq          314
     121: aload         5
     123: aload_0
     124: dup
     125: getfield      #12                 // Field position:I
     128: dup_x1
     129: iconst_1
     130: iadd
     131: putfield      #12                 // Field position:I
     134: baload
     135: istore_2
     136: lload_3
     137: iload_2
     138: bipush        127
     140: iand
     141: bipush        21
     143: ishl
     144: i2l
     145: lor
     146: lstore_3
     147: iload_2
     148: sipush        128
     151: iand
     152: ifeq          314
     155: aload         5
     157: aload_0
     158: dup
     159: getfield      #12                 // Field position:I
     162: dup_x1
     163: iconst_1
     164: iadd
     165: putfield      #12                 // Field position:I
     168: baload
     169: istore_2
     170: lload_3
     171: iload_2
     172: bipush        127
     174: iand
     175: i2l
     176: bipush        28
     178: lshl
     179: lor
     180: lstore_3
     181: iload_2
     182: sipush        128
     185: iand
     186: ifeq          314
     189: aload         5
     191: aload_0
     192: dup
     193: getfield      #12                 // Field position:I
     196: dup_x1
     197: iconst_1
     198: iadd
     199: putfield      #12                 // Field position:I
     202: baload
     203: istore_2
     204: lload_3
     205: iload_2
     206: bipush        127
     208: iand
     209: i2l
     210: bipush        35
     212: lshl
     213: lor
     214: lstore_3
     215: iload_2
     216: sipush        128
     219: iand
     220: ifeq          314
     223: aload         5
     225: aload_0
     226: dup
     227: getfield      #12                 // Field position:I
     230: dup_x1
     231: iconst_1
     232: iadd
     233: putfield      #12                 // Field position:I
     236: baload
     237: istore_2
     238: lload_3
     239: iload_2
     240: bipush        127
     242: iand
     243: i2l
     244: bipush        42
     246: lshl
     247: lor
     248: lstore_3
     249: iload_2
     250: sipush        128
     253: iand
     254: ifeq          314
     257: aload         5
     259: aload_0
     260: dup
     261: getfield      #12                 // Field position:I
     264: dup_x1
     265: iconst_1
     266: iadd
     267: putfield      #12                 // Field position:I
     270: baload
     271: istore_2
     272: lload_3
     273: iload_2
     274: bipush        127
     276: iand
     277: i2l
     278: bipush        49
     280: lshl
     281: lor
     282: lstore_3
     283: iload_2
     284: sipush        128
     287: iand
     288: ifeq          314
     291: aload         5
     293: aload_0
     294: dup
     295: getfield      #12                 // Field position:I
     298: dup_x1
     299: iconst_1
     300: iadd
     301: putfield      #12                 // Field position:I
     304: baload
     305: istore_2
     306: lload_3
     307: iload_2
     308: i2l
     309: bipush        56
     311: lshl
     312: lor
     313: lstore_3
     314: iload_1
     315: ifne          327
     318: lload_3
     319: iconst_1
     320: lushr
     321: lload_3
     322: lconst_1
     323: land
     324: lneg
     325: lxor
     326: lstore_3
     327: lload_3
     328: lreturn

  private long readLong_slow(boolean);
    Code:
       0: aload_0
       1: getfield      #4                  // Field buffer:[B
       4: aload_0
       5: dup
       6: getfield      #12                 // Field position:I
       9: dup_x1
      10: iconst_1
      11: iadd
      12: putfield      #12                 // Field position:I
      15: baload
      16: istore_2
      17: iload_2
      18: bipush        127
      20: iand
      21: i2l
      22: lstore_3
      23: iload_2
      24: sipush        128
      27: iand
      28: ifeq          346
      31: aload_0
      32: iconst_1
      33: invokevirtual #17                 // Method require:(I)I
      36: pop
      37: aload_0
      38: getfield      #4                  // Field buffer:[B
      41: astore        5
      43: aload         5
      45: aload_0
      46: dup
      47: getfield      #12                 // Field position:I
      50: dup_x1
      51: iconst_1
      52: iadd
      53: putfield      #12                 // Field position:I
      56: baload
      57: istore_2
      58: lload_3
      59: iload_2
      60: bipush        127
      62: iand
      63: bipush        7
      65: ishl
      66: i2l
      67: lor
      68: lstore_3
      69: iload_2
      70: sipush        128
      73: iand
      74: ifeq          346
      77: aload_0
      78: iconst_1
      79: invokevirtual #17                 // Method require:(I)I
      82: pop
      83: aload         5
      85: aload_0
      86: dup
      87: getfield      #12                 // Field position:I
      90: dup_x1
      91: iconst_1
      92: iadd
      93: putfield      #12                 // Field position:I
      96: baload
      97: istore_2
      98: lload_3
      99: iload_2
     100: bipush        127
     102: iand
     103: bipush        14
     105: ishl
     106: i2l
     107: lor
     108: lstore_3
     109: iload_2
     110: sipush        128
     113: iand
     114: ifeq          346
     117: aload_0
     118: iconst_1
     119: invokevirtual #17                 // Method require:(I)I
     122: pop
     123: aload         5
     125: aload_0
     126: dup
     127: getfield      #12                 // Field position:I
     130: dup_x1
     131: iconst_1
     132: iadd
     133: putfield      #12                 // Field position:I
     136: baload
     137: istore_2
     138: lload_3
     139: iload_2
     140: bipush        127
     142: iand
     143: bipush        21
     145: ishl
     146: i2l
     147: lor
     148: lstore_3
     149: iload_2
     150: sipush        128
     153: iand
     154: ifeq          346
     157: aload_0
     158: iconst_1
     159: invokevirtual #17                 // Method require:(I)I
     162: pop
     163: aload         5
     165: aload_0
     166: dup
     167: getfield      #12                 // Field position:I
     170: dup_x1
     171: iconst_1
     172: iadd
     173: putfield      #12                 // Field position:I
     176: baload
     177: istore_2
     178: lload_3
     179: iload_2
     180: bipush        127
     182: iand
     183: i2l
     184: bipush        28
     186: lshl
     187: lor
     188: lstore_3
     189: iload_2
     190: sipush        128
     193: iand
     194: ifeq          346
     197: aload_0
     198: iconst_1
     199: invokevirtual #17                 // Method require:(I)I
     202: pop
     203: aload         5
     205: aload_0
     206: dup
     207: getfield      #12                 // Field position:I
     210: dup_x1
     211: iconst_1
     212: iadd
     213: putfield      #12                 // Field position:I
     216: baload
     217: istore_2
     218: lload_3
     219: iload_2
     220: bipush        127
     222: iand
     223: i2l
     224: bipush        35
     226: lshl
     227: lor
     228: lstore_3
     229: iload_2
     230: sipush        128
     233: iand
     234: ifeq          346
     237: aload_0
     238: iconst_1
     239: invokevirtual #17                 // Method require:(I)I
     242: pop
     243: aload         5
     245: aload_0
     246: dup
     247: getfield      #12                 // Field position:I
     250: dup_x1
     251: iconst_1
     252: iadd
     253: putfield      #12                 // Field position:I
     256: baload
     257: istore_2
     258: lload_3
     259: iload_2
     260: bipush        127
     262: iand
     263: i2l
     264: bipush        42
     266: lshl
     267: lor
     268: lstore_3
     269: iload_2
     270: sipush        128
     273: iand
     274: ifeq          346
     277: aload_0
     278: iconst_1
     279: invokevirtual #17                 // Method require:(I)I
     282: pop
     283: aload         5
     285: aload_0
     286: dup
     287: getfield      #12                 // Field position:I
     290: dup_x1
     291: iconst_1
     292: iadd
     293: putfield      #12                 // Field position:I
     296: baload
     297: istore_2
     298: lload_3
     299: iload_2
     300: bipush        127
     302: iand
     303: i2l
     304: bipush        49
     306: lshl
     307: lor
     308: lstore_3
     309: iload_2
     310: sipush        128
     313: iand
     314: ifeq          346
     317: aload_0
     318: iconst_1
     319: invokevirtual #17                 // Method require:(I)I
     322: pop
     323: aload         5
     325: aload_0
     326: dup
     327: getfield      #12                 // Field position:I
     330: dup_x1
     331: iconst_1
     332: iadd
     333: putfield      #12                 // Field position:I
     336: baload
     337: istore_2
     338: lload_3
     339: iload_2
     340: i2l
     341: bipush        56
     343: lshl
     344: lor
     345: lstore_3
     346: iload_1
     347: ifne          359
     350: lload_3
     351: iconst_1
     352: lushr
     353: lload_3
     354: lconst_1
     355: land
     356: lneg
     357: lxor
     358: lstore_3
     359: lload_3
     360: lreturn

  public boolean readBoolean() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_1
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: iconst_1
      23: if_icmpne     30
      26: iconst_1
      27: goto          31
      30: iconst_0
      31: ireturn

  public char readChar() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iconst_2
       2: invokevirtual #17                 // Method require:(I)I
       5: pop
       6: aload_0
       7: getfield      #4                  // Field buffer:[B
      10: aload_0
      11: dup
      12: getfield      #12                 // Field position:I
      15: dup_x1
      16: iconst_1
      17: iadd
      18: putfield      #12                 // Field position:I
      21: baload
      22: sipush        255
      25: iand
      26: bipush        8
      28: ishl
      29: aload_0
      30: getfield      #4                  // Field buffer:[B
      33: aload_0
      34: dup
      35: getfield      #12                 // Field position:I
      38: dup_x1
      39: iconst_1
      40: iadd
      41: putfield      #12                 // Field position:I
      44: baload
      45: sipush        255
      48: iand
      49: ior
      50: i2c
      51: ireturn

  public double readDouble() throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: invokevirtual #63                 // Method readLong:()J
       4: invokestatic  #64                 // Method java/lang/Double.longBitsToDouble:(J)D
       7: dreturn

  public double readDouble(double, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: iload_3
       2: invokevirtual #65                 // Method readLong:(Z)J
       5: l2d
       6: dload_1
       7: ddiv
       8: dreturn

  public int[] readInts(int, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       int
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: iload_1
      10: if_icmpge     28
      13: aload_3
      14: iload         4
      16: aload_0
      17: iload_2
      18: invokevirtual #60                 // Method readInt:(Z)I
      21: iastore
      22: iinc          4, 1
      25: goto          7
      28: aload_3
      29: areturn

  public long[] readLongs(int, boolean) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       long
       3: astore_3
       4: iconst_0
       5: istore        4
       7: iload         4
       9: iload_1
      10: if_icmpge     28
      13: aload_3
      14: iload         4
      16: aload_0
      17: iload_2
      18: invokevirtual #65                 // Method readLong:(Z)J
      21: lastore
      22: iinc          4, 1
      25: goto          7
      28: aload_3
      29: areturn

  public int[] readInts(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       int
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #58                 // Method readInt:()I
      17: iastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public long[] readLongs(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       long
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #63                 // Method readLong:()J
      17: lastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public float[] readFloats(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       float
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #66                 // Method readFloat:()F
      17: fastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public short[] readShorts(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       short
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #67                 // Method readShort:()S
      17: sastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public char[] readChars(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       char
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #68                 // Method readChar:()C
      17: castore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn

  public double[] readDoubles(int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: iload_1
       1: newarray       double
       3: astore_2
       4: iconst_0
       5: istore_3
       6: iload_3
       7: iload_1
       8: if_icmpge     24
      11: aload_2
      12: iload_3
      13: aload_0
      14: invokevirtual #69                 // Method readDouble:()D
      17: dastore
      18: iinc          3, 1
      21: goto          6
      24: aload_2
      25: areturn
}
