Compiled from "ClosureSerializer.java"
public class com.esotericsoftware.kryo.serializers.ClosureSerializer extends com.esotericsoftware.kryo.Serializer {
  private static java.lang.reflect.Method readResolve;

  private static java.lang.Class serializedLambda;

  public com.esotericsoftware.kryo.serializers.ClosureSerializer();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: aload_3
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore        4
       6: aload         4
       8: ldc           #3                  // String writeReplace
      10: iconst_0
      11: anewarray     #4                  // class java/lang/Class
      14: invokevirtual #5                  // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      17: astore        5
      19: aload         5
      21: iconst_1
      22: invokevirtual #6                  // Method java/lang/reflect/Method.setAccessible:(Z)V
      25: aload         5
      27: aload_3
      28: iconst_0
      29: anewarray     #7                  // class java/lang/Object
      32: invokevirtual #8                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      35: astore        6
      37: getstatic     #9                  // Field serializedLambda:Ljava/lang/Class;
      40: aload         6
      42: invokevirtual #10                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      45: ifeq          58
      48: aload_1
      49: aload_2
      50: aload         6
      52: invokevirtual #11                 // Method com/esotericsoftware/kryo/Kryo.writeObject:(Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      55: goto          68
      58: new           #12                 // class java/lang/RuntimeException
      61: dup
      62: ldc           #13                 // String Could not serialize lambda
      64: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      67: athrow
      68: goto          85
      71: astore        4
      73: new           #12                 // class java/lang/RuntimeException
      76: dup
      77: ldc           #13                 // String Could not serialize lambda
      79: aload         4
      81: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      84: athrow
      85: return
    Exception table:
       from    to  target type
           0    68    71   Class java/lang/Exception

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: aload_1
       1: aload_2
       2: getstatic     #9                  // Field serializedLambda:Ljava/lang/Class;
       5: invokevirtual #17                 // Method com/esotericsoftware/kryo/Kryo.readObject:(Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
       8: astore        4
      10: getstatic     #18                 // Field readResolve:Ljava/lang/reflect/Method;
      13: aload         4
      15: iconst_0
      16: anewarray     #7                  // class java/lang/Object
      19: invokevirtual #8                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      22: areturn
      23: astore        4
      25: new           #12                 // class java/lang/RuntimeException
      28: dup
      29: ldc           #13                 // String Could not serialize lambda
      31: aload         4
      33: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      36: athrow
    Exception table:
       from    to  target type
           0    22    23   Class java/lang/Exception

  public java.lang.Object copy(com.esotericsoftware.kryo.Kryo, java.lang.Object);
    Code:
       0: aload_2
       1: invokevirtual #2                  // Method java/lang/Object.getClass:()Ljava/lang/Class;
       4: astore_3
       5: aload_3
       6: ldc           #3                  // String writeReplace
       8: iconst_0
       9: anewarray     #4                  // class java/lang/Class
      12: invokevirtual #5                  // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      15: astore        4
      17: aload         4
      19: iconst_1
      20: invokevirtual #6                  // Method java/lang/reflect/Method.setAccessible:(Z)V
      23: aload         4
      25: aload_2
      26: iconst_0
      27: anewarray     #7                  // class java/lang/Object
      30: invokevirtual #8                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      33: astore        5
      35: getstatic     #9                  // Field serializedLambda:Ljava/lang/Class;
      38: aload         5
      40: invokevirtual #10                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      43: ifeq          59
      46: getstatic     #18                 // Field readResolve:Ljava/lang/reflect/Method;
      49: aload         5
      51: iconst_0
      52: anewarray     #7                  // class java/lang/Object
      55: invokevirtual #8                  // Method java/lang/reflect/Method.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;
      58: areturn
      59: new           #12                 // class java/lang/RuntimeException
      62: dup
      63: ldc           #13                 // String Could not serialize lambda
      65: invokespecial #14                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;)V
      68: athrow
      69: astore_3
      70: new           #12                 // class java/lang/RuntimeException
      73: dup
      74: ldc           #13                 // String Could not serialize lambda
      76: aload_3
      77: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      80: athrow
    Exception table:
       from    to  target type
           0    58    69   Class java/lang/Exception
          59    69    69   Class java/lang/Exception

  static {};
    Code:
       0: ldc           #19                 // String java.lang.invoke.SerializedLambda
       2: invokestatic  #20                 // Method java/lang/Class.forName:(Ljava/lang/String;)Ljava/lang/Class;
       5: putstatic     #9                  // Field serializedLambda:Ljava/lang/Class;
       8: getstatic     #9                  // Field serializedLambda:Ljava/lang/Class;
      11: ldc           #21                 // String readResolve
      13: iconst_0
      14: anewarray     #4                  // class java/lang/Class
      17: invokevirtual #5                  // Method java/lang/Class.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;
      20: putstatic     #18                 // Field readResolve:Ljava/lang/reflect/Method;
      23: getstatic     #18                 // Field readResolve:Ljava/lang/reflect/Method;
      26: iconst_1
      27: invokevirtual #6                  // Method java/lang/reflect/Method.setAccessible:(Z)V
      30: goto          45
      33: astore_0
      34: new           #12                 // class java/lang/RuntimeException
      37: dup
      38: ldc           #22                 // String Could not obtain SerializedLambda or its methods via reflection
      40: aload_0
      41: invokespecial #16                 // Method java/lang/RuntimeException."<init>":(Ljava/lang/String;Ljava/lang/Throwable;)V
      44: athrow
      45: return
    Exception table:
       from    to  target type
           0    30    33   Class java/lang/Exception
}
