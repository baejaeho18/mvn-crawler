Compiled from "DeflateSerializer.java"
public class com.esotericsoftware.kryo.serializers.DeflateSerializer extends com.esotericsoftware.kryo.Serializer {
  private final com.esotericsoftware.kryo.Serializer serializer;

  private boolean noHeaders;

  private int compressionLevel;

  public com.esotericsoftware.kryo.serializers.DeflateSerializer(com.esotericsoftware.kryo.Serializer);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method com/esotericsoftware/kryo/Serializer."<init>":()V
       4: aload_0
       5: iconst_1
       6: putfield      #2                  // Field noHeaders:Z
       9: aload_0
      10: iconst_4
      11: putfield      #3                  // Field compressionLevel:I
      14: aload_0
      15: aload_1
      16: putfield      #4                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
      19: return

  public void write(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Output, java.lang.Object);
    Code:
       0: new           #5                  // class com/esotericsoftware/kryo/io/OutputChunked
       3: dup
       4: aload_2
       5: sipush        256
       8: invokespecial #6                  // Method com/esotericsoftware/kryo/io/OutputChunked."<init>":(Ljava/io/OutputStream;I)V
      11: astore        4
      13: new           #7                  // class java/util/zip/Deflater
      16: dup
      17: aload_0
      18: getfield      #3                  // Field compressionLevel:I
      21: aload_0
      22: getfield      #2                  // Field noHeaders:Z
      25: invokespecial #8                  // Method java/util/zip/Deflater."<init>":(IZ)V
      28: astore        5
      30: new           #9                  // class java/util/zip/DeflaterOutputStream
      33: dup
      34: aload         4
      36: aload         5
      38: invokespecial #10                 // Method java/util/zip/DeflaterOutputStream."<init>":(Ljava/io/OutputStream;Ljava/util/zip/Deflater;)V
      41: astore        6
      43: new           #11                 // class com/esotericsoftware/kryo/io/Output
      46: dup
      47: aload         6
      49: sipush        256
      52: invokespecial #12                 // Method com/esotericsoftware/kryo/io/Output."<init>":(Ljava/io/OutputStream;I)V
      55: astore        7
      57: aload_0
      58: getfield      #4                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
      61: aload_1
      62: aload         7
      64: aload_3
      65: invokevirtual #13                 // Method com/esotericsoftware/kryo/Serializer.write:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Output;Ljava/lang/Object;)V
      68: aload         7
      70: invokevirtual #14                 // Method com/esotericsoftware/kryo/io/Output.flush:()V
      73: aload         6
      75: invokevirtual #15                 // Method java/util/zip/DeflaterOutputStream.finish:()V
      78: aload         5
      80: invokevirtual #16                 // Method java/util/zip/Deflater.end:()V
      83: goto          108
      86: astore        6
      88: new           #18                 // class com/esotericsoftware/kryo/KryoException
      91: dup
      92: aload         6
      94: invokespecial #19                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
      97: athrow
      98: astore        8
     100: aload         5
     102: invokevirtual #16                 // Method java/util/zip/Deflater.end:()V
     105: aload         8
     107: athrow
     108: aload         4
     110: invokevirtual #20                 // Method com/esotericsoftware/kryo/io/OutputChunked.endChunks:()V
     113: return
    Exception table:
       from    to  target type
          30    78    86   Class java/io/IOException
          30    78    98   any
          86   100    98   any

  public java.lang.Object read(com.esotericsoftware.kryo.Kryo, com.esotericsoftware.kryo.io.Input, java.lang.Class);
    Code:
       0: new           #21                 // class java/util/zip/Inflater
       3: dup
       4: aload_0
       5: getfield      #2                  // Field noHeaders:Z
       8: invokespecial #22                 // Method java/util/zip/Inflater."<init>":(Z)V
      11: astore        4
      13: new           #23                 // class java/util/zip/InflaterInputStream
      16: dup
      17: new           #24                 // class com/esotericsoftware/kryo/io/InputChunked
      20: dup
      21: aload_2
      22: sipush        256
      25: invokespecial #25                 // Method com/esotericsoftware/kryo/io/InputChunked."<init>":(Ljava/io/InputStream;I)V
      28: aload         4
      30: invokespecial #26                 // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V
      33: astore        5
      35: aload_0
      36: getfield      #4                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
      39: aload_1
      40: new           #27                 // class com/esotericsoftware/kryo/io/Input
      43: dup
      44: aload         5
      46: sipush        256
      49: invokespecial #28                 // Method com/esotericsoftware/kryo/io/Input."<init>":(Ljava/io/InputStream;I)V
      52: aload_3
      53: invokevirtual #29                 // Method com/esotericsoftware/kryo/Serializer.read:(Lcom/esotericsoftware/kryo/Kryo;Lcom/esotericsoftware/kryo/io/Input;Ljava/lang/Class;)Ljava/lang/Object;
      56: astore        6
      58: aload         4
      60: invokevirtual #30                 // Method java/util/zip/Inflater.end:()V
      63: aload         6
      65: areturn
      66: astore        7
      68: aload         4
      70: invokevirtual #30                 // Method java/util/zip/Inflater.end:()V
      73: aload         7
      75: athrow
    Exception table:
       from    to  target type
          13    58    66   any
          66    68    66   any

  public void setNoHeaders(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #2                  // Field noHeaders:Z
       5: return

  public void setCompressionLevel(int);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #3                  // Field compressionLevel:I
       5: return

  public java.lang.Object copy(com.esotericsoftware.kryo.Kryo, java.lang.Object);
    Code:
       0: aload_0
       1: getfield      #4                  // Field serializer:Lcom/esotericsoftware/kryo/Serializer;
       4: aload_1
       5: aload_2
       6: invokevirtual #31                 // Method com/esotericsoftware/kryo/Serializer.copy:(Lcom/esotericsoftware/kryo/Kryo;Ljava/lang/Object;)Ljava/lang/Object;
       9: areturn
}
