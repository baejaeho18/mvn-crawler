Compiled from "InputChunked.java"
public class com.esotericsoftware.kryo.io.InputChunked extends com.esotericsoftware.kryo.io.Input {
  private int chunkSize;

  public com.esotericsoftware.kryo.io.InputChunked();
    Code:
       0: aload_0
       1: sipush        2048
       4: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Input."<init>":(I)V
       7: aload_0
       8: iconst_m1
       9: putfield      #2                  // Field chunkSize:I
      12: return

  public com.esotericsoftware.kryo.io.InputChunked(int);
    Code:
       0: aload_0
       1: iload_1
       2: invokespecial #1                  // Method com/esotericsoftware/kryo/io/Input."<init>":(I)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field chunkSize:I
      10: return

  public com.esotericsoftware.kryo.io.InputChunked(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: sipush        2048
       5: invokespecial #3                  // Method com/esotericsoftware/kryo/io/Input."<init>":(Ljava/io/InputStream;I)V
       8: aload_0
       9: iconst_m1
      10: putfield      #2                  // Field chunkSize:I
      13: return

  public com.esotericsoftware.kryo.io.InputChunked(java.io.InputStream, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: invokespecial #3                  // Method com/esotericsoftware/kryo/io/Input."<init>":(Ljava/io/InputStream;I)V
       6: aload_0
       7: iconst_m1
       8: putfield      #2                  // Field chunkSize:I
      11: return

  public void setInputStream(java.io.InputStream);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #4                  // Method com/esotericsoftware/kryo/io/Input.setInputStream:(Ljava/io/InputStream;)V
       5: aload_0
       6: iconst_m1
       7: putfield      #2                  // Field chunkSize:I
      10: return

  public void setBuffer(byte[], int, int);
    Code:
       0: aload_0
       1: aload_1
       2: iload_2
       3: iload_3
       4: invokespecial #5                  // Method com/esotericsoftware/kryo/io/Input.setBuffer:([BII)V
       7: aload_0
       8: iconst_m1
       9: putfield      #2                  // Field chunkSize:I
      12: return

  public void rewind();
    Code:
       0: aload_0
       1: invokespecial #6                  // Method com/esotericsoftware/kryo/io/Input.rewind:()V
       4: aload_0
       5: iconst_m1
       6: putfield      #2                  // Field chunkSize:I
       9: return

  protected int fill(byte[], int, int) throws com.esotericsoftware.kryo.KryoException;
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunkSize:I
       4: iconst_m1
       5: if_icmpne     15
       8: aload_0
       9: invokespecial #7                  // Method readChunkSize:()V
      12: goto          24
      15: aload_0
      16: getfield      #2                  // Field chunkSize:I
      19: ifne          24
      22: iconst_m1
      23: ireturn
      24: aload_0
      25: aload_1
      26: iload_2
      27: aload_0
      28: getfield      #2                  // Field chunkSize:I
      31: iload_3
      32: invokestatic  #8                  // Method java/lang/Math.min:(II)I
      35: invokespecial #9                  // Method com/esotericsoftware/kryo/io/Input.fill:([BII)I
      38: istore        4
      40: aload_0
      41: dup
      42: getfield      #2                  // Field chunkSize:I
      45: iload         4
      47: isub
      48: putfield      #2                  // Field chunkSize:I
      51: aload_0
      52: getfield      #2                  // Field chunkSize:I
      55: ifne          62
      58: aload_0
      59: invokespecial #7                  // Method readChunkSize:()V
      62: iload         4
      64: ireturn

  private void readChunkSize();
    Code:
       0: aload_0
       1: invokevirtual #10                 // Method getInputStream:()Ljava/io/InputStream;
       4: astore_1
       5: iconst_0
       6: istore_2
       7: iconst_0
       8: istore_3
       9: iload_2
      10: bipush        32
      12: if_icmpge     101
      15: aload_1
      16: invokevirtual #11                 // Method java/io/InputStream.read:()I
      19: istore        4
      21: iload         4
      23: iconst_m1
      24: if_icmpne     37
      27: new           #12                 // class com/esotericsoftware/kryo/KryoException
      30: dup
      31: ldc           #13                 // String Buffer underflow.
      33: invokespecial #14                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
      36: athrow
      37: iload_3
      38: iload         4
      40: bipush        127
      42: iand
      43: iload_2
      44: ishl
      45: ior
      46: istore_3
      47: iload         4
      49: sipush        128
      52: iand
      53: ifne          95
      56: aload_0
      57: iload_3
      58: putfield      #2                  // Field chunkSize:I
      61: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      64: ifeq          94
      67: ldc           #16                 // String kryo
      69: new           #17                 // class java/lang/StringBuilder
      72: dup
      73: invokespecial #18                 // Method java/lang/StringBuilder."<init>":()V
      76: ldc           #19                 // String Read chunk:
      78: invokevirtual #20                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      81: aload_0
      82: getfield      #2                  // Field chunkSize:I
      85: invokevirtual #21                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
      88: invokevirtual #22                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      91: invokestatic  #23                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      94: return
      95: iinc          2, 7
      98: goto          9
     101: goto          114
     104: astore_1
     105: new           #12                 // class com/esotericsoftware/kryo/KryoException
     108: dup
     109: aload_1
     110: invokespecial #25                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/Throwable;)V
     113: athrow
     114: new           #12                 // class com/esotericsoftware/kryo/KryoException
     117: dup
     118: ldc           #26                 // String Malformed integer.
     120: invokespecial #14                 // Method com/esotericsoftware/kryo/KryoException."<init>":(Ljava/lang/String;)V
     123: athrow
    Exception table:
       from    to  target type
           0    94   104   Class java/io/IOException
          95   101   104   Class java/io/IOException

  public void nextChunks();
    Code:
       0: aload_0
       1: getfield      #2                  // Field chunkSize:I
       4: iconst_m1
       5: if_icmpne     12
       8: aload_0
       9: invokespecial #7                  // Method readChunkSize:()V
      12: aload_0
      13: getfield      #2                  // Field chunkSize:I
      16: ifle          30
      19: aload_0
      20: aload_0
      21: getfield      #2                  // Field chunkSize:I
      24: invokevirtual #27                 // Method skip:(I)V
      27: goto          12
      30: aload_0
      31: iconst_m1
      32: putfield      #2                  // Field chunkSize:I
      35: getstatic     #15                 // Field com/esotericsoftware/minlog/Log.TRACE:Z
      38: ifeq          48
      41: ldc           #16                 // String kryo
      43: ldc           #28                 // String Next chunks.
      45: invokestatic  #23                 // Method com/esotericsoftware/minlog/Log.trace:(Ljava/lang/String;Ljava/lang/String;)V
      48: return
}
