{"groups":[{"name":"micronaut.router.versioning","type":"io.micronaut.web.router.version.RoutesVersioningConfiguration"},{"name":"micronaut.router.versioning.parameter","type":"io.micronaut.web.router.version.resolution.ParameterVersionResolverConfiguration"},{"name":"micronaut.router.versioning.header","type":"io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration"},{"name":"micronaut.router.static-resources.*","type":"io.micronaut.web.router.resource.StaticResourceConfiguration"}],"properties":[{"name":"micronaut.router.versioning.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.RoutesVersioningConfiguration","description":" @param enabled Enables the version based route matches filtering.\n"},{"name":"micronaut.router.versioning.default-version","type":"java.lang.String","sourceType":"io.micronaut.web.router.version.RoutesVersioningConfiguration","description":" Sets the version to use if the version cannot be resolved. Default value (null).\n\n @param defaultVersion The default version\n"},{"name":"micronaut.router.versioning.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.RoutesVersioningConfiguration","description":" @param enabled Enables the version based route matches filtering.\n"},{"name":"micronaut.router.versioning.default-version","type":"java.lang.String","sourceType":"io.micronaut.web.router.version.RoutesVersioningConfiguration","description":" Sets the version to use if the version cannot be resolved. Default value (null).\n\n @param defaultVersion The default version\n"},{"name":"micronaut.router.versioning.parameter.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.resolution.ParameterVersionResolverConfiguration","description":" Sets whether parameter should be searched for a version.\n\n @param enabled True if parameter should be searched.\n"},{"name":"micronaut.router.versioning.parameter.names","type":"java.util.List","sourceType":"io.micronaut.web.router.version.resolution.ParameterVersionResolverConfiguration","description":" Sets which parameter should be searched for a version.\n\n @param names The parameter names\n"},{"name":"micronaut.router.versioning.parameter.names","type":"java.util.List","sourceType":"io.micronaut.web.router.version.resolution.ParameterVersionResolverConfiguration","description":" Sets which parameter should be searched for a version.\n\n @param names The parameter names\n"},{"name":"micronaut.router.versioning.parameter.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.resolution.ParameterVersionResolverConfiguration","description":" Sets whether parameter should be searched for a version.\n\n @param enabled True if parameter should be searched.\n"},{"name":"micronaut.router.versioning.header.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration","description":" Sets whether headers should be searched for a version.\n\n @param enabled True if headers should be searched.\n"},{"name":"micronaut.router.versioning.header.names","type":"java.util.List","sourceType":"io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration","description":" Sets which headers should be searched for a version.\n\n @param names The header names\n"},{"name":"micronaut.router.versioning.header.names","type":"java.util.List","sourceType":"io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration","description":" Sets which headers should be searched for a version.\n\n @param names The header names\n"},{"name":"micronaut.router.versioning.header.enabled","type":"boolean","sourceType":"io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration","description":" Sets whether headers should be searched for a version.\n\n @param enabled True if headers should be searched.\n"},{"name":"micronaut.router.static-resources.*.enabled","type":"boolean","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" Sets whether this specific mapping is enabled. Default value ({@value #DEFAULT_ENABLED}).\n\n @param enabled True if they are enabled.\n"},{"name":"micronaut.router.static-resources.*.paths","type":"java.util.List","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" A list of paths either starting with `classpath:` or `file:`. You can serve files from anywhere on disk or the classpath. For example to serve static resources from `src\/main\/resources\/public`, you would use `classpath:public` as the path.\n\n @param paths The paths\n"},{"name":"micronaut.router.static-resources.*.mapping","type":"java.lang.String","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" The path resources should be served from. Uses ant path matching. Default value ({@value #DEFAULT_MAPPING}).\n\n @param mapping The mapping\n"},{"name":"micronaut.router.static-resources.*.enabled","type":"boolean","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" Sets whether this specific mapping is enabled. Default value ({@value #DEFAULT_ENABLED}).\n\n @param enabled True if they are enabled.\n"},{"name":"micronaut.router.static-resources.*.paths","type":"java.util.List","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" A list of paths either starting with `classpath:` or `file:`. You can serve files from anywhere on disk or the classpath. For example to serve static resources from `src\/main\/resources\/public`, you would use `classpath:public` as the path.\n\n @param paths The paths\n"},{"name":"micronaut.router.static-resources.*.mapping","type":"java.lang.String","sourceType":"io.micronaut.web.router.resource.StaticResourceConfiguration","description":" The path resources should be served from. Uses ant path matching. Default value ({@value #DEFAULT_MAPPING}).\n\n @param mapping The mapping\n"}]}