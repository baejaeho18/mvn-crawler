Compiled from "HeaderVersionResolver.java"
public class io.micronaut.web.router.version.resolution.HeaderVersionResolver implements io.micronaut.web.router.version.resolution.RequestVersionResolver {
  private final java.util.List<java.lang.String> headerNames;

  public io.micronaut.web.router.version.resolution.HeaderVersionResolver(io.micronaut.web.router.version.resolution.HeaderVersionResolverConfiguration);
    Code:
       0: aload_0
       1: invokespecial #26                 // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokevirtual #32                 // Method io/micronaut/web/router/version/resolution/HeaderVersionResolverConfiguration.getNames:()Ljava/util/List;
       9: putfield      #34                 // Field headerNames:Ljava/util/List;
      12: return

  public java.util.Optional<java.lang.String> resolve(io.micronaut.http.HttpRequest<?>);
    Code:
       0: aload_0
       1: getfield      #34                 // Field headerNames:Ljava/util/List;
       4: invokeinterface #46,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
       9: aload_1
      10: invokedynamic #66,  0             // InvokeDynamic #0:apply:(Lio/micronaut/http/HttpRequest;)Ljava/util/function/Function;
      15: invokeinterface #72,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
      20: invokedynamic #86,  0             // InvokeDynamic #1:test:()Ljava/util/function/Predicate;
      25: invokeinterface #90,  2           // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      30: invokeinterface #94,  1           // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
      35: areturn

  public java.util.Optional resolve(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #99                 // class io/micronaut/http/HttpRequest
       5: invokevirtual #101                // Method resolve:(Lio/micronaut/http/HttpRequest;)Ljava/util/Optional;
       8: areturn

  private static java.lang.String lambda$resolve$0(io.micronaut.http.HttpRequest, java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #105,  1          // InterfaceMethod io/micronaut/http/HttpRequest.getHeaders:()Lio/micronaut/http/HttpHeaders;
       6: aload_1
       7: invokeinterface #111,  2          // InterfaceMethod io/micronaut/http/HttpHeaders.get:(Ljava/lang/CharSequence;)Ljava/lang/Object;
      12: checkcast     #113                // class java/lang/String
      15: areturn
}
