Compiled from "UriRoute.java"
public interface io.micronaut.web.router.UriRoute extends io.micronaut.web.router.Route, io.micronaut.http.uri.UriMatcher, java.lang.Comparable<io.micronaut.web.router.UriRoute> {
  public abstract io.micronaut.web.router.UriRoute nest(java.lang.Runnable);

  public abstract io.micronaut.http.HttpMethod getHttpMethod();

  public abstract io.micronaut.http.uri.UriMatchTemplate getUriMatchTemplate();

  public default java.util.Optional<io.micronaut.web.router.UriRouteMatch> match(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #29                 // Method java/net/URI.toString:()Ljava/lang/String;
       5: invokeinterface #32,  2           // InterfaceMethod match:(Ljava/lang/String;)Ljava/util/Optional;
      10: areturn

  public abstract java.util.Optional<io.micronaut.web.router.UriRouteMatch> match(java.lang.String);

  public abstract io.micronaut.web.router.UriRoute consumes(io.micronaut.http.MediaType...);

  public abstract io.micronaut.web.router.UriRoute produces(io.micronaut.http.MediaType...);

  public abstract io.micronaut.web.router.UriRoute consumesAll();

  public abstract io.micronaut.web.router.UriRoute where(java.util.function.Predicate<io.micronaut.http.HttpRequest<?>>);

  public abstract io.micronaut.web.router.UriRoute body(java.lang.String);

  public abstract io.micronaut.web.router.UriRoute exposedPort(int);

  public abstract java.lang.Integer getPort();

  public default java.lang.String getHttpMethodName();
    Code:
       0: aload_0
       1: invokeinterface #58,  1           // InterfaceMethod getHttpMethod:()Lio/micronaut/http/HttpMethod;
       6: invokevirtual #63                 // Method io/micronaut/http/HttpMethod.name:()Ljava/lang/String;
       9: areturn

  public default io.micronaut.web.router.Route body(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #66,  2           // InterfaceMethod body:(Ljava/lang/String;)Lio/micronaut/web/router/UriRoute;
       7: areturn

  public default io.micronaut.web.router.Route where(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #69,  2           // InterfaceMethod where:(Ljava/util/function/Predicate;)Lio/micronaut/web/router/UriRoute;
       7: areturn

  public default io.micronaut.web.router.Route nest(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #72,  2           // InterfaceMethod nest:(Ljava/lang/Runnable;)Lio/micronaut/web/router/UriRoute;
       7: areturn

  public default io.micronaut.web.router.Route consumesAll();
    Code:
       0: aload_0
       1: invokeinterface #75,  1           // InterfaceMethod consumesAll:()Lio/micronaut/web/router/UriRoute;
       6: areturn

  public default io.micronaut.web.router.Route produces(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #78,  2           // InterfaceMethod produces:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/UriRoute;
       7: areturn

  public default io.micronaut.web.router.Route consumes(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #80,  2           // InterfaceMethod consumes:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/UriRoute;
       7: areturn
}
