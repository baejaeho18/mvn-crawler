Compiled from "ErrorRouteMatch.java"
class io.micronaut.web.router.ErrorRouteMatch<T, R> extends io.micronaut.web.router.AbstractRouteMatch<T, R> {
  private final java.lang.Throwable error;

  private final java.util.Map<java.lang.String, java.lang.Object> variables;

  io.micronaut.web.router.ErrorRouteMatch(java.lang.Throwable, io.micronaut.web.router.DefaultRouteBuilder$AbstractRoute, io.micronaut.core.convert.ConversionService<?>);
    Code:
       0: aload_0
       1: aload_2
       2: aload_3
       3: invokespecial #34                 // Method io/micronaut/web/router/AbstractRouteMatch."<init>":(Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;Lio/micronaut/core/convert/ConversionService;)V
       6: aload_0
       7: aload_1
       8: putfield      #36                 // Field error:Ljava/lang/Throwable;
      11: aload_0
      12: new           #38                 // class java/util/LinkedHashMap
      15: dup
      16: invokespecial #41                 // Method java/util/LinkedHashMap."<init>":()V
      19: putfield      #43                 // Field variables:Ljava/util/Map;
      22: aload_0
      23: invokevirtual #47                 // Method getArguments:()[Lio/micronaut/core/type/Argument;
      26: astore        4
      28: aload         4
      30: arraylength
      31: istore        5
      33: iconst_0
      34: istore        6
      36: iload         6
      38: iload         5
      40: if_icmpge     88
      43: aload         4
      45: iload         6
      47: aaload
      48: astore        7
      50: aload         7
      52: invokeinterface #59,  1           // InterfaceMethod io/micronaut/core/type/Argument.getType:()Ljava/lang/Class;
      57: aload_1
      58: invokevirtual #65                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      61: ifeq          82
      64: aload_0
      65: getfield      #43                 // Field variables:Ljava/util/Map;
      68: aload         7
      70: invokeinterface #69,  1           // InterfaceMethod io/micronaut/core/type/Argument.getName:()Ljava/lang/String;
      75: aload_1
      76: invokeinterface #75,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      81: pop
      82: iinc          6, 1
      85: goto          36
      88: return

  public java.util.Collection<io.micronaut.core.type.Argument> getRequiredArguments();
    Code:
       0: aload_0
       1: invokevirtual #47                 // Method getArguments:()[Lio/micronaut/core/type/Argument;
       4: invokestatic  #92                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       7: aload_0
       8: invokedynamic #110,  0            // InvokeDynamic #0:test:(Lio/micronaut/web/router/ErrorRouteMatch;)Ljava/util/function/Predicate;
      13: invokeinterface #116,  2          // InterfaceMethod java/util/stream/Stream.filter:(Ljava/util/function/Predicate;)Ljava/util/stream/Stream;
      18: invokestatic  #122                // Method java/util/stream/Collectors.toList:()Ljava/util/stream/Collector;
      21: invokeinterface #126,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
      26: checkcast     #128                // class java/util/Collection
      29: areturn

  public java.util.Map<java.lang.String, java.lang.Object> getVariableValues();
    Code:
       0: aload_0
       1: getfield      #43                 // Field variables:Ljava/util/Map;
       4: areturn

  public boolean isErrorRoute();
    Code:
       0: iconst_1
       1: ireturn

  protected io.micronaut.web.router.RouteMatch<R> newFulfilled(java.util.Map<java.lang.String, java.lang.Object>, java.util.List<io.micronaut.core.type.Argument>);
    Code:
       0: new           #11                 // class io/micronaut/web/router/ErrorRouteMatch$1
       3: dup
       4: aload_0
       5: aload_0
       6: getfield      #36                 // Field error:Ljava/lang/Throwable;
       9: aload_0
      10: getfield      #140                // Field abstractRoute:Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;
      13: aload_0
      14: getfield      #142                // Field conversionService:Lio/micronaut/core/convert/ConversionService;
      17: aload_2
      18: aload_1
      19: invokespecial #145                // Method io/micronaut/web/router/ErrorRouteMatch$1."<init>":(Lio/micronaut/web/router/ErrorRouteMatch;Ljava/lang/Throwable;Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;Lio/micronaut/core/convert/ConversionService;Ljava/util/List;Ljava/util/Map;)V
      22: areturn

  public io.micronaut.web.router.RouteMatch<R> decorate(java.util.function.Function<io.micronaut.web.router.RouteMatch<R>, R>);
    Code:
       0: aload_0
       1: invokevirtual #153                // Method getVariableValues:()Ljava/util/Map;
       4: astore_2
       5: aload_0
       6: invokevirtual #155                // Method getRequiredArguments:()Ljava/util/Collection;
       9: astore_3
      10: aload_0
      11: astore        4
      13: new           #9                  // class io/micronaut/web/router/ErrorRouteMatch$2
      16: dup
      17: aload_0
      18: aload_0
      19: getfield      #36                 // Field error:Ljava/lang/Throwable;
      22: aload_0
      23: getfield      #140                // Field abstractRoute:Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;
      26: aload_0
      27: getfield      #142                // Field conversionService:Lio/micronaut/core/convert/ConversionService;
      30: aload_3
      31: aload_1
      32: aload         4
      34: aload_2
      35: invokespecial #158                // Method io/micronaut/web/router/ErrorRouteMatch$2."<init>":(Lio/micronaut/web/router/ErrorRouteMatch;Ljava/lang/Throwable;Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;Lio/micronaut/core/convert/ConversionService;Ljava/util/Collection;Ljava/util/function/Function;Lio/micronaut/web/router/RouteMatch;Ljava/util/Map;)V
      38: areturn

  public java.lang.String toString();
    Code:
       0: aload_0
       1: getfield      #140                // Field abstractRoute:Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;
       4: invokevirtual #170                // Method java/lang/Object.toString:()Ljava/lang/String;
       7: areturn

  private boolean lambda$getRequiredArguments$0(io.micronaut.core.type.Argument);
    Code:
       0: aload_1
       1: invokeinterface #59,  1           // InterfaceMethod io/micronaut/core/type/Argument.getType:()Ljava/lang/Class;
       6: aload_0
       7: getfield      #36                 // Field error:Ljava/lang/Throwable;
      10: invokevirtual #65                 // Method java/lang/Class.isInstance:(Ljava/lang/Object;)Z
      13: ifne          20
      16: iconst_1
      17: goto          21
      20: iconst_0
      21: ireturn
}
