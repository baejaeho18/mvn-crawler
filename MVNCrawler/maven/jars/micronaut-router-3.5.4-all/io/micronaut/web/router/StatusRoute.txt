Compiled from "StatusRoute.java"
public interface io.micronaut.web.router.StatusRoute extends io.micronaut.web.router.MethodBasedRoute {
  public abstract java.lang.Class<?> originatingType();

  public abstract io.micronaut.http.HttpStatus status();

  public abstract <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(io.micronaut.http.HttpStatus);

  public abstract <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(java.lang.Class, io.micronaut.http.HttpStatus);

  public abstract io.micronaut.web.router.StatusRoute consumes(io.micronaut.http.MediaType...);

  public abstract io.micronaut.web.router.StatusRoute nest(java.lang.Runnable);

  public abstract io.micronaut.web.router.StatusRoute where(java.util.function.Predicate<io.micronaut.http.HttpRequest<?>>);

  public default io.micronaut.web.router.Route where(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #32,  2           // InterfaceMethod where:(Ljava/util/function/Predicate;)Lio/micronaut/web/router/StatusRoute;
       7: areturn

  public default io.micronaut.web.router.Route nest(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #37,  2           // InterfaceMethod nest:(Ljava/lang/Runnable;)Lio/micronaut/web/router/StatusRoute;
       7: areturn

  public default io.micronaut.web.router.Route consumes(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #40,  2           // InterfaceMethod consumes:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/StatusRoute;
       7: areturn
}
