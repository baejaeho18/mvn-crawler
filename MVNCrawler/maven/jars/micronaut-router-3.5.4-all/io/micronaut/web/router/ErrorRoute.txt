Compiled from "ErrorRoute.java"
public interface io.micronaut.web.router.ErrorRoute extends io.micronaut.web.router.MethodBasedRoute {
  public abstract java.lang.Class<?> originatingType();

  public abstract java.lang.Class<? extends java.lang.Throwable> exceptionType();

  public abstract <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(java.lang.Throwable);

  public abstract <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(java.lang.Class, java.lang.Throwable);

  public abstract io.micronaut.web.router.ErrorRoute consumes(io.micronaut.http.MediaType...);

  public abstract io.micronaut.web.router.ErrorRoute nest(java.lang.Runnable);

  public abstract io.micronaut.web.router.ErrorRoute where(java.util.function.Predicate<io.micronaut.http.HttpRequest<?>>);

  public abstract io.micronaut.web.router.ErrorRoute produces(io.micronaut.http.MediaType...);

  public default io.micronaut.web.router.Route where(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #33,  2           // InterfaceMethod where:(Ljava/util/function/Predicate;)Lio/micronaut/web/router/ErrorRoute;
       7: areturn

  public default io.micronaut.web.router.Route nest(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #38,  2           // InterfaceMethod nest:(Ljava/lang/Runnable;)Lio/micronaut/web/router/ErrorRoute;
       7: areturn

  public default io.micronaut.web.router.Route produces(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #41,  2           // InterfaceMethod produces:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/ErrorRoute;
       7: areturn

  public default io.micronaut.web.router.Route consumes(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #43,  2           // InterfaceMethod consumes:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/ErrorRoute;
       7: areturn
}
