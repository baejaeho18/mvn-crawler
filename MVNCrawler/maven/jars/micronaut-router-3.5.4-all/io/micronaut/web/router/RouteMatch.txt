Compiled from "RouteMatch.java"
public interface io.micronaut.web.router.RouteMatch<R> extends java.util.concurrent.Callable<R>, java.util.function.Predicate<io.micronaut.http.HttpRequest>, io.micronaut.web.router.RouteInfo<R> {
  public abstract java.util.Map<java.lang.String, java.lang.Object> getVariableValues();

  public abstract R execute(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract io.micronaut.web.router.RouteMatch<R> fulfill(java.util.Map<java.lang.String, java.lang.Object>);

  public abstract io.micronaut.web.router.RouteMatch<R> decorate(java.util.function.Function<io.micronaut.web.router.RouteMatch<R>, R>);

  public abstract java.util.Optional<io.micronaut.core.type.Argument<?>> getRequiredInput(java.lang.String);

  public abstract java.util.Optional<io.micronaut.core.type.Argument<?>> getBodyArgument();

  public abstract java.util.List<io.micronaut.http.MediaType> getProduces();

  public default java.util.Collection<io.micronaut.core.type.Argument> getRequiredArguments();
    Code:
       0: invokestatic  #44                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  public abstract io.micronaut.core.type.ReturnType<? extends R> getReturnType();

  public default R execute();
    Code:
       0: aload_0
       1: invokestatic  #55                 // Method java/util/Collections.emptyMap:()Ljava/util/Map;
       4: invokeinterface #57,  2           // InterfaceMethod execute:(Ljava/util/Map;)Ljava/lang/Object;
       9: areturn

  public default R call() throws java.lang.Exception;
    Code:
       0: aload_0
       1: invokeinterface #62,  1           // InterfaceMethod execute:()Ljava/lang/Object;
       6: areturn

  public default boolean isExecutable();
    Code:
       0: aload_0
       1: invokeinterface #66,  1           // InterfaceMethod getRequiredArguments:()Ljava/util/Collection;
       6: invokeinterface #71,  1           // InterfaceMethod java/util/Collection.isEmpty:()Z
      11: ireturn

  public default boolean isRequiredInput(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #75,  2           // InterfaceMethod getRequiredInput:(Ljava/lang/String;)Ljava/util/Optional;
       7: invokevirtual #80                 // Method java/util/Optional.isPresent:()Z
      10: ireturn

  public abstract boolean doesConsume(io.micronaut.http.MediaType);

  public abstract boolean doesProduce(java.util.Collection<io.micronaut.http.MediaType>);

  public abstract boolean doesProduce(io.micronaut.http.MediaType);

  public default boolean explicitlyConsumes(io.micronaut.http.MediaType);
    Code:
       0: iconst_0
       1: ireturn

  public default boolean explicitlyProduces(io.micronaut.http.MediaType);
    Code:
       0: iconst_0
       1: ireturn

  public default boolean isSatisfied(java.lang.String);
    Code:
       0: aload_0
       1: invokeinterface #96,  1           // InterfaceMethod getVariableValues:()Ljava/util/Map;
       6: aload_1
       7: invokeinterface #102,  2          // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      12: astore_2
      13: aload_2
      14: ifnull        28
      17: aload_2
      18: instanceof    #104                // class io/micronaut/web/router/UnresolvedArgument
      21: ifne          28
      24: iconst_1
      25: goto          29
      28: iconst_0
      29: ireturn
}
