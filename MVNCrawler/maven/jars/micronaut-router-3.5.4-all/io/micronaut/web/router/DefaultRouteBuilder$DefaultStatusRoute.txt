Compiled from "DefaultRouteBuilder.java"
class io.micronaut.web.router.DefaultRouteBuilder$DefaultStatusRoute extends io.micronaut.web.router.DefaultRouteBuilder$AbstractRoute implements io.micronaut.web.router.StatusRoute {
  private final io.micronaut.http.HttpStatus status;

  private final java.lang.Class originatingClass;

  final io.micronaut.web.router.DefaultRouteBuilder this$0;

  public io.micronaut.web.router.DefaultRouteBuilder$DefaultStatusRoute(io.micronaut.http.HttpStatus, io.micronaut.inject.MethodExecutionHandle, io.micronaut.core.convert.ConversionService<?>);
    Code:
       0: aload_0
       1: aload_1
       2: aconst_null
       3: aload_2
       4: aload_3
       5: aload         4
       7: invokespecial #25                 // Method "<init>":(Lio/micronaut/web/router/DefaultRouteBuilder;Ljava/lang/Class;Lio/micronaut/http/HttpStatus;Lio/micronaut/inject/MethodExecutionHandle;Lio/micronaut/core/convert/ConversionService;)V
      10: return

  public io.micronaut.web.router.DefaultRouteBuilder$DefaultStatusRoute(java.lang.Class, io.micronaut.http.HttpStatus, io.micronaut.inject.MethodExecutionHandle, io.micronaut.core.convert.ConversionService<?>);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #33                 // Field this$0:Lio/micronaut/web/router/DefaultRouteBuilder;
       5: aload_0
       6: aload_1
       7: aload         4
       9: aload         5
      11: invokestatic  #39                 // Method java/util/Collections.emptyList:()Ljava/util/List;
      14: invokespecial #42                 // Method io/micronaut/web/router/DefaultRouteBuilder$AbstractRoute."<init>":(Lio/micronaut/web/router/DefaultRouteBuilder;Lio/micronaut/inject/MethodExecutionHandle;Lio/micronaut/core/convert/ConversionService;Ljava/util/List;)V
      17: aload_0
      18: aload_2
      19: putfield      #44                 // Field originatingClass:Ljava/lang/Class;
      22: aload_0
      23: aload_3
      24: putfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      27: return

  public java.lang.Class<?> originatingType();
    Code:
       0: aload_0
       1: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
       4: areturn

  public io.micronaut.http.HttpStatus status();
    Code:
       0: aload_0
       1: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
       4: areturn

  public <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(java.lang.Class, io.micronaut.http.HttpStatus);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
       5: if_acmpne     33
       8: aload_0
       9: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      12: aload_2
      13: if_acmpne     33
      16: new           #56                 // class io/micronaut/web/router/StatusRouteMatch
      19: dup
      20: aload_2
      21: aload_0
      22: aload_0
      23: getfield      #58                 // Field conversionService:Lio/micronaut/core/convert/ConversionService;
      26: invokespecial #61                 // Method io/micronaut/web/router/StatusRouteMatch."<init>":(Lio/micronaut/http/HttpStatus;Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;Lio/micronaut/core/convert/ConversionService;)V
      29: invokestatic  #67                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      32: areturn
      33: invokestatic  #71                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      36: areturn

  public <T> java.util.Optional<io.micronaut.web.router.RouteMatch<T>> match(io.micronaut.http.HttpStatus);
    Code:
       0: aload_0
       1: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
       4: ifnonnull     32
       7: aload_0
       8: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      11: aload_1
      12: if_acmpne     32
      15: new           #56                 // class io/micronaut/web/router/StatusRouteMatch
      18: dup
      19: aload_1
      20: aload_0
      21: aload_0
      22: getfield      #58                 // Field conversionService:Lio/micronaut/core/convert/ConversionService;
      25: invokespecial #61                 // Method io/micronaut/web/router/StatusRouteMatch."<init>":(Lio/micronaut/http/HttpStatus;Lio/micronaut/web/router/DefaultRouteBuilder$AbstractRoute;Lio/micronaut/core/convert/ConversionService;)V
      28: invokestatic  #67                 // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      31: areturn
      32: invokestatic  #71                 // Method java/util/Optional.empty:()Ljava/util/Optional;
      35: areturn

  public io.micronaut.web.router.StatusRoute consumes(io.micronaut.http.MediaType...);
    Code:
       0: aload_0
       1: areturn

  public io.micronaut.web.router.Route consumesAll();
    Code:
       0: aload_0
       1: areturn

  public io.micronaut.web.router.StatusRoute nest(java.lang.Runnable);
    Code:
       0: aload_0
       1: areturn

  public io.micronaut.web.router.StatusRoute where(java.util.function.Predicate<io.micronaut.http.HttpRequest<?>>);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #90                 // Method io/micronaut/web/router/DefaultRouteBuilder$AbstractRoute.where:(Ljava/util/function/Predicate;)Lio/micronaut/web/router/Route;
       5: checkcast     #6                  // class io/micronaut/web/router/StatusRoute
       8: areturn

  public io.micronaut.http.HttpStatus getStatus();
    Code:
       0: aload_0
       1: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
       4: areturn

  public boolean equals(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: if_acmpne     7
       5: iconst_1
       6: ireturn
       7: aload_1
       8: instanceof    #2                  // class io/micronaut/web/router/DefaultRouteBuilder$DefaultStatusRoute
      11: ifne          16
      14: iconst_0
      15: ireturn
      16: aload_0
      17: aload_1
      18: invokespecial #98                 // Method io/micronaut/web/router/DefaultRouteBuilder$AbstractRoute.equals:(Ljava/lang/Object;)Z
      21: ifne          26
      24: iconst_0
      25: ireturn
      26: aload_1
      27: checkcast     #2                  // class io/micronaut/web/router/DefaultRouteBuilder$DefaultStatusRoute
      30: astore_2
      31: aload_0
      32: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      35: aload_2
      36: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      39: if_acmpne     60
      42: aload_0
      43: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
      46: aload_2
      47: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
      50: invokestatic  #103                // Method java/util/Objects.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z
      53: ifeq          60
      56: iconst_1
      57: goto          61
      60: iconst_0
      61: ireturn

  public int hashCode();
    Code:
       0: iconst_3
       1: anewarray     #109                // class java/lang/Object
       4: dup
       5: iconst_0
       6: aload_0
       7: invokespecial #111                // Method io/micronaut/web/router/DefaultRouteBuilder$AbstractRoute.hashCode:()I
      10: invokestatic  #117                // Method java/lang/Integer.valueOf:(I)Ljava/lang/Integer;
      13: aastore
      14: dup
      15: iconst_1
      16: aload_0
      17: getfield      #46                 // Field status:Lio/micronaut/http/HttpStatus;
      20: aastore
      21: dup
      22: iconst_2
      23: aload_0
      24: getfield      #44                 // Field originatingClass:Ljava/lang/Class;
      27: aastore
      28: invokestatic  #121                // Method java/util/Objects.hash:([Ljava/lang/Object;)I
      31: ireturn

  public io.micronaut.web.router.Route where(java.util.function.Predicate);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #123                // Method where:(Ljava/util/function/Predicate;)Lio/micronaut/web/router/StatusRoute;
       5: areturn

  public io.micronaut.web.router.Route consumes(io.micronaut.http.MediaType[]);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #126                // Method consumes:([Lio/micronaut/http/MediaType;)Lio/micronaut/web/router/StatusRoute;
       5: areturn

  public io.micronaut.web.router.Route nest(java.lang.Runnable);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #129                // Method nest:(Ljava/lang/Runnable;)Lio/micronaut/web/router/StatusRoute;
       5: areturn
}
