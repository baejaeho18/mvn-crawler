Compiled from "ConfigurationDefaultVersionProvider.java"
public class io.micronaut.web.router.version.ConfigurationDefaultVersionProvider implements io.micronaut.web.router.version.DefaultVersionProvider {
  private final java.lang.String defaultVersion;

  public io.micronaut.web.router.version.ConfigurationDefaultVersionProvider(io.micronaut.web.router.version.RoutesVersioningConfiguration);
    Code:
       0: aload_0
       1: invokespecial #23                 // Method java/lang/Object."<init>":()V
       4: aload_1
       5: invokevirtual #29                 // Method io/micronaut/web/router/version/RoutesVersioningConfiguration.getDefaultVersion:()Ljava/util/Optional;
       8: invokevirtual #35                 // Method java/util/Optional.isPresent:()Z
      11: ifne          24
      14: new           #37                 // class io/micronaut/context/exceptions/ConfigurationException
      17: dup
      18: ldc           #39                 // String this bean should not be loaded if micronaut.router.versioning.default-versionis null
      20: invokespecial #42                 // Method io/micronaut/context/exceptions/ConfigurationException."<init>":(Ljava/lang/String;)V
      23: athrow
      24: aload_0
      25: aload_1
      26: invokevirtual #29                 // Method io/micronaut/web/router/version/RoutesVersioningConfiguration.getDefaultVersion:()Ljava/util/Optional;
      29: invokevirtual #46                 // Method java/util/Optional.get:()Ljava/lang/Object;
      32: checkcast     #48                 // class java/lang/String
      35: putfield      #50                 // Field defaultVersion:Ljava/lang/String;
      38: return

  public java.lang.String resolveDefaultVersion();
    Code:
       0: aload_0
       1: getfield      #50                 // Field defaultVersion:Ljava/lang/String;
       4: areturn
}
