Compiled from "Glue.scala"
public final class facade.amazonaws.services.glue.Logical$ extends scala.scalajs.js.Object {
  public static facade.amazonaws.services.glue.Logical$ MODULE$;

  private final facade.amazonaws.services.glue.Logical AND;

  private final facade.amazonaws.services.glue.Logical ANY;

  private final scala.scalajs.js.Array<facade.amazonaws.services.glue.Logical> values;

  public static {};
    Code:
       0: new           #2                  // class facade/amazonaws/services/glue/Logical$
       3: invokespecial #18                 // Method "<init>":()V
       6: return

  public facade.amazonaws.services.glue.Logical AND();
    Code:
       0: aload_0
       1: getfield      #21                 // Field AND:Lfacade/amazonaws/services/glue/Logical;
       4: areturn

  public facade.amazonaws.services.glue.Logical ANY();
    Code:
       0: aload_0
       1: getfield      #24                 // Field ANY:Lfacade/amazonaws/services/glue/Logical;
       4: areturn

  public scala.scalajs.js.Array<facade.amazonaws.services.glue.Logical> values();
    Code:
       0: aload_0
       1: getfield      #28                 // Field values:Lscala/scalajs/js/Array;
       4: areturn

  private facade.amazonaws.services.glue.Logical$();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method scala/scalajs/js/Object."<init>":()V
       4: aload_0
       5: putstatic     #31                 // Field MODULE$:Lfacade/amazonaws/services/glue/Logical$;
       8: aload_0
       9: ldc           #32                 // String AND
      11: checkcast     #34                 // class facade/amazonaws/services/glue/Logical
      14: putfield      #21                 // Field AND:Lfacade/amazonaws/services/glue/Logical;
      17: aload_0
      18: ldc           #35                 // String ANY
      20: checkcast     #34                 // class facade/amazonaws/services/glue/Logical
      23: putfield      #24                 // Field ANY:Lfacade/amazonaws/services/glue/Logical;
      26: aload_0
      27: getstatic     #40                 // Field scala/scalajs/js/Object$.MODULE$:Lscala/scalajs/js/Object$;
      30: getstatic     #45                 // Field scala/scalajs/js/Array$.MODULE$:Lscala/scalajs/js/Array$;
      33: getstatic     #50                 // Field scala/Predef$.MODULE$:Lscala/Predef$;
      36: iconst_2
      37: anewarray     #34                 // class facade/amazonaws/services/glue/Logical
      40: dup
      41: iconst_0
      42: aload_0
      43: invokevirtual #52                 // Method AND:()Lfacade/amazonaws/services/glue/Logical;
      46: aastore
      47: dup
      48: iconst_1
      49: aload_0
      50: invokevirtual #54                 // Method ANY:()Lfacade/amazonaws/services/glue/Logical;
      53: aastore
      54: checkcast     #56                 // class "[Ljava/lang/Object;"
      57: invokevirtual #60                 // Method scala/Predef$.wrapRefArray:([Ljava/lang/Object;)Lscala/collection/mutable/WrappedArray;
      60: invokevirtual #64                 // Method scala/scalajs/js/Array$.apply:(Lscala/collection/Seq;)Lscala/scalajs/js/Array;
      63: invokevirtual #68                 // Method scala/scalajs/js/Object$.freeze:(Lscala/scalajs/js/Object;)Lscala/scalajs/js/Object;
      66: checkcast     #70                 // class scala/scalajs/js/Array
      69: putfield      #28                 // Field values:Lscala/scalajs/js/Array;
      72: return
}
