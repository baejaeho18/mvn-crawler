Compiled from "Glue.scala"
public interface facade.amazonaws.services.glue.ListWorkflowsRequest {
  public static scala.scalajs.js.$bar<java.lang.String, scala.runtime.BoxedUnit> apply$default$2();
    Code:
       0: getstatic     #17                 // Field facade/amazonaws/services/glue/ListWorkflowsRequest$.MODULE$:Lfacade/amazonaws/services/glue/ListWorkflowsRequest$;
       3: invokevirtual #19                 // Method facade/amazonaws/services/glue/ListWorkflowsRequest$.apply$default$2:()Lscala/scalajs/js/$bar;
       6: areturn

  public static scala.scalajs.js.$bar<java.lang.Object, scala.runtime.BoxedUnit> apply$default$1();
    Code:
       0: getstatic     #17                 // Field facade/amazonaws/services/glue/ListWorkflowsRequest$.MODULE$:Lfacade/amazonaws/services/glue/ListWorkflowsRequest$;
       3: invokevirtual #23                 // Method facade/amazonaws/services/glue/ListWorkflowsRequest$.apply$default$1:()Lscala/scalajs/js/$bar;
       6: areturn

  public static facade.amazonaws.services.glue.ListWorkflowsRequest apply(scala.scalajs.js.$bar<java.lang.Object, scala.runtime.BoxedUnit>, scala.scalajs.js.$bar<java.lang.String, scala.runtime.BoxedUnit>);
    Code:
       0: getstatic     #17                 // Field facade/amazonaws/services/glue/ListWorkflowsRequest$.MODULE$:Lfacade/amazonaws/services/glue/ListWorkflowsRequest$;
       3: aload_0
       4: aload_1
       5: invokevirtual #30                 // Method facade/amazonaws/services/glue/ListWorkflowsRequest$.apply:(Lscala/scalajs/js/$bar;Lscala/scalajs/js/$bar;)Lfacade/amazonaws/services/glue/ListWorkflowsRequest;
       8: areturn

  public abstract scala.scalajs.js.$bar<java.lang.Object, scala.runtime.BoxedUnit> MaxResults();

  public abstract void MaxResults_$eq(scala.scalajs.js.$bar<java.lang.Object, scala.runtime.BoxedUnit>);

  public abstract scala.scalajs.js.$bar<java.lang.String, scala.runtime.BoxedUnit> NextToken();

  public abstract void NextToken_$eq(scala.scalajs.js.$bar<java.lang.String, scala.runtime.BoxedUnit>);
}
