Compiled from "AbstractOWLFrameSection.java"
public abstract class org.protege.editor.owl.ui.frame.AbstractOWLFrameSection<R, A extends org.semanticweb.owlapi.model.OWLAxiom, E> extends org.semanticweb.owlapi.util.OWLAxiomVisitorAdapter implements org.protege.editor.owl.ui.frame.OWLFrameSection<R, A, E>, org.protege.editor.owl.ui.editor.OWLObjectEditorHandler<E> {
  private final org.slf4j.Logger logger;

  private static int inconsistentOntologyWarnings;

  private org.protege.editor.owl.OWLEditorKit owlEditorKit;

  private org.protege.editor.owl.ui.frame.OWLFrame<? extends R> frame;

  private java.util.List<org.protege.editor.owl.ui.frame.OWLFrameSectionRow<R, A, E>> rows;

  private java.lang.String label;

  private java.lang.String rowLabel;

  private org.protege.editor.owl.ui.editor.OWLObjectEditor<E> editor;

  private boolean cacheEditor;

  private org.semanticweb.owlapi.model.OWLOntologyChangeListener listener;

  protected org.protege.editor.owl.ui.frame.AbstractOWLFrameSection(org.protege.editor.owl.OWLEditorKit, java.lang.String, java.lang.String, org.protege.editor.owl.ui.frame.OWLFrame<? extends R>);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/semanticweb/owlapi/util/OWLAxiomVisitorAdapter."<init>":()V
       4: aload_0
       5: ldc           #2                  // class org/protege/editor/owl/ui/frame/AbstractOWLFrameSection
       7: invokestatic  #3                  // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
      10: putfield      #4                  // Field logger:Lorg/slf4j/Logger;
      13: aload_0
      14: iconst_1
      15: putfield      #5                  // Field cacheEditor:Z
      18: aload_0
      19: aload_0
      20: invokedynamic #6,  0              // InvokeDynamic #0:ontologiesChanged:(Lorg/protege/editor/owl/ui/frame/AbstractOWLFrameSection;)Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;
      25: putfield      #7                  // Field listener:Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;
      28: aload_0
      29: aload_1
      30: putfield      #8                  // Field owlEditorKit:Lorg/protege/editor/owl/OWLEditorKit;
      33: aload_0
      34: aload_2
      35: putfield      #9                  // Field label:Ljava/lang/String;
      38: aload_0
      39: aload_3
      40: putfield      #10                 // Field rowLabel:Ljava/lang/String;
      43: aload_0
      44: aload         4
      46: putfield      #11                 // Field frame:Lorg/protege/editor/owl/ui/frame/OWLFrame;
      49: aload_0
      50: new           #12                 // class java/util/ArrayList
      53: dup
      54: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      57: putfield      #14                 // Field rows:Ljava/util/List;
      60: aload_0
      61: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      64: aload_0
      65: getfield      #7                  // Field listener:Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;
      68: invokeinterface #16,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.addOntologyChangeListener:(Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;)V
      73: return

  protected org.protege.editor.owl.ui.frame.AbstractOWLFrameSection(org.protege.editor.owl.OWLEditorKit, java.lang.String, org.protege.editor.owl.ui.frame.OWLFrame<? extends R>);
    Code:
       0: aload_0
       1: aload_1
       2: aload_2
       3: aconst_null
       4: aload_3
       5: invokespecial #17                 // Method "<init>":(Lorg/protege/editor/owl/OWLEditorKit;Ljava/lang/String;Ljava/lang/String;Lorg/protege/editor/owl/ui/frame/OWLFrame;)V
       8: return

  protected void setCacheEditor(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #5                  // Field cacheEditor:Z
       5: return

  public java.util.List<org.protege.editor.core.ui.list.MListButton> getAdditionalButtons();
    Code:
       0: invokestatic  #18                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       3: areturn

  private void processOntologyChanges(java.util.List<? extends org.semanticweb.owlapi.model.OWLOntologyChange>);
    Code:
       0: aload_0
       1: invokevirtual #19                 // Method getRootObject:()Ljava/lang/Object;
       4: ifnonnull     8
       7: return
       8: aload_0
       9: aload_1
      10: invokevirtual #20                 // Method handleChanges:(Ljava/util/List;)V
      13: aload_1
      14: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      19: astore_2
      20: aload_2
      21: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          57
      29: aload_2
      30: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #24                 // class org/semanticweb/owlapi/model/OWLOntologyChange
      38: astore_3
      39: aload_0
      40: aload_3
      41: invokevirtual #25                 // Method isResettingChange:(Lorg/semanticweb/owlapi/model/OWLOntologyChange;)Z
      44: ifeq          54
      47: aload_0
      48: invokevirtual #26                 // Method reset:()V
      51: goto          57
      54: goto          20
      57: aload_0
      58: aload_1
      59: invokevirtual #27                 // Method handleOntologyChanges:(Ljava/util/List;)V
      62: return

  protected void handleChanges(java.util.List<? extends org.semanticweb.owlapi.model.OWLOntologyChange>);
    Code:
       0: aload_1
       1: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
       6: astore_2
       7: aload_2
       8: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      13: ifeq          46
      16: aload_2
      17: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      22: checkcast     #24                 // class org/semanticweb/owlapi/model/OWLOntologyChange
      25: astore_3
      26: aload_3
      27: invokevirtual #28                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.isAxiomChange:()Z
      30: ifeq          43
      33: aload_3
      34: invokevirtual #29                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      37: aload_0
      38: invokeinterface #30,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLAxiom.accept:(Lorg/semanticweb/owlapi/model/OWLAxiomVisitor;)V
      43: goto          7
      46: return

  protected boolean isResettingChange(org.semanticweb.owlapi.model.OWLOntologyChange);
    Code:
       0: iconst_0
       1: ireturn

  protected void handleOntologyChanges(java.util.List<? extends org.semanticweb.owlapi.model.OWLOntologyChange>);
    Code:
       0: return

  public final void dispose();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: aload_0
       5: getfield      #7                  // Field listener:Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;
       8: invokeinterface #31,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.removeOntologyChangeListener:(Lorg/semanticweb/owlapi/model/OWLOntologyChangeListener;)V
      13: aload_0
      14: invokevirtual #32                 // Method disposeOfSection:()V
      17: aload_0
      18: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      21: ifnull        33
      24: aload_0
      25: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      28: invokeinterface #34,  1           // InterfaceMethod org/protege/editor/owl/ui/editor/OWLObjectEditor.dispose:()V
      33: return

  protected void setLabel(java.lang.String);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #9                  // Field label:Ljava/lang/String;
       5: return

  protected org.semanticweb.owlapi.reasoner.OWLReasoner getReasoner();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #35,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getReasoner:()Lorg/semanticweb/owlapi/reasoner/OWLReasoner;
       9: areturn

  protected void disposeOfSection();
    Code:
       0: return

  public java.lang.String getLabel();
    Code:
       0: aload_0
       1: getfield      #9                  // Field label:Ljava/lang/String;
       4: areturn

  public java.lang.String getRowLabel(org.protege.editor.owl.ui.frame.OWLFrameSectionRow);
    Code:
       0: aload_0
       1: getfield      #10                 // Field rowLabel:Ljava/lang/String;
       4: areturn

  public final org.protege.editor.owl.ui.editor.OWLObjectEditor<E> getEditor();
    Code:
       0: aload_0
       1: getfield      #5                  // Field cacheEditor:Z
       4: ifne          28
       7: aload_0
       8: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      11: ifnull        28
      14: aload_0
      15: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      18: invokeinterface #34,  1           // InterfaceMethod org/protege/editor/owl/ui/editor/OWLObjectEditor.dispose:()V
      23: aload_0
      24: aconst_null
      25: putfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      28: aload_0
      29: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      32: ifnonnull     65
      35: aload_0
      36: invokevirtual #36                 // Method getObjectEditor:()Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      39: astore_1
      40: aload_1
      41: ifnull        51
      44: aload_1
      45: aload_0
      46: invokeinterface #37,  2           // InterfaceMethod org/protege/editor/owl/ui/editor/OWLObjectEditor.setHandler:(Lorg/protege/editor/owl/ui/editor/OWLObjectEditorHandler;)V
      51: aload_1
      52: instanceof    #38                 // class org/protege/editor/core/ui/wizard/Wizard
      55: ifeq          60
      58: aload_1
      59: areturn
      60: aload_0
      61: aload_1
      62: putfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      65: aload_0
      66: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      69: ifnull        81
      72: aload_0
      73: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      76: invokeinterface #39,  1           // InterfaceMethod org/protege/editor/owl/ui/editor/OWLObjectEditor.clear:()V
      81: aload_0
      82: getfield      #33                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLObjectEditor;
      85: areturn

  public void handleEditingFinished(java.util.Set<E>);
    Code:
       0: aload_1
       1: ifnonnull     5
       4: return
       5: new           #40                 // class java/util/HashSet
       8: dup
       9: invokespecial #41                 // Method java/util/HashSet."<init>":()V
      12: astore_2
      13: new           #12                 // class java/util/ArrayList
      16: dup
      17: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
      20: astore_3
      21: aload_1
      22: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      27: astore        4
      29: aload         4
      31: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      36: ifeq          128
      39: aload         4
      41: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      46: astore        5
      48: aload_0
      49: aload         5
      51: invokevirtual #43                 // Method createAxiom:(Ljava/lang/Object;)Lorg/semanticweb/owlapi/model/OWLAxiom;
      54: astore        6
      56: invokestatic  #44                 // Method org/protege/editor/owl/model/axiom/FreshAxiomLocationPreferences.getPreferences:()Lorg/protege/editor/owl/model/axiom/FreshAxiomLocationPreferences;
      59: astore        7
      61: new           #45                 // class org/protege/editor/owl/model/axiom/FreshActionStrategySelector
      64: dup
      65: aload         7
      67: aload_0
      68: getfield      #8                  // Field owlEditorKit:Lorg/protege/editor/owl/OWLEditorKit;
      71: invokespecial #46                 // Method org/protege/editor/owl/model/axiom/FreshActionStrategySelector."<init>":(Lorg/protege/editor/owl/model/axiom/FreshAxiomLocationPreferences;Lorg/protege/editor/owl/OWLEditorKit;)V
      74: astore        8
      76: aload         8
      78: invokevirtual #47                 // Method org/protege/editor/owl/model/axiom/FreshActionStrategySelector.getFreshAxiomLocationStrategy:()Lorg/protege/editor/owl/model/axiom/FreshAxiomLocationStrategy;
      81: astore        9
      83: aload         9
      85: aload         6
      87: aload_0
      88: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      91: invokeinterface #48,  3           // InterfaceMethod org/protege/editor/owl/model/axiom/FreshAxiomLocationStrategy.getFreshAxiomLocation:(Lorg/semanticweb/owlapi/model/OWLAxiom;Lorg/protege/editor/owl/model/HasActiveOntology;)Lorg/semanticweb/owlapi/model/OWLOntology;
      96: astore        10
      98: aload_3
      99: new           #49                 // class org/semanticweb/owlapi/model/AddAxiom
     102: dup
     103: aload         10
     105: aload         6
     107: invokespecial #50                 // Method org/semanticweb/owlapi/model/AddAxiom."<init>":(Lorg/semanticweb/owlapi/model/OWLOntology;Lorg/semanticweb/owlapi/model/OWLAxiom;)V
     110: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
     115: pop
     116: aload_2
     117: aload         6
     119: invokeinterface #52,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
     124: pop
     125: goto          29
     128: aload_0
     129: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
     132: aload_3
     133: invokeinterface #53,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.applyChanges:(Ljava/util/List;)V
     138: aload_2
     139: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
     144: astore        4
     146: aload         4
     148: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
     153: ifeq          203
     156: aload         4
     158: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     163: checkcast     #54                 // class org/semanticweb/owlapi/model/OWLAxiom
     166: astore        5
     168: aload_0
     169: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
     172: invokeinterface #55,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getActiveOntology:()Lorg/semanticweb/owlapi/model/OWLOntology;
     177: aload         5
     179: invokeinterface #56,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.containsAxiom:(Lorg/semanticweb/owlapi/model/OWLAxiom;)Z
     184: ifne          200
     187: aload_0
     188: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
     191: ldc           #57                 // String Editing of an axiom finished, but the axiom was not added to the active ontology. Axiom: {}.
     193: aload         5
     195: invokeinterface #58,  3           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;)V
     200: goto          146
     203: return

  protected abstract A createAxiom(E);

  public abstract org.protege.editor.owl.ui.editor.OWLObjectEditor<E> getObjectEditor();

  public boolean checkEditorResults(org.protege.editor.owl.ui.editor.OWLObjectEditor<E>);
    Code:
       0: iconst_1
       1: ireturn

  public int getRowIndex(org.protege.editor.owl.ui.frame.OWLFrameSectionRow);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rows:Ljava/util/List;
       4: aload_1
       5: invokeinterface #59,  2           // InterfaceMethod java/util/List.indexOf:(Ljava/lang/Object;)I
      10: ireturn

  public org.protege.editor.owl.OWLEditorKit getOWLEditorKit();
    Code:
       0: aload_0
       1: getfield      #8                  // Field owlEditorKit:Lorg/protege/editor/owl/OWLEditorKit;
       4: areturn

  public org.protege.editor.owl.model.OWLModelManager getOWLModelManager();
    Code:
       0: aload_0
       1: getfield      #8                  // Field owlEditorKit:Lorg/protege/editor/owl/OWLEditorKit;
       4: invokevirtual #60                 // Method org/protege/editor/owl/OWLEditorKit.getModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       7: areturn

  public org.semanticweb.owlapi.model.OWLOntologyManager getOWLOntologyManager();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #61,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLOntologyManager:()Lorg/semanticweb/owlapi/model/OWLOntologyManager;
       9: areturn

  public org.semanticweb.owlapi.model.OWLDataFactory getOWLDataFactory();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #62,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLDataFactory:()Lorg/semanticweb/owlapi/model/OWLDataFactory;
       9: areturn

  public org.semanticweb.owlapi.reasoner.OWLReasoner getCurrentReasoner();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #63,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLReasonerManager:()Lorg/protege/editor/owl/model/inference/OWLReasonerManager;
       9: invokeinterface #64,  1           // InterfaceMethod org/protege/editor/owl/model/inference/OWLReasonerManager.getCurrentReasoner:()Lorg/semanticweb/owlapi/reasoner/OWLReasoner;
      14: areturn

  public org.protege.editor.owl.ui.frame.OWLFrame<? extends R> getFrame();
    Code:
       0: aload_0
       1: getfield      #11                 // Field frame:Lorg/protege/editor/owl/ui/frame/OWLFrame;
       4: areturn

  public R getRootObject();
    Code:
       0: aload_0
       1: getfield      #11                 // Field frame:Lorg/protege/editor/owl/ui/frame/OWLFrame;
       4: invokeinterface #65,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrame.getRootObject:()Ljava/lang/Object;
       9: areturn

  public void setRootObject(R);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rows:Ljava/util/List;
       4: invokeinterface #66,  1           // InterfaceMethod java/util/List.clear:()V
       9: aload_0
      10: invokevirtual #67                 // Method clear:()V
      13: aload_1
      14: ifnull        97
      17: aload_0
      18: invokevirtual #68                 // Method getOntologies:()Ljava/util/Set;
      21: invokeinterface #42,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      26: astore_2
      27: aload_2
      28: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      33: ifeq          54
      36: aload_2
      37: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      42: checkcast     #69                 // class org/semanticweb/owlapi/model/OWLOntology
      45: astore_3
      46: aload_0
      47: aload_3
      48: invokevirtual #70                 // Method refill:(Lorg/semanticweb/owlapi/model/OWLOntology;)V
      51: goto          27
      54: aload_0
      55: invokevirtual #71                 // Method refillInferred:()V
      58: goto          97
      61: astore_2
      62: aload_0
      63: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      66: ldc           #73                 // String An InconsistentOntologyException was thrown when refilling the inferred information in a frame section.  The frame section implementation should take care of this.
      68: aload_2
      69: invokeinterface #74,  3           // InterfaceMethod org/slf4j/Logger.error:(Ljava/lang/String;Ljava/lang/Throwable;)V
      74: goto          97
      77: astore_2
      78: aload_0
      79: getfield      #4                  // Field logger:Lorg/slf4j/Logger;
      82: ldc           #76                 // String An error occurred whilst filling the {} frame with inferred information: {}
      84: aload_0
      85: invokevirtual #77                 // Method java/lang/Object.getClass:()Ljava/lang/Class;
      88: invokevirtual #78                 // Method java/lang/Class.getName:()Ljava/lang/String;
      91: aload_2
      92: invokeinterface #79,  4           // InterfaceMethod org/slf4j/Logger.warn:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      97: aload_0
      98: invokevirtual #80                 // Method getRowComparator:()Ljava/util/Comparator;
     101: astore_2
     102: aload_2
     103: ifnull        114
     106: aload_0
     107: getfield      #14                 // Field rows:Ljava/util/List;
     110: aload_2
     111: invokestatic  #81                 // Method java/util/Collections.sort:(Ljava/util/List;Ljava/util/Comparator;)V
     114: aload_0
     115: invokespecial #82                 // Method fireContentChanged:()V
     118: return
    Exception table:
       from    to  target type
          54    58    61   Class org/semanticweb/owlapi/reasoner/InconsistentOntologyException
          54    58    77   Class java/lang/Exception

  protected java.util.Set<org.semanticweb.owlapi.model.OWLOntology> getOntologies();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #83,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getActiveOntologies:()Ljava/util/Set;
       9: areturn

  protected abstract void refill(org.semanticweb.owlapi.model.OWLOntology);

  protected abstract void clear();

  protected void refillInferred();
    Code:
       0: return

  protected void addRow(org.protege.editor.owl.ui.frame.OWLFrameSectionRow<R, A, E>);
    Code:
       0: aload_0
       1: getfield      #14                 // Field rows:Ljava/util/List;
       4: aload_1
       5: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  protected void addInferredRowIfNontrivial(org.protege.editor.owl.ui.frame.OWLFrameSectionRow<R, A, E>);
    Code:
       0: aload_1
       1: invokeinterface #84,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrameSectionRow.isInferred:()Z
       6: ifeq          34
       9: aload_1
      10: invokeinterface #85,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrameSectionRow.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      15: invokestatic  #86                 // Method org/protege/editor/owl/model/inference/VacuousAxiomVisitor.isVacuousAxiom:(Lorg/semanticweb/owlapi/model/OWLAxiom;)Z
      18: ifne          33
      21: aload_1
      22: invokeinterface #85,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrameSectionRow.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      27: invokestatic  #87                 // Method org/protege/editor/owl/model/inference/VacuousAxiomVisitor.involvesInverseSquared:(Lorg/semanticweb/owlapi/model/OWLAxiom;)Z
      30: ifeq          34
      33: return
      34: aload_0
      35: aload_1
      36: invokevirtual #88                 // Method addRow:(Lorg/protege/editor/owl/ui/frame/OWLFrameSectionRow;)V
      39: return

  protected void reset();
    Code:
       0: aload_0
       1: aload_0
       2: invokevirtual #19                 // Method getRootObject:()Ljava/lang/Object;
       5: invokevirtual #89                 // Method setRootObject:(Ljava/lang/Object;)V
       8: aload_0
       9: invokespecial #82                 // Method fireContentChanged:()V
      12: return

  private void fireContentChanged();
    Code:
       0: aload_0
       1: invokevirtual #90                 // Method getFrame:()Lorg/protege/editor/owl/ui/frame/OWLFrame;
       4: invokeinterface #91,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrame.fireContentChanged:()V
       9: return

  public java.util.List<org.protege.editor.owl.ui.frame.OWLFrameSectionRow<R, A, E>> getRows();
    Code:
       0: aload_0
       1: getfield      #14                 // Field rows:Ljava/util/List;
       4: invokestatic  #92                 // Method java/util/Collections.unmodifiableList:(Ljava/util/List;)Ljava/util/List;
       7: areturn

  public java.util.List<A> getAxioms();
    Code:
       0: new           #12                 // class java/util/ArrayList
       3: dup
       4: invokespecial #13                 // Method java/util/ArrayList."<init>":()V
       7: astore_1
       8: aload_0
       9: getfield      #14                 // Field rows:Ljava/util/List;
      12: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      17: astore_2
      18: aload_2
      19: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      24: ifeq          53
      27: aload_2
      28: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      33: checkcast     #93                 // class org/protege/editor/owl/ui/frame/OWLFrameSectionRow
      36: astore_3
      37: aload_1
      38: aload_3
      39: invokeinterface #85,  1           // InterfaceMethod org/protege/editor/owl/ui/frame/OWLFrameSectionRow.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      44: invokeinterface #51,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      49: pop
      50: goto          18
      53: aload_1
      54: areturn

  public java.lang.String getRendering();
    Code:
       0: aload_0
       1: getfield      #9                  // Field label:Ljava/lang/String;
       4: areturn

  public boolean canAdd();
    Code:
       0: aload_0
       1: invokevirtual #15                 // Method getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       4: invokeinterface #94,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.isActiveOntologyMutable:()Z
       9: ireturn

  public boolean canAcceptDrop(java.util.List<org.semanticweb.owlapi.model.OWLObject>);
    Code:
       0: iconst_0
       1: ireturn

  public boolean dropObjects(java.util.List<org.semanticweb.owlapi.model.OWLObject>);
    Code:
       0: iconst_0
       1: ireturn

  public java.lang.String toString();
    Code:
       0: new           #95                 // class java/lang/StringBuilder
       3: dup
       4: invokespecial #96                 // Method java/lang/StringBuilder."<init>":()V
       7: astore_1
       8: aload_1
       9: aload_0
      10: invokevirtual #97                 // Method getRendering:()Ljava/lang/String;
      13: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      16: pop
      17: aload_1
      18: ldc           #99                 // String :\n
      20: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      23: pop
      24: aload_0
      25: invokevirtual #100                // Method getRows:()Ljava/util/List;
      28: invokeinterface #21,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      33: astore_2
      34: aload_2
      35: invokeinterface #22,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      40: ifeq          76
      43: aload_2
      44: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      49: checkcast     #93                 // class org/protege/editor/owl/ui/frame/OWLFrameSectionRow
      52: astore_3
      53: aload_1
      54: ldc           #101                // String \t
      56: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      59: pop
      60: aload_1
      61: aload_3
      62: invokevirtual #102                // Method java/lang/StringBuilder.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;
      65: pop
      66: aload_1
      67: ldc           #103                // String \n
      69: invokevirtual #98                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      72: pop
      73: goto          34
      76: aload_1
      77: invokevirtual #104                // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      80: areturn

  public java.lang.String getName();
    Code:
       0: aload_0
       1: invokevirtual #105                // Method getLabel:()Ljava/lang/String;
       4: areturn

  public void visit(org.semanticweb.owlapi.model.OWLDeclarationAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSubClassOfAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLNegativeObjectPropertyAssertionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLAsymmetricObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLReflexiveObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointClassesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyDomainAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyDomainAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentObjectPropertiesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLNegativeDataPropertyAssertionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDifferentIndividualsAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointDataPropertiesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointObjectPropertiesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyRangeAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLObjectPropertyAssertionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLFunctionalObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSubObjectPropertyOfAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDisjointUnionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSymmetricObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyRangeAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLFunctionalDataPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentDataPropertiesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLClassAssertionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLEquivalentClassesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDataPropertyAssertionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLTransitiveObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLIrreflexiveObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSubDataPropertyOfAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLInverseFunctionalObjectPropertyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSameIndividualAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLSubPropertyChainOfAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLInverseObjectPropertiesAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLHasKeyAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.OWLDatatypeDefinitionAxiom);
    Code:
       0: return

  public void visit(org.semanticweb.owlapi.model.SWRLRule);
    Code:
       0: return

  static {};
    Code:
       0: iconst_0
       1: putstatic     #106                // Field inconsistentOntologyWarnings:I
       4: return
}
