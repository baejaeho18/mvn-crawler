Compiled from "StyledStringSelection.java"
public class org.protege.editor.owl.ui.renderer.styledstring.StyledStringSelection implements java.awt.datatransfer.Transferable {
  public static final java.lang.String RTF_MIME_TYPE;

  public static final java.lang.String HTML_MIME_TYPE;

  public static final java.lang.String PLAIN_TEXT_MIME_TYPE;

  public static final java.awt.datatransfer.DataFlavor RTF_DATA_FLAVOR;

  public static final java.awt.datatransfer.DataFlavor HTML_DATA_FLAVOR;

  public static final java.awt.datatransfer.DataFlavor PLAIN_TEXT_DATA_FLAVOR;

  private static java.awt.datatransfer.DataFlavor[] DATA_FLAVORS;

  private org.protege.editor.owl.ui.renderer.styledstring.StyledString styledString;

  public org.protege.editor.owl.ui.renderer.styledstring.StyledStringSelection(org.protege.editor.owl.ui.renderer.styledstring.StyledString);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field styledString:Lorg/protege/editor/owl/ui/renderer/styledstring/StyledString;
       9: return

  public java.awt.datatransfer.DataFlavor[] getTransferDataFlavors();
    Code:
       0: getstatic     #3                  // Field DATA_FLAVORS:[Ljava/awt/datatransfer/DataFlavor;
       3: areturn

  public boolean isDataFlavorSupported(java.awt.datatransfer.DataFlavor);
    Code:
       0: aload_1
       1: invokevirtual #4                  // Method java/awt/datatransfer/DataFlavor.getMimeType:()Ljava/lang/String;
       4: astore_2
       5: aload_1
       6: ldc           #6                  // String application/rtf
       8: invokevirtual #7                  // Method java/awt/datatransfer/DataFlavor.isMimeTypeEqual:(Ljava/lang/String;)Z
      11: ifne          32
      14: aload_1
      15: ldc           #8                  // String text/html
      17: invokevirtual #7                  // Method java/awt/datatransfer/DataFlavor.isMimeTypeEqual:(Ljava/lang/String;)Z
      20: ifne          32
      23: aload_1
      24: ldc           #9                  // String text/plain
      26: invokevirtual #7                  // Method java/awt/datatransfer/DataFlavor.isMimeTypeEqual:(Ljava/lang/String;)Z
      29: ifeq          36
      32: iconst_1
      33: goto          37
      36: iconst_0
      37: ireturn

  public java.lang.Object getTransferData(java.awt.datatransfer.DataFlavor) throws java.awt.datatransfer.UnsupportedFlavorException, java.io.IOException;
    Code:
       0: aload_1
       1: ldc           #6                  // String application/rtf
       3: invokevirtual #7                  // Method java/awt/datatransfer/DataFlavor.isMimeTypeEqual:(Ljava/lang/String;)Z
       6: ifeq          20
       9: aload_0
      10: getfield      #2                  // Field styledString:Lorg/protege/editor/owl/ui/renderer/styledstring/StyledString;
      13: invokevirtual #10                 // Method org/protege/editor/owl/ui/renderer/styledstring/StyledString.toRTF:()Ljava/lang/String;
      16: astore_2
      17: goto          48
      20: aload_1
      21: ldc           #8                  // String text/html
      23: invokevirtual #7                  // Method java/awt/datatransfer/DataFlavor.isMimeTypeEqual:(Ljava/lang/String;)Z
      26: ifeq          40
      29: aload_0
      30: getfield      #2                  // Field styledString:Lorg/protege/editor/owl/ui/renderer/styledstring/StyledString;
      33: invokevirtual #11                 // Method org/protege/editor/owl/ui/renderer/styledstring/StyledString.toHTML:()Ljava/lang/String;
      36: astore_2
      37: goto          48
      40: aload_0
      41: getfield      #2                  // Field styledString:Lorg/protege/editor/owl/ui/renderer/styledstring/StyledString;
      44: invokevirtual #12                 // Method org/protege/editor/owl/ui/renderer/styledstring/StyledString.toPlainText:()Ljava/lang/String;
      47: astore_2
      48: aload_1
      49: invokevirtual #13                 // Method java/awt/datatransfer/DataFlavor.getRepresentationClass:()Ljava/lang/Class;
      52: ldc           #14                 // class java/lang/String
      54: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      57: ifeq          62
      60: aload_2
      61: areturn
      62: aload_1
      63: invokevirtual #13                 // Method java/awt/datatransfer/DataFlavor.getRepresentationClass:()Ljava/lang/Class;
      66: ldc           #16                 // class java/io/InputStream
      68: invokevirtual #15                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      71: ifeq          86
      74: new           #17                 // class java/io/ByteArrayInputStream
      77: dup
      78: aload_2
      79: invokevirtual #18                 // Method java/lang/String.getBytes:()[B
      82: invokespecial #19                 // Method java/io/ByteArrayInputStream."<init>":([B)V
      85: areturn
      86: new           #20                 // class java/awt/datatransfer/UnsupportedFlavorException
      89: dup
      90: aload_1
      91: invokespecial #21                 // Method java/awt/datatransfer/UnsupportedFlavorException."<init>":(Ljava/awt/datatransfer/DataFlavor;)V
      94: athrow

  static {};
    Code:
       0: new           #22                 // class java/awt/datatransfer/DataFlavor
       3: dup
       4: ldc           #6                  // String application/rtf
       6: ldc           #23                 // String Rich Text Format (RTF)
       8: invokespecial #24                 // Method java/awt/datatransfer/DataFlavor."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      11: putstatic     #25                 // Field RTF_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      14: new           #22                 // class java/awt/datatransfer/DataFlavor
      17: dup
      18: ldc           #8                  // String text/html
      20: ldc           #26                 // String Hyper Text Markup Language (HTML)
      22: invokespecial #24                 // Method java/awt/datatransfer/DataFlavor."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      25: putstatic     #27                 // Field HTML_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      28: new           #22                 // class java/awt/datatransfer/DataFlavor
      31: dup
      32: ldc           #9                  // String text/plain
      34: ldc           #28                 // String Plain Text
      36: invokespecial #24                 // Method java/awt/datatransfer/DataFlavor."<init>":(Ljava/lang/String;Ljava/lang/String;)V
      39: putstatic     #29                 // Field PLAIN_TEXT_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      42: iconst_3
      43: anewarray     #22                 // class java/awt/datatransfer/DataFlavor
      46: dup
      47: iconst_0
      48: getstatic     #25                 // Field RTF_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      51: aastore
      52: dup
      53: iconst_1
      54: getstatic     #27                 // Field HTML_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      57: aastore
      58: dup
      59: iconst_2
      60: getstatic     #29                 // Field PLAIN_TEXT_DATA_FLAVOR:Ljava/awt/datatransfer/DataFlavor;
      63: aastore
      64: putstatic     #3                  // Field DATA_FLAVORS:[Ljava/awt/datatransfer/DataFlavor;
      67: return
}
