Compiled from "OWLObjectTreeNode.java"
public class org.protege.editor.owl.ui.tree.OWLObjectTreeNode<N extends org.semanticweb.owlapi.model.OWLObject> extends javax.swing.tree.DefaultMutableTreeNode {
  private final org.protege.editor.owl.ui.tree.OWLObjectTree tree;

  private boolean isLoaded;

  private final java.util.Set<N> equivalentObjects;

  private java.lang.Object relationship;

  public org.protege.editor.owl.ui.tree.OWLObjectTreeNode(java.lang.Object, org.protege.editor.owl.ui.tree.OWLObjectTree);
    Code:
       0: aload_0
       1: aload_1
       2: invokespecial #1                  // Method javax/swing/tree/DefaultMutableTreeNode."<init>":(Ljava/lang/Object;)V
       5: aload_0
       6: new           #2                  // class java/util/HashSet
       9: dup
      10: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      13: putfield      #4                  // Field equivalentObjects:Ljava/util/Set;
      16: aload_0
      17: aload_2
      18: putfield      #5                  // Field tree:Lorg/protege/editor/owl/ui/tree/OWLObjectTree;
      21: aload_0
      22: iconst_0
      23: putfield      #6                  // Field isLoaded:Z
      26: return

  public void addEquivalentObject(N);
    Code:
       0: aload_0
       1: getfield      #4                  // Field equivalentObjects:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #7,  2            // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public java.util.Set<N> getEquivalentObjects();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getUserObject:()Ljava/lang/Object;
       4: ifnonnull     11
       7: invokestatic  #9                  // Method java/util/Collections.emptySet:()Ljava/util/Set;
      10: areturn
      11: aload_0
      12: getfield      #5                  // Field tree:Lorg/protege/editor/owl/ui/tree/OWLObjectTree;
      15: invokevirtual #10                 // Method org/protege/editor/owl/ui/tree/OWLObjectTree.getProvider:()Lorg/protege/editor/owl/model/hierarchy/OWLObjectHierarchyProvider;
      18: aload_0
      19: invokevirtual #8                  // Method getUserObject:()Ljava/lang/Object;
      22: checkcast     #11                 // class org/semanticweb/owlapi/model/OWLObject
      25: invokeinterface #12,  2           // InterfaceMethod org/protege/editor/owl/model/hierarchy/OWLObjectHierarchyProvider.getEquivalents:(Lorg/semanticweb/owlapi/model/OWLObject;)Ljava/util/Set;
      30: astore_1
      31: aload_1
      32: aload_0
      33: invokevirtual #8                  // Method getUserObject:()Ljava/lang/Object;
      36: invokeinterface #13,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      41: pop
      42: aload_1
      43: aload_0
      44: getfield      #4                  // Field equivalentObjects:Ljava/util/Set;
      47: invokestatic  #14                 // Method com/google/common/collect/Sets.union:(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/Sets$SetView;
      50: areturn

  public org.protege.editor.owl.ui.tree.OWLObjectTreeNode(org.protege.editor.owl.ui.tree.OWLObjectTree);
    Code:
       0: aload_0
       1: invokespecial #15                 // Method javax/swing/tree/DefaultMutableTreeNode."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashSet
       8: dup
       9: invokespecial #3                  // Method java/util/HashSet."<init>":()V
      12: putfield      #4                  // Field equivalentObjects:Ljava/util/Set;
      15: aload_0
      16: aload_1
      17: putfield      #5                  // Field tree:Lorg/protege/editor/owl/ui/tree/OWLObjectTree;
      20: return

  public boolean isRoot();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getUserObject:()Ljava/lang/Object;
       4: ifnonnull     11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public N getOWLObject();
    Code:
       0: aload_0
       1: invokevirtual #8                  // Method getUserObject:()Ljava/lang/Object;
       4: checkcast     #11                 // class org/semanticweb/owlapi/model/OWLObject
       7: areturn

  public void setRelationship(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: putfield      #16                 // Field relationship:Ljava/lang/Object;
       5: return

  public java.util.Optional<java.lang.Object> getRelationship();
    Code:
       0: aload_0
       1: getfield      #16                 // Field relationship:Ljava/lang/Object;
       4: invokestatic  #17                 // Method java/util/Optional.ofNullable:(Ljava/lang/Object;)Ljava/util/Optional;
       7: areturn

  protected boolean isLoaded();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isLoaded:Z
       4: ireturn

  protected void setLoaded(boolean);
    Code:
       0: aload_0
       1: iload_1
       2: putfield      #6                  // Field isLoaded:Z
       5: return

  protected synchronized void loadChildrenIfNecessary();
    Code:
       0: aload_0
       1: getfield      #6                  // Field isLoaded:Z
       4: ifeq          8
       7: return
       8: aload_0
       9: iconst_1
      10: putfield      #6                  // Field isLoaded:Z
      13: aconst_null
      14: astore_1
      15: aload_0
      16: invokevirtual #18                 // Method getParent:()Ljavax/swing/tree/TreeNode;
      19: checkcast     #19                 // class org/protege/editor/owl/ui/tree/OWLObjectTreeNode
      22: astore_2
      23: aload_0
      24: invokevirtual #18                 // Method getParent:()Ljavax/swing/tree/TreeNode;
      27: ifnull        35
      30: aload_2
      31: invokevirtual #20                 // Method getOWLObject:()Lorg/semanticweb/owlapi/model/OWLObject;
      34: astore_1
      35: aload_0
      36: getfield      #5                  // Field tree:Lorg/protege/editor/owl/ui/tree/OWLObjectTree;
      39: aload_0
      40: invokevirtual #21                 // Method org/protege/editor/owl/ui/tree/OWLObjectTree.getChildNodes:(Lorg/protege/editor/owl/ui/tree/OWLObjectTreeNode;)Ljava/util/List;
      43: astore_3
      44: aload_3
      45: invokeinterface #22,  1           // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
      50: astore        4
      52: aload         4
      54: invokeinterface #23,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      59: ifeq          83
      62: aload         4
      64: invokeinterface #24,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      69: checkcast     #19                 // class org/protege/editor/owl/ui/tree/OWLObjectTreeNode
      72: astore        5
      74: aload_0
      75: aload         5
      77: invokevirtual #25                 // Method add:(Ljavax/swing/tree/MutableTreeNode;)V
      80: goto          52
      83: return

  public javax.swing.tree.TreeNode getChildAt(int);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method loadChildrenIfNecessary:()V
       4: aload_0
       5: iload_1
       6: invokespecial #27                 // Method javax/swing/tree/DefaultMutableTreeNode.getChildAt:(I)Ljavax/swing/tree/TreeNode;
       9: areturn

  public int getChildCount();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method loadChildrenIfNecessary:()V
       4: aload_0
       5: invokespecial #28                 // Method javax/swing/tree/DefaultMutableTreeNode.getChildCount:()I
       8: ireturn

  public javax.swing.tree.TreeNode getParent();
    Code:
       0: aload_0
       1: invokespecial #29                 // Method javax/swing/tree/DefaultMutableTreeNode.getParent:()Ljavax/swing/tree/TreeNode;
       4: areturn

  public int getIndex(javax.swing.tree.TreeNode);
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method loadChildrenIfNecessary:()V
       4: aload_0
       5: aload_1
       6: invokespecial #30                 // Method javax/swing/tree/DefaultMutableTreeNode.getIndex:(Ljavax/swing/tree/TreeNode;)I
       9: ireturn

  public boolean getAllowsChildren();
    Code:
       0: iconst_1
       1: ireturn

  public boolean isLeaf();
    Code:
       0: aload_0
       1: invokevirtual #31                 // Method getChildCount:()I
       4: ifne          11
       7: iconst_1
       8: goto          12
      11: iconst_0
      12: ireturn

  public java.util.Enumeration children();
    Code:
       0: aload_0
       1: invokevirtual #26                 // Method loadChildrenIfNecessary:()V
       4: aload_0
       5: invokespecial #32                 // Method javax/swing/tree/DefaultMutableTreeNode.children:()Ljava/util/Enumeration;
       8: areturn
}
