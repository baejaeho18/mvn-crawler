Compiled from "IOUtils.java"
public class org.protege.editor.owl.model.io.IOUtils {
  private static org.slf4j.Logger logger;

  private static final java.lang.String ZIP_FILE_EXTENSION;

  private static final java.lang.String CONTENT_DISPOSITION_HEADER;

  private static final java.util.regex.Pattern CONTENT_DISPOSITION_FILE_NAME_PATTERN;

  private static final int CONTENT_DISPOSITION_FILE_NAME_PATTERN_GROUP;

  public org.protege.editor.owl.model.io.IOUtils();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: return

  public static java.io.InputStream getInputStream(java.net.URI, boolean, int) throws java.io.IOException;
    Code:
       0: aload_0
       1: iload_1
       2: iload_2
       3: invokestatic  #2                  // Method getUrlConnection:(Ljava/net/URI;ZI)Ljava/net/URLConnection;
       6: astore_3
       7: aload_3
       8: invokevirtual #3                  // Method java/net/URLConnection.getContentEncoding:()Ljava/lang/String;
      11: astore        4
      13: aload_3
      14: aload         4
      16: invokestatic  #4                  // Method getInputStreamFromContentEncoding:(Ljava/net/URLConnection;Ljava/lang/String;)Ljava/io/InputStream;
      19: astore        5
      21: aload_0
      22: aload_3
      23: invokestatic  #5                  // Method isZipName:(Ljava/net/URI;Ljava/net/URLConnection;)Z
      26: ifeq          57
      29: new           #6                  // class java/util/zip/ZipInputStream
      32: dup
      33: aload         5
      35: invokespecial #7                  // Method java/util/zip/ZipInputStream."<init>":(Ljava/io/InputStream;)V
      38: astore        6
      40: aload         6
      42: invokevirtual #8                  // Method java/util/zip/ZipInputStream.getNextEntry:()Ljava/util/zip/ZipEntry;
      45: pop
      46: new           #9                  // class java/io/BufferedInputStream
      49: dup
      50: aload         6
      52: invokespecial #10                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      55: astore        5
      57: aload         5
      59: areturn

  public static java.net.URLConnection getUrlConnection(java.net.URI, boolean, int) throws java.io.IOException;
    Code:
       0: invokestatic  #11                 // Method getRequestTypes:()Ljava/lang/String;
       3: astore_3
       4: aload_0
       5: invokevirtual #12                 // Method java/net/URI.toURL:()Ljava/net/URL;
       8: invokevirtual #13                 // Method java/net/URL.openConnection:()Ljava/net/URLConnection;
      11: astore        4
      13: aload         4
      15: ldc           #14                 // String Accept
      17: aload_3
      18: invokevirtual #15                 // Method java/net/URLConnection.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      21: iload_1
      22: ifeq          34
      25: aload         4
      27: ldc           #16                 // String Accept-Encoding
      29: ldc           #17                 // String gzip, deflate
      31: invokevirtual #18                 // Method java/net/URLConnection.setRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V
      34: aload         4
      36: iload_2
      37: invokevirtual #19                 // Method java/net/URLConnection.setConnectTimeout:(I)V
      40: aload         4
      42: areturn

  private static java.lang.String getRequestTypes();
    Code:
       0: ldc           #20                 // String application/rdf+xml, application/xml; q=0.5, text/xml; q=0.3, */*; q=0.2
       2: areturn

  private static java.io.InputStream getInputStreamFromContentEncoding(java.net.URLConnection, java.lang.String) throws java.io.IOException;
    Code:
       0: ldc           #21                 // String gzip
       2: aload_1
       3: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       6: ifeq          41
       9: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
      12: ldc           #24                 // String URL connection input stream is compressed using gzip
      14: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      19: new           #9                  // class java/io/BufferedInputStream
      22: dup
      23: new           #26                 // class java/util/zip/GZIPInputStream
      26: dup
      27: aload_0
      28: invokevirtual #27                 // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      31: invokespecial #28                 // Method java/util/zip/GZIPInputStream."<init>":(Ljava/io/InputStream;)V
      34: invokespecial #10                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      37: astore_2
      38: goto          102
      41: ldc           #29                 // String deflate
      43: aload_1
      44: invokevirtual #22                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
      47: ifeq          90
      50: getstatic     #23                 // Field logger:Lorg/slf4j/Logger;
      53: ldc           #30                 // String URL connection input stream is compressed using deflate
      55: invokeinterface #25,  2           // InterfaceMethod org/slf4j/Logger.debug:(Ljava/lang/String;)V
      60: new           #9                  // class java/io/BufferedInputStream
      63: dup
      64: new           #31                 // class java/util/zip/InflaterInputStream
      67: dup
      68: aload_0
      69: invokevirtual #27                 // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      72: new           #32                 // class java/util/zip/Inflater
      75: dup
      76: iconst_1
      77: invokespecial #33                 // Method java/util/zip/Inflater."<init>":(Z)V
      80: invokespecial #34                 // Method java/util/zip/InflaterInputStream."<init>":(Ljava/io/InputStream;Ljava/util/zip/Inflater;)V
      83: invokespecial #10                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
      86: astore_2
      87: goto          102
      90: new           #9                  // class java/io/BufferedInputStream
      93: dup
      94: aload_0
      95: invokevirtual #27                 // Method java/net/URLConnection.getInputStream:()Ljava/io/InputStream;
      98: invokespecial #10                 // Method java/io/BufferedInputStream."<init>":(Ljava/io/InputStream;)V
     101: astore_2
     102: aload_2
     103: areturn

  private static boolean isZipName(java.net.URI, java.net.URLConnection);
    Code:
       0: aload_0
       1: invokevirtual #35                 // Method java/net/URI.toString:()Ljava/lang/String;
       4: invokestatic  #36                 // Method isZipFileName:(Ljava/lang/String;)Z
       7: ifeq          12
      10: iconst_1
      11: ireturn
      12: aload_1
      13: invokestatic  #37                 // Method getFileNameFromContentDisposition:(Ljava/net/URLConnection;)Ljava/lang/String;
      16: astore_2
      17: aload_2
      18: ifnull        32
      21: aload_2
      22: invokestatic  #36                 // Method isZipFileName:(Ljava/lang/String;)Z
      25: ifeq          32
      28: iconst_1
      29: goto          33
      32: iconst_0
      33: ireturn

  private static java.lang.String getFileNameFromContentDisposition(java.net.URLConnection);
    Code:
       0: aload_0
       1: ldc           #39                 // String Content-Disposition
       3: invokevirtual #40                 // Method java/net/URLConnection.getHeaderField:(Ljava/lang/String;)Ljava/lang/String;
       6: astore_1
       7: aload_1
       8: ifnull        32
      11: getstatic     #41                 // Field CONTENT_DISPOSITION_FILE_NAME_PATTERN:Ljava/util/regex/Pattern;
      14: aload_1
      15: invokevirtual #42                 // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
      18: astore_2
      19: aload_2
      20: invokevirtual #43                 // Method java/util/regex/Matcher.matches:()Z
      23: ifeq          32
      26: aload_2
      27: iconst_1
      28: invokevirtual #44                 // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
      31: areturn
      32: aconst_null
      33: areturn

  private static boolean isZipFileName(java.lang.String);
    Code:
       0: aload_0
       1: invokevirtual #45                 // Method java/lang/String.toLowerCase:()Ljava/lang/String;
       4: ldc           #46                 // String .zip
       6: invokevirtual #47                 // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
       9: ireturn

  static {};
    Code:
       0: ldc           #38                 // class org/protege/editor/owl/model/io/IOUtils
       2: invokestatic  #48                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #23                 // Field logger:Lorg/slf4j/Logger;
       8: ldc           #49                 // String .*filename=\"([^\\s;]*)\".*
      10: invokestatic  #50                 // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
      13: putstatic     #41                 // Field CONTENT_DISPOSITION_FILE_NAME_PATTERN:Ljava/util/regex/Pattern;
      16: return
}
