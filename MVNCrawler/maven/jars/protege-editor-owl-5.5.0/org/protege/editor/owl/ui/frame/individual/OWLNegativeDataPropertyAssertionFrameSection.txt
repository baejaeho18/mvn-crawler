Compiled from "OWLNegativeDataPropertyAssertionFrameSection.java"
public class org.protege.editor.owl.ui.frame.individual.OWLNegativeDataPropertyAssertionFrameSection extends org.protege.editor.owl.ui.frame.AbstractOWLFrameSection<org.semanticweb.owlapi.model.OWLIndividual, org.semanticweb.owlapi.model.OWLNegativeDataPropertyAssertionAxiom, org.protege.editor.owl.ui.frame.OWLDataPropertyConstantPair> {
  public static final java.lang.String LABEL;

  private org.protege.editor.owl.ui.editor.OWLDataPropertyRelationshipEditor editor;

  public org.protege.editor.owl.ui.frame.individual.OWLNegativeDataPropertyAssertionFrameSection(org.protege.editor.owl.OWLEditorKit, org.protege.editor.owl.ui.frame.OWLFrame<? extends org.semanticweb.owlapi.model.OWLIndividual>);
    Code:
       0: aload_0
       1: aload_1
       2: ldc           #2                  // String Negative data property assertions
       4: ldc           #3                  // String Negative data property assertion
       6: aload_2
       7: invokespecial #4                  // Method org/protege/editor/owl/ui/frame/AbstractOWLFrameSection."<init>":(Lorg/protege/editor/owl/OWLEditorKit;Ljava/lang/String;Ljava/lang/String;Lorg/protege/editor/owl/ui/frame/OWLFrame;)V
      10: return

  protected void clear();
    Code:
       0: return

  protected void refill(org.semanticweb.owlapi.model.OWLOntology);
    Code:
       0: aload_1
       1: aload_0
       2: invokevirtual #5                  // Method getRootObject:()Ljava/lang/Object;
       5: checkcast     #6                  // class org/semanticweb/owlapi/model/OWLIndividual
       8: invokeinterface #7,  2            // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.getNegativeDataPropertyAssertionAxioms:(Lorg/semanticweb/owlapi/model/OWLIndividual;)Ljava/util/Set;
      13: invokeinterface #8,  1            // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      18: astore_2
      19: aload_2
      20: invokeinterface #9,  1            // InterfaceMethod java/util/Iterator.hasNext:()Z
      25: ifeq          66
      28: aload_2
      29: invokeinterface #10,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      34: checkcast     #11                 // class org/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom
      37: astore_3
      38: aload_0
      39: new           #12                 // class org/protege/editor/owl/ui/frame/individual/OWLNegativeDataPropertyAssertionFrameSectionRow
      42: dup
      43: aload_0
      44: invokevirtual #13                 // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
      47: aload_0
      48: aload_1
      49: aload_0
      50: invokevirtual #5                  // Method getRootObject:()Ljava/lang/Object;
      53: checkcast     #6                  // class org/semanticweb/owlapi/model/OWLIndividual
      56: aload_3
      57: invokespecial #14                 // Method org/protege/editor/owl/ui/frame/individual/OWLNegativeDataPropertyAssertionFrameSectionRow."<init>":(Lorg/protege/editor/owl/OWLEditorKit;Lorg/protege/editor/owl/ui/frame/OWLFrameSection;Lorg/semanticweb/owlapi/model/OWLOntology;Lorg/semanticweb/owlapi/model/OWLIndividual;Lorg/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom;)V
      60: invokevirtual #15                 // Method addRow:(Lorg/protege/editor/owl/ui/frame/OWLFrameSectionRow;)V
      63: goto          19
      66: return

  protected org.semanticweb.owlapi.model.OWLNegativeDataPropertyAssertionAxiom createAxiom(org.protege.editor.owl.ui.frame.OWLDataPropertyConstantPair);
    Code:
       0: aload_0
       1: invokevirtual #16                 // Method getOWLDataFactory:()Lorg/semanticweb/owlapi/model/OWLDataFactory;
       4: aload_1
       5: invokevirtual #17                 // Method org/protege/editor/owl/ui/frame/OWLDataPropertyConstantPair.getProperty:()Lorg/semanticweb/owlapi/model/OWLDataProperty;
       8: aload_0
       9: invokevirtual #5                  // Method getRootObject:()Ljava/lang/Object;
      12: checkcast     #6                  // class org/semanticweb/owlapi/model/OWLIndividual
      15: aload_1
      16: invokevirtual #18                 // Method org/protege/editor/owl/ui/frame/OWLDataPropertyConstantPair.getConstant:()Lorg/semanticweb/owlapi/model/OWLLiteral;
      19: invokeinterface #19,  4           // InterfaceMethod org/semanticweb/owlapi/model/OWLDataFactory.getOWLNegativeDataPropertyAssertionAxiom:(Lorg/semanticweb/owlapi/model/OWLDataPropertyExpression;Lorg/semanticweb/owlapi/model/OWLIndividual;Lorg/semanticweb/owlapi/model/OWLLiteral;)Lorg/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom;
      24: areturn

  public org.protege.editor.owl.ui.editor.OWLObjectEditor<org.protege.editor.owl.ui.frame.OWLDataPropertyConstantPair> getObjectEditor();
    Code:
       0: aload_0
       1: getfield      #20                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLDataPropertyRelationshipEditor;
       4: ifnonnull     22
       7: aload_0
       8: new           #21                 // class org/protege/editor/owl/ui/editor/OWLDataPropertyRelationshipEditor
      11: dup
      12: aload_0
      13: invokevirtual #13                 // Method getOWLEditorKit:()Lorg/protege/editor/owl/OWLEditorKit;
      16: invokespecial #22                 // Method org/protege/editor/owl/ui/editor/OWLDataPropertyRelationshipEditor."<init>":(Lorg/protege/editor/owl/OWLEditorKit;)V
      19: putfield      #20                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLDataPropertyRelationshipEditor;
      22: aload_0
      23: getfield      #20                 // Field editor:Lorg/protege/editor/owl/ui/editor/OWLDataPropertyRelationshipEditor;
      26: areturn

  public java.util.Comparator<org.protege.editor.owl.ui.frame.OWLFrameSectionRow<org.semanticweb.owlapi.model.OWLIndividual, org.semanticweb.owlapi.model.OWLNegativeDataPropertyAssertionAxiom, org.protege.editor.owl.ui.frame.OWLDataPropertyConstantPair>> getRowComparator();
    Code:
       0: aconst_null
       1: areturn

  protected boolean isResettingChange(org.semanticweb.owlapi.model.OWLOntologyChange);
    Code:
       0: aload_1
       1: invokevirtual #23                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.isAxiomChange:()Z
       4: ifne          9
       7: iconst_0
       8: ireturn
       9: aload_1
      10: invokevirtual #24                 // Method org/semanticweb/owlapi/model/OWLOntologyChange.getAxiom:()Lorg/semanticweb/owlapi/model/OWLAxiom;
      13: astore_2
      14: aload_2
      15: instanceof    #11                 // class org/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom
      18: ifeq          38
      21: aload_2
      22: checkcast     #11                 // class org/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom
      25: invokeinterface #25,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom.getSubject:()Lorg/semanticweb/owlapi/model/OWLIndividual;
      30: aload_0
      31: invokevirtual #5                  // Method getRootObject:()Ljava/lang/Object;
      34: invokevirtual #26                 // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
      37: ireturn
      38: iconst_0
      39: ireturn

  protected org.semanticweb.owlapi.model.OWLAxiom createAxiom(java.lang.Object);
    Code:
       0: aload_0
       1: aload_1
       2: checkcast     #27                 // class org/protege/editor/owl/ui/frame/OWLDataPropertyConstantPair
       5: invokevirtual #28                 // Method createAxiom:(Lorg/protege/editor/owl/ui/frame/OWLDataPropertyConstantPair;)Lorg/semanticweb/owlapi/model/OWLNegativeDataPropertyAssertionAxiom;
       8: areturn
}
