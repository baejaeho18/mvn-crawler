Compiled from "AutoMappedRepositoryIRIMapper.java"
public class org.protege.editor.owl.model.io.AutoMappedRepositoryIRIMapper implements org.semanticweb.owlapi.model.OWLOntologyIRIMapper {
  private static final org.slf4j.Logger logger;

  private static final java.lang.String FILE_SCHEME;

  private final org.protege.editor.owl.model.library.OntologyCatalogManager ontologyCatalogManager;

  private final java.util.Optional<java.net.URI> rootOntologyDocument;

  public org.protege.editor.owl.model.io.AutoMappedRepositoryIRIMapper(org.protege.editor.owl.model.library.OntologyCatalogManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class org/protege/editor/owl/model/library/OntologyCatalogManager
      12: putfield      #4                  // Field ontologyCatalogManager:Lorg/protege/editor/owl/model/library/OntologyCatalogManager;
      15: aload_0
      16: invokestatic  #5                  // Method java/util/Optional.empty:()Ljava/util/Optional;
      19: putfield      #6                  // Field rootOntologyDocument:Ljava/util/Optional;
      22: return

  public org.protege.editor.owl.model.io.AutoMappedRepositoryIRIMapper(org.protege.editor.owl.model.library.OntologyCatalogManager, java.net.URI);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: aload_1
       6: invokestatic  #2                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: checkcast     #3                  // class org/protege/editor/owl/model/library/OntologyCatalogManager
      12: putfield      #4                  // Field ontologyCatalogManager:Lorg/protege/editor/owl/model/library/OntologyCatalogManager;
      15: aload_0
      16: aload_2
      17: invokestatic  #7                  // Method java/util/Optional.of:(Ljava/lang/Object;)Ljava/util/Optional;
      20: putfield      #6                  // Field rootOntologyDocument:Ljava/util/Optional;
      23: return

  public org.semanticweb.owlapi.model.IRI getDocumentIRI(org.semanticweb.owlapi.model.IRI);
    Code:
       0: aload_1
       1: invokevirtual #8                  // Method org/semanticweb/owlapi/model/IRI.toURI:()Ljava/net/URI;
       4: astore_2
       5: aload_0
       6: getfield      #6                  // Field rootOntologyDocument:Ljava/util/Optional;
       9: aload_0
      10: invokedynamic #9,  0              // InvokeDynamic #0:accept:(Lorg/protege/editor/owl/model/io/AutoMappedRepositoryIRIMapper;)Ljava/util/function/Consumer;
      15: invokevirtual #10                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
      18: aload_0
      19: getfield      #4                  // Field ontologyCatalogManager:Lorg/protege/editor/owl/model/library/OntologyCatalogManager;
      22: aload_2
      23: invokevirtual #11                 // Method org/protege/editor/owl/model/library/OntologyCatalogManager.getRedirectForUri:(Ljava/net/URI;)Ljava/util/Optional;
      26: astore_3
      27: aload_3
      28: invokevirtual #12                 // Method java/util/Optional.isPresent:()Z
      31: ifeq          49
      34: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
      37: ldc           #14                 // String Imported ontology document {} was resolved to {} by the ontology catalog.
      39: aload_1
      40: aload_3
      41: invokeinterface #15,  4           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V
      46: goto          60
      49: getstatic     #13                 // Field logger:Lorg/slf4j/Logger;
      52: ldc           #16                 // String Imported ontology document {} was not resolved to any documents defined in the ontology catalog.
      54: aload_1
      55: invokeinterface #17,  3           // InterfaceMethod org/slf4j/Logger.info:(Ljava/lang/String;Ljava/lang/Object;)V
      60: aload_3
      61: invokedynamic #18,  0             // InvokeDynamic #1:apply:()Ljava/util/function/Function;
      66: invokevirtual #19                 // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
      69: aconst_null
      70: invokevirtual #20                 // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
      73: checkcast     #21                 // class org/semanticweb/owlapi/model/IRI
      76: areturn

  private void lambda$getDocumentIRI$0(java.net.URI);
    Code:
       0: ldc           #23                 // String file
       2: aload_1
       3: invokevirtual #24                 // Method java/net/URI.getScheme:()Ljava/lang/String;
       6: invokevirtual #25                 // Method java/lang/String.equals:(Ljava/lang/Object;)Z
       9: ifeq          33
      12: new           #26                 // class java/io/File
      15: dup
      16: aload_1
      17: invokespecial #27                 // Method java/io/File."<init>":(Ljava/net/URI;)V
      20: invokevirtual #28                 // Method java/io/File.getParentFile:()Ljava/io/File;
      23: astore_2
      24: aload_0
      25: getfield      #4                  // Field ontologyCatalogManager:Lorg/protege/editor/owl/model/library/OntologyCatalogManager;
      28: aload_2
      29: invokevirtual #29                 // Method org/protege/editor/owl/model/library/OntologyCatalogManager.addFolder:(Ljava/io/File;)Lorg/protege/xmlcatalog/XMLCatalog;
      32: pop
      33: return

  static {};
    Code:
       0: ldc           #22                 // class org/protege/editor/owl/model/io/AutoMappedRepositoryIRIMapper
       2: invokestatic  #30                 // Method org/slf4j/LoggerFactory.getLogger:(Ljava/lang/Class;)Lorg/slf4j/Logger;
       5: putstatic     #13                 // Field logger:Lorg/slf4j/Logger;
       8: return
}
