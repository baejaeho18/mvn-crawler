Compiled from "PrefixedNameRenderer.java"
public final class org.protege.editor.owl.model.prefix.PrefixedNameRenderer$Builder {
  private java.util.Map<java.lang.String, java.lang.String> prefix2PrefixNameMap;

  public org.protege.editor.owl.model.prefix.PrefixedNameRenderer$Builder();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/HashMap
       8: dup
       9: invokespecial #3                  // Method java/util/HashMap."<init>":()V
      12: putfield      #4                  // Field prefix2PrefixNameMap:Ljava/util/Map;
      15: return

  public org.protege.editor.owl.model.prefix.PrefixedNameRenderer$Builder withPrefix(java.lang.String, java.lang.String);
    Code:
       0: aload_1
       1: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       4: pop
       5: aload_2
       6: invokestatic  #5                  // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
       9: pop
      10: aload_1
      11: ldc           #6                  // String :
      13: invokevirtual #7                  // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
      16: ifne          29
      19: new           #8                  // class java/lang/IllegalArgumentException
      22: dup
      23: ldc           #9                  // String Prefix name must end with a colon character
      25: invokespecial #10                 // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
      28: athrow
      29: aload_0
      30: getfield      #4                  // Field prefix2PrefixNameMap:Ljava/util/Map;
      33: aload_2
      34: aload_1
      35: invokeinterface #11,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      40: pop
      41: aload_0
      42: areturn

  public org.protege.editor.owl.model.prefix.PrefixedNameRenderer$Builder withOwlPrefixes();
    Code:
       0: aload_0
       1: getstatic     #12                 // Field org/semanticweb/owlapi/vocab/Namespaces.OWL:Lorg/semanticweb/owlapi/vocab/Namespaces;
       4: invokespecial #13                 // Method with:(Lorg/semanticweb/owlapi/vocab/Namespaces;)V
       7: aload_0
       8: getstatic     #14                 // Field org/semanticweb/owlapi/vocab/Namespaces.RDFS:Lorg/semanticweb/owlapi/vocab/Namespaces;
      11: invokespecial #13                 // Method with:(Lorg/semanticweb/owlapi/vocab/Namespaces;)V
      14: aload_0
      15: getstatic     #15                 // Field org/semanticweb/owlapi/vocab/Namespaces.RDF:Lorg/semanticweb/owlapi/vocab/Namespaces;
      18: invokespecial #13                 // Method with:(Lorg/semanticweb/owlapi/vocab/Namespaces;)V
      21: aload_0
      22: getstatic     #16                 // Field org/semanticweb/owlapi/vocab/Namespaces.XSD:Lorg/semanticweb/owlapi/vocab/Namespaces;
      25: invokespecial #13                 // Method with:(Lorg/semanticweb/owlapi/vocab/Namespaces;)V
      28: aload_0
      29: areturn

  public org.protege.editor.owl.model.prefix.PrefixedNameRenderer$Builder withWellKnownPrefixes();
    Code:
       0: invokestatic  #17                 // Method org/semanticweb/owlapi/vocab/Namespaces.values:()[Lorg/semanticweb/owlapi/vocab/Namespaces;
       3: invokestatic  #18                 // Method java/util/Arrays.stream:([Ljava/lang/Object;)Ljava/util/stream/Stream;
       6: aload_0
       7: invokedynamic #19,  0             // InvokeDynamic #0:accept:(Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;)Ljava/util/function/Consumer;
      12: invokeinterface #20,  2           // InterfaceMethod java/util/stream/Stream.forEach:(Ljava/util/function/Consumer;)V
      17: aload_0
      18: areturn

  public org.protege.editor.owl.model.prefix.PrefixedNameRenderer build();
    Code:
       0: aload_0
       1: getfield      #4                  // Field prefix2PrefixNameMap:Ljava/util/Map;
       4: invokestatic  #21                 // Method org/protege/editor/owl/model/prefix/PrefixedNameRenderer.get:(Ljava/util/Map;)Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer;
       7: areturn

  private void with(org.semanticweb.owlapi.vocab.Namespaces);
    Code:
       0: aload_0
       1: new           #22                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #24                 // Method org/semanticweb/owlapi/vocab/Namespaces.getPrefixName:()Ljava/lang/String;
      12: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #6                  // String :
      17: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #27                 // Method org/semanticweb/owlapi/vocab/Namespaces.getPrefixIRI:()Ljava/lang/String;
      27: invokevirtual #28                 // Method withPrefix:(Ljava/lang/String;Ljava/lang/String;)Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;
      30: pop
      31: return

  private void lambda$withWellKnownPrefixes$0(org.semanticweb.owlapi.vocab.Namespaces);
    Code:
       0: aload_0
       1: new           #22                 // class java/lang/StringBuilder
       4: dup
       5: invokespecial #23                 // Method java/lang/StringBuilder."<init>":()V
       8: aload_1
       9: invokevirtual #24                 // Method org/semanticweb/owlapi/vocab/Namespaces.getPrefixName:()Ljava/lang/String;
      12: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      15: ldc           #6                  // String :
      17: invokevirtual #25                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      20: invokevirtual #26                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      23: aload_1
      24: invokevirtual #27                 // Method org/semanticweb/owlapi/vocab/Namespaces.getPrefixIRI:()Ljava/lang/String;
      27: invokevirtual #28                 // Method withPrefix:(Ljava/lang/String;Ljava/lang/String;)Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;
      30: pop
      31: return
}
