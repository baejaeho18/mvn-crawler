Compiled from "PrefixMapperTables.java"
public class org.protege.editor.owl.ui.prefix.PrefixMapperTables extends javax.swing.JPanel {
  private static final long serialVersionUID;

  private org.protege.editor.owl.ui.prefix.PrefixMapperTable table;

  private org.semanticweb.owlapi.model.OWLOntology ontology;

  private org.protege.editor.owl.model.OWLModelManager modelManager;

  private java.util.Set<org.protege.editor.owl.ui.prefix.PrefixMapperTables$SelectedOntologyListener> listeners;

  private javax.swing.event.TableModelListener editListener;

  public org.protege.editor.owl.ui.prefix.PrefixMapperTables(org.protege.editor.owl.model.OWLModelManager);
    Code:
       0: aload_0
       1: invokespecial #4                  // Method javax/swing/JPanel."<init>":()V
       4: aload_0
       5: new           #5                  // class java/util/HashSet
       8: dup
       9: invokespecial #6                  // Method java/util/HashSet."<init>":()V
      12: putfield      #7                  // Field listeners:Ljava/util/Set;
      15: aload_0
      16: new           #8                  // class org/protege/editor/owl/ui/prefix/PrefixMapperTables$1
      19: dup
      20: aload_0
      21: invokespecial #9                  // Method org/protege/editor/owl/ui/prefix/PrefixMapperTables$1."<init>":(Lorg/protege/editor/owl/ui/prefix/PrefixMapperTables;)V
      24: putfield      #10                 // Field editListener:Ljavax/swing/event/TableModelListener;
      27: aload_0
      28: aload_1
      29: putfield      #1                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      32: aload_0
      33: new           #11                 // class java/awt/BorderLayout
      36: dup
      37: invokespecial #12                 // Method java/awt/BorderLayout."<init>":()V
      40: invokevirtual #13                 // Method setLayout:(Ljava/awt/LayoutManager;)V
      43: aload_0
      44: aload_1
      45: invokeinterface #14,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getActiveOntology:()Lorg/semanticweb/owlapi/model/OWLOntology;
      50: invokevirtual #15                 // Method setOntology:(Lorg/semanticweb/owlapi/model/OWLOntology;)V
      53: return

  public void refill();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
       4: invokevirtual #16                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTable.getModel:()Lorg/protege/editor/owl/ui/prefix/PrefixMapperTableModel;
       7: invokevirtual #17                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTableModel.refill:()V
      10: return

  public void setOntology(org.semanticweb.owlapi.model.OWLOntology);
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
       4: ifnull        21
       7: aload_0
       8: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
      11: invokevirtual #16                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTable.getModel:()Lorg/protege/editor/owl/ui/prefix/PrefixMapperTableModel;
      14: aload_0
      15: getfield      #10                 // Field editListener:Ljavax/swing/event/TableModelListener;
      18: invokevirtual #18                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTableModel.removeTableModelListener:(Ljavax/swing/event/TableModelListener;)V
      21: aload_0
      22: aload_1
      23: putfield      #2                  // Field ontology:Lorg/semanticweb/owlapi/model/OWLOntology;
      26: aload_1
      27: invokestatic  #19                 // Method org/protege/editor/owl/ui/prefix/PrefixUtilities.getPrefixOWLOntologyFormat:(Lorg/semanticweb/owlapi/model/OWLOntology;)Lorg/semanticweb/owlapi/formats/PrefixDocumentFormat;
      30: astore_2
      31: aload_0
      32: new           #20                 // class org/protege/editor/owl/ui/prefix/PrefixMapperTable
      35: dup
      36: aload_2
      37: invokespecial #21                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTable."<init>":(Lorg/semanticweb/owlapi/formats/PrefixDocumentFormat;)V
      40: putfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
      43: aload_0
      44: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
      47: invokevirtual #16                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTable.getModel:()Lorg/protege/editor/owl/ui/prefix/PrefixMapperTableModel;
      50: aload_0
      51: getfield      #10                 // Field editListener:Ljavax/swing/event/TableModelListener;
      54: invokevirtual #22                 // Method org/protege/editor/owl/ui/prefix/PrefixMapperTableModel.addTableModelListener:(Ljavax/swing/event/TableModelListener;)V
      57: aload_0
      58: invokevirtual #23                 // Method removeAll:()V
      61: aload_0
      62: new           #24                 // class javax/swing/JScrollPane
      65: dup
      66: aload_0
      67: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
      70: invokespecial #25                 // Method javax/swing/JScrollPane."<init>":(Ljava/awt/Component;)V
      73: invokevirtual #26                 // Method add:(Ljava/awt/Component;)Ljava/awt/Component;
      76: pop
      77: aload_0
      78: getfield      #7                  // Field listeners:Ljava/util/Set;
      81: invokeinterface #27,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      86: astore_3
      87: aload_3
      88: invokeinterface #28,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      93: ifeq          117
      96: aload_3
      97: invokeinterface #29,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
     102: checkcast     #30                 // class org/protege/editor/owl/ui/prefix/PrefixMapperTables$SelectedOntologyListener
     105: astore        4
     107: aload         4
     109: invokeinterface #31,  1           // InterfaceMethod org/protege/editor/owl/ui/prefix/PrefixMapperTables$SelectedOntologyListener.selectedOntologyChanged:()V
     114: goto          87
     117: return

  public void addListener(org.protege.editor.owl.ui.prefix.PrefixMapperTables$SelectedOntologyListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #32,  2           // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public void removeListener(org.protege.editor.owl.ui.prefix.PrefixMapperTables$SelectedOntologyListener);
    Code:
       0: aload_0
       1: getfield      #7                  // Field listeners:Ljava/util/Set;
       4: aload_1
       5: invokeinterface #33,  2           // InterfaceMethod java/util/Set.remove:(Ljava/lang/Object;)Z
      10: pop
      11: return

  public org.semanticweb.owlapi.model.OWLOntology getOntology();
    Code:
       0: aload_0
       1: getfield      #2                  // Field ontology:Lorg/semanticweb/owlapi/model/OWLOntology;
       4: areturn

  public org.protege.editor.owl.ui.prefix.PrefixMapperTable getPrefixMapperTable();
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
       4: areturn

  static org.protege.editor.owl.ui.prefix.PrefixMapperTable access$000(org.protege.editor.owl.ui.prefix.PrefixMapperTables);
    Code:
       0: aload_0
       1: getfield      #3                  // Field table:Lorg/protege/editor/owl/ui/prefix/PrefixMapperTable;
       4: areturn

  static org.semanticweb.owlapi.model.OWLOntology access$100(org.protege.editor.owl.ui.prefix.PrefixMapperTables);
    Code:
       0: aload_0
       1: getfield      #2                  // Field ontology:Lorg/semanticweb/owlapi/model/OWLOntology;
       4: areturn

  static org.protege.editor.owl.model.OWLModelManager access$200(org.protege.editor.owl.ui.prefix.PrefixMapperTables);
    Code:
       0: aload_0
       1: getfield      #1                  // Field modelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       4: areturn
}
