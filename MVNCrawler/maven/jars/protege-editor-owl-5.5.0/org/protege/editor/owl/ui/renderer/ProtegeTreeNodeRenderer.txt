Compiled from "ProtegeTreeNodeRenderer.java"
public class org.protege.editor.owl.ui.renderer.ProtegeTreeNodeRenderer implements javax.swing.tree.TreeCellRenderer {
  private static final java.awt.Color UNSAT_ENTITY_COLOR;

  private static final java.awt.Color DEPRECATED_CLASS_COLOR;

  private final org.protege.editor.owl.OWLEditorKit editorKit;

  private final org.protege.editor.owl.ui.renderer.ProtegeTreeNodeRenderer$ActiveOntologyVisitor activeOntologyVisitor;

  private final org.protege.editor.owl.ui.renderer.ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx delegateTreeCellRenderer;

  private final org.protege.editor.owl.ui.renderer.ProtegeTreeNodeRenderer$IconDecorator icon;

  private java.awt.Font plainFont;

  private java.awt.Font boldFont;

  private final org.protege.editor.owl.model.prefix.PrefixedNameRenderer prefixedNameRenderer;

  public org.protege.editor.owl.ui.renderer.ProtegeTreeNodeRenderer(org.protege.editor.owl.OWLEditorKit);
    Code:
       0: aload_0
       1: invokespecial #2                  // Method java/lang/Object."<init>":()V
       4: aload_0
       5: new           #3                  // class org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx
       8: dup
       9: aconst_null
      10: invokespecial #4                  // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx."<init>":(Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$1;)V
      13: putfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
      16: aload_0
      17: new           #6                  // class org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator
      20: dup
      21: aconst_null
      22: invokespecial #7                  // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator."<init>":(Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$1;)V
      25: putfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
      28: aload_0
      29: new           #9                  // class java/awt/Font
      32: dup
      33: ldc           #10                 // String sans-serif
      35: iconst_0
      36: bipush        12
      38: invokespecial #11                 // Method java/awt/Font."<init>":(Ljava/lang/String;II)V
      41: putfield      #12                 // Field plainFont:Ljava/awt/Font;
      44: aload_0
      45: aload_0
      46: getfield      #12                 // Field plainFont:Ljava/awt/Font;
      49: iconst_1
      50: invokevirtual #13                 // Method java/awt/Font.deriveFont:(I)Ljava/awt/Font;
      53: putfield      #14                 // Field boldFont:Ljava/awt/Font;
      56: aload_0
      57: invokestatic  #15                 // Method org/protege/editor/owl/model/prefix/PrefixedNameRenderer.builder:()Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;
      60: invokevirtual #16                 // Method org/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder.withOwlPrefixes:()Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;
      63: invokevirtual #17                 // Method org/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder.withWellKnownPrefixes:()Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder;
      66: invokevirtual #18                 // Method org/protege/editor/owl/model/prefix/PrefixedNameRenderer$Builder.build:()Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer;
      69: putfield      #19                 // Field prefixedNameRenderer:Lorg/protege/editor/owl/model/prefix/PrefixedNameRenderer;
      72: aload_0
      73: aload_1
      74: invokestatic  #20                 // Method com/google/common/base/Preconditions.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;
      77: checkcast     #21                 // class org/protege/editor/owl/OWLEditorKit
      80: putfield      #22                 // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      83: aload_0
      84: new           #23                 // class org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$ActiveOntologyVisitor
      87: dup
      88: aload_1
      89: invokevirtual #24                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      92: invokespecial #25                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$ActiveOntologyVisitor."<init>":(Lorg/protege/editor/owl/model/OWLModelManager;)V
      95: putfield      #26                 // Field activeOntologyVisitor:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$ActiveOntologyVisitor;
      98: return

  private void setupFonts();
    Code:
       0: invokestatic  #27                 // Method org/protege/editor/owl/ui/renderer/OWLRendererPreferences.getInstance:()Lorg/protege/editor/owl/ui/renderer/OWLRendererPreferences;
       3: invokevirtual #28                 // Method org/protege/editor/owl/ui/renderer/OWLRendererPreferences.getFont:()Ljava/awt/Font;
       6: astore_1
       7: aload_0
       8: getfield      #12                 // Field plainFont:Ljava/awt/Font;
      11: aload_1
      12: invokevirtual #29                 // Method java/awt/Font.equals:(Ljava/lang/Object;)Z
      15: ifne          35
      18: aload_0
      19: aload_1
      20: putfield      #12                 // Field plainFont:Ljava/awt/Font;
      23: aload_0
      24: aload_0
      25: getfield      #12                 // Field plainFont:Ljava/awt/Font;
      28: iconst_1
      29: invokevirtual #13                 // Method java/awt/Font.deriveFont:(I)Ljava/awt/Font;
      32: putfield      #14                 // Field boldFont:Ljava/awt/Font;
      35: return

  public java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean);
    Code:
       0: aload_0
       1: invokespecial #30                 // Method setupFonts:()V
       4: iconst_0
       5: istore        8
       7: iconst_1
       8: istore        9
      10: iconst_0
      11: istore        10
      13: ldc           #31                 // String
      15: astore        11
      17: aload_0
      18: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
      21: invokevirtual #32                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.clearIcon:()V
      24: aload_0
      25: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
      28: invokevirtual #33                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.clearRelationship:()V
      31: aload_0
      32: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
      35: iconst_0
      36: invokevirtual #34                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.setRelationshipsDisplayed:(Z)V
      39: aload_2
      40: instanceof    #35                 // class org/protege/editor/owl/ui/tree/OWLObjectTreeNode
      43: ifeq          179
      46: aload_2
      47: checkcast     #35                 // class org/protege/editor/owl/ui/tree/OWLObjectTreeNode
      50: astore        12
      52: aload         12
      54: invokevirtual #36                 // Method org/protege/editor/owl/ui/tree/OWLObjectTreeNode.getOWLObject:()Lorg/semanticweb/owlapi/model/OWLObject;
      57: astore        13
      59: aload         13
      61: ifnull        179
      64: aload_0
      65: aload         12
      67: invokespecial #37                 // Method getNodeStringRendering:(Lorg/protege/editor/owl/ui/tree/OWLObjectTreeNode;)Ljava/lang/String;
      70: astore        11
      72: aload_0
      73: aload         13
      75: invokespecial #38                 // Method isDeprecated:(Lorg/semanticweb/owlapi/model/OWLObject;)Z
      78: istore        8
      80: aload_0
      81: aload         13
      83: invokespecial #39                 // Method isSatisfiable:(Lorg/semanticweb/owlapi/model/OWLObject;)Z
      86: istore        9
      88: aload_0
      89: aload         13
      91: invokespecial #40                 // Method isActive:(Lorg/semanticweb/owlapi/model/OWLObject;)Z
      94: istore        10
      96: aload_0
      97: getfield      #22                 // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
     100: invokevirtual #41                 // Method org/protege/editor/owl/OWLEditorKit.getOWLWorkspace:()Lorg/protege/editor/owl/model/OWLWorkspace;
     103: invokevirtual #42                 // Method org/protege/editor/owl/model/OWLWorkspace.getOWLIconProvider:()Lorg/protege/editor/owl/ui/renderer/OWLIconProvider;
     106: aload         13
     108: invokeinterface #43,  2           // InterfaceMethod org/protege/editor/owl/ui/renderer/OWLIconProvider.getIcon:(Lorg/semanticweb/owlapi/model/OWLObject;)Ljavax/swing/Icon;
     113: astore        14
     115: aload_0
     116: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     119: aload         14
     121: invokevirtual #44                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.setIcon:(Ljavax/swing/Icon;)V
     124: aload         12
     126: invokevirtual #45                 // Method org/protege/editor/owl/ui/tree/OWLObjectTreeNode.getRelationship:()Ljava/util/Optional;
     129: aload_0
     130: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     133: dup
     134: invokestatic  #46                 // Method java/util/Objects.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;
     137: pop
     138: invokedynamic #47,  0             // InvokeDynamic #0:accept:(Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;)Ljava/util/function/Consumer;
     143: invokevirtual #48                 // Method java/util/Optional.ifPresent:(Ljava/util/function/Consumer;)V
     146: aload_1
     147: invokestatic  #49                 // Method shouldDisplayRelationships:(Ljavax/swing/JTree;)Z
     150: istore        15
     152: aload_0
     153: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     156: iload         15
     158: ifeq          175
     161: aload         13
     163: invokeinterface #50,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLObject.isTopEntity:()Z
     168: ifne          175
     171: iconst_1
     172: goto          176
     175: iconst_0
     176: invokevirtual #34                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.setRelationshipsDisplayed:(Z)V
     179: aload_0
     180: getfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
     183: iload         8
     185: invokevirtual #51                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx.setDeprecated:(Z)V
     188: iload         9
     190: ifne          206
     193: aload_0
     194: getfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
     197: getstatic     #52                 // Field UNSAT_ENTITY_COLOR:Ljava/awt/Color;
     200: invokevirtual #53                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx.setTextNonSelectionColor:(Ljava/awt/Color;)V
     203: goto          234
     206: iload         8
     208: ifeq          224
     211: aload_0
     212: getfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
     215: getstatic     #54                 // Field DEPRECATED_CLASS_COLOR:Ljava/awt/Color;
     218: invokevirtual #53                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx.setTextNonSelectionColor:(Ljava/awt/Color;)V
     221: goto          234
     224: aload_0
     225: getfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
     228: getstatic     #55                 // Field java/awt/Color.BLACK:Ljava/awt/Color;
     231: invokevirtual #53                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx.setTextNonSelectionColor:(Ljava/awt/Color;)V
     234: aload_0
     235: getfield      #5                  // Field delegateTreeCellRenderer:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx;
     238: aload_1
     239: aload         11
     241: iload_3
     242: iload         4
     244: iload         5
     246: iload         6
     248: iload         7
     250: invokevirtual #56                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$DefaultTreeCellRendererEx.getTreeCellRendererComponent:(Ljavax/swing/JTree;Ljava/lang/Object;ZZZIZ)Ljava/awt/Component;
     253: checkcast     #57                 // class javax/swing/JLabel
     256: astore        12
     258: iload         10
     260: ifeq          275
     263: aload         12
     265: aload_0
     266: getfield      #14                 // Field boldFont:Ljava/awt/Font;
     269: invokevirtual #58                 // Method javax/swing/JLabel.setFont:(Ljava/awt/Font;)V
     272: goto          284
     275: aload         12
     277: aload_0
     278: getfield      #12                 // Field plainFont:Ljava/awt/Font;
     281: invokevirtual #58                 // Method javax/swing/JLabel.setFont:(Ljava/awt/Font;)V
     284: aload_0
     285: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     288: iload         8
     290: invokevirtual #59                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.setDeprecated:(Z)V
     293: aload_0
     294: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     297: invokevirtual #60                 // Method org/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator.rebuild:()V
     300: aload         12
     302: aload_0
     303: getfield      #8                  // Field icon:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$IconDecorator;
     306: invokevirtual #61                 // Method javax/swing/JLabel.setIcon:(Ljavax/swing/Icon;)V
     309: aload         12
     311: iconst_0
     312: invokevirtual #62                 // Method javax/swing/JLabel.setVerticalTextPosition:(I)V
     315: aload         12
     317: iconst_0
     318: invokevirtual #63                 // Method javax/swing/JLabel.setVerticalAlignment:(I)V
     321: aload         12
     323: areturn

  private java.lang.String getNodeStringRendering(org.protege.editor.owl.ui.tree.OWLObjectTreeNode<?>);
    Code:
       0: aload_1
       1: invokevirtual #36                 // Method org/protege/editor/owl/ui/tree/OWLObjectTreeNode.getOWLObject:()Lorg/semanticweb/owlapi/model/OWLObject;
       4: astore_2
       5: aload_0
       6: getfield      #22                 // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
       9: invokevirtual #24                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      12: aload_2
      13: getstatic     #64                 // Field org/protege/editor/owl/ui/renderer/RenderingEscapeUtils$RenderingEscapeSetting.UNESCAPED_RENDERING:Lorg/protege/editor/owl/ui/renderer/RenderingEscapeUtils$RenderingEscapeSetting;
      16: invokeinterface #65,  3           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getDisabmiguatedRendering:(Lorg/semanticweb/owlapi/model/OWLObject;Lorg/protege/editor/owl/ui/renderer/RenderingEscapeUtils$RenderingEscapeSetting;)Ljava/lang/String;
      21: areturn

  private static boolean shouldDisplayRelationships(javax.swing.JTree);
    Code:
       0: aload_0
       1: instanceof    #66                 // class org/protege/editor/owl/ui/tree/OWLModelManagerTree
       4: ifeq          31
       7: aload_0
       8: checkcast     #66                 // class org/protege/editor/owl/ui/tree/OWLModelManagerTree
      11: invokevirtual #67                 // Method org/protege/editor/owl/ui/tree/OWLModelManagerTree.getProvider:()Lorg/protege/editor/owl/model/hierarchy/OWLObjectHierarchyProvider;
      14: invokeinterface #68,  1           // InterfaceMethod org/protege/editor/owl/model/hierarchy/OWLObjectHierarchyProvider.getDisplayedRelationships:()Ljava/util/Set;
      19: invokeinterface #69,  1           // InterfaceMethod java/util/Set.isEmpty:()Z
      24: ifne          31
      27: iconst_1
      28: goto          32
      31: iconst_0
      32: ireturn

  private boolean isDeprecated(org.semanticweb.owlapi.model.OWLObject);
    Code:
       0: aload_0
       1: getfield      #22                 // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
       4: invokevirtual #24                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
       7: aload_1
       8: invokeinterface #70,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.isDeprecated:(Lorg/semanticweb/owlapi/model/OWLObject;)Z
      13: ireturn

  private boolean isSatisfiable(org.semanticweb.owlapi.model.OWLObject);
    Code:
       0: aload_1
       1: instanceof    #71                 // class org/semanticweb/owlapi/model/OWLClass
       4: ifeq          36
       7: aload_0
       8: getfield      #22                 // Field editorKit:Lorg/protege/editor/owl/OWLEditorKit;
      11: invokevirtual #24                 // Method org/protege/editor/owl/OWLEditorKit.getOWLModelManager:()Lorg/protege/editor/owl/model/OWLModelManager;
      14: invokeinterface #72,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOWLReasonerManager:()Lorg/protege/editor/owl/model/inference/OWLReasonerManager;
      19: invokeinterface #73,  1           // InterfaceMethod org/protege/editor/owl/model/inference/OWLReasonerManager.getCurrentReasoner:()Lorg/semanticweb/owlapi/reasoner/OWLReasoner;
      24: aload_1
      25: checkcast     #71                 // class org/semanticweb/owlapi/model/OWLClass
      28: invokeinterface #74,  2           // InterfaceMethod org/semanticweb/owlapi/reasoner/OWLReasoner.isSatisfiable:(Lorg/semanticweb/owlapi/model/OWLClassExpression;)Z
      33: ifeq          40
      36: iconst_1
      37: goto          41
      40: iconst_0
      41: ireturn

  private boolean isActive(org.semanticweb.owlapi.model.OWLObject);
    Code:
       0: aload_1
       1: aload_0
       2: getfield      #26                 // Field activeOntologyVisitor:Lorg/protege/editor/owl/ui/renderer/ProtegeTreeNodeRenderer$ActiveOntologyVisitor;
       5: invokeinterface #75,  2           // InterfaceMethod org/semanticweb/owlapi/model/OWLObject.accept:(Lorg/semanticweb/owlapi/model/OWLObjectVisitorEx;)Ljava/lang/Object;
      10: checkcast     #76                 // class java/lang/Boolean
      13: invokevirtual #77                 // Method java/lang/Boolean.booleanValue:()Z
      16: ireturn

  static {};
    Code:
       0: getstatic     #78                 // Field java/awt/Color.RED:Ljava/awt/Color;
       3: putstatic     #52                 // Field UNSAT_ENTITY_COLOR:Ljava/awt/Color;
       6: getstatic     #79                 // Field java/awt/Color.GRAY:Ljava/awt/Color;
       9: putstatic     #54                 // Field DEPRECATED_CLASS_COLOR:Ljava/awt/Color;
      12: return
}
