Compiled from "PhysicalLocationTableModel.java"
public class org.protege.editor.owl.ui.ontology.location.PhysicalLocationTableModel extends javax.swing.table.AbstractTableModel {
  private org.protege.editor.owl.model.OWLModelManager owlModelManager;

  private java.util.Map<org.semanticweb.owlapi.model.OWLOntologyID, java.net.URI> uriMap;

  private java.util.List<org.semanticweb.owlapi.model.OWLOntologyID> ontologyIDs;

  private static final java.lang.String[] COLUMN_NAMES;

  public org.protege.editor.owl.ui.ontology.location.PhysicalLocationTableModel(org.protege.editor.owl.model.OWLModelManager);
    Code:
       0: aload_0
       1: invokespecial #1                  // Method javax/swing/table/AbstractTableModel."<init>":()V
       4: aload_0
       5: aload_1
       6: putfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
       9: aload_0
      10: new           #3                  // class java/util/TreeMap
      13: dup
      14: invokespecial #4                  // Method java/util/TreeMap."<init>":()V
      17: putfield      #5                  // Field uriMap:Ljava/util/Map;
      20: aload_0
      21: new           #6                  // class java/util/ArrayList
      24: dup
      25: invokespecial #7                  // Method java/util/ArrayList."<init>":()V
      28: putfield      #8                  // Field ontologyIDs:Ljava/util/List;
      31: aload_0
      32: invokevirtual #9                  // Method refill:()V
      35: return

  public void dispose();
    Code:
       0: return

  public void refill();
    Code:
       0: aload_0
       1: getfield      #5                  // Field uriMap:Ljava/util/Map;
       4: invokeinterface #10,  1           // InterfaceMethod java/util/Map.clear:()V
       9: aload_0
      10: getfield      #8                  // Field ontologyIDs:Ljava/util/List;
      13: invokeinterface #11,  1           // InterfaceMethod java/util/List.clear:()V
      18: aload_0
      19: getfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      22: invokeinterface #12,  1           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOntologies:()Ljava/util/Set;
      27: invokeinterface #13,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      32: astore_1
      33: aload_1
      34: invokeinterface #14,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      39: ifeq          97
      42: aload_1
      43: invokeinterface #15,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      48: checkcast     #16                 // class org/semanticweb/owlapi/model/OWLOntology
      51: astore_2
      52: aload_0
      53: getfield      #8                  // Field ontologyIDs:Ljava/util/List;
      56: aload_2
      57: invokeinterface #17,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.getOntologyID:()Lorg/semanticweb/owlapi/model/OWLOntologyID;
      62: invokeinterface #18,  2           // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
      67: pop
      68: aload_0
      69: getfield      #5                  // Field uriMap:Ljava/util/Map;
      72: aload_2
      73: invokeinterface #17,  1           // InterfaceMethod org/semanticweb/owlapi/model/OWLOntology.getOntologyID:()Lorg/semanticweb/owlapi/model/OWLOntologyID;
      78: aload_0
      79: getfield      #2                  // Field owlModelManager:Lorg/protege/editor/owl/model/OWLModelManager;
      82: aload_2
      83: invokeinterface #19,  2           // InterfaceMethod org/protege/editor/owl/model/OWLModelManager.getOntologyPhysicalURI:(Lorg/semanticweb/owlapi/model/OWLOntology;)Ljava/net/URI;
      88: invokeinterface #20,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      93: pop
      94: goto          33
      97: return

  public int getRowCount();
    Code:
       0: aload_0
       1: getfield      #8                  // Field ontologyIDs:Ljava/util/List;
       4: invokeinterface #21,  1           // InterfaceMethod java/util/List.size:()I
       9: ireturn

  public int getColumnCount();
    Code:
       0: iconst_2
       1: ireturn

  public java.lang.Object getValueAt(int, int);
    Code:
       0: aload_0
       1: getfield      #8                  // Field ontologyIDs:Ljava/util/List;
       4: iload_1
       5: invokeinterface #22,  2           // InterfaceMethod java/util/List.get:(I)Ljava/lang/Object;
      10: checkcast     #23                 // class org/semanticweb/owlapi/model/OWLOntologyID
      13: astore_3
      14: iload_2
      15: ifne          20
      18: aload_3
      19: areturn
      20: aload_0
      21: getfield      #5                  // Field uriMap:Ljava/util/Map;
      24: aload_3
      25: invokeinterface #24,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      30: areturn

  public java.lang.String getColumnName(int);
    Code:
       0: getstatic     #25                 // Field COLUMN_NAMES:[Ljava/lang/String;
       3: iload_1
       4: aaload
       5: areturn

  static {};
    Code:
       0: iconst_2
       1: anewarray     #26                 // class java/lang/String
       4: dup
       5: iconst_0
       6: ldc           #27                 // String Ontology
       8: aastore
       9: dup
      10: iconst_1
      11: ldc           #28                 // String Physical location
      13: aastore
      14: putstatic     #25                 // Field COLUMN_NAMES:[Ljava/lang/String;
      17: return
}
