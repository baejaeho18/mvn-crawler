Compiled from "OWLModelManager.java"
public interface org.protege.editor.owl.model.OWLModelManager extends org.protege.editor.core.ModelManager,org.protege.editor.owl.model.HasActiveOntology {
  public static final java.lang.String OWL_OBJECT_COMPARATOR_KEY;

  public abstract void addListener(org.protege.editor.owl.model.event.OWLModelManagerListener);

  public abstract void removeListener(org.protege.editor.owl.model.event.OWLModelManagerListener);

  public abstract void fireEvent(org.protege.editor.owl.model.event.EventType);

  public abstract void addIOListener(org.protege.editor.owl.model.io.IOListener);

  public abstract void removeIOListener(org.protege.editor.owl.model.io.IOListener);

  public abstract org.semanticweb.owlapi.model.OWLOntology createNewOntology(org.semanticweb.owlapi.model.OWLOntologyID, java.net.URI) throws org.semanticweb.owlapi.model.OWLOntologyCreationException;

  public abstract org.semanticweb.owlapi.model.OWLOntology reload(org.semanticweb.owlapi.model.OWLOntology) throws org.semanticweb.owlapi.model.OWLOntologyCreationException;

  public abstract boolean removeOntology(org.semanticweb.owlapi.model.OWLOntology);

  public abstract void save() throws org.semanticweb.owlapi.model.OWLOntologyStorageException;

  public abstract void save(org.semanticweb.owlapi.model.OWLOntology) throws org.semanticweb.owlapi.model.OWLOntologyStorageException;

  public abstract boolean isDirty(org.semanticweb.owlapi.model.OWLOntology);

  public abstract void setClean(org.semanticweb.owlapi.model.OWLOntology);

  public abstract java.util.Set<org.semanticweb.owlapi.model.OWLOntology> getOntologies();

  public abstract java.util.Set<org.semanticweb.owlapi.model.OWLOntology> getDirtyOntologies();

  public abstract void setDirty(org.semanticweb.owlapi.model.OWLOntology);

  public abstract org.semanticweb.owlapi.model.OWLOntology getActiveOntology();

  public abstract java.util.Set<org.semanticweb.owlapi.model.OWLOntology> getActiveOntologies();

  public abstract boolean isActiveOntologyMutable();

  public abstract boolean isMutable(org.semanticweb.owlapi.model.OWLOntology);

  public abstract org.protege.editor.owl.model.library.OntologyCatalogManager getOntologyCatalogManager();

  public abstract org.protege.editor.owl.ui.explanation.ExplanationManager getExplanationManager();

  public abstract void setExplanationManager(org.protege.editor.owl.ui.explanation.ExplanationManager);

  public abstract org.protege.editor.owl.model.hierarchy.OWLHierarchyManager getOWLHierarchyManager();

  public abstract void setActiveOntology(org.semanticweb.owlapi.model.OWLOntology);

  public abstract void setActiveOntologiesStrategy(org.protege.editor.owl.model.selection.ontologies.OntologySelectionStrategy);

  public abstract void registerOntologySelectionStrategy(org.protege.editor.owl.model.selection.ontologies.OntologySelectionStrategy);

  public abstract org.protege.editor.owl.model.selection.ontologies.OntologySelectionStrategy getActiveOntologiesStrategy();

  public abstract java.util.Set<org.protege.editor.owl.model.selection.ontologies.OntologySelectionStrategy> getActiveOntologiesStrategies();

  public abstract void applyChange(org.semanticweb.owlapi.model.OWLOntologyChange);

  public abstract void applyChanges(java.util.List<? extends org.semanticweb.owlapi.model.OWLOntologyChange>);

  public abstract boolean isChangedEntity(org.semanticweb.owlapi.model.OWLEntity);

  public abstract org.protege.editor.owl.model.history.HistoryManager getHistoryManager();

  public abstract void addOntologyChangeListener(org.semanticweb.owlapi.model.OWLOntologyChangeListener);

  public abstract void removeOntologyChangeListener(org.semanticweb.owlapi.model.OWLOntologyChangeListener);

  public abstract org.protege.editor.owl.ui.renderer.OWLModelManagerEntityRenderer getOWLEntityRenderer();

  public abstract void refreshRenderer();

  public abstract void setOWLEntityRenderer(org.protege.editor.owl.ui.renderer.OWLModelManagerEntityRenderer);

  public abstract org.protege.editor.owl.ui.renderer.OWLObjectRenderer getOWLObjectRenderer();

  public abstract org.protege.editor.owl.ui.clsdescriptioneditor.OWLExpressionCheckerFactory getOWLExpressionCheckerFactory();

  public abstract org.protege.editor.owl.model.find.OWLEntityFinder getOWLEntityFinder();

  public abstract java.util.Comparator<org.semanticweb.owlapi.model.OWLObject> getOWLObjectComparator();

  public abstract org.protege.editor.owl.model.inference.OWLReasonerManager getOWLReasonerManager();

  public abstract org.semanticweb.owlapi.reasoner.OWLReasoner getReasoner();

  public abstract org.protege.editor.owl.model.inference.ReasonerPreferences getReasonerPreferences();

  public abstract java.net.URI getOntologyPhysicalURI(org.semanticweb.owlapi.model.OWLOntology);

  public abstract void setPhysicalURI(org.semanticweb.owlapi.model.OWLOntology, java.net.URI);

  public abstract org.protege.editor.owl.model.entity.OWLEntityFactory getOWLEntityFactory();

  public abstract void setOWLEntityFactory(org.protege.editor.owl.model.entity.OWLEntityFactory);

  public abstract org.semanticweb.owlapi.model.OWLOntologyManager getOWLOntologyManager();

  public abstract org.semanticweb.owlapi.model.OWLDataFactory getOWLDataFactory();

  public abstract java.lang.String getRendering(org.semanticweb.owlapi.model.OWLObject);

  public default java.lang.String getDisabmiguatedRendering(org.semanticweb.owlapi.model.OWLObject, org.protege.editor.owl.ui.renderer.RenderingEscapeUtils$RenderingEscapeSetting);
    Code:
       0: aload_0
       1: aload_1
       2: invokeinterface #1,  2            // InterfaceMethod getRendering:(Lorg/semanticweb/owlapi/model/OWLObject;)Ljava/lang/String;
       7: areturn

  public abstract void setMissingImportHandler(org.protege.editor.owl.model.MissingImportHandler);

  public default void setSaveErrorHandler(org.protege.editor.owl.model.SaveErrorHandler);
    Code:
       0: return

  public abstract void setLoadErrorHandler(org.protege.editor.owl.ui.error.OntologyLoadErrorHandler);

  public abstract org.protege.xmlcatalog.XMLCatalog addRootFolder(java.io.File);

  public default boolean isDeprecated(org.semanticweb.owlapi.model.OWLObject);
    Code:
       0: iconst_0
       1: ireturn
}
