Compiled from "NamespaceManagerImpl.java"
public class org.protege.editor.owl.model.namespace.NamespaceManagerImpl extends org.protege.editor.owl.model.namespace.AbstractNamespaceManager {
  java.util.Map<java.lang.String, java.lang.String> ns2Prefix;

  public org.protege.editor.owl.model.namespace.NamespaceManagerImpl();
    Code:
       0: aload_0
       1: invokespecial #1                  // Method org/protege/editor/owl/model/namespace/AbstractNamespaceManager."<init>":()V
       4: aload_0
       5: new           #2                  // class java/util/TreeMap
       8: dup
       9: invokespecial #3                  // Method java/util/TreeMap."<init>":()V
      12: putfield      #4                  // Field ns2Prefix:Ljava/util/Map;
      15: return

  public java.util.Map<java.lang.String, java.lang.String> getNamespaceMap();
    Code:
       0: new           #2                  // class java/util/TreeMap
       3: dup
       4: new           #5                  // class org/protege/editor/owl/model/namespace/NamespaceManagerImpl$NamespaceComparator
       7: dup
       8: aload_0
       9: aconst_null
      10: invokespecial #6                  // Method org/protege/editor/owl/model/namespace/NamespaceManagerImpl$NamespaceComparator."<init>":(Lorg/protege/editor/owl/model/namespace/NamespaceManagerImpl;Lorg/protege/editor/owl/model/namespace/NamespaceManagerImpl$1;)V
      13: invokespecial #7                  // Method java/util/TreeMap."<init>":(Ljava/util/Comparator;)V
      16: areturn

  public boolean containsNamespace(java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ns2Prefix:Ljava/util/Map;
       4: invokeinterface #8,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
       9: aload_1
      10: invokeinterface #9,  2            // InterfaceMethod java/util/Set.contains:(Ljava/lang/Object;)Z
      15: ireturn

  public void addMapping(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ns2Prefix:Ljava/util/Map;
       4: aload_2
       5: aload_1
       6: invokeinterface #10,  3           // InterfaceMethod java/util/Map.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
      11: checkcast     #11                 // class java/lang/String
      14: astore_3
      15: aload_0
      16: aload_1
      17: aload_2
      18: invokevirtual #12                 // Method fireMappingAdded:(Ljava/lang/String;Ljava/lang/String;)V
      21: return

  public void removeMapping(java.lang.String, java.lang.String);
    Code:
       0: aload_0
       1: getfield      #4                  // Field ns2Prefix:Ljava/util/Map;
       4: aload_2
       5: invokeinterface #13,  2           // InterfaceMethod java/util/Map.remove:(Ljava/lang/Object;)Ljava/lang/Object;
      10: ifnull        19
      13: aload_0
      14: aload_1
      15: aload_2
      16: invokevirtual #14                 // Method fireMappingRemoved:(Ljava/lang/String;Ljava/lang/String;)V
      19: return

  public java.lang.String getNamespace(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/net/URI.toString:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: getfield      #4                  // Field ns2Prefix:Ljava/util/Map;
       9: invokeinterface #8,  1            // InterfaceMethod java/util/Map.keySet:()Ljava/util/Set;
      14: invokeinterface #16,  1           // InterfaceMethod java/util/Set.iterator:()Ljava/util/Iterator;
      19: astore_3
      20: aload_3
      21: invokeinterface #17,  1           // InterfaceMethod java/util/Iterator.hasNext:()Z
      26: ifeq          55
      29: aload_3
      30: invokeinterface #18,  1           // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
      35: checkcast     #11                 // class java/lang/String
      38: astore        4
      40: aload_2
      41: aload         4
      43: invokevirtual #19                 // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
      46: ifeq          52
      49: aload         4
      51: areturn
      52: goto          20
      55: aconst_null
      56: areturn

  public java.lang.String getPrefix(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method getNamespace:(Ljava/net/URI;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: getfield      #4                  // Field ns2Prefix:Ljava/util/Map;
      16: aload_2
      17: invokeinterface #21,  2           // InterfaceMethod java/util/Map.get:(Ljava/lang/Object;)Ljava/lang/Object;
      22: checkcast     #11                 // class java/lang/String
      25: areturn

  public java.lang.String getQName(java.net.URI);
    Code:
       0: aload_0
       1: aload_1
       2: invokevirtual #20                 // Method getNamespace:(Ljava/net/URI;)Ljava/lang/String;
       5: astore_2
       6: aload_2
       7: ifnonnull     12
      10: aconst_null
      11: areturn
      12: aload_0
      13: aload_1
      14: invokevirtual #22                 // Method getPrefix:(Ljava/net/URI;)Ljava/lang/String;
      17: astore_3
      18: aload_1
      19: invokevirtual #15                 // Method java/net/URI.toString:()Ljava/lang/String;
      22: astore        4
      24: aload         4
      26: aload_2
      27: invokevirtual #23                 // Method java/lang/String.length:()I
      30: aload         4
      32: invokevirtual #23                 // Method java/lang/String.length:()I
      35: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      38: astore        5
      40: new           #25                 // class java/lang/StringBuilder
      43: dup
      44: invokespecial #26                 // Method java/lang/StringBuilder."<init>":()V
      47: aload_3
      48: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      51: bipush        58
      53: invokevirtual #28                 // Method java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
      56: aload         5
      58: invokevirtual #27                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
      61: invokevirtual #29                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
      64: areturn

  public java.lang.String getLocalName(java.net.URI);
    Code:
       0: aload_1
       1: invokevirtual #15                 // Method java/net/URI.toString:()Ljava/lang/String;
       4: astore_2
       5: aload_0
       6: aload_1
       7: invokevirtual #20                 // Method getNamespace:(Ljava/net/URI;)Ljava/lang/String;
      10: astore_3
      11: aload_3
      12: ifnonnull     17
      15: aconst_null
      16: areturn
      17: aload_2
      18: aload_3
      19: invokevirtual #23                 // Method java/lang/String.length:()I
      22: aload_2
      23: invokevirtual #23                 // Method java/lang/String.length:()I
      26: invokevirtual #24                 // Method java/lang/String.substring:(II)Ljava/lang/String;
      29: areturn
}
